[
  {
    "q": "weak(eve).",
    "c": "weak(X) :- funny(X).\nhappy(Z) :- excited(Z), calm(E).\nstrong(X) :- curious(X), tall(X).\ncurious(X) :- strong(X).\ntired(X) :- happy(X).\nfunny(eve).\nwet(ball).\nfriend(alice,bob).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is weak.\nFor all Z, if there exists E such that person Z is excited and person E is calm, then person Z is happy.\nFor all X, if person X is curious and person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is happy, then person X is tired.\n\nAnd the following facts:\neve is funny.\nball is wet.\nalice is a friend of bob.\nbob is an enemy of eve.\n\nQUESTION:\nIs eve is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 0,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(bob).",
    "c": "weak(X) :- funny(X).\nhappy(Z) :- excited(Z), calm(E).\nstrong(X) :- curious(X), tall(X).\ncurious(X) :- strong(X).\ntired(X) :- happy(X).\nfunny(eve).\nwet(ball).\nfriend(alice,bob).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is weak.\nFor all Z, if there exists E such that person Z is excited and person E is calm, then person Z is happy.\nFor all X, if person X is curious and person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is happy, then person X is tired.\n\nAnd the following facts:\neve is funny.\nball is wet.\nalice is a friend of bob.\nbob is an enemy of eve.\n\nQUESTION:\nIs bob is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(eve).",
    "c": "weak(X) :- funny(X).\nhappy(Z) :- excited(Z), calm(E).\nstrong(X) :- curious(X), tall(X).\ncurious(X) :- strong(X).\ntired(X) :- happy(X).\nweak(eve).\nwet(ball).\nfriend(alice,bob).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is weak.\nFor all Z, if there exists E such that person Z is excited and person E is calm, then person Z is happy.\nFor all X, if person X is curious and person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is happy, then person X is tired.\n\nAnd the following facts:\neve is weak.\nball is wet.\nalice is a friend of bob.\nbob is an enemy of eve.\n\nQUESTION:\nCould eve is funny explain eve is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 2,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(alice).",
    "c": "weak(X) :- funny(X).\nhappy(Z) :- excited(Z), calm(E).\nstrong(X) :- curious(X), tall(X).\ncurious(X) :- strong(X).\ntired(X) :- happy(X).\nweak(eve).\nwet(ball).\nfriend(alice,bob).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is weak.\nFor all Z, if there exists E such that person Z is excited and person E is calm, then person Z is happy.\nFor all X, if person X is curious and person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is happy, then person X is tired.\n\nAnd the following facts:\neve is weak.\nball is wet.\nalice is a friend of bob.\nbob is an enemy of eve.\n\nQUESTION:\nCould alice is tired explain eve is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 3,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(frank).",
    "c": "tired(X) :- hungry(X).\ncurious(Z) :- clever(Z), dislikes(Z,B), red(B).\nold(X) :- new(X).\nstrong(X) :- friendly(X).\nclever(X) :- happy(X), happy(X).\nhungry(frank).\nclever(carol).\nlikes(george,apple).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is tired.\nFor all Z, if there exists B such that person Z is clever and person Z dislikes object B and object B is red, then person Z is curious.\nFor all X, if object X is new, then object X is old.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is happy and person X is happy, then person X is clever.\n\nAnd the following facts:\nfrank is hungry.\ncarol is clever.\ngeorge likes apple.\ncarol is excited.\n\nQUESTION:\nIs frank is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 4,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "curious(george).",
    "c": "tired(X) :- hungry(X).\ncurious(Z) :- clever(Z), dislikes(Z,B), red(B).\nold(X) :- new(X).\nstrong(X) :- friendly(X).\nclever(X) :- happy(X), happy(X).\nhungry(frank).\nclever(carol).\nlikes(george,apple).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is tired.\nFor all Z, if there exists B such that person Z is clever and person Z dislikes object B and object B is red, then person Z is curious.\nFor all X, if object X is new, then object X is old.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is happy and person X is happy, then person X is clever.\n\nAnd the following facts:\nfrank is hungry.\ncarol is clever.\ngeorge likes apple.\ncarol is excited.\n\nQUESTION:\nIs george is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 5,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(frank).",
    "c": "tired(X) :- hungry(X).\ncurious(Z) :- clever(Z), dislikes(Z,B), red(B).\nold(X) :- new(X).\nstrong(X) :- friendly(X).\nclever(X) :- happy(X), happy(X).\ntired(frank).\nclever(carol).\nlikes(george,apple).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is tired.\nFor all Z, if there exists B such that person Z is clever and person Z dislikes object B and object B is red, then person Z is curious.\nFor all X, if object X is new, then object X is old.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is happy and person X is happy, then person X is clever.\n\nAnd the following facts:\nfrank is tired.\ncarol is clever.\ngeorge likes apple.\ncarol is excited.\n\nQUESTION:\nCould frank is hungry explain frank is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 6,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "curious(carol).",
    "c": "tired(X) :- hungry(X).\ncurious(Z) :- clever(Z), dislikes(Z,B), red(B).\nold(X) :- new(X).\nstrong(X) :- friendly(X).\nclever(X) :- happy(X), happy(X).\ntired(frank).\nclever(carol).\nlikes(george,apple).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is tired.\nFor all Z, if there exists B such that person Z is clever and person Z dislikes object B and object B is red, then person Z is curious.\nFor all X, if object X is new, then object X is old.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is happy and person X is happy, then person X is clever.\n\nAnd the following facts:\nfrank is tired.\ncarol is clever.\ngeorge likes apple.\ncarol is excited.\n\nQUESTION:\nCould carol is curious explain frank is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 7,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(eve).",
    "c": "curious(X) :- calm(X).\nsibling(Y,Z) :- excited(Y), hungry(Z).\nfriend(X,Y) :- clever(Y), bored(X), friend(X,W).\nrough(X) :- wet(X), soft(X).\nred(X) :- heavy(X).\ncalm(eve).\ndislikes(bob,phone).\nsibling(bob,alice).\ndislikes(bob,car).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is curious.\nFor all Y, Z, if person Y is excited and person Z is hungry, then person Y is a sibling of person Z.\nFor all X, Y, if there exists W such that person Y is clever and person X is bored and person X is a friend of person W, then person X is a friend of person Y.\nFor all X, if object X is wet and object X is soft, then object X is rough.\nFor all X, if object X is heavy, then object X is red.\n\nAnd the following facts:\neve is calm.\nbob dislikes phone.\nbob is a sibling of alice.\nbob dislikes car.\n\nQUESTION:\nIs eve is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 8,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "bored(carol).",
    "c": "curious(X) :- calm(X).\nsibling(Y,Z) :- excited(Y), hungry(Z).\nfriend(X,Y) :- clever(Y), bored(X), friend(X,W).\nrough(X) :- wet(X), soft(X).\nred(X) :- heavy(X).\ncalm(eve).\ndislikes(bob,phone).\nsibling(bob,alice).\ndislikes(bob,car).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is curious.\nFor all Y, Z, if person Y is excited and person Z is hungry, then person Y is a sibling of person Z.\nFor all X, Y, if there exists W such that person Y is clever and person X is bored and person X is a friend of person W, then person X is a friend of person Y.\nFor all X, if object X is wet and object X is soft, then object X is rough.\nFor all X, if object X is heavy, then object X is red.\n\nAnd the following facts:\neve is calm.\nbob dislikes phone.\nbob is a sibling of alice.\nbob dislikes car.\n\nQUESTION:\nIs carol is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 9,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(eve).",
    "c": "curious(X) :- calm(X).\nsibling(Y,Z) :- excited(Y), hungry(Z).\nfriend(X,Y) :- clever(Y), bored(X), friend(X,W).\nrough(X) :- wet(X), soft(X).\nred(X) :- heavy(X).\ncurious(eve).\ndislikes(bob,phone).\nsibling(bob,alice).\ndislikes(bob,car).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is curious.\nFor all Y, Z, if person Y is excited and person Z is hungry, then person Y is a sibling of person Z.\nFor all X, Y, if there exists W such that person Y is clever and person X is bored and person X is a friend of person W, then person X is a friend of person Y.\nFor all X, if object X is wet and object X is soft, then object X is rough.\nFor all X, if object X is heavy, then object X is red.\n\nAnd the following facts:\neve is curious.\nbob dislikes phone.\nbob is a sibling of alice.\nbob dislikes car.\n\nQUESTION:\nCould eve is calm explain eve is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 10,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(bob).",
    "c": "curious(X) :- calm(X).\nsibling(Y,Z) :- excited(Y), hungry(Z).\nfriend(X,Y) :- clever(Y), bored(X), friend(X,W).\nrough(X) :- wet(X), soft(X).\nred(X) :- heavy(X).\ncurious(eve).\ndislikes(bob,phone).\nsibling(bob,alice).\ndislikes(bob,car).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is curious.\nFor all Y, Z, if person Y is excited and person Z is hungry, then person Y is a sibling of person Z.\nFor all X, Y, if there exists W such that person Y is clever and person X is bored and person X is a friend of person W, then person X is a friend of person Y.\nFor all X, if object X is wet and object X is soft, then object X is rough.\nFor all X, if object X is heavy, then object X is red.\n\nAnd the following facts:\neve is curious.\nbob dislikes phone.\nbob is a sibling of alice.\nbob dislikes car.\n\nQUESTION:\nCould bob is tall explain eve is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 11,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "light(apple).",
    "c": "light(X) :- red(X).\ncurious(Y) :- curious(Y).\nbusy(Z) :- weak(Z), enemy(Z,V), calm(V).\nclever(X) :- strong(X).\nbored(X) :- calm(X).\nred(apple).\nbig(apple).\nlikes(bob,book).\nowns(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all Y, if person Y is curious, then person Y is curious.\nFor all Z, if there exists V such that person Z is weak and person Z is an enemy of person V and person V is calm, then person Z is busy.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is calm, then person X is bored.\n\nAnd the following facts:\napple is red.\napple is big.\nbob likes book.\nalice owns pencil.\n\nQUESTION:\nIs apple is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 12,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "angry(alice).",
    "c": "light(X) :- red(X).\ncurious(Y) :- curious(Y).\nbusy(Z) :- weak(Z), enemy(Z,V), calm(V).\nclever(X) :- strong(X).\nbored(X) :- calm(X).\nred(apple).\nbig(apple).\nlikes(bob,book).\nowns(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all Y, if person Y is curious, then person Y is curious.\nFor all Z, if there exists V such that person Z is weak and person Z is an enemy of person V and person V is calm, then person Z is busy.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is calm, then person X is bored.\n\nAnd the following facts:\napple is red.\napple is big.\nbob likes book.\nalice owns pencil.\n\nQUESTION:\nIs alice is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 13,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(apple).",
    "c": "light(X) :- red(X).\ncurious(Y) :- curious(Y).\nbusy(Z) :- weak(Z), enemy(Z,V), calm(V).\nclever(X) :- strong(X).\nbored(X) :- calm(X).\nlight(apple).\nbig(apple).\nlikes(bob,book).\nowns(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all Y, if person Y is curious, then person Y is curious.\nFor all Z, if there exists V such that person Z is weak and person Z is an enemy of person V and person V is calm, then person Z is busy.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is calm, then person X is bored.\n\nAnd the following facts:\napple is light.\napple is big.\nbob likes book.\nalice owns pencil.\n\nQUESTION:\nCould apple is red explain apple is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 14,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(book).",
    "c": "light(X) :- red(X).\ncurious(Y) :- curious(Y).\nbusy(Z) :- weak(Z), enemy(Z,V), calm(V).\nclever(X) :- strong(X).\nbored(X) :- calm(X).\nlight(apple).\nbig(apple).\nlikes(bob,book).\nowns(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all Y, if person Y is curious, then person Y is curious.\nFor all Z, if there exists V such that person Z is weak and person Z is an enemy of person V and person V is calm, then person Z is busy.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is calm, then person X is bored.\n\nAnd the following facts:\napple is light.\napple is big.\nbob likes book.\nalice owns pencil.\n\nQUESTION:\nCould book is red explain apple is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 15,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(car).",
    "c": "old(X) :- small(X).\nheavy(X) :- old(X).\nhard(X) :- heavy(X).\nrough(X) :- hard(X).\nred(X) :- rough(X).\nsmall(car).\nsibling(eve,alice).\nsad(dave).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is red.\n\nAnd the following facts:\ncar is small.\neve is a sibling of alice.\ndave is sad.\nfrank is bored.\n\nQUESTION:\nIs car is red true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 16,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "curious(george).",
    "c": "old(X) :- small(X).\nheavy(X) :- old(X).\nhard(X) :- heavy(X).\nrough(X) :- hard(X).\nred(X) :- rough(X).\nsmall(car).\nsibling(eve,alice).\nsad(dave).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is red.\n\nAnd the following facts:\ncar is small.\neve is a sibling of alice.\ndave is sad.\nfrank is bored.\n\nQUESTION:\nIs george is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 17,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(car).",
    "c": "old(X) :- small(X).\nheavy(X) :- old(X).\nhard(X) :- heavy(X).\nrough(X) :- hard(X).\nred(X) :- rough(X).\nred(car).\nsibling(eve,alice).\nsad(dave).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is red.\n\nAnd the following facts:\ncar is red.\neve is a sibling of alice.\ndave is sad.\nfrank is bored.\n\nQUESTION:\nCould car is small explain car is red?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 18,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "friendly(bob).",
    "c": "old(X) :- small(X).\nheavy(X) :- old(X).\nhard(X) :- heavy(X).\nrough(X) :- hard(X).\nred(X) :- rough(X).\nred(car).\nsibling(eve,alice).\nsad(dave).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is red.\n\nAnd the following facts:\ncar is red.\neve is a sibling of alice.\ndave is sad.\nfrank is bored.\n\nQUESTION:\nCould bob is friendly explain car is red?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 19,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "old(car).",
    "c": "heavy(X) :- light(X).\nred(X) :- heavy(X).\nlight(X) :- red(X).\nsoft(X) :- light(X).\nold(X) :- soft(X).\nlight(car).\nlikes(frank,apple).\nlikes(george,pencil).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is old.\n\nAnd the following facts:\ncar is light.\nfrank likes apple.\ngeorge likes pencil.\nalice dislikes pencil.\n\nQUESTION:\nIs car is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 20,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "happy(frank).",
    "c": "heavy(X) :- light(X).\nred(X) :- heavy(X).\nlight(X) :- red(X).\nsoft(X) :- light(X).\nold(X) :- soft(X).\nlight(car).\nlikes(frank,apple).\nlikes(george,pencil).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is old.\n\nAnd the following facts:\ncar is light.\nfrank likes apple.\ngeorge likes pencil.\nalice dislikes pencil.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 21,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "heavy(X) :- light(X).\nred(X) :- heavy(X).\nlight(X) :- red(X).\nsoft(X) :- light(X).\nold(X) :- soft(X).\nold(car).\nlikes(frank,apple).\nlikes(george,pencil).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is old.\n\nAnd the following facts:\ncar is old.\nfrank likes apple.\ngeorge likes pencil.\nalice dislikes pencil.\n\nQUESTION:\nCould car is light explain car is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 22,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "small(ball).",
    "c": "heavy(X) :- light(X).\nred(X) :- heavy(X).\nlight(X) :- red(X).\nsoft(X) :- light(X).\nold(X) :- soft(X).\nold(car).\nlikes(frank,apple).\nlikes(george,pencil).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is old.\n\nAnd the following facts:\ncar is old.\nfrank likes apple.\ngeorge likes pencil.\nalice dislikes pencil.\n\nQUESTION:\nCould ball is small explain car is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 23,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(book).",
    "c": "light(X) :- red(X).\nbig(X) :- light(X).\nsmall(X) :- big(X).\nsmooth(X) :- small(X).\nrough(X) :- smooth(X).\nred(book).\nhappy(carol).\nbusy(george).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\n\nAnd the following facts:\nbook is red.\ncarol is happy.\ngeorge is busy.\ndave owns ball.\n\nQUESTION:\nIs book is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 24,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(alice).",
    "c": "light(X) :- red(X).\nbig(X) :- light(X).\nsmall(X) :- big(X).\nsmooth(X) :- small(X).\nrough(X) :- smooth(X).\nred(book).\nhappy(carol).\nbusy(george).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\n\nAnd the following facts:\nbook is red.\ncarol is happy.\ngeorge is busy.\ndave owns ball.\n\nQUESTION:\nIs alice is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 25,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(book).",
    "c": "light(X) :- red(X).\nbig(X) :- light(X).\nsmall(X) :- big(X).\nsmooth(X) :- small(X).\nrough(X) :- smooth(X).\nrough(book).\nhappy(carol).\nbusy(george).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\n\nAnd the following facts:\nbook is rough.\ncarol is happy.\ngeorge is busy.\ndave owns ball.\n\nQUESTION:\nCould book is red explain book is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 26,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "light(X) :- red(X).\nbig(X) :- light(X).\nsmall(X) :- big(X).\nsmooth(X) :- small(X).\nrough(X) :- smooth(X).\nrough(book).\nhappy(carol).\nbusy(george).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\n\nAnd the following facts:\nbook is rough.\ncarol is happy.\ngeorge is busy.\ndave owns ball.\n\nQUESTION:\nCould ball is clean explain book is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 27,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(apple).",
    "c": "clean(X) :- new(X).\nold(X) :- clean(X).\nheavy(X) :- old(X).\nbig(X) :- heavy(X).\nrough(X) :- big(X).\nnew(apple).\nlight(phone).\nfriend(dave,carol).\nsibling(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is rough.\n\nAnd the following facts:\napple is new.\nphone is light.\ndave is a friend of carol.\nbob is a sibling of eve.\n\nQUESTION:\nIs apple is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 28,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "new(phone).",
    "c": "clean(X) :- new(X).\nold(X) :- clean(X).\nheavy(X) :- old(X).\nbig(X) :- heavy(X).\nrough(X) :- big(X).\nnew(apple).\nlight(phone).\nfriend(dave,carol).\nsibling(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is rough.\n\nAnd the following facts:\napple is new.\nphone is light.\ndave is a friend of carol.\nbob is a sibling of eve.\n\nQUESTION:\nIs phone is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 29,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(apple).",
    "c": "clean(X) :- new(X).\nold(X) :- clean(X).\nheavy(X) :- old(X).\nbig(X) :- heavy(X).\nrough(X) :- big(X).\nrough(apple).\nlight(phone).\nfriend(dave,carol).\nsibling(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is rough.\n\nAnd the following facts:\napple is rough.\nphone is light.\ndave is a friend of carol.\nbob is a sibling of eve.\n\nQUESTION:\nCould apple is new explain apple is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 30,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "strong(carol).",
    "c": "clean(X) :- new(X).\nold(X) :- clean(X).\nheavy(X) :- old(X).\nbig(X) :- heavy(X).\nrough(X) :- big(X).\nrough(apple).\nlight(phone).\nfriend(dave,carol).\nsibling(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is rough.\n\nAnd the following facts:\napple is rough.\nphone is light.\ndave is a friend of carol.\nbob is a sibling of eve.\n\nQUESTION:\nCould carol is strong explain apple is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 31,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "bored(frank).",
    "c": "bored(X) :- brave(X).\nfunny(Y) :- tired(Y), friend(Y,U), excited(U).\nlikes(X,Y) :- calm(X), hard(Y), dislikes(X,Y).\ndislikes(X,Y) :- tall(X), dirty(Y), likes(X,Y).\nsmooth(X) :- new(X).\nbrave(frank).\nsibling(george,carol).\nsibling(dave,george).\nparent(eve,dave).\ncurious(dave).\nfriend(frank,carol).\nsibling(dave,bob).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is bored.\nFor all Y, if there exists U such that person Y is tired and person Y is a friend of person U and person U is excited, then person Y is funny.\nFor all X, Y, if person X is calm and object Y is hard and person X dislikes object Y, then person X likes object Y.\nFor all X, Y, if person X is tall and object Y is dirty and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is new, then object X is smooth.\n\nAnd the following facts:\nfrank is brave.\ngeorge is a sibling of carol.\ndave is a sibling of george.\neve is a parent of dave.\ndave is curious.\nfrank is a friend of carol.\ndave is a sibling of bob.\ndave is a sibling of alice.\n\nQUESTION:\nIs frank is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 32,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "happy(alice).",
    "c": "bored(X) :- brave(X).\nfunny(Y) :- tired(Y), friend(Y,U), excited(U).\nlikes(X,Y) :- calm(X), hard(Y), dislikes(X,Y).\ndislikes(X,Y) :- tall(X), dirty(Y), likes(X,Y).\nsmooth(X) :- new(X).\nbrave(frank).\nsibling(george,carol).\nsibling(dave,george).\nparent(eve,dave).\ncurious(dave).\nfriend(frank,carol).\nsibling(dave,bob).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is bored.\nFor all Y, if there exists U such that person Y is tired and person Y is a friend of person U and person U is excited, then person Y is funny.\nFor all X, Y, if person X is calm and object Y is hard and person X dislikes object Y, then person X likes object Y.\nFor all X, Y, if person X is tall and object Y is dirty and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is new, then object X is smooth.\n\nAnd the following facts:\nfrank is brave.\ngeorge is a sibling of carol.\ndave is a sibling of george.\neve is a parent of dave.\ndave is curious.\nfrank is a friend of carol.\ndave is a sibling of bob.\ndave is a sibling of alice.\n\nQUESTION:\nIs alice is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 33,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(frank).",
    "c": "bored(X) :- brave(X).\nfunny(Y) :- tired(Y), friend(Y,U), excited(U).\nlikes(X,Y) :- calm(X), hard(Y), dislikes(X,Y).\ndislikes(X,Y) :- tall(X), dirty(Y), likes(X,Y).\nsmooth(X) :- new(X).\nbored(frank).\nsibling(george,carol).\nsibling(dave,george).\nparent(eve,dave).\ncurious(dave).\nfriend(frank,carol).\nsibling(dave,bob).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is bored.\nFor all Y, if there exists U such that person Y is tired and person Y is a friend of person U and person U is excited, then person Y is funny.\nFor all X, Y, if person X is calm and object Y is hard and person X dislikes object Y, then person X likes object Y.\nFor all X, Y, if person X is tall and object Y is dirty and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is new, then object X is smooth.\n\nAnd the following facts:\nfrank is bored.\ngeorge is a sibling of carol.\ndave is a sibling of george.\neve is a parent of dave.\ndave is curious.\nfrank is a friend of carol.\ndave is a sibling of bob.\ndave is a sibling of alice.\n\nQUESTION:\nCould frank is brave explain frank is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 34,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(frank).",
    "c": "bored(X) :- brave(X).\nfunny(Y) :- tired(Y), friend(Y,U), excited(U).\nlikes(X,Y) :- calm(X), hard(Y), dislikes(X,Y).\ndislikes(X,Y) :- tall(X), dirty(Y), likes(X,Y).\nsmooth(X) :- new(X).\nbored(frank).\nsibling(george,carol).\nsibling(dave,george).\nparent(eve,dave).\ncurious(dave).\nfriend(frank,carol).\nsibling(dave,bob).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is bored.\nFor all Y, if there exists U such that person Y is tired and person Y is a friend of person U and person U is excited, then person Y is funny.\nFor all X, Y, if person X is calm and object Y is hard and person X dislikes object Y, then person X likes object Y.\nFor all X, Y, if person X is tall and object Y is dirty and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is new, then object X is smooth.\n\nAnd the following facts:\nfrank is bored.\ngeorge is a sibling of carol.\ndave is a sibling of george.\neve is a parent of dave.\ndave is curious.\nfrank is a friend of carol.\ndave is a sibling of bob.\ndave is a sibling of alice.\n\nQUESTION:\nCould frank is clever explain frank is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 35,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(bob).",
    "c": "busy(X) :- weak(X).\nsmall(Z) :- small(Z).\nold(X) :- light(X), soft(D).\nparent(X,Y) :- friendly(X), clever(Y), friend(X,Y).\nfriend(X,Y) :- curious(X), strong(Y), sibling(X,Y).\nweak(bob).\nnew(pencil).\nhappy(dave).\nhappy(eve).\nowns(dave,apple).\ndislikes(bob,pencil).\ndirty(apple).\nbig(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is busy.\nFor all Z, if object Z is small, then object Z is small.\nFor all X, if there exists D such that object X is light and object D is soft, then object X is old.\nFor all X, Y, if person X is friendly and person Y is clever and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is curious and person Y is strong and person X is a sibling of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\nbob is weak.\npencil is new.\ndave is happy.\neve is happy.\ndave owns apple.\nbob dislikes pencil.\napple is dirty.\npencil is big.\n\nQUESTION:\nIs bob is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 36,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "calm(eve).",
    "c": "busy(X) :- weak(X).\nsmall(Z) :- small(Z).\nold(X) :- light(X), soft(D).\nparent(X,Y) :- friendly(X), clever(Y), friend(X,Y).\nfriend(X,Y) :- curious(X), strong(Y), sibling(X,Y).\nweak(bob).\nnew(pencil).\nhappy(dave).\nhappy(eve).\nowns(dave,apple).\ndislikes(bob,pencil).\ndirty(apple).\nbig(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is busy.\nFor all Z, if object Z is small, then object Z is small.\nFor all X, if there exists D such that object X is light and object D is soft, then object X is old.\nFor all X, Y, if person X is friendly and person Y is clever and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is curious and person Y is strong and person X is a sibling of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\nbob is weak.\npencil is new.\ndave is happy.\neve is happy.\ndave owns apple.\nbob dislikes pencil.\napple is dirty.\npencil is big.\n\nQUESTION:\nIs eve is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 37,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(bob).",
    "c": "busy(X) :- weak(X).\nsmall(Z) :- small(Z).\nold(X) :- light(X), soft(D).\nparent(X,Y) :- friendly(X), clever(Y), friend(X,Y).\nfriend(X,Y) :- curious(X), strong(Y), sibling(X,Y).\nbusy(bob).\nnew(pencil).\nhappy(dave).\nhappy(eve).\nowns(dave,apple).\ndislikes(bob,pencil).\ndirty(apple).\nbig(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is busy.\nFor all Z, if object Z is small, then object Z is small.\nFor all X, if there exists D such that object X is light and object D is soft, then object X is old.\nFor all X, Y, if person X is friendly and person Y is clever and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is curious and person Y is strong and person X is a sibling of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\nbob is busy.\npencil is new.\ndave is happy.\neve is happy.\ndave owns apple.\nbob dislikes pencil.\napple is dirty.\npencil is big.\n\nQUESTION:\nCould bob is weak explain bob is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 38,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clean(ball).",
    "c": "busy(X) :- weak(X).\nsmall(Z) :- small(Z).\nold(X) :- light(X), soft(D).\nparent(X,Y) :- friendly(X), clever(Y), friend(X,Y).\nfriend(X,Y) :- curious(X), strong(Y), sibling(X,Y).\nbusy(bob).\nnew(pencil).\nhappy(dave).\nhappy(eve).\nowns(dave,apple).\ndislikes(bob,pencil).\ndirty(apple).\nbig(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is busy.\nFor all Z, if object Z is small, then object Z is small.\nFor all X, if there exists D such that object X is light and object D is soft, then object X is old.\nFor all X, Y, if person X is friendly and person Y is clever and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is curious and person Y is strong and person X is a sibling of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\nbob is busy.\npencil is new.\ndave is happy.\neve is happy.\ndave owns apple.\nbob dislikes pencil.\napple is dirty.\npencil is big.\n\nQUESTION:\nCould ball is clean explain bob is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 39,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(alice).",
    "c": "busy(X) :- funny(X).\nowns(Y,X) :- excited(Y), soft(X).\nangry(Y) :- friendly(Y).\nhungry(Z) :- clever(Z), angry(E).\nowns(X,Y) :- hungry(X), smooth(Y), likes(X,Y).\nfunny(alice).\nenemy(dave,bob).\nfriend(bob,george).\nfriend(bob,frank).\nexcited(bob).\nowns(eve,ball).\nlikes(frank,apple).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is busy.\nFor all X, Y, if person Y is excited and object X is soft, then person Y owns object X.\nFor all Y, if person Y is friendly, then person Y is angry.\nFor all Z, if there exists E such that person Z is clever and person E is angry, then person Z is hungry.\nFor all X, Y, if person X is hungry and object Y is smooth and person X likes object Y, then person X owns object Y.\n\nAnd the following facts:\nalice is funny.\ndave is an enemy of bob.\nbob is a friend of george.\nbob is a friend of frank.\nbob is excited.\neve owns ball.\nfrank likes apple.\nbob dislikes ball.\n\nQUESTION:\nIs alice is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 40,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "happy(carol).",
    "c": "busy(X) :- funny(X).\nowns(Y,X) :- excited(Y), soft(X).\nangry(Y) :- friendly(Y).\nhungry(Z) :- clever(Z), angry(E).\nowns(X,Y) :- hungry(X), smooth(Y), likes(X,Y).\nfunny(alice).\nenemy(dave,bob).\nfriend(bob,george).\nfriend(bob,frank).\nexcited(bob).\nowns(eve,ball).\nlikes(frank,apple).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is busy.\nFor all X, Y, if person Y is excited and object X is soft, then person Y owns object X.\nFor all Y, if person Y is friendly, then person Y is angry.\nFor all Z, if there exists E such that person Z is clever and person E is angry, then person Z is hungry.\nFor all X, Y, if person X is hungry and object Y is smooth and person X likes object Y, then person X owns object Y.\n\nAnd the following facts:\nalice is funny.\ndave is an enemy of bob.\nbob is a friend of george.\nbob is a friend of frank.\nbob is excited.\neve owns ball.\nfrank likes apple.\nbob dislikes ball.\n\nQUESTION:\nIs carol is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 41,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(alice).",
    "c": "busy(X) :- funny(X).\nowns(Y,X) :- excited(Y), soft(X).\nangry(Y) :- friendly(Y).\nhungry(Z) :- clever(Z), angry(E).\nowns(X,Y) :- hungry(X), smooth(Y), likes(X,Y).\nbusy(alice).\nenemy(dave,bob).\nfriend(bob,george).\nfriend(bob,frank).\nexcited(bob).\nowns(eve,ball).\nlikes(frank,apple).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is busy.\nFor all X, Y, if person Y is excited and object X is soft, then person Y owns object X.\nFor all Y, if person Y is friendly, then person Y is angry.\nFor all Z, if there exists E such that person Z is clever and person E is angry, then person Z is hungry.\nFor all X, Y, if person X is hungry and object Y is smooth and person X likes object Y, then person X owns object Y.\n\nAnd the following facts:\nalice is busy.\ndave is an enemy of bob.\nbob is a friend of george.\nbob is a friend of frank.\nbob is excited.\neve owns ball.\nfrank likes apple.\nbob dislikes ball.\n\nQUESTION:\nCould alice is funny explain alice is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 42,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "soft(apple).",
    "c": "busy(X) :- funny(X).\nowns(Y,X) :- excited(Y), soft(X).\nangry(Y) :- friendly(Y).\nhungry(Z) :- clever(Z), angry(E).\nowns(X,Y) :- hungry(X), smooth(Y), likes(X,Y).\nbusy(alice).\nenemy(dave,bob).\nfriend(bob,george).\nfriend(bob,frank).\nexcited(bob).\nowns(eve,ball).\nlikes(frank,apple).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is busy.\nFor all X, Y, if person Y is excited and object X is soft, then person Y owns object X.\nFor all Y, if person Y is friendly, then person Y is angry.\nFor all Z, if there exists E such that person Z is clever and person E is angry, then person Z is hungry.\nFor all X, Y, if person X is hungry and object Y is smooth and person X likes object Y, then person X owns object Y.\n\nAnd the following facts:\nalice is busy.\ndave is an enemy of bob.\nbob is a friend of george.\nbob is a friend of frank.\nbob is excited.\neve owns ball.\nfrank likes apple.\nbob dislikes ball.\n\nQUESTION:\nCould apple is soft explain alice is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 43,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hard(book).",
    "c": "hard(X) :- dirty(X).\nbrave(Y) :- calm(Y), enemy(Y,W), weak(W).\nsmall(X) :- rough(X), clean(X).\nangry(X) :- curious(X).\ndislikes(X,Y) :- tall(X), light(Y).\ndirty(book).\nrough(phone).\nsibling(alice,dave).\nfriend(eve,carol).\ntired(dave).\nfunny(george).\nsibling(eve,alice).\ncalm(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is hard.\nFor all Y, if there exists W such that person Y is calm and person Y is an enemy of person W and person W is weak, then person Y is brave.\nFor all X, if object X is rough and object X is clean, then object X is small.\nFor all X, if person X is curious, then person X is angry.\nFor all X, Y, if person X is tall and object Y is light, then person X dislikes object Y.\n\nAnd the following facts:\nbook is dirty.\nphone is rough.\nalice is a sibling of dave.\neve is a friend of carol.\ndave is tired.\ngeorge is funny.\neve is a sibling of alice.\ncarol is calm.\n\nQUESTION:\nIs book is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 44,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "happy(frank).",
    "c": "hard(X) :- dirty(X).\nbrave(Y) :- calm(Y), enemy(Y,W), weak(W).\nsmall(X) :- rough(X), clean(X).\nangry(X) :- curious(X).\ndislikes(X,Y) :- tall(X), light(Y).\ndirty(book).\nrough(phone).\nsibling(alice,dave).\nfriend(eve,carol).\ntired(dave).\nfunny(george).\nsibling(eve,alice).\ncalm(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is hard.\nFor all Y, if there exists W such that person Y is calm and person Y is an enemy of person W and person W is weak, then person Y is brave.\nFor all X, if object X is rough and object X is clean, then object X is small.\nFor all X, if person X is curious, then person X is angry.\nFor all X, Y, if person X is tall and object Y is light, then person X dislikes object Y.\n\nAnd the following facts:\nbook is dirty.\nphone is rough.\nalice is a sibling of dave.\neve is a friend of carol.\ndave is tired.\ngeorge is funny.\neve is a sibling of alice.\ncarol is calm.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 45,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(book).",
    "c": "hard(X) :- dirty(X).\nbrave(Y) :- calm(Y), enemy(Y,W), weak(W).\nsmall(X) :- rough(X), clean(X).\nangry(X) :- curious(X).\ndislikes(X,Y) :- tall(X), light(Y).\nhard(book).\nrough(phone).\nsibling(alice,dave).\nfriend(eve,carol).\ntired(dave).\nfunny(george).\nsibling(eve,alice).\ncalm(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is hard.\nFor all Y, if there exists W such that person Y is calm and person Y is an enemy of person W and person W is weak, then person Y is brave.\nFor all X, if object X is rough and object X is clean, then object X is small.\nFor all X, if person X is curious, then person X is angry.\nFor all X, Y, if person X is tall and object Y is light, then person X dislikes object Y.\n\nAnd the following facts:\nbook is hard.\nphone is rough.\nalice is a sibling of dave.\neve is a friend of carol.\ndave is tired.\ngeorge is funny.\neve is a sibling of alice.\ncarol is calm.\n\nQUESTION:\nCould book is dirty explain book is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 46,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(dave).",
    "c": "hard(X) :- dirty(X).\nbrave(Y) :- calm(Y), enemy(Y,W), weak(W).\nsmall(X) :- rough(X), clean(X).\nangry(X) :- curious(X).\ndislikes(X,Y) :- tall(X), light(Y).\nhard(book).\nrough(phone).\nsibling(alice,dave).\nfriend(eve,carol).\ntired(dave).\nfunny(george).\nsibling(eve,alice).\ncalm(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is hard.\nFor all Y, if there exists W such that person Y is calm and person Y is an enemy of person W and person W is weak, then person Y is brave.\nFor all X, if object X is rough and object X is clean, then object X is small.\nFor all X, if person X is curious, then person X is angry.\nFor all X, Y, if person X is tall and object Y is light, then person X dislikes object Y.\n\nAnd the following facts:\nbook is hard.\nphone is rough.\nalice is a sibling of dave.\neve is a friend of carol.\ndave is tired.\ngeorge is funny.\neve is a sibling of alice.\ncarol is calm.\n\nQUESTION:\nCould dave is tall explain book is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 47,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(alice).",
    "c": "strong(X) :- happy(X).\nfriendly(X) :- strong(X).\nstrong(X) :- friendly(X).\nweak(X) :- strong(X).\nclever(X) :- weak(X).\nhappy(alice).\nhard(ball).\nsibling(eve,bob).\nenemy(dave,bob).\nexcited(carol).\nowns(george,apple).\nhot.\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\n\nAnd the following facts:\nalice is happy.\nball is hard.\neve is a sibling of bob.\ndave is an enemy of bob.\ncarol is excited.\ngeorge owns apple.\nit is hot.\neve is a friend of alice.\n\nQUESTION:\nIs alice is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 48,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "funny(frank).",
    "c": "strong(X) :- happy(X).\nfriendly(X) :- strong(X).\nstrong(X) :- friendly(X).\nweak(X) :- strong(X).\nclever(X) :- weak(X).\nhappy(alice).\nhard(ball).\nsibling(eve,bob).\nenemy(dave,bob).\nexcited(carol).\nowns(george,apple).\nhot.\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\n\nAnd the following facts:\nalice is happy.\nball is hard.\neve is a sibling of bob.\ndave is an enemy of bob.\ncarol is excited.\ngeorge owns apple.\nit is hot.\neve is a friend of alice.\n\nQUESTION:\nIs frank is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 49,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(alice).",
    "c": "strong(X) :- happy(X).\nfriendly(X) :- strong(X).\nstrong(X) :- friendly(X).\nweak(X) :- strong(X).\nclever(X) :- weak(X).\nclever(alice).\nhard(ball).\nsibling(eve,bob).\nenemy(dave,bob).\nexcited(carol).\nowns(george,apple).\nhot.\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\n\nAnd the following facts:\nalice is clever.\nball is hard.\neve is a sibling of bob.\ndave is an enemy of bob.\ncarol is excited.\ngeorge owns apple.\nit is hot.\neve is a friend of alice.\n\nQUESTION:\nCould alice is happy explain alice is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 50,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "calm(bob).",
    "c": "strong(X) :- happy(X).\nfriendly(X) :- strong(X).\nstrong(X) :- friendly(X).\nweak(X) :- strong(X).\nclever(X) :- weak(X).\nclever(alice).\nhard(ball).\nsibling(eve,bob).\nenemy(dave,bob).\nexcited(carol).\nowns(george,apple).\nhot.\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\n\nAnd the following facts:\nalice is clever.\nball is hard.\neve is a sibling of bob.\ndave is an enemy of bob.\ncarol is excited.\ngeorge owns apple.\nit is hot.\neve is a friend of alice.\n\nQUESTION:\nCould bob is calm explain alice is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 51,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "excited(alice).",
    "c": "clever(X) :- strong(X).\nbusy(X) :- clever(X).\nclever(X) :- busy(X).\ncurious(X) :- clever(X).\nexcited(X) :- curious(X).\nstrong(alice).\nlikes(eve,ball).\nparent(frank,george).\nangry(bob).\nhappy(dave).\nhungry(george).\nweak(frank).\nnew(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\n\nAnd the following facts:\nalice is strong.\neve likes ball.\nfrank is a parent of george.\nbob is angry.\ndave is happy.\ngeorge is hungry.\nfrank is weak.\nphone is new.\n\nQUESTION:\nIs alice is excited true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 52,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clean(apple).",
    "c": "clever(X) :- strong(X).\nbusy(X) :- clever(X).\nclever(X) :- busy(X).\ncurious(X) :- clever(X).\nexcited(X) :- curious(X).\nstrong(alice).\nlikes(eve,ball).\nparent(frank,george).\nangry(bob).\nhappy(dave).\nhungry(george).\nweak(frank).\nnew(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\n\nAnd the following facts:\nalice is strong.\neve likes ball.\nfrank is a parent of george.\nbob is angry.\ndave is happy.\ngeorge is hungry.\nfrank is weak.\nphone is new.\n\nQUESTION:\nIs apple is clean true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 53,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(alice).",
    "c": "clever(X) :- strong(X).\nbusy(X) :- clever(X).\nclever(X) :- busy(X).\ncurious(X) :- clever(X).\nexcited(X) :- curious(X).\nexcited(alice).\nlikes(eve,ball).\nparent(frank,george).\nangry(bob).\nhappy(dave).\nhungry(george).\nweak(frank).\nnew(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\n\nAnd the following facts:\nalice is excited.\neve likes ball.\nfrank is a parent of george.\nbob is angry.\ndave is happy.\ngeorge is hungry.\nfrank is weak.\nphone is new.\n\nQUESTION:\nCould alice is strong explain alice is excited?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 54,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(car).",
    "c": "clever(X) :- strong(X).\nbusy(X) :- clever(X).\nclever(X) :- busy(X).\ncurious(X) :- clever(X).\nexcited(X) :- curious(X).\nexcited(alice).\nlikes(eve,ball).\nparent(frank,george).\nangry(bob).\nhappy(dave).\nhungry(george).\nweak(frank).\nnew(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\n\nAnd the following facts:\nalice is excited.\neve likes ball.\nfrank is a parent of george.\nbob is angry.\ndave is happy.\ngeorge is hungry.\nfrank is weak.\nphone is new.\n\nQUESTION:\nCould car is big explain alice is excited?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 55,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "sad(carol).",
    "c": "excited(X) :- happy(X).\ncalm(X) :- excited(X).\ntired(X) :- calm(X).\nstrong(X) :- tired(X).\nsad(X) :- strong(X).\nhappy(carol).\nold(phone).\ndislikes(bob,phone).\nfriend(frank,dave).\nheavy(book).\nenemy(bob,eve).\nsibling(bob,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\n\nAnd the following facts:\ncarol is happy.\nphone is old.\nbob dislikes phone.\nfrank is a friend of dave.\nbook is heavy.\nbob is an enemy of eve.\nbob is a sibling of george.\nalice is a parent of frank.\n\nQUESTION:\nIs carol is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 56,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "excited(X) :- happy(X).\ncalm(X) :- excited(X).\ntired(X) :- calm(X).\nstrong(X) :- tired(X).\nsad(X) :- strong(X).\nhappy(carol).\nold(phone).\ndislikes(bob,phone).\nfriend(frank,dave).\nheavy(book).\nenemy(bob,eve).\nsibling(bob,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\n\nAnd the following facts:\ncarol is happy.\nphone is old.\nbob dislikes phone.\nfrank is a friend of dave.\nbook is heavy.\nbob is an enemy of eve.\nbob is a sibling of george.\nalice is a parent of frank.\n\nQUESTION:\nIs phone is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 57,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(carol).",
    "c": "excited(X) :- happy(X).\ncalm(X) :- excited(X).\ntired(X) :- calm(X).\nstrong(X) :- tired(X).\nsad(X) :- strong(X).\nsad(carol).\nold(phone).\ndislikes(bob,phone).\nfriend(frank,dave).\nheavy(book).\nenemy(bob,eve).\nsibling(bob,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\n\nAnd the following facts:\ncarol is sad.\nphone is old.\nbob dislikes phone.\nfrank is a friend of dave.\nbook is heavy.\nbob is an enemy of eve.\nbob is a sibling of george.\nalice is a parent of frank.\n\nQUESTION:\nCould carol is happy explain carol is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 58,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(carol).",
    "c": "excited(X) :- happy(X).\ncalm(X) :- excited(X).\ntired(X) :- calm(X).\nstrong(X) :- tired(X).\nsad(X) :- strong(X).\nsad(carol).\nold(phone).\ndislikes(bob,phone).\nfriend(frank,dave).\nheavy(book).\nenemy(bob,eve).\nsibling(bob,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\n\nAnd the following facts:\ncarol is sad.\nphone is old.\nbob dislikes phone.\nfrank is a friend of dave.\nbook is heavy.\nbob is an enemy of eve.\nbob is a sibling of george.\nalice is a parent of frank.\n\nQUESTION:\nCould carol is hungry explain carol is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 59,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "bored(frank).",
    "c": "curious(X) :- tired(X).\nfunny(X) :- curious(X).\nhappy(X) :- funny(X).\nsad(X) :- happy(X).\nbored(X) :- sad(X).\ntired(frank).\nbusy(bob).\nlikes(frank,book).\nenemy(george,frank).\nparent(dave,george).\nowns(eve,phone).\nowns(frank,car).\ncold.",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is bored.\n\nAnd the following facts:\nfrank is tired.\nbob is busy.\nfrank likes book.\ngeorge is an enemy of frank.\ndave is a parent of george.\neve owns phone.\nfrank owns car.\nit is cold.\n\nQUESTION:\nIs frank is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 60,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(bob).",
    "c": "curious(X) :- tired(X).\nfunny(X) :- curious(X).\nhappy(X) :- funny(X).\nsad(X) :- happy(X).\nbored(X) :- sad(X).\ntired(frank).\nbusy(bob).\nlikes(frank,book).\nenemy(george,frank).\nparent(dave,george).\nowns(eve,phone).\nowns(frank,car).\ncold.",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is bored.\n\nAnd the following facts:\nfrank is tired.\nbob is busy.\nfrank likes book.\ngeorge is an enemy of frank.\ndave is a parent of george.\neve owns phone.\nfrank owns car.\nit is cold.\n\nQUESTION:\nIs bob is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 61,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(frank).",
    "c": "curious(X) :- tired(X).\nfunny(X) :- curious(X).\nhappy(X) :- funny(X).\nsad(X) :- happy(X).\nbored(X) :- sad(X).\nbored(frank).\nbusy(bob).\nlikes(frank,book).\nenemy(george,frank).\nparent(dave,george).\nowns(eve,phone).\nowns(frank,car).\ncold.",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is bored.\n\nAnd the following facts:\nfrank is bored.\nbob is busy.\nfrank likes book.\ngeorge is an enemy of frank.\ndave is a parent of george.\neve owns phone.\nfrank owns car.\nit is cold.\n\nQUESTION:\nCould frank is tired explain frank is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 62,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(eve).",
    "c": "curious(X) :- tired(X).\nfunny(X) :- curious(X).\nhappy(X) :- funny(X).\nsad(X) :- happy(X).\nbored(X) :- sad(X).\nbored(frank).\nbusy(bob).\nlikes(frank,book).\nenemy(george,frank).\nparent(dave,george).\nowns(eve,phone).\nowns(frank,car).\ncold.",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is bored.\n\nAnd the following facts:\nfrank is bored.\nbob is busy.\nfrank likes book.\ngeorge is an enemy of frank.\ndave is a parent of george.\neve owns phone.\nfrank owns car.\nit is cold.\n\nQUESTION:\nCould eve is weak explain frank is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 63,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(alice).",
    "c": "busy(X) :- tall(X).\nhappy(X) :- clever(X).\nred(X) :- dirty(X), dislikes(A,X), brave(A).\nold(X) :- clean(X), red(X).\ntired(X) :- clever(X), angry(X).\ntall(alice).\nsad(eve).\nbrave(alice).\ntired(frank).\nenemy(carol,alice).\nred(car).\nfriend(dave,george).\nbored(bob).\nweak(carol).\nfunny(george).\nenemy(frank,dave).\nlikes(frank,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if there exists A such that object X is dirty and person A dislikes object X and person A is brave, then object X is red.\nFor all X, if object X is clean and object X is red, then object X is old.\nFor all X, if person X is clever and person X is angry, then person X is tired.\n\nAnd the following facts:\nalice is tall.\neve is sad.\nalice is brave.\nfrank is tired.\ncarol is an enemy of alice.\ncar is red.\ndave is a friend of george.\nbob is bored.\ncarol is weak.\ngeorge is funny.\nfrank is an enemy of dave.\nfrank likes pencil.\n\nQUESTION:\nIs alice is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 64,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(carol).",
    "c": "busy(X) :- tall(X).\nhappy(X) :- clever(X).\nred(X) :- dirty(X), dislikes(A,X), brave(A).\nold(X) :- clean(X), red(X).\ntired(X) :- clever(X), angry(X).\ntall(alice).\nsad(eve).\nbrave(alice).\ntired(frank).\nenemy(carol,alice).\nred(car).\nfriend(dave,george).\nbored(bob).\nweak(carol).\nfunny(george).\nenemy(frank,dave).\nlikes(frank,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if there exists A such that object X is dirty and person A dislikes object X and person A is brave, then object X is red.\nFor all X, if object X is clean and object X is red, then object X is old.\nFor all X, if person X is clever and person X is angry, then person X is tired.\n\nAnd the following facts:\nalice is tall.\neve is sad.\nalice is brave.\nfrank is tired.\ncarol is an enemy of alice.\ncar is red.\ndave is a friend of george.\nbob is bored.\ncarol is weak.\ngeorge is funny.\nfrank is an enemy of dave.\nfrank likes pencil.\n\nQUESTION:\nIs carol is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 65,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(alice).",
    "c": "busy(X) :- tall(X).\nhappy(X) :- clever(X).\nred(X) :- dirty(X), dislikes(A,X), brave(A).\nold(X) :- clean(X), red(X).\ntired(X) :- clever(X), angry(X).\nbusy(alice).\nsad(eve).\nbrave(alice).\ntired(frank).\nenemy(carol,alice).\nred(car).\nfriend(dave,george).\nbored(bob).\nweak(carol).\nfunny(george).\nenemy(frank,dave).\nlikes(frank,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if there exists A such that object X is dirty and person A dislikes object X and person A is brave, then object X is red.\nFor all X, if object X is clean and object X is red, then object X is old.\nFor all X, if person X is clever and person X is angry, then person X is tired.\n\nAnd the following facts:\nalice is busy.\neve is sad.\nalice is brave.\nfrank is tired.\ncarol is an enemy of alice.\ncar is red.\ndave is a friend of george.\nbob is bored.\ncarol is weak.\ngeorge is funny.\nfrank is an enemy of dave.\nfrank likes pencil.\n\nQUESTION:\nCould alice is tall explain alice is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 66,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "new(phone).",
    "c": "busy(X) :- tall(X).\nhappy(X) :- clever(X).\nred(X) :- dirty(X), dislikes(A,X), brave(A).\nold(X) :- clean(X), red(X).\ntired(X) :- clever(X), angry(X).\nbusy(alice).\nsad(eve).\nbrave(alice).\ntired(frank).\nenemy(carol,alice).\nred(car).\nfriend(dave,george).\nbored(bob).\nweak(carol).\nfunny(george).\nenemy(frank,dave).\nlikes(frank,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if there exists A such that object X is dirty and person A dislikes object X and person A is brave, then object X is red.\nFor all X, if object X is clean and object X is red, then object X is old.\nFor all X, if person X is clever and person X is angry, then person X is tired.\n\nAnd the following facts:\nalice is busy.\neve is sad.\nalice is brave.\nfrank is tired.\ncarol is an enemy of alice.\ncar is red.\ndave is a friend of george.\nbob is bored.\ncarol is weak.\ngeorge is funny.\nfrank is an enemy of dave.\nfrank likes pencil.\n\nQUESTION:\nCould phone is new explain alice is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 67,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "small(car).",
    "c": "small(X) :- red(X).\nstrong(Y) :- busy(Y), busy(B).\nhard(X) :- light(X), big(X).\nenemy(X,Y) :- angry(X), tall(Y).\ndislikes(X,Y) :- calm(X), old(Y).\nred(car).\ndirty(pencil).\nowns(carol,phone).\nparent(bob,carol).\nstrong(alice).\nenemy(bob,george).\ndislikes(eve,phone).\nsmooth(apple).\nsibling(alice,frank).\nnew(pencil).\nhard(pencil).\nfriend(frank,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is small.\nFor all Y, if there exists B such that person Y is busy and person B is busy, then person Y is strong.\nFor all X, if object X is light and object X is big, then object X is hard.\nFor all X, Y, if person X is angry and person Y is tall, then person X is an enemy of person Y.\nFor all X, Y, if person X is calm and object Y is old, then person X dislikes object Y.\n\nAnd the following facts:\ncar is red.\npencil is dirty.\ncarol owns phone.\nbob is a parent of carol.\nalice is strong.\nbob is an enemy of george.\neve dislikes phone.\napple is smooth.\nalice is a sibling of frank.\npencil is new.\npencil is hard.\nfrank is a friend of alice.\n\nQUESTION:\nIs car is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 68,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "funny(frank).",
    "c": "small(X) :- red(X).\nstrong(Y) :- busy(Y), busy(B).\nhard(X) :- light(X), big(X).\nenemy(X,Y) :- angry(X), tall(Y).\ndislikes(X,Y) :- calm(X), old(Y).\nred(car).\ndirty(pencil).\nowns(carol,phone).\nparent(bob,carol).\nstrong(alice).\nenemy(bob,george).\ndislikes(eve,phone).\nsmooth(apple).\nsibling(alice,frank).\nnew(pencil).\nhard(pencil).\nfriend(frank,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is small.\nFor all Y, if there exists B such that person Y is busy and person B is busy, then person Y is strong.\nFor all X, if object X is light and object X is big, then object X is hard.\nFor all X, Y, if person X is angry and person Y is tall, then person X is an enemy of person Y.\nFor all X, Y, if person X is calm and object Y is old, then person X dislikes object Y.\n\nAnd the following facts:\ncar is red.\npencil is dirty.\ncarol owns phone.\nbob is a parent of carol.\nalice is strong.\nbob is an enemy of george.\neve dislikes phone.\napple is smooth.\nalice is a sibling of frank.\npencil is new.\npencil is hard.\nfrank is a friend of alice.\n\nQUESTION:\nIs frank is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 69,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "small(X) :- red(X).\nstrong(Y) :- busy(Y), busy(B).\nhard(X) :- light(X), big(X).\nenemy(X,Y) :- angry(X), tall(Y).\ndislikes(X,Y) :- calm(X), old(Y).\nsmall(car).\ndirty(pencil).\nowns(carol,phone).\nparent(bob,carol).\nstrong(alice).\nenemy(bob,george).\ndislikes(eve,phone).\nsmooth(apple).\nsibling(alice,frank).\nnew(pencil).\nhard(pencil).\nfriend(frank,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is small.\nFor all Y, if there exists B such that person Y is busy and person B is busy, then person Y is strong.\nFor all X, if object X is light and object X is big, then object X is hard.\nFor all X, Y, if person X is angry and person Y is tall, then person X is an enemy of person Y.\nFor all X, Y, if person X is calm and object Y is old, then person X dislikes object Y.\n\nAnd the following facts:\ncar is small.\npencil is dirty.\ncarol owns phone.\nbob is a parent of carol.\nalice is strong.\nbob is an enemy of george.\neve dislikes phone.\napple is smooth.\nalice is a sibling of frank.\npencil is new.\npencil is hard.\nfrank is a friend of alice.\n\nQUESTION:\nCould car is red explain car is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 70,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(frank).",
    "c": "small(X) :- red(X).\nstrong(Y) :- busy(Y), busy(B).\nhard(X) :- light(X), big(X).\nenemy(X,Y) :- angry(X), tall(Y).\ndislikes(X,Y) :- calm(X), old(Y).\nsmall(car).\ndirty(pencil).\nowns(carol,phone).\nparent(bob,carol).\nstrong(alice).\nenemy(bob,george).\ndislikes(eve,phone).\nsmooth(apple).\nsibling(alice,frank).\nnew(pencil).\nhard(pencil).\nfriend(frank,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is small.\nFor all Y, if there exists B such that person Y is busy and person B is busy, then person Y is strong.\nFor all X, if object X is light and object X is big, then object X is hard.\nFor all X, Y, if person X is angry and person Y is tall, then person X is an enemy of person Y.\nFor all X, Y, if person X is calm and object Y is old, then person X dislikes object Y.\n\nAnd the following facts:\ncar is small.\npencil is dirty.\ncarol owns phone.\nbob is a parent of carol.\nalice is strong.\nbob is an enemy of george.\neve dislikes phone.\napple is smooth.\nalice is a sibling of frank.\npencil is new.\npencil is hard.\nfrank is a friend of alice.\n\nQUESTION:\nCould frank is happy explain car is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 71,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "small(apple).",
    "c": "small(X) :- heavy(X).\nhungry(X) :- brave(X), likes(X,V), soft(V).\nhappy(X) :- bored(X).\nlight(X) :- new(X), soft(X).\nbrave(X) :- curious(X).\nheavy(apple).\nangry(bob).\nparent(carol,george).\nowns(eve,pencil).\nbrave(alice).\nfriend(dave,bob).\nparent(bob,carol).\ndislikes(george,ball).\nenemy(bob,eve).\nweak(eve).\nfunny(alice).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if there exists V such that person X is brave and person X likes object V and object V is soft, then person X is hungry.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if object X is new and object X is soft, then object X is light.\nFor all X, if person X is curious, then person X is brave.\n\nAnd the following facts:\napple is heavy.\nbob is angry.\ncarol is a parent of george.\neve owns pencil.\nalice is brave.\ndave is a friend of bob.\nbob is a parent of carol.\ngeorge dislikes ball.\nbob is an enemy of eve.\neve is weak.\nalice is funny.\ncarol owns book.\n\nQUESTION:\nIs apple is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 72,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(dave).",
    "c": "small(X) :- heavy(X).\nhungry(X) :- brave(X), likes(X,V), soft(V).\nhappy(X) :- bored(X).\nlight(X) :- new(X), soft(X).\nbrave(X) :- curious(X).\nheavy(apple).\nangry(bob).\nparent(carol,george).\nowns(eve,pencil).\nbrave(alice).\nfriend(dave,bob).\nparent(bob,carol).\ndislikes(george,ball).\nenemy(bob,eve).\nweak(eve).\nfunny(alice).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if there exists V such that person X is brave and person X likes object V and object V is soft, then person X is hungry.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if object X is new and object X is soft, then object X is light.\nFor all X, if person X is curious, then person X is brave.\n\nAnd the following facts:\napple is heavy.\nbob is angry.\ncarol is a parent of george.\neve owns pencil.\nalice is brave.\ndave is a friend of bob.\nbob is a parent of carol.\ngeorge dislikes ball.\nbob is an enemy of eve.\neve is weak.\nalice is funny.\ncarol owns book.\n\nQUESTION:\nIs dave is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 73,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(apple).",
    "c": "small(X) :- heavy(X).\nhungry(X) :- brave(X), likes(X,V), soft(V).\nhappy(X) :- bored(X).\nlight(X) :- new(X), soft(X).\nbrave(X) :- curious(X).\nsmall(apple).\nangry(bob).\nparent(carol,george).\nowns(eve,pencil).\nbrave(alice).\nfriend(dave,bob).\nparent(bob,carol).\ndislikes(george,ball).\nenemy(bob,eve).\nweak(eve).\nfunny(alice).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if there exists V such that person X is brave and person X likes object V and object V is soft, then person X is hungry.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if object X is new and object X is soft, then object X is light.\nFor all X, if person X is curious, then person X is brave.\n\nAnd the following facts:\napple is small.\nbob is angry.\ncarol is a parent of george.\neve owns pencil.\nalice is brave.\ndave is a friend of bob.\nbob is a parent of carol.\ngeorge dislikes ball.\nbob is an enemy of eve.\neve is weak.\nalice is funny.\ncarol owns book.\n\nQUESTION:\nCould apple is heavy explain apple is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 74,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(bob).",
    "c": "small(X) :- heavy(X).\nhungry(X) :- brave(X), likes(X,V), soft(V).\nhappy(X) :- bored(X).\nlight(X) :- new(X), soft(X).\nbrave(X) :- curious(X).\nsmall(apple).\nangry(bob).\nparent(carol,george).\nowns(eve,pencil).\nbrave(alice).\nfriend(dave,bob).\nparent(bob,carol).\ndislikes(george,ball).\nenemy(bob,eve).\nweak(eve).\nfunny(alice).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if there exists V such that person X is brave and person X likes object V and object V is soft, then person X is hungry.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if object X is new and object X is soft, then object X is light.\nFor all X, if person X is curious, then person X is brave.\n\nAnd the following facts:\napple is small.\nbob is angry.\ncarol is a parent of george.\neve owns pencil.\nalice is brave.\ndave is a friend of bob.\nbob is a parent of carol.\ngeorge dislikes ball.\nbob is an enemy of eve.\neve is weak.\nalice is funny.\ncarol owns book.\n\nQUESTION:\nCould bob is weak explain apple is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 75,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(eve).",
    "c": "happy(X) :- bored(X).\nenemy(Z,X) :- clever(Z), calm(X), sibling(Z,U).\nstrong(X) :- busy(X).\nbrave(X) :- angry(X).\nhard(X) :- heavy(X).\nbored(eve).\nbrave(frank).\nnew(car).\nowns(carol,phone).\nhungry(eve).\ndirty(apple).\nweak(frank).\nclever(alice).\ndislikes(eve,ball).\nsibling(carol,bob).\nlikes(frank,pencil).\nparent(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is happy.\nFor all X, Z, if there exists U such that person Z is clever and person X is calm and person Z is a sibling of person U, then person Z is an enemy of person X.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if object X is heavy, then object X is hard.\n\nAnd the following facts:\neve is bored.\nfrank is brave.\ncar is new.\ncarol owns phone.\neve is hungry.\napple is dirty.\nfrank is weak.\nalice is clever.\neve dislikes ball.\ncarol is a sibling of bob.\nfrank likes pencil.\ndave is a parent of george.\n\nQUESTION:\nIs eve is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 76,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "smooth(apple).",
    "c": "happy(X) :- bored(X).\nenemy(Z,X) :- clever(Z), calm(X), sibling(Z,U).\nstrong(X) :- busy(X).\nbrave(X) :- angry(X).\nhard(X) :- heavy(X).\nbored(eve).\nbrave(frank).\nnew(car).\nowns(carol,phone).\nhungry(eve).\ndirty(apple).\nweak(frank).\nclever(alice).\ndislikes(eve,ball).\nsibling(carol,bob).\nlikes(frank,pencil).\nparent(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is happy.\nFor all X, Z, if there exists U such that person Z is clever and person X is calm and person Z is a sibling of person U, then person Z is an enemy of person X.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if object X is heavy, then object X is hard.\n\nAnd the following facts:\neve is bored.\nfrank is brave.\ncar is new.\ncarol owns phone.\neve is hungry.\napple is dirty.\nfrank is weak.\nalice is clever.\neve dislikes ball.\ncarol is a sibling of bob.\nfrank likes pencil.\ndave is a parent of george.\n\nQUESTION:\nIs apple is smooth true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 77,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(eve).",
    "c": "happy(X) :- bored(X).\nenemy(Z,X) :- clever(Z), calm(X), sibling(Z,U).\nstrong(X) :- busy(X).\nbrave(X) :- angry(X).\nhard(X) :- heavy(X).\nhappy(eve).\nbrave(frank).\nnew(car).\nowns(carol,phone).\nhungry(eve).\ndirty(apple).\nweak(frank).\nclever(alice).\ndislikes(eve,ball).\nsibling(carol,bob).\nlikes(frank,pencil).\nparent(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is happy.\nFor all X, Z, if there exists U such that person Z is clever and person X is calm and person Z is a sibling of person U, then person Z is an enemy of person X.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if object X is heavy, then object X is hard.\n\nAnd the following facts:\neve is happy.\nfrank is brave.\ncar is new.\ncarol owns phone.\neve is hungry.\napple is dirty.\nfrank is weak.\nalice is clever.\neve dislikes ball.\ncarol is a sibling of bob.\nfrank likes pencil.\ndave is a parent of george.\n\nQUESTION:\nCould eve is bored explain eve is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 78,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(george).",
    "c": "happy(X) :- bored(X).\nenemy(Z,X) :- clever(Z), calm(X), sibling(Z,U).\nstrong(X) :- busy(X).\nbrave(X) :- angry(X).\nhard(X) :- heavy(X).\nhappy(eve).\nbrave(frank).\nnew(car).\nowns(carol,phone).\nhungry(eve).\ndirty(apple).\nweak(frank).\nclever(alice).\ndislikes(eve,ball).\nsibling(carol,bob).\nlikes(frank,pencil).\nparent(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is happy.\nFor all X, Z, if there exists U such that person Z is clever and person X is calm and person Z is a sibling of person U, then person Z is an enemy of person X.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if object X is heavy, then object X is hard.\n\nAnd the following facts:\neve is happy.\nfrank is brave.\ncar is new.\ncarol owns phone.\neve is hungry.\napple is dirty.\nfrank is weak.\nalice is clever.\neve dislikes ball.\ncarol is a sibling of bob.\nfrank likes pencil.\ndave is a parent of george.\n\nQUESTION:\nCould george is clever explain eve is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 79,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "wet(pencil).",
    "c": "old(X) :- smooth(X).\nheavy(X) :- old(X).\nbig(X) :- heavy(X).\nold(X) :- big(X).\nwet(X) :- old(X).\nsmooth(pencil).\nparent(frank,george).\nred(pencil).\nhappy(carol).\nfriend(george,alice).\nowns(bob,pencil).\nparent(dave,carol).\nbored(bob).\ncalm(eve).\nfunny(bob).\nweak(carol).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is wet.\n\nAnd the following facts:\npencil is smooth.\nfrank is a parent of george.\npencil is red.\ncarol is happy.\ngeorge is a friend of alice.\nbob owns pencil.\ndave is a parent of carol.\nbob is bored.\neve is calm.\nbob is funny.\ncarol is weak.\ndave is a sibling of alice.\n\nQUESTION:\nIs pencil is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 80,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "old(X) :- smooth(X).\nheavy(X) :- old(X).\nbig(X) :- heavy(X).\nold(X) :- big(X).\nwet(X) :- old(X).\nsmooth(pencil).\nparent(frank,george).\nred(pencil).\nhappy(carol).\nfriend(george,alice).\nowns(bob,pencil).\nparent(dave,carol).\nbored(bob).\ncalm(eve).\nfunny(bob).\nweak(carol).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is wet.\n\nAnd the following facts:\npencil is smooth.\nfrank is a parent of george.\npencil is red.\ncarol is happy.\ngeorge is a friend of alice.\nbob owns pencil.\ndave is a parent of carol.\nbob is bored.\neve is calm.\nbob is funny.\ncarol is weak.\ndave is a sibling of alice.\n\nQUESTION:\nIs dave is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 81,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(pencil).",
    "c": "old(X) :- smooth(X).\nheavy(X) :- old(X).\nbig(X) :- heavy(X).\nold(X) :- big(X).\nwet(X) :- old(X).\nwet(pencil).\nparent(frank,george).\nred(pencil).\nhappy(carol).\nfriend(george,alice).\nowns(bob,pencil).\nparent(dave,carol).\nbored(bob).\ncalm(eve).\nfunny(bob).\nweak(carol).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is wet.\n\nAnd the following facts:\npencil is wet.\nfrank is a parent of george.\npencil is red.\ncarol is happy.\ngeorge is a friend of alice.\nbob owns pencil.\ndave is a parent of carol.\nbob is bored.\neve is calm.\nbob is funny.\ncarol is weak.\ndave is a sibling of alice.\n\nQUESTION:\nCould pencil is smooth explain pencil is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 82,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "friendly(george).",
    "c": "old(X) :- smooth(X).\nheavy(X) :- old(X).\nbig(X) :- heavy(X).\nold(X) :- big(X).\nwet(X) :- old(X).\nwet(pencil).\nparent(frank,george).\nred(pencil).\nhappy(carol).\nfriend(george,alice).\nowns(bob,pencil).\nparent(dave,carol).\nbored(bob).\ncalm(eve).\nfunny(bob).\nweak(carol).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is wet.\n\nAnd the following facts:\npencil is wet.\nfrank is a parent of george.\npencil is red.\ncarol is happy.\ngeorge is a friend of alice.\nbob owns pencil.\ndave is a parent of carol.\nbob is bored.\neve is calm.\nbob is funny.\ncarol is weak.\ndave is a sibling of alice.\n\nQUESTION:\nCould george is friendly explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 83,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "sad(carol).",
    "c": "friendly(X) :- curious(X).\nbusy(X) :- friendly(X).\ncalm(X) :- busy(X).\nfriendly(X) :- calm(X).\nsad(X) :- friendly(X).\ncurious(carol).\nfriend(alice,eve).\nsibling(alice,frank).\nowns(bob,car).\nenemy(george,bob).\nfriend(eve,frank).\nenemy(alice,eve).\nlight(car).\nhungry(eve).\nowns(frank,ball).\ntired(frank).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\n\nAnd the following facts:\ncarol is curious.\nalice is a friend of eve.\nalice is a sibling of frank.\nbob owns car.\ngeorge is an enemy of bob.\neve is a friend of frank.\nalice is an enemy of eve.\ncar is light.\neve is hungry.\nfrank owns ball.\nfrank is tired.\neve is tall.\n\nQUESTION:\nIs carol is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 84,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(carol).",
    "c": "friendly(X) :- curious(X).\nbusy(X) :- friendly(X).\ncalm(X) :- busy(X).\nfriendly(X) :- calm(X).\nsad(X) :- friendly(X).\ncurious(carol).\nfriend(alice,eve).\nsibling(alice,frank).\nowns(bob,car).\nenemy(george,bob).\nfriend(eve,frank).\nenemy(alice,eve).\nlight(car).\nhungry(eve).\nowns(frank,ball).\ntired(frank).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\n\nAnd the following facts:\ncarol is curious.\nalice is a friend of eve.\nalice is a sibling of frank.\nbob owns car.\ngeorge is an enemy of bob.\neve is a friend of frank.\nalice is an enemy of eve.\ncar is light.\neve is hungry.\nfrank owns ball.\nfrank is tired.\neve is tall.\n\nQUESTION:\nIs carol is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 85,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "curious(carol).",
    "c": "friendly(X) :- curious(X).\nbusy(X) :- friendly(X).\ncalm(X) :- busy(X).\nfriendly(X) :- calm(X).\nsad(X) :- friendly(X).\nsad(carol).\nfriend(alice,eve).\nsibling(alice,frank).\nowns(bob,car).\nenemy(george,bob).\nfriend(eve,frank).\nenemy(alice,eve).\nlight(car).\nhungry(eve).\nowns(frank,ball).\ntired(frank).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\n\nAnd the following facts:\ncarol is sad.\nalice is a friend of eve.\nalice is a sibling of frank.\nbob owns car.\ngeorge is an enemy of bob.\neve is a friend of frank.\nalice is an enemy of eve.\ncar is light.\neve is hungry.\nfrank owns ball.\nfrank is tired.\neve is tall.\n\nQUESTION:\nCould carol is curious explain carol is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 86,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "small(book).",
    "c": "friendly(X) :- curious(X).\nbusy(X) :- friendly(X).\ncalm(X) :- busy(X).\nfriendly(X) :- calm(X).\nsad(X) :- friendly(X).\nsad(carol).\nfriend(alice,eve).\nsibling(alice,frank).\nowns(bob,car).\nenemy(george,bob).\nfriend(eve,frank).\nenemy(alice,eve).\nlight(car).\nhungry(eve).\nowns(frank,ball).\ntired(frank).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\n\nAnd the following facts:\ncarol is sad.\nalice is a friend of eve.\nalice is a sibling of frank.\nbob owns car.\ngeorge is an enemy of bob.\neve is a friend of frank.\nalice is an enemy of eve.\ncar is light.\neve is hungry.\nfrank owns ball.\nfrank is tired.\neve is tall.\n\nQUESTION:\nCould book is small explain carol is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 87,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(alice).",
    "c": "calm(X) :- weak(X).\nfriendly(X) :- calm(X).\nbrave(X) :- friendly(X).\nfunny(X) :- brave(X).\nclever(X) :- funny(X).\nweak(alice).\nsibling(alice,bob).\nowns(bob,pencil).\nbusy(dave).\nlikes(dave,apple).\nlikes(dave,phone).\nheavy(apple).\nparent(dave,alice).\nenemy(george,frank).\nfriend(george,eve).\ndislikes(eve,book).\nowns(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\n\nAnd the following facts:\nalice is weak.\nalice is a sibling of bob.\nbob owns pencil.\ndave is busy.\ndave likes apple.\ndave likes phone.\napple is heavy.\ndave is a parent of alice.\ngeorge is an enemy of frank.\ngeorge is a friend of eve.\neve dislikes book.\neve owns phone.\n\nQUESTION:\nIs alice is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 88,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(apple).",
    "c": "calm(X) :- weak(X).\nfriendly(X) :- calm(X).\nbrave(X) :- friendly(X).\nfunny(X) :- brave(X).\nclever(X) :- funny(X).\nweak(alice).\nsibling(alice,bob).\nowns(bob,pencil).\nbusy(dave).\nlikes(dave,apple).\nlikes(dave,phone).\nheavy(apple).\nparent(dave,alice).\nenemy(george,frank).\nfriend(george,eve).\ndislikes(eve,book).\nowns(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\n\nAnd the following facts:\nalice is weak.\nalice is a sibling of bob.\nbob owns pencil.\ndave is busy.\ndave likes apple.\ndave likes phone.\napple is heavy.\ndave is a parent of alice.\ngeorge is an enemy of frank.\ngeorge is a friend of eve.\neve dislikes book.\neve owns phone.\n\nQUESTION:\nIs apple is rough true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 89,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(alice).",
    "c": "calm(X) :- weak(X).\nfriendly(X) :- calm(X).\nbrave(X) :- friendly(X).\nfunny(X) :- brave(X).\nclever(X) :- funny(X).\nclever(alice).\nsibling(alice,bob).\nowns(bob,pencil).\nbusy(dave).\nlikes(dave,apple).\nlikes(dave,phone).\nheavy(apple).\nparent(dave,alice).\nenemy(george,frank).\nfriend(george,eve).\ndislikes(eve,book).\nowns(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\n\nAnd the following facts:\nalice is clever.\nalice is a sibling of bob.\nbob owns pencil.\ndave is busy.\ndave likes apple.\ndave likes phone.\napple is heavy.\ndave is a parent of alice.\ngeorge is an enemy of frank.\ngeorge is a friend of eve.\neve dislikes book.\neve owns phone.\n\nQUESTION:\nCould alice is weak explain alice is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 90,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "strong(alice).",
    "c": "calm(X) :- weak(X).\nfriendly(X) :- calm(X).\nbrave(X) :- friendly(X).\nfunny(X) :- brave(X).\nclever(X) :- funny(X).\nclever(alice).\nsibling(alice,bob).\nowns(bob,pencil).\nbusy(dave).\nlikes(dave,apple).\nlikes(dave,phone).\nheavy(apple).\nparent(dave,alice).\nenemy(george,frank).\nfriend(george,eve).\ndislikes(eve,book).\nowns(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\n\nAnd the following facts:\nalice is clever.\nalice is a sibling of bob.\nbob owns pencil.\ndave is busy.\ndave likes apple.\ndave likes phone.\napple is heavy.\ndave is a parent of alice.\ngeorge is an enemy of frank.\ngeorge is a friend of eve.\neve dislikes book.\neve owns phone.\n\nQUESTION:\nCould alice is strong explain alice is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 91,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "small(pencil).",
    "c": "old(X) :- dirty(X).\nrough(X) :- old(X).\nheavy(X) :- rough(X).\nlight(X) :- heavy(X).\nsmall(X) :- light(X).\ndirty(pencil).\ncold.\nbored(carol).\nsibling(dave,carol).\nsmooth(ball).\nweak(george).\nnew(pencil).\nparent(alice,bob).\nfriend(alice,eve).\nbrave(frank).\nfriend(eve,george).\nfunny(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\n\nAnd the following facts:\npencil is dirty.\nit is cold.\ncarol is bored.\ndave is a sibling of carol.\nball is smooth.\ngeorge is weak.\npencil is new.\nalice is a parent of bob.\nalice is a friend of eve.\nfrank is brave.\neve is a friend of george.\ncarol is funny.\n\nQUESTION:\nIs pencil is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 92,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clever(frank).",
    "c": "old(X) :- dirty(X).\nrough(X) :- old(X).\nheavy(X) :- rough(X).\nlight(X) :- heavy(X).\nsmall(X) :- light(X).\ndirty(pencil).\ncold.\nbored(carol).\nsibling(dave,carol).\nsmooth(ball).\nweak(george).\nnew(pencil).\nparent(alice,bob).\nfriend(alice,eve).\nbrave(frank).\nfriend(eve,george).\nfunny(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\n\nAnd the following facts:\npencil is dirty.\nit is cold.\ncarol is bored.\ndave is a sibling of carol.\nball is smooth.\ngeorge is weak.\npencil is new.\nalice is a parent of bob.\nalice is a friend of eve.\nfrank is brave.\neve is a friend of george.\ncarol is funny.\n\nQUESTION:\nIs frank is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 93,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(pencil).",
    "c": "old(X) :- dirty(X).\nrough(X) :- old(X).\nheavy(X) :- rough(X).\nlight(X) :- heavy(X).\nsmall(X) :- light(X).\nsmall(pencil).\ncold.\nbored(carol).\nsibling(dave,carol).\nsmooth(ball).\nweak(george).\nnew(pencil).\nparent(alice,bob).\nfriend(alice,eve).\nbrave(frank).\nfriend(eve,george).\nfunny(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\n\nAnd the following facts:\npencil is small.\nit is cold.\ncarol is bored.\ndave is a sibling of carol.\nball is smooth.\ngeorge is weak.\npencil is new.\nalice is a parent of bob.\nalice is a friend of eve.\nfrank is brave.\neve is a friend of george.\ncarol is funny.\n\nQUESTION:\nCould pencil is dirty explain pencil is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 94,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(apple).",
    "c": "old(X) :- dirty(X).\nrough(X) :- old(X).\nheavy(X) :- rough(X).\nlight(X) :- heavy(X).\nsmall(X) :- light(X).\nsmall(pencil).\ncold.\nbored(carol).\nsibling(dave,carol).\nsmooth(ball).\nweak(george).\nnew(pencil).\nparent(alice,bob).\nfriend(alice,eve).\nbrave(frank).\nfriend(eve,george).\nfunny(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\n\nAnd the following facts:\npencil is small.\nit is cold.\ncarol is bored.\ndave is a sibling of carol.\nball is smooth.\ngeorge is weak.\npencil is new.\nalice is a parent of bob.\nalice is a friend of eve.\nfrank is brave.\neve is a friend of george.\ncarol is funny.\n\nQUESTION:\nCould apple is red explain pencil is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 95,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(carol).",
    "c": "hungry(X) :- busy(X).\ndirty(Z) :- light(Z).\nowns(Z,X) :- tall(Z), red(X), dislikes(V,X).\nhard(X) :- old(X), dirty(X).\nfriendly(X) :- clever(X).\nbusy(carol).\nenemy(alice,frank).\nenemy(eve,bob).\nsmooth(phone).\nfriend(alice,eve).\ncurious(dave).\nowns(carol,ball).\nfriend(bob,george).\nparent(bob,carol).\nweak(eve).\nparent(frank,bob).\nclever(dave).\nowns(eve,pencil).\nfriendly(eve).\nlikes(eve,apple).\nbored(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is hungry.\nFor all Z, if object Z is light, then object Z is dirty.\nFor all X, Z, if there exists V such that person Z is tall and object X is red and person V dislikes object X, then person Z owns object X.\nFor all X, if object X is old and object X is dirty, then object X is hard.\nFor all X, if person X is clever, then person X is friendly.\n\nAnd the following facts:\ncarol is busy.\nalice is an enemy of frank.\neve is an enemy of bob.\nphone is smooth.\nalice is a friend of eve.\ndave is curious.\ncarol owns ball.\nbob is a friend of george.\nbob is a parent of carol.\neve is weak.\nfrank is a parent of bob.\ndave is clever.\neve owns pencil.\neve is friendly.\neve likes apple.\ndave is bored.\n\nQUESTION:\nIs carol is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 96,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "busy(alice).",
    "c": "hungry(X) :- busy(X).\ndirty(Z) :- light(Z).\nowns(Z,X) :- tall(Z), red(X), dislikes(V,X).\nhard(X) :- old(X), dirty(X).\nfriendly(X) :- clever(X).\nbusy(carol).\nenemy(alice,frank).\nenemy(eve,bob).\nsmooth(phone).\nfriend(alice,eve).\ncurious(dave).\nowns(carol,ball).\nfriend(bob,george).\nparent(bob,carol).\nweak(eve).\nparent(frank,bob).\nclever(dave).\nowns(eve,pencil).\nfriendly(eve).\nlikes(eve,apple).\nbored(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is hungry.\nFor all Z, if object Z is light, then object Z is dirty.\nFor all X, Z, if there exists V such that person Z is tall and object X is red and person V dislikes object X, then person Z owns object X.\nFor all X, if object X is old and object X is dirty, then object X is hard.\nFor all X, if person X is clever, then person X is friendly.\n\nAnd the following facts:\ncarol is busy.\nalice is an enemy of frank.\neve is an enemy of bob.\nphone is smooth.\nalice is a friend of eve.\ndave is curious.\ncarol owns ball.\nbob is a friend of george.\nbob is a parent of carol.\neve is weak.\nfrank is a parent of bob.\ndave is clever.\neve owns pencil.\neve is friendly.\neve likes apple.\ndave is bored.\n\nQUESTION:\nIs alice is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 97,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(carol).",
    "c": "hungry(X) :- busy(X).\ndirty(Z) :- light(Z).\nowns(Z,X) :- tall(Z), red(X), dislikes(V,X).\nhard(X) :- old(X), dirty(X).\nfriendly(X) :- clever(X).\nhungry(carol).\nenemy(alice,frank).\nenemy(eve,bob).\nsmooth(phone).\nfriend(alice,eve).\ncurious(dave).\nowns(carol,ball).\nfriend(bob,george).\nparent(bob,carol).\nweak(eve).\nparent(frank,bob).\nclever(dave).\nowns(eve,pencil).\nfriendly(eve).\nlikes(eve,apple).\nbored(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is hungry.\nFor all Z, if object Z is light, then object Z is dirty.\nFor all X, Z, if there exists V such that person Z is tall and object X is red and person V dislikes object X, then person Z owns object X.\nFor all X, if object X is old and object X is dirty, then object X is hard.\nFor all X, if person X is clever, then person X is friendly.\n\nAnd the following facts:\ncarol is hungry.\nalice is an enemy of frank.\neve is an enemy of bob.\nphone is smooth.\nalice is a friend of eve.\ndave is curious.\ncarol owns ball.\nbob is a friend of george.\nbob is a parent of carol.\neve is weak.\nfrank is a parent of bob.\ndave is clever.\neve owns pencil.\neve is friendly.\neve likes apple.\ndave is bored.\n\nQUESTION:\nCould carol is busy explain carol is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 98,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "calm(frank).",
    "c": "hungry(X) :- busy(X).\ndirty(Z) :- light(Z).\nowns(Z,X) :- tall(Z), red(X), dislikes(V,X).\nhard(X) :- old(X), dirty(X).\nfriendly(X) :- clever(X).\nhungry(carol).\nenemy(alice,frank).\nenemy(eve,bob).\nsmooth(phone).\nfriend(alice,eve).\ncurious(dave).\nowns(carol,ball).\nfriend(bob,george).\nparent(bob,carol).\nweak(eve).\nparent(frank,bob).\nclever(dave).\nowns(eve,pencil).\nfriendly(eve).\nlikes(eve,apple).\nbored(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is hungry.\nFor all Z, if object Z is light, then object Z is dirty.\nFor all X, Z, if there exists V such that person Z is tall and object X is red and person V dislikes object X, then person Z owns object X.\nFor all X, if object X is old and object X is dirty, then object X is hard.\nFor all X, if person X is clever, then person X is friendly.\n\nAnd the following facts:\ncarol is hungry.\nalice is an enemy of frank.\neve is an enemy of bob.\nphone is smooth.\nalice is a friend of eve.\ndave is curious.\ncarol owns ball.\nbob is a friend of george.\nbob is a parent of carol.\neve is weak.\nfrank is a parent of bob.\ndave is clever.\neve owns pencil.\neve is friendly.\neve likes apple.\ndave is bored.\n\nQUESTION:\nCould frank is calm explain carol is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 99,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(book).",
    "c": "smooth(X) :- new(X).\nsibling(Y,Z) :- weak(Y), tired(Z), enemy(Y,V).\nstrong(X) :- excited(X), excited(X).\ndirty(X) :- clean(X).\nbig(X) :- soft(X).\nnew(book).\nlikes(eve,ball).\ndislikes(carol,ball).\nfunny(alice).\nsibling(frank,alice).\nenemy(carol,frank).\nsibling(eve,carol).\nfriend(bob,george).\ntired(bob).\nlikes(bob,apple).\nwet(book).\nowns(frank,book).\nfriend(frank,carol).\nexcited(bob).\nfriend(alice,george).\nlikes(george,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is smooth.\nFor all Y, Z, if there exists V such that person Y is weak and person Z is tired and person Y is an enemy of person V, then person Y is a sibling of person Z.\nFor all X, if person X is excited and person X is excited, then person X is strong.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is soft, then object X is big.\n\nAnd the following facts:\nbook is new.\neve likes ball.\ncarol dislikes ball.\nalice is funny.\nfrank is a sibling of alice.\ncarol is an enemy of frank.\neve is a sibling of carol.\nbob is a friend of george.\nbob is tired.\nbob likes apple.\nbook is wet.\nfrank owns book.\nfrank is a friend of carol.\nbob is excited.\nalice is a friend of george.\ngeorge likes book.\n\nQUESTION:\nIs book is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 100,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(phone).",
    "c": "smooth(X) :- new(X).\nsibling(Y,Z) :- weak(Y), tired(Z), enemy(Y,V).\nstrong(X) :- excited(X), excited(X).\ndirty(X) :- clean(X).\nbig(X) :- soft(X).\nnew(book).\nlikes(eve,ball).\ndislikes(carol,ball).\nfunny(alice).\nsibling(frank,alice).\nenemy(carol,frank).\nsibling(eve,carol).\nfriend(bob,george).\ntired(bob).\nlikes(bob,apple).\nwet(book).\nowns(frank,book).\nfriend(frank,carol).\nexcited(bob).\nfriend(alice,george).\nlikes(george,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is smooth.\nFor all Y, Z, if there exists V such that person Y is weak and person Z is tired and person Y is an enemy of person V, then person Y is a sibling of person Z.\nFor all X, if person X is excited and person X is excited, then person X is strong.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is soft, then object X is big.\n\nAnd the following facts:\nbook is new.\neve likes ball.\ncarol dislikes ball.\nalice is funny.\nfrank is a sibling of alice.\ncarol is an enemy of frank.\neve is a sibling of carol.\nbob is a friend of george.\nbob is tired.\nbob likes apple.\nbook is wet.\nfrank owns book.\nfrank is a friend of carol.\nbob is excited.\nalice is a friend of george.\ngeorge likes book.\n\nQUESTION:\nIs phone is heavy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 101,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(book).",
    "c": "smooth(X) :- new(X).\nsibling(Y,Z) :- weak(Y), tired(Z), enemy(Y,V).\nstrong(X) :- excited(X), excited(X).\ndirty(X) :- clean(X).\nbig(X) :- soft(X).\nsmooth(book).\nlikes(eve,ball).\ndislikes(carol,ball).\nfunny(alice).\nsibling(frank,alice).\nenemy(carol,frank).\nsibling(eve,carol).\nfriend(bob,george).\ntired(bob).\nlikes(bob,apple).\nwet(book).\nowns(frank,book).\nfriend(frank,carol).\nexcited(bob).\nfriend(alice,george).\nlikes(george,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is smooth.\nFor all Y, Z, if there exists V such that person Y is weak and person Z is tired and person Y is an enemy of person V, then person Y is a sibling of person Z.\nFor all X, if person X is excited and person X is excited, then person X is strong.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is soft, then object X is big.\n\nAnd the following facts:\nbook is smooth.\neve likes ball.\ncarol dislikes ball.\nalice is funny.\nfrank is a sibling of alice.\ncarol is an enemy of frank.\neve is a sibling of carol.\nbob is a friend of george.\nbob is tired.\nbob likes apple.\nbook is wet.\nfrank owns book.\nfrank is a friend of carol.\nbob is excited.\nalice is a friend of george.\ngeorge likes book.\n\nQUESTION:\nCould book is new explain book is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 102,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(dave).",
    "c": "smooth(X) :- new(X).\nsibling(Y,Z) :- weak(Y), tired(Z), enemy(Y,V).\nstrong(X) :- excited(X), excited(X).\ndirty(X) :- clean(X).\nbig(X) :- soft(X).\nsmooth(book).\nlikes(eve,ball).\ndislikes(carol,ball).\nfunny(alice).\nsibling(frank,alice).\nenemy(carol,frank).\nsibling(eve,carol).\nfriend(bob,george).\ntired(bob).\nlikes(bob,apple).\nwet(book).\nowns(frank,book).\nfriend(frank,carol).\nexcited(bob).\nfriend(alice,george).\nlikes(george,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is smooth.\nFor all Y, Z, if there exists V such that person Y is weak and person Z is tired and person Y is an enemy of person V, then person Y is a sibling of person Z.\nFor all X, if person X is excited and person X is excited, then person X is strong.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is soft, then object X is big.\n\nAnd the following facts:\nbook is smooth.\neve likes ball.\ncarol dislikes ball.\nalice is funny.\nfrank is a sibling of alice.\ncarol is an enemy of frank.\neve is a sibling of carol.\nbob is a friend of george.\nbob is tired.\nbob likes apple.\nbook is wet.\nfrank owns book.\nfrank is a friend of carol.\nbob is excited.\nalice is a friend of george.\ngeorge likes book.\n\nQUESTION:\nCould dave is excited explain book is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 103,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(book).",
    "c": "smooth(X) :- heavy(X).\nfriend(Z,Y) :- tired(Y), happy(Z).\nweak(X) :- happy(X), friend(X,B), brave(B).\nowns(X,Y) :- busy(X), small(Y).\nfunny(X) :- clever(X).\nheavy(book).\nowns(eve,pencil).\nfriend(dave,bob).\ntired(frank).\ncurious(frank).\ntired(bob).\nbored(carol).\ncurious(eve).\nlikes(eve,car).\nsad(frank).\nold(phone).\nfriend(carol,george).\nlikes(dave,pencil).\nenemy(george,frank).\nparent(bob,frank).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is smooth.\nFor all Y, Z, if person Y is tired and person Z is happy, then person Z is a friend of person Y.\nFor all X, if there exists B such that person X is happy and person X is a friend of person B and person B is brave, then person X is weak.\nFor all X, Y, if person X is busy and object Y is small, then person X owns object Y.\nFor all X, if person X is clever, then person X is funny.\n\nAnd the following facts:\nbook is heavy.\neve owns pencil.\ndave is a friend of bob.\nfrank is tired.\nfrank is curious.\nbob is tired.\ncarol is bored.\neve is curious.\neve likes car.\nfrank is sad.\nphone is old.\ncarol is a friend of george.\ndave likes pencil.\ngeorge is an enemy of frank.\nbob is a parent of frank.\ngeorge dislikes apple.\n\nQUESTION:\nIs book is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 104,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(george).",
    "c": "smooth(X) :- heavy(X).\nfriend(Z,Y) :- tired(Y), happy(Z).\nweak(X) :- happy(X), friend(X,B), brave(B).\nowns(X,Y) :- busy(X), small(Y).\nfunny(X) :- clever(X).\nheavy(book).\nowns(eve,pencil).\nfriend(dave,bob).\ntired(frank).\ncurious(frank).\ntired(bob).\nbored(carol).\ncurious(eve).\nlikes(eve,car).\nsad(frank).\nold(phone).\nfriend(carol,george).\nlikes(dave,pencil).\nenemy(george,frank).\nparent(bob,frank).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is smooth.\nFor all Y, Z, if person Y is tired and person Z is happy, then person Z is a friend of person Y.\nFor all X, if there exists B such that person X is happy and person X is a friend of person B and person B is brave, then person X is weak.\nFor all X, Y, if person X is busy and object Y is small, then person X owns object Y.\nFor all X, if person X is clever, then person X is funny.\n\nAnd the following facts:\nbook is heavy.\neve owns pencil.\ndave is a friend of bob.\nfrank is tired.\nfrank is curious.\nbob is tired.\ncarol is bored.\neve is curious.\neve likes car.\nfrank is sad.\nphone is old.\ncarol is a friend of george.\ndave likes pencil.\ngeorge is an enemy of frank.\nbob is a parent of frank.\ngeorge dislikes apple.\n\nQUESTION:\nIs george is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 105,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(book).",
    "c": "smooth(X) :- heavy(X).\nfriend(Z,Y) :- tired(Y), happy(Z).\nweak(X) :- happy(X), friend(X,B), brave(B).\nowns(X,Y) :- busy(X), small(Y).\nfunny(X) :- clever(X).\nsmooth(book).\nowns(eve,pencil).\nfriend(dave,bob).\ntired(frank).\ncurious(frank).\ntired(bob).\nbored(carol).\ncurious(eve).\nlikes(eve,car).\nsad(frank).\nold(phone).\nfriend(carol,george).\nlikes(dave,pencil).\nenemy(george,frank).\nparent(bob,frank).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is smooth.\nFor all Y, Z, if person Y is tired and person Z is happy, then person Z is a friend of person Y.\nFor all X, if there exists B such that person X is happy and person X is a friend of person B and person B is brave, then person X is weak.\nFor all X, Y, if person X is busy and object Y is small, then person X owns object Y.\nFor all X, if person X is clever, then person X is funny.\n\nAnd the following facts:\nbook is smooth.\neve owns pencil.\ndave is a friend of bob.\nfrank is tired.\nfrank is curious.\nbob is tired.\ncarol is bored.\neve is curious.\neve likes car.\nfrank is sad.\nphone is old.\ncarol is a friend of george.\ndave likes pencil.\ngeorge is an enemy of frank.\nbob is a parent of frank.\ngeorge dislikes apple.\n\nQUESTION:\nCould book is heavy explain book is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 106,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(pencil).",
    "c": "smooth(X) :- heavy(X).\nfriend(Z,Y) :- tired(Y), happy(Z).\nweak(X) :- happy(X), friend(X,B), brave(B).\nowns(X,Y) :- busy(X), small(Y).\nfunny(X) :- clever(X).\nsmooth(book).\nowns(eve,pencil).\nfriend(dave,bob).\ntired(frank).\ncurious(frank).\ntired(bob).\nbored(carol).\ncurious(eve).\nlikes(eve,car).\nsad(frank).\nold(phone).\nfriend(carol,george).\nlikes(dave,pencil).\nenemy(george,frank).\nparent(bob,frank).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is smooth.\nFor all Y, Z, if person Y is tired and person Z is happy, then person Z is a friend of person Y.\nFor all X, if there exists B such that person X is happy and person X is a friend of person B and person B is brave, then person X is weak.\nFor all X, Y, if person X is busy and object Y is small, then person X owns object Y.\nFor all X, if person X is clever, then person X is funny.\n\nAnd the following facts:\nbook is smooth.\neve owns pencil.\ndave is a friend of bob.\nfrank is tired.\nfrank is curious.\nbob is tired.\ncarol is bored.\neve is curious.\neve likes car.\nfrank is sad.\nphone is old.\ncarol is a friend of george.\ndave likes pencil.\ngeorge is an enemy of frank.\nbob is a parent of frank.\ngeorge dislikes apple.\n\nQUESTION:\nCould pencil is rough explain book is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 107,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "funny(bob).",
    "c": "funny(X) :- weak(X).\nrough(Y) :- hard(Y), likes(U,Y), strong(U).\nangry(X) :- busy(X).\nheavy(X) :- big(X), light(X).\nparent(X,Y) :- busy(X), hungry(Y).\nweak(bob).\nbig(pencil).\ntall(dave).\nexcited(alice).\nenemy(dave,carol).\nowns(frank,book).\nlight(pencil).\nsmooth(pencil).\nbusy(dave).\ncurious(bob).\nparent(bob,george).\nenemy(george,dave).\nhungry(bob).\nexcited(eve).\nparent(dave,eve).\nsibling(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is funny.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is strong, then object Y is rough.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if object X is big and object X is light, then object X is heavy.\nFor all X, Y, if person X is busy and person Y is hungry, then person X is a parent of person Y.\n\nAnd the following facts:\nbob is weak.\npencil is big.\ndave is tall.\nalice is excited.\ndave is an enemy of carol.\nfrank owns book.\npencil is light.\npencil is smooth.\ndave is busy.\nbob is curious.\nbob is a parent of george.\ngeorge is an enemy of dave.\nbob is hungry.\neve is excited.\ndave is a parent of eve.\ngeorge is a sibling of dave.\n\nQUESTION:\nIs bob is funny true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 108,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(frank).",
    "c": "funny(X) :- weak(X).\nrough(Y) :- hard(Y), likes(U,Y), strong(U).\nangry(X) :- busy(X).\nheavy(X) :- big(X), light(X).\nparent(X,Y) :- busy(X), hungry(Y).\nweak(bob).\nbig(pencil).\ntall(dave).\nexcited(alice).\nenemy(dave,carol).\nowns(frank,book).\nlight(pencil).\nsmooth(pencil).\nbusy(dave).\ncurious(bob).\nparent(bob,george).\nenemy(george,dave).\nhungry(bob).\nexcited(eve).\nparent(dave,eve).\nsibling(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is funny.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is strong, then object Y is rough.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if object X is big and object X is light, then object X is heavy.\nFor all X, Y, if person X is busy and person Y is hungry, then person X is a parent of person Y.\n\nAnd the following facts:\nbob is weak.\npencil is big.\ndave is tall.\nalice is excited.\ndave is an enemy of carol.\nfrank owns book.\npencil is light.\npencil is smooth.\ndave is busy.\nbob is curious.\nbob is a parent of george.\ngeorge is an enemy of dave.\nbob is hungry.\neve is excited.\ndave is a parent of eve.\ngeorge is a sibling of dave.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 109,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(bob).",
    "c": "funny(X) :- weak(X).\nrough(Y) :- hard(Y), likes(U,Y), strong(U).\nangry(X) :- busy(X).\nheavy(X) :- big(X), light(X).\nparent(X,Y) :- busy(X), hungry(Y).\nfunny(bob).\nbig(pencil).\ntall(dave).\nexcited(alice).\nenemy(dave,carol).\nowns(frank,book).\nlight(pencil).\nsmooth(pencil).\nbusy(dave).\ncurious(bob).\nparent(bob,george).\nenemy(george,dave).\nhungry(bob).\nexcited(eve).\nparent(dave,eve).\nsibling(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is funny.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is strong, then object Y is rough.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if object X is big and object X is light, then object X is heavy.\nFor all X, Y, if person X is busy and person Y is hungry, then person X is a parent of person Y.\n\nAnd the following facts:\nbob is funny.\npencil is big.\ndave is tall.\nalice is excited.\ndave is an enemy of carol.\nfrank owns book.\npencil is light.\npencil is smooth.\ndave is busy.\nbob is curious.\nbob is a parent of george.\ngeorge is an enemy of dave.\nbob is hungry.\neve is excited.\ndave is a parent of eve.\ngeorge is a sibling of dave.\n\nQUESTION:\nCould bob is weak explain bob is funny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 110,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(apple).",
    "c": "funny(X) :- weak(X).\nrough(Y) :- hard(Y), likes(U,Y), strong(U).\nangry(X) :- busy(X).\nheavy(X) :- big(X), light(X).\nparent(X,Y) :- busy(X), hungry(Y).\nfunny(bob).\nbig(pencil).\ntall(dave).\nexcited(alice).\nenemy(dave,carol).\nowns(frank,book).\nlight(pencil).\nsmooth(pencil).\nbusy(dave).\ncurious(bob).\nparent(bob,george).\nenemy(george,dave).\nhungry(bob).\nexcited(eve).\nparent(dave,eve).\nsibling(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is funny.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is strong, then object Y is rough.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if object X is big and object X is light, then object X is heavy.\nFor all X, Y, if person X is busy and person Y is hungry, then person X is a parent of person Y.\n\nAnd the following facts:\nbob is funny.\npencil is big.\ndave is tall.\nalice is excited.\ndave is an enemy of carol.\nfrank owns book.\npencil is light.\npencil is smooth.\ndave is busy.\nbob is curious.\nbob is a parent of george.\ngeorge is an enemy of dave.\nbob is hungry.\neve is excited.\ndave is a parent of eve.\ngeorge is a sibling of dave.\n\nQUESTION:\nCould apple is old explain bob is funny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 111,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(book).",
    "c": "light(X) :- smooth(X).\nhard(X) :- light(X).\nold(X) :- hard(X).\nsoft(X) :- old(X).\nrough(X) :- soft(X).\nsmooth(book).\nsibling(carol,alice).\nhungry(frank).\nfriend(carol,dave).\ndislikes(frank,apple).\nstrong(eve).\nsmall(car).\nsibling(alice,eve).\nbored(frank).\nfriend(frank,eve).\nlikes(george,ball).\nnew(ball).\nlikes(carol,pencil).\nparent(dave,bob).\nangry(alice).\nbusy(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is rough.\n\nAnd the following facts:\nbook is smooth.\ncarol is a sibling of alice.\nfrank is hungry.\ncarol is a friend of dave.\nfrank dislikes apple.\neve is strong.\ncar is small.\nalice is a sibling of eve.\nfrank is bored.\nfrank is a friend of eve.\ngeorge likes ball.\nball is new.\ncarol likes pencil.\ndave is a parent of bob.\nalice is angry.\nalice is busy.\n\nQUESTION:\nIs book is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 112,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "light(X) :- smooth(X).\nhard(X) :- light(X).\nold(X) :- hard(X).\nsoft(X) :- old(X).\nrough(X) :- soft(X).\nsmooth(book).\nsibling(carol,alice).\nhungry(frank).\nfriend(carol,dave).\ndislikes(frank,apple).\nstrong(eve).\nsmall(car).\nsibling(alice,eve).\nbored(frank).\nfriend(frank,eve).\nlikes(george,ball).\nnew(ball).\nlikes(carol,pencil).\nparent(dave,bob).\nangry(alice).\nbusy(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is rough.\n\nAnd the following facts:\nbook is smooth.\ncarol is a sibling of alice.\nfrank is hungry.\ncarol is a friend of dave.\nfrank dislikes apple.\neve is strong.\ncar is small.\nalice is a sibling of eve.\nfrank is bored.\nfrank is a friend of eve.\ngeorge likes ball.\nball is new.\ncarol likes pencil.\ndave is a parent of bob.\nalice is angry.\nalice is busy.\n\nQUESTION:\nIs pencil is clean true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 113,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(book).",
    "c": "light(X) :- smooth(X).\nhard(X) :- light(X).\nold(X) :- hard(X).\nsoft(X) :- old(X).\nrough(X) :- soft(X).\nrough(book).\nsibling(carol,alice).\nhungry(frank).\nfriend(carol,dave).\ndislikes(frank,apple).\nstrong(eve).\nsmall(car).\nsibling(alice,eve).\nbored(frank).\nfriend(frank,eve).\nlikes(george,ball).\nnew(ball).\nlikes(carol,pencil).\nparent(dave,bob).\nangry(alice).\nbusy(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is rough.\n\nAnd the following facts:\nbook is rough.\ncarol is a sibling of alice.\nfrank is hungry.\ncarol is a friend of dave.\nfrank dislikes apple.\neve is strong.\ncar is small.\nalice is a sibling of eve.\nfrank is bored.\nfrank is a friend of eve.\ngeorge likes ball.\nball is new.\ncarol likes pencil.\ndave is a parent of bob.\nalice is angry.\nalice is busy.\n\nQUESTION:\nCould book is smooth explain book is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 114,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "curious(george).",
    "c": "light(X) :- smooth(X).\nhard(X) :- light(X).\nold(X) :- hard(X).\nsoft(X) :- old(X).\nrough(X) :- soft(X).\nrough(book).\nsibling(carol,alice).\nhungry(frank).\nfriend(carol,dave).\ndislikes(frank,apple).\nstrong(eve).\nsmall(car).\nsibling(alice,eve).\nbored(frank).\nfriend(frank,eve).\nlikes(george,ball).\nnew(ball).\nlikes(carol,pencil).\nparent(dave,bob).\nangry(alice).\nbusy(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is rough.\n\nAnd the following facts:\nbook is rough.\ncarol is a sibling of alice.\nfrank is hungry.\ncarol is a friend of dave.\nfrank dislikes apple.\neve is strong.\ncar is small.\nalice is a sibling of eve.\nfrank is bored.\nfrank is a friend of eve.\ngeorge likes ball.\nball is new.\ncarol likes pencil.\ndave is a parent of bob.\nalice is angry.\nalice is busy.\n\nQUESTION:\nCould george is curious explain book is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 115,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(george).",
    "c": "excited(X) :- sad(X).\nhappy(X) :- excited(X).\nfriendly(X) :- happy(X).\ntired(X) :- friendly(X).\ntall(X) :- tired(X).\nsad(george).\nred(ball).\nred(phone).\nlikes(dave,pencil).\nfriend(frank,bob).\nsibling(bob,alice).\nparent(dave,alice).\nsibling(frank,eve).\nenemy(george,alice).\nenemy(carol,george).\nparent(frank,alice).\nowns(george,book).\nsibling(eve,frank).\nhot.\nparent(eve,george).\nsibling(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is tall.\n\nAnd the following facts:\ngeorge is sad.\nball is red.\nphone is red.\ndave likes pencil.\nfrank is a friend of bob.\nbob is a sibling of alice.\ndave is a parent of alice.\nfrank is a sibling of eve.\ngeorge is an enemy of alice.\ncarol is an enemy of george.\nfrank is a parent of alice.\ngeorge owns book.\neve is a sibling of frank.\nit is hot.\neve is a parent of george.\ngeorge is a sibling of frank.\n\nQUESTION:\nIs george is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 116,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(phone).",
    "c": "excited(X) :- sad(X).\nhappy(X) :- excited(X).\nfriendly(X) :- happy(X).\ntired(X) :- friendly(X).\ntall(X) :- tired(X).\nsad(george).\nred(ball).\nred(phone).\nlikes(dave,pencil).\nfriend(frank,bob).\nsibling(bob,alice).\nparent(dave,alice).\nsibling(frank,eve).\nenemy(george,alice).\nenemy(carol,george).\nparent(frank,alice).\nowns(george,book).\nsibling(eve,frank).\nhot.\nparent(eve,george).\nsibling(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is tall.\n\nAnd the following facts:\ngeorge is sad.\nball is red.\nphone is red.\ndave likes pencil.\nfrank is a friend of bob.\nbob is a sibling of alice.\ndave is a parent of alice.\nfrank is a sibling of eve.\ngeorge is an enemy of alice.\ncarol is an enemy of george.\nfrank is a parent of alice.\ngeorge owns book.\neve is a sibling of frank.\nit is hot.\neve is a parent of george.\ngeorge is a sibling of frank.\n\nQUESTION:\nIs phone is dirty true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 117,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(george).",
    "c": "excited(X) :- sad(X).\nhappy(X) :- excited(X).\nfriendly(X) :- happy(X).\ntired(X) :- friendly(X).\ntall(X) :- tired(X).\ntall(george).\nred(ball).\nred(phone).\nlikes(dave,pencil).\nfriend(frank,bob).\nsibling(bob,alice).\nparent(dave,alice).\nsibling(frank,eve).\nenemy(george,alice).\nenemy(carol,george).\nparent(frank,alice).\nowns(george,book).\nsibling(eve,frank).\nhot.\nparent(eve,george).\nsibling(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is tall.\n\nAnd the following facts:\ngeorge is tall.\nball is red.\nphone is red.\ndave likes pencil.\nfrank is a friend of bob.\nbob is a sibling of alice.\ndave is a parent of alice.\nfrank is a sibling of eve.\ngeorge is an enemy of alice.\ncarol is an enemy of george.\nfrank is a parent of alice.\ngeorge owns book.\neve is a sibling of frank.\nit is hot.\neve is a parent of george.\ngeorge is a sibling of frank.\n\nQUESTION:\nCould george is sad explain george is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 118,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(dave).",
    "c": "excited(X) :- sad(X).\nhappy(X) :- excited(X).\nfriendly(X) :- happy(X).\ntired(X) :- friendly(X).\ntall(X) :- tired(X).\ntall(george).\nred(ball).\nred(phone).\nlikes(dave,pencil).\nfriend(frank,bob).\nsibling(bob,alice).\nparent(dave,alice).\nsibling(frank,eve).\nenemy(george,alice).\nenemy(carol,george).\nparent(frank,alice).\nowns(george,book).\nsibling(eve,frank).\nhot.\nparent(eve,george).\nsibling(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is tall.\n\nAnd the following facts:\ngeorge is tall.\nball is red.\nphone is red.\ndave likes pencil.\nfrank is a friend of bob.\nbob is a sibling of alice.\ndave is a parent of alice.\nfrank is a sibling of eve.\ngeorge is an enemy of alice.\ncarol is an enemy of george.\nfrank is a parent of alice.\ngeorge owns book.\neve is a sibling of frank.\nit is hot.\neve is a parent of george.\ngeorge is a sibling of frank.\n\nQUESTION:\nCould dave is weak explain george is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 119,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "dirty(book).",
    "c": "soft(X) :- smooth(X).\nhard(X) :- soft(X).\nlight(X) :- hard(X).\nold(X) :- light(X).\ndirty(X) :- old(X).\nsmooth(book).\nred(phone).\nfriend(frank,george).\nhungry(carol).\nwet(car).\nfunny(eve).\ndislikes(frank,apple).\nlikes(carol,apple).\nlikes(george,phone).\ntall(george).\nenemy(eve,dave).\nowns(frank,car).\ncurious(george).\nnew(car).\nweak(frank).\nenemy(carol,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is dirty.\n\nAnd the following facts:\nbook is smooth.\nphone is red.\nfrank is a friend of george.\ncarol is hungry.\ncar is wet.\neve is funny.\nfrank dislikes apple.\ncarol likes apple.\ngeorge likes phone.\ngeorge is tall.\neve is an enemy of dave.\nfrank owns car.\ngeorge is curious.\ncar is new.\nfrank is weak.\ncarol is an enemy of frank.\n\nQUESTION:\nIs book is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 120,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(apple).",
    "c": "soft(X) :- smooth(X).\nhard(X) :- soft(X).\nlight(X) :- hard(X).\nold(X) :- light(X).\ndirty(X) :- old(X).\nsmooth(book).\nred(phone).\nfriend(frank,george).\nhungry(carol).\nwet(car).\nfunny(eve).\ndislikes(frank,apple).\nlikes(carol,apple).\nlikes(george,phone).\ntall(george).\nenemy(eve,dave).\nowns(frank,car).\ncurious(george).\nnew(car).\nweak(frank).\nenemy(carol,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is dirty.\n\nAnd the following facts:\nbook is smooth.\nphone is red.\nfrank is a friend of george.\ncarol is hungry.\ncar is wet.\neve is funny.\nfrank dislikes apple.\ncarol likes apple.\ngeorge likes phone.\ngeorge is tall.\neve is an enemy of dave.\nfrank owns car.\ngeorge is curious.\ncar is new.\nfrank is weak.\ncarol is an enemy of frank.\n\nQUESTION:\nIs apple is rough true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 121,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(book).",
    "c": "soft(X) :- smooth(X).\nhard(X) :- soft(X).\nlight(X) :- hard(X).\nold(X) :- light(X).\ndirty(X) :- old(X).\ndirty(book).\nred(phone).\nfriend(frank,george).\nhungry(carol).\nwet(car).\nfunny(eve).\ndislikes(frank,apple).\nlikes(carol,apple).\nlikes(george,phone).\ntall(george).\nenemy(eve,dave).\nowns(frank,car).\ncurious(george).\nnew(car).\nweak(frank).\nenemy(carol,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is dirty.\n\nAnd the following facts:\nbook is dirty.\nphone is red.\nfrank is a friend of george.\ncarol is hungry.\ncar is wet.\neve is funny.\nfrank dislikes apple.\ncarol likes apple.\ngeorge likes phone.\ngeorge is tall.\neve is an enemy of dave.\nfrank owns car.\ngeorge is curious.\ncar is new.\nfrank is weak.\ncarol is an enemy of frank.\n\nQUESTION:\nCould book is smooth explain book is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 122,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(carol).",
    "c": "soft(X) :- smooth(X).\nhard(X) :- soft(X).\nlight(X) :- hard(X).\nold(X) :- light(X).\ndirty(X) :- old(X).\ndirty(book).\nred(phone).\nfriend(frank,george).\nhungry(carol).\nwet(car).\nfunny(eve).\ndislikes(frank,apple).\nlikes(carol,apple).\nlikes(george,phone).\ntall(george).\nenemy(eve,dave).\nowns(frank,car).\ncurious(george).\nnew(car).\nweak(frank).\nenemy(carol,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is dirty.\n\nAnd the following facts:\nbook is dirty.\nphone is red.\nfrank is a friend of george.\ncarol is hungry.\ncar is wet.\neve is funny.\nfrank dislikes apple.\ncarol likes apple.\ngeorge likes phone.\ngeorge is tall.\neve is an enemy of dave.\nfrank owns car.\ngeorge is curious.\ncar is new.\nfrank is weak.\ncarol is an enemy of frank.\n\nQUESTION:\nCould carol is weak explain book is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 123,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(george).",
    "c": "bored(X) :- tall(X).\nclever(X) :- bored(X).\nfunny(X) :- clever(X).\nbrave(X) :- funny(X).\nbusy(X) :- brave(X).\ntall(george).\nlikes(carol,pencil).\nhard(pencil).\nparent(frank,dave).\nenemy(carol,dave).\nenemy(bob,dave).\nexcited(george).\nfriend(bob,eve).\nowns(alice,phone).\nold(car).\nlikes(bob,ball).\nparent(frank,bob).\ndislikes(george,apple).\ndislikes(dave,phone).\nsibling(george,frank).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\n\nAnd the following facts:\ngeorge is tall.\ncarol likes pencil.\npencil is hard.\nfrank is a parent of dave.\ncarol is an enemy of dave.\nbob is an enemy of dave.\ngeorge is excited.\nbob is a friend of eve.\nalice owns phone.\ncar is old.\nbob likes ball.\nfrank is a parent of bob.\ngeorge dislikes apple.\ndave dislikes phone.\ngeorge is a sibling of frank.\nbook is wet.\n\nQUESTION:\nIs george is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 124,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(frank).",
    "c": "bored(X) :- tall(X).\nclever(X) :- bored(X).\nfunny(X) :- clever(X).\nbrave(X) :- funny(X).\nbusy(X) :- brave(X).\ntall(george).\nlikes(carol,pencil).\nhard(pencil).\nparent(frank,dave).\nenemy(carol,dave).\nenemy(bob,dave).\nexcited(george).\nfriend(bob,eve).\nowns(alice,phone).\nold(car).\nlikes(bob,ball).\nparent(frank,bob).\ndislikes(george,apple).\ndislikes(dave,phone).\nsibling(george,frank).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\n\nAnd the following facts:\ngeorge is tall.\ncarol likes pencil.\npencil is hard.\nfrank is a parent of dave.\ncarol is an enemy of dave.\nbob is an enemy of dave.\ngeorge is excited.\nbob is a friend of eve.\nalice owns phone.\ncar is old.\nbob likes ball.\nfrank is a parent of bob.\ngeorge dislikes apple.\ndave dislikes phone.\ngeorge is a sibling of frank.\nbook is wet.\n\nQUESTION:\nIs frank is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 125,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(george).",
    "c": "bored(X) :- tall(X).\nclever(X) :- bored(X).\nfunny(X) :- clever(X).\nbrave(X) :- funny(X).\nbusy(X) :- brave(X).\nbusy(george).\nlikes(carol,pencil).\nhard(pencil).\nparent(frank,dave).\nenemy(carol,dave).\nenemy(bob,dave).\nexcited(george).\nfriend(bob,eve).\nowns(alice,phone).\nold(car).\nlikes(bob,ball).\nparent(frank,bob).\ndislikes(george,apple).\ndislikes(dave,phone).\nsibling(george,frank).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\n\nAnd the following facts:\ngeorge is busy.\ncarol likes pencil.\npencil is hard.\nfrank is a parent of dave.\ncarol is an enemy of dave.\nbob is an enemy of dave.\ngeorge is excited.\nbob is a friend of eve.\nalice owns phone.\ncar is old.\nbob likes ball.\nfrank is a parent of bob.\ngeorge dislikes apple.\ndave dislikes phone.\ngeorge is a sibling of frank.\nbook is wet.\n\nQUESTION:\nCould george is tall explain george is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 126,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "angry(carol).",
    "c": "bored(X) :- tall(X).\nclever(X) :- bored(X).\nfunny(X) :- clever(X).\nbrave(X) :- funny(X).\nbusy(X) :- brave(X).\nbusy(george).\nlikes(carol,pencil).\nhard(pencil).\nparent(frank,dave).\nenemy(carol,dave).\nenemy(bob,dave).\nexcited(george).\nfriend(bob,eve).\nowns(alice,phone).\nold(car).\nlikes(bob,ball).\nparent(frank,bob).\ndislikes(george,apple).\ndislikes(dave,phone).\nsibling(george,frank).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\n\nAnd the following facts:\ngeorge is busy.\ncarol likes pencil.\npencil is hard.\nfrank is a parent of dave.\ncarol is an enemy of dave.\nbob is an enemy of dave.\ngeorge is excited.\nbob is a friend of eve.\nalice owns phone.\ncar is old.\nbob likes ball.\nfrank is a parent of bob.\ngeorge dislikes apple.\ndave dislikes phone.\ngeorge is a sibling of frank.\nbook is wet.\n\nQUESTION:\nCould carol is angry explain george is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 127,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(dave).",
    "c": "hungry(X) :- sad(X).\nweak(X) :- friendly(X), red(E).\nowns(X,Y) :- brave(X), light(Y).\nhard(X) :- dirty(X).\nred(X) :- new(X).\nsad(dave).\nfriend(eve,alice).\nfriend(dave,george).\nsmall(apple).\nlikes(eve,pencil).\nlikes(alice,phone).\nenemy(eve,george).\nlikes(dave,car).\nlikes(frank,apple).\nenemy(eve,frank).\nclever(bob).\nparent(dave,carol).\nsmooth(apple).\nlikes(carol,apple).\ndislikes(george,ball).\nsibling(carol,alice).\nparent(george,bob).\nbig(pencil).\nwet(pencil).\ndislikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if there exists E such that person X is friendly and object E is red, then person X is weak.\nFor all X, Y, if person X is brave and object Y is light, then person X owns object Y.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is new, then object X is red.\n\nAnd the following facts:\ndave is sad.\neve is a friend of alice.\ndave is a friend of george.\napple is small.\neve likes pencil.\nalice likes phone.\neve is an enemy of george.\ndave likes car.\nfrank likes apple.\neve is an enemy of frank.\nbob is clever.\ndave is a parent of carol.\napple is smooth.\ncarol likes apple.\ngeorge dislikes ball.\ncarol is a sibling of alice.\ngeorge is a parent of bob.\npencil is big.\npencil is wet.\nfrank dislikes ball.\n\nQUESTION:\nIs dave is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 128,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(frank).",
    "c": "hungry(X) :- sad(X).\nweak(X) :- friendly(X), red(E).\nowns(X,Y) :- brave(X), light(Y).\nhard(X) :- dirty(X).\nred(X) :- new(X).\nsad(dave).\nfriend(eve,alice).\nfriend(dave,george).\nsmall(apple).\nlikes(eve,pencil).\nlikes(alice,phone).\nenemy(eve,george).\nlikes(dave,car).\nlikes(frank,apple).\nenemy(eve,frank).\nclever(bob).\nparent(dave,carol).\nsmooth(apple).\nlikes(carol,apple).\ndislikes(george,ball).\nsibling(carol,alice).\nparent(george,bob).\nbig(pencil).\nwet(pencil).\ndislikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if there exists E such that person X is friendly and object E is red, then person X is weak.\nFor all X, Y, if person X is brave and object Y is light, then person X owns object Y.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is new, then object X is red.\n\nAnd the following facts:\ndave is sad.\neve is a friend of alice.\ndave is a friend of george.\napple is small.\neve likes pencil.\nalice likes phone.\neve is an enemy of george.\ndave likes car.\nfrank likes apple.\neve is an enemy of frank.\nbob is clever.\ndave is a parent of carol.\napple is smooth.\ncarol likes apple.\ngeorge dislikes ball.\ncarol is a sibling of alice.\ngeorge is a parent of bob.\npencil is big.\npencil is wet.\nfrank dislikes ball.\n\nQUESTION:\nIs frank is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 129,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(dave).",
    "c": "hungry(X) :- sad(X).\nweak(X) :- friendly(X), red(E).\nowns(X,Y) :- brave(X), light(Y).\nhard(X) :- dirty(X).\nred(X) :- new(X).\nhungry(dave).\nfriend(eve,alice).\nfriend(dave,george).\nsmall(apple).\nlikes(eve,pencil).\nlikes(alice,phone).\nenemy(eve,george).\nlikes(dave,car).\nlikes(frank,apple).\nenemy(eve,frank).\nclever(bob).\nparent(dave,carol).\nsmooth(apple).\nlikes(carol,apple).\ndislikes(george,ball).\nsibling(carol,alice).\nparent(george,bob).\nbig(pencil).\nwet(pencil).\ndislikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if there exists E such that person X is friendly and object E is red, then person X is weak.\nFor all X, Y, if person X is brave and object Y is light, then person X owns object Y.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is new, then object X is red.\n\nAnd the following facts:\ndave is hungry.\neve is a friend of alice.\ndave is a friend of george.\napple is small.\neve likes pencil.\nalice likes phone.\neve is an enemy of george.\ndave likes car.\nfrank likes apple.\neve is an enemy of frank.\nbob is clever.\ndave is a parent of carol.\napple is smooth.\ncarol likes apple.\ngeorge dislikes ball.\ncarol is a sibling of alice.\ngeorge is a parent of bob.\npencil is big.\npencil is wet.\nfrank dislikes ball.\n\nQUESTION:\nCould dave is sad explain dave is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 130,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "wet(car).",
    "c": "hungry(X) :- sad(X).\nweak(X) :- friendly(X), red(E).\nowns(X,Y) :- brave(X), light(Y).\nhard(X) :- dirty(X).\nred(X) :- new(X).\nhungry(dave).\nfriend(eve,alice).\nfriend(dave,george).\nsmall(apple).\nlikes(eve,pencil).\nlikes(alice,phone).\nenemy(eve,george).\nlikes(dave,car).\nlikes(frank,apple).\nenemy(eve,frank).\nclever(bob).\nparent(dave,carol).\nsmooth(apple).\nlikes(carol,apple).\ndislikes(george,ball).\nsibling(carol,alice).\nparent(george,bob).\nbig(pencil).\nwet(pencil).\ndislikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if there exists E such that person X is friendly and object E is red, then person X is weak.\nFor all X, Y, if person X is brave and object Y is light, then person X owns object Y.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is new, then object X is red.\n\nAnd the following facts:\ndave is hungry.\neve is a friend of alice.\ndave is a friend of george.\napple is small.\neve likes pencil.\nalice likes phone.\neve is an enemy of george.\ndave likes car.\nfrank likes apple.\neve is an enemy of frank.\nbob is clever.\ndave is a parent of carol.\napple is smooth.\ncarol likes apple.\ngeorge dislikes ball.\ncarol is a sibling of alice.\ngeorge is a parent of bob.\npencil is big.\npencil is wet.\nfrank dislikes ball.\n\nQUESTION:\nCould car is wet explain dave is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 131,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(apple).",
    "c": "new(X) :- small(X).\nbored(X) :- brave(X), busy(F).\nhungry(X) :- brave(X).\nclean(X) :- red(X).\ndirty(X) :- light(X).\nsmall(apple).\nfriend(george,bob).\nlikes(carol,car).\nclean(phone).\nowns(alice,book).\nlikes(bob,car).\nfunny(bob).\nparent(eve,bob).\nfriend(dave,bob).\nparent(carol,bob).\ntired(dave).\nparent(eve,alice).\nlikes(frank,car).\nred(phone).\nexcited(eve).\nenemy(carol,frank).\nparent(george,carol).\ncurious(bob).\nbrave(frank).\nsibling(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is new.\nFor all X, if there exists F such that person X is brave and person F is busy, then person X is bored.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is light, then object X is dirty.\n\nAnd the following facts:\napple is small.\ngeorge is a friend of bob.\ncarol likes car.\nphone is clean.\nalice owns book.\nbob likes car.\nbob is funny.\neve is a parent of bob.\ndave is a friend of bob.\ncarol is a parent of bob.\ndave is tired.\neve is a parent of alice.\nfrank likes car.\nphone is red.\neve is excited.\ncarol is an enemy of frank.\ngeorge is a parent of carol.\nbob is curious.\nfrank is brave.\ncarol is a sibling of bob.\n\nQUESTION:\nIs apple is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 132,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "new(X) :- small(X).\nbored(X) :- brave(X), busy(F).\nhungry(X) :- brave(X).\nclean(X) :- red(X).\ndirty(X) :- light(X).\nsmall(apple).\nfriend(george,bob).\nlikes(carol,car).\nclean(phone).\nowns(alice,book).\nlikes(bob,car).\nfunny(bob).\nparent(eve,bob).\nfriend(dave,bob).\nparent(carol,bob).\ntired(dave).\nparent(eve,alice).\nlikes(frank,car).\nred(phone).\nexcited(eve).\nenemy(carol,frank).\nparent(george,carol).\ncurious(bob).\nbrave(frank).\nsibling(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is new.\nFor all X, if there exists F such that person X is brave and person F is busy, then person X is bored.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is light, then object X is dirty.\n\nAnd the following facts:\napple is small.\ngeorge is a friend of bob.\ncarol likes car.\nphone is clean.\nalice owns book.\nbob likes car.\nbob is funny.\neve is a parent of bob.\ndave is a friend of bob.\ncarol is a parent of bob.\ndave is tired.\neve is a parent of alice.\nfrank likes car.\nphone is red.\neve is excited.\ncarol is an enemy of frank.\ngeorge is a parent of carol.\nbob is curious.\nfrank is brave.\ncarol is a sibling of bob.\n\nQUESTION:\nIs phone is rough true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 133,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(apple).",
    "c": "new(X) :- small(X).\nbored(X) :- brave(X), busy(F).\nhungry(X) :- brave(X).\nclean(X) :- red(X).\ndirty(X) :- light(X).\nnew(apple).\nfriend(george,bob).\nlikes(carol,car).\nclean(phone).\nowns(alice,book).\nlikes(bob,car).\nfunny(bob).\nparent(eve,bob).\nfriend(dave,bob).\nparent(carol,bob).\ntired(dave).\nparent(eve,alice).\nlikes(frank,car).\nred(phone).\nexcited(eve).\nenemy(carol,frank).\nparent(george,carol).\ncurious(bob).\nbrave(frank).\nsibling(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is new.\nFor all X, if there exists F such that person X is brave and person F is busy, then person X is bored.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is light, then object X is dirty.\n\nAnd the following facts:\napple is new.\ngeorge is a friend of bob.\ncarol likes car.\nphone is clean.\nalice owns book.\nbob likes car.\nbob is funny.\neve is a parent of bob.\ndave is a friend of bob.\ncarol is a parent of bob.\ndave is tired.\neve is a parent of alice.\nfrank likes car.\nphone is red.\neve is excited.\ncarol is an enemy of frank.\ngeorge is a parent of carol.\nbob is curious.\nfrank is brave.\ncarol is a sibling of bob.\n\nQUESTION:\nCould apple is small explain apple is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 134,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(pencil).",
    "c": "new(X) :- small(X).\nbored(X) :- brave(X), busy(F).\nhungry(X) :- brave(X).\nclean(X) :- red(X).\ndirty(X) :- light(X).\nnew(apple).\nfriend(george,bob).\nlikes(carol,car).\nclean(phone).\nowns(alice,book).\nlikes(bob,car).\nfunny(bob).\nparent(eve,bob).\nfriend(dave,bob).\nparent(carol,bob).\ntired(dave).\nparent(eve,alice).\nlikes(frank,car).\nred(phone).\nexcited(eve).\nenemy(carol,frank).\nparent(george,carol).\ncurious(bob).\nbrave(frank).\nsibling(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is new.\nFor all X, if there exists F such that person X is brave and person F is busy, then person X is bored.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is light, then object X is dirty.\n\nAnd the following facts:\napple is new.\ngeorge is a friend of bob.\ncarol likes car.\nphone is clean.\nalice owns book.\nbob likes car.\nbob is funny.\neve is a parent of bob.\ndave is a friend of bob.\ncarol is a parent of bob.\ndave is tired.\neve is a parent of alice.\nfrank likes car.\nphone is red.\neve is excited.\ncarol is an enemy of frank.\ngeorge is a parent of carol.\nbob is curious.\nfrank is brave.\ncarol is a sibling of bob.\n\nQUESTION:\nCould pencil is big explain apple is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 135,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "brave(X) :- calm(X).\ndirty(Y) :- small(Y), likes(A,Y), excited(A).\nlikes(X,Y) :- strong(X), clean(Y).\nexcited(X) :- tired(X).\nclean(X) :- hard(X).\ncalm(eve).\nowns(eve,book).\nnew(book).\ndislikes(carol,book).\nsibling(bob,frank).\nbusy(bob).\nlikes(alice,ball).\nstrong(dave).\ntall(frank).\nhappy(george).\ndislikes(frank,car).\ndislikes(carol,apple).\nold(car).\nlikes(dave,car).\nenemy(dave,eve).\ndislikes(eve,car).\nparent(carol,dave).\nenemy(eve,george).\nenemy(alice,eve).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is brave.\nFor all Y, if there exists A such that object Y is small and person A likes object Y and person A is excited, then object Y is dirty.\nFor all X, Y, if person X is strong and object Y is clean, then person X likes object Y.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if object X is hard, then object X is clean.\n\nAnd the following facts:\neve is calm.\neve owns book.\nbook is new.\ncarol dislikes book.\nbob is a sibling of frank.\nbob is busy.\nalice likes ball.\ndave is strong.\nfrank is tall.\ngeorge is happy.\nfrank dislikes car.\ncarol dislikes apple.\ncar is old.\ndave likes car.\ndave is an enemy of eve.\neve dislikes car.\ncarol is a parent of dave.\neve is an enemy of george.\nalice is an enemy of eve.\ngeorge dislikes phone.\n\nQUESTION:\nIs eve is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 136,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(pencil).",
    "c": "brave(X) :- calm(X).\ndirty(Y) :- small(Y), likes(A,Y), excited(A).\nlikes(X,Y) :- strong(X), clean(Y).\nexcited(X) :- tired(X).\nclean(X) :- hard(X).\ncalm(eve).\nowns(eve,book).\nnew(book).\ndislikes(carol,book).\nsibling(bob,frank).\nbusy(bob).\nlikes(alice,ball).\nstrong(dave).\ntall(frank).\nhappy(george).\ndislikes(frank,car).\ndislikes(carol,apple).\nold(car).\nlikes(dave,car).\nenemy(dave,eve).\ndislikes(eve,car).\nparent(carol,dave).\nenemy(eve,george).\nenemy(alice,eve).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is brave.\nFor all Y, if there exists A such that object Y is small and person A likes object Y and person A is excited, then object Y is dirty.\nFor all X, Y, if person X is strong and object Y is clean, then person X likes object Y.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if object X is hard, then object X is clean.\n\nAnd the following facts:\neve is calm.\neve owns book.\nbook is new.\ncarol dislikes book.\nbob is a sibling of frank.\nbob is busy.\nalice likes ball.\ndave is strong.\nfrank is tall.\ngeorge is happy.\nfrank dislikes car.\ncarol dislikes apple.\ncar is old.\ndave likes car.\ndave is an enemy of eve.\neve dislikes car.\ncarol is a parent of dave.\neve is an enemy of george.\nalice is an enemy of eve.\ngeorge dislikes phone.\n\nQUESTION:\nIs pencil is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 137,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(eve).",
    "c": "brave(X) :- calm(X).\ndirty(Y) :- small(Y), likes(A,Y), excited(A).\nlikes(X,Y) :- strong(X), clean(Y).\nexcited(X) :- tired(X).\nclean(X) :- hard(X).\nbrave(eve).\nowns(eve,book).\nnew(book).\ndislikes(carol,book).\nsibling(bob,frank).\nbusy(bob).\nlikes(alice,ball).\nstrong(dave).\ntall(frank).\nhappy(george).\ndislikes(frank,car).\ndislikes(carol,apple).\nold(car).\nlikes(dave,car).\nenemy(dave,eve).\ndislikes(eve,car).\nparent(carol,dave).\nenemy(eve,george).\nenemy(alice,eve).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is brave.\nFor all Y, if there exists A such that object Y is small and person A likes object Y and person A is excited, then object Y is dirty.\nFor all X, Y, if person X is strong and object Y is clean, then person X likes object Y.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if object X is hard, then object X is clean.\n\nAnd the following facts:\neve is brave.\neve owns book.\nbook is new.\ncarol dislikes book.\nbob is a sibling of frank.\nbob is busy.\nalice likes ball.\ndave is strong.\nfrank is tall.\ngeorge is happy.\nfrank dislikes car.\ncarol dislikes apple.\ncar is old.\ndave likes car.\ndave is an enemy of eve.\neve dislikes car.\ncarol is a parent of dave.\neve is an enemy of george.\nalice is an enemy of eve.\ngeorge dislikes phone.\n\nQUESTION:\nCould eve is calm explain eve is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 138,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(frank).",
    "c": "brave(X) :- calm(X).\ndirty(Y) :- small(Y), likes(A,Y), excited(A).\nlikes(X,Y) :- strong(X), clean(Y).\nexcited(X) :- tired(X).\nclean(X) :- hard(X).\nbrave(eve).\nowns(eve,book).\nnew(book).\ndislikes(carol,book).\nsibling(bob,frank).\nbusy(bob).\nlikes(alice,ball).\nstrong(dave).\ntall(frank).\nhappy(george).\ndislikes(frank,car).\ndislikes(carol,apple).\nold(car).\nlikes(dave,car).\nenemy(dave,eve).\ndislikes(eve,car).\nparent(carol,dave).\nenemy(eve,george).\nenemy(alice,eve).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is brave.\nFor all Y, if there exists A such that object Y is small and person A likes object Y and person A is excited, then object Y is dirty.\nFor all X, Y, if person X is strong and object Y is clean, then person X likes object Y.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if object X is hard, then object X is clean.\n\nAnd the following facts:\neve is brave.\neve owns book.\nbook is new.\ncarol dislikes book.\nbob is a sibling of frank.\nbob is busy.\nalice likes ball.\ndave is strong.\nfrank is tall.\ngeorge is happy.\nfrank dislikes car.\ncarol dislikes apple.\ncar is old.\ndave likes car.\ndave is an enemy of eve.\neve dislikes car.\ncarol is a parent of dave.\neve is an enemy of george.\nalice is an enemy of eve.\ngeorge dislikes phone.\n\nQUESTION:\nCould frank is clever explain eve is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 139,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(pencil).",
    "c": "heavy(X) :- light(X).\ntall(X) :- bored(X).\nparent(X,Z) :- funny(Z), hungry(X), likes(X,V).\nweak(X) :- tall(X).\ncalm(X) :- bored(X), happy(X).\nlight(pencil).\nhappy(george).\nparent(carol,alice).\nlikes(carol,pencil).\nclever(george).\nparent(eve,carol).\ncalm(carol).\nparent(george,carol).\nowns(alice,pencil).\nsibling(frank,bob).\nweak(george).\nfriend(dave,bob).\nlikes(carol,book).\nexcited(carol).\nfriend(dave,alice).\nowns(dave,book).\nsad(carol).\nfriend(bob,dave).\nnew(book).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is heavy.\nFor all X, if person X is bored, then person X is tall.\nFor all X, Z, if there exists V such that person Z is funny and person X is hungry and person X likes object V, then person X is a parent of person Z.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is bored and person X is happy, then person X is calm.\n\nAnd the following facts:\npencil is light.\ngeorge is happy.\ncarol is a parent of alice.\ncarol likes pencil.\ngeorge is clever.\neve is a parent of carol.\ncarol is calm.\ngeorge is a parent of carol.\nalice owns pencil.\nfrank is a sibling of bob.\ngeorge is weak.\ndave is a friend of bob.\ncarol likes book.\ncarol is excited.\ndave is a friend of alice.\ndave owns book.\ncarol is sad.\nbob is a friend of dave.\nbook is new.\ndave dislikes car.\n\nQUESTION:\nIs pencil is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 140,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(carol).",
    "c": "heavy(X) :- light(X).\ntall(X) :- bored(X).\nparent(X,Z) :- funny(Z), hungry(X), likes(X,V).\nweak(X) :- tall(X).\ncalm(X) :- bored(X), happy(X).\nlight(pencil).\nhappy(george).\nparent(carol,alice).\nlikes(carol,pencil).\nclever(george).\nparent(eve,carol).\ncalm(carol).\nparent(george,carol).\nowns(alice,pencil).\nsibling(frank,bob).\nweak(george).\nfriend(dave,bob).\nlikes(carol,book).\nexcited(carol).\nfriend(dave,alice).\nowns(dave,book).\nsad(carol).\nfriend(bob,dave).\nnew(book).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is heavy.\nFor all X, if person X is bored, then person X is tall.\nFor all X, Z, if there exists V such that person Z is funny and person X is hungry and person X likes object V, then person X is a parent of person Z.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is bored and person X is happy, then person X is calm.\n\nAnd the following facts:\npencil is light.\ngeorge is happy.\ncarol is a parent of alice.\ncarol likes pencil.\ngeorge is clever.\neve is a parent of carol.\ncarol is calm.\ngeorge is a parent of carol.\nalice owns pencil.\nfrank is a sibling of bob.\ngeorge is weak.\ndave is a friend of bob.\ncarol likes book.\ncarol is excited.\ndave is a friend of alice.\ndave owns book.\ncarol is sad.\nbob is a friend of dave.\nbook is new.\ndave dislikes car.\n\nQUESTION:\nIs carol is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 141,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(pencil).",
    "c": "heavy(X) :- light(X).\ntall(X) :- bored(X).\nparent(X,Z) :- funny(Z), hungry(X), likes(X,V).\nweak(X) :- tall(X).\ncalm(X) :- bored(X), happy(X).\nheavy(pencil).\nhappy(george).\nparent(carol,alice).\nlikes(carol,pencil).\nclever(george).\nparent(eve,carol).\ncalm(carol).\nparent(george,carol).\nowns(alice,pencil).\nsibling(frank,bob).\nweak(george).\nfriend(dave,bob).\nlikes(carol,book).\nexcited(carol).\nfriend(dave,alice).\nowns(dave,book).\nsad(carol).\nfriend(bob,dave).\nnew(book).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is heavy.\nFor all X, if person X is bored, then person X is tall.\nFor all X, Z, if there exists V such that person Z is funny and person X is hungry and person X likes object V, then person X is a parent of person Z.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is bored and person X is happy, then person X is calm.\n\nAnd the following facts:\npencil is heavy.\ngeorge is happy.\ncarol is a parent of alice.\ncarol likes pencil.\ngeorge is clever.\neve is a parent of carol.\ncarol is calm.\ngeorge is a parent of carol.\nalice owns pencil.\nfrank is a sibling of bob.\ngeorge is weak.\ndave is a friend of bob.\ncarol likes book.\ncarol is excited.\ndave is a friend of alice.\ndave owns book.\ncarol is sad.\nbob is a friend of dave.\nbook is new.\ndave dislikes car.\n\nQUESTION:\nCould pencil is light explain pencil is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 142,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(dave).",
    "c": "heavy(X) :- light(X).\ntall(X) :- bored(X).\nparent(X,Z) :- funny(Z), hungry(X), likes(X,V).\nweak(X) :- tall(X).\ncalm(X) :- bored(X), happy(X).\nheavy(pencil).\nhappy(george).\nparent(carol,alice).\nlikes(carol,pencil).\nclever(george).\nparent(eve,carol).\ncalm(carol).\nparent(george,carol).\nowns(alice,pencil).\nsibling(frank,bob).\nweak(george).\nfriend(dave,bob).\nlikes(carol,book).\nexcited(carol).\nfriend(dave,alice).\nowns(dave,book).\nsad(carol).\nfriend(bob,dave).\nnew(book).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is heavy.\nFor all X, if person X is bored, then person X is tall.\nFor all X, Z, if there exists V such that person Z is funny and person X is hungry and person X likes object V, then person X is a parent of person Z.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is bored and person X is happy, then person X is calm.\n\nAnd the following facts:\npencil is heavy.\ngeorge is happy.\ncarol is a parent of alice.\ncarol likes pencil.\ngeorge is clever.\neve is a parent of carol.\ncarol is calm.\ngeorge is a parent of carol.\nalice owns pencil.\nfrank is a sibling of bob.\ngeorge is weak.\ndave is a friend of bob.\ncarol likes book.\ncarol is excited.\ndave is a friend of alice.\ndave owns book.\ncarol is sad.\nbob is a friend of dave.\nbook is new.\ndave dislikes car.\n\nQUESTION:\nCould dave is sad explain pencil is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 143,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "friendly(george).",
    "c": "curious(X) :- happy(X).\ncalm(X) :- curious(X).\nangry(X) :- calm(X).\nbusy(X) :- angry(X).\nfriendly(X) :- busy(X).\nhappy(george).\nenemy(frank,eve).\ndislikes(george,ball).\nparent(carol,eve).\nparent(bob,dave).\nsibling(carol,bob).\nowns(eve,pencil).\ndislikes(carol,apple).\nbored(frank).\ndirty(car).\nsibling(alice,george).\nlikes(dave,pencil).\nstrong(frank).\nsibling(dave,eve).\nenemy(alice,george).\nowns(george,car).\nlikes(frank,book).\nenemy(dave,bob).\nfriend(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\n\nAnd the following facts:\ngeorge is happy.\nfrank is an enemy of eve.\ngeorge dislikes ball.\ncarol is a parent of eve.\nbob is a parent of dave.\ncarol is a sibling of bob.\neve owns pencil.\ncarol dislikes apple.\nfrank is bored.\ncar is dirty.\nalice is a sibling of george.\ndave likes pencil.\nfrank is strong.\ndave is a sibling of eve.\nalice is an enemy of george.\ngeorge owns car.\nfrank likes book.\ndave is an enemy of bob.\nalice is a friend of dave.\ncarol likes book.\n\nQUESTION:\nIs george is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 144,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "calm(alice).",
    "c": "curious(X) :- happy(X).\ncalm(X) :- curious(X).\nangry(X) :- calm(X).\nbusy(X) :- angry(X).\nfriendly(X) :- busy(X).\nhappy(george).\nenemy(frank,eve).\ndislikes(george,ball).\nparent(carol,eve).\nparent(bob,dave).\nsibling(carol,bob).\nowns(eve,pencil).\ndislikes(carol,apple).\nbored(frank).\ndirty(car).\nsibling(alice,george).\nlikes(dave,pencil).\nstrong(frank).\nsibling(dave,eve).\nenemy(alice,george).\nowns(george,car).\nlikes(frank,book).\nenemy(dave,bob).\nfriend(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\n\nAnd the following facts:\ngeorge is happy.\nfrank is an enemy of eve.\ngeorge dislikes ball.\ncarol is a parent of eve.\nbob is a parent of dave.\ncarol is a sibling of bob.\neve owns pencil.\ncarol dislikes apple.\nfrank is bored.\ncar is dirty.\nalice is a sibling of george.\ndave likes pencil.\nfrank is strong.\ndave is a sibling of eve.\nalice is an enemy of george.\ngeorge owns car.\nfrank likes book.\ndave is an enemy of bob.\nalice is a friend of dave.\ncarol likes book.\n\nQUESTION:\nIs alice is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 145,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(george).",
    "c": "curious(X) :- happy(X).\ncalm(X) :- curious(X).\nangry(X) :- calm(X).\nbusy(X) :- angry(X).\nfriendly(X) :- busy(X).\nfriendly(george).\nenemy(frank,eve).\ndislikes(george,ball).\nparent(carol,eve).\nparent(bob,dave).\nsibling(carol,bob).\nowns(eve,pencil).\ndislikes(carol,apple).\nbored(frank).\ndirty(car).\nsibling(alice,george).\nlikes(dave,pencil).\nstrong(frank).\nsibling(dave,eve).\nenemy(alice,george).\nowns(george,car).\nlikes(frank,book).\nenemy(dave,bob).\nfriend(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\n\nAnd the following facts:\ngeorge is friendly.\nfrank is an enemy of eve.\ngeorge dislikes ball.\ncarol is a parent of eve.\nbob is a parent of dave.\ncarol is a sibling of bob.\neve owns pencil.\ncarol dislikes apple.\nfrank is bored.\ncar is dirty.\nalice is a sibling of george.\ndave likes pencil.\nfrank is strong.\ndave is a sibling of eve.\nalice is an enemy of george.\ngeorge owns car.\nfrank likes book.\ndave is an enemy of bob.\nalice is a friend of dave.\ncarol likes book.\n\nQUESTION:\nCould george is happy explain george is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 146,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "small(book).",
    "c": "curious(X) :- happy(X).\ncalm(X) :- curious(X).\nangry(X) :- calm(X).\nbusy(X) :- angry(X).\nfriendly(X) :- busy(X).\nfriendly(george).\nenemy(frank,eve).\ndislikes(george,ball).\nparent(carol,eve).\nparent(bob,dave).\nsibling(carol,bob).\nowns(eve,pencil).\ndislikes(carol,apple).\nbored(frank).\ndirty(car).\nsibling(alice,george).\nlikes(dave,pencil).\nstrong(frank).\nsibling(dave,eve).\nenemy(alice,george).\nowns(george,car).\nlikes(frank,book).\nenemy(dave,bob).\nfriend(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\n\nAnd the following facts:\ngeorge is friendly.\nfrank is an enemy of eve.\ngeorge dislikes ball.\ncarol is a parent of eve.\nbob is a parent of dave.\ncarol is a sibling of bob.\neve owns pencil.\ncarol dislikes apple.\nfrank is bored.\ncar is dirty.\nalice is a sibling of george.\ndave likes pencil.\nfrank is strong.\ndave is a sibling of eve.\nalice is an enemy of george.\ngeorge owns car.\nfrank likes book.\ndave is an enemy of bob.\nalice is a friend of dave.\ncarol likes book.\n\nQUESTION:\nCould book is small explain george is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 147,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(eve).",
    "c": "curious(X) :- brave(X).\nsad(X) :- curious(X).\nhungry(X) :- sad(X).\nfriendly(X) :- hungry(X).\nclever(X) :- friendly(X).\nbrave(eve).\nparent(alice,frank).\nparent(eve,carol).\nbored(bob).\nenemy(dave,alice).\nowns(alice,ball).\nrough(pencil).\nwet(ball).\nparent(alice,george).\nowns(alice,phone).\nweak(dave).\nenemy(dave,george).\nsoft(car).\nstrong(george).\nhard(car).\nlikes(george,book).\nowns(carol,ball).\ndislikes(eve,phone).\nfriend(eve,dave).\nlikes(alice,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\n\nAnd the following facts:\neve is brave.\nalice is a parent of frank.\neve is a parent of carol.\nbob is bored.\ndave is an enemy of alice.\nalice owns ball.\npencil is rough.\nball is wet.\nalice is a parent of george.\nalice owns phone.\ndave is weak.\ndave is an enemy of george.\ncar is soft.\ngeorge is strong.\ncar is hard.\ngeorge likes book.\ncarol owns ball.\neve dislikes phone.\neve is a friend of dave.\nalice likes ball.\n\nQUESTION:\nIs eve is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 148,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(bob).",
    "c": "curious(X) :- brave(X).\nsad(X) :- curious(X).\nhungry(X) :- sad(X).\nfriendly(X) :- hungry(X).\nclever(X) :- friendly(X).\nbrave(eve).\nparent(alice,frank).\nparent(eve,carol).\nbored(bob).\nenemy(dave,alice).\nowns(alice,ball).\nrough(pencil).\nwet(ball).\nparent(alice,george).\nowns(alice,phone).\nweak(dave).\nenemy(dave,george).\nsoft(car).\nstrong(george).\nhard(car).\nlikes(george,book).\nowns(carol,ball).\ndislikes(eve,phone).\nfriend(eve,dave).\nlikes(alice,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\n\nAnd the following facts:\neve is brave.\nalice is a parent of frank.\neve is a parent of carol.\nbob is bored.\ndave is an enemy of alice.\nalice owns ball.\npencil is rough.\nball is wet.\nalice is a parent of george.\nalice owns phone.\ndave is weak.\ndave is an enemy of george.\ncar is soft.\ngeorge is strong.\ncar is hard.\ngeorge likes book.\ncarol owns ball.\neve dislikes phone.\neve is a friend of dave.\nalice likes ball.\n\nQUESTION:\nIs bob is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 149,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "curious(X) :- brave(X).\nsad(X) :- curious(X).\nhungry(X) :- sad(X).\nfriendly(X) :- hungry(X).\nclever(X) :- friendly(X).\nclever(eve).\nparent(alice,frank).\nparent(eve,carol).\nbored(bob).\nenemy(dave,alice).\nowns(alice,ball).\nrough(pencil).\nwet(ball).\nparent(alice,george).\nowns(alice,phone).\nweak(dave).\nenemy(dave,george).\nsoft(car).\nstrong(george).\nhard(car).\nlikes(george,book).\nowns(carol,ball).\ndislikes(eve,phone).\nfriend(eve,dave).\nlikes(alice,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\n\nAnd the following facts:\neve is clever.\nalice is a parent of frank.\neve is a parent of carol.\nbob is bored.\ndave is an enemy of alice.\nalice owns ball.\npencil is rough.\nball is wet.\nalice is a parent of george.\nalice owns phone.\ndave is weak.\ndave is an enemy of george.\ncar is soft.\ngeorge is strong.\ncar is hard.\ngeorge likes book.\ncarol owns ball.\neve dislikes phone.\neve is a friend of dave.\nalice likes ball.\n\nQUESTION:\nCould eve is brave explain eve is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 150,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "excited(frank).",
    "c": "curious(X) :- brave(X).\nsad(X) :- curious(X).\nhungry(X) :- sad(X).\nfriendly(X) :- hungry(X).\nclever(X) :- friendly(X).\nclever(eve).\nparent(alice,frank).\nparent(eve,carol).\nbored(bob).\nenemy(dave,alice).\nowns(alice,ball).\nrough(pencil).\nwet(ball).\nparent(alice,george).\nowns(alice,phone).\nweak(dave).\nenemy(dave,george).\nsoft(car).\nstrong(george).\nhard(car).\nlikes(george,book).\nowns(carol,ball).\ndislikes(eve,phone).\nfriend(eve,dave).\nlikes(alice,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\n\nAnd the following facts:\neve is clever.\nalice is a parent of frank.\neve is a parent of carol.\nbob is bored.\ndave is an enemy of alice.\nalice owns ball.\npencil is rough.\nball is wet.\nalice is a parent of george.\nalice owns phone.\ndave is weak.\ndave is an enemy of george.\ncar is soft.\ngeorge is strong.\ncar is hard.\ngeorge likes book.\ncarol owns ball.\neve dislikes phone.\neve is a friend of dave.\nalice likes ball.\n\nQUESTION:\nCould frank is excited explain eve is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 151,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(alice).",
    "c": "busy(X) :- angry(X).\ntall(X) :- busy(X).\nweak(X) :- tall(X).\nstrong(X) :- weak(X).\nhungry(X) :- strong(X).\nangry(alice).\nenemy(frank,george).\nclever(bob).\nsoft(ball).\ncalm(bob).\nheavy(ball).\nbig(car).\nlikes(george,apple).\nenemy(carol,george).\nhard(book).\nfunny(george).\nenemy(eve,dave).\nrough(pencil).\nbig(book).\nbored(alice).\nowns(dave,car).\nfriend(frank,dave).\ncalm(george).\nparent(carol,eve).\nfunny(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\n\nAnd the following facts:\nalice is angry.\nfrank is an enemy of george.\nbob is clever.\nball is soft.\nbob is calm.\nball is heavy.\ncar is big.\ngeorge likes apple.\ncarol is an enemy of george.\nbook is hard.\ngeorge is funny.\neve is an enemy of dave.\npencil is rough.\nbook is big.\nalice is bored.\ndave owns car.\nfrank is a friend of dave.\ngeorge is calm.\ncarol is a parent of eve.\ndave is funny.\n\nQUESTION:\nIs alice is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 152,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(pencil).",
    "c": "busy(X) :- angry(X).\ntall(X) :- busy(X).\nweak(X) :- tall(X).\nstrong(X) :- weak(X).\nhungry(X) :- strong(X).\nangry(alice).\nenemy(frank,george).\nclever(bob).\nsoft(ball).\ncalm(bob).\nheavy(ball).\nbig(car).\nlikes(george,apple).\nenemy(carol,george).\nhard(book).\nfunny(george).\nenemy(eve,dave).\nrough(pencil).\nbig(book).\nbored(alice).\nowns(dave,car).\nfriend(frank,dave).\ncalm(george).\nparent(carol,eve).\nfunny(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\n\nAnd the following facts:\nalice is angry.\nfrank is an enemy of george.\nbob is clever.\nball is soft.\nbob is calm.\nball is heavy.\ncar is big.\ngeorge likes apple.\ncarol is an enemy of george.\nbook is hard.\ngeorge is funny.\neve is an enemy of dave.\npencil is rough.\nbook is big.\nalice is bored.\ndave owns car.\nfrank is a friend of dave.\ngeorge is calm.\ncarol is a parent of eve.\ndave is funny.\n\nQUESTION:\nIs pencil is old true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 153,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(alice).",
    "c": "busy(X) :- angry(X).\ntall(X) :- busy(X).\nweak(X) :- tall(X).\nstrong(X) :- weak(X).\nhungry(X) :- strong(X).\nhungry(alice).\nenemy(frank,george).\nclever(bob).\nsoft(ball).\ncalm(bob).\nheavy(ball).\nbig(car).\nlikes(george,apple).\nenemy(carol,george).\nhard(book).\nfunny(george).\nenemy(eve,dave).\nrough(pencil).\nbig(book).\nbored(alice).\nowns(dave,car).\nfriend(frank,dave).\ncalm(george).\nparent(carol,eve).\nfunny(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\n\nAnd the following facts:\nalice is hungry.\nfrank is an enemy of george.\nbob is clever.\nball is soft.\nbob is calm.\nball is heavy.\ncar is big.\ngeorge likes apple.\ncarol is an enemy of george.\nbook is hard.\ngeorge is funny.\neve is an enemy of dave.\npencil is rough.\nbook is big.\nalice is bored.\ndave owns car.\nfrank is a friend of dave.\ngeorge is calm.\ncarol is a parent of eve.\ndave is funny.\n\nQUESTION:\nCould alice is angry explain alice is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 154,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "dirty(phone).",
    "c": "busy(X) :- angry(X).\ntall(X) :- busy(X).\nweak(X) :- tall(X).\nstrong(X) :- weak(X).\nhungry(X) :- strong(X).\nhungry(alice).\nenemy(frank,george).\nclever(bob).\nsoft(ball).\ncalm(bob).\nheavy(ball).\nbig(car).\nlikes(george,apple).\nenemy(carol,george).\nhard(book).\nfunny(george).\nenemy(eve,dave).\nrough(pencil).\nbig(book).\nbored(alice).\nowns(dave,car).\nfriend(frank,dave).\ncalm(george).\nparent(carol,eve).\nfunny(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\n\nAnd the following facts:\nalice is hungry.\nfrank is an enemy of george.\nbob is clever.\nball is soft.\nbob is calm.\nball is heavy.\ncar is big.\ngeorge likes apple.\ncarol is an enemy of george.\nbook is hard.\ngeorge is funny.\neve is an enemy of dave.\npencil is rough.\nbook is big.\nalice is bored.\ndave owns car.\nfrank is a friend of dave.\ngeorge is calm.\ncarol is a parent of eve.\ndave is funny.\n\nQUESTION:\nCould phone is dirty explain alice is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 155,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(eve).",
    "c": "calm(X) :- friendly(X).\nbored(X) :- calm(X).\nbusy(X) :- bored(X).\nclever(X) :- busy(X).\nweak(X) :- clever(X).\nfriendly(eve).\nsmooth(apple).\nfriend(carol,alice).\nenemy(eve,dave).\nsibling(dave,george).\nhappy(frank).\ntired(eve).\nsmall(car).\nparent(carol,eve).\nhappy(george).\nparent(bob,alice).\nsibling(bob,frank).\nowns(george,phone).\nfunny(dave).\nenemy(eve,carol).\ntired(carol).\nfriend(bob,eve).\nold(book).\nowns(george,car).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\n\nAnd the following facts:\neve is friendly.\napple is smooth.\ncarol is a friend of alice.\neve is an enemy of dave.\ndave is a sibling of george.\nfrank is happy.\neve is tired.\ncar is small.\ncarol is a parent of eve.\ngeorge is happy.\nbob is a parent of alice.\nbob is a sibling of frank.\ngeorge owns phone.\ndave is funny.\neve is an enemy of carol.\ncarol is tired.\nbob is a friend of eve.\nbook is old.\ngeorge owns car.\ndave is a parent of frank.\n\nQUESTION:\nIs eve is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 156,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(eve).",
    "c": "calm(X) :- friendly(X).\nbored(X) :- calm(X).\nbusy(X) :- bored(X).\nclever(X) :- busy(X).\nweak(X) :- clever(X).\nfriendly(eve).\nsmooth(apple).\nfriend(carol,alice).\nenemy(eve,dave).\nsibling(dave,george).\nhappy(frank).\ntired(eve).\nsmall(car).\nparent(carol,eve).\nhappy(george).\nparent(bob,alice).\nsibling(bob,frank).\nowns(george,phone).\nfunny(dave).\nenemy(eve,carol).\ntired(carol).\nfriend(bob,eve).\nold(book).\nowns(george,car).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\n\nAnd the following facts:\neve is friendly.\napple is smooth.\ncarol is a friend of alice.\neve is an enemy of dave.\ndave is a sibling of george.\nfrank is happy.\neve is tired.\ncar is small.\ncarol is a parent of eve.\ngeorge is happy.\nbob is a parent of alice.\nbob is a sibling of frank.\ngeorge owns phone.\ndave is funny.\neve is an enemy of carol.\ncarol is tired.\nbob is a friend of eve.\nbook is old.\ngeorge owns car.\ndave is a parent of frank.\n\nQUESTION:\nIs eve is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 157,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "calm(X) :- friendly(X).\nbored(X) :- calm(X).\nbusy(X) :- bored(X).\nclever(X) :- busy(X).\nweak(X) :- clever(X).\nweak(eve).\nsmooth(apple).\nfriend(carol,alice).\nenemy(eve,dave).\nsibling(dave,george).\nhappy(frank).\ntired(eve).\nsmall(car).\nparent(carol,eve).\nhappy(george).\nparent(bob,alice).\nsibling(bob,frank).\nowns(george,phone).\nfunny(dave).\nenemy(eve,carol).\ntired(carol).\nfriend(bob,eve).\nold(book).\nowns(george,car).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\n\nAnd the following facts:\neve is weak.\napple is smooth.\ncarol is a friend of alice.\neve is an enemy of dave.\ndave is a sibling of george.\nfrank is happy.\neve is tired.\ncar is small.\ncarol is a parent of eve.\ngeorge is happy.\nbob is a parent of alice.\nbob is a sibling of frank.\ngeorge owns phone.\ndave is funny.\neve is an enemy of carol.\ncarol is tired.\nbob is a friend of eve.\nbook is old.\ngeorge owns car.\ndave is a parent of frank.\n\nQUESTION:\nCould eve is friendly explain eve is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 158,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "calm(frank).",
    "c": "calm(X) :- friendly(X).\nbored(X) :- calm(X).\nbusy(X) :- bored(X).\nclever(X) :- busy(X).\nweak(X) :- clever(X).\nweak(eve).\nsmooth(apple).\nfriend(carol,alice).\nenemy(eve,dave).\nsibling(dave,george).\nhappy(frank).\ntired(eve).\nsmall(car).\nparent(carol,eve).\nhappy(george).\nparent(bob,alice).\nsibling(bob,frank).\nowns(george,phone).\nfunny(dave).\nenemy(eve,carol).\ntired(carol).\nfriend(bob,eve).\nold(book).\nowns(george,car).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\n\nAnd the following facts:\neve is weak.\napple is smooth.\ncarol is a friend of alice.\neve is an enemy of dave.\ndave is a sibling of george.\nfrank is happy.\neve is tired.\ncar is small.\ncarol is a parent of eve.\ngeorge is happy.\nbob is a parent of alice.\nbob is a sibling of frank.\ngeorge owns phone.\ndave is funny.\neve is an enemy of carol.\ncarol is tired.\nbob is a friend of eve.\nbook is old.\ngeorge owns car.\ndave is a parent of frank.\n\nQUESTION:\nCould frank is calm explain eve is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 159,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(ball).",
    "c": "red(X) :- soft(X).\nhard(X) :- wet(X).\nclean(X) :- smooth(X), dislikes(B,X), excited(B).\ndislikes(Y,X) :- busy(Y), old(X), old(C).\ndirty(X) :- dirty(X).\nangry(Z) :- hungry(Z), friend(Z,U), funny(U).\nold(X) :- light(X).\nfunny(X) :- tall(X).\nenemy(X,Y) :- happy(X), excited(Y).\nexcited(X) :- busy(X), friendly(X).\nsoft(ball).\nenemy(bob,carol).\ndislikes(eve,pencil).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is excited, then object X is clean.\nFor all X, Y, if there exists C such that person Y is busy and object X is old and object C is old, then person Y dislikes object X.\nFor all X, if object X is dirty, then object X is dirty.\nFor all Z, if there exists U such that person Z is hungry and person Z is a friend of person U and person U is funny, then person Z is angry.\nFor all X, if object X is light, then object X is old.\nFor all X, if person X is tall, then person X is funny.\nFor all X, Y, if person X is happy and person Y is excited, then person X is an enemy of person Y.\nFor all X, if person X is busy and person X is friendly, then person X is excited.\n\nAnd the following facts:\nball is soft.\nbob is an enemy of carol.\neve dislikes pencil.\nfrank is sad.\n\nQUESTION:\nIs ball is red true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 160,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(phone).",
    "c": "red(X) :- soft(X).\nhard(X) :- wet(X).\nclean(X) :- smooth(X), dislikes(B,X), excited(B).\ndislikes(Y,X) :- busy(Y), old(X), old(C).\ndirty(X) :- dirty(X).\nangry(Z) :- hungry(Z), friend(Z,U), funny(U).\nold(X) :- light(X).\nfunny(X) :- tall(X).\nenemy(X,Y) :- happy(X), excited(Y).\nexcited(X) :- busy(X), friendly(X).\nsoft(ball).\nenemy(bob,carol).\ndislikes(eve,pencil).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is excited, then object X is clean.\nFor all X, Y, if there exists C such that person Y is busy and object X is old and object C is old, then person Y dislikes object X.\nFor all X, if object X is dirty, then object X is dirty.\nFor all Z, if there exists U such that person Z is hungry and person Z is a friend of person U and person U is funny, then person Z is angry.\nFor all X, if object X is light, then object X is old.\nFor all X, if person X is tall, then person X is funny.\nFor all X, Y, if person X is happy and person Y is excited, then person X is an enemy of person Y.\nFor all X, if person X is busy and person X is friendly, then person X is excited.\n\nAnd the following facts:\nball is soft.\nbob is an enemy of carol.\neve dislikes pencil.\nfrank is sad.\n\nQUESTION:\nIs phone is dirty true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 161,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(ball).",
    "c": "red(X) :- soft(X).\nhard(X) :- wet(X).\nclean(X) :- smooth(X), dislikes(B,X), excited(B).\ndislikes(Y,X) :- busy(Y), old(X), old(C).\ndirty(X) :- dirty(X).\nangry(Z) :- hungry(Z), friend(Z,U), funny(U).\nold(X) :- light(X).\nfunny(X) :- tall(X).\nenemy(X,Y) :- happy(X), excited(Y).\nexcited(X) :- busy(X), friendly(X).\nred(ball).\nenemy(bob,carol).\ndislikes(eve,pencil).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is excited, then object X is clean.\nFor all X, Y, if there exists C such that person Y is busy and object X is old and object C is old, then person Y dislikes object X.\nFor all X, if object X is dirty, then object X is dirty.\nFor all Z, if there exists U such that person Z is hungry and person Z is a friend of person U and person U is funny, then person Z is angry.\nFor all X, if object X is light, then object X is old.\nFor all X, if person X is tall, then person X is funny.\nFor all X, Y, if person X is happy and person Y is excited, then person X is an enemy of person Y.\nFor all X, if person X is busy and person X is friendly, then person X is excited.\n\nAnd the following facts:\nball is red.\nbob is an enemy of carol.\neve dislikes pencil.\nfrank is sad.\n\nQUESTION:\nCould ball is soft explain ball is red?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 162,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "red(X) :- soft(X).\nhard(X) :- wet(X).\nclean(X) :- smooth(X), dislikes(B,X), excited(B).\ndislikes(Y,X) :- busy(Y), old(X), old(C).\ndirty(X) :- dirty(X).\nangry(Z) :- hungry(Z), friend(Z,U), funny(U).\nold(X) :- light(X).\nfunny(X) :- tall(X).\nenemy(X,Y) :- happy(X), excited(Y).\nexcited(X) :- busy(X), friendly(X).\nred(ball).\nenemy(bob,carol).\ndislikes(eve,pencil).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is excited, then object X is clean.\nFor all X, Y, if there exists C such that person Y is busy and object X is old and object C is old, then person Y dislikes object X.\nFor all X, if object X is dirty, then object X is dirty.\nFor all Z, if there exists U such that person Z is hungry and person Z is a friend of person U and person U is funny, then person Z is angry.\nFor all X, if object X is light, then object X is old.\nFor all X, if person X is tall, then person X is funny.\nFor all X, Y, if person X is happy and person Y is excited, then person X is an enemy of person Y.\nFor all X, if person X is busy and person X is friendly, then person X is excited.\n\nAnd the following facts:\nball is red.\nbob is an enemy of carol.\neve dislikes pencil.\nfrank is sad.\n\nQUESTION:\nCould dave is weak explain ball is red?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 163,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "hard(X) :- big(X).\nenemy(Y,Z) :- hungry(Y), friendly(Z), parent(Z,B).\nlikes(Z,Y) :- dirty(Y), weak(Z), likes(W,Y).\nparent(X,Z) :- weak(Z), hungry(X), happy(C).\nangry(X) :- tall(X), curious(X).\nsad(X) :- happy(X).\nenemy(X,Y) :- funny(X), sad(Y).\nnew(X) :- clean(X).\nhungry(X) :- busy(X), excited(X).\nfriend(X,Y) :- tired(X), strong(Y).\nbig(pencil).\nbrave(george).\nsmall(ball).\nsibling(alice,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is hard.\nFor all Y, Z, if there exists B such that person Y is hungry and person Z is friendly and person Z is a parent of person B, then person Y is an enemy of person Z.\nFor all Y, Z, if there exists W such that object Y is dirty and person Z is weak and person W likes object Y, then person Z likes object Y.\nFor all X, Z, if there exists C such that person Z is weak and person X is hungry and person C is happy, then person X is a parent of person Z.\nFor all X, if person X is tall and person X is curious, then person X is angry.\nFor all X, if person X is happy, then person X is sad.\nFor all X, Y, if person X is funny and person Y is sad, then person X is an enemy of person Y.\nFor all X, if object X is clean, then object X is new.\nFor all X, if person X is busy and person X is excited, then person X is hungry.\nFor all X, Y, if person X is tired and person Y is strong, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is big.\ngeorge is brave.\nball is small.\nalice is a sibling of eve.\n\nQUESTION:\nIs pencil is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 164,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "calm(carol).",
    "c": "hard(X) :- big(X).\nenemy(Y,Z) :- hungry(Y), friendly(Z), parent(Z,B).\nlikes(Z,Y) :- dirty(Y), weak(Z), likes(W,Y).\nparent(X,Z) :- weak(Z), hungry(X), happy(C).\nangry(X) :- tall(X), curious(X).\nsad(X) :- happy(X).\nenemy(X,Y) :- funny(X), sad(Y).\nnew(X) :- clean(X).\nhungry(X) :- busy(X), excited(X).\nfriend(X,Y) :- tired(X), strong(Y).\nbig(pencil).\nbrave(george).\nsmall(ball).\nsibling(alice,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is hard.\nFor all Y, Z, if there exists B such that person Y is hungry and person Z is friendly and person Z is a parent of person B, then person Y is an enemy of person Z.\nFor all Y, Z, if there exists W such that object Y is dirty and person Z is weak and person W likes object Y, then person Z likes object Y.\nFor all X, Z, if there exists C such that person Z is weak and person X is hungry and person C is happy, then person X is a parent of person Z.\nFor all X, if person X is tall and person X is curious, then person X is angry.\nFor all X, if person X is happy, then person X is sad.\nFor all X, Y, if person X is funny and person Y is sad, then person X is an enemy of person Y.\nFor all X, if object X is clean, then object X is new.\nFor all X, if person X is busy and person X is excited, then person X is hungry.\nFor all X, Y, if person X is tired and person Y is strong, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is big.\ngeorge is brave.\nball is small.\nalice is a sibling of eve.\n\nQUESTION:\nIs carol is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 165,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(pencil).",
    "c": "hard(X) :- big(X).\nenemy(Y,Z) :- hungry(Y), friendly(Z), parent(Z,B).\nlikes(Z,Y) :- dirty(Y), weak(Z), likes(W,Y).\nparent(X,Z) :- weak(Z), hungry(X), happy(C).\nangry(X) :- tall(X), curious(X).\nsad(X) :- happy(X).\nenemy(X,Y) :- funny(X), sad(Y).\nnew(X) :- clean(X).\nhungry(X) :- busy(X), excited(X).\nfriend(X,Y) :- tired(X), strong(Y).\nhard(pencil).\nbrave(george).\nsmall(ball).\nsibling(alice,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is hard.\nFor all Y, Z, if there exists B such that person Y is hungry and person Z is friendly and person Z is a parent of person B, then person Y is an enemy of person Z.\nFor all Y, Z, if there exists W such that object Y is dirty and person Z is weak and person W likes object Y, then person Z likes object Y.\nFor all X, Z, if there exists C such that person Z is weak and person X is hungry and person C is happy, then person X is a parent of person Z.\nFor all X, if person X is tall and person X is curious, then person X is angry.\nFor all X, if person X is happy, then person X is sad.\nFor all X, Y, if person X is funny and person Y is sad, then person X is an enemy of person Y.\nFor all X, if object X is clean, then object X is new.\nFor all X, if person X is busy and person X is excited, then person X is hungry.\nFor all X, Y, if person X is tired and person Y is strong, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is hard.\ngeorge is brave.\nball is small.\nalice is a sibling of eve.\n\nQUESTION:\nCould pencil is big explain pencil is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 166,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "bored(carol).",
    "c": "hard(X) :- big(X).\nenemy(Y,Z) :- hungry(Y), friendly(Z), parent(Z,B).\nlikes(Z,Y) :- dirty(Y), weak(Z), likes(W,Y).\nparent(X,Z) :- weak(Z), hungry(X), happy(C).\nangry(X) :- tall(X), curious(X).\nsad(X) :- happy(X).\nenemy(X,Y) :- funny(X), sad(Y).\nnew(X) :- clean(X).\nhungry(X) :- busy(X), excited(X).\nfriend(X,Y) :- tired(X), strong(Y).\nhard(pencil).\nbrave(george).\nsmall(ball).\nsibling(alice,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is hard.\nFor all Y, Z, if there exists B such that person Y is hungry and person Z is friendly and person Z is a parent of person B, then person Y is an enemy of person Z.\nFor all Y, Z, if there exists W such that object Y is dirty and person Z is weak and person W likes object Y, then person Z likes object Y.\nFor all X, Z, if there exists C such that person Z is weak and person X is hungry and person C is happy, then person X is a parent of person Z.\nFor all X, if person X is tall and person X is curious, then person X is angry.\nFor all X, if person X is happy, then person X is sad.\nFor all X, Y, if person X is funny and person Y is sad, then person X is an enemy of person Y.\nFor all X, if object X is clean, then object X is new.\nFor all X, if person X is busy and person X is excited, then person X is hungry.\nFor all X, Y, if person X is tired and person Y is strong, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is hard.\ngeorge is brave.\nball is small.\nalice is a sibling of eve.\n\nQUESTION:\nCould carol is bored explain pencil is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 167,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(bob).",
    "c": "curious(X) :- tired(X).\nsmooth(Z) :- soft(Z), dislikes(B,Z), clever(B).\nfunny(X) :- calm(X).\nbusy(Y) :- tall(Y), brave(A).\nsibling(Z,X) :- excited(Z), funny(X).\nenemy(Y,X) :- clever(Y), strong(X), likes(X,U).\ncalm(X) :- clever(X).\nwet(X) :- clean(X), big(X).\ncalm(X) :- sad(X).\nangry(X) :- busy(X), excited(X).\ntired(bob).\nparent(frank,eve).\ndislikes(carol,ball).\nwet(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all Z, if there exists B such that object Z is soft and person B dislikes object Z and person B is clever, then object Z is smooth.\nFor all X, if person X is calm, then person X is funny.\nFor all Y, if there exists A such that person Y is tall and person A is brave, then person Y is busy.\nFor all X, Z, if person Z is excited and person X is funny, then person Z is a sibling of person X.\nFor all X, Y, if there exists U such that person Y is clever and person X is strong and person X likes object U, then person Y is an enemy of person X.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if object X is clean and object X is big, then object X is wet.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is busy and person X is excited, then person X is angry.\n\nAnd the following facts:\nbob is tired.\nfrank is a parent of eve.\ncarol dislikes ball.\napple is wet.\n\nQUESTION:\nIs bob is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 168,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "busy(frank).",
    "c": "curious(X) :- tired(X).\nsmooth(Z) :- soft(Z), dislikes(B,Z), clever(B).\nfunny(X) :- calm(X).\nbusy(Y) :- tall(Y), brave(A).\nsibling(Z,X) :- excited(Z), funny(X).\nenemy(Y,X) :- clever(Y), strong(X), likes(X,U).\ncalm(X) :- clever(X).\nwet(X) :- clean(X), big(X).\ncalm(X) :- sad(X).\nangry(X) :- busy(X), excited(X).\ntired(bob).\nparent(frank,eve).\ndislikes(carol,ball).\nwet(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all Z, if there exists B such that object Z is soft and person B dislikes object Z and person B is clever, then object Z is smooth.\nFor all X, if person X is calm, then person X is funny.\nFor all Y, if there exists A such that person Y is tall and person A is brave, then person Y is busy.\nFor all X, Z, if person Z is excited and person X is funny, then person Z is a sibling of person X.\nFor all X, Y, if there exists U such that person Y is clever and person X is strong and person X likes object U, then person Y is an enemy of person X.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if object X is clean and object X is big, then object X is wet.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is busy and person X is excited, then person X is angry.\n\nAnd the following facts:\nbob is tired.\nfrank is a parent of eve.\ncarol dislikes ball.\napple is wet.\n\nQUESTION:\nIs frank is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 169,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(bob).",
    "c": "curious(X) :- tired(X).\nsmooth(Z) :- soft(Z), dislikes(B,Z), clever(B).\nfunny(X) :- calm(X).\nbusy(Y) :- tall(Y), brave(A).\nsibling(Z,X) :- excited(Z), funny(X).\nenemy(Y,X) :- clever(Y), strong(X), likes(X,U).\ncalm(X) :- clever(X).\nwet(X) :- clean(X), big(X).\ncalm(X) :- sad(X).\nangry(X) :- busy(X), excited(X).\ncurious(bob).\nparent(frank,eve).\ndislikes(carol,ball).\nwet(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all Z, if there exists B such that object Z is soft and person B dislikes object Z and person B is clever, then object Z is smooth.\nFor all X, if person X is calm, then person X is funny.\nFor all Y, if there exists A such that person Y is tall and person A is brave, then person Y is busy.\nFor all X, Z, if person Z is excited and person X is funny, then person Z is a sibling of person X.\nFor all X, Y, if there exists U such that person Y is clever and person X is strong and person X likes object U, then person Y is an enemy of person X.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if object X is clean and object X is big, then object X is wet.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is busy and person X is excited, then person X is angry.\n\nAnd the following facts:\nbob is curious.\nfrank is a parent of eve.\ncarol dislikes ball.\napple is wet.\n\nQUESTION:\nCould bob is tired explain bob is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 170,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(alice).",
    "c": "curious(X) :- tired(X).\nsmooth(Z) :- soft(Z), dislikes(B,Z), clever(B).\nfunny(X) :- calm(X).\nbusy(Y) :- tall(Y), brave(A).\nsibling(Z,X) :- excited(Z), funny(X).\nenemy(Y,X) :- clever(Y), strong(X), likes(X,U).\ncalm(X) :- clever(X).\nwet(X) :- clean(X), big(X).\ncalm(X) :- sad(X).\nangry(X) :- busy(X), excited(X).\ncurious(bob).\nparent(frank,eve).\ndislikes(carol,ball).\nwet(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all Z, if there exists B such that object Z is soft and person B dislikes object Z and person B is clever, then object Z is smooth.\nFor all X, if person X is calm, then person X is funny.\nFor all Y, if there exists A such that person Y is tall and person A is brave, then person Y is busy.\nFor all X, Z, if person Z is excited and person X is funny, then person Z is a sibling of person X.\nFor all X, Y, if there exists U such that person Y is clever and person X is strong and person X likes object U, then person Y is an enemy of person X.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if object X is clean and object X is big, then object X is wet.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is busy and person X is excited, then person X is angry.\n\nAnd the following facts:\nbob is curious.\nfrank is a parent of eve.\ncarol dislikes ball.\napple is wet.\n\nQUESTION:\nCould alice is busy explain bob is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 171,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "soft(phone).",
    "c": "soft(X) :- new(X).\nangry(X) :- tall(X), dislikes(X,W), light(W).\nbrave(Y) :- excited(Y), parent(Y,U), bored(U).\nsibling(Y,Z) :- angry(Y), funny(Z), owns(Z,B).\nlight(X) :- rough(X), hard(X).\nhappy(X) :- clever(X).\nhappy(X) :- tired(X).\nheavy(X) :- rough(X).\nclean(X) :- light(X).\ndislikes(X,Y) :- busy(X), old(Y).\nnew(phone).\nparent(frank,bob).\nstrong(frank).\nhappy(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is soft.\nFor all X, if there exists W such that person X is tall and person X dislikes object W and object W is light, then person X is angry.\nFor all Y, if there exists U such that person Y is excited and person Y is a parent of person U and person U is bored, then person Y is brave.\nFor all Y, Z, if there exists B such that person Y is angry and person Z is funny and person Z owns object B, then person Y is a sibling of person Z.\nFor all X, if object X is rough and object X is hard, then object X is light.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is light, then object X is clean.\nFor all X, Y, if person X is busy and object Y is old, then person X dislikes object Y.\n\nAnd the following facts:\nphone is new.\nfrank is a parent of bob.\nfrank is strong.\neve is happy.\n\nQUESTION:\nIs phone is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 172,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "soft(X) :- new(X).\nangry(X) :- tall(X), dislikes(X,W), light(W).\nbrave(Y) :- excited(Y), parent(Y,U), bored(U).\nsibling(Y,Z) :- angry(Y), funny(Z), owns(Z,B).\nlight(X) :- rough(X), hard(X).\nhappy(X) :- clever(X).\nhappy(X) :- tired(X).\nheavy(X) :- rough(X).\nclean(X) :- light(X).\ndislikes(X,Y) :- busy(X), old(Y).\nnew(phone).\nparent(frank,bob).\nstrong(frank).\nhappy(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is soft.\nFor all X, if there exists W such that person X is tall and person X dislikes object W and object W is light, then person X is angry.\nFor all Y, if there exists U such that person Y is excited and person Y is a parent of person U and person U is bored, then person Y is brave.\nFor all Y, Z, if there exists B such that person Y is angry and person Z is funny and person Z owns object B, then person Y is a sibling of person Z.\nFor all X, if object X is rough and object X is hard, then object X is light.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is light, then object X is clean.\nFor all X, Y, if person X is busy and object Y is old, then person X dislikes object Y.\n\nAnd the following facts:\nphone is new.\nfrank is a parent of bob.\nfrank is strong.\neve is happy.\n\nQUESTION:\nIs pencil is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 173,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(phone).",
    "c": "soft(X) :- new(X).\nangry(X) :- tall(X), dislikes(X,W), light(W).\nbrave(Y) :- excited(Y), parent(Y,U), bored(U).\nsibling(Y,Z) :- angry(Y), funny(Z), owns(Z,B).\nlight(X) :- rough(X), hard(X).\nhappy(X) :- clever(X).\nhappy(X) :- tired(X).\nheavy(X) :- rough(X).\nclean(X) :- light(X).\ndislikes(X,Y) :- busy(X), old(Y).\nsoft(phone).\nparent(frank,bob).\nstrong(frank).\nhappy(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is soft.\nFor all X, if there exists W such that person X is tall and person X dislikes object W and object W is light, then person X is angry.\nFor all Y, if there exists U such that person Y is excited and person Y is a parent of person U and person U is bored, then person Y is brave.\nFor all Y, Z, if there exists B such that person Y is angry and person Z is funny and person Z owns object B, then person Y is a sibling of person Z.\nFor all X, if object X is rough and object X is hard, then object X is light.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is light, then object X is clean.\nFor all X, Y, if person X is busy and object Y is old, then person X dislikes object Y.\n\nAnd the following facts:\nphone is soft.\nfrank is a parent of bob.\nfrank is strong.\neve is happy.\n\nQUESTION:\nCould phone is new explain phone is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 174,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "soft(X) :- new(X).\nangry(X) :- tall(X), dislikes(X,W), light(W).\nbrave(Y) :- excited(Y), parent(Y,U), bored(U).\nsibling(Y,Z) :- angry(Y), funny(Z), owns(Z,B).\nlight(X) :- rough(X), hard(X).\nhappy(X) :- clever(X).\nhappy(X) :- tired(X).\nheavy(X) :- rough(X).\nclean(X) :- light(X).\ndislikes(X,Y) :- busy(X), old(Y).\nsoft(phone).\nparent(frank,bob).\nstrong(frank).\nhappy(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is soft.\nFor all X, if there exists W such that person X is tall and person X dislikes object W and object W is light, then person X is angry.\nFor all Y, if there exists U such that person Y is excited and person Y is a parent of person U and person U is bored, then person Y is brave.\nFor all Y, Z, if there exists B such that person Y is angry and person Z is funny and person Z owns object B, then person Y is a sibling of person Z.\nFor all X, if object X is rough and object X is hard, then object X is light.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is light, then object X is clean.\nFor all X, Y, if person X is busy and object Y is old, then person X dislikes object Y.\n\nAnd the following facts:\nphone is soft.\nfrank is a parent of bob.\nfrank is strong.\neve is happy.\n\nQUESTION:\nCould ball is heavy explain phone is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 175,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(car).",
    "c": "red(X) :- new(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nwet(Z) :- dirty(Z).\nenemy(Y,X) :- strong(Y), tall(X), enemy(Y,U).\nclever(X) :- busy(X), dislikes(X,W), old(W).\nfriend(X,Y) :- clever(X), busy(Y).\nowns(X,Y) :- busy(X), small(Y).\nnew(car).\nowns(george,apple).\ncurious(carol).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all Z, if object Z is dirty, then object Z is wet.\nFor all X, Y, if there exists U such that person Y is strong and person X is tall and person Y is an enemy of person U, then person Y is an enemy of person X.\nFor all X, if there exists W such that person X is busy and person X dislikes object W and object W is old, then person X is clever.\nFor all X, Y, if person X is clever and person Y is busy, then person X is a friend of person Y.\nFor all X, Y, if person X is busy and object Y is small, then person X owns object Y.\n\nAnd the following facts:\ncar is new.\ngeorge owns apple.\ncarol is curious.\neve is a parent of frank.\n\nQUESTION:\nIs car is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 176,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(carol).",
    "c": "red(X) :- new(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nwet(Z) :- dirty(Z).\nenemy(Y,X) :- strong(Y), tall(X), enemy(Y,U).\nclever(X) :- busy(X), dislikes(X,W), old(W).\nfriend(X,Y) :- clever(X), busy(Y).\nowns(X,Y) :- busy(X), small(Y).\nnew(car).\nowns(george,apple).\ncurious(carol).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all Z, if object Z is dirty, then object Z is wet.\nFor all X, Y, if there exists U such that person Y is strong and person X is tall and person Y is an enemy of person U, then person Y is an enemy of person X.\nFor all X, if there exists W such that person X is busy and person X dislikes object W and object W is old, then person X is clever.\nFor all X, Y, if person X is clever and person Y is busy, then person X is a friend of person Y.\nFor all X, Y, if person X is busy and object Y is small, then person X owns object Y.\n\nAnd the following facts:\ncar is new.\ngeorge owns apple.\ncarol is curious.\neve is a parent of frank.\n\nQUESTION:\nIs carol is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 177,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(car).",
    "c": "red(X) :- new(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nwet(Z) :- dirty(Z).\nenemy(Y,X) :- strong(Y), tall(X), enemy(Y,U).\nclever(X) :- busy(X), dislikes(X,W), old(W).\nfriend(X,Y) :- clever(X), busy(Y).\nowns(X,Y) :- busy(X), small(Y).\nsmooth(car).\nowns(george,apple).\ncurious(carol).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all Z, if object Z is dirty, then object Z is wet.\nFor all X, Y, if there exists U such that person Y is strong and person X is tall and person Y is an enemy of person U, then person Y is an enemy of person X.\nFor all X, if there exists W such that person X is busy and person X dislikes object W and object W is old, then person X is clever.\nFor all X, Y, if person X is clever and person Y is busy, then person X is a friend of person Y.\nFor all X, Y, if person X is busy and object Y is small, then person X owns object Y.\n\nAnd the following facts:\ncar is smooth.\ngeorge owns apple.\ncarol is curious.\neve is a parent of frank.\n\nQUESTION:\nCould car is new explain car is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 178,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "smooth(ball).",
    "c": "red(X) :- new(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nwet(Z) :- dirty(Z).\nenemy(Y,X) :- strong(Y), tall(X), enemy(Y,U).\nclever(X) :- busy(X), dislikes(X,W), old(W).\nfriend(X,Y) :- clever(X), busy(Y).\nowns(X,Y) :- busy(X), small(Y).\nsmooth(car).\nowns(george,apple).\ncurious(carol).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all Z, if object Z is dirty, then object Z is wet.\nFor all X, Y, if there exists U such that person Y is strong and person X is tall and person Y is an enemy of person U, then person Y is an enemy of person X.\nFor all X, if there exists W such that person X is busy and person X dislikes object W and object W is old, then person X is clever.\nFor all X, Y, if person X is clever and person Y is busy, then person X is a friend of person Y.\nFor all X, Y, if person X is busy and object Y is small, then person X owns object Y.\n\nAnd the following facts:\ncar is smooth.\ngeorge owns apple.\ncarol is curious.\neve is a parent of frank.\n\nQUESTION:\nCould ball is smooth explain car is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 179,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(george).",
    "c": "friendly(X) :- hungry(X).\nweak(X) :- friendly(X).\nhungry(X) :- weak(X).\nweak(X) :- hungry(X).\nhappy(X) :- weak(X).\nowns(Z,Y) :- red(Y), busy(Z), dislikes(W,Y).\nwet(Y) :- heavy(Y), likes(W,Y), funny(W).\nheavy(X) :- red(X).\nangry(X) :- bored(X).\nold(X) :- soft(X), light(X).\nhungry(george).\nwet(car).\nfriend(frank,bob).\nenemy(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all Y, Z, if there exists W such that object Y is red and person Z is busy and person W dislikes object Y, then person Z owns object Y.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is funny, then object Y is wet.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if object X is soft and object X is light, then object X is old.\n\nAnd the following facts:\ngeorge is hungry.\ncar is wet.\nfrank is a friend of bob.\ndave is an enemy of george.\n\nQUESTION:\nIs george is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 180,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "friendly(X) :- hungry(X).\nweak(X) :- friendly(X).\nhungry(X) :- weak(X).\nweak(X) :- hungry(X).\nhappy(X) :- weak(X).\nowns(Z,Y) :- red(Y), busy(Z), dislikes(W,Y).\nwet(Y) :- heavy(Y), likes(W,Y), funny(W).\nheavy(X) :- red(X).\nangry(X) :- bored(X).\nold(X) :- soft(X), light(X).\nhungry(george).\nwet(car).\nfriend(frank,bob).\nenemy(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all Y, Z, if there exists W such that object Y is red and person Z is busy and person W dislikes object Y, then person Z owns object Y.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is funny, then object Y is wet.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if object X is soft and object X is light, then object X is old.\n\nAnd the following facts:\ngeorge is hungry.\ncar is wet.\nfrank is a friend of bob.\ndave is an enemy of george.\n\nQUESTION:\nIs phone is rough true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 181,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(george).",
    "c": "friendly(X) :- hungry(X).\nweak(X) :- friendly(X).\nhungry(X) :- weak(X).\nweak(X) :- hungry(X).\nhappy(X) :- weak(X).\nowns(Z,Y) :- red(Y), busy(Z), dislikes(W,Y).\nwet(Y) :- heavy(Y), likes(W,Y), funny(W).\nheavy(X) :- red(X).\nangry(X) :- bored(X).\nold(X) :- soft(X), light(X).\nhappy(george).\nwet(car).\nfriend(frank,bob).\nenemy(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all Y, Z, if there exists W such that object Y is red and person Z is busy and person W dislikes object Y, then person Z owns object Y.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is funny, then object Y is wet.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if object X is soft and object X is light, then object X is old.\n\nAnd the following facts:\ngeorge is happy.\ncar is wet.\nfrank is a friend of bob.\ndave is an enemy of george.\n\nQUESTION:\nCould george is hungry explain george is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 182,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(book).",
    "c": "friendly(X) :- hungry(X).\nweak(X) :- friendly(X).\nhungry(X) :- weak(X).\nweak(X) :- hungry(X).\nhappy(X) :- weak(X).\nowns(Z,Y) :- red(Y), busy(Z), dislikes(W,Y).\nwet(Y) :- heavy(Y), likes(W,Y), funny(W).\nheavy(X) :- red(X).\nangry(X) :- bored(X).\nold(X) :- soft(X), light(X).\nhappy(george).\nwet(car).\nfriend(frank,bob).\nenemy(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all Y, Z, if there exists W such that object Y is red and person Z is busy and person W dislikes object Y, then person Z owns object Y.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is funny, then object Y is wet.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if object X is soft and object X is light, then object X is old.\n\nAnd the following facts:\ngeorge is happy.\ncar is wet.\nfrank is a friend of bob.\ndave is an enemy of george.\n\nQUESTION:\nCould book is rough explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 183,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "angry(george).",
    "c": "hungry(X) :- calm(X).\nbored(X) :- hungry(X).\nclever(X) :- bored(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\ndislikes(X,Z) :- old(Z), happy(X), likes(A,Z).\nsmooth(Z) :- smooth(Z).\ndislikes(Z,Y) :- rough(Y), weak(Z), happy(D).\nhappy(X) :- weak(X), excited(X).\nsmooth(X) :- soft(X), hard(X).\ncalm(george).\nstrong(bob).\ndislikes(dave,car).\nparent(carol,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, Z, if there exists A such that object Z is old and person X is happy and person A likes object Z, then person X dislikes object Z.\nFor all Z, if object Z is smooth, then object Z is smooth.\nFor all Y, Z, if there exists D such that object Y is rough and person Z is weak and person D is happy, then person Z dislikes object Y.\nFor all X, if person X is weak and person X is excited, then person X is happy.\nFor all X, if object X is soft and object X is hard, then object X is smooth.\n\nAnd the following facts:\ngeorge is calm.\nbob is strong.\ndave dislikes car.\ncarol is a parent of alice.\n\nQUESTION:\nIs george is angry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 184,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(george).",
    "c": "hungry(X) :- calm(X).\nbored(X) :- hungry(X).\nclever(X) :- bored(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\ndislikes(X,Z) :- old(Z), happy(X), likes(A,Z).\nsmooth(Z) :- smooth(Z).\ndislikes(Z,Y) :- rough(Y), weak(Z), happy(D).\nhappy(X) :- weak(X), excited(X).\nsmooth(X) :- soft(X), hard(X).\ncalm(george).\nstrong(bob).\ndislikes(dave,car).\nparent(carol,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, Z, if there exists A such that object Z is old and person X is happy and person A likes object Z, then person X dislikes object Z.\nFor all Z, if object Z is smooth, then object Z is smooth.\nFor all Y, Z, if there exists D such that object Y is rough and person Z is weak and person D is happy, then person Z dislikes object Y.\nFor all X, if person X is weak and person X is excited, then person X is happy.\nFor all X, if object X is soft and object X is hard, then object X is smooth.\n\nAnd the following facts:\ngeorge is calm.\nbob is strong.\ndave dislikes car.\ncarol is a parent of alice.\n\nQUESTION:\nIs george is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 185,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(george).",
    "c": "hungry(X) :- calm(X).\nbored(X) :- hungry(X).\nclever(X) :- bored(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\ndislikes(X,Z) :- old(Z), happy(X), likes(A,Z).\nsmooth(Z) :- smooth(Z).\ndislikes(Z,Y) :- rough(Y), weak(Z), happy(D).\nhappy(X) :- weak(X), excited(X).\nsmooth(X) :- soft(X), hard(X).\nangry(george).\nstrong(bob).\ndislikes(dave,car).\nparent(carol,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, Z, if there exists A such that object Z is old and person X is happy and person A likes object Z, then person X dislikes object Z.\nFor all Z, if object Z is smooth, then object Z is smooth.\nFor all Y, Z, if there exists D such that object Y is rough and person Z is weak and person D is happy, then person Z dislikes object Y.\nFor all X, if person X is weak and person X is excited, then person X is happy.\nFor all X, if object X is soft and object X is hard, then object X is smooth.\n\nAnd the following facts:\ngeorge is angry.\nbob is strong.\ndave dislikes car.\ncarol is a parent of alice.\n\nQUESTION:\nCould george is calm explain george is angry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 186,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(pencil).",
    "c": "hungry(X) :- calm(X).\nbored(X) :- hungry(X).\nclever(X) :- bored(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\ndislikes(X,Z) :- old(Z), happy(X), likes(A,Z).\nsmooth(Z) :- smooth(Z).\ndislikes(Z,Y) :- rough(Y), weak(Z), happy(D).\nhappy(X) :- weak(X), excited(X).\nsmooth(X) :- soft(X), hard(X).\nangry(george).\nstrong(bob).\ndislikes(dave,car).\nparent(carol,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, Z, if there exists A such that object Z is old and person X is happy and person A likes object Z, then person X dislikes object Z.\nFor all Z, if object Z is smooth, then object Z is smooth.\nFor all Y, Z, if there exists D such that object Y is rough and person Z is weak and person D is happy, then person Z dislikes object Y.\nFor all X, if person X is weak and person X is excited, then person X is happy.\nFor all X, if object X is soft and object X is hard, then object X is smooth.\n\nAnd the following facts:\ngeorge is angry.\nbob is strong.\ndave dislikes car.\ncarol is a parent of alice.\n\nQUESTION:\nCould pencil is rough explain george is angry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 187,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "light(ball).",
    "c": "red(X) :- big(X).\nnew(X) :- red(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nlight(X) :- rough(X).\ncurious(X) :- funny(X), dislikes(X,B), hard(B).\nsmooth(Y) :- wet(Y), owns(A,Y), clever(A).\nexcited(X) :- happy(X).\nsad(X) :- bored(X), strong(X).\nbored(X) :- sad(X), strong(X).\nbig(ball).\nlikes(frank,ball).\nsad(bob).\nfriendly(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is light.\nFor all X, if there exists B such that person X is funny and person X dislikes object B and object B is hard, then person X is curious.\nFor all Y, if there exists A such that object Y is wet and person A owns object Y and person A is clever, then object Y is smooth.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is bored and person X is strong, then person X is sad.\nFor all X, if person X is sad and person X is strong, then person X is bored.\n\nAnd the following facts:\nball is big.\nfrank likes ball.\nbob is sad.\ngeorge is friendly.\n\nQUESTION:\nIs ball is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 188,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(apple).",
    "c": "red(X) :- big(X).\nnew(X) :- red(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nlight(X) :- rough(X).\ncurious(X) :- funny(X), dislikes(X,B), hard(B).\nsmooth(Y) :- wet(Y), owns(A,Y), clever(A).\nexcited(X) :- happy(X).\nsad(X) :- bored(X), strong(X).\nbored(X) :- sad(X), strong(X).\nbig(ball).\nlikes(frank,ball).\nsad(bob).\nfriendly(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is light.\nFor all X, if there exists B such that person X is funny and person X dislikes object B and object B is hard, then person X is curious.\nFor all Y, if there exists A such that object Y is wet and person A owns object Y and person A is clever, then object Y is smooth.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is bored and person X is strong, then person X is sad.\nFor all X, if person X is sad and person X is strong, then person X is bored.\n\nAnd the following facts:\nball is big.\nfrank likes ball.\nbob is sad.\ngeorge is friendly.\n\nQUESTION:\nIs apple is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 189,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(ball).",
    "c": "red(X) :- big(X).\nnew(X) :- red(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nlight(X) :- rough(X).\ncurious(X) :- funny(X), dislikes(X,B), hard(B).\nsmooth(Y) :- wet(Y), owns(A,Y), clever(A).\nexcited(X) :- happy(X).\nsad(X) :- bored(X), strong(X).\nbored(X) :- sad(X), strong(X).\nlight(ball).\nlikes(frank,ball).\nsad(bob).\nfriendly(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is light.\nFor all X, if there exists B such that person X is funny and person X dislikes object B and object B is hard, then person X is curious.\nFor all Y, if there exists A such that object Y is wet and person A owns object Y and person A is clever, then object Y is smooth.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is bored and person X is strong, then person X is sad.\nFor all X, if person X is sad and person X is strong, then person X is bored.\n\nAnd the following facts:\nball is light.\nfrank likes ball.\nbob is sad.\ngeorge is friendly.\n\nQUESTION:\nCould ball is big explain ball is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 190,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "strong(eve).",
    "c": "red(X) :- big(X).\nnew(X) :- red(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nlight(X) :- rough(X).\ncurious(X) :- funny(X), dislikes(X,B), hard(B).\nsmooth(Y) :- wet(Y), owns(A,Y), clever(A).\nexcited(X) :- happy(X).\nsad(X) :- bored(X), strong(X).\nbored(X) :- sad(X), strong(X).\nlight(ball).\nlikes(frank,ball).\nsad(bob).\nfriendly(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is light.\nFor all X, if there exists B such that person X is funny and person X dislikes object B and object B is hard, then person X is curious.\nFor all Y, if there exists A such that object Y is wet and person A owns object Y and person A is clever, then object Y is smooth.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is bored and person X is strong, then person X is sad.\nFor all X, if person X is sad and person X is strong, then person X is bored.\n\nAnd the following facts:\nball is light.\nfrank likes ball.\nbob is sad.\ngeorge is friendly.\n\nQUESTION:\nCould eve is strong explain ball is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 191,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(george).",
    "c": "calm(X) :- busy(X).\ntired(X) :- calm(X).\nclever(X) :- tired(X).\nfunny(X) :- clever(X).\nbusy(X) :- funny(X).\nbored(X) :- busy(X).\ncurious(X) :- bored(X).\nstrong(X) :- curious(X).\nhungry(X) :- strong(X).\nbrave(X) :- hungry(X).\nbusy(george).\nparent(eve,alice).\nowns(bob,apple).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\n\nAnd the following facts:\ngeorge is busy.\neve is a parent of alice.\nbob owns apple.\ncarol likes book.\n\nQUESTION:\nIs george is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 192,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(bob).",
    "c": "calm(X) :- busy(X).\ntired(X) :- calm(X).\nclever(X) :- tired(X).\nfunny(X) :- clever(X).\nbusy(X) :- funny(X).\nbored(X) :- busy(X).\ncurious(X) :- bored(X).\nstrong(X) :- curious(X).\nhungry(X) :- strong(X).\nbrave(X) :- hungry(X).\nbusy(george).\nparent(eve,alice).\nowns(bob,apple).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\n\nAnd the following facts:\ngeorge is busy.\neve is a parent of alice.\nbob owns apple.\ncarol likes book.\n\nQUESTION:\nIs bob is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 193,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(george).",
    "c": "calm(X) :- busy(X).\ntired(X) :- calm(X).\nclever(X) :- tired(X).\nfunny(X) :- clever(X).\nbusy(X) :- funny(X).\nbored(X) :- busy(X).\ncurious(X) :- bored(X).\nstrong(X) :- curious(X).\nhungry(X) :- strong(X).\nbrave(X) :- hungry(X).\nbrave(george).\nparent(eve,alice).\nowns(bob,apple).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\n\nAnd the following facts:\ngeorge is brave.\neve is a parent of alice.\nbob owns apple.\ncarol likes book.\n\nQUESTION:\nCould george is busy explain george is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 194,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "curious(alice).",
    "c": "calm(X) :- busy(X).\ntired(X) :- calm(X).\nclever(X) :- tired(X).\nfunny(X) :- clever(X).\nbusy(X) :- funny(X).\nbored(X) :- busy(X).\ncurious(X) :- bored(X).\nstrong(X) :- curious(X).\nhungry(X) :- strong(X).\nbrave(X) :- hungry(X).\nbrave(george).\nparent(eve,alice).\nowns(bob,apple).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\n\nAnd the following facts:\ngeorge is brave.\neve is a parent of alice.\nbob owns apple.\ncarol likes book.\n\nQUESTION:\nCould alice is curious explain george is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 195,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(frank).",
    "c": "brave(X) :- friendly(X).\nweak(X) :- brave(X).\ncurious(X) :- weak(X).\nclever(X) :- curious(X).\nfriendly(X) :- clever(X).\nfunny(X) :- friendly(X).\ntall(X) :- funny(X).\nbored(X) :- tall(X).\nhungry(X) :- bored(X).\nweak(X) :- hungry(X).\nfriendly(frank).\nhappy(carol).\nowns(dave,ball).\nenemy(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\n\nAnd the following facts:\nfrank is friendly.\ncarol is happy.\ndave owns ball.\ngeorge is an enemy of dave.\n\nQUESTION:\nIs frank is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 196,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(carol).",
    "c": "brave(X) :- friendly(X).\nweak(X) :- brave(X).\ncurious(X) :- weak(X).\nclever(X) :- curious(X).\nfriendly(X) :- clever(X).\nfunny(X) :- friendly(X).\ntall(X) :- funny(X).\nbored(X) :- tall(X).\nhungry(X) :- bored(X).\nweak(X) :- hungry(X).\nfriendly(frank).\nhappy(carol).\nowns(dave,ball).\nenemy(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\n\nAnd the following facts:\nfrank is friendly.\ncarol is happy.\ndave owns ball.\ngeorge is an enemy of dave.\n\nQUESTION:\nIs carol is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 197,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(frank).",
    "c": "brave(X) :- friendly(X).\nweak(X) :- brave(X).\ncurious(X) :- weak(X).\nclever(X) :- curious(X).\nfriendly(X) :- clever(X).\nfunny(X) :- friendly(X).\ntall(X) :- funny(X).\nbored(X) :- tall(X).\nhungry(X) :- bored(X).\nweak(X) :- hungry(X).\nweak(frank).\nhappy(carol).\nowns(dave,ball).\nenemy(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\n\nAnd the following facts:\nfrank is weak.\ncarol is happy.\ndave owns ball.\ngeorge is an enemy of dave.\n\nQUESTION:\nCould frank is friendly explain frank is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 198,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(george).",
    "c": "brave(X) :- friendly(X).\nweak(X) :- brave(X).\ncurious(X) :- weak(X).\nclever(X) :- curious(X).\nfriendly(X) :- clever(X).\nfunny(X) :- friendly(X).\ntall(X) :- funny(X).\nbored(X) :- tall(X).\nhungry(X) :- bored(X).\nweak(X) :- hungry(X).\nweak(frank).\nhappy(carol).\nowns(dave,ball).\nenemy(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\n\nAnd the following facts:\nfrank is weak.\ncarol is happy.\ndave owns ball.\ngeorge is an enemy of dave.\n\nQUESTION:\nCould george is clever explain frank is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 199,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "brave(eve).",
    "c": "curious(X) :- tired(X).\nhungry(X) :- curious(X).\nbored(X) :- hungry(X).\nfunny(X) :- bored(X).\ntall(X) :- funny(X).\nstrong(X) :- tall(X).\ncalm(X) :- strong(X).\nfriendly(X) :- calm(X).\nweak(X) :- friendly(X).\nbrave(X) :- weak(X).\ntired(eve).\nenemy(bob,george).\ndislikes(frank,phone).\ncold.",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\n\nAnd the following facts:\neve is tired.\nbob is an enemy of george.\nfrank dislikes phone.\nit is cold.\n\nQUESTION:\nIs eve is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 200,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(book).",
    "c": "curious(X) :- tired(X).\nhungry(X) :- curious(X).\nbored(X) :- hungry(X).\nfunny(X) :- bored(X).\ntall(X) :- funny(X).\nstrong(X) :- tall(X).\ncalm(X) :- strong(X).\nfriendly(X) :- calm(X).\nweak(X) :- friendly(X).\nbrave(X) :- weak(X).\ntired(eve).\nenemy(bob,george).\ndislikes(frank,phone).\ncold.",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\n\nAnd the following facts:\neve is tired.\nbob is an enemy of george.\nfrank dislikes phone.\nit is cold.\n\nQUESTION:\nIs book is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 201,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(eve).",
    "c": "curious(X) :- tired(X).\nhungry(X) :- curious(X).\nbored(X) :- hungry(X).\nfunny(X) :- bored(X).\ntall(X) :- funny(X).\nstrong(X) :- tall(X).\ncalm(X) :- strong(X).\nfriendly(X) :- calm(X).\nweak(X) :- friendly(X).\nbrave(X) :- weak(X).\nbrave(eve).\nenemy(bob,george).\ndislikes(frank,phone).\ncold.",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\n\nAnd the following facts:\neve is brave.\nbob is an enemy of george.\nfrank dislikes phone.\nit is cold.\n\nQUESTION:\nCould eve is tired explain eve is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 202,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(dave).",
    "c": "curious(X) :- tired(X).\nhungry(X) :- curious(X).\nbored(X) :- hungry(X).\nfunny(X) :- bored(X).\ntall(X) :- funny(X).\nstrong(X) :- tall(X).\ncalm(X) :- strong(X).\nfriendly(X) :- calm(X).\nweak(X) :- friendly(X).\nbrave(X) :- weak(X).\nbrave(eve).\nenemy(bob,george).\ndislikes(frank,phone).\ncold.",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\n\nAnd the following facts:\neve is brave.\nbob is an enemy of george.\nfrank dislikes phone.\nit is cold.\n\nQUESTION:\nCould dave is tired explain eve is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 203,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(alice).",
    "c": "tall(X) :- calm(X).\nangry(X) :- tall(X).\nexcited(X) :- angry(X).\nbusy(X) :- excited(X).\nhappy(X) :- busy(X).\ncurious(X) :- happy(X).\ntired(X) :- curious(X).\nclever(X) :- tired(X).\nhungry(X) :- clever(X).\nweak(X) :- hungry(X).\ncalm(alice).\ncold.\nwet(phone).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if person X is busy, then person X is happy.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\n\nAnd the following facts:\nalice is calm.\nit is cold.\nphone is wet.\neve is a sibling of alice.\n\nQUESTION:\nIs alice is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 204,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(pencil).",
    "c": "tall(X) :- calm(X).\nangry(X) :- tall(X).\nexcited(X) :- angry(X).\nbusy(X) :- excited(X).\nhappy(X) :- busy(X).\ncurious(X) :- happy(X).\ntired(X) :- curious(X).\nclever(X) :- tired(X).\nhungry(X) :- clever(X).\nweak(X) :- hungry(X).\ncalm(alice).\ncold.\nwet(phone).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if person X is busy, then person X is happy.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\n\nAnd the following facts:\nalice is calm.\nit is cold.\nphone is wet.\neve is a sibling of alice.\n\nQUESTION:\nIs pencil is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 205,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(alice).",
    "c": "tall(X) :- calm(X).\nangry(X) :- tall(X).\nexcited(X) :- angry(X).\nbusy(X) :- excited(X).\nhappy(X) :- busy(X).\ncurious(X) :- happy(X).\ntired(X) :- curious(X).\nclever(X) :- tired(X).\nhungry(X) :- clever(X).\nweak(X) :- hungry(X).\nweak(alice).\ncold.\nwet(phone).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if person X is busy, then person X is happy.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\n\nAnd the following facts:\nalice is weak.\nit is cold.\nphone is wet.\neve is a sibling of alice.\n\nQUESTION:\nCould alice is calm explain alice is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 206,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(frank).",
    "c": "tall(X) :- calm(X).\nangry(X) :- tall(X).\nexcited(X) :- angry(X).\nbusy(X) :- excited(X).\nhappy(X) :- busy(X).\ncurious(X) :- happy(X).\ntired(X) :- curious(X).\nclever(X) :- tired(X).\nhungry(X) :- clever(X).\nweak(X) :- hungry(X).\nweak(alice).\ncold.\nwet(phone).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if person X is busy, then person X is happy.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\n\nAnd the following facts:\nalice is weak.\nit is cold.\nphone is wet.\neve is a sibling of alice.\n\nQUESTION:\nCould frank is tired explain alice is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 207,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "angry(carol).",
    "c": "angry(X) :- tall(X).\nfriendly(Y) :- happy(Y).\nfriend(Y,Z) :- bored(Y), curious(Z).\nparent(Y,Z) :- busy(Y), excited(Z), rough(E).\nfunny(X) :- curious(X), hard(B).\nhard(X) :- rough(X), weak(E).\nsmall(X) :- red(X), big(X).\nold(X) :- light(X).\nred(X) :- hard(X).\nexcited(X) :- calm(X), brave(X).\ntall(carol).\nclean(phone).\nenemy(george,bob).\nsibling(alice,carol).\nowns(bob,apple).\ncalm(frank).\nsmall(book).\nhungry(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is angry.\nFor all Y, if person Y is happy, then person Y is friendly.\nFor all Y, Z, if person Y is bored and person Z is curious, then person Y is a friend of person Z.\nFor all Y, Z, if there exists E such that person Y is busy and person Z is excited and object E is rough, then person Y is a parent of person Z.\nFor all X, if there exists B such that person X is curious and object B is hard, then person X is funny.\nFor all X, if there exists E such that object X is rough and person E is weak, then object X is hard.\nFor all X, if object X is red and object X is big, then object X is small.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is calm and person X is brave, then person X is excited.\n\nAnd the following facts:\ncarol is tall.\nphone is clean.\ngeorge is an enemy of bob.\nalice is a sibling of carol.\nbob owns apple.\nfrank is calm.\nbook is small.\ngeorge is hungry.\n\nQUESTION:\nIs carol is angry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 208,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(george).",
    "c": "angry(X) :- tall(X).\nfriendly(Y) :- happy(Y).\nfriend(Y,Z) :- bored(Y), curious(Z).\nparent(Y,Z) :- busy(Y), excited(Z), rough(E).\nfunny(X) :- curious(X), hard(B).\nhard(X) :- rough(X), weak(E).\nsmall(X) :- red(X), big(X).\nold(X) :- light(X).\nred(X) :- hard(X).\nexcited(X) :- calm(X), brave(X).\ntall(carol).\nclean(phone).\nenemy(george,bob).\nsibling(alice,carol).\nowns(bob,apple).\ncalm(frank).\nsmall(book).\nhungry(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is angry.\nFor all Y, if person Y is happy, then person Y is friendly.\nFor all Y, Z, if person Y is bored and person Z is curious, then person Y is a friend of person Z.\nFor all Y, Z, if there exists E such that person Y is busy and person Z is excited and object E is rough, then person Y is a parent of person Z.\nFor all X, if there exists B such that person X is curious and object B is hard, then person X is funny.\nFor all X, if there exists E such that object X is rough and person E is weak, then object X is hard.\nFor all X, if object X is red and object X is big, then object X is small.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is calm and person X is brave, then person X is excited.\n\nAnd the following facts:\ncarol is tall.\nphone is clean.\ngeorge is an enemy of bob.\nalice is a sibling of carol.\nbob owns apple.\nfrank is calm.\nbook is small.\ngeorge is hungry.\n\nQUESTION:\nIs george is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 209,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(carol).",
    "c": "angry(X) :- tall(X).\nfriendly(Y) :- happy(Y).\nfriend(Y,Z) :- bored(Y), curious(Z).\nparent(Y,Z) :- busy(Y), excited(Z), rough(E).\nfunny(X) :- curious(X), hard(B).\nhard(X) :- rough(X), weak(E).\nsmall(X) :- red(X), big(X).\nold(X) :- light(X).\nred(X) :- hard(X).\nexcited(X) :- calm(X), brave(X).\nangry(carol).\nclean(phone).\nenemy(george,bob).\nsibling(alice,carol).\nowns(bob,apple).\ncalm(frank).\nsmall(book).\nhungry(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is angry.\nFor all Y, if person Y is happy, then person Y is friendly.\nFor all Y, Z, if person Y is bored and person Z is curious, then person Y is a friend of person Z.\nFor all Y, Z, if there exists E such that person Y is busy and person Z is excited and object E is rough, then person Y is a parent of person Z.\nFor all X, if there exists B such that person X is curious and object B is hard, then person X is funny.\nFor all X, if there exists E such that object X is rough and person E is weak, then object X is hard.\nFor all X, if object X is red and object X is big, then object X is small.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is calm and person X is brave, then person X is excited.\n\nAnd the following facts:\ncarol is angry.\nphone is clean.\ngeorge is an enemy of bob.\nalice is a sibling of carol.\nbob owns apple.\nfrank is calm.\nbook is small.\ngeorge is hungry.\n\nQUESTION:\nCould carol is tall explain carol is angry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 210,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(dave).",
    "c": "angry(X) :- tall(X).\nfriendly(Y) :- happy(Y).\nfriend(Y,Z) :- bored(Y), curious(Z).\nparent(Y,Z) :- busy(Y), excited(Z), rough(E).\nfunny(X) :- curious(X), hard(B).\nhard(X) :- rough(X), weak(E).\nsmall(X) :- red(X), big(X).\nold(X) :- light(X).\nred(X) :- hard(X).\nexcited(X) :- calm(X), brave(X).\nangry(carol).\nclean(phone).\nenemy(george,bob).\nsibling(alice,carol).\nowns(bob,apple).\ncalm(frank).\nsmall(book).\nhungry(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is angry.\nFor all Y, if person Y is happy, then person Y is friendly.\nFor all Y, Z, if person Y is bored and person Z is curious, then person Y is a friend of person Z.\nFor all Y, Z, if there exists E such that person Y is busy and person Z is excited and object E is rough, then person Y is a parent of person Z.\nFor all X, if there exists B such that person X is curious and object B is hard, then person X is funny.\nFor all X, if there exists E such that object X is rough and person E is weak, then object X is hard.\nFor all X, if object X is red and object X is big, then object X is small.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is calm and person X is brave, then person X is excited.\n\nAnd the following facts:\ncarol is angry.\nphone is clean.\ngeorge is an enemy of bob.\nalice is a sibling of carol.\nbob owns apple.\nfrank is calm.\nbook is small.\ngeorge is hungry.\n\nQUESTION:\nCould dave is hungry explain carol is angry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 211,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "clean(X) :- hard(X).\nfriendly(Y) :- calm(Y), enemy(Y,B), angry(B).\nweak(Y) :- friendly(Y), owns(Y,W), smooth(W).\nbrave(X) :- clever(X), friend(X,B), funny(B).\ntired(X) :- hungry(X).\nhungry(X) :- angry(X).\nrough(X) :- wet(X).\nbig(X) :- light(X).\nsoft(X) :- new(X).\nsoft(X) :- old(X).\nhard(pencil).\nbusy(george).\nparent(george,carol).\ndislikes(frank,apple).\nenemy(carol,bob).\ntired(carol).\ncalm(alice).\nold(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is clean.\nFor all Y, if there exists B such that person Y is calm and person Y is an enemy of person B and person B is angry, then person Y is friendly.\nFor all Y, if there exists W such that person Y is friendly and person Y owns object W and object W is smooth, then person Y is weak.\nFor all X, if there exists B such that person X is clever and person X is a friend of person B and person B is funny, then person X is brave.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is old, then object X is soft.\n\nAnd the following facts:\npencil is hard.\ngeorge is busy.\ngeorge is a parent of carol.\nfrank dislikes apple.\ncarol is an enemy of bob.\ncarol is tired.\nalice is calm.\ncar is old.\n\nQUESTION:\nIs pencil is clean true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 212,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(ball).",
    "c": "clean(X) :- hard(X).\nfriendly(Y) :- calm(Y), enemy(Y,B), angry(B).\nweak(Y) :- friendly(Y), owns(Y,W), smooth(W).\nbrave(X) :- clever(X), friend(X,B), funny(B).\ntired(X) :- hungry(X).\nhungry(X) :- angry(X).\nrough(X) :- wet(X).\nbig(X) :- light(X).\nsoft(X) :- new(X).\nsoft(X) :- old(X).\nhard(pencil).\nbusy(george).\nparent(george,carol).\ndislikes(frank,apple).\nenemy(carol,bob).\ntired(carol).\ncalm(alice).\nold(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is clean.\nFor all Y, if there exists B such that person Y is calm and person Y is an enemy of person B and person B is angry, then person Y is friendly.\nFor all Y, if there exists W such that person Y is friendly and person Y owns object W and object W is smooth, then person Y is weak.\nFor all X, if there exists B such that person X is clever and person X is a friend of person B and person B is funny, then person X is brave.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is old, then object X is soft.\n\nAnd the following facts:\npencil is hard.\ngeorge is busy.\ngeorge is a parent of carol.\nfrank dislikes apple.\ncarol is an enemy of bob.\ncarol is tired.\nalice is calm.\ncar is old.\n\nQUESTION:\nIs ball is smooth true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 213,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "clean(X) :- hard(X).\nfriendly(Y) :- calm(Y), enemy(Y,B), angry(B).\nweak(Y) :- friendly(Y), owns(Y,W), smooth(W).\nbrave(X) :- clever(X), friend(X,B), funny(B).\ntired(X) :- hungry(X).\nhungry(X) :- angry(X).\nrough(X) :- wet(X).\nbig(X) :- light(X).\nsoft(X) :- new(X).\nsoft(X) :- old(X).\nclean(pencil).\nbusy(george).\nparent(george,carol).\ndislikes(frank,apple).\nenemy(carol,bob).\ntired(carol).\ncalm(alice).\nold(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is clean.\nFor all Y, if there exists B such that person Y is calm and person Y is an enemy of person B and person B is angry, then person Y is friendly.\nFor all Y, if there exists W such that person Y is friendly and person Y owns object W and object W is smooth, then person Y is weak.\nFor all X, if there exists B such that person X is clever and person X is a friend of person B and person B is funny, then person X is brave.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is old, then object X is soft.\n\nAnd the following facts:\npencil is clean.\ngeorge is busy.\ngeorge is a parent of carol.\nfrank dislikes apple.\ncarol is an enemy of bob.\ncarol is tired.\nalice is calm.\ncar is old.\n\nQUESTION:\nCould pencil is hard explain pencil is clean?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 214,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(alice).",
    "c": "clean(X) :- hard(X).\nfriendly(Y) :- calm(Y), enemy(Y,B), angry(B).\nweak(Y) :- friendly(Y), owns(Y,W), smooth(W).\nbrave(X) :- clever(X), friend(X,B), funny(B).\ntired(X) :- hungry(X).\nhungry(X) :- angry(X).\nrough(X) :- wet(X).\nbig(X) :- light(X).\nsoft(X) :- new(X).\nsoft(X) :- old(X).\nclean(pencil).\nbusy(george).\nparent(george,carol).\ndislikes(frank,apple).\nenemy(carol,bob).\ntired(carol).\ncalm(alice).\nold(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is clean.\nFor all Y, if there exists B such that person Y is calm and person Y is an enemy of person B and person B is angry, then person Y is friendly.\nFor all Y, if there exists W such that person Y is friendly and person Y owns object W and object W is smooth, then person Y is weak.\nFor all X, if there exists B such that person X is clever and person X is a friend of person B and person B is funny, then person X is brave.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is old, then object X is soft.\n\nAnd the following facts:\npencil is clean.\ngeorge is busy.\ngeorge is a parent of carol.\nfrank dislikes apple.\ncarol is an enemy of bob.\ncarol is tired.\nalice is calm.\ncar is old.\n\nQUESTION:\nCould alice is weak explain pencil is clean?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 215,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(dave).",
    "c": "calm(X) :- busy(X).\ndislikes(Z,X) :- excited(Z), smooth(X), dislikes(B,X).\nclean(Z) :- red(Z).\nfriendly(Y) :- excited(Y), hard(C).\nsmooth(Y) :- heavy(Y).\ncurious(Y) :- clever(Y), angry(F).\nowns(X,Y) :- sad(X), clean(Y).\nfunny(X) :- hungry(X).\ntall(X) :- friendly(X), funny(X).\nangry(X) :- clever(X).\nbusy(dave).\nhappy(george).\nstrong(alice).\nbrave(george).\nweak(carol).\nheavy(car).\ndislikes(eve,pencil).\ntall(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is calm.\nFor all X, Z, if there exists B such that person Z is excited and object X is smooth and person B dislikes object X, then person Z dislikes object X.\nFor all Z, if object Z is red, then object Z is clean.\nFor all Y, if there exists C such that person Y is excited and object C is hard, then person Y is friendly.\nFor all Y, if object Y is heavy, then object Y is smooth.\nFor all Y, if there exists F such that person Y is clever and person F is angry, then person Y is curious.\nFor all X, Y, if person X is sad and object Y is clean, then person X owns object Y.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is friendly and person X is funny, then person X is tall.\nFor all X, if person X is clever, then person X is angry.\n\nAnd the following facts:\ndave is busy.\ngeorge is happy.\nalice is strong.\ngeorge is brave.\ncarol is weak.\ncar is heavy.\neve dislikes pencil.\ngeorge is tall.\n\nQUESTION:\nIs dave is calm true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 216,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(dave).",
    "c": "calm(X) :- busy(X).\ndislikes(Z,X) :- excited(Z), smooth(X), dislikes(B,X).\nclean(Z) :- red(Z).\nfriendly(Y) :- excited(Y), hard(C).\nsmooth(Y) :- heavy(Y).\ncurious(Y) :- clever(Y), angry(F).\nowns(X,Y) :- sad(X), clean(Y).\nfunny(X) :- hungry(X).\ntall(X) :- friendly(X), funny(X).\nangry(X) :- clever(X).\nbusy(dave).\nhappy(george).\nstrong(alice).\nbrave(george).\nweak(carol).\nheavy(car).\ndislikes(eve,pencil).\ntall(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is calm.\nFor all X, Z, if there exists B such that person Z is excited and object X is smooth and person B dislikes object X, then person Z dislikes object X.\nFor all Z, if object Z is red, then object Z is clean.\nFor all Y, if there exists C such that person Y is excited and object C is hard, then person Y is friendly.\nFor all Y, if object Y is heavy, then object Y is smooth.\nFor all Y, if there exists F such that person Y is clever and person F is angry, then person Y is curious.\nFor all X, Y, if person X is sad and object Y is clean, then person X owns object Y.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is friendly and person X is funny, then person X is tall.\nFor all X, if person X is clever, then person X is angry.\n\nAnd the following facts:\ndave is busy.\ngeorge is happy.\nalice is strong.\ngeorge is brave.\ncarol is weak.\ncar is heavy.\neve dislikes pencil.\ngeorge is tall.\n\nQUESTION:\nIs dave is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 217,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(dave).",
    "c": "calm(X) :- busy(X).\ndislikes(Z,X) :- excited(Z), smooth(X), dislikes(B,X).\nclean(Z) :- red(Z).\nfriendly(Y) :- excited(Y), hard(C).\nsmooth(Y) :- heavy(Y).\ncurious(Y) :- clever(Y), angry(F).\nowns(X,Y) :- sad(X), clean(Y).\nfunny(X) :- hungry(X).\ntall(X) :- friendly(X), funny(X).\nangry(X) :- clever(X).\ncalm(dave).\nhappy(george).\nstrong(alice).\nbrave(george).\nweak(carol).\nheavy(car).\ndislikes(eve,pencil).\ntall(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is calm.\nFor all X, Z, if there exists B such that person Z is excited and object X is smooth and person B dislikes object X, then person Z dislikes object X.\nFor all Z, if object Z is red, then object Z is clean.\nFor all Y, if there exists C such that person Y is excited and object C is hard, then person Y is friendly.\nFor all Y, if object Y is heavy, then object Y is smooth.\nFor all Y, if there exists F such that person Y is clever and person F is angry, then person Y is curious.\nFor all X, Y, if person X is sad and object Y is clean, then person X owns object Y.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is friendly and person X is funny, then person X is tall.\nFor all X, if person X is clever, then person X is angry.\n\nAnd the following facts:\ndave is calm.\ngeorge is happy.\nalice is strong.\ngeorge is brave.\ncarol is weak.\ncar is heavy.\neve dislikes pencil.\ngeorge is tall.\n\nQUESTION:\nCould dave is busy explain dave is calm?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 218,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(frank).",
    "c": "calm(X) :- busy(X).\ndislikes(Z,X) :- excited(Z), smooth(X), dislikes(B,X).\nclean(Z) :- red(Z).\nfriendly(Y) :- excited(Y), hard(C).\nsmooth(Y) :- heavy(Y).\ncurious(Y) :- clever(Y), angry(F).\nowns(X,Y) :- sad(X), clean(Y).\nfunny(X) :- hungry(X).\ntall(X) :- friendly(X), funny(X).\nangry(X) :- clever(X).\ncalm(dave).\nhappy(george).\nstrong(alice).\nbrave(george).\nweak(carol).\nheavy(car).\ndislikes(eve,pencil).\ntall(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is calm.\nFor all X, Z, if there exists B such that person Z is excited and object X is smooth and person B dislikes object X, then person Z dislikes object X.\nFor all Z, if object Z is red, then object Z is clean.\nFor all Y, if there exists C such that person Y is excited and object C is hard, then person Y is friendly.\nFor all Y, if object Y is heavy, then object Y is smooth.\nFor all Y, if there exists F such that person Y is clever and person F is angry, then person Y is curious.\nFor all X, Y, if person X is sad and object Y is clean, then person X owns object Y.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is friendly and person X is funny, then person X is tall.\nFor all X, if person X is clever, then person X is angry.\n\nAnd the following facts:\ndave is calm.\ngeorge is happy.\nalice is strong.\ngeorge is brave.\ncarol is weak.\ncar is heavy.\neve dislikes pencil.\ngeorge is tall.\n\nQUESTION:\nCould frank is hungry explain dave is calm?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 219,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "light(X) :- rough(X).\ncalm(Z) :- curious(Z), friend(Z,V), sad(V).\nhappy(Y) :- tall(Y).\nbusy(Y) :- happy(Y), owns(Y,A), old(A).\nsad(Z) :- hungry(Z), dislikes(Z,B), clean(B).\nfunny(X) :- happy(X).\nbored(X) :- brave(X), friendly(X).\nsad(X) :- weak(X).\nwet(X) :- small(X), old(X).\nhappy(X) :- weak(X), curious(X).\nrough(car).\nfriendly(frank).\nparent(frank,carol).\nparent(frank,alice).\nsibling(dave,eve).\ndislikes(bob,car).\nenemy(alice,george).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is light.\nFor all Z, if there exists V such that person Z is curious and person Z is a friend of person V and person V is sad, then person Z is calm.\nFor all Y, if person Y is tall, then person Y is happy.\nFor all Y, if there exists A such that person Y is happy and person Y owns object A and object A is old, then person Y is busy.\nFor all Z, if there exists B such that person Z is hungry and person Z dislikes object B and object B is clean, then person Z is sad.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is brave and person X is friendly, then person X is bored.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if object X is small and object X is old, then object X is wet.\nFor all X, if person X is weak and person X is curious, then person X is happy.\n\nAnd the following facts:\ncar is rough.\nfrank is friendly.\nfrank is a parent of carol.\nfrank is a parent of alice.\ndave is a sibling of eve.\nbob dislikes car.\nalice is an enemy of george.\neve is an enemy of bob.\n\nQUESTION:\nIs car is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 220,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(apple).",
    "c": "light(X) :- rough(X).\ncalm(Z) :- curious(Z), friend(Z,V), sad(V).\nhappy(Y) :- tall(Y).\nbusy(Y) :- happy(Y), owns(Y,A), old(A).\nsad(Z) :- hungry(Z), dislikes(Z,B), clean(B).\nfunny(X) :- happy(X).\nbored(X) :- brave(X), friendly(X).\nsad(X) :- weak(X).\nwet(X) :- small(X), old(X).\nhappy(X) :- weak(X), curious(X).\nrough(car).\nfriendly(frank).\nparent(frank,carol).\nparent(frank,alice).\nsibling(dave,eve).\ndislikes(bob,car).\nenemy(alice,george).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is light.\nFor all Z, if there exists V such that person Z is curious and person Z is a friend of person V and person V is sad, then person Z is calm.\nFor all Y, if person Y is tall, then person Y is happy.\nFor all Y, if there exists A such that person Y is happy and person Y owns object A and object A is old, then person Y is busy.\nFor all Z, if there exists B such that person Z is hungry and person Z dislikes object B and object B is clean, then person Z is sad.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is brave and person X is friendly, then person X is bored.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if object X is small and object X is old, then object X is wet.\nFor all X, if person X is weak and person X is curious, then person X is happy.\n\nAnd the following facts:\ncar is rough.\nfrank is friendly.\nfrank is a parent of carol.\nfrank is a parent of alice.\ndave is a sibling of eve.\nbob dislikes car.\nalice is an enemy of george.\neve is an enemy of bob.\n\nQUESTION:\nIs apple is clean true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 221,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(car).",
    "c": "light(X) :- rough(X).\ncalm(Z) :- curious(Z), friend(Z,V), sad(V).\nhappy(Y) :- tall(Y).\nbusy(Y) :- happy(Y), owns(Y,A), old(A).\nsad(Z) :- hungry(Z), dislikes(Z,B), clean(B).\nfunny(X) :- happy(X).\nbored(X) :- brave(X), friendly(X).\nsad(X) :- weak(X).\nwet(X) :- small(X), old(X).\nhappy(X) :- weak(X), curious(X).\nlight(car).\nfriendly(frank).\nparent(frank,carol).\nparent(frank,alice).\nsibling(dave,eve).\ndislikes(bob,car).\nenemy(alice,george).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is light.\nFor all Z, if there exists V such that person Z is curious and person Z is a friend of person V and person V is sad, then person Z is calm.\nFor all Y, if person Y is tall, then person Y is happy.\nFor all Y, if there exists A such that person Y is happy and person Y owns object A and object A is old, then person Y is busy.\nFor all Z, if there exists B such that person Z is hungry and person Z dislikes object B and object B is clean, then person Z is sad.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is brave and person X is friendly, then person X is bored.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if object X is small and object X is old, then object X is wet.\nFor all X, if person X is weak and person X is curious, then person X is happy.\n\nAnd the following facts:\ncar is light.\nfrank is friendly.\nfrank is a parent of carol.\nfrank is a parent of alice.\ndave is a sibling of eve.\nbob dislikes car.\nalice is an enemy of george.\neve is an enemy of bob.\n\nQUESTION:\nCould car is rough explain car is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 222,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(carol).",
    "c": "light(X) :- rough(X).\ncalm(Z) :- curious(Z), friend(Z,V), sad(V).\nhappy(Y) :- tall(Y).\nbusy(Y) :- happy(Y), owns(Y,A), old(A).\nsad(Z) :- hungry(Z), dislikes(Z,B), clean(B).\nfunny(X) :- happy(X).\nbored(X) :- brave(X), friendly(X).\nsad(X) :- weak(X).\nwet(X) :- small(X), old(X).\nhappy(X) :- weak(X), curious(X).\nlight(car).\nfriendly(frank).\nparent(frank,carol).\nparent(frank,alice).\nsibling(dave,eve).\ndislikes(bob,car).\nenemy(alice,george).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is light.\nFor all Z, if there exists V such that person Z is curious and person Z is a friend of person V and person V is sad, then person Z is calm.\nFor all Y, if person Y is tall, then person Y is happy.\nFor all Y, if there exists A such that person Y is happy and person Y owns object A and object A is old, then person Y is busy.\nFor all Z, if there exists B such that person Z is hungry and person Z dislikes object B and object B is clean, then person Z is sad.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is brave and person X is friendly, then person X is bored.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if object X is small and object X is old, then object X is wet.\nFor all X, if person X is weak and person X is curious, then person X is happy.\n\nAnd the following facts:\ncar is light.\nfrank is friendly.\nfrank is a parent of carol.\nfrank is a parent of alice.\ndave is a sibling of eve.\nbob dislikes car.\nalice is an enemy of george.\neve is an enemy of bob.\n\nQUESTION:\nCould carol is tired explain car is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 223,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "old(apple).",
    "c": "clean(X) :- new(X).\nsoft(X) :- clean(X).\ndirty(X) :- soft(X).\nbig(X) :- dirty(X).\nold(X) :- big(X).\nred(X) :- red(X), likes(W,X), bored(W).\ncalm(Z) :- tired(Z), likes(Z,W), rough(W).\nlight(X) :- smooth(X).\nsad(X) :- clever(X).\nclever(X) :- sad(X).\nnew(apple).\nparent(bob,dave).\ndislikes(carol,phone).\ncalm(eve).\nlight(ball).\nenemy(alice,george).\nwet(book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if there exists W such that object X is red and person W likes object X and person W is bored, then object X is red.\nFor all Z, if there exists W such that person Z is tired and person Z likes object W and object W is rough, then person Z is calm.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\n\nAnd the following facts:\napple is new.\nbob is a parent of dave.\ncarol dislikes phone.\neve is calm.\nball is light.\nalice is an enemy of george.\nbook is wet.\nbob owns pencil.\n\nQUESTION:\nIs apple is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 224,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(car).",
    "c": "clean(X) :- new(X).\nsoft(X) :- clean(X).\ndirty(X) :- soft(X).\nbig(X) :- dirty(X).\nold(X) :- big(X).\nred(X) :- red(X), likes(W,X), bored(W).\ncalm(Z) :- tired(Z), likes(Z,W), rough(W).\nlight(X) :- smooth(X).\nsad(X) :- clever(X).\nclever(X) :- sad(X).\nnew(apple).\nparent(bob,dave).\ndislikes(carol,phone).\ncalm(eve).\nlight(ball).\nenemy(alice,george).\nwet(book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if there exists W such that object X is red and person W likes object X and person W is bored, then object X is red.\nFor all Z, if there exists W such that person Z is tired and person Z likes object W and object W is rough, then person Z is calm.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\n\nAnd the following facts:\napple is new.\nbob is a parent of dave.\ncarol dislikes phone.\neve is calm.\nball is light.\nalice is an enemy of george.\nbook is wet.\nbob owns pencil.\n\nQUESTION:\nIs car is heavy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 225,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(apple).",
    "c": "clean(X) :- new(X).\nsoft(X) :- clean(X).\ndirty(X) :- soft(X).\nbig(X) :- dirty(X).\nold(X) :- big(X).\nred(X) :- red(X), likes(W,X), bored(W).\ncalm(Z) :- tired(Z), likes(Z,W), rough(W).\nlight(X) :- smooth(X).\nsad(X) :- clever(X).\nclever(X) :- sad(X).\nold(apple).\nparent(bob,dave).\ndislikes(carol,phone).\ncalm(eve).\nlight(ball).\nenemy(alice,george).\nwet(book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if there exists W such that object X is red and person W likes object X and person W is bored, then object X is red.\nFor all Z, if there exists W such that person Z is tired and person Z likes object W and object W is rough, then person Z is calm.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\n\nAnd the following facts:\napple is old.\nbob is a parent of dave.\ncarol dislikes phone.\neve is calm.\nball is light.\nalice is an enemy of george.\nbook is wet.\nbob owns pencil.\n\nQUESTION:\nCould apple is new explain apple is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 226,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "clean(X) :- new(X).\nsoft(X) :- clean(X).\ndirty(X) :- soft(X).\nbig(X) :- dirty(X).\nold(X) :- big(X).\nred(X) :- red(X), likes(W,X), bored(W).\ncalm(Z) :- tired(Z), likes(Z,W), rough(W).\nlight(X) :- smooth(X).\nsad(X) :- clever(X).\nclever(X) :- sad(X).\nold(apple).\nparent(bob,dave).\ndislikes(carol,phone).\ncalm(eve).\nlight(ball).\nenemy(alice,george).\nwet(book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if there exists W such that object X is red and person W likes object X and person W is bored, then object X is red.\nFor all Z, if there exists W such that person Z is tired and person Z likes object W and object W is rough, then person Z is calm.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\n\nAnd the following facts:\napple is old.\nbob is a parent of dave.\ncarol dislikes phone.\neve is calm.\nball is light.\nalice is an enemy of george.\nbook is wet.\nbob owns pencil.\n\nQUESTION:\nCould ball is heavy explain apple is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 227,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "heavy(car).",
    "c": "small(X) :- old(X).\nsoft(X) :- small(X).\nhard(X) :- soft(X).\nwet(X) :- hard(X).\nheavy(X) :- wet(X).\nclever(X) :- weak(X).\ntall(Y) :- angry(Y), brave(D).\nbusy(Z) :- busy(Z), sibling(Z,W), clever(W).\nlikes(X,Y) :- brave(X), rough(Y).\nsad(X) :- hungry(X).\nold(car).\ndislikes(alice,book).\nfriend(eve,dave).\nsibling(alice,eve).\nsibling(frank,dave).\nenemy(bob,dave).\nenemy(carol,eve).\nsibling(george,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is weak, then person X is clever.\nFor all Y, if there exists D such that person Y is angry and person D is brave, then person Y is tall.\nFor all Z, if there exists W such that person Z is busy and person Z is a sibling of person W and person W is clever, then person Z is busy.\nFor all X, Y, if person X is brave and object Y is rough, then person X likes object Y.\nFor all X, if person X is hungry, then person X is sad.\n\nAnd the following facts:\ncar is old.\nalice dislikes book.\neve is a friend of dave.\nalice is a sibling of eve.\nfrank is a sibling of dave.\nbob is an enemy of dave.\ncarol is an enemy of eve.\ngeorge is a sibling of alice.\n\nQUESTION:\nIs car is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 228,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(alice).",
    "c": "small(X) :- old(X).\nsoft(X) :- small(X).\nhard(X) :- soft(X).\nwet(X) :- hard(X).\nheavy(X) :- wet(X).\nclever(X) :- weak(X).\ntall(Y) :- angry(Y), brave(D).\nbusy(Z) :- busy(Z), sibling(Z,W), clever(W).\nlikes(X,Y) :- brave(X), rough(Y).\nsad(X) :- hungry(X).\nold(car).\ndislikes(alice,book).\nfriend(eve,dave).\nsibling(alice,eve).\nsibling(frank,dave).\nenemy(bob,dave).\nenemy(carol,eve).\nsibling(george,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is weak, then person X is clever.\nFor all Y, if there exists D such that person Y is angry and person D is brave, then person Y is tall.\nFor all Z, if there exists W such that person Z is busy and person Z is a sibling of person W and person W is clever, then person Z is busy.\nFor all X, Y, if person X is brave and object Y is rough, then person X likes object Y.\nFor all X, if person X is hungry, then person X is sad.\n\nAnd the following facts:\ncar is old.\nalice dislikes book.\neve is a friend of dave.\nalice is a sibling of eve.\nfrank is a sibling of dave.\nbob is an enemy of dave.\ncarol is an enemy of eve.\ngeorge is a sibling of alice.\n\nQUESTION:\nIs alice is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 229,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(car).",
    "c": "small(X) :- old(X).\nsoft(X) :- small(X).\nhard(X) :- soft(X).\nwet(X) :- hard(X).\nheavy(X) :- wet(X).\nclever(X) :- weak(X).\ntall(Y) :- angry(Y), brave(D).\nbusy(Z) :- busy(Z), sibling(Z,W), clever(W).\nlikes(X,Y) :- brave(X), rough(Y).\nsad(X) :- hungry(X).\nheavy(car).\ndislikes(alice,book).\nfriend(eve,dave).\nsibling(alice,eve).\nsibling(frank,dave).\nenemy(bob,dave).\nenemy(carol,eve).\nsibling(george,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is weak, then person X is clever.\nFor all Y, if there exists D such that person Y is angry and person D is brave, then person Y is tall.\nFor all Z, if there exists W such that person Z is busy and person Z is a sibling of person W and person W is clever, then person Z is busy.\nFor all X, Y, if person X is brave and object Y is rough, then person X likes object Y.\nFor all X, if person X is hungry, then person X is sad.\n\nAnd the following facts:\ncar is heavy.\nalice dislikes book.\neve is a friend of dave.\nalice is a sibling of eve.\nfrank is a sibling of dave.\nbob is an enemy of dave.\ncarol is an enemy of eve.\ngeorge is a sibling of alice.\n\nQUESTION:\nCould car is old explain car is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 230,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "new(book).",
    "c": "small(X) :- old(X).\nsoft(X) :- small(X).\nhard(X) :- soft(X).\nwet(X) :- hard(X).\nheavy(X) :- wet(X).\nclever(X) :- weak(X).\ntall(Y) :- angry(Y), brave(D).\nbusy(Z) :- busy(Z), sibling(Z,W), clever(W).\nlikes(X,Y) :- brave(X), rough(Y).\nsad(X) :- hungry(X).\nheavy(car).\ndislikes(alice,book).\nfriend(eve,dave).\nsibling(alice,eve).\nsibling(frank,dave).\nenemy(bob,dave).\nenemy(carol,eve).\nsibling(george,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is weak, then person X is clever.\nFor all Y, if there exists D such that person Y is angry and person D is brave, then person Y is tall.\nFor all Z, if there exists W such that person Z is busy and person Z is a sibling of person W and person W is clever, then person Z is busy.\nFor all X, Y, if person X is brave and object Y is rough, then person X likes object Y.\nFor all X, if person X is hungry, then person X is sad.\n\nAnd the following facts:\ncar is heavy.\nalice dislikes book.\neve is a friend of dave.\nalice is a sibling of eve.\nfrank is a sibling of dave.\nbob is an enemy of dave.\ncarol is an enemy of eve.\ngeorge is a sibling of alice.\n\nQUESTION:\nCould book is new explain car is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 231,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(eve).",
    "c": "busy(X) :- funny(X).\nexcited(X) :- busy(X).\nhungry(X) :- excited(X).\nfriendly(X) :- hungry(X).\ntired(X) :- friendly(X).\nbig(X) :- soft(X), dislikes(V,X), weak(V).\ndirty(X) :- clean(X), brave(A).\nsibling(X,Y) :- tall(X), calm(Y).\nsibling(X,Y) :- weak(X), brave(Y), parent(X,Y).\nnew(X) :- red(X).\nfunny(eve).\nowns(george,phone).\ndislikes(carol,apple).\nowns(dave,car).\nwet(pencil).\nparent(eve,bob).\nbored(frank).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if there exists V such that object X is soft and person V dislikes object X and person V is weak, then object X is big.\nFor all X, if there exists A such that object X is clean and person A is brave, then object X is dirty.\nFor all X, Y, if person X is tall and person Y is calm, then person X is a sibling of person Y.\nFor all X, Y, if person X is weak and person Y is brave and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is red, then object X is new.\n\nAnd the following facts:\neve is funny.\ngeorge owns phone.\ncarol dislikes apple.\ndave owns car.\npencil is wet.\neve is a parent of bob.\nfrank is bored.\ngeorge owns pencil.\n\nQUESTION:\nIs eve is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 232,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "busy(X) :- funny(X).\nexcited(X) :- busy(X).\nhungry(X) :- excited(X).\nfriendly(X) :- hungry(X).\ntired(X) :- friendly(X).\nbig(X) :- soft(X), dislikes(V,X), weak(V).\ndirty(X) :- clean(X), brave(A).\nsibling(X,Y) :- tall(X), calm(Y).\nsibling(X,Y) :- weak(X), brave(Y), parent(X,Y).\nnew(X) :- red(X).\nfunny(eve).\nowns(george,phone).\ndislikes(carol,apple).\nowns(dave,car).\nwet(pencil).\nparent(eve,bob).\nbored(frank).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if there exists V such that object X is soft and person V dislikes object X and person V is weak, then object X is big.\nFor all X, if there exists A such that object X is clean and person A is brave, then object X is dirty.\nFor all X, Y, if person X is tall and person Y is calm, then person X is a sibling of person Y.\nFor all X, Y, if person X is weak and person Y is brave and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is red, then object X is new.\n\nAnd the following facts:\neve is funny.\ngeorge owns phone.\ncarol dislikes apple.\ndave owns car.\npencil is wet.\neve is a parent of bob.\nfrank is bored.\ngeorge owns pencil.\n\nQUESTION:\nIs bob is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 233,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(eve).",
    "c": "busy(X) :- funny(X).\nexcited(X) :- busy(X).\nhungry(X) :- excited(X).\nfriendly(X) :- hungry(X).\ntired(X) :- friendly(X).\nbig(X) :- soft(X), dislikes(V,X), weak(V).\ndirty(X) :- clean(X), brave(A).\nsibling(X,Y) :- tall(X), calm(Y).\nsibling(X,Y) :- weak(X), brave(Y), parent(X,Y).\nnew(X) :- red(X).\ntired(eve).\nowns(george,phone).\ndislikes(carol,apple).\nowns(dave,car).\nwet(pencil).\nparent(eve,bob).\nbored(frank).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if there exists V such that object X is soft and person V dislikes object X and person V is weak, then object X is big.\nFor all X, if there exists A such that object X is clean and person A is brave, then object X is dirty.\nFor all X, Y, if person X is tall and person Y is calm, then person X is a sibling of person Y.\nFor all X, Y, if person X is weak and person Y is brave and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is red, then object X is new.\n\nAnd the following facts:\neve is tired.\ngeorge owns phone.\ncarol dislikes apple.\ndave owns car.\npencil is wet.\neve is a parent of bob.\nfrank is bored.\ngeorge owns pencil.\n\nQUESTION:\nCould eve is funny explain eve is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 234,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(ball).",
    "c": "busy(X) :- funny(X).\nexcited(X) :- busy(X).\nhungry(X) :- excited(X).\nfriendly(X) :- hungry(X).\ntired(X) :- friendly(X).\nbig(X) :- soft(X), dislikes(V,X), weak(V).\ndirty(X) :- clean(X), brave(A).\nsibling(X,Y) :- tall(X), calm(Y).\nsibling(X,Y) :- weak(X), brave(Y), parent(X,Y).\nnew(X) :- red(X).\ntired(eve).\nowns(george,phone).\ndislikes(carol,apple).\nowns(dave,car).\nwet(pencil).\nparent(eve,bob).\nbored(frank).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if there exists V such that object X is soft and person V dislikes object X and person V is weak, then object X is big.\nFor all X, if there exists A such that object X is clean and person A is brave, then object X is dirty.\nFor all X, Y, if person X is tall and person Y is calm, then person X is a sibling of person Y.\nFor all X, Y, if person X is weak and person Y is brave and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is red, then object X is new.\n\nAnd the following facts:\neve is tired.\ngeorge owns phone.\ncarol dislikes apple.\ndave owns car.\npencil is wet.\neve is a parent of bob.\nfrank is bored.\ngeorge owns pencil.\n\nQUESTION:\nCould ball is red explain eve is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 235,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(car).",
    "c": "hard(X) :- small(X).\nsmooth(X) :- hard(X).\nnew(X) :- smooth(X).\nlight(X) :- new(X).\ndirty(X) :- light(X).\nstrong(X) :- busy(X), parent(X,U), busy(U).\ntall(X) :- clever(X), friend(X,V), curious(V).\ntall(X) :- strong(X).\nred(X) :- rough(X).\ncurious(X) :- happy(X).\nsmall(car).\nenemy(frank,bob).\nfriend(carol,frank).\nsibling(george,alice).\nsad(eve).\nowns(eve,ball).\nhungry(dave).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if there exists U such that person X is busy and person X is a parent of person U and person U is busy, then person X is strong.\nFor all X, if there exists V such that person X is clever and person X is a friend of person V and person V is curious, then person X is tall.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is happy, then person X is curious.\n\nAnd the following facts:\ncar is small.\nfrank is an enemy of bob.\ncarol is a friend of frank.\ngeorge is a sibling of alice.\neve is sad.\neve owns ball.\ndave is hungry.\ncarol is an enemy of george.\n\nQUESTION:\nIs car is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 236,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(bob).",
    "c": "hard(X) :- small(X).\nsmooth(X) :- hard(X).\nnew(X) :- smooth(X).\nlight(X) :- new(X).\ndirty(X) :- light(X).\nstrong(X) :- busy(X), parent(X,U), busy(U).\ntall(X) :- clever(X), friend(X,V), curious(V).\ntall(X) :- strong(X).\nred(X) :- rough(X).\ncurious(X) :- happy(X).\nsmall(car).\nenemy(frank,bob).\nfriend(carol,frank).\nsibling(george,alice).\nsad(eve).\nowns(eve,ball).\nhungry(dave).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if there exists U such that person X is busy and person X is a parent of person U and person U is busy, then person X is strong.\nFor all X, if there exists V such that person X is clever and person X is a friend of person V and person V is curious, then person X is tall.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is happy, then person X is curious.\n\nAnd the following facts:\ncar is small.\nfrank is an enemy of bob.\ncarol is a friend of frank.\ngeorge is a sibling of alice.\neve is sad.\neve owns ball.\ndave is hungry.\ncarol is an enemy of george.\n\nQUESTION:\nIs bob is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 237,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(car).",
    "c": "hard(X) :- small(X).\nsmooth(X) :- hard(X).\nnew(X) :- smooth(X).\nlight(X) :- new(X).\ndirty(X) :- light(X).\nstrong(X) :- busy(X), parent(X,U), busy(U).\ntall(X) :- clever(X), friend(X,V), curious(V).\ntall(X) :- strong(X).\nred(X) :- rough(X).\ncurious(X) :- happy(X).\ndirty(car).\nenemy(frank,bob).\nfriend(carol,frank).\nsibling(george,alice).\nsad(eve).\nowns(eve,ball).\nhungry(dave).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if there exists U such that person X is busy and person X is a parent of person U and person U is busy, then person X is strong.\nFor all X, if there exists V such that person X is clever and person X is a friend of person V and person V is curious, then person X is tall.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is happy, then person X is curious.\n\nAnd the following facts:\ncar is dirty.\nfrank is an enemy of bob.\ncarol is a friend of frank.\ngeorge is a sibling of alice.\neve is sad.\neve owns ball.\ndave is hungry.\ncarol is an enemy of george.\n\nQUESTION:\nCould car is small explain car is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 238,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "brave(eve).",
    "c": "hard(X) :- small(X).\nsmooth(X) :- hard(X).\nnew(X) :- smooth(X).\nlight(X) :- new(X).\ndirty(X) :- light(X).\nstrong(X) :- busy(X), parent(X,U), busy(U).\ntall(X) :- clever(X), friend(X,V), curious(V).\ntall(X) :- strong(X).\nred(X) :- rough(X).\ncurious(X) :- happy(X).\ndirty(car).\nenemy(frank,bob).\nfriend(carol,frank).\nsibling(george,alice).\nsad(eve).\nowns(eve,ball).\nhungry(dave).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if there exists U such that person X is busy and person X is a parent of person U and person U is busy, then person X is strong.\nFor all X, if there exists V such that person X is clever and person X is a friend of person V and person V is curious, then person X is tall.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is happy, then person X is curious.\n\nAnd the following facts:\ncar is dirty.\nfrank is an enemy of bob.\ncarol is a friend of frank.\ngeorge is a sibling of alice.\neve is sad.\neve owns ball.\ndave is hungry.\ncarol is an enemy of george.\n\nQUESTION:\nCould eve is brave explain car is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 239,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(dave).",
    "c": "calm(X) :- happy(X).\nangry(X) :- calm(X).\ntired(X) :- angry(X).\nbrave(X) :- tired(X).\ncurious(X) :- brave(X).\nexcited(X) :- curious(X).\ncurious(X) :- excited(X).\nfriendly(X) :- curious(X).\ncalm(X) :- friendly(X).\nhungry(X) :- calm(X).\nhappy(dave).\ndislikes(bob,ball).\nclever(carol).\nsibling(george,dave).\nparent(carol,eve).\nenemy(frank,alice).\nstrong(eve).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\n\nAnd the following facts:\ndave is happy.\nbob dislikes ball.\ncarol is clever.\ngeorge is a sibling of dave.\ncarol is a parent of eve.\nfrank is an enemy of alice.\neve is strong.\neve is a sibling of alice.\n\nQUESTION:\nIs dave is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 240,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "calm(X) :- happy(X).\nangry(X) :- calm(X).\ntired(X) :- angry(X).\nbrave(X) :- tired(X).\ncurious(X) :- brave(X).\nexcited(X) :- curious(X).\ncurious(X) :- excited(X).\nfriendly(X) :- curious(X).\ncalm(X) :- friendly(X).\nhungry(X) :- calm(X).\nhappy(dave).\ndislikes(bob,ball).\nclever(carol).\nsibling(george,dave).\nparent(carol,eve).\nenemy(frank,alice).\nstrong(eve).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\n\nAnd the following facts:\ndave is happy.\nbob dislikes ball.\ncarol is clever.\ngeorge is a sibling of dave.\ncarol is a parent of eve.\nfrank is an enemy of alice.\neve is strong.\neve is a sibling of alice.\n\nQUESTION:\nIs bob is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 241,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(dave).",
    "c": "calm(X) :- happy(X).\nangry(X) :- calm(X).\ntired(X) :- angry(X).\nbrave(X) :- tired(X).\ncurious(X) :- brave(X).\nexcited(X) :- curious(X).\ncurious(X) :- excited(X).\nfriendly(X) :- curious(X).\ncalm(X) :- friendly(X).\nhungry(X) :- calm(X).\nhungry(dave).\ndislikes(bob,ball).\nclever(carol).\nsibling(george,dave).\nparent(carol,eve).\nenemy(frank,alice).\nstrong(eve).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\n\nAnd the following facts:\ndave is hungry.\nbob dislikes ball.\ncarol is clever.\ngeorge is a sibling of dave.\ncarol is a parent of eve.\nfrank is an enemy of alice.\neve is strong.\neve is a sibling of alice.\n\nQUESTION:\nCould dave is happy explain dave is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 242,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "soft(apple).",
    "c": "calm(X) :- happy(X).\nangry(X) :- calm(X).\ntired(X) :- angry(X).\nbrave(X) :- tired(X).\ncurious(X) :- brave(X).\nexcited(X) :- curious(X).\ncurious(X) :- excited(X).\nfriendly(X) :- curious(X).\ncalm(X) :- friendly(X).\nhungry(X) :- calm(X).\nhungry(dave).\ndislikes(bob,ball).\nclever(carol).\nsibling(george,dave).\nparent(carol,eve).\nenemy(frank,alice).\nstrong(eve).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\n\nAnd the following facts:\ndave is hungry.\nbob dislikes ball.\ncarol is clever.\ngeorge is a sibling of dave.\ncarol is a parent of eve.\nfrank is an enemy of alice.\neve is strong.\neve is a sibling of alice.\n\nQUESTION:\nCould apple is soft explain dave is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 243,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(ball).",
    "c": "soft(X) :- big(X).\ndirty(X) :- soft(X).\nnew(X) :- dirty(X).\nsmooth(X) :- new(X).\nheavy(X) :- smooth(X).\nold(X) :- heavy(X).\nsmall(X) :- old(X).\nhard(X) :- small(X).\ndirty(X) :- hard(X).\nrough(X) :- dirty(X).\nbig(ball).\nlikes(eve,ball).\nbrave(eve).\nowns(bob,ball).\ntired(bob).\ndislikes(george,book).\nenemy(eve,dave).\nweak(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\nball is big.\neve likes ball.\neve is brave.\nbob owns ball.\nbob is tired.\ngeorge dislikes book.\neve is an enemy of dave.\ncarol is weak.\n\nQUESTION:\nIs ball is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 244,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(george).",
    "c": "soft(X) :- big(X).\ndirty(X) :- soft(X).\nnew(X) :- dirty(X).\nsmooth(X) :- new(X).\nheavy(X) :- smooth(X).\nold(X) :- heavy(X).\nsmall(X) :- old(X).\nhard(X) :- small(X).\ndirty(X) :- hard(X).\nrough(X) :- dirty(X).\nbig(ball).\nlikes(eve,ball).\nbrave(eve).\nowns(bob,ball).\ntired(bob).\ndislikes(george,book).\nenemy(eve,dave).\nweak(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\nball is big.\neve likes ball.\neve is brave.\nbob owns ball.\nbob is tired.\ngeorge dislikes book.\neve is an enemy of dave.\ncarol is weak.\n\nQUESTION:\nIs george is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 245,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(ball).",
    "c": "soft(X) :- big(X).\ndirty(X) :- soft(X).\nnew(X) :- dirty(X).\nsmooth(X) :- new(X).\nheavy(X) :- smooth(X).\nold(X) :- heavy(X).\nsmall(X) :- old(X).\nhard(X) :- small(X).\ndirty(X) :- hard(X).\nrough(X) :- dirty(X).\nrough(ball).\nlikes(eve,ball).\nbrave(eve).\nowns(bob,ball).\ntired(bob).\ndislikes(george,book).\nenemy(eve,dave).\nweak(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\nball is rough.\neve likes ball.\neve is brave.\nbob owns ball.\nbob is tired.\ngeorge dislikes book.\neve is an enemy of dave.\ncarol is weak.\n\nQUESTION:\nCould ball is big explain ball is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 246,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(carol).",
    "c": "soft(X) :- big(X).\ndirty(X) :- soft(X).\nnew(X) :- dirty(X).\nsmooth(X) :- new(X).\nheavy(X) :- smooth(X).\nold(X) :- heavy(X).\nsmall(X) :- old(X).\nhard(X) :- small(X).\ndirty(X) :- hard(X).\nrough(X) :- dirty(X).\nrough(ball).\nlikes(eve,ball).\nbrave(eve).\nowns(bob,ball).\ntired(bob).\ndislikes(george,book).\nenemy(eve,dave).\nweak(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\nball is rough.\neve likes ball.\neve is brave.\nbob owns ball.\nbob is tired.\ngeorge dislikes book.\neve is an enemy of dave.\ncarol is weak.\n\nQUESTION:\nCould carol is tall explain ball is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 247,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(frank).",
    "c": "funny(X) :- friendly(X).\ncalm(X) :- funny(X).\nbusy(X) :- calm(X).\nstrong(X) :- busy(X).\ncurious(X) :- strong(X).\nhappy(X) :- curious(X).\nbored(X) :- happy(X).\nbrave(X) :- bored(X).\nclever(X) :- brave(X).\nhungry(X) :- clever(X).\nfriendly(frank).\ndislikes(frank,phone).\nfriend(bob,dave).\ndislikes(dave,apple).\nsad(alice).\ndirty(ball).\nlikes(frank,ball).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\n\nAnd the following facts:\nfrank is friendly.\nfrank dislikes phone.\nbob is a friend of dave.\ndave dislikes apple.\nalice is sad.\nball is dirty.\nfrank likes ball.\nbob dislikes pencil.\n\nQUESTION:\nIs frank is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 248,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(bob).",
    "c": "funny(X) :- friendly(X).\ncalm(X) :- funny(X).\nbusy(X) :- calm(X).\nstrong(X) :- busy(X).\ncurious(X) :- strong(X).\nhappy(X) :- curious(X).\nbored(X) :- happy(X).\nbrave(X) :- bored(X).\nclever(X) :- brave(X).\nhungry(X) :- clever(X).\nfriendly(frank).\ndislikes(frank,phone).\nfriend(bob,dave).\ndislikes(dave,apple).\nsad(alice).\ndirty(ball).\nlikes(frank,ball).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\n\nAnd the following facts:\nfrank is friendly.\nfrank dislikes phone.\nbob is a friend of dave.\ndave dislikes apple.\nalice is sad.\nball is dirty.\nfrank likes ball.\nbob dislikes pencil.\n\nQUESTION:\nIs bob is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 249,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(frank).",
    "c": "funny(X) :- friendly(X).\ncalm(X) :- funny(X).\nbusy(X) :- calm(X).\nstrong(X) :- busy(X).\ncurious(X) :- strong(X).\nhappy(X) :- curious(X).\nbored(X) :- happy(X).\nbrave(X) :- bored(X).\nclever(X) :- brave(X).\nhungry(X) :- clever(X).\nhungry(frank).\ndislikes(frank,phone).\nfriend(bob,dave).\ndislikes(dave,apple).\nsad(alice).\ndirty(ball).\nlikes(frank,ball).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\n\nAnd the following facts:\nfrank is hungry.\nfrank dislikes phone.\nbob is a friend of dave.\ndave dislikes apple.\nalice is sad.\nball is dirty.\nfrank likes ball.\nbob dislikes pencil.\n\nQUESTION:\nCould frank is friendly explain frank is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 250,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(alice).",
    "c": "funny(X) :- friendly(X).\ncalm(X) :- funny(X).\nbusy(X) :- calm(X).\nstrong(X) :- busy(X).\ncurious(X) :- strong(X).\nhappy(X) :- curious(X).\nbored(X) :- happy(X).\nbrave(X) :- bored(X).\nclever(X) :- brave(X).\nhungry(X) :- clever(X).\nhungry(frank).\ndislikes(frank,phone).\nfriend(bob,dave).\ndislikes(dave,apple).\nsad(alice).\ndirty(ball).\nlikes(frank,ball).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\n\nAnd the following facts:\nfrank is hungry.\nfrank dislikes phone.\nbob is a friend of dave.\ndave dislikes apple.\nalice is sad.\nball is dirty.\nfrank likes ball.\nbob dislikes pencil.\n\nQUESTION:\nCould alice is clever explain frank is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 251,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(book).",
    "c": "new(X) :- smooth(X).\nclean(X) :- new(X).\nrough(X) :- clean(X).\nsmall(X) :- rough(X).\nwet(X) :- small(X).\nsoft(X) :- wet(X).\nheavy(X) :- soft(X).\nhard(X) :- heavy(X).\nbig(X) :- hard(X).\nred(X) :- big(X).\nsmooth(book).\nparent(bob,frank).\ndislikes(dave,car).\nowns(dave,pencil).\nstrong(bob).\ncalm(carol).\nenemy(george,carol).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is red.\n\nAnd the following facts:\nbook is smooth.\nbob is a parent of frank.\ndave dislikes car.\ndave owns pencil.\nbob is strong.\ncarol is calm.\ngeorge is an enemy of carol.\nbob owns ball.\n\nQUESTION:\nIs book is red true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 252,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(george).",
    "c": "new(X) :- smooth(X).\nclean(X) :- new(X).\nrough(X) :- clean(X).\nsmall(X) :- rough(X).\nwet(X) :- small(X).\nsoft(X) :- wet(X).\nheavy(X) :- soft(X).\nhard(X) :- heavy(X).\nbig(X) :- hard(X).\nred(X) :- big(X).\nsmooth(book).\nparent(bob,frank).\ndislikes(dave,car).\nowns(dave,pencil).\nstrong(bob).\ncalm(carol).\nenemy(george,carol).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is red.\n\nAnd the following facts:\nbook is smooth.\nbob is a parent of frank.\ndave dislikes car.\ndave owns pencil.\nbob is strong.\ncarol is calm.\ngeorge is an enemy of carol.\nbob owns ball.\n\nQUESTION:\nIs george is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 253,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(book).",
    "c": "new(X) :- smooth(X).\nclean(X) :- new(X).\nrough(X) :- clean(X).\nsmall(X) :- rough(X).\nwet(X) :- small(X).\nsoft(X) :- wet(X).\nheavy(X) :- soft(X).\nhard(X) :- heavy(X).\nbig(X) :- hard(X).\nred(X) :- big(X).\nred(book).\nparent(bob,frank).\ndislikes(dave,car).\nowns(dave,pencil).\nstrong(bob).\ncalm(carol).\nenemy(george,carol).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is red.\n\nAnd the following facts:\nbook is red.\nbob is a parent of frank.\ndave dislikes car.\ndave owns pencil.\nbob is strong.\ncarol is calm.\ngeorge is an enemy of carol.\nbob owns ball.\n\nQUESTION:\nCould book is smooth explain book is red?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 254,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(frank).",
    "c": "new(X) :- smooth(X).\nclean(X) :- new(X).\nrough(X) :- clean(X).\nsmall(X) :- rough(X).\nwet(X) :- small(X).\nsoft(X) :- wet(X).\nheavy(X) :- soft(X).\nhard(X) :- heavy(X).\nbig(X) :- hard(X).\nred(X) :- big(X).\nred(book).\nparent(bob,frank).\ndislikes(dave,car).\nowns(dave,pencil).\nstrong(bob).\ncalm(carol).\nenemy(george,carol).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is red.\n\nAnd the following facts:\nbook is red.\nbob is a parent of frank.\ndave dislikes car.\ndave owns pencil.\nbob is strong.\ncarol is calm.\ngeorge is an enemy of carol.\nbob owns ball.\n\nQUESTION:\nCould frank is bored explain book is red?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 255,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(frank).",
    "c": "tall(X) :- weak(X).\nfriend(Z,X) :- strong(Z), sad(X), dislikes(X,B).\nparent(Z,X) :- hungry(Z), curious(X), owns(X,W).\nlikes(X,Y) :- light(Y), calm(X), friend(X,W).\nrough(X) :- small(X), red(X).\nsmall(X) :- dirty(X), red(X).\nlight(X) :- new(X).\nred(X) :- soft(X).\nfriendly(X) :- strong(X), calm(X).\nbusy(X) :- angry(X).\nweak(frank).\nlight(car).\nenemy(eve,dave).\nsmooth(phone).\nfriend(alice,bob).\ndislikes(eve,apple).\nsibling(dave,alice).\nlikes(bob,phone).\nsibling(carol,alice).\nsmall(phone).\nrough(book).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is tall.\nFor all X, Z, if there exists B such that person Z is strong and person X is sad and person X dislikes object B, then person Z is a friend of person X.\nFor all X, Z, if there exists W such that person Z is hungry and person X is curious and person X owns object W, then person Z is a parent of person X.\nFor all X, Y, if there exists W such that object Y is light and person X is calm and person X is a friend of person W, then person X likes object Y.\nFor all X, if object X is small and object X is red, then object X is rough.\nFor all X, if object X is dirty and object X is red, then object X is small.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is soft, then object X is red.\nFor all X, if person X is strong and person X is calm, then person X is friendly.\nFor all X, if person X is angry, then person X is busy.\n\nAnd the following facts:\nfrank is weak.\ncar is light.\neve is an enemy of dave.\nphone is smooth.\nalice is a friend of bob.\neve dislikes apple.\ndave is a sibling of alice.\nbob likes phone.\ncarol is a sibling of alice.\nphone is small.\nbook is rough.\ncarol owns book.\n\nQUESTION:\nIs frank is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 256,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "tall(X) :- weak(X).\nfriend(Z,X) :- strong(Z), sad(X), dislikes(X,B).\nparent(Z,X) :- hungry(Z), curious(X), owns(X,W).\nlikes(X,Y) :- light(Y), calm(X), friend(X,W).\nrough(X) :- small(X), red(X).\nsmall(X) :- dirty(X), red(X).\nlight(X) :- new(X).\nred(X) :- soft(X).\nfriendly(X) :- strong(X), calm(X).\nbusy(X) :- angry(X).\nweak(frank).\nlight(car).\nenemy(eve,dave).\nsmooth(phone).\nfriend(alice,bob).\ndislikes(eve,apple).\nsibling(dave,alice).\nlikes(bob,phone).\nsibling(carol,alice).\nsmall(phone).\nrough(book).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is tall.\nFor all X, Z, if there exists B such that person Z is strong and person X is sad and person X dislikes object B, then person Z is a friend of person X.\nFor all X, Z, if there exists W such that person Z is hungry and person X is curious and person X owns object W, then person Z is a parent of person X.\nFor all X, Y, if there exists W such that object Y is light and person X is calm and person X is a friend of person W, then person X likes object Y.\nFor all X, if object X is small and object X is red, then object X is rough.\nFor all X, if object X is dirty and object X is red, then object X is small.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is soft, then object X is red.\nFor all X, if person X is strong and person X is calm, then person X is friendly.\nFor all X, if person X is angry, then person X is busy.\n\nAnd the following facts:\nfrank is weak.\ncar is light.\neve is an enemy of dave.\nphone is smooth.\nalice is a friend of bob.\neve dislikes apple.\ndave is a sibling of alice.\nbob likes phone.\ncarol is a sibling of alice.\nphone is small.\nbook is rough.\ncarol owns book.\n\nQUESTION:\nIs pencil is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 257,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(frank).",
    "c": "tall(X) :- weak(X).\nfriend(Z,X) :- strong(Z), sad(X), dislikes(X,B).\nparent(Z,X) :- hungry(Z), curious(X), owns(X,W).\nlikes(X,Y) :- light(Y), calm(X), friend(X,W).\nrough(X) :- small(X), red(X).\nsmall(X) :- dirty(X), red(X).\nlight(X) :- new(X).\nred(X) :- soft(X).\nfriendly(X) :- strong(X), calm(X).\nbusy(X) :- angry(X).\ntall(frank).\nlight(car).\nenemy(eve,dave).\nsmooth(phone).\nfriend(alice,bob).\ndislikes(eve,apple).\nsibling(dave,alice).\nlikes(bob,phone).\nsibling(carol,alice).\nsmall(phone).\nrough(book).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is tall.\nFor all X, Z, if there exists B such that person Z is strong and person X is sad and person X dislikes object B, then person Z is a friend of person X.\nFor all X, Z, if there exists W such that person Z is hungry and person X is curious and person X owns object W, then person Z is a parent of person X.\nFor all X, Y, if there exists W such that object Y is light and person X is calm and person X is a friend of person W, then person X likes object Y.\nFor all X, if object X is small and object X is red, then object X is rough.\nFor all X, if object X is dirty and object X is red, then object X is small.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is soft, then object X is red.\nFor all X, if person X is strong and person X is calm, then person X is friendly.\nFor all X, if person X is angry, then person X is busy.\n\nAnd the following facts:\nfrank is tall.\ncar is light.\neve is an enemy of dave.\nphone is smooth.\nalice is a friend of bob.\neve dislikes apple.\ndave is a sibling of alice.\nbob likes phone.\ncarol is a sibling of alice.\nphone is small.\nbook is rough.\ncarol owns book.\n\nQUESTION:\nCould frank is weak explain frank is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 258,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "old(ball).",
    "c": "tall(X) :- weak(X).\nfriend(Z,X) :- strong(Z), sad(X), dislikes(X,B).\nparent(Z,X) :- hungry(Z), curious(X), owns(X,W).\nlikes(X,Y) :- light(Y), calm(X), friend(X,W).\nrough(X) :- small(X), red(X).\nsmall(X) :- dirty(X), red(X).\nlight(X) :- new(X).\nred(X) :- soft(X).\nfriendly(X) :- strong(X), calm(X).\nbusy(X) :- angry(X).\ntall(frank).\nlight(car).\nenemy(eve,dave).\nsmooth(phone).\nfriend(alice,bob).\ndislikes(eve,apple).\nsibling(dave,alice).\nlikes(bob,phone).\nsibling(carol,alice).\nsmall(phone).\nrough(book).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is tall.\nFor all X, Z, if there exists B such that person Z is strong and person X is sad and person X dislikes object B, then person Z is a friend of person X.\nFor all X, Z, if there exists W such that person Z is hungry and person X is curious and person X owns object W, then person Z is a parent of person X.\nFor all X, Y, if there exists W such that object Y is light and person X is calm and person X is a friend of person W, then person X likes object Y.\nFor all X, if object X is small and object X is red, then object X is rough.\nFor all X, if object X is dirty and object X is red, then object X is small.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is soft, then object X is red.\nFor all X, if person X is strong and person X is calm, then person X is friendly.\nFor all X, if person X is angry, then person X is busy.\n\nAnd the following facts:\nfrank is tall.\ncar is light.\neve is an enemy of dave.\nphone is smooth.\nalice is a friend of bob.\neve dislikes apple.\ndave is a sibling of alice.\nbob likes phone.\ncarol is a sibling of alice.\nphone is small.\nbook is rough.\ncarol owns book.\n\nQUESTION:\nCould ball is old explain frank is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 259,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(bob).",
    "c": "bored(X) :- angry(X).\nsibling(Y,Z) :- busy(Y), curious(Z), owns(Y,V).\nheavy(X) :- clean(X), owns(B,X), strong(B).\nhard(Z) :- big(Z), dislikes(W,Z), hungry(W).\nexcited(X) :- brave(X).\nparent(X,Y) :- busy(X), tired(Y).\nhungry(X) :- clever(X), curious(X).\nhungry(X) :- friendly(X), weak(X).\nlikes(X,Y) :- excited(X), clean(Y).\nheavy(X) :- old(X).\nangry(bob).\ntall(george).\nlight(car).\nfriend(eve,george).\nowns(eve,pencil).\nfunny(carol).\nred(book).\nhappy(dave).\nowns(george,apple).\nowns(alice,car).\nfriendly(george).\nparent(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is bored.\nFor all Y, Z, if there exists V such that person Y is busy and person Z is curious and person Y owns object V, then person Y is a sibling of person Z.\nFor all X, if there exists B such that object X is clean and person B owns object X and person B is strong, then object X is heavy.\nFor all Z, if there exists W such that object Z is big and person W dislikes object Z and person W is hungry, then object Z is hard.\nFor all X, if person X is brave, then person X is excited.\nFor all X, Y, if person X is busy and person Y is tired, then person X is a parent of person Y.\nFor all X, if person X is clever and person X is curious, then person X is hungry.\nFor all X, if person X is friendly and person X is weak, then person X is hungry.\nFor all X, Y, if person X is excited and object Y is clean, then person X likes object Y.\nFor all X, if object X is old, then object X is heavy.\n\nAnd the following facts:\nbob is angry.\ngeorge is tall.\ncar is light.\neve is a friend of george.\neve owns pencil.\ncarol is funny.\nbook is red.\ndave is happy.\ngeorge owns apple.\nalice owns car.\ngeorge is friendly.\ngeorge is a parent of bob.\n\nQUESTION:\nIs bob is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 260,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(frank).",
    "c": "bored(X) :- angry(X).\nsibling(Y,Z) :- busy(Y), curious(Z), owns(Y,V).\nheavy(X) :- clean(X), owns(B,X), strong(B).\nhard(Z) :- big(Z), dislikes(W,Z), hungry(W).\nexcited(X) :- brave(X).\nparent(X,Y) :- busy(X), tired(Y).\nhungry(X) :- clever(X), curious(X).\nhungry(X) :- friendly(X), weak(X).\nlikes(X,Y) :- excited(X), clean(Y).\nheavy(X) :- old(X).\nangry(bob).\ntall(george).\nlight(car).\nfriend(eve,george).\nowns(eve,pencil).\nfunny(carol).\nred(book).\nhappy(dave).\nowns(george,apple).\nowns(alice,car).\nfriendly(george).\nparent(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is bored.\nFor all Y, Z, if there exists V such that person Y is busy and person Z is curious and person Y owns object V, then person Y is a sibling of person Z.\nFor all X, if there exists B such that object X is clean and person B owns object X and person B is strong, then object X is heavy.\nFor all Z, if there exists W such that object Z is big and person W dislikes object Z and person W is hungry, then object Z is hard.\nFor all X, if person X is brave, then person X is excited.\nFor all X, Y, if person X is busy and person Y is tired, then person X is a parent of person Y.\nFor all X, if person X is clever and person X is curious, then person X is hungry.\nFor all X, if person X is friendly and person X is weak, then person X is hungry.\nFor all X, Y, if person X is excited and object Y is clean, then person X likes object Y.\nFor all X, if object X is old, then object X is heavy.\n\nAnd the following facts:\nbob is angry.\ngeorge is tall.\ncar is light.\neve is a friend of george.\neve owns pencil.\ncarol is funny.\nbook is red.\ndave is happy.\ngeorge owns apple.\nalice owns car.\ngeorge is friendly.\ngeorge is a parent of bob.\n\nQUESTION:\nIs frank is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 261,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "bored(X) :- angry(X).\nsibling(Y,Z) :- busy(Y), curious(Z), owns(Y,V).\nheavy(X) :- clean(X), owns(B,X), strong(B).\nhard(Z) :- big(Z), dislikes(W,Z), hungry(W).\nexcited(X) :- brave(X).\nparent(X,Y) :- busy(X), tired(Y).\nhungry(X) :- clever(X), curious(X).\nhungry(X) :- friendly(X), weak(X).\nlikes(X,Y) :- excited(X), clean(Y).\nheavy(X) :- old(X).\nbored(bob).\ntall(george).\nlight(car).\nfriend(eve,george).\nowns(eve,pencil).\nfunny(carol).\nred(book).\nhappy(dave).\nowns(george,apple).\nowns(alice,car).\nfriendly(george).\nparent(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is bored.\nFor all Y, Z, if there exists V such that person Y is busy and person Z is curious and person Y owns object V, then person Y is a sibling of person Z.\nFor all X, if there exists B such that object X is clean and person B owns object X and person B is strong, then object X is heavy.\nFor all Z, if there exists W such that object Z is big and person W dislikes object Z and person W is hungry, then object Z is hard.\nFor all X, if person X is brave, then person X is excited.\nFor all X, Y, if person X is busy and person Y is tired, then person X is a parent of person Y.\nFor all X, if person X is clever and person X is curious, then person X is hungry.\nFor all X, if person X is friendly and person X is weak, then person X is hungry.\nFor all X, Y, if person X is excited and object Y is clean, then person X likes object Y.\nFor all X, if object X is old, then object X is heavy.\n\nAnd the following facts:\nbob is bored.\ngeorge is tall.\ncar is light.\neve is a friend of george.\neve owns pencil.\ncarol is funny.\nbook is red.\ndave is happy.\ngeorge owns apple.\nalice owns car.\ngeorge is friendly.\ngeorge is a parent of bob.\n\nQUESTION:\nCould bob is angry explain bob is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 262,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(dave).",
    "c": "bored(X) :- angry(X).\nsibling(Y,Z) :- busy(Y), curious(Z), owns(Y,V).\nheavy(X) :- clean(X), owns(B,X), strong(B).\nhard(Z) :- big(Z), dislikes(W,Z), hungry(W).\nexcited(X) :- brave(X).\nparent(X,Y) :- busy(X), tired(Y).\nhungry(X) :- clever(X), curious(X).\nhungry(X) :- friendly(X), weak(X).\nlikes(X,Y) :- excited(X), clean(Y).\nheavy(X) :- old(X).\nbored(bob).\ntall(george).\nlight(car).\nfriend(eve,george).\nowns(eve,pencil).\nfunny(carol).\nred(book).\nhappy(dave).\nowns(george,apple).\nowns(alice,car).\nfriendly(george).\nparent(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is bored.\nFor all Y, Z, if there exists V such that person Y is busy and person Z is curious and person Y owns object V, then person Y is a sibling of person Z.\nFor all X, if there exists B such that object X is clean and person B owns object X and person B is strong, then object X is heavy.\nFor all Z, if there exists W such that object Z is big and person W dislikes object Z and person W is hungry, then object Z is hard.\nFor all X, if person X is brave, then person X is excited.\nFor all X, Y, if person X is busy and person Y is tired, then person X is a parent of person Y.\nFor all X, if person X is clever and person X is curious, then person X is hungry.\nFor all X, if person X is friendly and person X is weak, then person X is hungry.\nFor all X, Y, if person X is excited and object Y is clean, then person X likes object Y.\nFor all X, if object X is old, then object X is heavy.\n\nAnd the following facts:\nbob is bored.\ngeorge is tall.\ncar is light.\neve is a friend of george.\neve owns pencil.\ncarol is funny.\nbook is red.\ndave is happy.\ngeorge owns apple.\nalice owns car.\ngeorge is friendly.\ngeorge is a parent of bob.\n\nQUESTION:\nCould dave is strong explain bob is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 263,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(book).",
    "c": "old(X) :- hard(X).\nsoft(X) :- light(X), likes(B,X), weak(B).\nparent(Z,X) :- sad(Z), excited(X).\ncalm(Y) :- calm(Y), sad(E).\nparent(Y,Z) :- busy(Y), curious(Z), parent(Y,V).\nenemy(X,Y) :- friendly(X), happy(Y).\nenemy(X,Y) :- excited(X), bored(Y).\nbusy(X) :- sad(X).\nowns(X,Y) :- clever(X), clean(Y), likes(X,Y).\nbrave(X) :- clever(X), weak(X).\nhard(book).\nenemy(carol,eve).\nowns(bob,apple).\nowns(alice,phone).\nlikes(eve,phone).\nfriend(frank,eve).\nparent(dave,frank).\nparent(frank,alice).\nred(phone).\nhungry(eve).\ndirty(car).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is old.\nFor all X, if there exists B such that object X is light and person B likes object X and person B is weak, then object X is soft.\nFor all X, Z, if person Z is sad and person X is excited, then person Z is a parent of person X.\nFor all Y, if there exists E such that person Y is calm and person E is sad, then person Y is calm.\nFor all Y, Z, if there exists V such that person Y is busy and person Z is curious and person Y is a parent of person V, then person Y is a parent of person Z.\nFor all X, Y, if person X is friendly and person Y is happy, then person X is an enemy of person Y.\nFor all X, Y, if person X is excited and person Y is bored, then person X is an enemy of person Y.\nFor all X, if person X is sad, then person X is busy.\nFor all X, Y, if person X is clever and object Y is clean and person X likes object Y, then person X owns object Y.\nFor all X, if person X is clever and person X is weak, then person X is brave.\n\nAnd the following facts:\nbook is hard.\ncarol is an enemy of eve.\nbob owns apple.\nalice owns phone.\neve likes phone.\nfrank is a friend of eve.\ndave is a parent of frank.\nfrank is a parent of alice.\nphone is red.\neve is hungry.\ncar is dirty.\neve owns apple.\n\nQUESTION:\nIs book is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 264,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(bob).",
    "c": "old(X) :- hard(X).\nsoft(X) :- light(X), likes(B,X), weak(B).\nparent(Z,X) :- sad(Z), excited(X).\ncalm(Y) :- calm(Y), sad(E).\nparent(Y,Z) :- busy(Y), curious(Z), parent(Y,V).\nenemy(X,Y) :- friendly(X), happy(Y).\nenemy(X,Y) :- excited(X), bored(Y).\nbusy(X) :- sad(X).\nowns(X,Y) :- clever(X), clean(Y), likes(X,Y).\nbrave(X) :- clever(X), weak(X).\nhard(book).\nenemy(carol,eve).\nowns(bob,apple).\nowns(alice,phone).\nlikes(eve,phone).\nfriend(frank,eve).\nparent(dave,frank).\nparent(frank,alice).\nred(phone).\nhungry(eve).\ndirty(car).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is old.\nFor all X, if there exists B such that object X is light and person B likes object X and person B is weak, then object X is soft.\nFor all X, Z, if person Z is sad and person X is excited, then person Z is a parent of person X.\nFor all Y, if there exists E such that person Y is calm and person E is sad, then person Y is calm.\nFor all Y, Z, if there exists V such that person Y is busy and person Z is curious and person Y is a parent of person V, then person Y is a parent of person Z.\nFor all X, Y, if person X is friendly and person Y is happy, then person X is an enemy of person Y.\nFor all X, Y, if person X is excited and person Y is bored, then person X is an enemy of person Y.\nFor all X, if person X is sad, then person X is busy.\nFor all X, Y, if person X is clever and object Y is clean and person X likes object Y, then person X owns object Y.\nFor all X, if person X is clever and person X is weak, then person X is brave.\n\nAnd the following facts:\nbook is hard.\ncarol is an enemy of eve.\nbob owns apple.\nalice owns phone.\neve likes phone.\nfrank is a friend of eve.\ndave is a parent of frank.\nfrank is a parent of alice.\nphone is red.\neve is hungry.\ncar is dirty.\neve owns apple.\n\nQUESTION:\nIs bob is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 265,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(book).",
    "c": "old(X) :- hard(X).\nsoft(X) :- light(X), likes(B,X), weak(B).\nparent(Z,X) :- sad(Z), excited(X).\ncalm(Y) :- calm(Y), sad(E).\nparent(Y,Z) :- busy(Y), curious(Z), parent(Y,V).\nenemy(X,Y) :- friendly(X), happy(Y).\nenemy(X,Y) :- excited(X), bored(Y).\nbusy(X) :- sad(X).\nowns(X,Y) :- clever(X), clean(Y), likes(X,Y).\nbrave(X) :- clever(X), weak(X).\nold(book).\nenemy(carol,eve).\nowns(bob,apple).\nowns(alice,phone).\nlikes(eve,phone).\nfriend(frank,eve).\nparent(dave,frank).\nparent(frank,alice).\nred(phone).\nhungry(eve).\ndirty(car).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is old.\nFor all X, if there exists B such that object X is light and person B likes object X and person B is weak, then object X is soft.\nFor all X, Z, if person Z is sad and person X is excited, then person Z is a parent of person X.\nFor all Y, if there exists E such that person Y is calm and person E is sad, then person Y is calm.\nFor all Y, Z, if there exists V such that person Y is busy and person Z is curious and person Y is a parent of person V, then person Y is a parent of person Z.\nFor all X, Y, if person X is friendly and person Y is happy, then person X is an enemy of person Y.\nFor all X, Y, if person X is excited and person Y is bored, then person X is an enemy of person Y.\nFor all X, if person X is sad, then person X is busy.\nFor all X, Y, if person X is clever and object Y is clean and person X likes object Y, then person X owns object Y.\nFor all X, if person X is clever and person X is weak, then person X is brave.\n\nAnd the following facts:\nbook is old.\ncarol is an enemy of eve.\nbob owns apple.\nalice owns phone.\neve likes phone.\nfrank is a friend of eve.\ndave is a parent of frank.\nfrank is a parent of alice.\nphone is red.\neve is hungry.\ncar is dirty.\neve owns apple.\n\nQUESTION:\nCould book is hard explain book is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 266,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "angry(bob).",
    "c": "old(X) :- hard(X).\nsoft(X) :- light(X), likes(B,X), weak(B).\nparent(Z,X) :- sad(Z), excited(X).\ncalm(Y) :- calm(Y), sad(E).\nparent(Y,Z) :- busy(Y), curious(Z), parent(Y,V).\nenemy(X,Y) :- friendly(X), happy(Y).\nenemy(X,Y) :- excited(X), bored(Y).\nbusy(X) :- sad(X).\nowns(X,Y) :- clever(X), clean(Y), likes(X,Y).\nbrave(X) :- clever(X), weak(X).\nold(book).\nenemy(carol,eve).\nowns(bob,apple).\nowns(alice,phone).\nlikes(eve,phone).\nfriend(frank,eve).\nparent(dave,frank).\nparent(frank,alice).\nred(phone).\nhungry(eve).\ndirty(car).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is old.\nFor all X, if there exists B such that object X is light and person B likes object X and person B is weak, then object X is soft.\nFor all X, Z, if person Z is sad and person X is excited, then person Z is a parent of person X.\nFor all Y, if there exists E such that person Y is calm and person E is sad, then person Y is calm.\nFor all Y, Z, if there exists V such that person Y is busy and person Z is curious and person Y is a parent of person V, then person Y is a parent of person Z.\nFor all X, Y, if person X is friendly and person Y is happy, then person X is an enemy of person Y.\nFor all X, Y, if person X is excited and person Y is bored, then person X is an enemy of person Y.\nFor all X, if person X is sad, then person X is busy.\nFor all X, Y, if person X is clever and object Y is clean and person X likes object Y, then person X owns object Y.\nFor all X, if person X is clever and person X is weak, then person X is brave.\n\nAnd the following facts:\nbook is old.\ncarol is an enemy of eve.\nbob owns apple.\nalice owns phone.\neve likes phone.\nfrank is a friend of eve.\ndave is a parent of frank.\nfrank is a parent of alice.\nphone is red.\neve is hungry.\ncar is dirty.\neve owns apple.\n\nQUESTION:\nCould bob is angry explain book is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 267,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "soft(X) :- new(X).\nhungry(Y) :- funny(Y).\nwet(X) :- dirty(X), owns(A,X), weak(A).\nsad(Z) :- calm(Z), enemy(Z,V), happy(V).\nred(Z) :- wet(Z), owns(V,Z), funny(V).\nhappy(X) :- funny(X), tall(X).\nsmooth(X) :- dirty(X), rough(X).\nrough(X) :- big(X).\nangry(X) :- curious(X), tired(X).\nfunny(X) :- clever(X).\nnew(phone).\nowns(eve,apple).\nlikes(george,pencil).\nstrong(bob).\nsibling(frank,george).\nfriend(eve,dave).\nhard(ball).\nparent(alice,carol).\nlikes(eve,pencil).\nfunny(alice).\ntall(george).\nbig(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is soft.\nFor all Y, if person Y is funny, then person Y is hungry.\nFor all X, if there exists A such that object X is dirty and person A owns object X and person A is weak, then object X is wet.\nFor all Z, if there exists V such that person Z is calm and person Z is an enemy of person V and person V is happy, then person Z is sad.\nFor all Z, if there exists V such that object Z is wet and person V owns object Z and person V is funny, then object Z is red.\nFor all X, if person X is funny and person X is tall, then person X is happy.\nFor all X, if object X is dirty and object X is rough, then object X is smooth.\nFor all X, if object X is big, then object X is rough.\nFor all X, if person X is curious and person X is tired, then person X is angry.\nFor all X, if person X is clever, then person X is funny.\n\nAnd the following facts:\nphone is new.\neve owns apple.\ngeorge likes pencil.\nbob is strong.\nfrank is a sibling of george.\neve is a friend of dave.\nball is hard.\nalice is a parent of carol.\neve likes pencil.\nalice is funny.\ngeorge is tall.\nball is big.\n\nQUESTION:\nIs phone is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 268,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clean(phone).",
    "c": "soft(X) :- new(X).\nhungry(Y) :- funny(Y).\nwet(X) :- dirty(X), owns(A,X), weak(A).\nsad(Z) :- calm(Z), enemy(Z,V), happy(V).\nred(Z) :- wet(Z), owns(V,Z), funny(V).\nhappy(X) :- funny(X), tall(X).\nsmooth(X) :- dirty(X), rough(X).\nrough(X) :- big(X).\nangry(X) :- curious(X), tired(X).\nfunny(X) :- clever(X).\nnew(phone).\nowns(eve,apple).\nlikes(george,pencil).\nstrong(bob).\nsibling(frank,george).\nfriend(eve,dave).\nhard(ball).\nparent(alice,carol).\nlikes(eve,pencil).\nfunny(alice).\ntall(george).\nbig(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is soft.\nFor all Y, if person Y is funny, then person Y is hungry.\nFor all X, if there exists A such that object X is dirty and person A owns object X and person A is weak, then object X is wet.\nFor all Z, if there exists V such that person Z is calm and person Z is an enemy of person V and person V is happy, then person Z is sad.\nFor all Z, if there exists V such that object Z is wet and person V owns object Z and person V is funny, then object Z is red.\nFor all X, if person X is funny and person X is tall, then person X is happy.\nFor all X, if object X is dirty and object X is rough, then object X is smooth.\nFor all X, if object X is big, then object X is rough.\nFor all X, if person X is curious and person X is tired, then person X is angry.\nFor all X, if person X is clever, then person X is funny.\n\nAnd the following facts:\nphone is new.\neve owns apple.\ngeorge likes pencil.\nbob is strong.\nfrank is a sibling of george.\neve is a friend of dave.\nball is hard.\nalice is a parent of carol.\neve likes pencil.\nalice is funny.\ngeorge is tall.\nball is big.\n\nQUESTION:\nIs phone is clean true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 269,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(phone).",
    "c": "soft(X) :- new(X).\nhungry(Y) :- funny(Y).\nwet(X) :- dirty(X), owns(A,X), weak(A).\nsad(Z) :- calm(Z), enemy(Z,V), happy(V).\nred(Z) :- wet(Z), owns(V,Z), funny(V).\nhappy(X) :- funny(X), tall(X).\nsmooth(X) :- dirty(X), rough(X).\nrough(X) :- big(X).\nangry(X) :- curious(X), tired(X).\nfunny(X) :- clever(X).\nsoft(phone).\nowns(eve,apple).\nlikes(george,pencil).\nstrong(bob).\nsibling(frank,george).\nfriend(eve,dave).\nhard(ball).\nparent(alice,carol).\nlikes(eve,pencil).\nfunny(alice).\ntall(george).\nbig(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is soft.\nFor all Y, if person Y is funny, then person Y is hungry.\nFor all X, if there exists A such that object X is dirty and person A owns object X and person A is weak, then object X is wet.\nFor all Z, if there exists V such that person Z is calm and person Z is an enemy of person V and person V is happy, then person Z is sad.\nFor all Z, if there exists V such that object Z is wet and person V owns object Z and person V is funny, then object Z is red.\nFor all X, if person X is funny and person X is tall, then person X is happy.\nFor all X, if object X is dirty and object X is rough, then object X is smooth.\nFor all X, if object X is big, then object X is rough.\nFor all X, if person X is curious and person X is tired, then person X is angry.\nFor all X, if person X is clever, then person X is funny.\n\nAnd the following facts:\nphone is soft.\neve owns apple.\ngeorge likes pencil.\nbob is strong.\nfrank is a sibling of george.\neve is a friend of dave.\nball is hard.\nalice is a parent of carol.\neve likes pencil.\nalice is funny.\ngeorge is tall.\nball is big.\n\nQUESTION:\nCould phone is new explain phone is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 270,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(george).",
    "c": "soft(X) :- new(X).\nhungry(Y) :- funny(Y).\nwet(X) :- dirty(X), owns(A,X), weak(A).\nsad(Z) :- calm(Z), enemy(Z,V), happy(V).\nred(Z) :- wet(Z), owns(V,Z), funny(V).\nhappy(X) :- funny(X), tall(X).\nsmooth(X) :- dirty(X), rough(X).\nrough(X) :- big(X).\nangry(X) :- curious(X), tired(X).\nfunny(X) :- clever(X).\nsoft(phone).\nowns(eve,apple).\nlikes(george,pencil).\nstrong(bob).\nsibling(frank,george).\nfriend(eve,dave).\nhard(ball).\nparent(alice,carol).\nlikes(eve,pencil).\nfunny(alice).\ntall(george).\nbig(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is soft.\nFor all Y, if person Y is funny, then person Y is hungry.\nFor all X, if there exists A such that object X is dirty and person A owns object X and person A is weak, then object X is wet.\nFor all Z, if there exists V such that person Z is calm and person Z is an enemy of person V and person V is happy, then person Z is sad.\nFor all Z, if there exists V such that object Z is wet and person V owns object Z and person V is funny, then object Z is red.\nFor all X, if person X is funny and person X is tall, then person X is happy.\nFor all X, if object X is dirty and object X is rough, then object X is smooth.\nFor all X, if object X is big, then object X is rough.\nFor all X, if person X is curious and person X is tired, then person X is angry.\nFor all X, if person X is clever, then person X is funny.\n\nAnd the following facts:\nphone is soft.\neve owns apple.\ngeorge likes pencil.\nbob is strong.\nfrank is a sibling of george.\neve is a friend of dave.\nball is hard.\nalice is a parent of carol.\neve likes pencil.\nalice is funny.\ngeorge is tall.\nball is big.\n\nQUESTION:\nCould george is brave explain phone is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 271,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(car).",
    "c": "big(X) :- light(X).\nrough(X) :- big(X).\nclean(X) :- rough(X).\nbig(X) :- clean(X).\nsmall(X) :- big(X).\ndislikes(X,Z) :- old(Z), hungry(X).\nowns(Y,Z) :- friendly(Y), soft(Z), friend(Y,W).\nfriendly(X) :- tired(X), sibling(X,B), hungry(B).\nbusy(X) :- strong(X), funny(X).\nangry(X) :- sad(X).\nlight(car).\nlikes(dave,pencil).\ndislikes(frank,phone).\nowns(dave,ball).\nfriend(alice,carol).\ndirty(pencil).\nsibling(dave,alice).\nsibling(alice,carol).\nsoft(car).\ntired(eve).\nenemy(george,carol).\ndislikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, Z, if object Z is old and person X is hungry, then person X dislikes object Z.\nFor all Y, Z, if there exists W such that person Y is friendly and object Z is soft and person Y is a friend of person W, then person Y owns object Z.\nFor all X, if there exists B such that person X is tired and person X is a sibling of person B and person B is hungry, then person X is friendly.\nFor all X, if person X is strong and person X is funny, then person X is busy.\nFor all X, if person X is sad, then person X is angry.\n\nAnd the following facts:\ncar is light.\ndave likes pencil.\nfrank dislikes phone.\ndave owns ball.\nalice is a friend of carol.\npencil is dirty.\ndave is a sibling of alice.\nalice is a sibling of carol.\ncar is soft.\neve is tired.\ngeorge is an enemy of carol.\ncarol dislikes car.\n\nQUESTION:\nIs car is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 272,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(bob).",
    "c": "big(X) :- light(X).\nrough(X) :- big(X).\nclean(X) :- rough(X).\nbig(X) :- clean(X).\nsmall(X) :- big(X).\ndislikes(X,Z) :- old(Z), hungry(X).\nowns(Y,Z) :- friendly(Y), soft(Z), friend(Y,W).\nfriendly(X) :- tired(X), sibling(X,B), hungry(B).\nbusy(X) :- strong(X), funny(X).\nangry(X) :- sad(X).\nlight(car).\nlikes(dave,pencil).\ndislikes(frank,phone).\nowns(dave,ball).\nfriend(alice,carol).\ndirty(pencil).\nsibling(dave,alice).\nsibling(alice,carol).\nsoft(car).\ntired(eve).\nenemy(george,carol).\ndislikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, Z, if object Z is old and person X is hungry, then person X dislikes object Z.\nFor all Y, Z, if there exists W such that person Y is friendly and object Z is soft and person Y is a friend of person W, then person Y owns object Z.\nFor all X, if there exists B such that person X is tired and person X is a sibling of person B and person B is hungry, then person X is friendly.\nFor all X, if person X is strong and person X is funny, then person X is busy.\nFor all X, if person X is sad, then person X is angry.\n\nAnd the following facts:\ncar is light.\ndave likes pencil.\nfrank dislikes phone.\ndave owns ball.\nalice is a friend of carol.\npencil is dirty.\ndave is a sibling of alice.\nalice is a sibling of carol.\ncar is soft.\neve is tired.\ngeorge is an enemy of carol.\ncarol dislikes car.\n\nQUESTION:\nIs bob is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 273,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "big(X) :- light(X).\nrough(X) :- big(X).\nclean(X) :- rough(X).\nbig(X) :- clean(X).\nsmall(X) :- big(X).\ndislikes(X,Z) :- old(Z), hungry(X).\nowns(Y,Z) :- friendly(Y), soft(Z), friend(Y,W).\nfriendly(X) :- tired(X), sibling(X,B), hungry(B).\nbusy(X) :- strong(X), funny(X).\nangry(X) :- sad(X).\nsmall(car).\nlikes(dave,pencil).\ndislikes(frank,phone).\nowns(dave,ball).\nfriend(alice,carol).\ndirty(pencil).\nsibling(dave,alice).\nsibling(alice,carol).\nsoft(car).\ntired(eve).\nenemy(george,carol).\ndislikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, Z, if object Z is old and person X is hungry, then person X dislikes object Z.\nFor all Y, Z, if there exists W such that person Y is friendly and object Z is soft and person Y is a friend of person W, then person Y owns object Z.\nFor all X, if there exists B such that person X is tired and person X is a sibling of person B and person B is hungry, then person X is friendly.\nFor all X, if person X is strong and person X is funny, then person X is busy.\nFor all X, if person X is sad, then person X is angry.\n\nAnd the following facts:\ncar is small.\ndave likes pencil.\nfrank dislikes phone.\ndave owns ball.\nalice is a friend of carol.\npencil is dirty.\ndave is a sibling of alice.\nalice is a sibling of carol.\ncar is soft.\neve is tired.\ngeorge is an enemy of carol.\ncarol dislikes car.\n\nQUESTION:\nCould car is light explain car is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 274,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(alice).",
    "c": "big(X) :- light(X).\nrough(X) :- big(X).\nclean(X) :- rough(X).\nbig(X) :- clean(X).\nsmall(X) :- big(X).\ndislikes(X,Z) :- old(Z), hungry(X).\nowns(Y,Z) :- friendly(Y), soft(Z), friend(Y,W).\nfriendly(X) :- tired(X), sibling(X,B), hungry(B).\nbusy(X) :- strong(X), funny(X).\nangry(X) :- sad(X).\nsmall(car).\nlikes(dave,pencil).\ndislikes(frank,phone).\nowns(dave,ball).\nfriend(alice,carol).\ndirty(pencil).\nsibling(dave,alice).\nsibling(alice,carol).\nsoft(car).\ntired(eve).\nenemy(george,carol).\ndislikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, Z, if object Z is old and person X is hungry, then person X dislikes object Z.\nFor all Y, Z, if there exists W such that person Y is friendly and object Z is soft and person Y is a friend of person W, then person Y owns object Z.\nFor all X, if there exists B such that person X is tired and person X is a sibling of person B and person B is hungry, then person X is friendly.\nFor all X, if person X is strong and person X is funny, then person X is busy.\nFor all X, if person X is sad, then person X is angry.\n\nAnd the following facts:\ncar is small.\ndave likes pencil.\nfrank dislikes phone.\ndave owns ball.\nalice is a friend of carol.\npencil is dirty.\ndave is a sibling of alice.\nalice is a sibling of carol.\ncar is soft.\neve is tired.\ngeorge is an enemy of carol.\ncarol dislikes car.\n\nQUESTION:\nCould alice is clever explain car is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 275,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(carol).",
    "c": "excited(X) :- busy(X).\nhungry(X) :- excited(X).\nbusy(X) :- hungry(X).\nsad(X) :- busy(X).\nbrave(X) :- sad(X).\nparent(X,Z) :- tall(Z), curious(X), owns(X,W).\nsoft(Y) :- clean(Y).\nheavy(X) :- dirty(X), big(E).\nnew(X) :- heavy(X), red(X).\nrough(X) :- new(X).\nbusy(carol).\ndislikes(dave,phone).\nnew(pencil).\nold(pencil).\nheavy(book).\nangry(bob).\nred(car).\nsibling(bob,eve).\nheavy(apple).\nlikes(dave,ball).\nowns(eve,apple).\nrough(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is brave.\nFor all X, Z, if there exists W such that person Z is tall and person X is curious and person X owns object W, then person X is a parent of person Z.\nFor all Y, if object Y is clean, then object Y is soft.\nFor all X, if there exists E such that object X is dirty and object E is big, then object X is heavy.\nFor all X, if object X is heavy and object X is red, then object X is new.\nFor all X, if object X is new, then object X is rough.\n\nAnd the following facts:\ncarol is busy.\ndave dislikes phone.\npencil is new.\npencil is old.\nbook is heavy.\nbob is angry.\ncar is red.\nbob is a sibling of eve.\napple is heavy.\ndave likes ball.\neve owns apple.\npencil is rough.\n\nQUESTION:\nIs carol is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 276,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "sad(bob).",
    "c": "excited(X) :- busy(X).\nhungry(X) :- excited(X).\nbusy(X) :- hungry(X).\nsad(X) :- busy(X).\nbrave(X) :- sad(X).\nparent(X,Z) :- tall(Z), curious(X), owns(X,W).\nsoft(Y) :- clean(Y).\nheavy(X) :- dirty(X), big(E).\nnew(X) :- heavy(X), red(X).\nrough(X) :- new(X).\nbusy(carol).\ndislikes(dave,phone).\nnew(pencil).\nold(pencil).\nheavy(book).\nangry(bob).\nred(car).\nsibling(bob,eve).\nheavy(apple).\nlikes(dave,ball).\nowns(eve,apple).\nrough(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is brave.\nFor all X, Z, if there exists W such that person Z is tall and person X is curious and person X owns object W, then person X is a parent of person Z.\nFor all Y, if object Y is clean, then object Y is soft.\nFor all X, if there exists E such that object X is dirty and object E is big, then object X is heavy.\nFor all X, if object X is heavy and object X is red, then object X is new.\nFor all X, if object X is new, then object X is rough.\n\nAnd the following facts:\ncarol is busy.\ndave dislikes phone.\npencil is new.\npencil is old.\nbook is heavy.\nbob is angry.\ncar is red.\nbob is a sibling of eve.\napple is heavy.\ndave likes ball.\neve owns apple.\npencil is rough.\n\nQUESTION:\nIs bob is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 277,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(carol).",
    "c": "excited(X) :- busy(X).\nhungry(X) :- excited(X).\nbusy(X) :- hungry(X).\nsad(X) :- busy(X).\nbrave(X) :- sad(X).\nparent(X,Z) :- tall(Z), curious(X), owns(X,W).\nsoft(Y) :- clean(Y).\nheavy(X) :- dirty(X), big(E).\nnew(X) :- heavy(X), red(X).\nrough(X) :- new(X).\nbrave(carol).\ndislikes(dave,phone).\nnew(pencil).\nold(pencil).\nheavy(book).\nangry(bob).\nred(car).\nsibling(bob,eve).\nheavy(apple).\nlikes(dave,ball).\nowns(eve,apple).\nrough(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is brave.\nFor all X, Z, if there exists W such that person Z is tall and person X is curious and person X owns object W, then person X is a parent of person Z.\nFor all Y, if object Y is clean, then object Y is soft.\nFor all X, if there exists E such that object X is dirty and object E is big, then object X is heavy.\nFor all X, if object X is heavy and object X is red, then object X is new.\nFor all X, if object X is new, then object X is rough.\n\nAnd the following facts:\ncarol is brave.\ndave dislikes phone.\npencil is new.\npencil is old.\nbook is heavy.\nbob is angry.\ncar is red.\nbob is a sibling of eve.\napple is heavy.\ndave likes ball.\neve owns apple.\npencil is rough.\n\nQUESTION:\nCould carol is busy explain carol is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 278,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(car).",
    "c": "excited(X) :- busy(X).\nhungry(X) :- excited(X).\nbusy(X) :- hungry(X).\nsad(X) :- busy(X).\nbrave(X) :- sad(X).\nparent(X,Z) :- tall(Z), curious(X), owns(X,W).\nsoft(Y) :- clean(Y).\nheavy(X) :- dirty(X), big(E).\nnew(X) :- heavy(X), red(X).\nrough(X) :- new(X).\nbrave(carol).\ndislikes(dave,phone).\nnew(pencil).\nold(pencil).\nheavy(book).\nangry(bob).\nred(car).\nsibling(bob,eve).\nheavy(apple).\nlikes(dave,ball).\nowns(eve,apple).\nrough(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is brave.\nFor all X, Z, if there exists W such that person Z is tall and person X is curious and person X owns object W, then person X is a parent of person Z.\nFor all Y, if object Y is clean, then object Y is soft.\nFor all X, if there exists E such that object X is dirty and object E is big, then object X is heavy.\nFor all X, if object X is heavy and object X is red, then object X is new.\nFor all X, if object X is new, then object X is rough.\n\nAnd the following facts:\ncarol is brave.\ndave dislikes phone.\npencil is new.\npencil is old.\nbook is heavy.\nbob is angry.\ncar is red.\nbob is a sibling of eve.\napple is heavy.\ndave likes ball.\neve owns apple.\npencil is rough.\n\nQUESTION:\nCould car is soft explain carol is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 279,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(ball).",
    "c": "clean(X) :- light(X).\nbig(X) :- clean(X).\nsmooth(X) :- big(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nsad(Y) :- excited(Y), owns(Y,V), rough(V).\ndislikes(Y,Z) :- weak(Y), red(Z), sibling(Y,A).\nlikes(X,Y) :- clever(X), dirty(Y).\nold(X) :- red(X), wet(X).\ndirty(X) :- rough(X), wet(X).\nlight(ball).\nenemy(eve,carol).\nfriend(frank,george).\nsibling(alice,carol).\nparent(dave,alice).\nexcited(dave).\nrough(apple).\nparent(frank,carol).\nsibling(george,frank).\nowns(carol,ball).\ntired(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all Y, if there exists V such that person Y is excited and person Y owns object V and object V is rough, then person Y is sad.\nFor all Y, Z, if there exists A such that person Y is weak and object Z is red and person Y is a sibling of person A, then person Y dislikes object Z.\nFor all X, Y, if person X is clever and object Y is dirty, then person X likes object Y.\nFor all X, if object X is red and object X is wet, then object X is old.\nFor all X, if object X is rough and object X is wet, then object X is dirty.\n\nAnd the following facts:\nball is light.\neve is an enemy of carol.\nfrank is a friend of george.\nalice is a sibling of carol.\ndave is a parent of alice.\ndave is excited.\napple is rough.\nfrank is a parent of carol.\ngeorge is a sibling of frank.\ncarol owns ball.\ndave is tired.\ncarol is a parent of eve.\n\nQUESTION:\nIs ball is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 280,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "wet(book).",
    "c": "clean(X) :- light(X).\nbig(X) :- clean(X).\nsmooth(X) :- big(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nsad(Y) :- excited(Y), owns(Y,V), rough(V).\ndislikes(Y,Z) :- weak(Y), red(Z), sibling(Y,A).\nlikes(X,Y) :- clever(X), dirty(Y).\nold(X) :- red(X), wet(X).\ndirty(X) :- rough(X), wet(X).\nlight(ball).\nenemy(eve,carol).\nfriend(frank,george).\nsibling(alice,carol).\nparent(dave,alice).\nexcited(dave).\nrough(apple).\nparent(frank,carol).\nsibling(george,frank).\nowns(carol,ball).\ntired(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all Y, if there exists V such that person Y is excited and person Y owns object V and object V is rough, then person Y is sad.\nFor all Y, Z, if there exists A such that person Y is weak and object Z is red and person Y is a sibling of person A, then person Y dislikes object Z.\nFor all X, Y, if person X is clever and object Y is dirty, then person X likes object Y.\nFor all X, if object X is red and object X is wet, then object X is old.\nFor all X, if object X is rough and object X is wet, then object X is dirty.\n\nAnd the following facts:\nball is light.\neve is an enemy of carol.\nfrank is a friend of george.\nalice is a sibling of carol.\ndave is a parent of alice.\ndave is excited.\napple is rough.\nfrank is a parent of carol.\ngeorge is a sibling of frank.\ncarol owns ball.\ndave is tired.\ncarol is a parent of eve.\n\nQUESTION:\nIs book is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 281,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "clean(X) :- light(X).\nbig(X) :- clean(X).\nsmooth(X) :- big(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nsad(Y) :- excited(Y), owns(Y,V), rough(V).\ndislikes(Y,Z) :- weak(Y), red(Z), sibling(Y,A).\nlikes(X,Y) :- clever(X), dirty(Y).\nold(X) :- red(X), wet(X).\ndirty(X) :- rough(X), wet(X).\nsoft(ball).\nenemy(eve,carol).\nfriend(frank,george).\nsibling(alice,carol).\nparent(dave,alice).\nexcited(dave).\nrough(apple).\nparent(frank,carol).\nsibling(george,frank).\nowns(carol,ball).\ntired(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all Y, if there exists V such that person Y is excited and person Y owns object V and object V is rough, then person Y is sad.\nFor all Y, Z, if there exists A such that person Y is weak and object Z is red and person Y is a sibling of person A, then person Y dislikes object Z.\nFor all X, Y, if person X is clever and object Y is dirty, then person X likes object Y.\nFor all X, if object X is red and object X is wet, then object X is old.\nFor all X, if object X is rough and object X is wet, then object X is dirty.\n\nAnd the following facts:\nball is soft.\neve is an enemy of carol.\nfrank is a friend of george.\nalice is a sibling of carol.\ndave is a parent of alice.\ndave is excited.\napple is rough.\nfrank is a parent of carol.\ngeorge is a sibling of frank.\ncarol owns ball.\ndave is tired.\ncarol is a parent of eve.\n\nQUESTION:\nCould ball is light explain ball is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 282,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(george).",
    "c": "clean(X) :- light(X).\nbig(X) :- clean(X).\nsmooth(X) :- big(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nsad(Y) :- excited(Y), owns(Y,V), rough(V).\ndislikes(Y,Z) :- weak(Y), red(Z), sibling(Y,A).\nlikes(X,Y) :- clever(X), dirty(Y).\nold(X) :- red(X), wet(X).\ndirty(X) :- rough(X), wet(X).\nsoft(ball).\nenemy(eve,carol).\nfriend(frank,george).\nsibling(alice,carol).\nparent(dave,alice).\nexcited(dave).\nrough(apple).\nparent(frank,carol).\nsibling(george,frank).\nowns(carol,ball).\ntired(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all Y, if there exists V such that person Y is excited and person Y owns object V and object V is rough, then person Y is sad.\nFor all Y, Z, if there exists A such that person Y is weak and object Z is red and person Y is a sibling of person A, then person Y dislikes object Z.\nFor all X, Y, if person X is clever and object Y is dirty, then person X likes object Y.\nFor all X, if object X is red and object X is wet, then object X is old.\nFor all X, if object X is rough and object X is wet, then object X is dirty.\n\nAnd the following facts:\nball is soft.\neve is an enemy of carol.\nfrank is a friend of george.\nalice is a sibling of carol.\ndave is a parent of alice.\ndave is excited.\napple is rough.\nfrank is a parent of carol.\ngeorge is a sibling of frank.\ncarol owns ball.\ndave is tired.\ncarol is a parent of eve.\n\nQUESTION:\nCould george is funny explain ball is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 283,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(phone).",
    "c": "wet(X) :- soft(X).\nsmooth(X) :- wet(X).\nnew(X) :- smooth(X).\nred(X) :- new(X).\nold(X) :- red(X).\nparent(X,Y) :- tired(Y), busy(X).\nenemy(Z,X) :- tall(Z), brave(X), enemy(X,A).\nhard(X) :- clean(X), likes(B,X), weak(B).\nweak(X) :- funny(X).\nlight(X) :- big(X).\nsoft(phone).\ndislikes(carol,apple).\nexcited(eve).\nfriend(alice,frank).\nexcited(carol).\nenemy(alice,eve).\nheavy(ball).\nclean(phone).\nfriend(eve,george).\nlikes(alice,pencil).\nstrong(bob).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, Y, if person Y is tired and person X is busy, then person X is a parent of person Y.\nFor all X, Z, if there exists A such that person Z is tall and person X is brave and person X is an enemy of person A, then person Z is an enemy of person X.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is weak, then object X is hard.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if object X is big, then object X is light.\n\nAnd the following facts:\nphone is soft.\ncarol dislikes apple.\neve is excited.\nalice is a friend of frank.\ncarol is excited.\nalice is an enemy of eve.\nball is heavy.\nphone is clean.\neve is a friend of george.\nalice likes pencil.\nbob is strong.\ngeorge owns pencil.\n\nQUESTION:\nIs phone is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 284,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "curious(eve).",
    "c": "wet(X) :- soft(X).\nsmooth(X) :- wet(X).\nnew(X) :- smooth(X).\nred(X) :- new(X).\nold(X) :- red(X).\nparent(X,Y) :- tired(Y), busy(X).\nenemy(Z,X) :- tall(Z), brave(X), enemy(X,A).\nhard(X) :- clean(X), likes(B,X), weak(B).\nweak(X) :- funny(X).\nlight(X) :- big(X).\nsoft(phone).\ndislikes(carol,apple).\nexcited(eve).\nfriend(alice,frank).\nexcited(carol).\nenemy(alice,eve).\nheavy(ball).\nclean(phone).\nfriend(eve,george).\nlikes(alice,pencil).\nstrong(bob).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, Y, if person Y is tired and person X is busy, then person X is a parent of person Y.\nFor all X, Z, if there exists A such that person Z is tall and person X is brave and person X is an enemy of person A, then person Z is an enemy of person X.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is weak, then object X is hard.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if object X is big, then object X is light.\n\nAnd the following facts:\nphone is soft.\ncarol dislikes apple.\neve is excited.\nalice is a friend of frank.\ncarol is excited.\nalice is an enemy of eve.\nball is heavy.\nphone is clean.\neve is a friend of george.\nalice likes pencil.\nbob is strong.\ngeorge owns pencil.\n\nQUESTION:\nIs eve is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 285,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "wet(X) :- soft(X).\nsmooth(X) :- wet(X).\nnew(X) :- smooth(X).\nred(X) :- new(X).\nold(X) :- red(X).\nparent(X,Y) :- tired(Y), busy(X).\nenemy(Z,X) :- tall(Z), brave(X), enemy(X,A).\nhard(X) :- clean(X), likes(B,X), weak(B).\nweak(X) :- funny(X).\nlight(X) :- big(X).\nold(phone).\ndislikes(carol,apple).\nexcited(eve).\nfriend(alice,frank).\nexcited(carol).\nenemy(alice,eve).\nheavy(ball).\nclean(phone).\nfriend(eve,george).\nlikes(alice,pencil).\nstrong(bob).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, Y, if person Y is tired and person X is busy, then person X is a parent of person Y.\nFor all X, Z, if there exists A such that person Z is tall and person X is brave and person X is an enemy of person A, then person Z is an enemy of person X.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is weak, then object X is hard.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if object X is big, then object X is light.\n\nAnd the following facts:\nphone is old.\ncarol dislikes apple.\neve is excited.\nalice is a friend of frank.\ncarol is excited.\nalice is an enemy of eve.\nball is heavy.\nphone is clean.\neve is a friend of george.\nalice likes pencil.\nbob is strong.\ngeorge owns pencil.\n\nQUESTION:\nCould phone is soft explain phone is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 286,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "old(apple).",
    "c": "wet(X) :- soft(X).\nsmooth(X) :- wet(X).\nnew(X) :- smooth(X).\nred(X) :- new(X).\nold(X) :- red(X).\nparent(X,Y) :- tired(Y), busy(X).\nenemy(Z,X) :- tall(Z), brave(X), enemy(X,A).\nhard(X) :- clean(X), likes(B,X), weak(B).\nweak(X) :- funny(X).\nlight(X) :- big(X).\nold(phone).\ndislikes(carol,apple).\nexcited(eve).\nfriend(alice,frank).\nexcited(carol).\nenemy(alice,eve).\nheavy(ball).\nclean(phone).\nfriend(eve,george).\nlikes(alice,pencil).\nstrong(bob).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, Y, if person Y is tired and person X is busy, then person X is a parent of person Y.\nFor all X, Z, if there exists A such that person Z is tall and person X is brave and person X is an enemy of person A, then person Z is an enemy of person X.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is weak, then object X is hard.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if object X is big, then object X is light.\n\nAnd the following facts:\nphone is old.\ncarol dislikes apple.\neve is excited.\nalice is a friend of frank.\ncarol is excited.\nalice is an enemy of eve.\nball is heavy.\nphone is clean.\neve is a friend of george.\nalice likes pencil.\nbob is strong.\ngeorge owns pencil.\n\nQUESTION:\nCould apple is old explain phone is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 287,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(pencil).",
    "c": "smooth(X) :- big(X).\nnew(X) :- smooth(X).\nlight(X) :- new(X).\nold(X) :- light(X).\nnew(X) :- old(X).\nred(X) :- new(X).\nold(X) :- red(X).\nnew(X) :- old(X).\nhard(X) :- new(X).\nred(X) :- hard(X).\nbig(pencil).\nheavy(apple).\ndislikes(george,phone).\nparent(eve,dave).\nparent(eve,frank).\nowns(bob,car).\nangry(alice).\nparent(frank,alice).\nhappy(alice).\nlikes(dave,phone).\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is red.\n\nAnd the following facts:\npencil is big.\napple is heavy.\ngeorge dislikes phone.\neve is a parent of dave.\neve is a parent of frank.\nbob owns car.\nalice is angry.\nfrank is a parent of alice.\nalice is happy.\ndave likes phone.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nIs pencil is red true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 288,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(ball).",
    "c": "smooth(X) :- big(X).\nnew(X) :- smooth(X).\nlight(X) :- new(X).\nold(X) :- light(X).\nnew(X) :- old(X).\nred(X) :- new(X).\nold(X) :- red(X).\nnew(X) :- old(X).\nhard(X) :- new(X).\nred(X) :- hard(X).\nbig(pencil).\nheavy(apple).\ndislikes(george,phone).\nparent(eve,dave).\nparent(eve,frank).\nowns(bob,car).\nangry(alice).\nparent(frank,alice).\nhappy(alice).\nlikes(dave,phone).\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is red.\n\nAnd the following facts:\npencil is big.\napple is heavy.\ngeorge dislikes phone.\neve is a parent of dave.\neve is a parent of frank.\nbob owns car.\nalice is angry.\nfrank is a parent of alice.\nalice is happy.\ndave likes phone.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nIs ball is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 289,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(pencil).",
    "c": "smooth(X) :- big(X).\nnew(X) :- smooth(X).\nlight(X) :- new(X).\nold(X) :- light(X).\nnew(X) :- old(X).\nred(X) :- new(X).\nold(X) :- red(X).\nnew(X) :- old(X).\nhard(X) :- new(X).\nred(X) :- hard(X).\nred(pencil).\nheavy(apple).\ndislikes(george,phone).\nparent(eve,dave).\nparent(eve,frank).\nowns(bob,car).\nangry(alice).\nparent(frank,alice).\nhappy(alice).\nlikes(dave,phone).\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is red.\n\nAnd the following facts:\npencil is red.\napple is heavy.\ngeorge dislikes phone.\neve is a parent of dave.\neve is a parent of frank.\nbob owns car.\nalice is angry.\nfrank is a parent of alice.\nalice is happy.\ndave likes phone.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nCould pencil is big explain pencil is red?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 290,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(alice).",
    "c": "smooth(X) :- big(X).\nnew(X) :- smooth(X).\nlight(X) :- new(X).\nold(X) :- light(X).\nnew(X) :- old(X).\nred(X) :- new(X).\nold(X) :- red(X).\nnew(X) :- old(X).\nhard(X) :- new(X).\nred(X) :- hard(X).\nred(pencil).\nheavy(apple).\ndislikes(george,phone).\nparent(eve,dave).\nparent(eve,frank).\nowns(bob,car).\nangry(alice).\nparent(frank,alice).\nhappy(alice).\nlikes(dave,phone).\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is red.\n\nAnd the following facts:\npencil is red.\napple is heavy.\ngeorge dislikes phone.\neve is a parent of dave.\neve is a parent of frank.\nbob owns car.\nalice is angry.\nfrank is a parent of alice.\nalice is happy.\ndave likes phone.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nCould alice is busy explain pencil is red?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 291,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(george).",
    "c": "friendly(X) :- tired(X).\nstrong(X) :- friendly(X).\ncurious(X) :- strong(X).\nweak(X) :- curious(X).\nbored(X) :- weak(X).\nhungry(X) :- bored(X).\nclever(X) :- hungry(X).\nbusy(X) :- clever(X).\nstrong(X) :- busy(X).\nhappy(X) :- strong(X).\ntired(george).\nparent(george,carol).\nclean(book).\nlikes(eve,pencil).\nfunny(carol).\nfriend(george,dave).\nlikes(bob,pencil).\nlikes(dave,phone).\ntall(george).\nenemy(dave,bob).\ndislikes(dave,book).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\n\nAnd the following facts:\ngeorge is tired.\ngeorge is a parent of carol.\nbook is clean.\neve likes pencil.\ncarol is funny.\ngeorge is a friend of dave.\nbob likes pencil.\ndave likes phone.\ngeorge is tall.\ndave is an enemy of bob.\ndave dislikes book.\ncar is smooth.\n\nQUESTION:\nIs george is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 292,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "happy(frank).",
    "c": "friendly(X) :- tired(X).\nstrong(X) :- friendly(X).\ncurious(X) :- strong(X).\nweak(X) :- curious(X).\nbored(X) :- weak(X).\nhungry(X) :- bored(X).\nclever(X) :- hungry(X).\nbusy(X) :- clever(X).\nstrong(X) :- busy(X).\nhappy(X) :- strong(X).\ntired(george).\nparent(george,carol).\nclean(book).\nlikes(eve,pencil).\nfunny(carol).\nfriend(george,dave).\nlikes(bob,pencil).\nlikes(dave,phone).\ntall(george).\nenemy(dave,bob).\ndislikes(dave,book).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\n\nAnd the following facts:\ngeorge is tired.\ngeorge is a parent of carol.\nbook is clean.\neve likes pencil.\ncarol is funny.\ngeorge is a friend of dave.\nbob likes pencil.\ndave likes phone.\ngeorge is tall.\ndave is an enemy of bob.\ndave dislikes book.\ncar is smooth.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 293,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(george).",
    "c": "friendly(X) :- tired(X).\nstrong(X) :- friendly(X).\ncurious(X) :- strong(X).\nweak(X) :- curious(X).\nbored(X) :- weak(X).\nhungry(X) :- bored(X).\nclever(X) :- hungry(X).\nbusy(X) :- clever(X).\nstrong(X) :- busy(X).\nhappy(X) :- strong(X).\nhappy(george).\nparent(george,carol).\nclean(book).\nlikes(eve,pencil).\nfunny(carol).\nfriend(george,dave).\nlikes(bob,pencil).\nlikes(dave,phone).\ntall(george).\nenemy(dave,bob).\ndislikes(dave,book).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\n\nAnd the following facts:\ngeorge is happy.\ngeorge is a parent of carol.\nbook is clean.\neve likes pencil.\ncarol is funny.\ngeorge is a friend of dave.\nbob likes pencil.\ndave likes phone.\ngeorge is tall.\ndave is an enemy of bob.\ndave dislikes book.\ncar is smooth.\n\nQUESTION:\nCould george is tired explain george is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 294,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "heavy(book).",
    "c": "friendly(X) :- tired(X).\nstrong(X) :- friendly(X).\ncurious(X) :- strong(X).\nweak(X) :- curious(X).\nbored(X) :- weak(X).\nhungry(X) :- bored(X).\nclever(X) :- hungry(X).\nbusy(X) :- clever(X).\nstrong(X) :- busy(X).\nhappy(X) :- strong(X).\nhappy(george).\nparent(george,carol).\nclean(book).\nlikes(eve,pencil).\nfunny(carol).\nfriend(george,dave).\nlikes(bob,pencil).\nlikes(dave,phone).\ntall(george).\nenemy(dave,bob).\ndislikes(dave,book).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\n\nAnd the following facts:\ngeorge is happy.\ngeorge is a parent of carol.\nbook is clean.\neve likes pencil.\ncarol is funny.\ngeorge is a friend of dave.\nbob likes pencil.\ndave likes phone.\ngeorge is tall.\ndave is an enemy of bob.\ndave dislikes book.\ncar is smooth.\n\nQUESTION:\nCould book is heavy explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 295,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "strong(dave).",
    "c": "tired(X) :- curious(X).\nangry(X) :- tired(X).\ntall(X) :- angry(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nexcited(X) :- calm(X).\nhungry(X) :- excited(X).\nbrave(X) :- hungry(X).\nfriendly(X) :- brave(X).\nstrong(X) :- friendly(X).\ncurious(dave).\nfriend(dave,george).\ndirty(car).\nowns(alice,pencil).\nowns(george,pencil).\nsibling(george,eve).\nfriend(dave,frank).\nbig(apple).\nparent(bob,alice).\ndislikes(alice,pencil).\ndislikes(frank,book).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\n\nAnd the following facts:\ndave is curious.\ndave is a friend of george.\ncar is dirty.\nalice owns pencil.\ngeorge owns pencil.\ngeorge is a sibling of eve.\ndave is a friend of frank.\napple is big.\nbob is a parent of alice.\nalice dislikes pencil.\nfrank dislikes book.\ngeorge is a friend of frank.\n\nQUESTION:\nIs dave is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 296,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(carol).",
    "c": "tired(X) :- curious(X).\nangry(X) :- tired(X).\ntall(X) :- angry(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nexcited(X) :- calm(X).\nhungry(X) :- excited(X).\nbrave(X) :- hungry(X).\nfriendly(X) :- brave(X).\nstrong(X) :- friendly(X).\ncurious(dave).\nfriend(dave,george).\ndirty(car).\nowns(alice,pencil).\nowns(george,pencil).\nsibling(george,eve).\nfriend(dave,frank).\nbig(apple).\nparent(bob,alice).\ndislikes(alice,pencil).\ndislikes(frank,book).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\n\nAnd the following facts:\ndave is curious.\ndave is a friend of george.\ncar is dirty.\nalice owns pencil.\ngeorge owns pencil.\ngeorge is a sibling of eve.\ndave is a friend of frank.\napple is big.\nbob is a parent of alice.\nalice dislikes pencil.\nfrank dislikes book.\ngeorge is a friend of frank.\n\nQUESTION:\nIs carol is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 297,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "tired(X) :- curious(X).\nangry(X) :- tired(X).\ntall(X) :- angry(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nexcited(X) :- calm(X).\nhungry(X) :- excited(X).\nbrave(X) :- hungry(X).\nfriendly(X) :- brave(X).\nstrong(X) :- friendly(X).\nstrong(dave).\nfriend(dave,george).\ndirty(car).\nowns(alice,pencil).\nowns(george,pencil).\nsibling(george,eve).\nfriend(dave,frank).\nbig(apple).\nparent(bob,alice).\ndislikes(alice,pencil).\ndislikes(frank,book).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\n\nAnd the following facts:\ndave is strong.\ndave is a friend of george.\ncar is dirty.\nalice owns pencil.\ngeorge owns pencil.\ngeorge is a sibling of eve.\ndave is a friend of frank.\napple is big.\nbob is a parent of alice.\nalice dislikes pencil.\nfrank dislikes book.\ngeorge is a friend of frank.\n\nQUESTION:\nCould dave is curious explain dave is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 298,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "small(book).",
    "c": "tired(X) :- curious(X).\nangry(X) :- tired(X).\ntall(X) :- angry(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nexcited(X) :- calm(X).\nhungry(X) :- excited(X).\nbrave(X) :- hungry(X).\nfriendly(X) :- brave(X).\nstrong(X) :- friendly(X).\nstrong(dave).\nfriend(dave,george).\ndirty(car).\nowns(alice,pencil).\nowns(george,pencil).\nsibling(george,eve).\nfriend(dave,frank).\nbig(apple).\nparent(bob,alice).\ndislikes(alice,pencil).\ndislikes(frank,book).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\n\nAnd the following facts:\ndave is strong.\ndave is a friend of george.\ncar is dirty.\nalice owns pencil.\ngeorge owns pencil.\ngeorge is a sibling of eve.\ndave is a friend of frank.\napple is big.\nbob is a parent of alice.\nalice dislikes pencil.\nfrank dislikes book.\ngeorge is a friend of frank.\n\nQUESTION:\nCould book is small explain dave is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 299,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "weak(X) :- friendly(X).\nhappy(X) :- weak(X).\ntired(X) :- happy(X).\nbored(X) :- tired(X).\nangry(X) :- bored(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nbrave(X) :- clever(X).\nfunny(X) :- brave(X).\nhungry(X) :- funny(X).\nfriendly(bob).\ndislikes(frank,phone).\nowns(george,book).\nsad(alice).\nlikes(dave,ball).\nparent(george,alice).\nlikes(frank,apple).\nsibling(alice,frank).\ndislikes(dave,ball).\nparent(eve,frank).\nowns(bob,ball).\nclean(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\nbob is friendly.\nfrank dislikes phone.\ngeorge owns book.\nalice is sad.\ndave likes ball.\ngeorge is a parent of alice.\nfrank likes apple.\nalice is a sibling of frank.\ndave dislikes ball.\neve is a parent of frank.\nbob owns ball.\ncar is clean.\n\nQUESTION:\nIs bob is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 300,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "weak(X) :- friendly(X).\nhappy(X) :- weak(X).\ntired(X) :- happy(X).\nbored(X) :- tired(X).\nangry(X) :- bored(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nbrave(X) :- clever(X).\nfunny(X) :- brave(X).\nhungry(X) :- funny(X).\nfriendly(bob).\ndislikes(frank,phone).\nowns(george,book).\nsad(alice).\nlikes(dave,ball).\nparent(george,alice).\nlikes(frank,apple).\nsibling(alice,frank).\ndislikes(dave,ball).\nparent(eve,frank).\nowns(bob,ball).\nclean(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\nbob is friendly.\nfrank dislikes phone.\ngeorge owns book.\nalice is sad.\ndave likes ball.\ngeorge is a parent of alice.\nfrank likes apple.\nalice is a sibling of frank.\ndave dislikes ball.\neve is a parent of frank.\nbob owns ball.\ncar is clean.\n\nQUESTION:\nIs pencil is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 301,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(bob).",
    "c": "weak(X) :- friendly(X).\nhappy(X) :- weak(X).\ntired(X) :- happy(X).\nbored(X) :- tired(X).\nangry(X) :- bored(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nbrave(X) :- clever(X).\nfunny(X) :- brave(X).\nhungry(X) :- funny(X).\nhungry(bob).\ndislikes(frank,phone).\nowns(george,book).\nsad(alice).\nlikes(dave,ball).\nparent(george,alice).\nlikes(frank,apple).\nsibling(alice,frank).\ndislikes(dave,ball).\nparent(eve,frank).\nowns(bob,ball).\nclean(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes phone.\ngeorge owns book.\nalice is sad.\ndave likes ball.\ngeorge is a parent of alice.\nfrank likes apple.\nalice is a sibling of frank.\ndave dislikes ball.\neve is a parent of frank.\nbob owns ball.\ncar is clean.\n\nQUESTION:\nCould bob is friendly explain bob is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 302,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "weak(X) :- friendly(X).\nhappy(X) :- weak(X).\ntired(X) :- happy(X).\nbored(X) :- tired(X).\nangry(X) :- bored(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nbrave(X) :- clever(X).\nfunny(X) :- brave(X).\nhungry(X) :- funny(X).\nhungry(bob).\ndislikes(frank,phone).\nowns(george,book).\nsad(alice).\nlikes(dave,ball).\nparent(george,alice).\nlikes(frank,apple).\nsibling(alice,frank).\ndislikes(dave,ball).\nparent(eve,frank).\nowns(bob,ball).\nclean(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes phone.\ngeorge owns book.\nalice is sad.\ndave likes ball.\ngeorge is a parent of alice.\nfrank likes apple.\nalice is a sibling of frank.\ndave dislikes ball.\neve is a parent of frank.\nbob owns ball.\ncar is clean.\n\nQUESTION:\nCould bob is hungry explain bob is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 303,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "excited(dave).",
    "c": "excited(X) :- curious(X).\nenemy(X,Y) :- funny(Y), strong(X), sibling(Y,A).\nstrong(Z) :- angry(Z), owns(Z,W), dirty(W).\nfunny(Z) :- brave(Z).\nsmall(Z) :- rough(Z), likes(W,Z), brave(W).\nstrong(X) :- bored(X).\nbored(X) :- friendly(X), sad(X).\nclever(X) :- funny(X), tired(X).\nsmooth(X) :- heavy(X).\nlight(X) :- old(X).\ncurious(dave).\nbrave(bob).\nhappy(dave).\nlikes(alice,ball).\nparent(dave,eve).\nowns(bob,apple).\nold(phone).\nparent(carol,dave).\nweak(george).\nlikes(george,car).\nbored(eve).\nstrong(eve).\nowns(dave,phone).\nenemy(dave,bob).\nsibling(dave,carol).\nfunny(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is excited.\nFor all X, Y, if there exists A such that person Y is funny and person X is strong and person Y is a sibling of person A, then person X is an enemy of person Y.\nFor all Z, if there exists W such that person Z is angry and person Z owns object W and object W is dirty, then person Z is strong.\nFor all Z, if person Z is brave, then person Z is funny.\nFor all Z, if there exists W such that object Z is rough and person W likes object Z and person W is brave, then object Z is small.\nFor all X, if person X is bored, then person X is strong.\nFor all X, if person X is friendly and person X is sad, then person X is bored.\nFor all X, if person X is funny and person X is tired, then person X is clever.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is old, then object X is light.\n\nAnd the following facts:\ndave is curious.\nbob is brave.\ndave is happy.\nalice likes ball.\ndave is a parent of eve.\nbob owns apple.\nphone is old.\ncarol is a parent of dave.\ngeorge is weak.\ngeorge likes car.\neve is bored.\neve is strong.\ndave owns phone.\ndave is an enemy of bob.\ndave is a sibling of carol.\ngeorge is funny.\n\nQUESTION:\nIs dave is excited true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 304,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "happy(bob).",
    "c": "excited(X) :- curious(X).\nenemy(X,Y) :- funny(Y), strong(X), sibling(Y,A).\nstrong(Z) :- angry(Z), owns(Z,W), dirty(W).\nfunny(Z) :- brave(Z).\nsmall(Z) :- rough(Z), likes(W,Z), brave(W).\nstrong(X) :- bored(X).\nbored(X) :- friendly(X), sad(X).\nclever(X) :- funny(X), tired(X).\nsmooth(X) :- heavy(X).\nlight(X) :- old(X).\ncurious(dave).\nbrave(bob).\nhappy(dave).\nlikes(alice,ball).\nparent(dave,eve).\nowns(bob,apple).\nold(phone).\nparent(carol,dave).\nweak(george).\nlikes(george,car).\nbored(eve).\nstrong(eve).\nowns(dave,phone).\nenemy(dave,bob).\nsibling(dave,carol).\nfunny(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is excited.\nFor all X, Y, if there exists A such that person Y is funny and person X is strong and person Y is a sibling of person A, then person X is an enemy of person Y.\nFor all Z, if there exists W such that person Z is angry and person Z owns object W and object W is dirty, then person Z is strong.\nFor all Z, if person Z is brave, then person Z is funny.\nFor all Z, if there exists W such that object Z is rough and person W likes object Z and person W is brave, then object Z is small.\nFor all X, if person X is bored, then person X is strong.\nFor all X, if person X is friendly and person X is sad, then person X is bored.\nFor all X, if person X is funny and person X is tired, then person X is clever.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is old, then object X is light.\n\nAnd the following facts:\ndave is curious.\nbob is brave.\ndave is happy.\nalice likes ball.\ndave is a parent of eve.\nbob owns apple.\nphone is old.\ncarol is a parent of dave.\ngeorge is weak.\ngeorge likes car.\neve is bored.\neve is strong.\ndave owns phone.\ndave is an enemy of bob.\ndave is a sibling of carol.\ngeorge is funny.\n\nQUESTION:\nIs bob is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 305,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "excited(X) :- curious(X).\nenemy(X,Y) :- funny(Y), strong(X), sibling(Y,A).\nstrong(Z) :- angry(Z), owns(Z,W), dirty(W).\nfunny(Z) :- brave(Z).\nsmall(Z) :- rough(Z), likes(W,Z), brave(W).\nstrong(X) :- bored(X).\nbored(X) :- friendly(X), sad(X).\nclever(X) :- funny(X), tired(X).\nsmooth(X) :- heavy(X).\nlight(X) :- old(X).\nexcited(dave).\nbrave(bob).\nhappy(dave).\nlikes(alice,ball).\nparent(dave,eve).\nowns(bob,apple).\nold(phone).\nparent(carol,dave).\nweak(george).\nlikes(george,car).\nbored(eve).\nstrong(eve).\nowns(dave,phone).\nenemy(dave,bob).\nsibling(dave,carol).\nfunny(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is excited.\nFor all X, Y, if there exists A such that person Y is funny and person X is strong and person Y is a sibling of person A, then person X is an enemy of person Y.\nFor all Z, if there exists W such that person Z is angry and person Z owns object W and object W is dirty, then person Z is strong.\nFor all Z, if person Z is brave, then person Z is funny.\nFor all Z, if there exists W such that object Z is rough and person W likes object Z and person W is brave, then object Z is small.\nFor all X, if person X is bored, then person X is strong.\nFor all X, if person X is friendly and person X is sad, then person X is bored.\nFor all X, if person X is funny and person X is tired, then person X is clever.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is old, then object X is light.\n\nAnd the following facts:\ndave is excited.\nbob is brave.\ndave is happy.\nalice likes ball.\ndave is a parent of eve.\nbob owns apple.\nphone is old.\ncarol is a parent of dave.\ngeorge is weak.\ngeorge likes car.\neve is bored.\neve is strong.\ndave owns phone.\ndave is an enemy of bob.\ndave is a sibling of carol.\ngeorge is funny.\n\nQUESTION:\nCould dave is curious explain dave is excited?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 306,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(ball).",
    "c": "excited(X) :- curious(X).\nenemy(X,Y) :- funny(Y), strong(X), sibling(Y,A).\nstrong(Z) :- angry(Z), owns(Z,W), dirty(W).\nfunny(Z) :- brave(Z).\nsmall(Z) :- rough(Z), likes(W,Z), brave(W).\nstrong(X) :- bored(X).\nbored(X) :- friendly(X), sad(X).\nclever(X) :- funny(X), tired(X).\nsmooth(X) :- heavy(X).\nlight(X) :- old(X).\nexcited(dave).\nbrave(bob).\nhappy(dave).\nlikes(alice,ball).\nparent(dave,eve).\nowns(bob,apple).\nold(phone).\nparent(carol,dave).\nweak(george).\nlikes(george,car).\nbored(eve).\nstrong(eve).\nowns(dave,phone).\nenemy(dave,bob).\nsibling(dave,carol).\nfunny(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is excited.\nFor all X, Y, if there exists A such that person Y is funny and person X is strong and person Y is a sibling of person A, then person X is an enemy of person Y.\nFor all Z, if there exists W such that person Z is angry and person Z owns object W and object W is dirty, then person Z is strong.\nFor all Z, if person Z is brave, then person Z is funny.\nFor all Z, if there exists W such that object Z is rough and person W likes object Z and person W is brave, then object Z is small.\nFor all X, if person X is bored, then person X is strong.\nFor all X, if person X is friendly and person X is sad, then person X is bored.\nFor all X, if person X is funny and person X is tired, then person X is clever.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is old, then object X is light.\n\nAnd the following facts:\ndave is excited.\nbob is brave.\ndave is happy.\nalice likes ball.\ndave is a parent of eve.\nbob owns apple.\nphone is old.\ncarol is a parent of dave.\ngeorge is weak.\ngeorge likes car.\neve is bored.\neve is strong.\ndave owns phone.\ndave is an enemy of bob.\ndave is a sibling of carol.\ngeorge is funny.\n\nQUESTION:\nCould ball is rough explain dave is excited?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 307,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(ball).",
    "c": "new(X) :- big(X).\nsoft(X) :- wet(X).\nparent(Y,X) :- clever(Y), clever(X), friend(Y,B).\nsmooth(Y) :- dirty(Y).\nhard(Z) :- hard(Z), likes(B,Z), angry(B).\nbored(Z) :- hungry(Z), sibling(Z,W), weak(W).\nhappy(X) :- hungry(X).\nfunny(X) :- strong(X), calm(X).\nfriend(X,Y) :- tall(X), tall(Y).\nhungry(X) :- excited(X).\nbig(ball).\nsibling(alice,frank).\nparent(george,carol).\nowns(frank,phone).\nparent(frank,eve).\nparent(george,eve).\nrough(book).\nparent(dave,eve).\ncalm(bob).\nexcited(eve).\nlikes(george,pencil).\nclean(book).\nfriend(frank,bob).\ndislikes(dave,ball).\nclean(car).\nlight(phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is new.\nFor all X, if object X is wet, then object X is soft.\nFor all X, Y, if there exists B such that person Y is clever and person X is clever and person Y is a friend of person B, then person Y is a parent of person X.\nFor all Y, if object Y is dirty, then object Y is smooth.\nFor all Z, if there exists B such that object Z is hard and person B likes object Z and person B is angry, then object Z is hard.\nFor all Z, if there exists W such that person Z is hungry and person Z is a sibling of person W and person W is weak, then person Z is bored.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is strong and person X is calm, then person X is funny.\nFor all X, Y, if person X is tall and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is excited, then person X is hungry.\n\nAnd the following facts:\nball is big.\nalice is a sibling of frank.\ngeorge is a parent of carol.\nfrank owns phone.\nfrank is a parent of eve.\ngeorge is a parent of eve.\nbook is rough.\ndave is a parent of eve.\nbob is calm.\neve is excited.\ngeorge likes pencil.\nbook is clean.\nfrank is a friend of bob.\ndave dislikes ball.\ncar is clean.\nphone is light.\n\nQUESTION:\nIs ball is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 308,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "new(X) :- big(X).\nsoft(X) :- wet(X).\nparent(Y,X) :- clever(Y), clever(X), friend(Y,B).\nsmooth(Y) :- dirty(Y).\nhard(Z) :- hard(Z), likes(B,Z), angry(B).\nbored(Z) :- hungry(Z), sibling(Z,W), weak(W).\nhappy(X) :- hungry(X).\nfunny(X) :- strong(X), calm(X).\nfriend(X,Y) :- tall(X), tall(Y).\nhungry(X) :- excited(X).\nbig(ball).\nsibling(alice,frank).\nparent(george,carol).\nowns(frank,phone).\nparent(frank,eve).\nparent(george,eve).\nrough(book).\nparent(dave,eve).\ncalm(bob).\nexcited(eve).\nlikes(george,pencil).\nclean(book).\nfriend(frank,bob).\ndislikes(dave,ball).\nclean(car).\nlight(phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is new.\nFor all X, if object X is wet, then object X is soft.\nFor all X, Y, if there exists B such that person Y is clever and person X is clever and person Y is a friend of person B, then person Y is a parent of person X.\nFor all Y, if object Y is dirty, then object Y is smooth.\nFor all Z, if there exists B such that object Z is hard and person B likes object Z and person B is angry, then object Z is hard.\nFor all Z, if there exists W such that person Z is hungry and person Z is a sibling of person W and person W is weak, then person Z is bored.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is strong and person X is calm, then person X is funny.\nFor all X, Y, if person X is tall and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is excited, then person X is hungry.\n\nAnd the following facts:\nball is big.\nalice is a sibling of frank.\ngeorge is a parent of carol.\nfrank owns phone.\nfrank is a parent of eve.\ngeorge is a parent of eve.\nbook is rough.\ndave is a parent of eve.\nbob is calm.\neve is excited.\ngeorge likes pencil.\nbook is clean.\nfrank is a friend of bob.\ndave dislikes ball.\ncar is clean.\nphone is light.\n\nQUESTION:\nIs eve is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 309,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "big(ball).",
    "c": "new(X) :- big(X).\nsoft(X) :- wet(X).\nparent(Y,X) :- clever(Y), clever(X), friend(Y,B).\nsmooth(Y) :- dirty(Y).\nhard(Z) :- hard(Z), likes(B,Z), angry(B).\nbored(Z) :- hungry(Z), sibling(Z,W), weak(W).\nhappy(X) :- hungry(X).\nfunny(X) :- strong(X), calm(X).\nfriend(X,Y) :- tall(X), tall(Y).\nhungry(X) :- excited(X).\nnew(ball).\nsibling(alice,frank).\nparent(george,carol).\nowns(frank,phone).\nparent(frank,eve).\nparent(george,eve).\nrough(book).\nparent(dave,eve).\ncalm(bob).\nexcited(eve).\nlikes(george,pencil).\nclean(book).\nfriend(frank,bob).\ndislikes(dave,ball).\nclean(car).\nlight(phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is new.\nFor all X, if object X is wet, then object X is soft.\nFor all X, Y, if there exists B such that person Y is clever and person X is clever and person Y is a friend of person B, then person Y is a parent of person X.\nFor all Y, if object Y is dirty, then object Y is smooth.\nFor all Z, if there exists B such that object Z is hard and person B likes object Z and person B is angry, then object Z is hard.\nFor all Z, if there exists W such that person Z is hungry and person Z is a sibling of person W and person W is weak, then person Z is bored.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is strong and person X is calm, then person X is funny.\nFor all X, Y, if person X is tall and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is excited, then person X is hungry.\n\nAnd the following facts:\nball is new.\nalice is a sibling of frank.\ngeorge is a parent of carol.\nfrank owns phone.\nfrank is a parent of eve.\ngeorge is a parent of eve.\nbook is rough.\ndave is a parent of eve.\nbob is calm.\neve is excited.\ngeorge likes pencil.\nbook is clean.\nfrank is a friend of bob.\ndave dislikes ball.\ncar is clean.\nphone is light.\n\nQUESTION:\nCould ball is big explain ball is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 310,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(dave).",
    "c": "new(X) :- big(X).\nsoft(X) :- wet(X).\nparent(Y,X) :- clever(Y), clever(X), friend(Y,B).\nsmooth(Y) :- dirty(Y).\nhard(Z) :- hard(Z), likes(B,Z), angry(B).\nbored(Z) :- hungry(Z), sibling(Z,W), weak(W).\nhappy(X) :- hungry(X).\nfunny(X) :- strong(X), calm(X).\nfriend(X,Y) :- tall(X), tall(Y).\nhungry(X) :- excited(X).\nnew(ball).\nsibling(alice,frank).\nparent(george,carol).\nowns(frank,phone).\nparent(frank,eve).\nparent(george,eve).\nrough(book).\nparent(dave,eve).\ncalm(bob).\nexcited(eve).\nlikes(george,pencil).\nclean(book).\nfriend(frank,bob).\ndislikes(dave,ball).\nclean(car).\nlight(phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is new.\nFor all X, if object X is wet, then object X is soft.\nFor all X, Y, if there exists B such that person Y is clever and person X is clever and person Y is a friend of person B, then person Y is a parent of person X.\nFor all Y, if object Y is dirty, then object Y is smooth.\nFor all Z, if there exists B such that object Z is hard and person B likes object Z and person B is angry, then object Z is hard.\nFor all Z, if there exists W such that person Z is hungry and person Z is a sibling of person W and person W is weak, then person Z is bored.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is strong and person X is calm, then person X is funny.\nFor all X, Y, if person X is tall and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is excited, then person X is hungry.\n\nAnd the following facts:\nball is new.\nalice is a sibling of frank.\ngeorge is a parent of carol.\nfrank owns phone.\nfrank is a parent of eve.\ngeorge is a parent of eve.\nbook is rough.\ndave is a parent of eve.\nbob is calm.\neve is excited.\ngeorge likes pencil.\nbook is clean.\nfrank is a friend of bob.\ndave dislikes ball.\ncar is clean.\nphone is light.\n\nQUESTION:\nCould dave is hungry explain ball is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 311,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "hard(X) :- old(X).\nexcited(Y) :- tired(Y), friend(Y,B), clever(B).\nwet(X) :- heavy(X), likes(U,X), funny(U).\nsmall(Z) :- light(Z), likes(U,Z), friendly(U).\nexcited(X) :- curious(X), busy(X).\nsad(X) :- funny(X), clever(X).\nsad(X) :- angry(X), friendly(X).\nowns(X,Y) :- hungry(X), red(Y).\nfriend(X,Y) :- tired(X), curious(Y), parent(X,Y).\nfriendly(X) :- funny(X), sad(X).\nold(pencil).\nparent(carol,eve).\ndislikes(dave,apple).\nfriend(carol,eve).\nlight(pencil).\nenemy(alice,carol).\nbrave(alice).\nangry(alice).\nstrong(frank).\nparent(eve,alice).\nweak(george).\nparent(alice,carol).\nsibling(bob,carol).\nlikes(eve,car).\ntall(dave).\ncurious(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is hard.\nFor all Y, if there exists B such that person Y is tired and person Y is a friend of person B and person B is clever, then person Y is excited.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is funny, then object X is wet.\nFor all Z, if there exists U such that object Z is light and person U likes object Z and person U is friendly, then object Z is small.\nFor all X, if person X is curious and person X is busy, then person X is excited.\nFor all X, if person X is funny and person X is clever, then person X is sad.\nFor all X, if person X is angry and person X is friendly, then person X is sad.\nFor all X, Y, if person X is hungry and object Y is red, then person X owns object Y.\nFor all X, Y, if person X is tired and person Y is curious and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if person X is funny and person X is sad, then person X is friendly.\n\nAnd the following facts:\npencil is old.\ncarol is a parent of eve.\ndave dislikes apple.\ncarol is a friend of eve.\npencil is light.\nalice is an enemy of carol.\nalice is brave.\nalice is angry.\nfrank is strong.\neve is a parent of alice.\ngeorge is weak.\nalice is a parent of carol.\nbob is a sibling of carol.\neve likes car.\ndave is tall.\nalice is curious.\n\nQUESTION:\nIs pencil is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 312,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "strong(bob).",
    "c": "hard(X) :- old(X).\nexcited(Y) :- tired(Y), friend(Y,B), clever(B).\nwet(X) :- heavy(X), likes(U,X), funny(U).\nsmall(Z) :- light(Z), likes(U,Z), friendly(U).\nexcited(X) :- curious(X), busy(X).\nsad(X) :- funny(X), clever(X).\nsad(X) :- angry(X), friendly(X).\nowns(X,Y) :- hungry(X), red(Y).\nfriend(X,Y) :- tired(X), curious(Y), parent(X,Y).\nfriendly(X) :- funny(X), sad(X).\nold(pencil).\nparent(carol,eve).\ndislikes(dave,apple).\nfriend(carol,eve).\nlight(pencil).\nenemy(alice,carol).\nbrave(alice).\nangry(alice).\nstrong(frank).\nparent(eve,alice).\nweak(george).\nparent(alice,carol).\nsibling(bob,carol).\nlikes(eve,car).\ntall(dave).\ncurious(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is hard.\nFor all Y, if there exists B such that person Y is tired and person Y is a friend of person B and person B is clever, then person Y is excited.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is funny, then object X is wet.\nFor all Z, if there exists U such that object Z is light and person U likes object Z and person U is friendly, then object Z is small.\nFor all X, if person X is curious and person X is busy, then person X is excited.\nFor all X, if person X is funny and person X is clever, then person X is sad.\nFor all X, if person X is angry and person X is friendly, then person X is sad.\nFor all X, Y, if person X is hungry and object Y is red, then person X owns object Y.\nFor all X, Y, if person X is tired and person Y is curious and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if person X is funny and person X is sad, then person X is friendly.\n\nAnd the following facts:\npencil is old.\ncarol is a parent of eve.\ndave dislikes apple.\ncarol is a friend of eve.\npencil is light.\nalice is an enemy of carol.\nalice is brave.\nalice is angry.\nfrank is strong.\neve is a parent of alice.\ngeorge is weak.\nalice is a parent of carol.\nbob is a sibling of carol.\neve likes car.\ndave is tall.\nalice is curious.\n\nQUESTION:\nIs bob is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 313,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(pencil).",
    "c": "hard(X) :- old(X).\nexcited(Y) :- tired(Y), friend(Y,B), clever(B).\nwet(X) :- heavy(X), likes(U,X), funny(U).\nsmall(Z) :- light(Z), likes(U,Z), friendly(U).\nexcited(X) :- curious(X), busy(X).\nsad(X) :- funny(X), clever(X).\nsad(X) :- angry(X), friendly(X).\nowns(X,Y) :- hungry(X), red(Y).\nfriend(X,Y) :- tired(X), curious(Y), parent(X,Y).\nfriendly(X) :- funny(X), sad(X).\nhard(pencil).\nparent(carol,eve).\ndislikes(dave,apple).\nfriend(carol,eve).\nlight(pencil).\nenemy(alice,carol).\nbrave(alice).\nangry(alice).\nstrong(frank).\nparent(eve,alice).\nweak(george).\nparent(alice,carol).\nsibling(bob,carol).\nlikes(eve,car).\ntall(dave).\ncurious(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is hard.\nFor all Y, if there exists B such that person Y is tired and person Y is a friend of person B and person B is clever, then person Y is excited.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is funny, then object X is wet.\nFor all Z, if there exists U such that object Z is light and person U likes object Z and person U is friendly, then object Z is small.\nFor all X, if person X is curious and person X is busy, then person X is excited.\nFor all X, if person X is funny and person X is clever, then person X is sad.\nFor all X, if person X is angry and person X is friendly, then person X is sad.\nFor all X, Y, if person X is hungry and object Y is red, then person X owns object Y.\nFor all X, Y, if person X is tired and person Y is curious and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if person X is funny and person X is sad, then person X is friendly.\n\nAnd the following facts:\npencil is hard.\ncarol is a parent of eve.\ndave dislikes apple.\ncarol is a friend of eve.\npencil is light.\nalice is an enemy of carol.\nalice is brave.\nalice is angry.\nfrank is strong.\neve is a parent of alice.\ngeorge is weak.\nalice is a parent of carol.\nbob is a sibling of carol.\neve likes car.\ndave is tall.\nalice is curious.\n\nQUESTION:\nCould pencil is old explain pencil is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 314,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(eve).",
    "c": "hard(X) :- old(X).\nexcited(Y) :- tired(Y), friend(Y,B), clever(B).\nwet(X) :- heavy(X), likes(U,X), funny(U).\nsmall(Z) :- light(Z), likes(U,Z), friendly(U).\nexcited(X) :- curious(X), busy(X).\nsad(X) :- funny(X), clever(X).\nsad(X) :- angry(X), friendly(X).\nowns(X,Y) :- hungry(X), red(Y).\nfriend(X,Y) :- tired(X), curious(Y), parent(X,Y).\nfriendly(X) :- funny(X), sad(X).\nhard(pencil).\nparent(carol,eve).\ndislikes(dave,apple).\nfriend(carol,eve).\nlight(pencil).\nenemy(alice,carol).\nbrave(alice).\nangry(alice).\nstrong(frank).\nparent(eve,alice).\nweak(george).\nparent(alice,carol).\nsibling(bob,carol).\nlikes(eve,car).\ntall(dave).\ncurious(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is hard.\nFor all Y, if there exists B such that person Y is tired and person Y is a friend of person B and person B is clever, then person Y is excited.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is funny, then object X is wet.\nFor all Z, if there exists U such that object Z is light and person U likes object Z and person U is friendly, then object Z is small.\nFor all X, if person X is curious and person X is busy, then person X is excited.\nFor all X, if person X is funny and person X is clever, then person X is sad.\nFor all X, if person X is angry and person X is friendly, then person X is sad.\nFor all X, Y, if person X is hungry and object Y is red, then person X owns object Y.\nFor all X, Y, if person X is tired and person Y is curious and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if person X is funny and person X is sad, then person X is friendly.\n\nAnd the following facts:\npencil is hard.\ncarol is a parent of eve.\ndave dislikes apple.\ncarol is a friend of eve.\npencil is light.\nalice is an enemy of carol.\nalice is brave.\nalice is angry.\nfrank is strong.\neve is a parent of alice.\ngeorge is weak.\nalice is a parent of carol.\nbob is a sibling of carol.\neve likes car.\ndave is tall.\nalice is curious.\n\nQUESTION:\nCould eve is sad explain pencil is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 315,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(car).",
    "c": "dirty(X) :- hard(X).\nsoft(Z) :- old(Z), likes(W,Z), calm(W).\nfriend(Y,X) :- tall(Y), busy(X), owns(X,B).\nnew(Z) :- rough(Z), dislikes(V,Z), angry(V).\nsmooth(X) :- old(X), wet(X).\nsmooth(X) :- red(X), big(X).\nbig(X) :- soft(X).\nheavy(X) :- soft(X), light(X).\nparent(X,Y) :- weak(X), calm(Y), friend(X,Y).\ntall(X) :- funny(X), sad(X).\nhard(car).\nsmooth(car).\nfriend(frank,dave).\nowns(george,book).\nlikes(george,ball).\nred(ball).\nowns(george,pencil).\nclever(eve).\nheavy(book).\ncold.\nparent(eve,bob).\nnew(apple).\nhappy(carol).\ncalm(dave).\ndislikes(eve,book).\nlikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is dirty.\nFor all Z, if there exists W such that object Z is old and person W likes object Z and person W is calm, then object Z is soft.\nFor all X, Y, if there exists B such that person Y is tall and person X is busy and person X owns object B, then person Y is a friend of person X.\nFor all Z, if there exists V such that object Z is rough and person V dislikes object Z and person V is angry, then object Z is new.\nFor all X, if object X is old and object X is wet, then object X is smooth.\nFor all X, if object X is red and object X is big, then object X is smooth.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is soft and object X is light, then object X is heavy.\nFor all X, Y, if person X is weak and person Y is calm and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if person X is funny and person X is sad, then person X is tall.\n\nAnd the following facts:\ncar is hard.\ncar is smooth.\nfrank is a friend of dave.\ngeorge owns book.\ngeorge likes ball.\nball is red.\ngeorge owns pencil.\neve is clever.\nbook is heavy.\nit is cold.\neve is a parent of bob.\napple is new.\ncarol is happy.\ndave is calm.\neve dislikes book.\ncarol likes pencil.\n\nQUESTION:\nIs car is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 316,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(apple).",
    "c": "dirty(X) :- hard(X).\nsoft(Z) :- old(Z), likes(W,Z), calm(W).\nfriend(Y,X) :- tall(Y), busy(X), owns(X,B).\nnew(Z) :- rough(Z), dislikes(V,Z), angry(V).\nsmooth(X) :- old(X), wet(X).\nsmooth(X) :- red(X), big(X).\nbig(X) :- soft(X).\nheavy(X) :- soft(X), light(X).\nparent(X,Y) :- weak(X), calm(Y), friend(X,Y).\ntall(X) :- funny(X), sad(X).\nhard(car).\nsmooth(car).\nfriend(frank,dave).\nowns(george,book).\nlikes(george,ball).\nred(ball).\nowns(george,pencil).\nclever(eve).\nheavy(book).\ncold.\nparent(eve,bob).\nnew(apple).\nhappy(carol).\ncalm(dave).\ndislikes(eve,book).\nlikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is dirty.\nFor all Z, if there exists W such that object Z is old and person W likes object Z and person W is calm, then object Z is soft.\nFor all X, Y, if there exists B such that person Y is tall and person X is busy and person X owns object B, then person Y is a friend of person X.\nFor all Z, if there exists V such that object Z is rough and person V dislikes object Z and person V is angry, then object Z is new.\nFor all X, if object X is old and object X is wet, then object X is smooth.\nFor all X, if object X is red and object X is big, then object X is smooth.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is soft and object X is light, then object X is heavy.\nFor all X, Y, if person X is weak and person Y is calm and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if person X is funny and person X is sad, then person X is tall.\n\nAnd the following facts:\ncar is hard.\ncar is smooth.\nfrank is a friend of dave.\ngeorge owns book.\ngeorge likes ball.\nball is red.\ngeorge owns pencil.\neve is clever.\nbook is heavy.\nit is cold.\neve is a parent of bob.\napple is new.\ncarol is happy.\ndave is calm.\neve dislikes book.\ncarol likes pencil.\n\nQUESTION:\nIs apple is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 317,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(car).",
    "c": "dirty(X) :- hard(X).\nsoft(Z) :- old(Z), likes(W,Z), calm(W).\nfriend(Y,X) :- tall(Y), busy(X), owns(X,B).\nnew(Z) :- rough(Z), dislikes(V,Z), angry(V).\nsmooth(X) :- old(X), wet(X).\nsmooth(X) :- red(X), big(X).\nbig(X) :- soft(X).\nheavy(X) :- soft(X), light(X).\nparent(X,Y) :- weak(X), calm(Y), friend(X,Y).\ntall(X) :- funny(X), sad(X).\ndirty(car).\nsmooth(car).\nfriend(frank,dave).\nowns(george,book).\nlikes(george,ball).\nred(ball).\nowns(george,pencil).\nclever(eve).\nheavy(book).\ncold.\nparent(eve,bob).\nnew(apple).\nhappy(carol).\ncalm(dave).\ndislikes(eve,book).\nlikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is dirty.\nFor all Z, if there exists W such that object Z is old and person W likes object Z and person W is calm, then object Z is soft.\nFor all X, Y, if there exists B such that person Y is tall and person X is busy and person X owns object B, then person Y is a friend of person X.\nFor all Z, if there exists V such that object Z is rough and person V dislikes object Z and person V is angry, then object Z is new.\nFor all X, if object X is old and object X is wet, then object X is smooth.\nFor all X, if object X is red and object X is big, then object X is smooth.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is soft and object X is light, then object X is heavy.\nFor all X, Y, if person X is weak and person Y is calm and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if person X is funny and person X is sad, then person X is tall.\n\nAnd the following facts:\ncar is dirty.\ncar is smooth.\nfrank is a friend of dave.\ngeorge owns book.\ngeorge likes ball.\nball is red.\ngeorge owns pencil.\neve is clever.\nbook is heavy.\nit is cold.\neve is a parent of bob.\napple is new.\ncarol is happy.\ndave is calm.\neve dislikes book.\ncarol likes pencil.\n\nQUESTION:\nCould car is hard explain car is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 318,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "big(car).",
    "c": "dirty(X) :- hard(X).\nsoft(Z) :- old(Z), likes(W,Z), calm(W).\nfriend(Y,X) :- tall(Y), busy(X), owns(X,B).\nnew(Z) :- rough(Z), dislikes(V,Z), angry(V).\nsmooth(X) :- old(X), wet(X).\nsmooth(X) :- red(X), big(X).\nbig(X) :- soft(X).\nheavy(X) :- soft(X), light(X).\nparent(X,Y) :- weak(X), calm(Y), friend(X,Y).\ntall(X) :- funny(X), sad(X).\ndirty(car).\nsmooth(car).\nfriend(frank,dave).\nowns(george,book).\nlikes(george,ball).\nred(ball).\nowns(george,pencil).\nclever(eve).\nheavy(book).\ncold.\nparent(eve,bob).\nnew(apple).\nhappy(carol).\ncalm(dave).\ndislikes(eve,book).\nlikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is dirty.\nFor all Z, if there exists W such that object Z is old and person W likes object Z and person W is calm, then object Z is soft.\nFor all X, Y, if there exists B such that person Y is tall and person X is busy and person X owns object B, then person Y is a friend of person X.\nFor all Z, if there exists V such that object Z is rough and person V dislikes object Z and person V is angry, then object Z is new.\nFor all X, if object X is old and object X is wet, then object X is smooth.\nFor all X, if object X is red and object X is big, then object X is smooth.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is soft and object X is light, then object X is heavy.\nFor all X, Y, if person X is weak and person Y is calm and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if person X is funny and person X is sad, then person X is tall.\n\nAnd the following facts:\ncar is dirty.\ncar is smooth.\nfrank is a friend of dave.\ngeorge owns book.\ngeorge likes ball.\nball is red.\ngeorge owns pencil.\neve is clever.\nbook is heavy.\nit is cold.\neve is a parent of bob.\napple is new.\ncarol is happy.\ndave is calm.\neve dislikes book.\ncarol likes pencil.\n\nQUESTION:\nCould car is big explain car is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 319,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(book).",
    "c": "old(X) :- light(X).\nwet(X) :- old(X).\nred(X) :- wet(X).\nrough(X) :- red(X).\nheavy(X) :- rough(X).\nstrong(Y) :- bored(Y), likes(Y,W), big(W).\nangry(Y) :- excited(Y), parent(Y,A), clever(A).\nhard(X) :- small(X).\nclever(X) :- happy(X), friendly(X).\nexcited(X) :- busy(X), calm(X).\nlight(book).\nowns(frank,phone).\nsmooth(car).\nfriendly(carol).\nparent(george,frank).\ncurious(alice).\nparent(eve,carol).\nhappy(bob).\ncurious(george).\ndislikes(alice,phone).\nowns(alice,book).\nparent(george,dave).\nlikes(carol,phone).\nfriendly(dave).\nowns(dave,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all Y, if there exists W such that person Y is bored and person Y likes object W and object W is big, then person Y is strong.\nFor all Y, if there exists A such that person Y is excited and person Y is a parent of person A and person A is clever, then person Y is angry.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is happy and person X is friendly, then person X is clever.\nFor all X, if person X is busy and person X is calm, then person X is excited.\n\nAnd the following facts:\nbook is light.\nfrank owns phone.\ncar is smooth.\ncarol is friendly.\ngeorge is a parent of frank.\nalice is curious.\neve is a parent of carol.\nbob is happy.\ngeorge is curious.\nalice dislikes phone.\nalice owns book.\ngeorge is a parent of dave.\ncarol likes phone.\ndave is friendly.\ndave owns book.\ncarol likes car.\n\nQUESTION:\nIs book is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 320,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(george).",
    "c": "old(X) :- light(X).\nwet(X) :- old(X).\nred(X) :- wet(X).\nrough(X) :- red(X).\nheavy(X) :- rough(X).\nstrong(Y) :- bored(Y), likes(Y,W), big(W).\nangry(Y) :- excited(Y), parent(Y,A), clever(A).\nhard(X) :- small(X).\nclever(X) :- happy(X), friendly(X).\nexcited(X) :- busy(X), calm(X).\nlight(book).\nowns(frank,phone).\nsmooth(car).\nfriendly(carol).\nparent(george,frank).\ncurious(alice).\nparent(eve,carol).\nhappy(bob).\ncurious(george).\ndislikes(alice,phone).\nowns(alice,book).\nparent(george,dave).\nlikes(carol,phone).\nfriendly(dave).\nowns(dave,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all Y, if there exists W such that person Y is bored and person Y likes object W and object W is big, then person Y is strong.\nFor all Y, if there exists A such that person Y is excited and person Y is a parent of person A and person A is clever, then person Y is angry.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is happy and person X is friendly, then person X is clever.\nFor all X, if person X is busy and person X is calm, then person X is excited.\n\nAnd the following facts:\nbook is light.\nfrank owns phone.\ncar is smooth.\ncarol is friendly.\ngeorge is a parent of frank.\nalice is curious.\neve is a parent of carol.\nbob is happy.\ngeorge is curious.\nalice dislikes phone.\nalice owns book.\ngeorge is a parent of dave.\ncarol likes phone.\ndave is friendly.\ndave owns book.\ncarol likes car.\n\nQUESTION:\nIs george is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 321,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(book).",
    "c": "old(X) :- light(X).\nwet(X) :- old(X).\nred(X) :- wet(X).\nrough(X) :- red(X).\nheavy(X) :- rough(X).\nstrong(Y) :- bored(Y), likes(Y,W), big(W).\nangry(Y) :- excited(Y), parent(Y,A), clever(A).\nhard(X) :- small(X).\nclever(X) :- happy(X), friendly(X).\nexcited(X) :- busy(X), calm(X).\nheavy(book).\nowns(frank,phone).\nsmooth(car).\nfriendly(carol).\nparent(george,frank).\ncurious(alice).\nparent(eve,carol).\nhappy(bob).\ncurious(george).\ndislikes(alice,phone).\nowns(alice,book).\nparent(george,dave).\nlikes(carol,phone).\nfriendly(dave).\nowns(dave,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all Y, if there exists W such that person Y is bored and person Y likes object W and object W is big, then person Y is strong.\nFor all Y, if there exists A such that person Y is excited and person Y is a parent of person A and person A is clever, then person Y is angry.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is happy and person X is friendly, then person X is clever.\nFor all X, if person X is busy and person X is calm, then person X is excited.\n\nAnd the following facts:\nbook is heavy.\nfrank owns phone.\ncar is smooth.\ncarol is friendly.\ngeorge is a parent of frank.\nalice is curious.\neve is a parent of carol.\nbob is happy.\ngeorge is curious.\nalice dislikes phone.\nalice owns book.\ngeorge is a parent of dave.\ncarol likes phone.\ndave is friendly.\ndave owns book.\ncarol likes car.\n\nQUESTION:\nCould book is light explain book is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 322,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(carol).",
    "c": "old(X) :- light(X).\nwet(X) :- old(X).\nred(X) :- wet(X).\nrough(X) :- red(X).\nheavy(X) :- rough(X).\nstrong(Y) :- bored(Y), likes(Y,W), big(W).\nangry(Y) :- excited(Y), parent(Y,A), clever(A).\nhard(X) :- small(X).\nclever(X) :- happy(X), friendly(X).\nexcited(X) :- busy(X), calm(X).\nheavy(book).\nowns(frank,phone).\nsmooth(car).\nfriendly(carol).\nparent(george,frank).\ncurious(alice).\nparent(eve,carol).\nhappy(bob).\ncurious(george).\ndislikes(alice,phone).\nowns(alice,book).\nparent(george,dave).\nlikes(carol,phone).\nfriendly(dave).\nowns(dave,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all Y, if there exists W such that person Y is bored and person Y likes object W and object W is big, then person Y is strong.\nFor all Y, if there exists A such that person Y is excited and person Y is a parent of person A and person A is clever, then person Y is angry.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is happy and person X is friendly, then person X is clever.\nFor all X, if person X is busy and person X is calm, then person X is excited.\n\nAnd the following facts:\nbook is heavy.\nfrank owns phone.\ncar is smooth.\ncarol is friendly.\ngeorge is a parent of frank.\nalice is curious.\neve is a parent of carol.\nbob is happy.\ngeorge is curious.\nalice dislikes phone.\nalice owns book.\ngeorge is a parent of dave.\ncarol likes phone.\ndave is friendly.\ndave owns book.\ncarol likes car.\n\nQUESTION:\nCould carol is sad explain book is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 323,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(alice).",
    "c": "clever(X) :- excited(X).\nangry(X) :- clever(X).\nhungry(X) :- angry(X).\nexcited(X) :- hungry(X).\nangry(X) :- excited(X).\nweak(X) :- weak(X).\nsmooth(Z) :- old(Z), funny(B).\nsmooth(X) :- wet(X), owns(U,X), curious(U).\nfunny(X) :- tall(X), weak(X).\ntall(X) :- strong(X), weak(X).\nexcited(alice).\nfriend(george,frank).\nparent(dave,frank).\nsoft(car).\nowns(frank,book).\nparent(alice,eve).\nparent(frank,bob).\nsibling(alice,eve).\nlikes(dave,apple).\nbored(george).\nfunny(alice).\ndislikes(dave,apple).\nfriend(frank,bob).\ncalm(eve).\nfriend(carol,eve).\ntall(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is weak, then person X is weak.\nFor all Z, if there exists B such that object Z is old and person B is funny, then object Z is smooth.\nFor all X, if there exists U such that object X is wet and person U owns object X and person U is curious, then object X is smooth.\nFor all X, if person X is tall and person X is weak, then person X is funny.\nFor all X, if person X is strong and person X is weak, then person X is tall.\n\nAnd the following facts:\nalice is excited.\ngeorge is a friend of frank.\ndave is a parent of frank.\ncar is soft.\nfrank owns book.\nalice is a parent of eve.\nfrank is a parent of bob.\nalice is a sibling of eve.\ndave likes apple.\ngeorge is bored.\nalice is funny.\ndave dislikes apple.\nfrank is a friend of bob.\neve is calm.\ncarol is a friend of eve.\ndave is tall.\n\nQUESTION:\nIs alice is angry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 324,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(bob).",
    "c": "clever(X) :- excited(X).\nangry(X) :- clever(X).\nhungry(X) :- angry(X).\nexcited(X) :- hungry(X).\nangry(X) :- excited(X).\nweak(X) :- weak(X).\nsmooth(Z) :- old(Z), funny(B).\nsmooth(X) :- wet(X), owns(U,X), curious(U).\nfunny(X) :- tall(X), weak(X).\ntall(X) :- strong(X), weak(X).\nexcited(alice).\nfriend(george,frank).\nparent(dave,frank).\nsoft(car).\nowns(frank,book).\nparent(alice,eve).\nparent(frank,bob).\nsibling(alice,eve).\nlikes(dave,apple).\nbored(george).\nfunny(alice).\ndislikes(dave,apple).\nfriend(frank,bob).\ncalm(eve).\nfriend(carol,eve).\ntall(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is weak, then person X is weak.\nFor all Z, if there exists B such that object Z is old and person B is funny, then object Z is smooth.\nFor all X, if there exists U such that object X is wet and person U owns object X and person U is curious, then object X is smooth.\nFor all X, if person X is tall and person X is weak, then person X is funny.\nFor all X, if person X is strong and person X is weak, then person X is tall.\n\nAnd the following facts:\nalice is excited.\ngeorge is a friend of frank.\ndave is a parent of frank.\ncar is soft.\nfrank owns book.\nalice is a parent of eve.\nfrank is a parent of bob.\nalice is a sibling of eve.\ndave likes apple.\ngeorge is bored.\nalice is funny.\ndave dislikes apple.\nfrank is a friend of bob.\neve is calm.\ncarol is a friend of eve.\ndave is tall.\n\nQUESTION:\nIs bob is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 325,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(alice).",
    "c": "clever(X) :- excited(X).\nangry(X) :- clever(X).\nhungry(X) :- angry(X).\nexcited(X) :- hungry(X).\nangry(X) :- excited(X).\nweak(X) :- weak(X).\nsmooth(Z) :- old(Z), funny(B).\nsmooth(X) :- wet(X), owns(U,X), curious(U).\nfunny(X) :- tall(X), weak(X).\ntall(X) :- strong(X), weak(X).\nangry(alice).\nfriend(george,frank).\nparent(dave,frank).\nsoft(car).\nowns(frank,book).\nparent(alice,eve).\nparent(frank,bob).\nsibling(alice,eve).\nlikes(dave,apple).\nbored(george).\nfunny(alice).\ndislikes(dave,apple).\nfriend(frank,bob).\ncalm(eve).\nfriend(carol,eve).\ntall(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is weak, then person X is weak.\nFor all Z, if there exists B such that object Z is old and person B is funny, then object Z is smooth.\nFor all X, if there exists U such that object X is wet and person U owns object X and person U is curious, then object X is smooth.\nFor all X, if person X is tall and person X is weak, then person X is funny.\nFor all X, if person X is strong and person X is weak, then person X is tall.\n\nAnd the following facts:\nalice is angry.\ngeorge is a friend of frank.\ndave is a parent of frank.\ncar is soft.\nfrank owns book.\nalice is a parent of eve.\nfrank is a parent of bob.\nalice is a sibling of eve.\ndave likes apple.\ngeorge is bored.\nalice is funny.\ndave dislikes apple.\nfrank is a friend of bob.\neve is calm.\ncarol is a friend of eve.\ndave is tall.\n\nQUESTION:\nCould alice is excited explain alice is angry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 326,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(eve).",
    "c": "clever(X) :- excited(X).\nangry(X) :- clever(X).\nhungry(X) :- angry(X).\nexcited(X) :- hungry(X).\nangry(X) :- excited(X).\nweak(X) :- weak(X).\nsmooth(Z) :- old(Z), funny(B).\nsmooth(X) :- wet(X), owns(U,X), curious(U).\nfunny(X) :- tall(X), weak(X).\ntall(X) :- strong(X), weak(X).\nangry(alice).\nfriend(george,frank).\nparent(dave,frank).\nsoft(car).\nowns(frank,book).\nparent(alice,eve).\nparent(frank,bob).\nsibling(alice,eve).\nlikes(dave,apple).\nbored(george).\nfunny(alice).\ndislikes(dave,apple).\nfriend(frank,bob).\ncalm(eve).\nfriend(carol,eve).\ntall(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is weak, then person X is weak.\nFor all Z, if there exists B such that object Z is old and person B is funny, then object Z is smooth.\nFor all X, if there exists U such that object X is wet and person U owns object X and person U is curious, then object X is smooth.\nFor all X, if person X is tall and person X is weak, then person X is funny.\nFor all X, if person X is strong and person X is weak, then person X is tall.\n\nAnd the following facts:\nalice is angry.\ngeorge is a friend of frank.\ndave is a parent of frank.\ncar is soft.\nfrank owns book.\nalice is a parent of eve.\nfrank is a parent of bob.\nalice is a sibling of eve.\ndave likes apple.\ngeorge is bored.\nalice is funny.\ndave dislikes apple.\nfrank is a friend of bob.\neve is calm.\ncarol is a friend of eve.\ndave is tall.\n\nQUESTION:\nCould eve is busy explain alice is angry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 327,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(eve).",
    "c": "bored(X) :- funny(X).\ntall(X) :- bored(X).\nclever(X) :- tall(X).\ncalm(X) :- clever(X).\nstrong(X) :- calm(X).\nnew(Y) :- hard(Y), dislikes(W,Y), weak(W).\nsad(Z) :- tired(Z), enemy(Z,A), friendly(A).\nsad(X) :- weak(X), tired(X).\nparent(X,Y) :- busy(X), angry(Y), friend(X,Y).\nenemy(X,Y) :- happy(X), busy(Y).\nfunny(eve).\ndislikes(carol,apple).\nhungry(carol).\nlikes(carol,ball).\ncurious(alice).\nbrave(frank).\nparent(carol,eve).\nsibling(frank,dave).\nowns(frank,car).\ntired(george).\nsibling(dave,frank).\nlikes(frank,car).\nsibling(eve,alice).\nweak(dave).\nlight(book).\nhard(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all Y, if there exists W such that object Y is hard and person W dislikes object Y and person W is weak, then object Y is new.\nFor all Z, if there exists A such that person Z is tired and person Z is an enemy of person A and person A is friendly, then person Z is sad.\nFor all X, if person X is weak and person X is tired, then person X is sad.\nFor all X, Y, if person X is busy and person Y is angry and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is happy and person Y is busy, then person X is an enemy of person Y.\n\nAnd the following facts:\neve is funny.\ncarol dislikes apple.\ncarol is hungry.\ncarol likes ball.\nalice is curious.\nfrank is brave.\ncarol is a parent of eve.\nfrank is a sibling of dave.\nfrank owns car.\ngeorge is tired.\ndave is a sibling of frank.\nfrank likes car.\neve is a sibling of alice.\ndave is weak.\nbook is light.\npencil is hard.\n\nQUESTION:\nIs eve is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 328,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(pencil).",
    "c": "bored(X) :- funny(X).\ntall(X) :- bored(X).\nclever(X) :- tall(X).\ncalm(X) :- clever(X).\nstrong(X) :- calm(X).\nnew(Y) :- hard(Y), dislikes(W,Y), weak(W).\nsad(Z) :- tired(Z), enemy(Z,A), friendly(A).\nsad(X) :- weak(X), tired(X).\nparent(X,Y) :- busy(X), angry(Y), friend(X,Y).\nenemy(X,Y) :- happy(X), busy(Y).\nfunny(eve).\ndislikes(carol,apple).\nhungry(carol).\nlikes(carol,ball).\ncurious(alice).\nbrave(frank).\nparent(carol,eve).\nsibling(frank,dave).\nowns(frank,car).\ntired(george).\nsibling(dave,frank).\nlikes(frank,car).\nsibling(eve,alice).\nweak(dave).\nlight(book).\nhard(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all Y, if there exists W such that object Y is hard and person W dislikes object Y and person W is weak, then object Y is new.\nFor all Z, if there exists A such that person Z is tired and person Z is an enemy of person A and person A is friendly, then person Z is sad.\nFor all X, if person X is weak and person X is tired, then person X is sad.\nFor all X, Y, if person X is busy and person Y is angry and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is happy and person Y is busy, then person X is an enemy of person Y.\n\nAnd the following facts:\neve is funny.\ncarol dislikes apple.\ncarol is hungry.\ncarol likes ball.\nalice is curious.\nfrank is brave.\ncarol is a parent of eve.\nfrank is a sibling of dave.\nfrank owns car.\ngeorge is tired.\ndave is a sibling of frank.\nfrank likes car.\neve is a sibling of alice.\ndave is weak.\nbook is light.\npencil is hard.\n\nQUESTION:\nIs pencil is heavy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 329,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(eve).",
    "c": "bored(X) :- funny(X).\ntall(X) :- bored(X).\nclever(X) :- tall(X).\ncalm(X) :- clever(X).\nstrong(X) :- calm(X).\nnew(Y) :- hard(Y), dislikes(W,Y), weak(W).\nsad(Z) :- tired(Z), enemy(Z,A), friendly(A).\nsad(X) :- weak(X), tired(X).\nparent(X,Y) :- busy(X), angry(Y), friend(X,Y).\nenemy(X,Y) :- happy(X), busy(Y).\nstrong(eve).\ndislikes(carol,apple).\nhungry(carol).\nlikes(carol,ball).\ncurious(alice).\nbrave(frank).\nparent(carol,eve).\nsibling(frank,dave).\nowns(frank,car).\ntired(george).\nsibling(dave,frank).\nlikes(frank,car).\nsibling(eve,alice).\nweak(dave).\nlight(book).\nhard(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all Y, if there exists W such that object Y is hard and person W dislikes object Y and person W is weak, then object Y is new.\nFor all Z, if there exists A such that person Z is tired and person Z is an enemy of person A and person A is friendly, then person Z is sad.\nFor all X, if person X is weak and person X is tired, then person X is sad.\nFor all X, Y, if person X is busy and person Y is angry and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is happy and person Y is busy, then person X is an enemy of person Y.\n\nAnd the following facts:\neve is strong.\ncarol dislikes apple.\ncarol is hungry.\ncarol likes ball.\nalice is curious.\nfrank is brave.\ncarol is a parent of eve.\nfrank is a sibling of dave.\nfrank owns car.\ngeorge is tired.\ndave is a sibling of frank.\nfrank likes car.\neve is a sibling of alice.\ndave is weak.\nbook is light.\npencil is hard.\n\nQUESTION:\nCould eve is funny explain eve is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 330,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(eve).",
    "c": "bored(X) :- funny(X).\ntall(X) :- bored(X).\nclever(X) :- tall(X).\ncalm(X) :- clever(X).\nstrong(X) :- calm(X).\nnew(Y) :- hard(Y), dislikes(W,Y), weak(W).\nsad(Z) :- tired(Z), enemy(Z,A), friendly(A).\nsad(X) :- weak(X), tired(X).\nparent(X,Y) :- busy(X), angry(Y), friend(X,Y).\nenemy(X,Y) :- happy(X), busy(Y).\nstrong(eve).\ndislikes(carol,apple).\nhungry(carol).\nlikes(carol,ball).\ncurious(alice).\nbrave(frank).\nparent(carol,eve).\nsibling(frank,dave).\nowns(frank,car).\ntired(george).\nsibling(dave,frank).\nlikes(frank,car).\nsibling(eve,alice).\nweak(dave).\nlight(book).\nhard(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all Y, if there exists W such that object Y is hard and person W dislikes object Y and person W is weak, then object Y is new.\nFor all Z, if there exists A such that person Z is tired and person Z is an enemy of person A and person A is friendly, then person Z is sad.\nFor all X, if person X is weak and person X is tired, then person X is sad.\nFor all X, Y, if person X is busy and person Y is angry and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is happy and person Y is busy, then person X is an enemy of person Y.\n\nAnd the following facts:\neve is strong.\ncarol dislikes apple.\ncarol is hungry.\ncarol likes ball.\nalice is curious.\nfrank is brave.\ncarol is a parent of eve.\nfrank is a sibling of dave.\nfrank owns car.\ngeorge is tired.\ndave is a sibling of frank.\nfrank likes car.\neve is a sibling of alice.\ndave is weak.\nbook is light.\npencil is hard.\n\nQUESTION:\nCould eve is excited explain eve is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 331,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(eve).",
    "c": "brave(X) :- busy(X).\ncurious(X) :- brave(X).\nsad(X) :- curious(X).\nhappy(X) :- sad(X).\nangry(X) :- happy(X).\ntired(Z) :- hungry(Z), enemy(Z,A), friendly(A).\nhungry(Z) :- calm(Z), friend(Z,A), excited(A).\nexcited(X) :- calm(X).\nbig(X) :- new(X).\nlikes(X,Y) :- friendly(X), soft(Y).\nbusy(eve).\nwet(book).\nhard(ball).\nlikes(bob,phone).\nfriend(dave,frank).\nclean(car).\nlikes(alice,phone).\nhard(apple).\nsibling(carol,alice).\nlikes(eve,ball).\nnew(pencil).\nfriend(george,alice).\nfunny(carol).\nsibling(alice,frank).\nexcited(bob).\nbig(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all Z, if there exists A such that person Z is hungry and person Z is an enemy of person A and person A is friendly, then person Z is tired.\nFor all Z, if there exists A such that person Z is calm and person Z is a friend of person A and person A is excited, then person Z is hungry.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if object X is new, then object X is big.\nFor all X, Y, if person X is friendly and object Y is soft, then person X likes object Y.\n\nAnd the following facts:\neve is busy.\nbook is wet.\nball is hard.\nbob likes phone.\ndave is a friend of frank.\ncar is clean.\nalice likes phone.\napple is hard.\ncarol is a sibling of alice.\neve likes ball.\npencil is new.\ngeorge is a friend of alice.\ncarol is funny.\nalice is a sibling of frank.\nbob is excited.\ncar is big.\n\nQUESTION:\nIs eve is angry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 332,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "brave(X) :- busy(X).\ncurious(X) :- brave(X).\nsad(X) :- curious(X).\nhappy(X) :- sad(X).\nangry(X) :- happy(X).\ntired(Z) :- hungry(Z), enemy(Z,A), friendly(A).\nhungry(Z) :- calm(Z), friend(Z,A), excited(A).\nexcited(X) :- calm(X).\nbig(X) :- new(X).\nlikes(X,Y) :- friendly(X), soft(Y).\nbusy(eve).\nwet(book).\nhard(ball).\nlikes(bob,phone).\nfriend(dave,frank).\nclean(car).\nlikes(alice,phone).\nhard(apple).\nsibling(carol,alice).\nlikes(eve,ball).\nnew(pencil).\nfriend(george,alice).\nfunny(carol).\nsibling(alice,frank).\nexcited(bob).\nbig(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all Z, if there exists A such that person Z is hungry and person Z is an enemy of person A and person A is friendly, then person Z is tired.\nFor all Z, if there exists A such that person Z is calm and person Z is a friend of person A and person A is excited, then person Z is hungry.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if object X is new, then object X is big.\nFor all X, Y, if person X is friendly and object Y is soft, then person X likes object Y.\n\nAnd the following facts:\neve is busy.\nbook is wet.\nball is hard.\nbob likes phone.\ndave is a friend of frank.\ncar is clean.\nalice likes phone.\napple is hard.\ncarol is a sibling of alice.\neve likes ball.\npencil is new.\ngeorge is a friend of alice.\ncarol is funny.\nalice is a sibling of frank.\nbob is excited.\ncar is big.\n\nQUESTION:\nIs car is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 333,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(eve).",
    "c": "brave(X) :- busy(X).\ncurious(X) :- brave(X).\nsad(X) :- curious(X).\nhappy(X) :- sad(X).\nangry(X) :- happy(X).\ntired(Z) :- hungry(Z), enemy(Z,A), friendly(A).\nhungry(Z) :- calm(Z), friend(Z,A), excited(A).\nexcited(X) :- calm(X).\nbig(X) :- new(X).\nlikes(X,Y) :- friendly(X), soft(Y).\nangry(eve).\nwet(book).\nhard(ball).\nlikes(bob,phone).\nfriend(dave,frank).\nclean(car).\nlikes(alice,phone).\nhard(apple).\nsibling(carol,alice).\nlikes(eve,ball).\nnew(pencil).\nfriend(george,alice).\nfunny(carol).\nsibling(alice,frank).\nexcited(bob).\nbig(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all Z, if there exists A such that person Z is hungry and person Z is an enemy of person A and person A is friendly, then person Z is tired.\nFor all Z, if there exists A such that person Z is calm and person Z is a friend of person A and person A is excited, then person Z is hungry.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if object X is new, then object X is big.\nFor all X, Y, if person X is friendly and object Y is soft, then person X likes object Y.\n\nAnd the following facts:\neve is angry.\nbook is wet.\nball is hard.\nbob likes phone.\ndave is a friend of frank.\ncar is clean.\nalice likes phone.\napple is hard.\ncarol is a sibling of alice.\neve likes ball.\npencil is new.\ngeorge is a friend of alice.\ncarol is funny.\nalice is a sibling of frank.\nbob is excited.\ncar is big.\n\nQUESTION:\nCould eve is busy explain eve is angry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 334,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "brave(X) :- busy(X).\ncurious(X) :- brave(X).\nsad(X) :- curious(X).\nhappy(X) :- sad(X).\nangry(X) :- happy(X).\ntired(Z) :- hungry(Z), enemy(Z,A), friendly(A).\nhungry(Z) :- calm(Z), friend(Z,A), excited(A).\nexcited(X) :- calm(X).\nbig(X) :- new(X).\nlikes(X,Y) :- friendly(X), soft(Y).\nangry(eve).\nwet(book).\nhard(ball).\nlikes(bob,phone).\nfriend(dave,frank).\nclean(car).\nlikes(alice,phone).\nhard(apple).\nsibling(carol,alice).\nlikes(eve,ball).\nnew(pencil).\nfriend(george,alice).\nfunny(carol).\nsibling(alice,frank).\nexcited(bob).\nbig(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all Z, if there exists A such that person Z is hungry and person Z is an enemy of person A and person A is friendly, then person Z is tired.\nFor all Z, if there exists A such that person Z is calm and person Z is a friend of person A and person A is excited, then person Z is hungry.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if object X is new, then object X is big.\nFor all X, Y, if person X is friendly and object Y is soft, then person X likes object Y.\n\nAnd the following facts:\neve is angry.\nbook is wet.\nball is hard.\nbob likes phone.\ndave is a friend of frank.\ncar is clean.\nalice likes phone.\napple is hard.\ncarol is a sibling of alice.\neve likes ball.\npencil is new.\ngeorge is a friend of alice.\ncarol is funny.\nalice is a sibling of frank.\nbob is excited.\ncar is big.\n\nQUESTION:\nCould dave is weak explain eve is angry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 335,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "light(X) :- big(X).\nnew(X) :- light(X).\nold(X) :- new(X).\nred(X) :- old(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nlight(X) :- red(X).\nsmall(X) :- light(X).\nsoft(X) :- small(X).\nsmall(X) :- soft(X).\nbig(book).\nenemy(frank,eve).\nexcited(bob).\nenemy(bob,george).\nclever(eve).\nparent(george,eve).\nfriend(frank,bob).\nfriend(bob,frank).\nowns(alice,book).\nlikes(carol,car).\nfriend(frank,eve).\nsunny.\nexcited(carol).\ndislikes(george,pencil).\nclever(bob).\nparent(carol,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is small.\n\nAnd the following facts:\nbook is big.\nfrank is an enemy of eve.\nbob is excited.\nbob is an enemy of george.\neve is clever.\ngeorge is a parent of eve.\nfrank is a friend of bob.\nbob is a friend of frank.\nalice owns book.\ncarol likes car.\nfrank is a friend of eve.\nit is sunny.\ncarol is excited.\ngeorge dislikes pencil.\nbob is clever.\ncarol is a parent of alice.\n\nQUESTION:\nIs book is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 336,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(carol).",
    "c": "light(X) :- big(X).\nnew(X) :- light(X).\nold(X) :- new(X).\nred(X) :- old(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nlight(X) :- red(X).\nsmall(X) :- light(X).\nsoft(X) :- small(X).\nsmall(X) :- soft(X).\nbig(book).\nenemy(frank,eve).\nexcited(bob).\nenemy(bob,george).\nclever(eve).\nparent(george,eve).\nfriend(frank,bob).\nfriend(bob,frank).\nowns(alice,book).\nlikes(carol,car).\nfriend(frank,eve).\nsunny.\nexcited(carol).\ndislikes(george,pencil).\nclever(bob).\nparent(carol,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is small.\n\nAnd the following facts:\nbook is big.\nfrank is an enemy of eve.\nbob is excited.\nbob is an enemy of george.\neve is clever.\ngeorge is a parent of eve.\nfrank is a friend of bob.\nbob is a friend of frank.\nalice owns book.\ncarol likes car.\nfrank is a friend of eve.\nit is sunny.\ncarol is excited.\ngeorge dislikes pencil.\nbob is clever.\ncarol is a parent of alice.\n\nQUESTION:\nIs carol is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 337,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(book).",
    "c": "light(X) :- big(X).\nnew(X) :- light(X).\nold(X) :- new(X).\nred(X) :- old(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nlight(X) :- red(X).\nsmall(X) :- light(X).\nsoft(X) :- small(X).\nsmall(X) :- soft(X).\nsmall(book).\nenemy(frank,eve).\nexcited(bob).\nenemy(bob,george).\nclever(eve).\nparent(george,eve).\nfriend(frank,bob).\nfriend(bob,frank).\nowns(alice,book).\nlikes(carol,car).\nfriend(frank,eve).\nsunny.\nexcited(carol).\ndislikes(george,pencil).\nclever(bob).\nparent(carol,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is small.\n\nAnd the following facts:\nbook is small.\nfrank is an enemy of eve.\nbob is excited.\nbob is an enemy of george.\neve is clever.\ngeorge is a parent of eve.\nfrank is a friend of bob.\nbob is a friend of frank.\nalice owns book.\ncarol likes car.\nfrank is a friend of eve.\nit is sunny.\ncarol is excited.\ngeorge dislikes pencil.\nbob is clever.\ncarol is a parent of alice.\n\nQUESTION:\nCould book is big explain book is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 338,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(apple).",
    "c": "light(X) :- big(X).\nnew(X) :- light(X).\nold(X) :- new(X).\nred(X) :- old(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nlight(X) :- red(X).\nsmall(X) :- light(X).\nsoft(X) :- small(X).\nsmall(X) :- soft(X).\nsmall(book).\nenemy(frank,eve).\nexcited(bob).\nenemy(bob,george).\nclever(eve).\nparent(george,eve).\nfriend(frank,bob).\nfriend(bob,frank).\nowns(alice,book).\nlikes(carol,car).\nfriend(frank,eve).\nsunny.\nexcited(carol).\ndislikes(george,pencil).\nclever(bob).\nparent(carol,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is small.\n\nAnd the following facts:\nbook is small.\nfrank is an enemy of eve.\nbob is excited.\nbob is an enemy of george.\neve is clever.\ngeorge is a parent of eve.\nfrank is a friend of bob.\nbob is a friend of frank.\nalice owns book.\ncarol likes car.\nfrank is a friend of eve.\nit is sunny.\ncarol is excited.\ngeorge dislikes pencil.\nbob is clever.\ncarol is a parent of alice.\n\nQUESTION:\nCould apple is heavy explain book is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 339,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(apple).",
    "c": "small(X) :- hard(X).\nclean(X) :- small(X).\nwet(X) :- clean(X).\nold(X) :- wet(X).\nlight(X) :- old(X).\nsmall(X) :- light(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nclean(X) :- light(X).\nrough(X) :- clean(X).\nhard(apple).\nfriend(dave,frank).\nowns(eve,apple).\nfriend(alice,carol).\ntired(george).\nlikes(alice,apple).\nfriendly(carol).\nlikes(eve,ball).\nfriend(dave,george).\nangry(george).\nparent(dave,carol).\nhappy(alice).\nparent(frank,alice).\nsibling(bob,eve).\ndislikes(george,apple).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\n\nAnd the following facts:\napple is hard.\ndave is a friend of frank.\neve owns apple.\nalice is a friend of carol.\ngeorge is tired.\nalice likes apple.\ncarol is friendly.\neve likes ball.\ndave is a friend of george.\ngeorge is angry.\ndave is a parent of carol.\nalice is happy.\nfrank is a parent of alice.\nbob is a sibling of eve.\ngeorge dislikes apple.\nbob is a friend of george.\n\nQUESTION:\nIs apple is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 340,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(eve).",
    "c": "small(X) :- hard(X).\nclean(X) :- small(X).\nwet(X) :- clean(X).\nold(X) :- wet(X).\nlight(X) :- old(X).\nsmall(X) :- light(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nclean(X) :- light(X).\nrough(X) :- clean(X).\nhard(apple).\nfriend(dave,frank).\nowns(eve,apple).\nfriend(alice,carol).\ntired(george).\nlikes(alice,apple).\nfriendly(carol).\nlikes(eve,ball).\nfriend(dave,george).\nangry(george).\nparent(dave,carol).\nhappy(alice).\nparent(frank,alice).\nsibling(bob,eve).\ndislikes(george,apple).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\n\nAnd the following facts:\napple is hard.\ndave is a friend of frank.\neve owns apple.\nalice is a friend of carol.\ngeorge is tired.\nalice likes apple.\ncarol is friendly.\neve likes ball.\ndave is a friend of george.\ngeorge is angry.\ndave is a parent of carol.\nalice is happy.\nfrank is a parent of alice.\nbob is a sibling of eve.\ngeorge dislikes apple.\nbob is a friend of george.\n\nQUESTION:\nIs eve is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 341,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(apple).",
    "c": "small(X) :- hard(X).\nclean(X) :- small(X).\nwet(X) :- clean(X).\nold(X) :- wet(X).\nlight(X) :- old(X).\nsmall(X) :- light(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nclean(X) :- light(X).\nrough(X) :- clean(X).\nrough(apple).\nfriend(dave,frank).\nowns(eve,apple).\nfriend(alice,carol).\ntired(george).\nlikes(alice,apple).\nfriendly(carol).\nlikes(eve,ball).\nfriend(dave,george).\nangry(george).\nparent(dave,carol).\nhappy(alice).\nparent(frank,alice).\nsibling(bob,eve).\ndislikes(george,apple).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\n\nAnd the following facts:\napple is rough.\ndave is a friend of frank.\neve owns apple.\nalice is a friend of carol.\ngeorge is tired.\nalice likes apple.\ncarol is friendly.\neve likes ball.\ndave is a friend of george.\ngeorge is angry.\ndave is a parent of carol.\nalice is happy.\nfrank is a parent of alice.\nbob is a sibling of eve.\ngeorge dislikes apple.\nbob is a friend of george.\n\nQUESTION:\nCould apple is hard explain apple is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 342,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "small(X) :- hard(X).\nclean(X) :- small(X).\nwet(X) :- clean(X).\nold(X) :- wet(X).\nlight(X) :- old(X).\nsmall(X) :- light(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nclean(X) :- light(X).\nrough(X) :- clean(X).\nrough(apple).\nfriend(dave,frank).\nowns(eve,apple).\nfriend(alice,carol).\ntired(george).\nlikes(alice,apple).\nfriendly(carol).\nlikes(eve,ball).\nfriend(dave,george).\nangry(george).\nparent(dave,carol).\nhappy(alice).\nparent(frank,alice).\nsibling(bob,eve).\ndislikes(george,apple).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\n\nAnd the following facts:\napple is rough.\ndave is a friend of frank.\neve owns apple.\nalice is a friend of carol.\ngeorge is tired.\nalice likes apple.\ncarol is friendly.\neve likes ball.\ndave is a friend of george.\ngeorge is angry.\ndave is a parent of carol.\nalice is happy.\nfrank is a parent of alice.\nbob is a sibling of eve.\ngeorge dislikes apple.\nbob is a friend of george.\n\nQUESTION:\nCould ball is clean explain apple is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 343,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(bob).",
    "c": "calm(X) :- bored(X).\nstrong(X) :- calm(X).\nbusy(X) :- strong(X).\nexcited(X) :- busy(X).\nbrave(X) :- excited(X).\nsad(X) :- brave(X).\nclever(X) :- sad(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\nfriendly(X) :- angry(X).\nbored(bob).\nred(car).\nsibling(dave,george).\nenemy(alice,frank).\ndislikes(bob,pencil).\nfunny(dave).\nclean(car).\nrough(apple).\nsibling(frank,george).\nfriend(eve,frank).\nparent(bob,carol).\nsibling(alice,carol).\nbig(book).\nenemy(frank,carol).\nfriend(carol,eve).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\n\nAnd the following facts:\nbob is bored.\ncar is red.\ndave is a sibling of george.\nalice is an enemy of frank.\nbob dislikes pencil.\ndave is funny.\ncar is clean.\napple is rough.\nfrank is a sibling of george.\neve is a friend of frank.\nbob is a parent of carol.\nalice is a sibling of carol.\nbook is big.\nfrank is an enemy of carol.\ncarol is a friend of eve.\nalice is an enemy of carol.\n\nQUESTION:\nIs bob is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 344,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(dave).",
    "c": "calm(X) :- bored(X).\nstrong(X) :- calm(X).\nbusy(X) :- strong(X).\nexcited(X) :- busy(X).\nbrave(X) :- excited(X).\nsad(X) :- brave(X).\nclever(X) :- sad(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\nfriendly(X) :- angry(X).\nbored(bob).\nred(car).\nsibling(dave,george).\nenemy(alice,frank).\ndislikes(bob,pencil).\nfunny(dave).\nclean(car).\nrough(apple).\nsibling(frank,george).\nfriend(eve,frank).\nparent(bob,carol).\nsibling(alice,carol).\nbig(book).\nenemy(frank,carol).\nfriend(carol,eve).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\n\nAnd the following facts:\nbob is bored.\ncar is red.\ndave is a sibling of george.\nalice is an enemy of frank.\nbob dislikes pencil.\ndave is funny.\ncar is clean.\napple is rough.\nfrank is a sibling of george.\neve is a friend of frank.\nbob is a parent of carol.\nalice is a sibling of carol.\nbook is big.\nfrank is an enemy of carol.\ncarol is a friend of eve.\nalice is an enemy of carol.\n\nQUESTION:\nIs dave is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 345,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "bored(bob).",
    "c": "calm(X) :- bored(X).\nstrong(X) :- calm(X).\nbusy(X) :- strong(X).\nexcited(X) :- busy(X).\nbrave(X) :- excited(X).\nsad(X) :- brave(X).\nclever(X) :- sad(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\nfriendly(X) :- angry(X).\nfriendly(bob).\nred(car).\nsibling(dave,george).\nenemy(alice,frank).\ndislikes(bob,pencil).\nfunny(dave).\nclean(car).\nrough(apple).\nsibling(frank,george).\nfriend(eve,frank).\nparent(bob,carol).\nsibling(alice,carol).\nbig(book).\nenemy(frank,carol).\nfriend(carol,eve).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\n\nAnd the following facts:\nbob is friendly.\ncar is red.\ndave is a sibling of george.\nalice is an enemy of frank.\nbob dislikes pencil.\ndave is funny.\ncar is clean.\napple is rough.\nfrank is a sibling of george.\neve is a friend of frank.\nbob is a parent of carol.\nalice is a sibling of carol.\nbook is big.\nfrank is an enemy of carol.\ncarol is a friend of eve.\nalice is an enemy of carol.\n\nQUESTION:\nCould bob is bored explain bob is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 346,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(frank).",
    "c": "calm(X) :- bored(X).\nstrong(X) :- calm(X).\nbusy(X) :- strong(X).\nexcited(X) :- busy(X).\nbrave(X) :- excited(X).\nsad(X) :- brave(X).\nclever(X) :- sad(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\nfriendly(X) :- angry(X).\nfriendly(bob).\nred(car).\nsibling(dave,george).\nenemy(alice,frank).\ndislikes(bob,pencil).\nfunny(dave).\nclean(car).\nrough(apple).\nsibling(frank,george).\nfriend(eve,frank).\nparent(bob,carol).\nsibling(alice,carol).\nbig(book).\nenemy(frank,carol).\nfriend(carol,eve).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\n\nAnd the following facts:\nbob is friendly.\ncar is red.\ndave is a sibling of george.\nalice is an enemy of frank.\nbob dislikes pencil.\ndave is funny.\ncar is clean.\napple is rough.\nfrank is a sibling of george.\neve is a friend of frank.\nbob is a parent of carol.\nalice is a sibling of carol.\nbook is big.\nfrank is an enemy of carol.\ncarol is a friend of eve.\nalice is an enemy of carol.\n\nQUESTION:\nCould frank is bored explain bob is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 347,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(eve).",
    "c": "friendly(X) :- brave(X).\nfunny(X) :- friendly(X).\nclever(X) :- funny(X).\nweak(X) :- clever(X).\nsad(X) :- weak(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nhungry(X) :- curious(X).\nhappy(X) :- hungry(X).\ntall(X) :- happy(X).\nbrave(eve).\nowns(carol,pencil).\nsmall(ball).\nenemy(bob,frank).\nenemy(carol,bob).\nlikes(alice,book).\nlikes(george,car).\ndislikes(eve,car).\nparent(bob,carol).\ndislikes(dave,pencil).\nlikes(alice,apple).\nfriend(eve,george).\nowns(frank,ball).\nsibling(george,dave).\nparent(george,carol).\nenemy(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is tall.\n\nAnd the following facts:\neve is brave.\ncarol owns pencil.\nball is small.\nbob is an enemy of frank.\ncarol is an enemy of bob.\nalice likes book.\ngeorge likes car.\neve dislikes car.\nbob is a parent of carol.\ndave dislikes pencil.\nalice likes apple.\neve is a friend of george.\nfrank owns ball.\ngeorge is a sibling of dave.\ngeorge is a parent of carol.\ngeorge is an enemy of dave.\n\nQUESTION:\nIs eve is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 348,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(carol).",
    "c": "friendly(X) :- brave(X).\nfunny(X) :- friendly(X).\nclever(X) :- funny(X).\nweak(X) :- clever(X).\nsad(X) :- weak(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nhungry(X) :- curious(X).\nhappy(X) :- hungry(X).\ntall(X) :- happy(X).\nbrave(eve).\nowns(carol,pencil).\nsmall(ball).\nenemy(bob,frank).\nenemy(carol,bob).\nlikes(alice,book).\nlikes(george,car).\ndislikes(eve,car).\nparent(bob,carol).\ndislikes(dave,pencil).\nlikes(alice,apple).\nfriend(eve,george).\nowns(frank,ball).\nsibling(george,dave).\nparent(george,carol).\nenemy(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is tall.\n\nAnd the following facts:\neve is brave.\ncarol owns pencil.\nball is small.\nbob is an enemy of frank.\ncarol is an enemy of bob.\nalice likes book.\ngeorge likes car.\neve dislikes car.\nbob is a parent of carol.\ndave dislikes pencil.\nalice likes apple.\neve is a friend of george.\nfrank owns ball.\ngeorge is a sibling of dave.\ngeorge is a parent of carol.\ngeorge is an enemy of dave.\n\nQUESTION:\nIs carol is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 349,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "friendly(X) :- brave(X).\nfunny(X) :- friendly(X).\nclever(X) :- funny(X).\nweak(X) :- clever(X).\nsad(X) :- weak(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nhungry(X) :- curious(X).\nhappy(X) :- hungry(X).\ntall(X) :- happy(X).\ntall(eve).\nowns(carol,pencil).\nsmall(ball).\nenemy(bob,frank).\nenemy(carol,bob).\nlikes(alice,book).\nlikes(george,car).\ndislikes(eve,car).\nparent(bob,carol).\ndislikes(dave,pencil).\nlikes(alice,apple).\nfriend(eve,george).\nowns(frank,ball).\nsibling(george,dave).\nparent(george,carol).\nenemy(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is tall.\n\nAnd the following facts:\neve is tall.\ncarol owns pencil.\nball is small.\nbob is an enemy of frank.\ncarol is an enemy of bob.\nalice likes book.\ngeorge likes car.\neve dislikes car.\nbob is a parent of carol.\ndave dislikes pencil.\nalice likes apple.\neve is a friend of george.\nfrank owns ball.\ngeorge is a sibling of dave.\ngeorge is a parent of carol.\ngeorge is an enemy of dave.\n\nQUESTION:\nCould eve is brave explain eve is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 350,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(alice).",
    "c": "friendly(X) :- brave(X).\nfunny(X) :- friendly(X).\nclever(X) :- funny(X).\nweak(X) :- clever(X).\nsad(X) :- weak(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nhungry(X) :- curious(X).\nhappy(X) :- hungry(X).\ntall(X) :- happy(X).\ntall(eve).\nowns(carol,pencil).\nsmall(ball).\nenemy(bob,frank).\nenemy(carol,bob).\nlikes(alice,book).\nlikes(george,car).\ndislikes(eve,car).\nparent(bob,carol).\ndislikes(dave,pencil).\nlikes(alice,apple).\nfriend(eve,george).\nowns(frank,ball).\nsibling(george,dave).\nparent(george,carol).\nenemy(george,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is tall.\n\nAnd the following facts:\neve is tall.\ncarol owns pencil.\nball is small.\nbob is an enemy of frank.\ncarol is an enemy of bob.\nalice likes book.\ngeorge likes car.\neve dislikes car.\nbob is a parent of carol.\ndave dislikes pencil.\nalice likes apple.\neve is a friend of george.\nfrank owns ball.\ngeorge is a sibling of dave.\ngeorge is a parent of carol.\ngeorge is an enemy of dave.\n\nQUESTION:\nCould alice is hungry explain eve is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 351,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(carol).",
    "c": "excited(X) :- tall(X).\nhard(Z) :- smooth(Z).\nold(Z) :- new(Z).\nold(Y) :- soft(Y), dislikes(V,Y), bored(V).\nowns(Y,X) :- sad(Y), smooth(X), dislikes(W,X).\nhard(X) :- small(X), likes(W,X), strong(W).\nparent(X,Y) :- happy(X), busy(Y).\nlight(X) :- small(X).\nsoft(X) :- light(X).\nrough(X) :- dirty(X).\ntall(carol).\nfriend(alice,carol).\nenemy(alice,eve).\nparent(bob,carol).\nparent(carol,alice).\nparent(alice,eve).\nparent(alice,george).\nowns(carol,book).\nfriend(alice,bob).\ncalm(bob).\nfriendly(george).\nlikes(frank,apple).\nparent(bob,eve).\nowns(eve,apple).\nowns(eve,ball).\ndislikes(carol,car).\nfriend(eve,dave).\ndislikes(bob,ball).\nbig(pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is excited.\nFor all Z, if object Z is smooth, then object Z is hard.\nFor all Z, if object Z is new, then object Z is old.\nFor all Y, if there exists V such that object Y is soft and person V dislikes object Y and person V is bored, then object Y is old.\nFor all X, Y, if there exists W such that person Y is sad and object X is smooth and person W dislikes object X, then person Y owns object X.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is strong, then object X is hard.\nFor all X, Y, if person X is happy and person Y is busy, then person X is a parent of person Y.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\ncarol is tall.\nalice is a friend of carol.\nalice is an enemy of eve.\nbob is a parent of carol.\ncarol is a parent of alice.\nalice is a parent of eve.\nalice is a parent of george.\ncarol owns book.\nalice is a friend of bob.\nbob is calm.\ngeorge is friendly.\nfrank likes apple.\nbob is a parent of eve.\neve owns apple.\neve owns ball.\ncarol dislikes car.\neve is a friend of dave.\nbob dislikes ball.\npencil is big.\neve is a parent of bob.\n\nQUESTION:\nIs carol is excited true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 352,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(frank).",
    "c": "excited(X) :- tall(X).\nhard(Z) :- smooth(Z).\nold(Z) :- new(Z).\nold(Y) :- soft(Y), dislikes(V,Y), bored(V).\nowns(Y,X) :- sad(Y), smooth(X), dislikes(W,X).\nhard(X) :- small(X), likes(W,X), strong(W).\nparent(X,Y) :- happy(X), busy(Y).\nlight(X) :- small(X).\nsoft(X) :- light(X).\nrough(X) :- dirty(X).\ntall(carol).\nfriend(alice,carol).\nenemy(alice,eve).\nparent(bob,carol).\nparent(carol,alice).\nparent(alice,eve).\nparent(alice,george).\nowns(carol,book).\nfriend(alice,bob).\ncalm(bob).\nfriendly(george).\nlikes(frank,apple).\nparent(bob,eve).\nowns(eve,apple).\nowns(eve,ball).\ndislikes(carol,car).\nfriend(eve,dave).\ndislikes(bob,ball).\nbig(pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is excited.\nFor all Z, if object Z is smooth, then object Z is hard.\nFor all Z, if object Z is new, then object Z is old.\nFor all Y, if there exists V such that object Y is soft and person V dislikes object Y and person V is bored, then object Y is old.\nFor all X, Y, if there exists W such that person Y is sad and object X is smooth and person W dislikes object X, then person Y owns object X.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is strong, then object X is hard.\nFor all X, Y, if person X is happy and person Y is busy, then person X is a parent of person Y.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\ncarol is tall.\nalice is a friend of carol.\nalice is an enemy of eve.\nbob is a parent of carol.\ncarol is a parent of alice.\nalice is a parent of eve.\nalice is a parent of george.\ncarol owns book.\nalice is a friend of bob.\nbob is calm.\ngeorge is friendly.\nfrank likes apple.\nbob is a parent of eve.\neve owns apple.\neve owns ball.\ncarol dislikes car.\neve is a friend of dave.\nbob dislikes ball.\npencil is big.\neve is a parent of bob.\n\nQUESTION:\nIs frank is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 353,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(carol).",
    "c": "excited(X) :- tall(X).\nhard(Z) :- smooth(Z).\nold(Z) :- new(Z).\nold(Y) :- soft(Y), dislikes(V,Y), bored(V).\nowns(Y,X) :- sad(Y), smooth(X), dislikes(W,X).\nhard(X) :- small(X), likes(W,X), strong(W).\nparent(X,Y) :- happy(X), busy(Y).\nlight(X) :- small(X).\nsoft(X) :- light(X).\nrough(X) :- dirty(X).\nexcited(carol).\nfriend(alice,carol).\nenemy(alice,eve).\nparent(bob,carol).\nparent(carol,alice).\nparent(alice,eve).\nparent(alice,george).\nowns(carol,book).\nfriend(alice,bob).\ncalm(bob).\nfriendly(george).\nlikes(frank,apple).\nparent(bob,eve).\nowns(eve,apple).\nowns(eve,ball).\ndislikes(carol,car).\nfriend(eve,dave).\ndislikes(bob,ball).\nbig(pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is excited.\nFor all Z, if object Z is smooth, then object Z is hard.\nFor all Z, if object Z is new, then object Z is old.\nFor all Y, if there exists V such that object Y is soft and person V dislikes object Y and person V is bored, then object Y is old.\nFor all X, Y, if there exists W such that person Y is sad and object X is smooth and person W dislikes object X, then person Y owns object X.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is strong, then object X is hard.\nFor all X, Y, if person X is happy and person Y is busy, then person X is a parent of person Y.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\ncarol is excited.\nalice is a friend of carol.\nalice is an enemy of eve.\nbob is a parent of carol.\ncarol is a parent of alice.\nalice is a parent of eve.\nalice is a parent of george.\ncarol owns book.\nalice is a friend of bob.\nbob is calm.\ngeorge is friendly.\nfrank likes apple.\nbob is a parent of eve.\neve owns apple.\neve owns ball.\ncarol dislikes car.\neve is a friend of dave.\nbob dislikes ball.\npencil is big.\neve is a parent of bob.\n\nQUESTION:\nCould carol is tall explain carol is excited?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 354,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(ball).",
    "c": "excited(X) :- tall(X).\nhard(Z) :- smooth(Z).\nold(Z) :- new(Z).\nold(Y) :- soft(Y), dislikes(V,Y), bored(V).\nowns(Y,X) :- sad(Y), smooth(X), dislikes(W,X).\nhard(X) :- small(X), likes(W,X), strong(W).\nparent(X,Y) :- happy(X), busy(Y).\nlight(X) :- small(X).\nsoft(X) :- light(X).\nrough(X) :- dirty(X).\nexcited(carol).\nfriend(alice,carol).\nenemy(alice,eve).\nparent(bob,carol).\nparent(carol,alice).\nparent(alice,eve).\nparent(alice,george).\nowns(carol,book).\nfriend(alice,bob).\ncalm(bob).\nfriendly(george).\nlikes(frank,apple).\nparent(bob,eve).\nowns(eve,apple).\nowns(eve,ball).\ndislikes(carol,car).\nfriend(eve,dave).\ndislikes(bob,ball).\nbig(pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is excited.\nFor all Z, if object Z is smooth, then object Z is hard.\nFor all Z, if object Z is new, then object Z is old.\nFor all Y, if there exists V such that object Y is soft and person V dislikes object Y and person V is bored, then object Y is old.\nFor all X, Y, if there exists W such that person Y is sad and object X is smooth and person W dislikes object X, then person Y owns object X.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is strong, then object X is hard.\nFor all X, Y, if person X is happy and person Y is busy, then person X is a parent of person Y.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\ncarol is excited.\nalice is a friend of carol.\nalice is an enemy of eve.\nbob is a parent of carol.\ncarol is a parent of alice.\nalice is a parent of eve.\nalice is a parent of george.\ncarol owns book.\nalice is a friend of bob.\nbob is calm.\ngeorge is friendly.\nfrank likes apple.\nbob is a parent of eve.\neve owns apple.\neve owns ball.\ncarol dislikes car.\neve is a friend of dave.\nbob dislikes ball.\npencil is big.\neve is a parent of bob.\n\nQUESTION:\nCould ball is red explain carol is excited?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 355,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clean(phone).",
    "c": "clean(X) :- rough(X).\nfunny(X) :- calm(X), friend(X,V), happy(V).\ntall(X) :- friendly(X), parent(X,A), calm(A).\nbusy(Y) :- curious(Y), old(B).\nparent(X,Y) :- happy(X), funny(Y), enemy(X,Y).\nold(X) :- red(X).\nbusy(X) :- weak(X).\nred(X) :- big(X).\nsmooth(X) :- red(X), old(X).\nfriend(X,Y) :- tall(X), busy(Y).\nrough(phone).\nfriendly(frank).\ndirty(phone).\nsoft(pencil).\nfriend(carol,frank).\nheavy(book).\nlight(ball).\nparent(frank,alice).\nowns(eve,book).\nred(pencil).\ndislikes(eve,apple).\ncurious(carol).\nfriend(bob,george).\nparent(eve,bob).\ntired(dave).\nsibling(dave,alice).\nbig(car).\nparent(george,frank).\nparent(frank,eve).\nenemy(george,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is clean.\nFor all X, if there exists V such that person X is calm and person X is a friend of person V and person V is happy, then person X is funny.\nFor all X, if there exists A such that person X is friendly and person X is a parent of person A and person A is calm, then person X is tall.\nFor all Y, if there exists B such that person Y is curious and object B is old, then person Y is busy.\nFor all X, Y, if person X is happy and person Y is funny and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, if object X is red, then object X is old.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red and object X is old, then object X is smooth.\nFor all X, Y, if person X is tall and person Y is busy, then person X is a friend of person Y.\n\nAnd the following facts:\nphone is rough.\nfrank is friendly.\nphone is dirty.\npencil is soft.\ncarol is a friend of frank.\nbook is heavy.\nball is light.\nfrank is a parent of alice.\neve owns book.\npencil is red.\neve dislikes apple.\ncarol is curious.\nbob is a friend of george.\neve is a parent of bob.\ndave is tired.\ndave is a sibling of alice.\ncar is big.\ngeorge is a parent of frank.\nfrank is a parent of eve.\ngeorge is an enemy of eve.\n\nQUESTION:\nIs phone is clean true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 356,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(george).",
    "c": "clean(X) :- rough(X).\nfunny(X) :- calm(X), friend(X,V), happy(V).\ntall(X) :- friendly(X), parent(X,A), calm(A).\nbusy(Y) :- curious(Y), old(B).\nparent(X,Y) :- happy(X), funny(Y), enemy(X,Y).\nold(X) :- red(X).\nbusy(X) :- weak(X).\nred(X) :- big(X).\nsmooth(X) :- red(X), old(X).\nfriend(X,Y) :- tall(X), busy(Y).\nrough(phone).\nfriendly(frank).\ndirty(phone).\nsoft(pencil).\nfriend(carol,frank).\nheavy(book).\nlight(ball).\nparent(frank,alice).\nowns(eve,book).\nred(pencil).\ndislikes(eve,apple).\ncurious(carol).\nfriend(bob,george).\nparent(eve,bob).\ntired(dave).\nsibling(dave,alice).\nbig(car).\nparent(george,frank).\nparent(frank,eve).\nenemy(george,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is clean.\nFor all X, if there exists V such that person X is calm and person X is a friend of person V and person V is happy, then person X is funny.\nFor all X, if there exists A such that person X is friendly and person X is a parent of person A and person A is calm, then person X is tall.\nFor all Y, if there exists B such that person Y is curious and object B is old, then person Y is busy.\nFor all X, Y, if person X is happy and person Y is funny and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, if object X is red, then object X is old.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red and object X is old, then object X is smooth.\nFor all X, Y, if person X is tall and person Y is busy, then person X is a friend of person Y.\n\nAnd the following facts:\nphone is rough.\nfrank is friendly.\nphone is dirty.\npencil is soft.\ncarol is a friend of frank.\nbook is heavy.\nball is light.\nfrank is a parent of alice.\neve owns book.\npencil is red.\neve dislikes apple.\ncarol is curious.\nbob is a friend of george.\neve is a parent of bob.\ndave is tired.\ndave is a sibling of alice.\ncar is big.\ngeorge is a parent of frank.\nfrank is a parent of eve.\ngeorge is an enemy of eve.\n\nQUESTION:\nIs george is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 357,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "clean(X) :- rough(X).\nfunny(X) :- calm(X), friend(X,V), happy(V).\ntall(X) :- friendly(X), parent(X,A), calm(A).\nbusy(Y) :- curious(Y), old(B).\nparent(X,Y) :- happy(X), funny(Y), enemy(X,Y).\nold(X) :- red(X).\nbusy(X) :- weak(X).\nred(X) :- big(X).\nsmooth(X) :- red(X), old(X).\nfriend(X,Y) :- tall(X), busy(Y).\nclean(phone).\nfriendly(frank).\ndirty(phone).\nsoft(pencil).\nfriend(carol,frank).\nheavy(book).\nlight(ball).\nparent(frank,alice).\nowns(eve,book).\nred(pencil).\ndislikes(eve,apple).\ncurious(carol).\nfriend(bob,george).\nparent(eve,bob).\ntired(dave).\nsibling(dave,alice).\nbig(car).\nparent(george,frank).\nparent(frank,eve).\nenemy(george,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is clean.\nFor all X, if there exists V such that person X is calm and person X is a friend of person V and person V is happy, then person X is funny.\nFor all X, if there exists A such that person X is friendly and person X is a parent of person A and person A is calm, then person X is tall.\nFor all Y, if there exists B such that person Y is curious and object B is old, then person Y is busy.\nFor all X, Y, if person X is happy and person Y is funny and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, if object X is red, then object X is old.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red and object X is old, then object X is smooth.\nFor all X, Y, if person X is tall and person Y is busy, then person X is a friend of person Y.\n\nAnd the following facts:\nphone is clean.\nfrank is friendly.\nphone is dirty.\npencil is soft.\ncarol is a friend of frank.\nbook is heavy.\nball is light.\nfrank is a parent of alice.\neve owns book.\npencil is red.\neve dislikes apple.\ncarol is curious.\nbob is a friend of george.\neve is a parent of bob.\ndave is tired.\ndave is a sibling of alice.\ncar is big.\ngeorge is a parent of frank.\nfrank is a parent of eve.\ngeorge is an enemy of eve.\n\nQUESTION:\nCould phone is rough explain phone is clean?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 358,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "clean(X) :- rough(X).\nfunny(X) :- calm(X), friend(X,V), happy(V).\ntall(X) :- friendly(X), parent(X,A), calm(A).\nbusy(Y) :- curious(Y), old(B).\nparent(X,Y) :- happy(X), funny(Y), enemy(X,Y).\nold(X) :- red(X).\nbusy(X) :- weak(X).\nred(X) :- big(X).\nsmooth(X) :- red(X), old(X).\nfriend(X,Y) :- tall(X), busy(Y).\nclean(phone).\nfriendly(frank).\ndirty(phone).\nsoft(pencil).\nfriend(carol,frank).\nheavy(book).\nlight(ball).\nparent(frank,alice).\nowns(eve,book).\nred(pencil).\ndislikes(eve,apple).\ncurious(carol).\nfriend(bob,george).\nparent(eve,bob).\ntired(dave).\nsibling(dave,alice).\nbig(car).\nparent(george,frank).\nparent(frank,eve).\nenemy(george,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is clean.\nFor all X, if there exists V such that person X is calm and person X is a friend of person V and person V is happy, then person X is funny.\nFor all X, if there exists A such that person X is friendly and person X is a parent of person A and person A is calm, then person X is tall.\nFor all Y, if there exists B such that person Y is curious and object B is old, then person Y is busy.\nFor all X, Y, if person X is happy and person Y is funny and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, if object X is red, then object X is old.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red and object X is old, then object X is smooth.\nFor all X, Y, if person X is tall and person Y is busy, then person X is a friend of person Y.\n\nAnd the following facts:\nphone is clean.\nfrank is friendly.\nphone is dirty.\npencil is soft.\ncarol is a friend of frank.\nbook is heavy.\nball is light.\nfrank is a parent of alice.\neve owns book.\npencil is red.\neve dislikes apple.\ncarol is curious.\nbob is a friend of george.\neve is a parent of bob.\ndave is tired.\ndave is a sibling of alice.\ncar is big.\ngeorge is a parent of frank.\nfrank is a parent of eve.\ngeorge is an enemy of eve.\n\nQUESTION:\nCould bob is angry explain phone is clean?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 359,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(frank).",
    "c": "brave(X) :- strong(X).\nclean(X) :- heavy(X), dislikes(A,X), curious(A).\nclean(Z) :- light(Z), dislikes(B,Z), excited(B).\nheavy(X) :- smooth(X), dislikes(B,X), happy(B).\nweak(X) :- hungry(X).\nsmooth(X) :- new(X).\nbored(X) :- sad(X).\nlikes(X,Y) :- bored(X), small(Y), owns(X,Y).\ndirty(X) :- clean(X).\nfriend(X,Y) :- curious(X), calm(Y).\nstrong(frank).\nparent(frank,george).\nfriendly(carol).\nparent(eve,dave).\nhungry(bob).\nlikes(bob,book).\nlikes(alice,apple).\nenemy(dave,george).\nenemy(alice,dave).\ncalm(bob).\nenemy(eve,alice).\nangry(dave).\nparent(george,carol).\nlikes(bob,car).\nparent(carol,alice).\nowns(dave,book).\nhappy(bob).\nbig(car).\nlikes(bob,phone).\nparent(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is brave.\nFor all X, if there exists A such that object X is heavy and person A dislikes object X and person A is curious, then object X is clean.\nFor all Z, if there exists B such that object Z is light and person B dislikes object Z and person B is excited, then object Z is clean.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is happy, then object X is heavy.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if person X is sad, then person X is bored.\nFor all X, Y, if person X is bored and object Y is small and person X owns object Y, then person X likes object Y.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if person X is curious and person Y is calm, then person X is a friend of person Y.\n\nAnd the following facts:\nfrank is strong.\nfrank is a parent of george.\ncarol is friendly.\neve is a parent of dave.\nbob is hungry.\nbob likes book.\nalice likes apple.\ndave is an enemy of george.\nalice is an enemy of dave.\nbob is calm.\neve is an enemy of alice.\ndave is angry.\ngeorge is a parent of carol.\nbob likes car.\ncarol is a parent of alice.\ndave owns book.\nbob is happy.\ncar is big.\nbob likes phone.\nbob is a parent of frank.\n\nQUESTION:\nIs frank is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 360,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "calm(george).",
    "c": "brave(X) :- strong(X).\nclean(X) :- heavy(X), dislikes(A,X), curious(A).\nclean(Z) :- light(Z), dislikes(B,Z), excited(B).\nheavy(X) :- smooth(X), dislikes(B,X), happy(B).\nweak(X) :- hungry(X).\nsmooth(X) :- new(X).\nbored(X) :- sad(X).\nlikes(X,Y) :- bored(X), small(Y), owns(X,Y).\ndirty(X) :- clean(X).\nfriend(X,Y) :- curious(X), calm(Y).\nstrong(frank).\nparent(frank,george).\nfriendly(carol).\nparent(eve,dave).\nhungry(bob).\nlikes(bob,book).\nlikes(alice,apple).\nenemy(dave,george).\nenemy(alice,dave).\ncalm(bob).\nenemy(eve,alice).\nangry(dave).\nparent(george,carol).\nlikes(bob,car).\nparent(carol,alice).\nowns(dave,book).\nhappy(bob).\nbig(car).\nlikes(bob,phone).\nparent(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is brave.\nFor all X, if there exists A such that object X is heavy and person A dislikes object X and person A is curious, then object X is clean.\nFor all Z, if there exists B such that object Z is light and person B dislikes object Z and person B is excited, then object Z is clean.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is happy, then object X is heavy.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if person X is sad, then person X is bored.\nFor all X, Y, if person X is bored and object Y is small and person X owns object Y, then person X likes object Y.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if person X is curious and person Y is calm, then person X is a friend of person Y.\n\nAnd the following facts:\nfrank is strong.\nfrank is a parent of george.\ncarol is friendly.\neve is a parent of dave.\nbob is hungry.\nbob likes book.\nalice likes apple.\ndave is an enemy of george.\nalice is an enemy of dave.\nbob is calm.\neve is an enemy of alice.\ndave is angry.\ngeorge is a parent of carol.\nbob likes car.\ncarol is a parent of alice.\ndave owns book.\nbob is happy.\ncar is big.\nbob likes phone.\nbob is a parent of frank.\n\nQUESTION:\nIs george is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 361,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(frank).",
    "c": "brave(X) :- strong(X).\nclean(X) :- heavy(X), dislikes(A,X), curious(A).\nclean(Z) :- light(Z), dislikes(B,Z), excited(B).\nheavy(X) :- smooth(X), dislikes(B,X), happy(B).\nweak(X) :- hungry(X).\nsmooth(X) :- new(X).\nbored(X) :- sad(X).\nlikes(X,Y) :- bored(X), small(Y), owns(X,Y).\ndirty(X) :- clean(X).\nfriend(X,Y) :- curious(X), calm(Y).\nbrave(frank).\nparent(frank,george).\nfriendly(carol).\nparent(eve,dave).\nhungry(bob).\nlikes(bob,book).\nlikes(alice,apple).\nenemy(dave,george).\nenemy(alice,dave).\ncalm(bob).\nenemy(eve,alice).\nangry(dave).\nparent(george,carol).\nlikes(bob,car).\nparent(carol,alice).\nowns(dave,book).\nhappy(bob).\nbig(car).\nlikes(bob,phone).\nparent(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is brave.\nFor all X, if there exists A such that object X is heavy and person A dislikes object X and person A is curious, then object X is clean.\nFor all Z, if there exists B such that object Z is light and person B dislikes object Z and person B is excited, then object Z is clean.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is happy, then object X is heavy.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if person X is sad, then person X is bored.\nFor all X, Y, if person X is bored and object Y is small and person X owns object Y, then person X likes object Y.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if person X is curious and person Y is calm, then person X is a friend of person Y.\n\nAnd the following facts:\nfrank is brave.\nfrank is a parent of george.\ncarol is friendly.\neve is a parent of dave.\nbob is hungry.\nbob likes book.\nalice likes apple.\ndave is an enemy of george.\nalice is an enemy of dave.\nbob is calm.\neve is an enemy of alice.\ndave is angry.\ngeorge is a parent of carol.\nbob likes car.\ncarol is a parent of alice.\ndave owns book.\nbob is happy.\ncar is big.\nbob likes phone.\nbob is a parent of frank.\n\nQUESTION:\nCould frank is strong explain frank is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 362,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(carol).",
    "c": "brave(X) :- strong(X).\nclean(X) :- heavy(X), dislikes(A,X), curious(A).\nclean(Z) :- light(Z), dislikes(B,Z), excited(B).\nheavy(X) :- smooth(X), dislikes(B,X), happy(B).\nweak(X) :- hungry(X).\nsmooth(X) :- new(X).\nbored(X) :- sad(X).\nlikes(X,Y) :- bored(X), small(Y), owns(X,Y).\ndirty(X) :- clean(X).\nfriend(X,Y) :- curious(X), calm(Y).\nbrave(frank).\nparent(frank,george).\nfriendly(carol).\nparent(eve,dave).\nhungry(bob).\nlikes(bob,book).\nlikes(alice,apple).\nenemy(dave,george).\nenemy(alice,dave).\ncalm(bob).\nenemy(eve,alice).\nangry(dave).\nparent(george,carol).\nlikes(bob,car).\nparent(carol,alice).\nowns(dave,book).\nhappy(bob).\nbig(car).\nlikes(bob,phone).\nparent(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is brave.\nFor all X, if there exists A such that object X is heavy and person A dislikes object X and person A is curious, then object X is clean.\nFor all Z, if there exists B such that object Z is light and person B dislikes object Z and person B is excited, then object Z is clean.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is happy, then object X is heavy.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if person X is sad, then person X is bored.\nFor all X, Y, if person X is bored and object Y is small and person X owns object Y, then person X likes object Y.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if person X is curious and person Y is calm, then person X is a friend of person Y.\n\nAnd the following facts:\nfrank is brave.\nfrank is a parent of george.\ncarol is friendly.\neve is a parent of dave.\nbob is hungry.\nbob likes book.\nalice likes apple.\ndave is an enemy of george.\nalice is an enemy of dave.\nbob is calm.\neve is an enemy of alice.\ndave is angry.\ngeorge is a parent of carol.\nbob likes car.\ncarol is a parent of alice.\ndave owns book.\nbob is happy.\ncar is big.\nbob likes phone.\nbob is a parent of frank.\n\nQUESTION:\nCould carol is calm explain frank is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 363,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(car).",
    "c": "hard(X) :- wet(X).\nclean(Z) :- clean(Z), owns(U,Z), funny(U).\nstrong(Z) :- brave(Z), new(C).\nbig(X) :- smooth(X), dislikes(B,X), angry(B).\nsad(X) :- calm(X).\nclean(X) :- heavy(X), soft(X).\nenemy(X,Y) :- friendly(X), calm(Y), sibling(X,Y).\nlikes(X,Y) :- busy(X), soft(Y).\ndirty(X) :- light(X).\nclean(X) :- soft(X).\nwet(car).\nenemy(alice,carol).\nangry(george).\nfriend(frank,dave).\nbusy(eve).\nbusy(dave).\nlikes(frank,pencil).\nstrong(alice).\nfriendly(alice).\nsmooth(car).\nhungry(eve).\ndislikes(dave,car).\nsibling(carol,dave).\nsmall(car).\nfriend(george,frank).\nlikes(carol,book).\nowns(carol,ball).\nparent(eve,alice).\nsibling(dave,bob).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is hard.\nFor all Z, if there exists U such that object Z is clean and person U owns object Z and person U is funny, then object Z is clean.\nFor all Z, if there exists C such that person Z is brave and object C is new, then person Z is strong.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is angry, then object X is big.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if object X is heavy and object X is soft, then object X is clean.\nFor all X, Y, if person X is friendly and person Y is calm and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, Y, if person X is busy and object Y is soft, then person X likes object Y.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is soft, then object X is clean.\n\nAnd the following facts:\ncar is wet.\nalice is an enemy of carol.\ngeorge is angry.\nfrank is a friend of dave.\neve is busy.\ndave is busy.\nfrank likes pencil.\nalice is strong.\nalice is friendly.\ncar is smooth.\neve is hungry.\ndave dislikes car.\ncarol is a sibling of dave.\ncar is small.\ngeorge is a friend of frank.\ncarol likes book.\ncarol owns ball.\neve is a parent of alice.\ndave is a sibling of bob.\nfrank is a friend of george.\n\nQUESTION:\nIs car is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 364,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(pencil).",
    "c": "hard(X) :- wet(X).\nclean(Z) :- clean(Z), owns(U,Z), funny(U).\nstrong(Z) :- brave(Z), new(C).\nbig(X) :- smooth(X), dislikes(B,X), angry(B).\nsad(X) :- calm(X).\nclean(X) :- heavy(X), soft(X).\nenemy(X,Y) :- friendly(X), calm(Y), sibling(X,Y).\nlikes(X,Y) :- busy(X), soft(Y).\ndirty(X) :- light(X).\nclean(X) :- soft(X).\nwet(car).\nenemy(alice,carol).\nangry(george).\nfriend(frank,dave).\nbusy(eve).\nbusy(dave).\nlikes(frank,pencil).\nstrong(alice).\nfriendly(alice).\nsmooth(car).\nhungry(eve).\ndislikes(dave,car).\nsibling(carol,dave).\nsmall(car).\nfriend(george,frank).\nlikes(carol,book).\nowns(carol,ball).\nparent(eve,alice).\nsibling(dave,bob).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is hard.\nFor all Z, if there exists U such that object Z is clean and person U owns object Z and person U is funny, then object Z is clean.\nFor all Z, if there exists C such that person Z is brave and object C is new, then person Z is strong.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is angry, then object X is big.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if object X is heavy and object X is soft, then object X is clean.\nFor all X, Y, if person X is friendly and person Y is calm and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, Y, if person X is busy and object Y is soft, then person X likes object Y.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is soft, then object X is clean.\n\nAnd the following facts:\ncar is wet.\nalice is an enemy of carol.\ngeorge is angry.\nfrank is a friend of dave.\neve is busy.\ndave is busy.\nfrank likes pencil.\nalice is strong.\nalice is friendly.\ncar is smooth.\neve is hungry.\ndave dislikes car.\ncarol is a sibling of dave.\ncar is small.\ngeorge is a friend of frank.\ncarol likes book.\ncarol owns ball.\neve is a parent of alice.\ndave is a sibling of bob.\nfrank is a friend of george.\n\nQUESTION:\nIs pencil is rough true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 365,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(car).",
    "c": "hard(X) :- wet(X).\nclean(Z) :- clean(Z), owns(U,Z), funny(U).\nstrong(Z) :- brave(Z), new(C).\nbig(X) :- smooth(X), dislikes(B,X), angry(B).\nsad(X) :- calm(X).\nclean(X) :- heavy(X), soft(X).\nenemy(X,Y) :- friendly(X), calm(Y), sibling(X,Y).\nlikes(X,Y) :- busy(X), soft(Y).\ndirty(X) :- light(X).\nclean(X) :- soft(X).\nhard(car).\nenemy(alice,carol).\nangry(george).\nfriend(frank,dave).\nbusy(eve).\nbusy(dave).\nlikes(frank,pencil).\nstrong(alice).\nfriendly(alice).\nsmooth(car).\nhungry(eve).\ndislikes(dave,car).\nsibling(carol,dave).\nsmall(car).\nfriend(george,frank).\nlikes(carol,book).\nowns(carol,ball).\nparent(eve,alice).\nsibling(dave,bob).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is hard.\nFor all Z, if there exists U such that object Z is clean and person U owns object Z and person U is funny, then object Z is clean.\nFor all Z, if there exists C such that person Z is brave and object C is new, then person Z is strong.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is angry, then object X is big.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if object X is heavy and object X is soft, then object X is clean.\nFor all X, Y, if person X is friendly and person Y is calm and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, Y, if person X is busy and object Y is soft, then person X likes object Y.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is soft, then object X is clean.\n\nAnd the following facts:\ncar is hard.\nalice is an enemy of carol.\ngeorge is angry.\nfrank is a friend of dave.\neve is busy.\ndave is busy.\nfrank likes pencil.\nalice is strong.\nalice is friendly.\ncar is smooth.\neve is hungry.\ndave dislikes car.\ncarol is a sibling of dave.\ncar is small.\ngeorge is a friend of frank.\ncarol likes book.\ncarol owns ball.\neve is a parent of alice.\ndave is a sibling of bob.\nfrank is a friend of george.\n\nQUESTION:\nCould car is wet explain car is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 366,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(book).",
    "c": "hard(X) :- wet(X).\nclean(Z) :- clean(Z), owns(U,Z), funny(U).\nstrong(Z) :- brave(Z), new(C).\nbig(X) :- smooth(X), dislikes(B,X), angry(B).\nsad(X) :- calm(X).\nclean(X) :- heavy(X), soft(X).\nenemy(X,Y) :- friendly(X), calm(Y), sibling(X,Y).\nlikes(X,Y) :- busy(X), soft(Y).\ndirty(X) :- light(X).\nclean(X) :- soft(X).\nhard(car).\nenemy(alice,carol).\nangry(george).\nfriend(frank,dave).\nbusy(eve).\nbusy(dave).\nlikes(frank,pencil).\nstrong(alice).\nfriendly(alice).\nsmooth(car).\nhungry(eve).\ndislikes(dave,car).\nsibling(carol,dave).\nsmall(car).\nfriend(george,frank).\nlikes(carol,book).\nowns(carol,ball).\nparent(eve,alice).\nsibling(dave,bob).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is hard.\nFor all Z, if there exists U such that object Z is clean and person U owns object Z and person U is funny, then object Z is clean.\nFor all Z, if there exists C such that person Z is brave and object C is new, then person Z is strong.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is angry, then object X is big.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if object X is heavy and object X is soft, then object X is clean.\nFor all X, Y, if person X is friendly and person Y is calm and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, Y, if person X is busy and object Y is soft, then person X likes object Y.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is soft, then object X is clean.\n\nAnd the following facts:\ncar is hard.\nalice is an enemy of carol.\ngeorge is angry.\nfrank is a friend of dave.\neve is busy.\ndave is busy.\nfrank likes pencil.\nalice is strong.\nalice is friendly.\ncar is smooth.\neve is hungry.\ndave dislikes car.\ncarol is a sibling of dave.\ncar is small.\ngeorge is a friend of frank.\ncarol likes book.\ncarol owns ball.\neve is a parent of alice.\ndave is a sibling of bob.\nfrank is a friend of george.\n\nQUESTION:\nCould book is rough explain car is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 367,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(book).",
    "c": "light(X) :- heavy(X).\nsmall(X) :- light(X).\nrough(X) :- small(X).\nheavy(X) :- rough(X).\nrough(X) :- heavy(X).\nfunny(X) :- tired(X), dislikes(X,W), new(W).\nbored(X) :- funny(X).\nhard(X) :- wet(X), dislikes(A,X), angry(A).\ncalm(X) :- angry(X), strong(X).\nexcited(X) :- strong(X), busy(X).\nheavy(book).\nfriend(dave,alice).\nhappy(george).\nenemy(carol,eve).\nlikes(frank,ball).\ndislikes(george,apple).\nbig(phone).\nweak(carol).\nweak(eve).\nhot.\nparent(alice,carol).\nsibling(carol,alice).\nowns(bob,phone).\nsibling(george,alice).\nowns(eve,ball).\nred(phone).\ndirty(car).\nenemy(george,dave).\nparent(eve,carol).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if there exists W such that person X is tired and person X dislikes object W and object W is new, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if there exists A such that object X is wet and person A dislikes object X and person A is angry, then object X is hard.\nFor all X, if person X is angry and person X is strong, then person X is calm.\nFor all X, if person X is strong and person X is busy, then person X is excited.\n\nAnd the following facts:\nbook is heavy.\ndave is a friend of alice.\ngeorge is happy.\ncarol is an enemy of eve.\nfrank likes ball.\ngeorge dislikes apple.\nphone is big.\ncarol is weak.\neve is weak.\nit is hot.\nalice is a parent of carol.\ncarol is a sibling of alice.\nbob owns phone.\ngeorge is a sibling of alice.\neve owns ball.\nphone is red.\ncar is dirty.\ngeorge is an enemy of dave.\neve is a parent of carol.\ncar is smooth.\n\nQUESTION:\nIs book is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 368,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(ball).",
    "c": "light(X) :- heavy(X).\nsmall(X) :- light(X).\nrough(X) :- small(X).\nheavy(X) :- rough(X).\nrough(X) :- heavy(X).\nfunny(X) :- tired(X), dislikes(X,W), new(W).\nbored(X) :- funny(X).\nhard(X) :- wet(X), dislikes(A,X), angry(A).\ncalm(X) :- angry(X), strong(X).\nexcited(X) :- strong(X), busy(X).\nheavy(book).\nfriend(dave,alice).\nhappy(george).\nenemy(carol,eve).\nlikes(frank,ball).\ndislikes(george,apple).\nbig(phone).\nweak(carol).\nweak(eve).\nhot.\nparent(alice,carol).\nsibling(carol,alice).\nowns(bob,phone).\nsibling(george,alice).\nowns(eve,ball).\nred(phone).\ndirty(car).\nenemy(george,dave).\nparent(eve,carol).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if there exists W such that person X is tired and person X dislikes object W and object W is new, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if there exists A such that object X is wet and person A dislikes object X and person A is angry, then object X is hard.\nFor all X, if person X is angry and person X is strong, then person X is calm.\nFor all X, if person X is strong and person X is busy, then person X is excited.\n\nAnd the following facts:\nbook is heavy.\ndave is a friend of alice.\ngeorge is happy.\ncarol is an enemy of eve.\nfrank likes ball.\ngeorge dislikes apple.\nphone is big.\ncarol is weak.\neve is weak.\nit is hot.\nalice is a parent of carol.\ncarol is a sibling of alice.\nbob owns phone.\ngeorge is a sibling of alice.\neve owns ball.\nphone is red.\ncar is dirty.\ngeorge is an enemy of dave.\neve is a parent of carol.\ncar is smooth.\n\nQUESTION:\nIs ball is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 369,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(book).",
    "c": "light(X) :- heavy(X).\nsmall(X) :- light(X).\nrough(X) :- small(X).\nheavy(X) :- rough(X).\nrough(X) :- heavy(X).\nfunny(X) :- tired(X), dislikes(X,W), new(W).\nbored(X) :- funny(X).\nhard(X) :- wet(X), dislikes(A,X), angry(A).\ncalm(X) :- angry(X), strong(X).\nexcited(X) :- strong(X), busy(X).\nrough(book).\nfriend(dave,alice).\nhappy(george).\nenemy(carol,eve).\nlikes(frank,ball).\ndislikes(george,apple).\nbig(phone).\nweak(carol).\nweak(eve).\nhot.\nparent(alice,carol).\nsibling(carol,alice).\nowns(bob,phone).\nsibling(george,alice).\nowns(eve,ball).\nred(phone).\ndirty(car).\nenemy(george,dave).\nparent(eve,carol).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if there exists W such that person X is tired and person X dislikes object W and object W is new, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if there exists A such that object X is wet and person A dislikes object X and person A is angry, then object X is hard.\nFor all X, if person X is angry and person X is strong, then person X is calm.\nFor all X, if person X is strong and person X is busy, then person X is excited.\n\nAnd the following facts:\nbook is rough.\ndave is a friend of alice.\ngeorge is happy.\ncarol is an enemy of eve.\nfrank likes ball.\ngeorge dislikes apple.\nphone is big.\ncarol is weak.\neve is weak.\nit is hot.\nalice is a parent of carol.\ncarol is a sibling of alice.\nbob owns phone.\ngeorge is a sibling of alice.\neve owns ball.\nphone is red.\ncar is dirty.\ngeorge is an enemy of dave.\neve is a parent of carol.\ncar is smooth.\n\nQUESTION:\nCould book is heavy explain book is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 370,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(george).",
    "c": "light(X) :- heavy(X).\nsmall(X) :- light(X).\nrough(X) :- small(X).\nheavy(X) :- rough(X).\nrough(X) :- heavy(X).\nfunny(X) :- tired(X), dislikes(X,W), new(W).\nbored(X) :- funny(X).\nhard(X) :- wet(X), dislikes(A,X), angry(A).\ncalm(X) :- angry(X), strong(X).\nexcited(X) :- strong(X), busy(X).\nrough(book).\nfriend(dave,alice).\nhappy(george).\nenemy(carol,eve).\nlikes(frank,ball).\ndislikes(george,apple).\nbig(phone).\nweak(carol).\nweak(eve).\nhot.\nparent(alice,carol).\nsibling(carol,alice).\nowns(bob,phone).\nsibling(george,alice).\nowns(eve,ball).\nred(phone).\ndirty(car).\nenemy(george,dave).\nparent(eve,carol).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if there exists W such that person X is tired and person X dislikes object W and object W is new, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if there exists A such that object X is wet and person A dislikes object X and person A is angry, then object X is hard.\nFor all X, if person X is angry and person X is strong, then person X is calm.\nFor all X, if person X is strong and person X is busy, then person X is excited.\n\nAnd the following facts:\nbook is rough.\ndave is a friend of alice.\ngeorge is happy.\ncarol is an enemy of eve.\nfrank likes ball.\ngeorge dislikes apple.\nphone is big.\ncarol is weak.\neve is weak.\nit is hot.\nalice is a parent of carol.\ncarol is a sibling of alice.\nbob owns phone.\ngeorge is a sibling of alice.\neve owns ball.\nphone is red.\ncar is dirty.\ngeorge is an enemy of dave.\neve is a parent of carol.\ncar is smooth.\n\nQUESTION:\nCould george is weak explain book is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 371,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "old(ball).",
    "c": "big(X) :- hard(X).\nsmall(X) :- big(X).\nbig(X) :- small(X).\nnew(X) :- big(X).\nold(X) :- new(X).\nlikes(Z,Y) :- clean(Y), sad(Z).\nheavy(X) :- heavy(X), likes(A,X), brave(A).\nlikes(Y,Z) :- friendly(Y), red(Z), owns(Y,B).\nfriend(X,Y) :- funny(X), bored(Y).\nsmooth(X) :- clean(X).\nhard(ball).\nenemy(george,dave).\nfriend(eve,bob).\nlikes(george,phone).\ndirty(apple).\nsibling(carol,frank).\nbusy(alice).\nwet(ball).\nsibling(dave,carol).\ndislikes(frank,pencil).\nlikes(frank,car).\ndislikes(dave,book).\ndislikes(dave,phone).\nparent(carol,dave).\nfriend(dave,eve).\nsibling(george,eve).\nsibling(frank,eve).\nparent(bob,carol).\nrough(car).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all Y, Z, if object Y is clean and person Z is sad, then person Z likes object Y.\nFor all X, if there exists A such that object X is heavy and person A likes object X and person A is brave, then object X is heavy.\nFor all Y, Z, if there exists B such that person Y is friendly and object Z is red and person Y owns object B, then person Y likes object Z.\nFor all X, Y, if person X is funny and person Y is bored, then person X is a friend of person Y.\nFor all X, if object X is clean, then object X is smooth.\n\nAnd the following facts:\nball is hard.\ngeorge is an enemy of dave.\neve is a friend of bob.\ngeorge likes phone.\napple is dirty.\ncarol is a sibling of frank.\nalice is busy.\nball is wet.\ndave is a sibling of carol.\nfrank dislikes pencil.\nfrank likes car.\ndave dislikes book.\ndave dislikes phone.\ncarol is a parent of dave.\ndave is a friend of eve.\ngeorge is a sibling of eve.\nfrank is a sibling of eve.\nbob is a parent of carol.\ncar is rough.\ncarol is a parent of bob.\n\nQUESTION:\nIs ball is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 372,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(car).",
    "c": "big(X) :- hard(X).\nsmall(X) :- big(X).\nbig(X) :- small(X).\nnew(X) :- big(X).\nold(X) :- new(X).\nlikes(Z,Y) :- clean(Y), sad(Z).\nheavy(X) :- heavy(X), likes(A,X), brave(A).\nlikes(Y,Z) :- friendly(Y), red(Z), owns(Y,B).\nfriend(X,Y) :- funny(X), bored(Y).\nsmooth(X) :- clean(X).\nhard(ball).\nenemy(george,dave).\nfriend(eve,bob).\nlikes(george,phone).\ndirty(apple).\nsibling(carol,frank).\nbusy(alice).\nwet(ball).\nsibling(dave,carol).\ndislikes(frank,pencil).\nlikes(frank,car).\ndislikes(dave,book).\ndislikes(dave,phone).\nparent(carol,dave).\nfriend(dave,eve).\nsibling(george,eve).\nsibling(frank,eve).\nparent(bob,carol).\nrough(car).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all Y, Z, if object Y is clean and person Z is sad, then person Z likes object Y.\nFor all X, if there exists A such that object X is heavy and person A likes object X and person A is brave, then object X is heavy.\nFor all Y, Z, if there exists B such that person Y is friendly and object Z is red and person Y owns object B, then person Y likes object Z.\nFor all X, Y, if person X is funny and person Y is bored, then person X is a friend of person Y.\nFor all X, if object X is clean, then object X is smooth.\n\nAnd the following facts:\nball is hard.\ngeorge is an enemy of dave.\neve is a friend of bob.\ngeorge likes phone.\napple is dirty.\ncarol is a sibling of frank.\nalice is busy.\nball is wet.\ndave is a sibling of carol.\nfrank dislikes pencil.\nfrank likes car.\ndave dislikes book.\ndave dislikes phone.\ncarol is a parent of dave.\ndave is a friend of eve.\ngeorge is a sibling of eve.\nfrank is a sibling of eve.\nbob is a parent of carol.\ncar is rough.\ncarol is a parent of bob.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 373,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(ball).",
    "c": "big(X) :- hard(X).\nsmall(X) :- big(X).\nbig(X) :- small(X).\nnew(X) :- big(X).\nold(X) :- new(X).\nlikes(Z,Y) :- clean(Y), sad(Z).\nheavy(X) :- heavy(X), likes(A,X), brave(A).\nlikes(Y,Z) :- friendly(Y), red(Z), owns(Y,B).\nfriend(X,Y) :- funny(X), bored(Y).\nsmooth(X) :- clean(X).\nold(ball).\nenemy(george,dave).\nfriend(eve,bob).\nlikes(george,phone).\ndirty(apple).\nsibling(carol,frank).\nbusy(alice).\nwet(ball).\nsibling(dave,carol).\ndislikes(frank,pencil).\nlikes(frank,car).\ndislikes(dave,book).\ndislikes(dave,phone).\nparent(carol,dave).\nfriend(dave,eve).\nsibling(george,eve).\nsibling(frank,eve).\nparent(bob,carol).\nrough(car).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all Y, Z, if object Y is clean and person Z is sad, then person Z likes object Y.\nFor all X, if there exists A such that object X is heavy and person A likes object X and person A is brave, then object X is heavy.\nFor all Y, Z, if there exists B such that person Y is friendly and object Z is red and person Y owns object B, then person Y likes object Z.\nFor all X, Y, if person X is funny and person Y is bored, then person X is a friend of person Y.\nFor all X, if object X is clean, then object X is smooth.\n\nAnd the following facts:\nball is old.\ngeorge is an enemy of dave.\neve is a friend of bob.\ngeorge likes phone.\napple is dirty.\ncarol is a sibling of frank.\nalice is busy.\nball is wet.\ndave is a sibling of carol.\nfrank dislikes pencil.\nfrank likes car.\ndave dislikes book.\ndave dislikes phone.\ncarol is a parent of dave.\ndave is a friend of eve.\ngeorge is a sibling of eve.\nfrank is a sibling of eve.\nbob is a parent of carol.\ncar is rough.\ncarol is a parent of bob.\n\nQUESTION:\nCould ball is hard explain ball is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 374,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(dave).",
    "c": "big(X) :- hard(X).\nsmall(X) :- big(X).\nbig(X) :- small(X).\nnew(X) :- big(X).\nold(X) :- new(X).\nlikes(Z,Y) :- clean(Y), sad(Z).\nheavy(X) :- heavy(X), likes(A,X), brave(A).\nlikes(Y,Z) :- friendly(Y), red(Z), owns(Y,B).\nfriend(X,Y) :- funny(X), bored(Y).\nsmooth(X) :- clean(X).\nold(ball).\nenemy(george,dave).\nfriend(eve,bob).\nlikes(george,phone).\ndirty(apple).\nsibling(carol,frank).\nbusy(alice).\nwet(ball).\nsibling(dave,carol).\ndislikes(frank,pencil).\nlikes(frank,car).\ndislikes(dave,book).\ndislikes(dave,phone).\nparent(carol,dave).\nfriend(dave,eve).\nsibling(george,eve).\nsibling(frank,eve).\nparent(bob,carol).\nrough(car).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all Y, Z, if object Y is clean and person Z is sad, then person Z likes object Y.\nFor all X, if there exists A such that object X is heavy and person A likes object X and person A is brave, then object X is heavy.\nFor all Y, Z, if there exists B such that person Y is friendly and object Z is red and person Y owns object B, then person Y likes object Z.\nFor all X, Y, if person X is funny and person Y is bored, then person X is a friend of person Y.\nFor all X, if object X is clean, then object X is smooth.\n\nAnd the following facts:\nball is old.\ngeorge is an enemy of dave.\neve is a friend of bob.\ngeorge likes phone.\napple is dirty.\ncarol is a sibling of frank.\nalice is busy.\nball is wet.\ndave is a sibling of carol.\nfrank dislikes pencil.\nfrank likes car.\ndave dislikes book.\ndave dislikes phone.\ncarol is a parent of dave.\ndave is a friend of eve.\ngeorge is a sibling of eve.\nfrank is a sibling of eve.\nbob is a parent of carol.\ncar is rough.\ncarol is a parent of bob.\n\nQUESTION:\nCould dave is calm explain ball is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 375,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(george).",
    "c": "weak(X) :- strong(X).\nfunny(X) :- weak(X).\nhungry(X) :- funny(X).\ncalm(X) :- hungry(X).\nsad(X) :- calm(X).\nlight(X) :- clean(X), owns(B,X), tall(B).\nclean(X) :- dirty(X).\ndirty(Y) :- red(Y).\nsmall(Y) :- dirty(Y), busy(D).\nheavy(X) :- hard(X).\nstrong(george).\nenemy(frank,eve).\nfriendly(frank).\nfriend(bob,frank).\ndislikes(eve,car).\ncurious(dave).\ndislikes(carol,book).\nowns(dave,ball).\nenemy(dave,alice).\ntall(frank).\nparent(dave,george).\nparent(frank,george).\nowns(frank,pencil).\nfriend(alice,george).\nrough(apple).\ntall(alice).\nfriend(carol,alice).\nbrave(bob).\nowns(bob,pencil).\nsmooth(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if there exists B such that object X is clean and person B owns object X and person B is tall, then object X is light.\nFor all X, if object X is dirty, then object X is clean.\nFor all Y, if object Y is red, then object Y is dirty.\nFor all Y, if there exists D such that object Y is dirty and person D is busy, then object Y is small.\nFor all X, if object X is hard, then object X is heavy.\n\nAnd the following facts:\ngeorge is strong.\nfrank is an enemy of eve.\nfrank is friendly.\nbob is a friend of frank.\neve dislikes car.\ndave is curious.\ncarol dislikes book.\ndave owns ball.\ndave is an enemy of alice.\nfrank is tall.\ndave is a parent of george.\nfrank is a parent of george.\nfrank owns pencil.\nalice is a friend of george.\napple is rough.\nalice is tall.\ncarol is a friend of alice.\nbob is brave.\nbob owns pencil.\napple is smooth.\n\nQUESTION:\nIs george is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 376,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(dave).",
    "c": "weak(X) :- strong(X).\nfunny(X) :- weak(X).\nhungry(X) :- funny(X).\ncalm(X) :- hungry(X).\nsad(X) :- calm(X).\nlight(X) :- clean(X), owns(B,X), tall(B).\nclean(X) :- dirty(X).\ndirty(Y) :- red(Y).\nsmall(Y) :- dirty(Y), busy(D).\nheavy(X) :- hard(X).\nstrong(george).\nenemy(frank,eve).\nfriendly(frank).\nfriend(bob,frank).\ndislikes(eve,car).\ncurious(dave).\ndislikes(carol,book).\nowns(dave,ball).\nenemy(dave,alice).\ntall(frank).\nparent(dave,george).\nparent(frank,george).\nowns(frank,pencil).\nfriend(alice,george).\nrough(apple).\ntall(alice).\nfriend(carol,alice).\nbrave(bob).\nowns(bob,pencil).\nsmooth(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if there exists B such that object X is clean and person B owns object X and person B is tall, then object X is light.\nFor all X, if object X is dirty, then object X is clean.\nFor all Y, if object Y is red, then object Y is dirty.\nFor all Y, if there exists D such that object Y is dirty and person D is busy, then object Y is small.\nFor all X, if object X is hard, then object X is heavy.\n\nAnd the following facts:\ngeorge is strong.\nfrank is an enemy of eve.\nfrank is friendly.\nbob is a friend of frank.\neve dislikes car.\ndave is curious.\ncarol dislikes book.\ndave owns ball.\ndave is an enemy of alice.\nfrank is tall.\ndave is a parent of george.\nfrank is a parent of george.\nfrank owns pencil.\nalice is a friend of george.\napple is rough.\nalice is tall.\ncarol is a friend of alice.\nbob is brave.\nbob owns pencil.\napple is smooth.\n\nQUESTION:\nIs dave is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 377,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(george).",
    "c": "weak(X) :- strong(X).\nfunny(X) :- weak(X).\nhungry(X) :- funny(X).\ncalm(X) :- hungry(X).\nsad(X) :- calm(X).\nlight(X) :- clean(X), owns(B,X), tall(B).\nclean(X) :- dirty(X).\ndirty(Y) :- red(Y).\nsmall(Y) :- dirty(Y), busy(D).\nheavy(X) :- hard(X).\nsad(george).\nenemy(frank,eve).\nfriendly(frank).\nfriend(bob,frank).\ndislikes(eve,car).\ncurious(dave).\ndislikes(carol,book).\nowns(dave,ball).\nenemy(dave,alice).\ntall(frank).\nparent(dave,george).\nparent(frank,george).\nowns(frank,pencil).\nfriend(alice,george).\nrough(apple).\ntall(alice).\nfriend(carol,alice).\nbrave(bob).\nowns(bob,pencil).\nsmooth(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if there exists B such that object X is clean and person B owns object X and person B is tall, then object X is light.\nFor all X, if object X is dirty, then object X is clean.\nFor all Y, if object Y is red, then object Y is dirty.\nFor all Y, if there exists D such that object Y is dirty and person D is busy, then object Y is small.\nFor all X, if object X is hard, then object X is heavy.\n\nAnd the following facts:\ngeorge is sad.\nfrank is an enemy of eve.\nfrank is friendly.\nbob is a friend of frank.\neve dislikes car.\ndave is curious.\ncarol dislikes book.\ndave owns ball.\ndave is an enemy of alice.\nfrank is tall.\ndave is a parent of george.\nfrank is a parent of george.\nfrank owns pencil.\nalice is a friend of george.\napple is rough.\nalice is tall.\ncarol is a friend of alice.\nbob is brave.\nbob owns pencil.\napple is smooth.\n\nQUESTION:\nCould george is strong explain george is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 378,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(george).",
    "c": "weak(X) :- strong(X).\nfunny(X) :- weak(X).\nhungry(X) :- funny(X).\ncalm(X) :- hungry(X).\nsad(X) :- calm(X).\nlight(X) :- clean(X), owns(B,X), tall(B).\nclean(X) :- dirty(X).\ndirty(Y) :- red(Y).\nsmall(Y) :- dirty(Y), busy(D).\nheavy(X) :- hard(X).\nsad(george).\nenemy(frank,eve).\nfriendly(frank).\nfriend(bob,frank).\ndislikes(eve,car).\ncurious(dave).\ndislikes(carol,book).\nowns(dave,ball).\nenemy(dave,alice).\ntall(frank).\nparent(dave,george).\nparent(frank,george).\nowns(frank,pencil).\nfriend(alice,george).\nrough(apple).\ntall(alice).\nfriend(carol,alice).\nbrave(bob).\nowns(bob,pencil).\nsmooth(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if there exists B such that object X is clean and person B owns object X and person B is tall, then object X is light.\nFor all X, if object X is dirty, then object X is clean.\nFor all Y, if object Y is red, then object Y is dirty.\nFor all Y, if there exists D such that object Y is dirty and person D is busy, then object Y is small.\nFor all X, if object X is hard, then object X is heavy.\n\nAnd the following facts:\ngeorge is sad.\nfrank is an enemy of eve.\nfrank is friendly.\nbob is a friend of frank.\neve dislikes car.\ndave is curious.\ncarol dislikes book.\ndave owns ball.\ndave is an enemy of alice.\nfrank is tall.\ndave is a parent of george.\nfrank is a parent of george.\nfrank owns pencil.\nalice is a friend of george.\napple is rough.\nalice is tall.\ncarol is a friend of alice.\nbob is brave.\nbob owns pencil.\napple is smooth.\n\nQUESTION:\nCould george is curious explain george is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 379,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(frank).",
    "c": "funny(X) :- curious(X).\nbusy(X) :- funny(X).\nsad(X) :- busy(X).\nhungry(X) :- sad(X).\nstrong(X) :- hungry(X).\nparent(Y,X) :- tired(Y), tired(X), friend(X,B).\nred(Z) :- old(Z), owns(V,Z), tired(V).\nsmall(X) :- smooth(X).\ndirty(X) :- rough(X).\nsmall(X) :- hard(X).\ncurious(frank).\nlikes(dave,ball).\nbrave(carol).\ndirty(phone).\nfriend(eve,bob).\nbig(ball).\nfriend(eve,frank).\nparent(george,frank).\nparent(bob,carol).\nowns(eve,phone).\nparent(george,alice).\nparent(carol,dave).\nenemy(carol,eve).\nbored(frank).\ncalm(alice).\nparent(alice,eve).\nparent(carol,alice).\nsibling(bob,eve).\ndislikes(dave,pencil).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, Y, if there exists B such that person Y is tired and person X is tired and person X is a friend of person B, then person Y is a parent of person X.\nFor all Z, if there exists V such that object Z is old and person V owns object Z and person V is tired, then object Z is red.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is hard, then object X is small.\n\nAnd the following facts:\nfrank is curious.\ndave likes ball.\ncarol is brave.\nphone is dirty.\neve is a friend of bob.\nball is big.\neve is a friend of frank.\ngeorge is a parent of frank.\nbob is a parent of carol.\neve owns phone.\ngeorge is a parent of alice.\ncarol is a parent of dave.\ncarol is an enemy of eve.\nfrank is bored.\nalice is calm.\nalice is a parent of eve.\ncarol is a parent of alice.\nbob is a sibling of eve.\ndave dislikes pencil.\ndave is a sibling of alice.\n\nQUESTION:\nIs frank is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 380,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(carol).",
    "c": "funny(X) :- curious(X).\nbusy(X) :- funny(X).\nsad(X) :- busy(X).\nhungry(X) :- sad(X).\nstrong(X) :- hungry(X).\nparent(Y,X) :- tired(Y), tired(X), friend(X,B).\nred(Z) :- old(Z), owns(V,Z), tired(V).\nsmall(X) :- smooth(X).\ndirty(X) :- rough(X).\nsmall(X) :- hard(X).\ncurious(frank).\nlikes(dave,ball).\nbrave(carol).\ndirty(phone).\nfriend(eve,bob).\nbig(ball).\nfriend(eve,frank).\nparent(george,frank).\nparent(bob,carol).\nowns(eve,phone).\nparent(george,alice).\nparent(carol,dave).\nenemy(carol,eve).\nbored(frank).\ncalm(alice).\nparent(alice,eve).\nparent(carol,alice).\nsibling(bob,eve).\ndislikes(dave,pencil).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, Y, if there exists B such that person Y is tired and person X is tired and person X is a friend of person B, then person Y is a parent of person X.\nFor all Z, if there exists V such that object Z is old and person V owns object Z and person V is tired, then object Z is red.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is hard, then object X is small.\n\nAnd the following facts:\nfrank is curious.\ndave likes ball.\ncarol is brave.\nphone is dirty.\neve is a friend of bob.\nball is big.\neve is a friend of frank.\ngeorge is a parent of frank.\nbob is a parent of carol.\neve owns phone.\ngeorge is a parent of alice.\ncarol is a parent of dave.\ncarol is an enemy of eve.\nfrank is bored.\nalice is calm.\nalice is a parent of eve.\ncarol is a parent of alice.\nbob is a sibling of eve.\ndave dislikes pencil.\ndave is a sibling of alice.\n\nQUESTION:\nIs carol is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 381,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(frank).",
    "c": "funny(X) :- curious(X).\nbusy(X) :- funny(X).\nsad(X) :- busy(X).\nhungry(X) :- sad(X).\nstrong(X) :- hungry(X).\nparent(Y,X) :- tired(Y), tired(X), friend(X,B).\nred(Z) :- old(Z), owns(V,Z), tired(V).\nsmall(X) :- smooth(X).\ndirty(X) :- rough(X).\nsmall(X) :- hard(X).\nstrong(frank).\nlikes(dave,ball).\nbrave(carol).\ndirty(phone).\nfriend(eve,bob).\nbig(ball).\nfriend(eve,frank).\nparent(george,frank).\nparent(bob,carol).\nowns(eve,phone).\nparent(george,alice).\nparent(carol,dave).\nenemy(carol,eve).\nbored(frank).\ncalm(alice).\nparent(alice,eve).\nparent(carol,alice).\nsibling(bob,eve).\ndislikes(dave,pencil).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, Y, if there exists B such that person Y is tired and person X is tired and person X is a friend of person B, then person Y is a parent of person X.\nFor all Z, if there exists V such that object Z is old and person V owns object Z and person V is tired, then object Z is red.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is hard, then object X is small.\n\nAnd the following facts:\nfrank is strong.\ndave likes ball.\ncarol is brave.\nphone is dirty.\neve is a friend of bob.\nball is big.\neve is a friend of frank.\ngeorge is a parent of frank.\nbob is a parent of carol.\neve owns phone.\ngeorge is a parent of alice.\ncarol is a parent of dave.\ncarol is an enemy of eve.\nfrank is bored.\nalice is calm.\nalice is a parent of eve.\ncarol is a parent of alice.\nbob is a sibling of eve.\ndave dislikes pencil.\ndave is a sibling of alice.\n\nQUESTION:\nCould frank is curious explain frank is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 382,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "funny(X) :- curious(X).\nbusy(X) :- funny(X).\nsad(X) :- busy(X).\nhungry(X) :- sad(X).\nstrong(X) :- hungry(X).\nparent(Y,X) :- tired(Y), tired(X), friend(X,B).\nred(Z) :- old(Z), owns(V,Z), tired(V).\nsmall(X) :- smooth(X).\ndirty(X) :- rough(X).\nsmall(X) :- hard(X).\nstrong(frank).\nlikes(dave,ball).\nbrave(carol).\ndirty(phone).\nfriend(eve,bob).\nbig(ball).\nfriend(eve,frank).\nparent(george,frank).\nparent(bob,carol).\nowns(eve,phone).\nparent(george,alice).\nparent(carol,dave).\nenemy(carol,eve).\nbored(frank).\ncalm(alice).\nparent(alice,eve).\nparent(carol,alice).\nsibling(bob,eve).\ndislikes(dave,pencil).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, Y, if there exists B such that person Y is tired and person X is tired and person X is a friend of person B, then person Y is a parent of person X.\nFor all Z, if there exists V such that object Z is old and person V owns object Z and person V is tired, then object Z is red.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is hard, then object X is small.\n\nAnd the following facts:\nfrank is strong.\ndave likes ball.\ncarol is brave.\nphone is dirty.\neve is a friend of bob.\nball is big.\neve is a friend of frank.\ngeorge is a parent of frank.\nbob is a parent of carol.\neve owns phone.\ngeorge is a parent of alice.\ncarol is a parent of dave.\ncarol is an enemy of eve.\nfrank is bored.\nalice is calm.\nalice is a parent of eve.\ncarol is a parent of alice.\nbob is a sibling of eve.\ndave dislikes pencil.\ndave is a sibling of alice.\n\nQUESTION:\nCould eve is friendly explain frank is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 383,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(ball).",
    "c": "small(X) :- clean(X).\nold(X) :- small(X).\nsmooth(X) :- old(X).\nwet(X) :- smooth(X).\nbig(X) :- wet(X).\nrough(X) :- big(X).\nbig(X) :- rough(X).\ndirty(X) :- big(X).\nheavy(X) :- dirty(X).\nrough(X) :- heavy(X).\nclean(ball).\nfriend(bob,eve).\ntired(alice).\nparent(bob,carol).\nowns(frank,pencil).\nlikes(dave,car).\nsibling(george,alice).\nsoft(pencil).\nparent(frank,carol).\nfriend(eve,carol).\nfriend(frank,carol).\nbrave(carol).\nenemy(bob,carol).\nowns(dave,ball).\ndislikes(dave,pencil).\nhard(pencil).\nparent(eve,bob).\ndislikes(george,pencil).\nnew(phone).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\n\nAnd the following facts:\nball is clean.\nbob is a friend of eve.\nalice is tired.\nbob is a parent of carol.\nfrank owns pencil.\ndave likes car.\ngeorge is a sibling of alice.\npencil is soft.\nfrank is a parent of carol.\neve is a friend of carol.\nfrank is a friend of carol.\ncarol is brave.\nbob is an enemy of carol.\ndave owns ball.\ndave dislikes pencil.\npencil is hard.\neve is a parent of bob.\ngeorge dislikes pencil.\nphone is new.\ncarol is an enemy of george.\n\nQUESTION:\nIs ball is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 384,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(book).",
    "c": "small(X) :- clean(X).\nold(X) :- small(X).\nsmooth(X) :- old(X).\nwet(X) :- smooth(X).\nbig(X) :- wet(X).\nrough(X) :- big(X).\nbig(X) :- rough(X).\ndirty(X) :- big(X).\nheavy(X) :- dirty(X).\nrough(X) :- heavy(X).\nclean(ball).\nfriend(bob,eve).\ntired(alice).\nparent(bob,carol).\nowns(frank,pencil).\nlikes(dave,car).\nsibling(george,alice).\nsoft(pencil).\nparent(frank,carol).\nfriend(eve,carol).\nfriend(frank,carol).\nbrave(carol).\nenemy(bob,carol).\nowns(dave,ball).\ndislikes(dave,pencil).\nhard(pencil).\nparent(eve,bob).\ndislikes(george,pencil).\nnew(phone).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\n\nAnd the following facts:\nball is clean.\nbob is a friend of eve.\nalice is tired.\nbob is a parent of carol.\nfrank owns pencil.\ndave likes car.\ngeorge is a sibling of alice.\npencil is soft.\nfrank is a parent of carol.\neve is a friend of carol.\nfrank is a friend of carol.\ncarol is brave.\nbob is an enemy of carol.\ndave owns ball.\ndave dislikes pencil.\npencil is hard.\neve is a parent of bob.\ngeorge dislikes pencil.\nphone is new.\ncarol is an enemy of george.\n\nQUESTION:\nIs book is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 385,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "small(X) :- clean(X).\nold(X) :- small(X).\nsmooth(X) :- old(X).\nwet(X) :- smooth(X).\nbig(X) :- wet(X).\nrough(X) :- big(X).\nbig(X) :- rough(X).\ndirty(X) :- big(X).\nheavy(X) :- dirty(X).\nrough(X) :- heavy(X).\nrough(ball).\nfriend(bob,eve).\ntired(alice).\nparent(bob,carol).\nowns(frank,pencil).\nlikes(dave,car).\nsibling(george,alice).\nsoft(pencil).\nparent(frank,carol).\nfriend(eve,carol).\nfriend(frank,carol).\nbrave(carol).\nenemy(bob,carol).\nowns(dave,ball).\ndislikes(dave,pencil).\nhard(pencil).\nparent(eve,bob).\ndislikes(george,pencil).\nnew(phone).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\n\nAnd the following facts:\nball is rough.\nbob is a friend of eve.\nalice is tired.\nbob is a parent of carol.\nfrank owns pencil.\ndave likes car.\ngeorge is a sibling of alice.\npencil is soft.\nfrank is a parent of carol.\neve is a friend of carol.\nfrank is a friend of carol.\ncarol is brave.\nbob is an enemy of carol.\ndave owns ball.\ndave dislikes pencil.\npencil is hard.\neve is a parent of bob.\ngeorge dislikes pencil.\nphone is new.\ncarol is an enemy of george.\n\nQUESTION:\nCould ball is clean explain ball is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 386,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(book).",
    "c": "small(X) :- clean(X).\nold(X) :- small(X).\nsmooth(X) :- old(X).\nwet(X) :- smooth(X).\nbig(X) :- wet(X).\nrough(X) :- big(X).\nbig(X) :- rough(X).\ndirty(X) :- big(X).\nheavy(X) :- dirty(X).\nrough(X) :- heavy(X).\nrough(ball).\nfriend(bob,eve).\ntired(alice).\nparent(bob,carol).\nowns(frank,pencil).\nlikes(dave,car).\nsibling(george,alice).\nsoft(pencil).\nparent(frank,carol).\nfriend(eve,carol).\nfriend(frank,carol).\nbrave(carol).\nenemy(bob,carol).\nowns(dave,ball).\ndislikes(dave,pencil).\nhard(pencil).\nparent(eve,bob).\ndislikes(george,pencil).\nnew(phone).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\n\nAnd the following facts:\nball is rough.\nbob is a friend of eve.\nalice is tired.\nbob is a parent of carol.\nfrank owns pencil.\ndave likes car.\ngeorge is a sibling of alice.\npencil is soft.\nfrank is a parent of carol.\neve is a friend of carol.\nfrank is a friend of carol.\ncarol is brave.\nbob is an enemy of carol.\ndave owns ball.\ndave dislikes pencil.\npencil is hard.\neve is a parent of bob.\ngeorge dislikes pencil.\nphone is new.\ncarol is an enemy of george.\n\nQUESTION:\nCould book is big explain ball is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 387,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "curious(george).",
    "c": "calm(X) :- brave(X).\nbusy(X) :- calm(X).\nbrave(X) :- busy(X).\nsad(X) :- brave(X).\nclever(X) :- sad(X).\nhungry(X) :- clever(X).\nexcited(X) :- hungry(X).\ncalm(X) :- excited(X).\nbored(X) :- calm(X).\ncurious(X) :- bored(X).\nbrave(george).\nsibling(carol,eve).\nfriend(bob,eve).\nclean(book).\ntired(carol).\nlikes(alice,pencil).\nheavy(car).\nfunny(alice).\nfriend(eve,carol).\nenemy(carol,eve).\nweak(carol).\nparent(carol,eve).\nfunny(eve).\nlikes(george,apple).\nowns(eve,book).\nlikes(dave,phone).\nenemy(carol,frank).\ndislikes(eve,apple).\nlikes(george,car).\nsibling(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is calm.\nFor all X, if person X is calm, then person X is busy.\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\n\nAnd the following facts:\ngeorge is brave.\ncarol is a sibling of eve.\nbob is a friend of eve.\nbook is clean.\ncarol is tired.\nalice likes pencil.\ncar is heavy.\nalice is funny.\neve is a friend of carol.\ncarol is an enemy of eve.\ncarol is weak.\ncarol is a parent of eve.\neve is funny.\ngeorge likes apple.\neve owns book.\ndave likes phone.\ncarol is an enemy of frank.\neve dislikes apple.\ngeorge likes car.\nalice is a sibling of frank.\n\nQUESTION:\nIs george is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 388,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "big(book).",
    "c": "calm(X) :- brave(X).\nbusy(X) :- calm(X).\nbrave(X) :- busy(X).\nsad(X) :- brave(X).\nclever(X) :- sad(X).\nhungry(X) :- clever(X).\nexcited(X) :- hungry(X).\ncalm(X) :- excited(X).\nbored(X) :- calm(X).\ncurious(X) :- bored(X).\nbrave(george).\nsibling(carol,eve).\nfriend(bob,eve).\nclean(book).\ntired(carol).\nlikes(alice,pencil).\nheavy(car).\nfunny(alice).\nfriend(eve,carol).\nenemy(carol,eve).\nweak(carol).\nparent(carol,eve).\nfunny(eve).\nlikes(george,apple).\nowns(eve,book).\nlikes(dave,phone).\nenemy(carol,frank).\ndislikes(eve,apple).\nlikes(george,car).\nsibling(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is calm.\nFor all X, if person X is calm, then person X is busy.\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\n\nAnd the following facts:\ngeorge is brave.\ncarol is a sibling of eve.\nbob is a friend of eve.\nbook is clean.\ncarol is tired.\nalice likes pencil.\ncar is heavy.\nalice is funny.\neve is a friend of carol.\ncarol is an enemy of eve.\ncarol is weak.\ncarol is a parent of eve.\neve is funny.\ngeorge likes apple.\neve owns book.\ndave likes phone.\ncarol is an enemy of frank.\neve dislikes apple.\ngeorge likes car.\nalice is a sibling of frank.\n\nQUESTION:\nIs book is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 389,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(george).",
    "c": "calm(X) :- brave(X).\nbusy(X) :- calm(X).\nbrave(X) :- busy(X).\nsad(X) :- brave(X).\nclever(X) :- sad(X).\nhungry(X) :- clever(X).\nexcited(X) :- hungry(X).\ncalm(X) :- excited(X).\nbored(X) :- calm(X).\ncurious(X) :- bored(X).\ncurious(george).\nsibling(carol,eve).\nfriend(bob,eve).\nclean(book).\ntired(carol).\nlikes(alice,pencil).\nheavy(car).\nfunny(alice).\nfriend(eve,carol).\nenemy(carol,eve).\nweak(carol).\nparent(carol,eve).\nfunny(eve).\nlikes(george,apple).\nowns(eve,book).\nlikes(dave,phone).\nenemy(carol,frank).\ndislikes(eve,apple).\nlikes(george,car).\nsibling(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is calm.\nFor all X, if person X is calm, then person X is busy.\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\n\nAnd the following facts:\ngeorge is curious.\ncarol is a sibling of eve.\nbob is a friend of eve.\nbook is clean.\ncarol is tired.\nalice likes pencil.\ncar is heavy.\nalice is funny.\neve is a friend of carol.\ncarol is an enemy of eve.\ncarol is weak.\ncarol is a parent of eve.\neve is funny.\ngeorge likes apple.\neve owns book.\ndave likes phone.\ncarol is an enemy of frank.\neve dislikes apple.\ngeorge likes car.\nalice is a sibling of frank.\n\nQUESTION:\nCould george is brave explain george is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 390,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(frank).",
    "c": "calm(X) :- brave(X).\nbusy(X) :- calm(X).\nbrave(X) :- busy(X).\nsad(X) :- brave(X).\nclever(X) :- sad(X).\nhungry(X) :- clever(X).\nexcited(X) :- hungry(X).\ncalm(X) :- excited(X).\nbored(X) :- calm(X).\ncurious(X) :- bored(X).\ncurious(george).\nsibling(carol,eve).\nfriend(bob,eve).\nclean(book).\ntired(carol).\nlikes(alice,pencil).\nheavy(car).\nfunny(alice).\nfriend(eve,carol).\nenemy(carol,eve).\nweak(carol).\nparent(carol,eve).\nfunny(eve).\nlikes(george,apple).\nowns(eve,book).\nlikes(dave,phone).\nenemy(carol,frank).\ndislikes(eve,apple).\nlikes(george,car).\nsibling(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is calm.\nFor all X, if person X is calm, then person X is busy.\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\n\nAnd the following facts:\ngeorge is curious.\ncarol is a sibling of eve.\nbob is a friend of eve.\nbook is clean.\ncarol is tired.\nalice likes pencil.\ncar is heavy.\nalice is funny.\neve is a friend of carol.\ncarol is an enemy of eve.\ncarol is weak.\ncarol is a parent of eve.\neve is funny.\ngeorge likes apple.\neve owns book.\ndave likes phone.\ncarol is an enemy of frank.\neve dislikes apple.\ngeorge likes car.\nalice is a sibling of frank.\n\nQUESTION:\nCould frank is brave explain george is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 391,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(pencil).",
    "c": "old(X) :- dirty(X).\nred(X) :- old(X).\nsmall(X) :- red(X).\nclean(X) :- small(X).\nbig(X) :- clean(X).\nheavy(X) :- big(X).\nlight(X) :- heavy(X).\nsoft(X) :- light(X).\nsmooth(X) :- soft(X).\nwet(X) :- smooth(X).\ndirty(pencil).\nhungry(frank).\nangry(alice).\nfriend(dave,eve).\nfriend(eve,carol).\nhungry(dave).\nfriend(george,eve).\ntired(dave).\nowns(eve,phone).\nnew(apple).\nfriendly(frank).\nparent(dave,carol).\ndislikes(frank,book).\nlikes(carol,pencil).\nenemy(bob,alice).\nenemy(bob,carol).\nsad(dave).\nweak(alice).\nparent(dave,alice).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\n\nAnd the following facts:\npencil is dirty.\nfrank is hungry.\nalice is angry.\ndave is a friend of eve.\neve is a friend of carol.\ndave is hungry.\ngeorge is a friend of eve.\ndave is tired.\neve owns phone.\napple is new.\nfrank is friendly.\ndave is a parent of carol.\nfrank dislikes book.\ncarol likes pencil.\nbob is an enemy of alice.\nbob is an enemy of carol.\ndave is sad.\nalice is weak.\ndave is a parent of alice.\nalice is an enemy of dave.\n\nQUESTION:\nIs pencil is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 392,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(eve).",
    "c": "old(X) :- dirty(X).\nred(X) :- old(X).\nsmall(X) :- red(X).\nclean(X) :- small(X).\nbig(X) :- clean(X).\nheavy(X) :- big(X).\nlight(X) :- heavy(X).\nsoft(X) :- light(X).\nsmooth(X) :- soft(X).\nwet(X) :- smooth(X).\ndirty(pencil).\nhungry(frank).\nangry(alice).\nfriend(dave,eve).\nfriend(eve,carol).\nhungry(dave).\nfriend(george,eve).\ntired(dave).\nowns(eve,phone).\nnew(apple).\nfriendly(frank).\nparent(dave,carol).\ndislikes(frank,book).\nlikes(carol,pencil).\nenemy(bob,alice).\nenemy(bob,carol).\nsad(dave).\nweak(alice).\nparent(dave,alice).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\n\nAnd the following facts:\npencil is dirty.\nfrank is hungry.\nalice is angry.\ndave is a friend of eve.\neve is a friend of carol.\ndave is hungry.\ngeorge is a friend of eve.\ndave is tired.\neve owns phone.\napple is new.\nfrank is friendly.\ndave is a parent of carol.\nfrank dislikes book.\ncarol likes pencil.\nbob is an enemy of alice.\nbob is an enemy of carol.\ndave is sad.\nalice is weak.\ndave is a parent of alice.\nalice is an enemy of dave.\n\nQUESTION:\nIs eve is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 393,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(pencil).",
    "c": "old(X) :- dirty(X).\nred(X) :- old(X).\nsmall(X) :- red(X).\nclean(X) :- small(X).\nbig(X) :- clean(X).\nheavy(X) :- big(X).\nlight(X) :- heavy(X).\nsoft(X) :- light(X).\nsmooth(X) :- soft(X).\nwet(X) :- smooth(X).\nwet(pencil).\nhungry(frank).\nangry(alice).\nfriend(dave,eve).\nfriend(eve,carol).\nhungry(dave).\nfriend(george,eve).\ntired(dave).\nowns(eve,phone).\nnew(apple).\nfriendly(frank).\nparent(dave,carol).\ndislikes(frank,book).\nlikes(carol,pencil).\nenemy(bob,alice).\nenemy(bob,carol).\nsad(dave).\nweak(alice).\nparent(dave,alice).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\n\nAnd the following facts:\npencil is wet.\nfrank is hungry.\nalice is angry.\ndave is a friend of eve.\neve is a friend of carol.\ndave is hungry.\ngeorge is a friend of eve.\ndave is tired.\neve owns phone.\napple is new.\nfrank is friendly.\ndave is a parent of carol.\nfrank dislikes book.\ncarol likes pencil.\nbob is an enemy of alice.\nbob is an enemy of carol.\ndave is sad.\nalice is weak.\ndave is a parent of alice.\nalice is an enemy of dave.\n\nQUESTION:\nCould pencil is dirty explain pencil is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 394,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "old(X) :- dirty(X).\nred(X) :- old(X).\nsmall(X) :- red(X).\nclean(X) :- small(X).\nbig(X) :- clean(X).\nheavy(X) :- big(X).\nlight(X) :- heavy(X).\nsoft(X) :- light(X).\nsmooth(X) :- soft(X).\nwet(X) :- smooth(X).\nwet(pencil).\nhungry(frank).\nangry(alice).\nfriend(dave,eve).\nfriend(eve,carol).\nhungry(dave).\nfriend(george,eve).\ntired(dave).\nowns(eve,phone).\nnew(apple).\nfriendly(frank).\nparent(dave,carol).\ndislikes(frank,book).\nlikes(carol,pencil).\nenemy(bob,alice).\nenemy(bob,carol).\nsad(dave).\nweak(alice).\nparent(dave,alice).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\n\nAnd the following facts:\npencil is wet.\nfrank is hungry.\nalice is angry.\ndave is a friend of eve.\neve is a friend of carol.\ndave is hungry.\ngeorge is a friend of eve.\ndave is tired.\neve owns phone.\napple is new.\nfrank is friendly.\ndave is a parent of carol.\nfrank dislikes book.\ncarol likes pencil.\nbob is an enemy of alice.\nbob is an enemy of carol.\ndave is sad.\nalice is weak.\ndave is a parent of alice.\nalice is an enemy of dave.\n\nQUESTION:\nCould pencil is hard explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 395,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(dave).",
    "c": "brave(X) :- busy(X).\nfriendly(X) :- brave(X).\ntired(X) :- friendly(X).\ncalm(X) :- tired(X).\nexcited(X) :- calm(X).\nsad(X) :- excited(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nhungry(X) :- curious(X).\nhappy(X) :- hungry(X).\nbusy(dave).\ndislikes(dave,ball).\nenemy(carol,bob).\ndislikes(bob,pencil).\ndislikes(bob,ball).\nsibling(dave,carol).\ndislikes(eve,ball).\nsibling(alice,george).\nowns(dave,car).\nclever(dave).\nlikes(frank,book).\nfriend(carol,alice).\nparent(eve,george).\nenemy(dave,carol).\nenemy(eve,dave).\nenemy(eve,frank).\nlikes(dave,apple).\ndislikes(george,phone).\nfriend(eve,george).\nparent(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\n\nAnd the following facts:\ndave is busy.\ndave dislikes ball.\ncarol is an enemy of bob.\nbob dislikes pencil.\nbob dislikes ball.\ndave is a sibling of carol.\neve dislikes ball.\nalice is a sibling of george.\ndave owns car.\ndave is clever.\nfrank likes book.\ncarol is a friend of alice.\neve is a parent of george.\ndave is an enemy of carol.\neve is an enemy of dave.\neve is an enemy of frank.\ndave likes apple.\ngeorge dislikes phone.\neve is a friend of george.\nalice is a parent of carol.\n\nQUESTION:\nIs dave is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 396,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(pencil).",
    "c": "brave(X) :- busy(X).\nfriendly(X) :- brave(X).\ntired(X) :- friendly(X).\ncalm(X) :- tired(X).\nexcited(X) :- calm(X).\nsad(X) :- excited(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nhungry(X) :- curious(X).\nhappy(X) :- hungry(X).\nbusy(dave).\ndislikes(dave,ball).\nenemy(carol,bob).\ndislikes(bob,pencil).\ndislikes(bob,ball).\nsibling(dave,carol).\ndislikes(eve,ball).\nsibling(alice,george).\nowns(dave,car).\nclever(dave).\nlikes(frank,book).\nfriend(carol,alice).\nparent(eve,george).\nenemy(dave,carol).\nenemy(eve,dave).\nenemy(eve,frank).\nlikes(dave,apple).\ndislikes(george,phone).\nfriend(eve,george).\nparent(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\n\nAnd the following facts:\ndave is busy.\ndave dislikes ball.\ncarol is an enemy of bob.\nbob dislikes pencil.\nbob dislikes ball.\ndave is a sibling of carol.\neve dislikes ball.\nalice is a sibling of george.\ndave owns car.\ndave is clever.\nfrank likes book.\ncarol is a friend of alice.\neve is a parent of george.\ndave is an enemy of carol.\neve is an enemy of dave.\neve is an enemy of frank.\ndave likes apple.\ngeorge dislikes phone.\neve is a friend of george.\nalice is a parent of carol.\n\nQUESTION:\nIs pencil is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 397,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(dave).",
    "c": "brave(X) :- busy(X).\nfriendly(X) :- brave(X).\ntired(X) :- friendly(X).\ncalm(X) :- tired(X).\nexcited(X) :- calm(X).\nsad(X) :- excited(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nhungry(X) :- curious(X).\nhappy(X) :- hungry(X).\nhappy(dave).\ndislikes(dave,ball).\nenemy(carol,bob).\ndislikes(bob,pencil).\ndislikes(bob,ball).\nsibling(dave,carol).\ndislikes(eve,ball).\nsibling(alice,george).\nowns(dave,car).\nclever(dave).\nlikes(frank,book).\nfriend(carol,alice).\nparent(eve,george).\nenemy(dave,carol).\nenemy(eve,dave).\nenemy(eve,frank).\nlikes(dave,apple).\ndislikes(george,phone).\nfriend(eve,george).\nparent(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\n\nAnd the following facts:\ndave is happy.\ndave dislikes ball.\ncarol is an enemy of bob.\nbob dislikes pencil.\nbob dislikes ball.\ndave is a sibling of carol.\neve dislikes ball.\nalice is a sibling of george.\ndave owns car.\ndave is clever.\nfrank likes book.\ncarol is a friend of alice.\neve is a parent of george.\ndave is an enemy of carol.\neve is an enemy of dave.\neve is an enemy of frank.\ndave likes apple.\ngeorge dislikes phone.\neve is a friend of george.\nalice is a parent of carol.\n\nQUESTION:\nCould dave is busy explain dave is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 398,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hard(phone).",
    "c": "brave(X) :- busy(X).\nfriendly(X) :- brave(X).\ntired(X) :- friendly(X).\ncalm(X) :- tired(X).\nexcited(X) :- calm(X).\nsad(X) :- excited(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nhungry(X) :- curious(X).\nhappy(X) :- hungry(X).\nhappy(dave).\ndislikes(dave,ball).\nenemy(carol,bob).\ndislikes(bob,pencil).\ndislikes(bob,ball).\nsibling(dave,carol).\ndislikes(eve,ball).\nsibling(alice,george).\nowns(dave,car).\nclever(dave).\nlikes(frank,book).\nfriend(carol,alice).\nparent(eve,george).\nenemy(dave,carol).\nenemy(eve,dave).\nenemy(eve,frank).\nlikes(dave,apple).\ndislikes(george,phone).\nfriend(eve,george).\nparent(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\n\nAnd the following facts:\ndave is happy.\ndave dislikes ball.\ncarol is an enemy of bob.\nbob dislikes pencil.\nbob dislikes ball.\ndave is a sibling of carol.\neve dislikes ball.\nalice is a sibling of george.\ndave owns car.\ndave is clever.\nfrank likes book.\ncarol is a friend of alice.\neve is a parent of george.\ndave is an enemy of carol.\neve is an enemy of dave.\neve is an enemy of frank.\ndave likes apple.\ngeorge dislikes phone.\neve is a friend of george.\nalice is a parent of carol.\n\nQUESTION:\nCould phone is hard explain dave is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 399,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(car).",
    "c": "heavy(X) :- new(X).\ncurious(X) :- sad(X), friend(X,V), sad(V).\nfunny(Z) :- excited(Z).\nstrong(X) :- sad(X), likes(X,U), small(U).\nold(X) :- smooth(X).\nsmooth(Z) :- wet(Z).\nfriend(Y,Z) :- angry(Y), tired(Z).\nsoft(Y) :- hard(Y), tired(E).\nclean(Y) :- wet(Y), dislikes(W,Y), tired(W).\nfriendly(Y) :- excited(Y).\nfunny(X) :- clever(X), friend(X,B), funny(B).\nsibling(X,Y) :- busy(X), happy(Y).\nfriendly(X) :- sad(X).\nfunny(X) :- weak(X), hungry(X).\nrough(X) :- light(X), smooth(X).\nnew(car).\nsmooth(ball).\nfunny(dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is heavy.\nFor all X, if there exists V such that person X is sad and person X is a friend of person V and person V is sad, then person X is curious.\nFor all Z, if person Z is excited, then person Z is funny.\nFor all X, if there exists U such that person X is sad and person X likes object U and object U is small, then person X is strong.\nFor all X, if object X is smooth, then object X is old.\nFor all Z, if object Z is wet, then object Z is smooth.\nFor all Y, Z, if person Y is angry and person Z is tired, then person Y is a friend of person Z.\nFor all Y, if there exists E such that object Y is hard and person E is tired, then object Y is soft.\nFor all Y, if there exists W such that object Y is wet and person W dislikes object Y and person W is tired, then object Y is clean.\nFor all Y, if person Y is excited, then person Y is friendly.\nFor all X, if there exists B such that person X is clever and person X is a friend of person B and person B is funny, then person X is funny.\nFor all X, Y, if person X is busy and person Y is happy, then person X is a sibling of person Y.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is weak and person X is hungry, then person X is funny.\nFor all X, if object X is light and object X is smooth, then object X is rough.\n\nAnd the following facts:\ncar is new.\nball is smooth.\ndave is funny.\ndave is a friend of carol.\n\nQUESTION:\nIs car is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 400,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(eve).",
    "c": "heavy(X) :- new(X).\ncurious(X) :- sad(X), friend(X,V), sad(V).\nfunny(Z) :- excited(Z).\nstrong(X) :- sad(X), likes(X,U), small(U).\nold(X) :- smooth(X).\nsmooth(Z) :- wet(Z).\nfriend(Y,Z) :- angry(Y), tired(Z).\nsoft(Y) :- hard(Y), tired(E).\nclean(Y) :- wet(Y), dislikes(W,Y), tired(W).\nfriendly(Y) :- excited(Y).\nfunny(X) :- clever(X), friend(X,B), funny(B).\nsibling(X,Y) :- busy(X), happy(Y).\nfriendly(X) :- sad(X).\nfunny(X) :- weak(X), hungry(X).\nrough(X) :- light(X), smooth(X).\nnew(car).\nsmooth(ball).\nfunny(dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is heavy.\nFor all X, if there exists V such that person X is sad and person X is a friend of person V and person V is sad, then person X is curious.\nFor all Z, if person Z is excited, then person Z is funny.\nFor all X, if there exists U such that person X is sad and person X likes object U and object U is small, then person X is strong.\nFor all X, if object X is smooth, then object X is old.\nFor all Z, if object Z is wet, then object Z is smooth.\nFor all Y, Z, if person Y is angry and person Z is tired, then person Y is a friend of person Z.\nFor all Y, if there exists E such that object Y is hard and person E is tired, then object Y is soft.\nFor all Y, if there exists W such that object Y is wet and person W dislikes object Y and person W is tired, then object Y is clean.\nFor all Y, if person Y is excited, then person Y is friendly.\nFor all X, if there exists B such that person X is clever and person X is a friend of person B and person B is funny, then person X is funny.\nFor all X, Y, if person X is busy and person Y is happy, then person X is a sibling of person Y.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is weak and person X is hungry, then person X is funny.\nFor all X, if object X is light and object X is smooth, then object X is rough.\n\nAnd the following facts:\ncar is new.\nball is smooth.\ndave is funny.\ndave is a friend of carol.\n\nQUESTION:\nIs eve is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 401,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(car).",
    "c": "heavy(X) :- new(X).\ncurious(X) :- sad(X), friend(X,V), sad(V).\nfunny(Z) :- excited(Z).\nstrong(X) :- sad(X), likes(X,U), small(U).\nold(X) :- smooth(X).\nsmooth(Z) :- wet(Z).\nfriend(Y,Z) :- angry(Y), tired(Z).\nsoft(Y) :- hard(Y), tired(E).\nclean(Y) :- wet(Y), dislikes(W,Y), tired(W).\nfriendly(Y) :- excited(Y).\nfunny(X) :- clever(X), friend(X,B), funny(B).\nsibling(X,Y) :- busy(X), happy(Y).\nfriendly(X) :- sad(X).\nfunny(X) :- weak(X), hungry(X).\nrough(X) :- light(X), smooth(X).\nheavy(car).\nsmooth(ball).\nfunny(dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is heavy.\nFor all X, if there exists V such that person X is sad and person X is a friend of person V and person V is sad, then person X is curious.\nFor all Z, if person Z is excited, then person Z is funny.\nFor all X, if there exists U such that person X is sad and person X likes object U and object U is small, then person X is strong.\nFor all X, if object X is smooth, then object X is old.\nFor all Z, if object Z is wet, then object Z is smooth.\nFor all Y, Z, if person Y is angry and person Z is tired, then person Y is a friend of person Z.\nFor all Y, if there exists E such that object Y is hard and person E is tired, then object Y is soft.\nFor all Y, if there exists W such that object Y is wet and person W dislikes object Y and person W is tired, then object Y is clean.\nFor all Y, if person Y is excited, then person Y is friendly.\nFor all X, if there exists B such that person X is clever and person X is a friend of person B and person B is funny, then person X is funny.\nFor all X, Y, if person X is busy and person Y is happy, then person X is a sibling of person Y.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is weak and person X is hungry, then person X is funny.\nFor all X, if object X is light and object X is smooth, then object X is rough.\n\nAnd the following facts:\ncar is heavy.\nball is smooth.\ndave is funny.\ndave is a friend of carol.\n\nQUESTION:\nCould car is new explain car is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 402,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(phone).",
    "c": "heavy(X) :- new(X).\ncurious(X) :- sad(X), friend(X,V), sad(V).\nfunny(Z) :- excited(Z).\nstrong(X) :- sad(X), likes(X,U), small(U).\nold(X) :- smooth(X).\nsmooth(Z) :- wet(Z).\nfriend(Y,Z) :- angry(Y), tired(Z).\nsoft(Y) :- hard(Y), tired(E).\nclean(Y) :- wet(Y), dislikes(W,Y), tired(W).\nfriendly(Y) :- excited(Y).\nfunny(X) :- clever(X), friend(X,B), funny(B).\nsibling(X,Y) :- busy(X), happy(Y).\nfriendly(X) :- sad(X).\nfunny(X) :- weak(X), hungry(X).\nrough(X) :- light(X), smooth(X).\nheavy(car).\nsmooth(ball).\nfunny(dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is heavy.\nFor all X, if there exists V such that person X is sad and person X is a friend of person V and person V is sad, then person X is curious.\nFor all Z, if person Z is excited, then person Z is funny.\nFor all X, if there exists U such that person X is sad and person X likes object U and object U is small, then person X is strong.\nFor all X, if object X is smooth, then object X is old.\nFor all Z, if object Z is wet, then object Z is smooth.\nFor all Y, Z, if person Y is angry and person Z is tired, then person Y is a friend of person Z.\nFor all Y, if there exists E such that object Y is hard and person E is tired, then object Y is soft.\nFor all Y, if there exists W such that object Y is wet and person W dislikes object Y and person W is tired, then object Y is clean.\nFor all Y, if person Y is excited, then person Y is friendly.\nFor all X, if there exists B such that person X is clever and person X is a friend of person B and person B is funny, then person X is funny.\nFor all X, Y, if person X is busy and person Y is happy, then person X is a sibling of person Y.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is weak and person X is hungry, then person X is funny.\nFor all X, if object X is light and object X is smooth, then object X is rough.\n\nAnd the following facts:\ncar is heavy.\nball is smooth.\ndave is funny.\ndave is a friend of carol.\n\nQUESTION:\nCould phone is new explain car is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 403,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "wet(phone).",
    "c": "wet(X) :- rough(X).\nfriendly(X) :- funny(X), parent(X,B), funny(B).\nlikes(Y,Z) :- excited(Y), big(Z), sibling(Y,A).\nlikes(Y,X) :- curious(Y), soft(X), friend(Y,B).\nstrong(Z) :- tall(Z), owns(Z,W), old(W).\nweak(X) :- brave(X), owns(X,V), red(V).\nsmooth(X) :- heavy(X).\nbrave(X) :- strong(X).\ntired(X) :- sad(X), friendly(X).\nweak(X) :- clever(X).\ncalm(X) :- clever(X).\nlikes(X,Y) :- brave(X), hard(Y).\nhungry(X) :- friendly(X), excited(X).\ndislikes(X,Y) :- curious(X), clean(Y).\nhungry(X) :- brave(X), brave(X).\nrough(phone).\nenemy(carol,george).\nheavy(phone).\nlikes(eve,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is wet.\nFor all X, if there exists B such that person X is funny and person X is a parent of person B and person B is funny, then person X is friendly.\nFor all Y, Z, if there exists A such that person Y is excited and object Z is big and person Y is a sibling of person A, then person Y likes object Z.\nFor all X, Y, if there exists B such that person Y is curious and object X is soft and person Y is a friend of person B, then person Y likes object X.\nFor all Z, if there exists W such that person Z is tall and person Z owns object W and object W is old, then person Z is strong.\nFor all X, if there exists V such that person X is brave and person X owns object V and object V is red, then person X is weak.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is sad and person X is friendly, then person X is tired.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is clever, then person X is calm.\nFor all X, Y, if person X is brave and object Y is hard, then person X likes object Y.\nFor all X, if person X is friendly and person X is excited, then person X is hungry.\nFor all X, Y, if person X is curious and object Y is clean, then person X dislikes object Y.\nFor all X, if person X is brave and person X is brave, then person X is hungry.\n\nAnd the following facts:\nphone is rough.\ncarol is an enemy of george.\nphone is heavy.\neve likes car.\n\nQUESTION:\nIs phone is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 404,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "wet(X) :- rough(X).\nfriendly(X) :- funny(X), parent(X,B), funny(B).\nlikes(Y,Z) :- excited(Y), big(Z), sibling(Y,A).\nlikes(Y,X) :- curious(Y), soft(X), friend(Y,B).\nstrong(Z) :- tall(Z), owns(Z,W), old(W).\nweak(X) :- brave(X), owns(X,V), red(V).\nsmooth(X) :- heavy(X).\nbrave(X) :- strong(X).\ntired(X) :- sad(X), friendly(X).\nweak(X) :- clever(X).\ncalm(X) :- clever(X).\nlikes(X,Y) :- brave(X), hard(Y).\nhungry(X) :- friendly(X), excited(X).\ndislikes(X,Y) :- curious(X), clean(Y).\nhungry(X) :- brave(X), brave(X).\nrough(phone).\nenemy(carol,george).\nheavy(phone).\nlikes(eve,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is wet.\nFor all X, if there exists B such that person X is funny and person X is a parent of person B and person B is funny, then person X is friendly.\nFor all Y, Z, if there exists A such that person Y is excited and object Z is big and person Y is a sibling of person A, then person Y likes object Z.\nFor all X, Y, if there exists B such that person Y is curious and object X is soft and person Y is a friend of person B, then person Y likes object X.\nFor all Z, if there exists W such that person Z is tall and person Z owns object W and object W is old, then person Z is strong.\nFor all X, if there exists V such that person X is brave and person X owns object V and object V is red, then person X is weak.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is sad and person X is friendly, then person X is tired.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is clever, then person X is calm.\nFor all X, Y, if person X is brave and object Y is hard, then person X likes object Y.\nFor all X, if person X is friendly and person X is excited, then person X is hungry.\nFor all X, Y, if person X is curious and object Y is clean, then person X dislikes object Y.\nFor all X, if person X is brave and person X is brave, then person X is hungry.\n\nAnd the following facts:\nphone is rough.\ncarol is an enemy of george.\nphone is heavy.\neve likes car.\n\nQUESTION:\nIs ball is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 405,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "wet(X) :- rough(X).\nfriendly(X) :- funny(X), parent(X,B), funny(B).\nlikes(Y,Z) :- excited(Y), big(Z), sibling(Y,A).\nlikes(Y,X) :- curious(Y), soft(X), friend(Y,B).\nstrong(Z) :- tall(Z), owns(Z,W), old(W).\nweak(X) :- brave(X), owns(X,V), red(V).\nsmooth(X) :- heavy(X).\nbrave(X) :- strong(X).\ntired(X) :- sad(X), friendly(X).\nweak(X) :- clever(X).\ncalm(X) :- clever(X).\nlikes(X,Y) :- brave(X), hard(Y).\nhungry(X) :- friendly(X), excited(X).\ndislikes(X,Y) :- curious(X), clean(Y).\nhungry(X) :- brave(X), brave(X).\nwet(phone).\nenemy(carol,george).\nheavy(phone).\nlikes(eve,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is wet.\nFor all X, if there exists B such that person X is funny and person X is a parent of person B and person B is funny, then person X is friendly.\nFor all Y, Z, if there exists A such that person Y is excited and object Z is big and person Y is a sibling of person A, then person Y likes object Z.\nFor all X, Y, if there exists B such that person Y is curious and object X is soft and person Y is a friend of person B, then person Y likes object X.\nFor all Z, if there exists W such that person Z is tall and person Z owns object W and object W is old, then person Z is strong.\nFor all X, if there exists V such that person X is brave and person X owns object V and object V is red, then person X is weak.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is sad and person X is friendly, then person X is tired.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is clever, then person X is calm.\nFor all X, Y, if person X is brave and object Y is hard, then person X likes object Y.\nFor all X, if person X is friendly and person X is excited, then person X is hungry.\nFor all X, Y, if person X is curious and object Y is clean, then person X dislikes object Y.\nFor all X, if person X is brave and person X is brave, then person X is hungry.\n\nAnd the following facts:\nphone is wet.\ncarol is an enemy of george.\nphone is heavy.\neve likes car.\n\nQUESTION:\nCould phone is rough explain phone is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 406,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "tired(george).",
    "c": "wet(X) :- rough(X).\nfriendly(X) :- funny(X), parent(X,B), funny(B).\nlikes(Y,Z) :- excited(Y), big(Z), sibling(Y,A).\nlikes(Y,X) :- curious(Y), soft(X), friend(Y,B).\nstrong(Z) :- tall(Z), owns(Z,W), old(W).\nweak(X) :- brave(X), owns(X,V), red(V).\nsmooth(X) :- heavy(X).\nbrave(X) :- strong(X).\ntired(X) :- sad(X), friendly(X).\nweak(X) :- clever(X).\ncalm(X) :- clever(X).\nlikes(X,Y) :- brave(X), hard(Y).\nhungry(X) :- friendly(X), excited(X).\ndislikes(X,Y) :- curious(X), clean(Y).\nhungry(X) :- brave(X), brave(X).\nwet(phone).\nenemy(carol,george).\nheavy(phone).\nlikes(eve,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is wet.\nFor all X, if there exists B such that person X is funny and person X is a parent of person B and person B is funny, then person X is friendly.\nFor all Y, Z, if there exists A such that person Y is excited and object Z is big and person Y is a sibling of person A, then person Y likes object Z.\nFor all X, Y, if there exists B such that person Y is curious and object X is soft and person Y is a friend of person B, then person Y likes object X.\nFor all Z, if there exists W such that person Z is tall and person Z owns object W and object W is old, then person Z is strong.\nFor all X, if there exists V such that person X is brave and person X owns object V and object V is red, then person X is weak.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is sad and person X is friendly, then person X is tired.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is clever, then person X is calm.\nFor all X, Y, if person X is brave and object Y is hard, then person X likes object Y.\nFor all X, if person X is friendly and person X is excited, then person X is hungry.\nFor all X, Y, if person X is curious and object Y is clean, then person X dislikes object Y.\nFor all X, if person X is brave and person X is brave, then person X is hungry.\n\nAnd the following facts:\nphone is wet.\ncarol is an enemy of george.\nphone is heavy.\neve likes car.\n\nQUESTION:\nCould george is tired explain phone is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 407,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "friendly(carol).",
    "c": "friendly(X) :- tired(X).\nstrong(Z) :- angry(Z), parent(Z,W), brave(W).\ncalm(Y) :- curious(Y).\nexcited(Z) :- sad(Z), friend(Z,W), sad(W).\nhappy(Z) :- angry(Z), enemy(Z,A), angry(A).\ndirty(Y) :- hard(Y), dislikes(U,Y), tall(U).\nbrave(Z) :- clever(Z), sibling(Z,U), clever(U).\nnew(X) :- soft(X), heavy(X).\nbored(X) :- tall(X), hungry(X).\nhungry(X) :- weak(X).\nowns(X,Y) :- tall(X), new(Y).\nhappy(X) :- brave(X).\nred(X) :- dirty(X), light(X).\nold(X) :- hard(X).\nhungry(X) :- tall(X).\ntired(carol).\nowns(eve,pencil).\nbored(alice).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all Z, if there exists W such that person Z is angry and person Z is a parent of person W and person W is brave, then person Z is strong.\nFor all Y, if person Y is curious, then person Y is calm.\nFor all Z, if there exists W such that person Z is sad and person Z is a friend of person W and person W is sad, then person Z is excited.\nFor all Z, if there exists A such that person Z is angry and person Z is an enemy of person A and person A is angry, then person Z is happy.\nFor all Y, if there exists U such that object Y is hard and person U dislikes object Y and person U is tall, then object Y is dirty.\nFor all Z, if there exists U such that person Z is clever and person Z is a sibling of person U and person U is clever, then person Z is brave.\nFor all X, if object X is soft and object X is heavy, then object X is new.\nFor all X, if person X is tall and person X is hungry, then person X is bored.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, Y, if person X is tall and object Y is new, then person X owns object Y.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if object X is dirty and object X is light, then object X is red.\nFor all X, if object X is hard, then object X is old.\nFor all X, if person X is tall, then person X is hungry.\n\nAnd the following facts:\ncarol is tired.\neve owns pencil.\nalice is bored.\ncarol is excited.\n\nQUESTION:\nIs carol is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 408,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(eve).",
    "c": "friendly(X) :- tired(X).\nstrong(Z) :- angry(Z), parent(Z,W), brave(W).\ncalm(Y) :- curious(Y).\nexcited(Z) :- sad(Z), friend(Z,W), sad(W).\nhappy(Z) :- angry(Z), enemy(Z,A), angry(A).\ndirty(Y) :- hard(Y), dislikes(U,Y), tall(U).\nbrave(Z) :- clever(Z), sibling(Z,U), clever(U).\nnew(X) :- soft(X), heavy(X).\nbored(X) :- tall(X), hungry(X).\nhungry(X) :- weak(X).\nowns(X,Y) :- tall(X), new(Y).\nhappy(X) :- brave(X).\nred(X) :- dirty(X), light(X).\nold(X) :- hard(X).\nhungry(X) :- tall(X).\ntired(carol).\nowns(eve,pencil).\nbored(alice).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all Z, if there exists W such that person Z is angry and person Z is a parent of person W and person W is brave, then person Z is strong.\nFor all Y, if person Y is curious, then person Y is calm.\nFor all Z, if there exists W such that person Z is sad and person Z is a friend of person W and person W is sad, then person Z is excited.\nFor all Z, if there exists A such that person Z is angry and person Z is an enemy of person A and person A is angry, then person Z is happy.\nFor all Y, if there exists U such that object Y is hard and person U dislikes object Y and person U is tall, then object Y is dirty.\nFor all Z, if there exists U such that person Z is clever and person Z is a sibling of person U and person U is clever, then person Z is brave.\nFor all X, if object X is soft and object X is heavy, then object X is new.\nFor all X, if person X is tall and person X is hungry, then person X is bored.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, Y, if person X is tall and object Y is new, then person X owns object Y.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if object X is dirty and object X is light, then object X is red.\nFor all X, if object X is hard, then object X is old.\nFor all X, if person X is tall, then person X is hungry.\n\nAnd the following facts:\ncarol is tired.\neve owns pencil.\nalice is bored.\ncarol is excited.\n\nQUESTION:\nIs eve is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 409,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(carol).",
    "c": "friendly(X) :- tired(X).\nstrong(Z) :- angry(Z), parent(Z,W), brave(W).\ncalm(Y) :- curious(Y).\nexcited(Z) :- sad(Z), friend(Z,W), sad(W).\nhappy(Z) :- angry(Z), enemy(Z,A), angry(A).\ndirty(Y) :- hard(Y), dislikes(U,Y), tall(U).\nbrave(Z) :- clever(Z), sibling(Z,U), clever(U).\nnew(X) :- soft(X), heavy(X).\nbored(X) :- tall(X), hungry(X).\nhungry(X) :- weak(X).\nowns(X,Y) :- tall(X), new(Y).\nhappy(X) :- brave(X).\nred(X) :- dirty(X), light(X).\nold(X) :- hard(X).\nhungry(X) :- tall(X).\nfriendly(carol).\nowns(eve,pencil).\nbored(alice).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all Z, if there exists W such that person Z is angry and person Z is a parent of person W and person W is brave, then person Z is strong.\nFor all Y, if person Y is curious, then person Y is calm.\nFor all Z, if there exists W such that person Z is sad and person Z is a friend of person W and person W is sad, then person Z is excited.\nFor all Z, if there exists A such that person Z is angry and person Z is an enemy of person A and person A is angry, then person Z is happy.\nFor all Y, if there exists U such that object Y is hard and person U dislikes object Y and person U is tall, then object Y is dirty.\nFor all Z, if there exists U such that person Z is clever and person Z is a sibling of person U and person U is clever, then person Z is brave.\nFor all X, if object X is soft and object X is heavy, then object X is new.\nFor all X, if person X is tall and person X is hungry, then person X is bored.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, Y, if person X is tall and object Y is new, then person X owns object Y.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if object X is dirty and object X is light, then object X is red.\nFor all X, if object X is hard, then object X is old.\nFor all X, if person X is tall, then person X is hungry.\n\nAnd the following facts:\ncarol is friendly.\neve owns pencil.\nalice is bored.\ncarol is excited.\n\nQUESTION:\nCould carol is tired explain carol is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 410,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(ball).",
    "c": "friendly(X) :- tired(X).\nstrong(Z) :- angry(Z), parent(Z,W), brave(W).\ncalm(Y) :- curious(Y).\nexcited(Z) :- sad(Z), friend(Z,W), sad(W).\nhappy(Z) :- angry(Z), enemy(Z,A), angry(A).\ndirty(Y) :- hard(Y), dislikes(U,Y), tall(U).\nbrave(Z) :- clever(Z), sibling(Z,U), clever(U).\nnew(X) :- soft(X), heavy(X).\nbored(X) :- tall(X), hungry(X).\nhungry(X) :- weak(X).\nowns(X,Y) :- tall(X), new(Y).\nhappy(X) :- brave(X).\nred(X) :- dirty(X), light(X).\nold(X) :- hard(X).\nhungry(X) :- tall(X).\nfriendly(carol).\nowns(eve,pencil).\nbored(alice).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all Z, if there exists W such that person Z is angry and person Z is a parent of person W and person W is brave, then person Z is strong.\nFor all Y, if person Y is curious, then person Y is calm.\nFor all Z, if there exists W such that person Z is sad and person Z is a friend of person W and person W is sad, then person Z is excited.\nFor all Z, if there exists A such that person Z is angry and person Z is an enemy of person A and person A is angry, then person Z is happy.\nFor all Y, if there exists U such that object Y is hard and person U dislikes object Y and person U is tall, then object Y is dirty.\nFor all Z, if there exists U such that person Z is clever and person Z is a sibling of person U and person U is clever, then person Z is brave.\nFor all X, if object X is soft and object X is heavy, then object X is new.\nFor all X, if person X is tall and person X is hungry, then person X is bored.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, Y, if person X is tall and object Y is new, then person X owns object Y.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if object X is dirty and object X is light, then object X is red.\nFor all X, if object X is hard, then object X is old.\nFor all X, if person X is tall, then person X is hungry.\n\nAnd the following facts:\ncarol is friendly.\neve owns pencil.\nalice is bored.\ncarol is excited.\n\nQUESTION:\nCould ball is red explain carol is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 411,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "small(X) :- clean(X).\nsad(Y) :- calm(Y), dislikes(Y,B), new(B).\nred(Y) :- heavy(Y), likes(B,Y), bored(B).\nbrave(Y) :- tall(Y), enemy(Y,V), sad(V).\nred(Y) :- smooth(Y), likes(U,Y), tall(U).\nlikes(Y,X) :- hungry(Y), old(X), soft(A).\nhungry(X) :- busy(X).\nhungry(X) :- curious(X).\ncalm(X) :- curious(X), strong(X).\nfriendly(X) :- happy(X).\nhard(X) :- red(X), light(X).\nfunny(X) :- clever(X).\nbored(X) :- hungry(X).\nsmooth(X) :- soft(X), heavy(X).\nheavy(X) :- red(X).\nclean(phone).\nold(book).\nenemy(eve,carol).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is small.\nFor all Y, if there exists B such that person Y is calm and person Y dislikes object B and object B is new, then person Y is sad.\nFor all Y, if there exists B such that object Y is heavy and person B likes object Y and person B is bored, then object Y is red.\nFor all Y, if there exists V such that person Y is tall and person Y is an enemy of person V and person V is sad, then person Y is brave.\nFor all Y, if there exists U such that object Y is smooth and person U likes object Y and person U is tall, then object Y is red.\nFor all X, Y, if there exists A such that person Y is hungry and object X is old and object A is soft, then person Y likes object X.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is curious and person X is strong, then person X is calm.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if object X is red and object X is light, then object X is hard.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if object X is soft and object X is heavy, then object X is smooth.\nFor all X, if object X is red, then object X is heavy.\n\nAnd the following facts:\nphone is clean.\nbook is old.\neve is an enemy of carol.\nfrank likes car.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 412,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(george).",
    "c": "small(X) :- clean(X).\nsad(Y) :- calm(Y), dislikes(Y,B), new(B).\nred(Y) :- heavy(Y), likes(B,Y), bored(B).\nbrave(Y) :- tall(Y), enemy(Y,V), sad(V).\nred(Y) :- smooth(Y), likes(U,Y), tall(U).\nlikes(Y,X) :- hungry(Y), old(X), soft(A).\nhungry(X) :- busy(X).\nhungry(X) :- curious(X).\ncalm(X) :- curious(X), strong(X).\nfriendly(X) :- happy(X).\nhard(X) :- red(X), light(X).\nfunny(X) :- clever(X).\nbored(X) :- hungry(X).\nsmooth(X) :- soft(X), heavy(X).\nheavy(X) :- red(X).\nclean(phone).\nold(book).\nenemy(eve,carol).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is small.\nFor all Y, if there exists B such that person Y is calm and person Y dislikes object B and object B is new, then person Y is sad.\nFor all Y, if there exists B such that object Y is heavy and person B likes object Y and person B is bored, then object Y is red.\nFor all Y, if there exists V such that person Y is tall and person Y is an enemy of person V and person V is sad, then person Y is brave.\nFor all Y, if there exists U such that object Y is smooth and person U likes object Y and person U is tall, then object Y is red.\nFor all X, Y, if there exists A such that person Y is hungry and object X is old and object A is soft, then person Y likes object X.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is curious and person X is strong, then person X is calm.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if object X is red and object X is light, then object X is hard.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if object X is soft and object X is heavy, then object X is smooth.\nFor all X, if object X is red, then object X is heavy.\n\nAnd the following facts:\nphone is clean.\nbook is old.\neve is an enemy of carol.\nfrank likes car.\n\nQUESTION:\nIs george is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 413,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(phone).",
    "c": "small(X) :- clean(X).\nsad(Y) :- calm(Y), dislikes(Y,B), new(B).\nred(Y) :- heavy(Y), likes(B,Y), bored(B).\nbrave(Y) :- tall(Y), enemy(Y,V), sad(V).\nred(Y) :- smooth(Y), likes(U,Y), tall(U).\nlikes(Y,X) :- hungry(Y), old(X), soft(A).\nhungry(X) :- busy(X).\nhungry(X) :- curious(X).\ncalm(X) :- curious(X), strong(X).\nfriendly(X) :- happy(X).\nhard(X) :- red(X), light(X).\nfunny(X) :- clever(X).\nbored(X) :- hungry(X).\nsmooth(X) :- soft(X), heavy(X).\nheavy(X) :- red(X).\nsmall(phone).\nold(book).\nenemy(eve,carol).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is small.\nFor all Y, if there exists B such that person Y is calm and person Y dislikes object B and object B is new, then person Y is sad.\nFor all Y, if there exists B such that object Y is heavy and person B likes object Y and person B is bored, then object Y is red.\nFor all Y, if there exists V such that person Y is tall and person Y is an enemy of person V and person V is sad, then person Y is brave.\nFor all Y, if there exists U such that object Y is smooth and person U likes object Y and person U is tall, then object Y is red.\nFor all X, Y, if there exists A such that person Y is hungry and object X is old and object A is soft, then person Y likes object X.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is curious and person X is strong, then person X is calm.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if object X is red and object X is light, then object X is hard.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if object X is soft and object X is heavy, then object X is smooth.\nFor all X, if object X is red, then object X is heavy.\n\nAnd the following facts:\nphone is small.\nbook is old.\neve is an enemy of carol.\nfrank likes car.\n\nQUESTION:\nCould phone is clean explain phone is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 414,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(carol).",
    "c": "small(X) :- clean(X).\nsad(Y) :- calm(Y), dislikes(Y,B), new(B).\nred(Y) :- heavy(Y), likes(B,Y), bored(B).\nbrave(Y) :- tall(Y), enemy(Y,V), sad(V).\nred(Y) :- smooth(Y), likes(U,Y), tall(U).\nlikes(Y,X) :- hungry(Y), old(X), soft(A).\nhungry(X) :- busy(X).\nhungry(X) :- curious(X).\ncalm(X) :- curious(X), strong(X).\nfriendly(X) :- happy(X).\nhard(X) :- red(X), light(X).\nfunny(X) :- clever(X).\nbored(X) :- hungry(X).\nsmooth(X) :- soft(X), heavy(X).\nheavy(X) :- red(X).\nsmall(phone).\nold(book).\nenemy(eve,carol).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is small.\nFor all Y, if there exists B such that person Y is calm and person Y dislikes object B and object B is new, then person Y is sad.\nFor all Y, if there exists B such that object Y is heavy and person B likes object Y and person B is bored, then object Y is red.\nFor all Y, if there exists V such that person Y is tall and person Y is an enemy of person V and person V is sad, then person Y is brave.\nFor all Y, if there exists U such that object Y is smooth and person U likes object Y and person U is tall, then object Y is red.\nFor all X, Y, if there exists A such that person Y is hungry and object X is old and object A is soft, then person Y likes object X.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is curious and person X is strong, then person X is calm.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if object X is red and object X is light, then object X is hard.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if object X is soft and object X is heavy, then object X is smooth.\nFor all X, if object X is red, then object X is heavy.\n\nAnd the following facts:\nphone is small.\nbook is old.\neve is an enemy of carol.\nfrank likes car.\n\nQUESTION:\nCould carol is angry explain phone is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 415,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(pencil).",
    "c": "heavy(X) :- red(X).\nred(X) :- heavy(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nnew(X) :- red(X).\nsoft(Z) :- old(Z), likes(U,Z), excited(U).\nsoft(X) :- dirty(X), likes(U,X), hungry(U).\nenemy(Z,X) :- happy(Z), happy(X).\nweak(Z) :- excited(Z), owns(Z,W), old(W).\nsibling(X,Y) :- busy(Y), strong(X), parent(Y,W).\nsibling(X,Y) :- bored(X), angry(Y).\ntired(X) :- strong(X).\nclever(X) :- happy(X).\nlight(X) :- big(X).\nfriend(X,Y) :- brave(X), bored(Y), parent(X,Y).\nred(pencil).\nsibling(frank,carol).\nsibling(eve,george).\nhappy(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all Z, if there exists U such that object Z is old and person U likes object Z and person U is excited, then object Z is soft.\nFor all X, if there exists U such that object X is dirty and person U likes object X and person U is hungry, then object X is soft.\nFor all X, Z, if person Z is happy and person X is happy, then person Z is an enemy of person X.\nFor all Z, if there exists W such that person Z is excited and person Z owns object W and object W is old, then person Z is weak.\nFor all X, Y, if there exists W such that person Y is busy and person X is strong and person Y is a parent of person W, then person X is a sibling of person Y.\nFor all X, Y, if person X is bored and person Y is angry, then person X is a sibling of person Y.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is brave and person Y is bored and person X is a parent of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is red.\nfrank is a sibling of carol.\neve is a sibling of george.\ngeorge is happy.\n\nQUESTION:\nIs pencil is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 416,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(carol).",
    "c": "heavy(X) :- red(X).\nred(X) :- heavy(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nnew(X) :- red(X).\nsoft(Z) :- old(Z), likes(U,Z), excited(U).\nsoft(X) :- dirty(X), likes(U,X), hungry(U).\nenemy(Z,X) :- happy(Z), happy(X).\nweak(Z) :- excited(Z), owns(Z,W), old(W).\nsibling(X,Y) :- busy(Y), strong(X), parent(Y,W).\nsibling(X,Y) :- bored(X), angry(Y).\ntired(X) :- strong(X).\nclever(X) :- happy(X).\nlight(X) :- big(X).\nfriend(X,Y) :- brave(X), bored(Y), parent(X,Y).\nred(pencil).\nsibling(frank,carol).\nsibling(eve,george).\nhappy(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all Z, if there exists U such that object Z is old and person U likes object Z and person U is excited, then object Z is soft.\nFor all X, if there exists U such that object X is dirty and person U likes object X and person U is hungry, then object X is soft.\nFor all X, Z, if person Z is happy and person X is happy, then person Z is an enemy of person X.\nFor all Z, if there exists W such that person Z is excited and person Z owns object W and object W is old, then person Z is weak.\nFor all X, Y, if there exists W such that person Y is busy and person X is strong and person Y is a parent of person W, then person X is a sibling of person Y.\nFor all X, Y, if person X is bored and person Y is angry, then person X is a sibling of person Y.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is brave and person Y is bored and person X is a parent of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is red.\nfrank is a sibling of carol.\neve is a sibling of george.\ngeorge is happy.\n\nQUESTION:\nIs carol is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 417,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(pencil).",
    "c": "heavy(X) :- red(X).\nred(X) :- heavy(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nnew(X) :- red(X).\nsoft(Z) :- old(Z), likes(U,Z), excited(U).\nsoft(X) :- dirty(X), likes(U,X), hungry(U).\nenemy(Z,X) :- happy(Z), happy(X).\nweak(Z) :- excited(Z), owns(Z,W), old(W).\nsibling(X,Y) :- busy(Y), strong(X), parent(Y,W).\nsibling(X,Y) :- bored(X), angry(Y).\ntired(X) :- strong(X).\nclever(X) :- happy(X).\nlight(X) :- big(X).\nfriend(X,Y) :- brave(X), bored(Y), parent(X,Y).\nnew(pencil).\nsibling(frank,carol).\nsibling(eve,george).\nhappy(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all Z, if there exists U such that object Z is old and person U likes object Z and person U is excited, then object Z is soft.\nFor all X, if there exists U such that object X is dirty and person U likes object X and person U is hungry, then object X is soft.\nFor all X, Z, if person Z is happy and person X is happy, then person Z is an enemy of person X.\nFor all Z, if there exists W such that person Z is excited and person Z owns object W and object W is old, then person Z is weak.\nFor all X, Y, if there exists W such that person Y is busy and person X is strong and person Y is a parent of person W, then person X is a sibling of person Y.\nFor all X, Y, if person X is bored and person Y is angry, then person X is a sibling of person Y.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is brave and person Y is bored and person X is a parent of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is new.\nfrank is a sibling of carol.\neve is a sibling of george.\ngeorge is happy.\n\nQUESTION:\nCould pencil is red explain pencil is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 418,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "heavy(X) :- red(X).\nred(X) :- heavy(X).\nrough(X) :- red(X).\nred(X) :- rough(X).\nnew(X) :- red(X).\nsoft(Z) :- old(Z), likes(U,Z), excited(U).\nsoft(X) :- dirty(X), likes(U,X), hungry(U).\nenemy(Z,X) :- happy(Z), happy(X).\nweak(Z) :- excited(Z), owns(Z,W), old(W).\nsibling(X,Y) :- busy(Y), strong(X), parent(Y,W).\nsibling(X,Y) :- bored(X), angry(Y).\ntired(X) :- strong(X).\nclever(X) :- happy(X).\nlight(X) :- big(X).\nfriend(X,Y) :- brave(X), bored(Y), parent(X,Y).\nnew(pencil).\nsibling(frank,carol).\nsibling(eve,george).\nhappy(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all Z, if there exists U such that object Z is old and person U likes object Z and person U is excited, then object Z is soft.\nFor all X, if there exists U such that object X is dirty and person U likes object X and person U is hungry, then object X is soft.\nFor all X, Z, if person Z is happy and person X is happy, then person Z is an enemy of person X.\nFor all Z, if there exists W such that person Z is excited and person Z owns object W and object W is old, then person Z is weak.\nFor all X, Y, if there exists W such that person Y is busy and person X is strong and person Y is a parent of person W, then person X is a sibling of person Y.\nFor all X, Y, if person X is bored and person Y is angry, then person X is a sibling of person Y.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is brave and person Y is bored and person X is a parent of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is new.\nfrank is a sibling of carol.\neve is a sibling of george.\ngeorge is happy.\n\nQUESTION:\nCould bob is hungry explain pencil is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 419,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "smooth(phone).",
    "c": "red(X) :- wet(X).\nhard(X) :- red(X).\nrough(X) :- hard(X).\nsmall(X) :- rough(X).\nsmooth(X) :- small(X).\nbrave(Y) :- brave(Y), dislikes(Y,W), big(W).\ncalm(X) :- tall(X), friend(X,A), excited(A).\ndislikes(Z,Y) :- big(Y), hungry(Z), dislikes(B,Y).\nbrave(X) :- clever(X), friend(X,V), weak(V).\nbored(X) :- calm(X).\ndislikes(X,Y) :- tired(X), clean(Y).\ncalm(X) :- excited(X), happy(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- strong(X), brave(Y).\ntall(X) :- curious(X).\nwet(phone).\nlikes(eve,pencil).\nlikes(george,car).\nfriend(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all Y, if there exists W such that person Y is brave and person Y dislikes object W and object W is big, then person Y is brave.\nFor all X, if there exists A such that person X is tall and person X is a friend of person A and person A is excited, then person X is calm.\nFor all Y, Z, if there exists B such that object Y is big and person Z is hungry and person B dislikes object Y, then person Z dislikes object Y.\nFor all X, if there exists V such that person X is clever and person X is a friend of person V and person V is weak, then person X is brave.\nFor all X, if person X is calm, then person X is bored.\nFor all X, Y, if person X is tired and object Y is clean, then person X dislikes object Y.\nFor all X, if person X is excited and person X is happy, then person X is calm.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is strong and person Y is brave, then person X is a sibling of person Y.\nFor all X, if person X is curious, then person X is tall.\n\nAnd the following facts:\nphone is wet.\neve likes pencil.\ngeorge likes car.\neve is a friend of frank.\n\nQUESTION:\nIs phone is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 420,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(apple).",
    "c": "red(X) :- wet(X).\nhard(X) :- red(X).\nrough(X) :- hard(X).\nsmall(X) :- rough(X).\nsmooth(X) :- small(X).\nbrave(Y) :- brave(Y), dislikes(Y,W), big(W).\ncalm(X) :- tall(X), friend(X,A), excited(A).\ndislikes(Z,Y) :- big(Y), hungry(Z), dislikes(B,Y).\nbrave(X) :- clever(X), friend(X,V), weak(V).\nbored(X) :- calm(X).\ndislikes(X,Y) :- tired(X), clean(Y).\ncalm(X) :- excited(X), happy(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- strong(X), brave(Y).\ntall(X) :- curious(X).\nwet(phone).\nlikes(eve,pencil).\nlikes(george,car).\nfriend(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all Y, if there exists W such that person Y is brave and person Y dislikes object W and object W is big, then person Y is brave.\nFor all X, if there exists A such that person X is tall and person X is a friend of person A and person A is excited, then person X is calm.\nFor all Y, Z, if there exists B such that object Y is big and person Z is hungry and person B dislikes object Y, then person Z dislikes object Y.\nFor all X, if there exists V such that person X is clever and person X is a friend of person V and person V is weak, then person X is brave.\nFor all X, if person X is calm, then person X is bored.\nFor all X, Y, if person X is tired and object Y is clean, then person X dislikes object Y.\nFor all X, if person X is excited and person X is happy, then person X is calm.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is strong and person Y is brave, then person X is a sibling of person Y.\nFor all X, if person X is curious, then person X is tall.\n\nAnd the following facts:\nphone is wet.\neve likes pencil.\ngeorge likes car.\neve is a friend of frank.\n\nQUESTION:\nIs apple is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 421,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(phone).",
    "c": "red(X) :- wet(X).\nhard(X) :- red(X).\nrough(X) :- hard(X).\nsmall(X) :- rough(X).\nsmooth(X) :- small(X).\nbrave(Y) :- brave(Y), dislikes(Y,W), big(W).\ncalm(X) :- tall(X), friend(X,A), excited(A).\ndislikes(Z,Y) :- big(Y), hungry(Z), dislikes(B,Y).\nbrave(X) :- clever(X), friend(X,V), weak(V).\nbored(X) :- calm(X).\ndislikes(X,Y) :- tired(X), clean(Y).\ncalm(X) :- excited(X), happy(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- strong(X), brave(Y).\ntall(X) :- curious(X).\nsmooth(phone).\nlikes(eve,pencil).\nlikes(george,car).\nfriend(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all Y, if there exists W such that person Y is brave and person Y dislikes object W and object W is big, then person Y is brave.\nFor all X, if there exists A such that person X is tall and person X is a friend of person A and person A is excited, then person X is calm.\nFor all Y, Z, if there exists B such that object Y is big and person Z is hungry and person B dislikes object Y, then person Z dislikes object Y.\nFor all X, if there exists V such that person X is clever and person X is a friend of person V and person V is weak, then person X is brave.\nFor all X, if person X is calm, then person X is bored.\nFor all X, Y, if person X is tired and object Y is clean, then person X dislikes object Y.\nFor all X, if person X is excited and person X is happy, then person X is calm.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is strong and person Y is brave, then person X is a sibling of person Y.\nFor all X, if person X is curious, then person X is tall.\n\nAnd the following facts:\nphone is smooth.\neve likes pencil.\ngeorge likes car.\neve is a friend of frank.\n\nQUESTION:\nCould phone is wet explain phone is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 422,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(george).",
    "c": "red(X) :- wet(X).\nhard(X) :- red(X).\nrough(X) :- hard(X).\nsmall(X) :- rough(X).\nsmooth(X) :- small(X).\nbrave(Y) :- brave(Y), dislikes(Y,W), big(W).\ncalm(X) :- tall(X), friend(X,A), excited(A).\ndislikes(Z,Y) :- big(Y), hungry(Z), dislikes(B,Y).\nbrave(X) :- clever(X), friend(X,V), weak(V).\nbored(X) :- calm(X).\ndislikes(X,Y) :- tired(X), clean(Y).\ncalm(X) :- excited(X), happy(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- strong(X), brave(Y).\ntall(X) :- curious(X).\nsmooth(phone).\nlikes(eve,pencil).\nlikes(george,car).\nfriend(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all Y, if there exists W such that person Y is brave and person Y dislikes object W and object W is big, then person Y is brave.\nFor all X, if there exists A such that person X is tall and person X is a friend of person A and person A is excited, then person X is calm.\nFor all Y, Z, if there exists B such that object Y is big and person Z is hungry and person B dislikes object Y, then person Z dislikes object Y.\nFor all X, if there exists V such that person X is clever and person X is a friend of person V and person V is weak, then person X is brave.\nFor all X, if person X is calm, then person X is bored.\nFor all X, Y, if person X is tired and object Y is clean, then person X dislikes object Y.\nFor all X, if person X is excited and person X is happy, then person X is calm.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is strong and person Y is brave, then person X is a sibling of person Y.\nFor all X, if person X is curious, then person X is tall.\n\nAnd the following facts:\nphone is smooth.\neve likes pencil.\ngeorge likes car.\neve is a friend of frank.\n\nQUESTION:\nCould george is strong explain phone is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 423,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "clever(X) :- brave(X).\nfunny(X) :- clever(X).\ncurious(X) :- funny(X).\nhappy(X) :- curious(X).\nfriendly(X) :- happy(X).\nexcited(Z) :- calm(Z).\nrough(Y) :- heavy(Y), likes(V,Y), strong(V).\nred(Y) :- heavy(Y).\nsibling(X,Z) :- strong(Z), tall(X), red(B).\nwet(Y) :- heavy(Y).\nhard(X) :- light(X), owns(A,X), sad(A).\nrough(Z) :- rough(Z), dislikes(W,Z), excited(W).\nnew(X) :- light(X), smooth(X).\nowns(X,Y) :- tall(X), clean(Y), dislikes(X,Y).\nparent(X,Y) :- sad(X), tall(Y).\nbrave(eve).\nclean(phone).\nparent(frank,george).\ndislikes(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all Z, if person Z is calm, then person Z is excited.\nFor all Y, if there exists V such that object Y is heavy and person V likes object Y and person V is strong, then object Y is rough.\nFor all Y, if object Y is heavy, then object Y is red.\nFor all X, Z, if there exists B such that person Z is strong and person X is tall and object B is red, then person X is a sibling of person Z.\nFor all Y, if object Y is heavy, then object Y is wet.\nFor all X, if there exists A such that object X is light and person A owns object X and person A is sad, then object X is hard.\nFor all Z, if there exists W such that object Z is rough and person W dislikes object Z and person W is excited, then object Z is rough.\nFor all X, if object X is light and object X is smooth, then object X is new.\nFor all X, Y, if person X is tall and object Y is clean and person X dislikes object Y, then person X owns object Y.\nFor all X, Y, if person X is sad and person Y is tall, then person X is a parent of person Y.\n\nAnd the following facts:\neve is brave.\nphone is clean.\nfrank is a parent of george.\neve dislikes phone.\n\nQUESTION:\nIs eve is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 424,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(george).",
    "c": "clever(X) :- brave(X).\nfunny(X) :- clever(X).\ncurious(X) :- funny(X).\nhappy(X) :- curious(X).\nfriendly(X) :- happy(X).\nexcited(Z) :- calm(Z).\nrough(Y) :- heavy(Y), likes(V,Y), strong(V).\nred(Y) :- heavy(Y).\nsibling(X,Z) :- strong(Z), tall(X), red(B).\nwet(Y) :- heavy(Y).\nhard(X) :- light(X), owns(A,X), sad(A).\nrough(Z) :- rough(Z), dislikes(W,Z), excited(W).\nnew(X) :- light(X), smooth(X).\nowns(X,Y) :- tall(X), clean(Y), dislikes(X,Y).\nparent(X,Y) :- sad(X), tall(Y).\nbrave(eve).\nclean(phone).\nparent(frank,george).\ndislikes(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all Z, if person Z is calm, then person Z is excited.\nFor all Y, if there exists V such that object Y is heavy and person V likes object Y and person V is strong, then object Y is rough.\nFor all Y, if object Y is heavy, then object Y is red.\nFor all X, Z, if there exists B such that person Z is strong and person X is tall and object B is red, then person X is a sibling of person Z.\nFor all Y, if object Y is heavy, then object Y is wet.\nFor all X, if there exists A such that object X is light and person A owns object X and person A is sad, then object X is hard.\nFor all Z, if there exists W such that object Z is rough and person W dislikes object Z and person W is excited, then object Z is rough.\nFor all X, if object X is light and object X is smooth, then object X is new.\nFor all X, Y, if person X is tall and object Y is clean and person X dislikes object Y, then person X owns object Y.\nFor all X, Y, if person X is sad and person Y is tall, then person X is a parent of person Y.\n\nAnd the following facts:\neve is brave.\nphone is clean.\nfrank is a parent of george.\neve dislikes phone.\n\nQUESTION:\nIs george is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 425,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "clever(X) :- brave(X).\nfunny(X) :- clever(X).\ncurious(X) :- funny(X).\nhappy(X) :- curious(X).\nfriendly(X) :- happy(X).\nexcited(Z) :- calm(Z).\nrough(Y) :- heavy(Y), likes(V,Y), strong(V).\nred(Y) :- heavy(Y).\nsibling(X,Z) :- strong(Z), tall(X), red(B).\nwet(Y) :- heavy(Y).\nhard(X) :- light(X), owns(A,X), sad(A).\nrough(Z) :- rough(Z), dislikes(W,Z), excited(W).\nnew(X) :- light(X), smooth(X).\nowns(X,Y) :- tall(X), clean(Y), dislikes(X,Y).\nparent(X,Y) :- sad(X), tall(Y).\nfriendly(eve).\nclean(phone).\nparent(frank,george).\ndislikes(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all Z, if person Z is calm, then person Z is excited.\nFor all Y, if there exists V such that object Y is heavy and person V likes object Y and person V is strong, then object Y is rough.\nFor all Y, if object Y is heavy, then object Y is red.\nFor all X, Z, if there exists B such that person Z is strong and person X is tall and object B is red, then person X is a sibling of person Z.\nFor all Y, if object Y is heavy, then object Y is wet.\nFor all X, if there exists A such that object X is light and person A owns object X and person A is sad, then object X is hard.\nFor all Z, if there exists W such that object Z is rough and person W dislikes object Z and person W is excited, then object Z is rough.\nFor all X, if object X is light and object X is smooth, then object X is new.\nFor all X, Y, if person X is tall and object Y is clean and person X dislikes object Y, then person X owns object Y.\nFor all X, Y, if person X is sad and person Y is tall, then person X is a parent of person Y.\n\nAnd the following facts:\neve is friendly.\nphone is clean.\nfrank is a parent of george.\neve dislikes phone.\n\nQUESTION:\nCould eve is brave explain eve is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 426,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "clever(X) :- brave(X).\nfunny(X) :- clever(X).\ncurious(X) :- funny(X).\nhappy(X) :- curious(X).\nfriendly(X) :- happy(X).\nexcited(Z) :- calm(Z).\nrough(Y) :- heavy(Y), likes(V,Y), strong(V).\nred(Y) :- heavy(Y).\nsibling(X,Z) :- strong(Z), tall(X), red(B).\nwet(Y) :- heavy(Y).\nhard(X) :- light(X), owns(A,X), sad(A).\nrough(Z) :- rough(Z), dislikes(W,Z), excited(W).\nnew(X) :- light(X), smooth(X).\nowns(X,Y) :- tall(X), clean(Y), dislikes(X,Y).\nparent(X,Y) :- sad(X), tall(Y).\nfriendly(eve).\nclean(phone).\nparent(frank,george).\ndislikes(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all Z, if person Z is calm, then person Z is excited.\nFor all Y, if there exists V such that object Y is heavy and person V likes object Y and person V is strong, then object Y is rough.\nFor all Y, if object Y is heavy, then object Y is red.\nFor all X, Z, if there exists B such that person Z is strong and person X is tall and object B is red, then person X is a sibling of person Z.\nFor all Y, if object Y is heavy, then object Y is wet.\nFor all X, if there exists A such that object X is light and person A owns object X and person A is sad, then object X is hard.\nFor all Z, if there exists W such that object Z is rough and person W dislikes object Z and person W is excited, then object Z is rough.\nFor all X, if object X is light and object X is smooth, then object X is new.\nFor all X, Y, if person X is tall and object Y is clean and person X dislikes object Y, then person X owns object Y.\nFor all X, Y, if person X is sad and person Y is tall, then person X is a parent of person Y.\n\nAnd the following facts:\neve is friendly.\nphone is clean.\nfrank is a parent of george.\neve dislikes phone.\n\nQUESTION:\nCould phone is soft explain eve is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 427,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(carol).",
    "c": "curious(X) :- weak(X).\nstrong(X) :- curious(X).\ntired(X) :- strong(X).\nexcited(X) :- tired(X).\nbrave(X) :- excited(X).\nold(X) :- new(X), friendly(A).\ndirty(Y) :- light(Y), likes(U,Y), funny(U).\nfriendly(Y) :- hungry(Y), sibling(Y,B), funny(B).\ntall(Z) :- friendly(Z).\nfriend(Z,X) :- sad(Z), sad(X), tall(A).\nsmall(X) :- light(X), big(X).\ntall(X) :- busy(X).\ncalm(X) :- tall(X).\nclean(X) :- dirty(X).\nangry(X) :- happy(X), tall(X).\nweak(carol).\nold(car).\nenemy(bob,george).\nlikes(bob,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if there exists A such that object X is new and person A is friendly, then object X is old.\nFor all Y, if there exists U such that object Y is light and person U likes object Y and person U is funny, then object Y is dirty.\nFor all Y, if there exists B such that person Y is hungry and person Y is a sibling of person B and person B is funny, then person Y is friendly.\nFor all Z, if person Z is friendly, then person Z is tall.\nFor all X, Z, if there exists A such that person Z is sad and person X is sad and person A is tall, then person Z is a friend of person X.\nFor all X, if object X is light and object X is big, then object X is small.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if person X is happy and person X is tall, then person X is angry.\n\nAnd the following facts:\ncarol is weak.\ncar is old.\nbob is an enemy of george.\nbob likes book.\n\nQUESTION:\nIs carol is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 428,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(dave).",
    "c": "curious(X) :- weak(X).\nstrong(X) :- curious(X).\ntired(X) :- strong(X).\nexcited(X) :- tired(X).\nbrave(X) :- excited(X).\nold(X) :- new(X), friendly(A).\ndirty(Y) :- light(Y), likes(U,Y), funny(U).\nfriendly(Y) :- hungry(Y), sibling(Y,B), funny(B).\ntall(Z) :- friendly(Z).\nfriend(Z,X) :- sad(Z), sad(X), tall(A).\nsmall(X) :- light(X), big(X).\ntall(X) :- busy(X).\ncalm(X) :- tall(X).\nclean(X) :- dirty(X).\nangry(X) :- happy(X), tall(X).\nweak(carol).\nold(car).\nenemy(bob,george).\nlikes(bob,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if there exists A such that object X is new and person A is friendly, then object X is old.\nFor all Y, if there exists U such that object Y is light and person U likes object Y and person U is funny, then object Y is dirty.\nFor all Y, if there exists B such that person Y is hungry and person Y is a sibling of person B and person B is funny, then person Y is friendly.\nFor all Z, if person Z is friendly, then person Z is tall.\nFor all X, Z, if there exists A such that person Z is sad and person X is sad and person A is tall, then person Z is a friend of person X.\nFor all X, if object X is light and object X is big, then object X is small.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if person X is happy and person X is tall, then person X is angry.\n\nAnd the following facts:\ncarol is weak.\ncar is old.\nbob is an enemy of george.\nbob likes book.\n\nQUESTION:\nIs dave is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 429,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(carol).",
    "c": "curious(X) :- weak(X).\nstrong(X) :- curious(X).\ntired(X) :- strong(X).\nexcited(X) :- tired(X).\nbrave(X) :- excited(X).\nold(X) :- new(X), friendly(A).\ndirty(Y) :- light(Y), likes(U,Y), funny(U).\nfriendly(Y) :- hungry(Y), sibling(Y,B), funny(B).\ntall(Z) :- friendly(Z).\nfriend(Z,X) :- sad(Z), sad(X), tall(A).\nsmall(X) :- light(X), big(X).\ntall(X) :- busy(X).\ncalm(X) :- tall(X).\nclean(X) :- dirty(X).\nangry(X) :- happy(X), tall(X).\nbrave(carol).\nold(car).\nenemy(bob,george).\nlikes(bob,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if there exists A such that object X is new and person A is friendly, then object X is old.\nFor all Y, if there exists U such that object Y is light and person U likes object Y and person U is funny, then object Y is dirty.\nFor all Y, if there exists B such that person Y is hungry and person Y is a sibling of person B and person B is funny, then person Y is friendly.\nFor all Z, if person Z is friendly, then person Z is tall.\nFor all X, Z, if there exists A such that person Z is sad and person X is sad and person A is tall, then person Z is a friend of person X.\nFor all X, if object X is light and object X is big, then object X is small.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if person X is happy and person X is tall, then person X is angry.\n\nAnd the following facts:\ncarol is brave.\ncar is old.\nbob is an enemy of george.\nbob likes book.\n\nQUESTION:\nCould carol is weak explain carol is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 430,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "old(apple).",
    "c": "curious(X) :- weak(X).\nstrong(X) :- curious(X).\ntired(X) :- strong(X).\nexcited(X) :- tired(X).\nbrave(X) :- excited(X).\nold(X) :- new(X), friendly(A).\ndirty(Y) :- light(Y), likes(U,Y), funny(U).\nfriendly(Y) :- hungry(Y), sibling(Y,B), funny(B).\ntall(Z) :- friendly(Z).\nfriend(Z,X) :- sad(Z), sad(X), tall(A).\nsmall(X) :- light(X), big(X).\ntall(X) :- busy(X).\ncalm(X) :- tall(X).\nclean(X) :- dirty(X).\nangry(X) :- happy(X), tall(X).\nbrave(carol).\nold(car).\nenemy(bob,george).\nlikes(bob,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if there exists A such that object X is new and person A is friendly, then object X is old.\nFor all Y, if there exists U such that object Y is light and person U likes object Y and person U is funny, then object Y is dirty.\nFor all Y, if there exists B such that person Y is hungry and person Y is a sibling of person B and person B is funny, then person Y is friendly.\nFor all Z, if person Z is friendly, then person Z is tall.\nFor all X, Z, if there exists A such that person Z is sad and person X is sad and person A is tall, then person Z is a friend of person X.\nFor all X, if object X is light and object X is big, then object X is small.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if person X is happy and person X is tall, then person X is angry.\n\nAnd the following facts:\ncarol is brave.\ncar is old.\nbob is an enemy of george.\nbob likes book.\n\nQUESTION:\nCould apple is old explain carol is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 431,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "friendly(alice).",
    "c": "brave(X) :- funny(X).\ntall(X) :- brave(X).\ncurious(X) :- tall(X).\nangry(X) :- curious(X).\nexcited(X) :- angry(X).\ncalm(X) :- excited(X).\nbrave(X) :- calm(X).\nclever(X) :- brave(X).\nstrong(X) :- clever(X).\nfriendly(X) :- strong(X).\nnew(Z) :- small(Z), bored(D).\nsmall(X) :- new(X).\nsad(X) :- happy(X).\nfriend(X,Y) :- busy(Y), sad(X), wet(C).\nhappy(X) :- weak(X).\nfunny(alice).\ndislikes(bob,ball).\nenemy(carol,eve).\nsibling(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all Z, if there exists D such that object Z is small and person D is bored, then object Z is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if person X is happy, then person X is sad.\nFor all X, Y, if there exists C such that person Y is busy and person X is sad and object C is wet, then person X is a friend of person Y.\nFor all X, if person X is weak, then person X is happy.\n\nAnd the following facts:\nalice is funny.\nbob dislikes ball.\ncarol is an enemy of eve.\nbob is a sibling of eve.\n\nQUESTION:\nIs alice is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 432,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(bob).",
    "c": "brave(X) :- funny(X).\ntall(X) :- brave(X).\ncurious(X) :- tall(X).\nangry(X) :- curious(X).\nexcited(X) :- angry(X).\ncalm(X) :- excited(X).\nbrave(X) :- calm(X).\nclever(X) :- brave(X).\nstrong(X) :- clever(X).\nfriendly(X) :- strong(X).\nnew(Z) :- small(Z), bored(D).\nsmall(X) :- new(X).\nsad(X) :- happy(X).\nfriend(X,Y) :- busy(Y), sad(X), wet(C).\nhappy(X) :- weak(X).\nfunny(alice).\ndislikes(bob,ball).\nenemy(carol,eve).\nsibling(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all Z, if there exists D such that object Z is small and person D is bored, then object Z is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if person X is happy, then person X is sad.\nFor all X, Y, if there exists C such that person Y is busy and person X is sad and object C is wet, then person X is a friend of person Y.\nFor all X, if person X is weak, then person X is happy.\n\nAnd the following facts:\nalice is funny.\nbob dislikes ball.\ncarol is an enemy of eve.\nbob is a sibling of eve.\n\nQUESTION:\nIs bob is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 433,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(alice).",
    "c": "brave(X) :- funny(X).\ntall(X) :- brave(X).\ncurious(X) :- tall(X).\nangry(X) :- curious(X).\nexcited(X) :- angry(X).\ncalm(X) :- excited(X).\nbrave(X) :- calm(X).\nclever(X) :- brave(X).\nstrong(X) :- clever(X).\nfriendly(X) :- strong(X).\nnew(Z) :- small(Z), bored(D).\nsmall(X) :- new(X).\nsad(X) :- happy(X).\nfriend(X,Y) :- busy(Y), sad(X), wet(C).\nhappy(X) :- weak(X).\nfriendly(alice).\ndislikes(bob,ball).\nenemy(carol,eve).\nsibling(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all Z, if there exists D such that object Z is small and person D is bored, then object Z is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if person X is happy, then person X is sad.\nFor all X, Y, if there exists C such that person Y is busy and person X is sad and object C is wet, then person X is a friend of person Y.\nFor all X, if person X is weak, then person X is happy.\n\nAnd the following facts:\nalice is friendly.\nbob dislikes ball.\ncarol is an enemy of eve.\nbob is a sibling of eve.\n\nQUESTION:\nCould alice is funny explain alice is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 434,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "angry(bob).",
    "c": "brave(X) :- funny(X).\ntall(X) :- brave(X).\ncurious(X) :- tall(X).\nangry(X) :- curious(X).\nexcited(X) :- angry(X).\ncalm(X) :- excited(X).\nbrave(X) :- calm(X).\nclever(X) :- brave(X).\nstrong(X) :- clever(X).\nfriendly(X) :- strong(X).\nnew(Z) :- small(Z), bored(D).\nsmall(X) :- new(X).\nsad(X) :- happy(X).\nfriend(X,Y) :- busy(Y), sad(X), wet(C).\nhappy(X) :- weak(X).\nfriendly(alice).\ndislikes(bob,ball).\nenemy(carol,eve).\nsibling(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all Z, if there exists D such that object Z is small and person D is bored, then object Z is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if person X is happy, then person X is sad.\nFor all X, Y, if there exists C such that person Y is busy and person X is sad and object C is wet, then person X is a friend of person Y.\nFor all X, if person X is weak, then person X is happy.\n\nAnd the following facts:\nalice is friendly.\nbob dislikes ball.\ncarol is an enemy of eve.\nbob is a sibling of eve.\n\nQUESTION:\nCould bob is angry explain alice is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 435,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(frank).",
    "c": "weak(X) :- tired(X).\nhappy(X) :- weak(X).\nbrave(X) :- happy(X).\ntired(X) :- brave(X).\nsad(X) :- tired(X).\nfriendly(X) :- sad(X).\nexcited(X) :- friendly(X).\nhungry(X) :- excited(X).\nangry(X) :- hungry(X).\nclever(X) :- angry(X).\nwet(X) :- rough(X), likes(V,X), tall(V).\nstrong(Z) :- curious(Z), likes(Z,W), small(W).\nheavy(X) :- big(X), small(X).\nred(X) :- hard(X).\nstrong(X) :- tall(X).\ntired(frank).\nparent(dave,alice).\nlikes(dave,apple).\nred(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if there exists V such that object X is rough and person V likes object X and person V is tall, then object X is wet.\nFor all Z, if there exists W such that person Z is curious and person Z likes object W and object W is small, then person Z is strong.\nFor all X, if object X is big and object X is small, then object X is heavy.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is tall, then person X is strong.\n\nAnd the following facts:\nfrank is tired.\ndave is a parent of alice.\ndave likes apple.\napple is red.\n\nQUESTION:\nIs frank is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 436,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(alice).",
    "c": "weak(X) :- tired(X).\nhappy(X) :- weak(X).\nbrave(X) :- happy(X).\ntired(X) :- brave(X).\nsad(X) :- tired(X).\nfriendly(X) :- sad(X).\nexcited(X) :- friendly(X).\nhungry(X) :- excited(X).\nangry(X) :- hungry(X).\nclever(X) :- angry(X).\nwet(X) :- rough(X), likes(V,X), tall(V).\nstrong(Z) :- curious(Z), likes(Z,W), small(W).\nheavy(X) :- big(X), small(X).\nred(X) :- hard(X).\nstrong(X) :- tall(X).\ntired(frank).\nparent(dave,alice).\nlikes(dave,apple).\nred(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if there exists V such that object X is rough and person V likes object X and person V is tall, then object X is wet.\nFor all Z, if there exists W such that person Z is curious and person Z likes object W and object W is small, then person Z is strong.\nFor all X, if object X is big and object X is small, then object X is heavy.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is tall, then person X is strong.\n\nAnd the following facts:\nfrank is tired.\ndave is a parent of alice.\ndave likes apple.\napple is red.\n\nQUESTION:\nIs alice is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 437,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(frank).",
    "c": "weak(X) :- tired(X).\nhappy(X) :- weak(X).\nbrave(X) :- happy(X).\ntired(X) :- brave(X).\nsad(X) :- tired(X).\nfriendly(X) :- sad(X).\nexcited(X) :- friendly(X).\nhungry(X) :- excited(X).\nangry(X) :- hungry(X).\nclever(X) :- angry(X).\nwet(X) :- rough(X), likes(V,X), tall(V).\nstrong(Z) :- curious(Z), likes(Z,W), small(W).\nheavy(X) :- big(X), small(X).\nred(X) :- hard(X).\nstrong(X) :- tall(X).\nclever(frank).\nparent(dave,alice).\nlikes(dave,apple).\nred(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if there exists V such that object X is rough and person V likes object X and person V is tall, then object X is wet.\nFor all Z, if there exists W such that person Z is curious and person Z likes object W and object W is small, then person Z is strong.\nFor all X, if object X is big and object X is small, then object X is heavy.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is tall, then person X is strong.\n\nAnd the following facts:\nfrank is clever.\ndave is a parent of alice.\ndave likes apple.\napple is red.\n\nQUESTION:\nCould frank is tired explain frank is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 438,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(apple).",
    "c": "weak(X) :- tired(X).\nhappy(X) :- weak(X).\nbrave(X) :- happy(X).\ntired(X) :- brave(X).\nsad(X) :- tired(X).\nfriendly(X) :- sad(X).\nexcited(X) :- friendly(X).\nhungry(X) :- excited(X).\nangry(X) :- hungry(X).\nclever(X) :- angry(X).\nwet(X) :- rough(X), likes(V,X), tall(V).\nstrong(Z) :- curious(Z), likes(Z,W), small(W).\nheavy(X) :- big(X), small(X).\nred(X) :- hard(X).\nstrong(X) :- tall(X).\nclever(frank).\nparent(dave,alice).\nlikes(dave,apple).\nred(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if there exists V such that object X is rough and person V likes object X and person V is tall, then object X is wet.\nFor all Z, if there exists W such that person Z is curious and person Z likes object W and object W is small, then person Z is strong.\nFor all X, if object X is big and object X is small, then object X is heavy.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is tall, then person X is strong.\n\nAnd the following facts:\nfrank is clever.\ndave is a parent of alice.\ndave likes apple.\napple is red.\n\nQUESTION:\nCould apple is rough explain frank is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 439,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(frank).",
    "c": "hungry(X) :- tall(X).\nsad(X) :- hungry(X).\ncurious(X) :- sad(X).\nbusy(X) :- curious(X).\nfriendly(X) :- busy(X).\nweak(X) :- friendly(X).\nbored(X) :- weak(X).\nexcited(X) :- bored(X).\ntired(X) :- excited(X).\nhappy(X) :- tired(X).\nheavy(X) :- rough(X).\ncalm(Z) :- strong(Z), likes(Z,A), new(A).\nstrong(X) :- calm(X), friend(X,B), brave(B).\nbig(X) :- small(X).\nstrong(X) :- funny(X).\ntall(frank).\nlikes(carol,apple).\nnew(phone).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if object X is rough, then object X is heavy.\nFor all Z, if there exists A such that person Z is strong and person Z likes object A and object A is new, then person Z is calm.\nFor all X, if there exists B such that person X is calm and person X is a friend of person B and person B is brave, then person X is strong.\nFor all X, if object X is small, then object X is big.\nFor all X, if person X is funny, then person X is strong.\n\nAnd the following facts:\nfrank is tall.\ncarol likes apple.\nphone is new.\ndave is a parent of frank.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 440,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(book).",
    "c": "hungry(X) :- tall(X).\nsad(X) :- hungry(X).\ncurious(X) :- sad(X).\nbusy(X) :- curious(X).\nfriendly(X) :- busy(X).\nweak(X) :- friendly(X).\nbored(X) :- weak(X).\nexcited(X) :- bored(X).\ntired(X) :- excited(X).\nhappy(X) :- tired(X).\nheavy(X) :- rough(X).\ncalm(Z) :- strong(Z), likes(Z,A), new(A).\nstrong(X) :- calm(X), friend(X,B), brave(B).\nbig(X) :- small(X).\nstrong(X) :- funny(X).\ntall(frank).\nlikes(carol,apple).\nnew(phone).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if object X is rough, then object X is heavy.\nFor all Z, if there exists A such that person Z is strong and person Z likes object A and object A is new, then person Z is calm.\nFor all X, if there exists B such that person X is calm and person X is a friend of person B and person B is brave, then person X is strong.\nFor all X, if object X is small, then object X is big.\nFor all X, if person X is funny, then person X is strong.\n\nAnd the following facts:\nfrank is tall.\ncarol likes apple.\nphone is new.\ndave is a parent of frank.\n\nQUESTION:\nIs book is heavy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 441,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(frank).",
    "c": "hungry(X) :- tall(X).\nsad(X) :- hungry(X).\ncurious(X) :- sad(X).\nbusy(X) :- curious(X).\nfriendly(X) :- busy(X).\nweak(X) :- friendly(X).\nbored(X) :- weak(X).\nexcited(X) :- bored(X).\ntired(X) :- excited(X).\nhappy(X) :- tired(X).\nheavy(X) :- rough(X).\ncalm(Z) :- strong(Z), likes(Z,A), new(A).\nstrong(X) :- calm(X), friend(X,B), brave(B).\nbig(X) :- small(X).\nstrong(X) :- funny(X).\nhappy(frank).\nlikes(carol,apple).\nnew(phone).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if object X is rough, then object X is heavy.\nFor all Z, if there exists A such that person Z is strong and person Z likes object A and object A is new, then person Z is calm.\nFor all X, if there exists B such that person X is calm and person X is a friend of person B and person B is brave, then person X is strong.\nFor all X, if object X is small, then object X is big.\nFor all X, if person X is funny, then person X is strong.\n\nAnd the following facts:\nfrank is happy.\ncarol likes apple.\nphone is new.\ndave is a parent of frank.\n\nQUESTION:\nCould frank is tall explain frank is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 442,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(dave).",
    "c": "hungry(X) :- tall(X).\nsad(X) :- hungry(X).\ncurious(X) :- sad(X).\nbusy(X) :- curious(X).\nfriendly(X) :- busy(X).\nweak(X) :- friendly(X).\nbored(X) :- weak(X).\nexcited(X) :- bored(X).\ntired(X) :- excited(X).\nhappy(X) :- tired(X).\nheavy(X) :- rough(X).\ncalm(Z) :- strong(Z), likes(Z,A), new(A).\nstrong(X) :- calm(X), friend(X,B), brave(B).\nbig(X) :- small(X).\nstrong(X) :- funny(X).\nhappy(frank).\nlikes(carol,apple).\nnew(phone).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if object X is rough, then object X is heavy.\nFor all Z, if there exists A such that person Z is strong and person Z likes object A and object A is new, then person Z is calm.\nFor all X, if there exists B such that person X is calm and person X is a friend of person B and person B is brave, then person X is strong.\nFor all X, if object X is small, then object X is big.\nFor all X, if person X is funny, then person X is strong.\n\nAnd the following facts:\nfrank is happy.\ncarol likes apple.\nphone is new.\ndave is a parent of frank.\n\nQUESTION:\nCould dave is tall explain frank is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 443,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clean(car).",
    "c": "wet(X) :- dirty(X).\nold(X) :- wet(X).\nsmall(X) :- old(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nhard(X) :- light(X).\nrough(X) :- hard(X).\nred(X) :- rough(X).\nsmooth(X) :- red(X).\nclean(X) :- smooth(X).\ncalm(X) :- hungry(X), parent(X,U), hungry(U).\nfunny(Z) :- curious(Z).\nfriend(Z,X) :- excited(Z), happy(X), likes(X,V).\nweak(X) :- tall(X), tired(X).\ntall(X) :- busy(X), tired(X).\ndirty(car).\nparent(eve,carol).\nhungry(carol).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if there exists U such that person X is hungry and person X is a parent of person U and person U is hungry, then person X is calm.\nFor all Z, if person Z is curious, then person Z is funny.\nFor all X, Z, if there exists V such that person Z is excited and person X is happy and person X likes object V, then person Z is a friend of person X.\nFor all X, if person X is tall and person X is tired, then person X is weak.\nFor all X, if person X is busy and person X is tired, then person X is tall.\n\nAnd the following facts:\ncar is dirty.\neve is a parent of carol.\ncarol is hungry.\nfrank is an enemy of dave.\n\nQUESTION:\nIs car is clean true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 444,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(ball).",
    "c": "wet(X) :- dirty(X).\nold(X) :- wet(X).\nsmall(X) :- old(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nhard(X) :- light(X).\nrough(X) :- hard(X).\nred(X) :- rough(X).\nsmooth(X) :- red(X).\nclean(X) :- smooth(X).\ncalm(X) :- hungry(X), parent(X,U), hungry(U).\nfunny(Z) :- curious(Z).\nfriend(Z,X) :- excited(Z), happy(X), likes(X,V).\nweak(X) :- tall(X), tired(X).\ntall(X) :- busy(X), tired(X).\ndirty(car).\nparent(eve,carol).\nhungry(carol).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if there exists U such that person X is hungry and person X is a parent of person U and person U is hungry, then person X is calm.\nFor all Z, if person Z is curious, then person Z is funny.\nFor all X, Z, if there exists V such that person Z is excited and person X is happy and person X likes object V, then person Z is a friend of person X.\nFor all X, if person X is tall and person X is tired, then person X is weak.\nFor all X, if person X is busy and person X is tired, then person X is tall.\n\nAnd the following facts:\ncar is dirty.\neve is a parent of carol.\ncarol is hungry.\nfrank is an enemy of dave.\n\nQUESTION:\nIs ball is old true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 445,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(car).",
    "c": "wet(X) :- dirty(X).\nold(X) :- wet(X).\nsmall(X) :- old(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nhard(X) :- light(X).\nrough(X) :- hard(X).\nred(X) :- rough(X).\nsmooth(X) :- red(X).\nclean(X) :- smooth(X).\ncalm(X) :- hungry(X), parent(X,U), hungry(U).\nfunny(Z) :- curious(Z).\nfriend(Z,X) :- excited(Z), happy(X), likes(X,V).\nweak(X) :- tall(X), tired(X).\ntall(X) :- busy(X), tired(X).\nclean(car).\nparent(eve,carol).\nhungry(carol).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if there exists U such that person X is hungry and person X is a parent of person U and person U is hungry, then person X is calm.\nFor all Z, if person Z is curious, then person Z is funny.\nFor all X, Z, if there exists V such that person Z is excited and person X is happy and person X likes object V, then person Z is a friend of person X.\nFor all X, if person X is tall and person X is tired, then person X is weak.\nFor all X, if person X is busy and person X is tired, then person X is tall.\n\nAnd the following facts:\ncar is clean.\neve is a parent of carol.\ncarol is hungry.\nfrank is an enemy of dave.\n\nQUESTION:\nCould car is dirty explain car is clean?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 446,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "heavy(book).",
    "c": "wet(X) :- dirty(X).\nold(X) :- wet(X).\nsmall(X) :- old(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nhard(X) :- light(X).\nrough(X) :- hard(X).\nred(X) :- rough(X).\nsmooth(X) :- red(X).\nclean(X) :- smooth(X).\ncalm(X) :- hungry(X), parent(X,U), hungry(U).\nfunny(Z) :- curious(Z).\nfriend(Z,X) :- excited(Z), happy(X), likes(X,V).\nweak(X) :- tall(X), tired(X).\ntall(X) :- busy(X), tired(X).\nclean(car).\nparent(eve,carol).\nhungry(carol).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if there exists U such that person X is hungry and person X is a parent of person U and person U is hungry, then person X is calm.\nFor all Z, if person Z is curious, then person Z is funny.\nFor all X, Z, if there exists V such that person Z is excited and person X is happy and person X likes object V, then person Z is a friend of person X.\nFor all X, if person X is tall and person X is tired, then person X is weak.\nFor all X, if person X is busy and person X is tired, then person X is tall.\n\nAnd the following facts:\ncar is clean.\neve is a parent of carol.\ncarol is hungry.\nfrank is an enemy of dave.\n\nQUESTION:\nCould book is heavy explain car is clean?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 447,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(bob).",
    "c": "tired(X) :- clever(X).\nbored(Y) :- calm(Y), owns(Y,A), smooth(A).\ntall(X) :- angry(X), friend(X,A), excited(A).\nwet(Y) :- rough(Y).\nbusy(X) :- happy(X), calm(B).\nlikes(X,Y) :- hard(Y), busy(X).\ndislikes(Y,Z) :- sad(Y), red(Z), hard(D).\nparent(Y,X) :- happy(Y), curious(X).\nsmooth(Z) :- new(Z), likes(W,Z), hungry(W).\nparent(X,Y) :- bored(X), funny(Y).\nhard(X) :- soft(X), clean(X).\nsmall(X) :- heavy(X).\nfriendly(X) :- happy(X), bored(X).\nnew(X) :- clean(X), hard(X).\nlight(X) :- smooth(X), new(X).\nclever(bob).\nsibling(frank,alice).\ndislikes(bob,apple).\nfriendly(frank).\nlikes(alice,phone).\nparent(carol,bob).\nparent(bob,alice).\nlikes(bob,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is tired.\nFor all Y, if there exists A such that person Y is calm and person Y owns object A and object A is smooth, then person Y is bored.\nFor all X, if there exists A such that person X is angry and person X is a friend of person A and person A is excited, then person X is tall.\nFor all Y, if object Y is rough, then object Y is wet.\nFor all X, if there exists B such that person X is happy and person B is calm, then person X is busy.\nFor all X, Y, if object Y is hard and person X is busy, then person X likes object Y.\nFor all Y, Z, if there exists D such that person Y is sad and object Z is red and object D is hard, then person Y dislikes object Z.\nFor all X, Y, if person Y is happy and person X is curious, then person Y is a parent of person X.\nFor all Z, if there exists W such that object Z is new and person W likes object Z and person W is hungry, then object Z is smooth.\nFor all X, Y, if person X is bored and person Y is funny, then person X is a parent of person Y.\nFor all X, if object X is soft and object X is clean, then object X is hard.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if person X is happy and person X is bored, then person X is friendly.\nFor all X, if object X is clean and object X is hard, then object X is new.\nFor all X, if object X is smooth and object X is new, then object X is light.\n\nAnd the following facts:\nbob is clever.\nfrank is a sibling of alice.\nbob dislikes apple.\nfrank is friendly.\nalice likes phone.\ncarol is a parent of bob.\nbob is a parent of alice.\nbob likes apple.\n\nQUESTION:\nIs bob is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 448,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clean(book).",
    "c": "tired(X) :- clever(X).\nbored(Y) :- calm(Y), owns(Y,A), smooth(A).\ntall(X) :- angry(X), friend(X,A), excited(A).\nwet(Y) :- rough(Y).\nbusy(X) :- happy(X), calm(B).\nlikes(X,Y) :- hard(Y), busy(X).\ndislikes(Y,Z) :- sad(Y), red(Z), hard(D).\nparent(Y,X) :- happy(Y), curious(X).\nsmooth(Z) :- new(Z), likes(W,Z), hungry(W).\nparent(X,Y) :- bored(X), funny(Y).\nhard(X) :- soft(X), clean(X).\nsmall(X) :- heavy(X).\nfriendly(X) :- happy(X), bored(X).\nnew(X) :- clean(X), hard(X).\nlight(X) :- smooth(X), new(X).\nclever(bob).\nsibling(frank,alice).\ndislikes(bob,apple).\nfriendly(frank).\nlikes(alice,phone).\nparent(carol,bob).\nparent(bob,alice).\nlikes(bob,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is tired.\nFor all Y, if there exists A such that person Y is calm and person Y owns object A and object A is smooth, then person Y is bored.\nFor all X, if there exists A such that person X is angry and person X is a friend of person A and person A is excited, then person X is tall.\nFor all Y, if object Y is rough, then object Y is wet.\nFor all X, if there exists B such that person X is happy and person B is calm, then person X is busy.\nFor all X, Y, if object Y is hard and person X is busy, then person X likes object Y.\nFor all Y, Z, if there exists D such that person Y is sad and object Z is red and object D is hard, then person Y dislikes object Z.\nFor all X, Y, if person Y is happy and person X is curious, then person Y is a parent of person X.\nFor all Z, if there exists W such that object Z is new and person W likes object Z and person W is hungry, then object Z is smooth.\nFor all X, Y, if person X is bored and person Y is funny, then person X is a parent of person Y.\nFor all X, if object X is soft and object X is clean, then object X is hard.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if person X is happy and person X is bored, then person X is friendly.\nFor all X, if object X is clean and object X is hard, then object X is new.\nFor all X, if object X is smooth and object X is new, then object X is light.\n\nAnd the following facts:\nbob is clever.\nfrank is a sibling of alice.\nbob dislikes apple.\nfrank is friendly.\nalice likes phone.\ncarol is a parent of bob.\nbob is a parent of alice.\nbob likes apple.\n\nQUESTION:\nIs book is clean true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 449,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(bob).",
    "c": "tired(X) :- clever(X).\nbored(Y) :- calm(Y), owns(Y,A), smooth(A).\ntall(X) :- angry(X), friend(X,A), excited(A).\nwet(Y) :- rough(Y).\nbusy(X) :- happy(X), calm(B).\nlikes(X,Y) :- hard(Y), busy(X).\ndislikes(Y,Z) :- sad(Y), red(Z), hard(D).\nparent(Y,X) :- happy(Y), curious(X).\nsmooth(Z) :- new(Z), likes(W,Z), hungry(W).\nparent(X,Y) :- bored(X), funny(Y).\nhard(X) :- soft(X), clean(X).\nsmall(X) :- heavy(X).\nfriendly(X) :- happy(X), bored(X).\nnew(X) :- clean(X), hard(X).\nlight(X) :- smooth(X), new(X).\ntired(bob).\nsibling(frank,alice).\ndislikes(bob,apple).\nfriendly(frank).\nlikes(alice,phone).\nparent(carol,bob).\nparent(bob,alice).\nlikes(bob,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is tired.\nFor all Y, if there exists A such that person Y is calm and person Y owns object A and object A is smooth, then person Y is bored.\nFor all X, if there exists A such that person X is angry and person X is a friend of person A and person A is excited, then person X is tall.\nFor all Y, if object Y is rough, then object Y is wet.\nFor all X, if there exists B such that person X is happy and person B is calm, then person X is busy.\nFor all X, Y, if object Y is hard and person X is busy, then person X likes object Y.\nFor all Y, Z, if there exists D such that person Y is sad and object Z is red and object D is hard, then person Y dislikes object Z.\nFor all X, Y, if person Y is happy and person X is curious, then person Y is a parent of person X.\nFor all Z, if there exists W such that object Z is new and person W likes object Z and person W is hungry, then object Z is smooth.\nFor all X, Y, if person X is bored and person Y is funny, then person X is a parent of person Y.\nFor all X, if object X is soft and object X is clean, then object X is hard.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if person X is happy and person X is bored, then person X is friendly.\nFor all X, if object X is clean and object X is hard, then object X is new.\nFor all X, if object X is smooth and object X is new, then object X is light.\n\nAnd the following facts:\nbob is tired.\nfrank is a sibling of alice.\nbob dislikes apple.\nfrank is friendly.\nalice likes phone.\ncarol is a parent of bob.\nbob is a parent of alice.\nbob likes apple.\n\nQUESTION:\nCould bob is clever explain bob is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 450,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "curious(frank).",
    "c": "tired(X) :- clever(X).\nbored(Y) :- calm(Y), owns(Y,A), smooth(A).\ntall(X) :- angry(X), friend(X,A), excited(A).\nwet(Y) :- rough(Y).\nbusy(X) :- happy(X), calm(B).\nlikes(X,Y) :- hard(Y), busy(X).\ndislikes(Y,Z) :- sad(Y), red(Z), hard(D).\nparent(Y,X) :- happy(Y), curious(X).\nsmooth(Z) :- new(Z), likes(W,Z), hungry(W).\nparent(X,Y) :- bored(X), funny(Y).\nhard(X) :- soft(X), clean(X).\nsmall(X) :- heavy(X).\nfriendly(X) :- happy(X), bored(X).\nnew(X) :- clean(X), hard(X).\nlight(X) :- smooth(X), new(X).\ntired(bob).\nsibling(frank,alice).\ndislikes(bob,apple).\nfriendly(frank).\nlikes(alice,phone).\nparent(carol,bob).\nparent(bob,alice).\nlikes(bob,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is tired.\nFor all Y, if there exists A such that person Y is calm and person Y owns object A and object A is smooth, then person Y is bored.\nFor all X, if there exists A such that person X is angry and person X is a friend of person A and person A is excited, then person X is tall.\nFor all Y, if object Y is rough, then object Y is wet.\nFor all X, if there exists B such that person X is happy and person B is calm, then person X is busy.\nFor all X, Y, if object Y is hard and person X is busy, then person X likes object Y.\nFor all Y, Z, if there exists D such that person Y is sad and object Z is red and object D is hard, then person Y dislikes object Z.\nFor all X, Y, if person Y is happy and person X is curious, then person Y is a parent of person X.\nFor all Z, if there exists W such that object Z is new and person W likes object Z and person W is hungry, then object Z is smooth.\nFor all X, Y, if person X is bored and person Y is funny, then person X is a parent of person Y.\nFor all X, if object X is soft and object X is clean, then object X is hard.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if person X is happy and person X is bored, then person X is friendly.\nFor all X, if object X is clean and object X is hard, then object X is new.\nFor all X, if object X is smooth and object X is new, then object X is light.\n\nAnd the following facts:\nbob is tired.\nfrank is a sibling of alice.\nbob dislikes apple.\nfrank is friendly.\nalice likes phone.\ncarol is a parent of bob.\nbob is a parent of alice.\nbob likes apple.\n\nQUESTION:\nCould frank is curious explain bob is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 451,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "curious(george).",
    "c": "curious(X) :- funny(X).\ntired(Y) :- busy(Y), friend(Y,W), brave(W).\nexcited(Y) :- happy(Y), smooth(B).\nhard(Y) :- hard(Y).\nsmooth(Z) :- soft(Z).\nsoft(X) :- smooth(X).\nheavy(Z) :- small(Z), owns(A,Z), tired(A).\ntired(Z) :- clever(Z).\ncalm(Y) :- calm(Y), dirty(D).\nlikes(Y,Z) :- friendly(Y), clean(Z), sibling(Y,U).\nsibling(X,Y) :- calm(X), excited(Y).\nbrave(X) :- clever(X).\nenemy(X,Y) :- hungry(X), angry(Y), sibling(X,Y).\ncalm(X) :- angry(X).\nnew(X) :- red(X).\nfunny(george).\nsibling(frank,alice).\nlikes(alice,phone).\nfriend(dave,alice).\nhappy(frank).\nparent(carol,frank).\nsibling(frank,dave).\nparent(george,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is curious.\nFor all Y, if there exists W such that person Y is busy and person Y is a friend of person W and person W is brave, then person Y is tired.\nFor all Y, if there exists B such that person Y is happy and object B is smooth, then person Y is excited.\nFor all Y, if object Y is hard, then object Y is hard.\nFor all Z, if object Z is soft, then object Z is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all Z, if there exists A such that object Z is small and person A owns object Z and person A is tired, then object Z is heavy.\nFor all Z, if person Z is clever, then person Z is tired.\nFor all Y, if there exists D such that person Y is calm and object D is dirty, then person Y is calm.\nFor all Y, Z, if there exists U such that person Y is friendly and object Z is clean and person Y is a sibling of person U, then person Y likes object Z.\nFor all X, Y, if person X is calm and person Y is excited, then person X is a sibling of person Y.\nFor all X, if person X is clever, then person X is brave.\nFor all X, Y, if person X is hungry and person Y is angry and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, if person X is angry, then person X is calm.\nFor all X, if object X is red, then object X is new.\n\nAnd the following facts:\ngeorge is funny.\nfrank is a sibling of alice.\nalice likes phone.\ndave is a friend of alice.\nfrank is happy.\ncarol is a parent of frank.\nfrank is a sibling of dave.\ngeorge is a parent of eve.\n\nQUESTION:\nIs george is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 452,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "curious(X) :- funny(X).\ntired(Y) :- busy(Y), friend(Y,W), brave(W).\nexcited(Y) :- happy(Y), smooth(B).\nhard(Y) :- hard(Y).\nsmooth(Z) :- soft(Z).\nsoft(X) :- smooth(X).\nheavy(Z) :- small(Z), owns(A,Z), tired(A).\ntired(Z) :- clever(Z).\ncalm(Y) :- calm(Y), dirty(D).\nlikes(Y,Z) :- friendly(Y), clean(Z), sibling(Y,U).\nsibling(X,Y) :- calm(X), excited(Y).\nbrave(X) :- clever(X).\nenemy(X,Y) :- hungry(X), angry(Y), sibling(X,Y).\ncalm(X) :- angry(X).\nnew(X) :- red(X).\nfunny(george).\nsibling(frank,alice).\nlikes(alice,phone).\nfriend(dave,alice).\nhappy(frank).\nparent(carol,frank).\nsibling(frank,dave).\nparent(george,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is curious.\nFor all Y, if there exists W such that person Y is busy and person Y is a friend of person W and person W is brave, then person Y is tired.\nFor all Y, if there exists B such that person Y is happy and object B is smooth, then person Y is excited.\nFor all Y, if object Y is hard, then object Y is hard.\nFor all Z, if object Z is soft, then object Z is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all Z, if there exists A such that object Z is small and person A owns object Z and person A is tired, then object Z is heavy.\nFor all Z, if person Z is clever, then person Z is tired.\nFor all Y, if there exists D such that person Y is calm and object D is dirty, then person Y is calm.\nFor all Y, Z, if there exists U such that person Y is friendly and object Z is clean and person Y is a sibling of person U, then person Y likes object Z.\nFor all X, Y, if person X is calm and person Y is excited, then person X is a sibling of person Y.\nFor all X, if person X is clever, then person X is brave.\nFor all X, Y, if person X is hungry and person Y is angry and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, if person X is angry, then person X is calm.\nFor all X, if object X is red, then object X is new.\n\nAnd the following facts:\ngeorge is funny.\nfrank is a sibling of alice.\nalice likes phone.\ndave is a friend of alice.\nfrank is happy.\ncarol is a parent of frank.\nfrank is a sibling of dave.\ngeorge is a parent of eve.\n\nQUESTION:\nIs ball is heavy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 453,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(george).",
    "c": "curious(X) :- funny(X).\ntired(Y) :- busy(Y), friend(Y,W), brave(W).\nexcited(Y) :- happy(Y), smooth(B).\nhard(Y) :- hard(Y).\nsmooth(Z) :- soft(Z).\nsoft(X) :- smooth(X).\nheavy(Z) :- small(Z), owns(A,Z), tired(A).\ntired(Z) :- clever(Z).\ncalm(Y) :- calm(Y), dirty(D).\nlikes(Y,Z) :- friendly(Y), clean(Z), sibling(Y,U).\nsibling(X,Y) :- calm(X), excited(Y).\nbrave(X) :- clever(X).\nenemy(X,Y) :- hungry(X), angry(Y), sibling(X,Y).\ncalm(X) :- angry(X).\nnew(X) :- red(X).\ncurious(george).\nsibling(frank,alice).\nlikes(alice,phone).\nfriend(dave,alice).\nhappy(frank).\nparent(carol,frank).\nsibling(frank,dave).\nparent(george,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is curious.\nFor all Y, if there exists W such that person Y is busy and person Y is a friend of person W and person W is brave, then person Y is tired.\nFor all Y, if there exists B such that person Y is happy and object B is smooth, then person Y is excited.\nFor all Y, if object Y is hard, then object Y is hard.\nFor all Z, if object Z is soft, then object Z is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all Z, if there exists A such that object Z is small and person A owns object Z and person A is tired, then object Z is heavy.\nFor all Z, if person Z is clever, then person Z is tired.\nFor all Y, if there exists D such that person Y is calm and object D is dirty, then person Y is calm.\nFor all Y, Z, if there exists U such that person Y is friendly and object Z is clean and person Y is a sibling of person U, then person Y likes object Z.\nFor all X, Y, if person X is calm and person Y is excited, then person X is a sibling of person Y.\nFor all X, if person X is clever, then person X is brave.\nFor all X, Y, if person X is hungry and person Y is angry and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, if person X is angry, then person X is calm.\nFor all X, if object X is red, then object X is new.\n\nAnd the following facts:\ngeorge is curious.\nfrank is a sibling of alice.\nalice likes phone.\ndave is a friend of alice.\nfrank is happy.\ncarol is a parent of frank.\nfrank is a sibling of dave.\ngeorge is a parent of eve.\n\nQUESTION:\nCould george is funny explain george is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 454,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(dave).",
    "c": "curious(X) :- funny(X).\ntired(Y) :- busy(Y), friend(Y,W), brave(W).\nexcited(Y) :- happy(Y), smooth(B).\nhard(Y) :- hard(Y).\nsmooth(Z) :- soft(Z).\nsoft(X) :- smooth(X).\nheavy(Z) :- small(Z), owns(A,Z), tired(A).\ntired(Z) :- clever(Z).\ncalm(Y) :- calm(Y), dirty(D).\nlikes(Y,Z) :- friendly(Y), clean(Z), sibling(Y,U).\nsibling(X,Y) :- calm(X), excited(Y).\nbrave(X) :- clever(X).\nenemy(X,Y) :- hungry(X), angry(Y), sibling(X,Y).\ncalm(X) :- angry(X).\nnew(X) :- red(X).\ncurious(george).\nsibling(frank,alice).\nlikes(alice,phone).\nfriend(dave,alice).\nhappy(frank).\nparent(carol,frank).\nsibling(frank,dave).\nparent(george,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is curious.\nFor all Y, if there exists W such that person Y is busy and person Y is a friend of person W and person W is brave, then person Y is tired.\nFor all Y, if there exists B such that person Y is happy and object B is smooth, then person Y is excited.\nFor all Y, if object Y is hard, then object Y is hard.\nFor all Z, if object Z is soft, then object Z is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all Z, if there exists A such that object Z is small and person A owns object Z and person A is tired, then object Z is heavy.\nFor all Z, if person Z is clever, then person Z is tired.\nFor all Y, if there exists D such that person Y is calm and object D is dirty, then person Y is calm.\nFor all Y, Z, if there exists U such that person Y is friendly and object Z is clean and person Y is a sibling of person U, then person Y likes object Z.\nFor all X, Y, if person X is calm and person Y is excited, then person X is a sibling of person Y.\nFor all X, if person X is clever, then person X is brave.\nFor all X, Y, if person X is hungry and person Y is angry and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, if person X is angry, then person X is calm.\nFor all X, if object X is red, then object X is new.\n\nAnd the following facts:\ngeorge is curious.\nfrank is a sibling of alice.\nalice likes phone.\ndave is a friend of alice.\nfrank is happy.\ncarol is a parent of frank.\nfrank is a sibling of dave.\ngeorge is a parent of eve.\n\nQUESTION:\nCould dave is weak explain george is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 455,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(frank).",
    "c": "busy(X) :- friendly(X).\nfunny(Z) :- strong(Z).\ntall(Y) :- tired(Y), strong(A).\nsad(Z) :- curious(Z), owns(Z,B), wet(B).\ncalm(Y) :- brave(Y), sibling(Y,A), hungry(A).\nlikes(X,Y) :- hard(Y), curious(X), rough(F).\nnew(Y) :- dirty(Y), owns(A,Y), brave(A).\ncalm(X) :- tired(X).\nbored(X) :- calm(X).\nfunny(X) :- curious(X), tired(X).\nbrave(X) :- clever(X), bored(X).\nclean(X) :- light(X), old(X).\nenemy(X,Y) :- hungry(X), curious(Y), friend(X,Y).\nowns(X,Y) :- brave(X), red(Y), likes(X,Y).\nsmall(X) :- wet(X).\nfriendly(frank).\nparent(george,bob).\ndislikes(alice,apple).\ntall(dave).\nnew(apple).\nenemy(dave,carol).\nowns(frank,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is busy.\nFor all Z, if person Z is strong, then person Z is funny.\nFor all Y, if there exists A such that person Y is tired and person A is strong, then person Y is tall.\nFor all Z, if there exists B such that person Z is curious and person Z owns object B and object B is wet, then person Z is sad.\nFor all Y, if there exists A such that person Y is brave and person Y is a sibling of person A and person A is hungry, then person Y is calm.\nFor all X, Y, if there exists F such that object Y is hard and person X is curious and object F is rough, then person X likes object Y.\nFor all Y, if there exists A such that object Y is dirty and person A owns object Y and person A is brave, then object Y is new.\nFor all X, if person X is tired, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is curious and person X is tired, then person X is funny.\nFor all X, if person X is clever and person X is bored, then person X is brave.\nFor all X, if object X is light and object X is old, then object X is clean.\nFor all X, Y, if person X is hungry and person Y is curious and person X is a friend of person Y, then person X is an enemy of person Y.\nFor all X, Y, if person X is brave and object Y is red and person X likes object Y, then person X owns object Y.\nFor all X, if object X is wet, then object X is small.\n\nAnd the following facts:\nfrank is friendly.\ngeorge is a parent of bob.\nalice dislikes apple.\ndave is tall.\napple is new.\ndave is an enemy of carol.\nfrank owns pencil.\neve is a parent of frank.\n\nQUESTION:\nIs frank is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 456,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "strong(dave).",
    "c": "busy(X) :- friendly(X).\nfunny(Z) :- strong(Z).\ntall(Y) :- tired(Y), strong(A).\nsad(Z) :- curious(Z), owns(Z,B), wet(B).\ncalm(Y) :- brave(Y), sibling(Y,A), hungry(A).\nlikes(X,Y) :- hard(Y), curious(X), rough(F).\nnew(Y) :- dirty(Y), owns(A,Y), brave(A).\ncalm(X) :- tired(X).\nbored(X) :- calm(X).\nfunny(X) :- curious(X), tired(X).\nbrave(X) :- clever(X), bored(X).\nclean(X) :- light(X), old(X).\nenemy(X,Y) :- hungry(X), curious(Y), friend(X,Y).\nowns(X,Y) :- brave(X), red(Y), likes(X,Y).\nsmall(X) :- wet(X).\nfriendly(frank).\nparent(george,bob).\ndislikes(alice,apple).\ntall(dave).\nnew(apple).\nenemy(dave,carol).\nowns(frank,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is busy.\nFor all Z, if person Z is strong, then person Z is funny.\nFor all Y, if there exists A such that person Y is tired and person A is strong, then person Y is tall.\nFor all Z, if there exists B such that person Z is curious and person Z owns object B and object B is wet, then person Z is sad.\nFor all Y, if there exists A such that person Y is brave and person Y is a sibling of person A and person A is hungry, then person Y is calm.\nFor all X, Y, if there exists F such that object Y is hard and person X is curious and object F is rough, then person X likes object Y.\nFor all Y, if there exists A such that object Y is dirty and person A owns object Y and person A is brave, then object Y is new.\nFor all X, if person X is tired, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is curious and person X is tired, then person X is funny.\nFor all X, if person X is clever and person X is bored, then person X is brave.\nFor all X, if object X is light and object X is old, then object X is clean.\nFor all X, Y, if person X is hungry and person Y is curious and person X is a friend of person Y, then person X is an enemy of person Y.\nFor all X, Y, if person X is brave and object Y is red and person X likes object Y, then person X owns object Y.\nFor all X, if object X is wet, then object X is small.\n\nAnd the following facts:\nfrank is friendly.\ngeorge is a parent of bob.\nalice dislikes apple.\ndave is tall.\napple is new.\ndave is an enemy of carol.\nfrank owns pencil.\neve is a parent of frank.\n\nQUESTION:\nIs dave is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 457,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(frank).",
    "c": "busy(X) :- friendly(X).\nfunny(Z) :- strong(Z).\ntall(Y) :- tired(Y), strong(A).\nsad(Z) :- curious(Z), owns(Z,B), wet(B).\ncalm(Y) :- brave(Y), sibling(Y,A), hungry(A).\nlikes(X,Y) :- hard(Y), curious(X), rough(F).\nnew(Y) :- dirty(Y), owns(A,Y), brave(A).\ncalm(X) :- tired(X).\nbored(X) :- calm(X).\nfunny(X) :- curious(X), tired(X).\nbrave(X) :- clever(X), bored(X).\nclean(X) :- light(X), old(X).\nenemy(X,Y) :- hungry(X), curious(Y), friend(X,Y).\nowns(X,Y) :- brave(X), red(Y), likes(X,Y).\nsmall(X) :- wet(X).\nbusy(frank).\nparent(george,bob).\ndislikes(alice,apple).\ntall(dave).\nnew(apple).\nenemy(dave,carol).\nowns(frank,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is busy.\nFor all Z, if person Z is strong, then person Z is funny.\nFor all Y, if there exists A such that person Y is tired and person A is strong, then person Y is tall.\nFor all Z, if there exists B such that person Z is curious and person Z owns object B and object B is wet, then person Z is sad.\nFor all Y, if there exists A such that person Y is brave and person Y is a sibling of person A and person A is hungry, then person Y is calm.\nFor all X, Y, if there exists F such that object Y is hard and person X is curious and object F is rough, then person X likes object Y.\nFor all Y, if there exists A such that object Y is dirty and person A owns object Y and person A is brave, then object Y is new.\nFor all X, if person X is tired, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is curious and person X is tired, then person X is funny.\nFor all X, if person X is clever and person X is bored, then person X is brave.\nFor all X, if object X is light and object X is old, then object X is clean.\nFor all X, Y, if person X is hungry and person Y is curious and person X is a friend of person Y, then person X is an enemy of person Y.\nFor all X, Y, if person X is brave and object Y is red and person X likes object Y, then person X owns object Y.\nFor all X, if object X is wet, then object X is small.\n\nAnd the following facts:\nfrank is busy.\ngeorge is a parent of bob.\nalice dislikes apple.\ndave is tall.\napple is new.\ndave is an enemy of carol.\nfrank owns pencil.\neve is a parent of frank.\n\nQUESTION:\nCould frank is friendly explain frank is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 458,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "friendly(george).",
    "c": "busy(X) :- friendly(X).\nfunny(Z) :- strong(Z).\ntall(Y) :- tired(Y), strong(A).\nsad(Z) :- curious(Z), owns(Z,B), wet(B).\ncalm(Y) :- brave(Y), sibling(Y,A), hungry(A).\nlikes(X,Y) :- hard(Y), curious(X), rough(F).\nnew(Y) :- dirty(Y), owns(A,Y), brave(A).\ncalm(X) :- tired(X).\nbored(X) :- calm(X).\nfunny(X) :- curious(X), tired(X).\nbrave(X) :- clever(X), bored(X).\nclean(X) :- light(X), old(X).\nenemy(X,Y) :- hungry(X), curious(Y), friend(X,Y).\nowns(X,Y) :- brave(X), red(Y), likes(X,Y).\nsmall(X) :- wet(X).\nbusy(frank).\nparent(george,bob).\ndislikes(alice,apple).\ntall(dave).\nnew(apple).\nenemy(dave,carol).\nowns(frank,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is busy.\nFor all Z, if person Z is strong, then person Z is funny.\nFor all Y, if there exists A such that person Y is tired and person A is strong, then person Y is tall.\nFor all Z, if there exists B such that person Z is curious and person Z owns object B and object B is wet, then person Z is sad.\nFor all Y, if there exists A such that person Y is brave and person Y is a sibling of person A and person A is hungry, then person Y is calm.\nFor all X, Y, if there exists F such that object Y is hard and person X is curious and object F is rough, then person X likes object Y.\nFor all Y, if there exists A such that object Y is dirty and person A owns object Y and person A is brave, then object Y is new.\nFor all X, if person X is tired, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is curious and person X is tired, then person X is funny.\nFor all X, if person X is clever and person X is bored, then person X is brave.\nFor all X, if object X is light and object X is old, then object X is clean.\nFor all X, Y, if person X is hungry and person Y is curious and person X is a friend of person Y, then person X is an enemy of person Y.\nFor all X, Y, if person X is brave and object Y is red and person X likes object Y, then person X owns object Y.\nFor all X, if object X is wet, then object X is small.\n\nAnd the following facts:\nfrank is busy.\ngeorge is a parent of bob.\nalice dislikes apple.\ndave is tall.\napple is new.\ndave is an enemy of carol.\nfrank owns pencil.\neve is a parent of frank.\n\nQUESTION:\nCould george is friendly explain frank is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 459,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(bob).",
    "c": "happy(X) :- angry(X).\nrough(Y) :- soft(Y), likes(W,Y), curious(W).\nhungry(X) :- sad(X), sibling(X,A), friendly(A).\nfunny(X) :- weak(X), owns(X,V), heavy(V).\ndislikes(Z,X) :- hungry(Z), rough(X).\nrough(X) :- clean(X), likes(V,X), tired(V).\nsmall(X) :- smooth(X), owns(W,X), curious(W).\ntall(X) :- strong(X).\nsibling(X,Y) :- sad(X), clever(Y).\ntall(X) :- friendly(X).\nsmooth(X) :- soft(X).\nbored(X) :- friendly(X).\nnew(X) :- heavy(X).\nlikes(X,Y) :- tall(X), rough(Y).\nhard(X) :- big(X).\nangry(bob).\nlikes(george,phone).\ncalm(frank).\nfunny(carol).\nhard(ball).\ntall(dave).\nfriend(george,dave).\nowns(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is happy.\nFor all Y, if there exists W such that object Y is soft and person W likes object Y and person W is curious, then object Y is rough.\nFor all X, if there exists A such that person X is sad and person X is a sibling of person A and person A is friendly, then person X is hungry.\nFor all X, if there exists V such that person X is weak and person X owns object V and object V is heavy, then person X is funny.\nFor all X, Z, if person Z is hungry and object X is rough, then person Z dislikes object X.\nFor all X, if there exists V such that object X is clean and person V likes object X and person V is tired, then object X is rough.\nFor all X, if there exists W such that object X is smooth and person W owns object X and person W is curious, then object X is small.\nFor all X, if person X is strong, then person X is tall.\nFor all X, Y, if person X is sad and person Y is clever, then person X is a sibling of person Y.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Y, if person X is tall and object Y is rough, then person X likes object Y.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\nbob is angry.\ngeorge likes phone.\nfrank is calm.\ncarol is funny.\nball is hard.\ndave is tall.\ngeorge is a friend of dave.\nfrank owns book.\n\nQUESTION:\nIs bob is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 460,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "curious(alice).",
    "c": "happy(X) :- angry(X).\nrough(Y) :- soft(Y), likes(W,Y), curious(W).\nhungry(X) :- sad(X), sibling(X,A), friendly(A).\nfunny(X) :- weak(X), owns(X,V), heavy(V).\ndislikes(Z,X) :- hungry(Z), rough(X).\nrough(X) :- clean(X), likes(V,X), tired(V).\nsmall(X) :- smooth(X), owns(W,X), curious(W).\ntall(X) :- strong(X).\nsibling(X,Y) :- sad(X), clever(Y).\ntall(X) :- friendly(X).\nsmooth(X) :- soft(X).\nbored(X) :- friendly(X).\nnew(X) :- heavy(X).\nlikes(X,Y) :- tall(X), rough(Y).\nhard(X) :- big(X).\nangry(bob).\nlikes(george,phone).\ncalm(frank).\nfunny(carol).\nhard(ball).\ntall(dave).\nfriend(george,dave).\nowns(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is happy.\nFor all Y, if there exists W such that object Y is soft and person W likes object Y and person W is curious, then object Y is rough.\nFor all X, if there exists A such that person X is sad and person X is a sibling of person A and person A is friendly, then person X is hungry.\nFor all X, if there exists V such that person X is weak and person X owns object V and object V is heavy, then person X is funny.\nFor all X, Z, if person Z is hungry and object X is rough, then person Z dislikes object X.\nFor all X, if there exists V such that object X is clean and person V likes object X and person V is tired, then object X is rough.\nFor all X, if there exists W such that object X is smooth and person W owns object X and person W is curious, then object X is small.\nFor all X, if person X is strong, then person X is tall.\nFor all X, Y, if person X is sad and person Y is clever, then person X is a sibling of person Y.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Y, if person X is tall and object Y is rough, then person X likes object Y.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\nbob is angry.\ngeorge likes phone.\nfrank is calm.\ncarol is funny.\nball is hard.\ndave is tall.\ngeorge is a friend of dave.\nfrank owns book.\n\nQUESTION:\nIs alice is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 461,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "happy(X) :- angry(X).\nrough(Y) :- soft(Y), likes(W,Y), curious(W).\nhungry(X) :- sad(X), sibling(X,A), friendly(A).\nfunny(X) :- weak(X), owns(X,V), heavy(V).\ndislikes(Z,X) :- hungry(Z), rough(X).\nrough(X) :- clean(X), likes(V,X), tired(V).\nsmall(X) :- smooth(X), owns(W,X), curious(W).\ntall(X) :- strong(X).\nsibling(X,Y) :- sad(X), clever(Y).\ntall(X) :- friendly(X).\nsmooth(X) :- soft(X).\nbored(X) :- friendly(X).\nnew(X) :- heavy(X).\nlikes(X,Y) :- tall(X), rough(Y).\nhard(X) :- big(X).\nhappy(bob).\nlikes(george,phone).\ncalm(frank).\nfunny(carol).\nhard(ball).\ntall(dave).\nfriend(george,dave).\nowns(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is happy.\nFor all Y, if there exists W such that object Y is soft and person W likes object Y and person W is curious, then object Y is rough.\nFor all X, if there exists A such that person X is sad and person X is a sibling of person A and person A is friendly, then person X is hungry.\nFor all X, if there exists V such that person X is weak and person X owns object V and object V is heavy, then person X is funny.\nFor all X, Z, if person Z is hungry and object X is rough, then person Z dislikes object X.\nFor all X, if there exists V such that object X is clean and person V likes object X and person V is tired, then object X is rough.\nFor all X, if there exists W such that object X is smooth and person W owns object X and person W is curious, then object X is small.\nFor all X, if person X is strong, then person X is tall.\nFor all X, Y, if person X is sad and person Y is clever, then person X is a sibling of person Y.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Y, if person X is tall and object Y is rough, then person X likes object Y.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\nbob is happy.\ngeorge likes phone.\nfrank is calm.\ncarol is funny.\nball is hard.\ndave is tall.\ngeorge is a friend of dave.\nfrank owns book.\n\nQUESTION:\nCould bob is angry explain bob is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 462,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(george).",
    "c": "happy(X) :- angry(X).\nrough(Y) :- soft(Y), likes(W,Y), curious(W).\nhungry(X) :- sad(X), sibling(X,A), friendly(A).\nfunny(X) :- weak(X), owns(X,V), heavy(V).\ndislikes(Z,X) :- hungry(Z), rough(X).\nrough(X) :- clean(X), likes(V,X), tired(V).\nsmall(X) :- smooth(X), owns(W,X), curious(W).\ntall(X) :- strong(X).\nsibling(X,Y) :- sad(X), clever(Y).\ntall(X) :- friendly(X).\nsmooth(X) :- soft(X).\nbored(X) :- friendly(X).\nnew(X) :- heavy(X).\nlikes(X,Y) :- tall(X), rough(Y).\nhard(X) :- big(X).\nhappy(bob).\nlikes(george,phone).\ncalm(frank).\nfunny(carol).\nhard(ball).\ntall(dave).\nfriend(george,dave).\nowns(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is happy.\nFor all Y, if there exists W such that object Y is soft and person W likes object Y and person W is curious, then object Y is rough.\nFor all X, if there exists A such that person X is sad and person X is a sibling of person A and person A is friendly, then person X is hungry.\nFor all X, if there exists V such that person X is weak and person X owns object V and object V is heavy, then person X is funny.\nFor all X, Z, if person Z is hungry and object X is rough, then person Z dislikes object X.\nFor all X, if there exists V such that object X is clean and person V likes object X and person V is tired, then object X is rough.\nFor all X, if there exists W such that object X is smooth and person W owns object X and person W is curious, then object X is small.\nFor all X, if person X is strong, then person X is tall.\nFor all X, Y, if person X is sad and person Y is clever, then person X is a sibling of person Y.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Y, if person X is tall and object Y is rough, then person X likes object Y.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\nbob is happy.\ngeorge likes phone.\nfrank is calm.\ncarol is funny.\nball is hard.\ndave is tall.\ngeorge is a friend of dave.\nfrank owns book.\n\nQUESTION:\nCould george is weak explain bob is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 463,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(frank).",
    "c": "hungry(X) :- clever(X).\nbusy(X) :- hungry(X).\nsad(X) :- busy(X).\nclever(X) :- sad(X).\ntall(X) :- clever(X).\nfriendly(Y) :- curious(Y), owns(Y,V), new(V).\nnew(Y) :- red(Y), owns(A,Y), weak(A).\ncurious(X) :- angry(X).\ntired(Z) :- excited(Z).\nbig(Y) :- big(Y), rough(C).\nsmall(Z) :- dirty(Z), dislikes(V,Z), excited(V).\nsmall(X) :- new(X), light(X).\nenemy(X,Y) :- curious(X), bored(Y).\nstrong(X) :- friendly(X).\nbored(X) :- angry(X).\nclever(frank).\nfriend(bob,george).\nparent(bob,eve).\ndislikes(carol,phone).\nexcited(frank).\nsibling(george,bob).\nbored(george).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is tall.\nFor all Y, if there exists V such that person Y is curious and person Y owns object V and object V is new, then person Y is friendly.\nFor all Y, if there exists A such that object Y is red and person A owns object Y and person A is weak, then object Y is new.\nFor all X, if person X is angry, then person X is curious.\nFor all Z, if person Z is excited, then person Z is tired.\nFor all Y, if there exists C such that object Y is big and object C is rough, then object Y is big.\nFor all Z, if there exists V such that object Z is dirty and person V dislikes object Z and person V is excited, then object Z is small.\nFor all X, if object X is new and object X is light, then object X is small.\nFor all X, Y, if person X is curious and person Y is bored, then person X is an enemy of person Y.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is angry, then person X is bored.\n\nAnd the following facts:\nfrank is clever.\nbob is a friend of george.\nbob is a parent of eve.\ncarol dislikes phone.\nfrank is excited.\ngeorge is a sibling of bob.\ngeorge is bored.\nfrank is bored.\n\nQUESTION:\nIs frank is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 464,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "strong(eve).",
    "c": "hungry(X) :- clever(X).\nbusy(X) :- hungry(X).\nsad(X) :- busy(X).\nclever(X) :- sad(X).\ntall(X) :- clever(X).\nfriendly(Y) :- curious(Y), owns(Y,V), new(V).\nnew(Y) :- red(Y), owns(A,Y), weak(A).\ncurious(X) :- angry(X).\ntired(Z) :- excited(Z).\nbig(Y) :- big(Y), rough(C).\nsmall(Z) :- dirty(Z), dislikes(V,Z), excited(V).\nsmall(X) :- new(X), light(X).\nenemy(X,Y) :- curious(X), bored(Y).\nstrong(X) :- friendly(X).\nbored(X) :- angry(X).\nclever(frank).\nfriend(bob,george).\nparent(bob,eve).\ndislikes(carol,phone).\nexcited(frank).\nsibling(george,bob).\nbored(george).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is tall.\nFor all Y, if there exists V such that person Y is curious and person Y owns object V and object V is new, then person Y is friendly.\nFor all Y, if there exists A such that object Y is red and person A owns object Y and person A is weak, then object Y is new.\nFor all X, if person X is angry, then person X is curious.\nFor all Z, if person Z is excited, then person Z is tired.\nFor all Y, if there exists C such that object Y is big and object C is rough, then object Y is big.\nFor all Z, if there exists V such that object Z is dirty and person V dislikes object Z and person V is excited, then object Z is small.\nFor all X, if object X is new and object X is light, then object X is small.\nFor all X, Y, if person X is curious and person Y is bored, then person X is an enemy of person Y.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is angry, then person X is bored.\n\nAnd the following facts:\nfrank is clever.\nbob is a friend of george.\nbob is a parent of eve.\ncarol dislikes phone.\nfrank is excited.\ngeorge is a sibling of bob.\ngeorge is bored.\nfrank is bored.\n\nQUESTION:\nIs eve is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 465,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(frank).",
    "c": "hungry(X) :- clever(X).\nbusy(X) :- hungry(X).\nsad(X) :- busy(X).\nclever(X) :- sad(X).\ntall(X) :- clever(X).\nfriendly(Y) :- curious(Y), owns(Y,V), new(V).\nnew(Y) :- red(Y), owns(A,Y), weak(A).\ncurious(X) :- angry(X).\ntired(Z) :- excited(Z).\nbig(Y) :- big(Y), rough(C).\nsmall(Z) :- dirty(Z), dislikes(V,Z), excited(V).\nsmall(X) :- new(X), light(X).\nenemy(X,Y) :- curious(X), bored(Y).\nstrong(X) :- friendly(X).\nbored(X) :- angry(X).\ntall(frank).\nfriend(bob,george).\nparent(bob,eve).\ndislikes(carol,phone).\nexcited(frank).\nsibling(george,bob).\nbored(george).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is tall.\nFor all Y, if there exists V such that person Y is curious and person Y owns object V and object V is new, then person Y is friendly.\nFor all Y, if there exists A such that object Y is red and person A owns object Y and person A is weak, then object Y is new.\nFor all X, if person X is angry, then person X is curious.\nFor all Z, if person Z is excited, then person Z is tired.\nFor all Y, if there exists C such that object Y is big and object C is rough, then object Y is big.\nFor all Z, if there exists V such that object Z is dirty and person V dislikes object Z and person V is excited, then object Z is small.\nFor all X, if object X is new and object X is light, then object X is small.\nFor all X, Y, if person X is curious and person Y is bored, then person X is an enemy of person Y.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is angry, then person X is bored.\n\nAnd the following facts:\nfrank is tall.\nbob is a friend of george.\nbob is a parent of eve.\ncarol dislikes phone.\nfrank is excited.\ngeorge is a sibling of bob.\ngeorge is bored.\nfrank is bored.\n\nQUESTION:\nCould frank is clever explain frank is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 466,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(phone).",
    "c": "hungry(X) :- clever(X).\nbusy(X) :- hungry(X).\nsad(X) :- busy(X).\nclever(X) :- sad(X).\ntall(X) :- clever(X).\nfriendly(Y) :- curious(Y), owns(Y,V), new(V).\nnew(Y) :- red(Y), owns(A,Y), weak(A).\ncurious(X) :- angry(X).\ntired(Z) :- excited(Z).\nbig(Y) :- big(Y), rough(C).\nsmall(Z) :- dirty(Z), dislikes(V,Z), excited(V).\nsmall(X) :- new(X), light(X).\nenemy(X,Y) :- curious(X), bored(Y).\nstrong(X) :- friendly(X).\nbored(X) :- angry(X).\ntall(frank).\nfriend(bob,george).\nparent(bob,eve).\ndislikes(carol,phone).\nexcited(frank).\nsibling(george,bob).\nbored(george).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is tall.\nFor all Y, if there exists V such that person Y is curious and person Y owns object V and object V is new, then person Y is friendly.\nFor all Y, if there exists A such that object Y is red and person A owns object Y and person A is weak, then object Y is new.\nFor all X, if person X is angry, then person X is curious.\nFor all Z, if person Z is excited, then person Z is tired.\nFor all Y, if there exists C such that object Y is big and object C is rough, then object Y is big.\nFor all Z, if there exists V such that object Z is dirty and person V dislikes object Z and person V is excited, then object Z is small.\nFor all X, if object X is new and object X is light, then object X is small.\nFor all X, Y, if person X is curious and person Y is bored, then person X is an enemy of person Y.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is angry, then person X is bored.\n\nAnd the following facts:\nfrank is tall.\nbob is a friend of george.\nbob is a parent of eve.\ncarol dislikes phone.\nfrank is excited.\ngeorge is a sibling of bob.\ngeorge is bored.\nfrank is bored.\n\nQUESTION:\nCould phone is hard explain frank is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 467,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(ball).",
    "c": "heavy(X) :- hard(X).\nlight(X) :- heavy(X).\nrough(X) :- light(X).\nclean(X) :- rough(X).\ndirty(X) :- clean(X).\ndislikes(X,Y) :- wet(Y), funny(X), dislikes(A,Y).\nfriendly(Y) :- strong(Y).\ntired(Z) :- happy(Z), sibling(Z,W), excited(W).\nweak(Z) :- friendly(Z), owns(Z,A), new(A).\ntall(Z) :- clever(Z).\nangry(Y) :- calm(Y).\nstrong(X) :- excited(X), sibling(X,U), clever(U).\nold(X) :- soft(X).\ntall(X) :- happy(X).\nsmall(X) :- soft(X).\nhard(ball).\nenemy(carol,bob).\nfriend(dave,frank).\nhungry(bob).\nsibling(eve,bob).\nfriend(alice,george).\nbored(george).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if there exists A such that object Y is wet and person X is funny and person A dislikes object Y, then person X dislikes object Y.\nFor all Y, if person Y is strong, then person Y is friendly.\nFor all Z, if there exists W such that person Z is happy and person Z is a sibling of person W and person W is excited, then person Z is tired.\nFor all Z, if there exists A such that person Z is friendly and person Z owns object A and object A is new, then person Z is weak.\nFor all Z, if person Z is clever, then person Z is tall.\nFor all Y, if person Y is calm, then person Y is angry.\nFor all X, if there exists U such that person X is excited and person X is a sibling of person U and person U is clever, then person X is strong.\nFor all X, if object X is soft, then object X is old.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if object X is soft, then object X is small.\n\nAnd the following facts:\nball is hard.\ncarol is an enemy of bob.\ndave is a friend of frank.\nbob is hungry.\neve is a sibling of bob.\nalice is a friend of george.\ngeorge is bored.\ngeorge owns pencil.\n\nQUESTION:\nIs ball is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 468,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(bob).",
    "c": "heavy(X) :- hard(X).\nlight(X) :- heavy(X).\nrough(X) :- light(X).\nclean(X) :- rough(X).\ndirty(X) :- clean(X).\ndislikes(X,Y) :- wet(Y), funny(X), dislikes(A,Y).\nfriendly(Y) :- strong(Y).\ntired(Z) :- happy(Z), sibling(Z,W), excited(W).\nweak(Z) :- friendly(Z), owns(Z,A), new(A).\ntall(Z) :- clever(Z).\nangry(Y) :- calm(Y).\nstrong(X) :- excited(X), sibling(X,U), clever(U).\nold(X) :- soft(X).\ntall(X) :- happy(X).\nsmall(X) :- soft(X).\nhard(ball).\nenemy(carol,bob).\nfriend(dave,frank).\nhungry(bob).\nsibling(eve,bob).\nfriend(alice,george).\nbored(george).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if there exists A such that object Y is wet and person X is funny and person A dislikes object Y, then person X dislikes object Y.\nFor all Y, if person Y is strong, then person Y is friendly.\nFor all Z, if there exists W such that person Z is happy and person Z is a sibling of person W and person W is excited, then person Z is tired.\nFor all Z, if there exists A such that person Z is friendly and person Z owns object A and object A is new, then person Z is weak.\nFor all Z, if person Z is clever, then person Z is tall.\nFor all Y, if person Y is calm, then person Y is angry.\nFor all X, if there exists U such that person X is excited and person X is a sibling of person U and person U is clever, then person X is strong.\nFor all X, if object X is soft, then object X is old.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if object X is soft, then object X is small.\n\nAnd the following facts:\nball is hard.\ncarol is an enemy of bob.\ndave is a friend of frank.\nbob is hungry.\neve is a sibling of bob.\nalice is a friend of george.\ngeorge is bored.\ngeorge owns pencil.\n\nQUESTION:\nIs bob is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 469,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(ball).",
    "c": "heavy(X) :- hard(X).\nlight(X) :- heavy(X).\nrough(X) :- light(X).\nclean(X) :- rough(X).\ndirty(X) :- clean(X).\ndislikes(X,Y) :- wet(Y), funny(X), dislikes(A,Y).\nfriendly(Y) :- strong(Y).\ntired(Z) :- happy(Z), sibling(Z,W), excited(W).\nweak(Z) :- friendly(Z), owns(Z,A), new(A).\ntall(Z) :- clever(Z).\nangry(Y) :- calm(Y).\nstrong(X) :- excited(X), sibling(X,U), clever(U).\nold(X) :- soft(X).\ntall(X) :- happy(X).\nsmall(X) :- soft(X).\ndirty(ball).\nenemy(carol,bob).\nfriend(dave,frank).\nhungry(bob).\nsibling(eve,bob).\nfriend(alice,george).\nbored(george).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if there exists A such that object Y is wet and person X is funny and person A dislikes object Y, then person X dislikes object Y.\nFor all Y, if person Y is strong, then person Y is friendly.\nFor all Z, if there exists W such that person Z is happy and person Z is a sibling of person W and person W is excited, then person Z is tired.\nFor all Z, if there exists A such that person Z is friendly and person Z owns object A and object A is new, then person Z is weak.\nFor all Z, if person Z is clever, then person Z is tall.\nFor all Y, if person Y is calm, then person Y is angry.\nFor all X, if there exists U such that person X is excited and person X is a sibling of person U and person U is clever, then person X is strong.\nFor all X, if object X is soft, then object X is old.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if object X is soft, then object X is small.\n\nAnd the following facts:\nball is dirty.\ncarol is an enemy of bob.\ndave is a friend of frank.\nbob is hungry.\neve is a sibling of bob.\nalice is a friend of george.\ngeorge is bored.\ngeorge owns pencil.\n\nQUESTION:\nCould ball is hard explain ball is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 470,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(bob).",
    "c": "heavy(X) :- hard(X).\nlight(X) :- heavy(X).\nrough(X) :- light(X).\nclean(X) :- rough(X).\ndirty(X) :- clean(X).\ndislikes(X,Y) :- wet(Y), funny(X), dislikes(A,Y).\nfriendly(Y) :- strong(Y).\ntired(Z) :- happy(Z), sibling(Z,W), excited(W).\nweak(Z) :- friendly(Z), owns(Z,A), new(A).\ntall(Z) :- clever(Z).\nangry(Y) :- calm(Y).\nstrong(X) :- excited(X), sibling(X,U), clever(U).\nold(X) :- soft(X).\ntall(X) :- happy(X).\nsmall(X) :- soft(X).\ndirty(ball).\nenemy(carol,bob).\nfriend(dave,frank).\nhungry(bob).\nsibling(eve,bob).\nfriend(alice,george).\nbored(george).\nowns(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if there exists A such that object Y is wet and person X is funny and person A dislikes object Y, then person X dislikes object Y.\nFor all Y, if person Y is strong, then person Y is friendly.\nFor all Z, if there exists W such that person Z is happy and person Z is a sibling of person W and person W is excited, then person Z is tired.\nFor all Z, if there exists A such that person Z is friendly and person Z owns object A and object A is new, then person Z is weak.\nFor all Z, if person Z is clever, then person Z is tall.\nFor all Y, if person Y is calm, then person Y is angry.\nFor all X, if there exists U such that person X is excited and person X is a sibling of person U and person U is clever, then person X is strong.\nFor all X, if object X is soft, then object X is old.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if object X is soft, then object X is small.\n\nAnd the following facts:\nball is dirty.\ncarol is an enemy of bob.\ndave is a friend of frank.\nbob is hungry.\neve is a sibling of bob.\nalice is a friend of george.\ngeorge is bored.\ngeorge owns pencil.\n\nQUESTION:\nCould bob is weak explain ball is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 471,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(alice).",
    "c": "brave(X) :- tired(X).\nweak(X) :- brave(X).\ntall(X) :- weak(X).\ncurious(X) :- tall(X).\nclever(X) :- curious(X).\nbusy(Y) :- funny(Y).\ncalm(X) :- funny(X), likes(X,A), red(A).\nred(Z) :- old(Z).\nsoft(X) :- light(X), happy(C).\ndislikes(Z,X) :- busy(Z), smooth(X), dislikes(V,X).\nheavy(Y) :- dirty(Y), owns(B,Y), hungry(B).\nfriend(X,Y) :- excited(X), sad(Y).\nnew(X) :- rough(X).\nsibling(X,Y) :- friendly(X), calm(Y).\ncalm(X) :- busy(X), busy(X).\ntired(alice).\nfriendly(frank).\nparent(dave,alice).\nparent(frank,dave).\nenemy(alice,carol).\ndislikes(carol,book).\nsad(eve).\nhard(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all Y, if person Y is funny, then person Y is busy.\nFor all X, if there exists A such that person X is funny and person X likes object A and object A is red, then person X is calm.\nFor all Z, if object Z is old, then object Z is red.\nFor all X, if there exists C such that object X is light and person C is happy, then object X is soft.\nFor all X, Z, if there exists V such that person Z is busy and object X is smooth and person V dislikes object X, then person Z dislikes object X.\nFor all Y, if there exists B such that object Y is dirty and person B owns object Y and person B is hungry, then object Y is heavy.\nFor all X, Y, if person X is excited and person Y is sad, then person X is a friend of person Y.\nFor all X, if object X is rough, then object X is new.\nFor all X, Y, if person X is friendly and person Y is calm, then person X is a sibling of person Y.\nFor all X, if person X is busy and person X is busy, then person X is calm.\n\nAnd the following facts:\nalice is tired.\nfrank is friendly.\ndave is a parent of alice.\nfrank is a parent of dave.\nalice is an enemy of carol.\ncarol dislikes book.\neve is sad.\nphone is hard.\n\nQUESTION:\nIs alice is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 472,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(pencil).",
    "c": "brave(X) :- tired(X).\nweak(X) :- brave(X).\ntall(X) :- weak(X).\ncurious(X) :- tall(X).\nclever(X) :- curious(X).\nbusy(Y) :- funny(Y).\ncalm(X) :- funny(X), likes(X,A), red(A).\nred(Z) :- old(Z).\nsoft(X) :- light(X), happy(C).\ndislikes(Z,X) :- busy(Z), smooth(X), dislikes(V,X).\nheavy(Y) :- dirty(Y), owns(B,Y), hungry(B).\nfriend(X,Y) :- excited(X), sad(Y).\nnew(X) :- rough(X).\nsibling(X,Y) :- friendly(X), calm(Y).\ncalm(X) :- busy(X), busy(X).\ntired(alice).\nfriendly(frank).\nparent(dave,alice).\nparent(frank,dave).\nenemy(alice,carol).\ndislikes(carol,book).\nsad(eve).\nhard(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all Y, if person Y is funny, then person Y is busy.\nFor all X, if there exists A such that person X is funny and person X likes object A and object A is red, then person X is calm.\nFor all Z, if object Z is old, then object Z is red.\nFor all X, if there exists C such that object X is light and person C is happy, then object X is soft.\nFor all X, Z, if there exists V such that person Z is busy and object X is smooth and person V dislikes object X, then person Z dislikes object X.\nFor all Y, if there exists B such that object Y is dirty and person B owns object Y and person B is hungry, then object Y is heavy.\nFor all X, Y, if person X is excited and person Y is sad, then person X is a friend of person Y.\nFor all X, if object X is rough, then object X is new.\nFor all X, Y, if person X is friendly and person Y is calm, then person X is a sibling of person Y.\nFor all X, if person X is busy and person X is busy, then person X is calm.\n\nAnd the following facts:\nalice is tired.\nfrank is friendly.\ndave is a parent of alice.\nfrank is a parent of dave.\nalice is an enemy of carol.\ncarol dislikes book.\neve is sad.\nphone is hard.\n\nQUESTION:\nIs pencil is old true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 473,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(alice).",
    "c": "brave(X) :- tired(X).\nweak(X) :- brave(X).\ntall(X) :- weak(X).\ncurious(X) :- tall(X).\nclever(X) :- curious(X).\nbusy(Y) :- funny(Y).\ncalm(X) :- funny(X), likes(X,A), red(A).\nred(Z) :- old(Z).\nsoft(X) :- light(X), happy(C).\ndislikes(Z,X) :- busy(Z), smooth(X), dislikes(V,X).\nheavy(Y) :- dirty(Y), owns(B,Y), hungry(B).\nfriend(X,Y) :- excited(X), sad(Y).\nnew(X) :- rough(X).\nsibling(X,Y) :- friendly(X), calm(Y).\ncalm(X) :- busy(X), busy(X).\nclever(alice).\nfriendly(frank).\nparent(dave,alice).\nparent(frank,dave).\nenemy(alice,carol).\ndislikes(carol,book).\nsad(eve).\nhard(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all Y, if person Y is funny, then person Y is busy.\nFor all X, if there exists A such that person X is funny and person X likes object A and object A is red, then person X is calm.\nFor all Z, if object Z is old, then object Z is red.\nFor all X, if there exists C such that object X is light and person C is happy, then object X is soft.\nFor all X, Z, if there exists V such that person Z is busy and object X is smooth and person V dislikes object X, then person Z dislikes object X.\nFor all Y, if there exists B such that object Y is dirty and person B owns object Y and person B is hungry, then object Y is heavy.\nFor all X, Y, if person X is excited and person Y is sad, then person X is a friend of person Y.\nFor all X, if object X is rough, then object X is new.\nFor all X, Y, if person X is friendly and person Y is calm, then person X is a sibling of person Y.\nFor all X, if person X is busy and person X is busy, then person X is calm.\n\nAnd the following facts:\nalice is clever.\nfrank is friendly.\ndave is a parent of alice.\nfrank is a parent of dave.\nalice is an enemy of carol.\ncarol dislikes book.\neve is sad.\nphone is hard.\n\nQUESTION:\nCould alice is tired explain alice is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 474,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "heavy(pencil).",
    "c": "brave(X) :- tired(X).\nweak(X) :- brave(X).\ntall(X) :- weak(X).\ncurious(X) :- tall(X).\nclever(X) :- curious(X).\nbusy(Y) :- funny(Y).\ncalm(X) :- funny(X), likes(X,A), red(A).\nred(Z) :- old(Z).\nsoft(X) :- light(X), happy(C).\ndislikes(Z,X) :- busy(Z), smooth(X), dislikes(V,X).\nheavy(Y) :- dirty(Y), owns(B,Y), hungry(B).\nfriend(X,Y) :- excited(X), sad(Y).\nnew(X) :- rough(X).\nsibling(X,Y) :- friendly(X), calm(Y).\ncalm(X) :- busy(X), busy(X).\nclever(alice).\nfriendly(frank).\nparent(dave,alice).\nparent(frank,dave).\nenemy(alice,carol).\ndislikes(carol,book).\nsad(eve).\nhard(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all Y, if person Y is funny, then person Y is busy.\nFor all X, if there exists A such that person X is funny and person X likes object A and object A is red, then person X is calm.\nFor all Z, if object Z is old, then object Z is red.\nFor all X, if there exists C such that object X is light and person C is happy, then object X is soft.\nFor all X, Z, if there exists V such that person Z is busy and object X is smooth and person V dislikes object X, then person Z dislikes object X.\nFor all Y, if there exists B such that object Y is dirty and person B owns object Y and person B is hungry, then object Y is heavy.\nFor all X, Y, if person X is excited and person Y is sad, then person X is a friend of person Y.\nFor all X, if object X is rough, then object X is new.\nFor all X, Y, if person X is friendly and person Y is calm, then person X is a sibling of person Y.\nFor all X, if person X is busy and person X is busy, then person X is calm.\n\nAnd the following facts:\nalice is clever.\nfrank is friendly.\ndave is a parent of alice.\nfrank is a parent of dave.\nalice is an enemy of carol.\ncarol dislikes book.\neve is sad.\nphone is hard.\n\nQUESTION:\nCould pencil is heavy explain alice is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 475,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "happy(X) :- funny(X).\nweak(X) :- happy(X).\nexcited(X) :- weak(X).\nangry(X) :- excited(X).\nhungry(X) :- angry(X).\nsad(X) :- calm(X), brave(C).\nheavy(Y) :- red(Y), likes(U,Y), sad(U).\nsmall(Z) :- heavy(Z), dislikes(W,Z), bored(W).\nenemy(X,Z) :- sad(Z), strong(X), tired(C).\ncurious(X) :- strong(X).\nred(X) :- light(X).\ncurious(X) :- brave(X), tired(X).\nsmooth(X) :- new(X), soft(X).\nsad(X) :- tall(X), tall(X).\nlikes(X,Y) :- brave(X), rough(Y), owns(X,Y).\nfunny(bob).\nowns(carol,ball).\nnew(apple).\nsibling(alice,dave).\nparent(eve,bob).\nrough(book).\nlikes(frank,pencil).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if there exists C such that person X is calm and person C is brave, then person X is sad.\nFor all Y, if there exists U such that object Y is red and person U likes object Y and person U is sad, then object Y is heavy.\nFor all Z, if there exists W such that object Z is heavy and person W dislikes object Z and person W is bored, then object Z is small.\nFor all X, Z, if there exists C such that person Z is sad and person X is strong and person C is tired, then person X is an enemy of person Z.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if object X is light, then object X is red.\nFor all X, if person X is brave and person X is tired, then person X is curious.\nFor all X, if object X is new and object X is soft, then object X is smooth.\nFor all X, if person X is tall and person X is tall, then person X is sad.\nFor all X, Y, if person X is brave and object Y is rough and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nbob is funny.\ncarol owns ball.\napple is new.\nalice is a sibling of dave.\neve is a parent of bob.\nbook is rough.\nfrank likes pencil.\nfrank is a friend of bob.\n\nQUESTION:\nIs bob is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 476,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "happy(X) :- funny(X).\nweak(X) :- happy(X).\nexcited(X) :- weak(X).\nangry(X) :- excited(X).\nhungry(X) :- angry(X).\nsad(X) :- calm(X), brave(C).\nheavy(Y) :- red(Y), likes(U,Y), sad(U).\nsmall(Z) :- heavy(Z), dislikes(W,Z), bored(W).\nenemy(X,Z) :- sad(Z), strong(X), tired(C).\ncurious(X) :- strong(X).\nred(X) :- light(X).\ncurious(X) :- brave(X), tired(X).\nsmooth(X) :- new(X), soft(X).\nsad(X) :- tall(X), tall(X).\nlikes(X,Y) :- brave(X), rough(Y), owns(X,Y).\nfunny(bob).\nowns(carol,ball).\nnew(apple).\nsibling(alice,dave).\nparent(eve,bob).\nrough(book).\nlikes(frank,pencil).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if there exists C such that person X is calm and person C is brave, then person X is sad.\nFor all Y, if there exists U such that object Y is red and person U likes object Y and person U is sad, then object Y is heavy.\nFor all Z, if there exists W such that object Z is heavy and person W dislikes object Z and person W is bored, then object Z is small.\nFor all X, Z, if there exists C such that person Z is sad and person X is strong and person C is tired, then person X is an enemy of person Z.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if object X is light, then object X is red.\nFor all X, if person X is brave and person X is tired, then person X is curious.\nFor all X, if object X is new and object X is soft, then object X is smooth.\nFor all X, if person X is tall and person X is tall, then person X is sad.\nFor all X, Y, if person X is brave and object Y is rough and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nbob is funny.\ncarol owns ball.\napple is new.\nalice is a sibling of dave.\neve is a parent of bob.\nbook is rough.\nfrank likes pencil.\nfrank is a friend of bob.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 477,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(bob).",
    "c": "happy(X) :- funny(X).\nweak(X) :- happy(X).\nexcited(X) :- weak(X).\nangry(X) :- excited(X).\nhungry(X) :- angry(X).\nsad(X) :- calm(X), brave(C).\nheavy(Y) :- red(Y), likes(U,Y), sad(U).\nsmall(Z) :- heavy(Z), dislikes(W,Z), bored(W).\nenemy(X,Z) :- sad(Z), strong(X), tired(C).\ncurious(X) :- strong(X).\nred(X) :- light(X).\ncurious(X) :- brave(X), tired(X).\nsmooth(X) :- new(X), soft(X).\nsad(X) :- tall(X), tall(X).\nlikes(X,Y) :- brave(X), rough(Y), owns(X,Y).\nhungry(bob).\nowns(carol,ball).\nnew(apple).\nsibling(alice,dave).\nparent(eve,bob).\nrough(book).\nlikes(frank,pencil).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if there exists C such that person X is calm and person C is brave, then person X is sad.\nFor all Y, if there exists U such that object Y is red and person U likes object Y and person U is sad, then object Y is heavy.\nFor all Z, if there exists W such that object Z is heavy and person W dislikes object Z and person W is bored, then object Z is small.\nFor all X, Z, if there exists C such that person Z is sad and person X is strong and person C is tired, then person X is an enemy of person Z.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if object X is light, then object X is red.\nFor all X, if person X is brave and person X is tired, then person X is curious.\nFor all X, if object X is new and object X is soft, then object X is smooth.\nFor all X, if person X is tall and person X is tall, then person X is sad.\nFor all X, Y, if person X is brave and object Y is rough and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nbob is hungry.\ncarol owns ball.\napple is new.\nalice is a sibling of dave.\neve is a parent of bob.\nbook is rough.\nfrank likes pencil.\nfrank is a friend of bob.\n\nQUESTION:\nCould bob is funny explain bob is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 478,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(alice).",
    "c": "happy(X) :- funny(X).\nweak(X) :- happy(X).\nexcited(X) :- weak(X).\nangry(X) :- excited(X).\nhungry(X) :- angry(X).\nsad(X) :- calm(X), brave(C).\nheavy(Y) :- red(Y), likes(U,Y), sad(U).\nsmall(Z) :- heavy(Z), dislikes(W,Z), bored(W).\nenemy(X,Z) :- sad(Z), strong(X), tired(C).\ncurious(X) :- strong(X).\nred(X) :- light(X).\ncurious(X) :- brave(X), tired(X).\nsmooth(X) :- new(X), soft(X).\nsad(X) :- tall(X), tall(X).\nlikes(X,Y) :- brave(X), rough(Y), owns(X,Y).\nhungry(bob).\nowns(carol,ball).\nnew(apple).\nsibling(alice,dave).\nparent(eve,bob).\nrough(book).\nlikes(frank,pencil).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if there exists C such that person X is calm and person C is brave, then person X is sad.\nFor all Y, if there exists U such that object Y is red and person U likes object Y and person U is sad, then object Y is heavy.\nFor all Z, if there exists W such that object Z is heavy and person W dislikes object Z and person W is bored, then object Z is small.\nFor all X, Z, if there exists C such that person Z is sad and person X is strong and person C is tired, then person X is an enemy of person Z.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if object X is light, then object X is red.\nFor all X, if person X is brave and person X is tired, then person X is curious.\nFor all X, if object X is new and object X is soft, then object X is smooth.\nFor all X, if person X is tall and person X is tall, then person X is sad.\nFor all X, Y, if person X is brave and object Y is rough and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nbob is hungry.\ncarol owns ball.\napple is new.\nalice is a sibling of dave.\neve is a parent of bob.\nbook is rough.\nfrank likes pencil.\nfrank is a friend of bob.\n\nQUESTION:\nCould alice is brave explain bob is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 479,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(book).",
    "c": "big(X) :- old(X).\nclean(X) :- big(X).\nrough(X) :- clean(X).\nwet(X) :- rough(X).\nbig(X) :- wet(X).\nheavy(X) :- big(X).\nlight(X) :- heavy(X).\nclean(X) :- light(X).\nsoft(X) :- clean(X).\nlight(X) :- soft(X).\nsibling(X,Z) :- busy(Z), bored(X).\nred(Z) :- red(Z), likes(B,Z), funny(B).\nbrave(Z) :- angry(Z), likes(Z,B), red(B).\nfriendly(X) :- angry(X), weak(X).\nlikes(X,Y) :- calm(X), hard(Y).\nold(book).\nfriend(frank,carol).\nenemy(george,bob).\ntired(bob).\nsad(frank).\nfriend(bob,alice).\nbusy(alice).\nclever(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, Z, if person Z is busy and person X is bored, then person X is a sibling of person Z.\nFor all Z, if there exists B such that object Z is red and person B likes object Z and person B is funny, then object Z is red.\nFor all Z, if there exists B such that person Z is angry and person Z likes object B and object B is red, then person Z is brave.\nFor all X, if person X is angry and person X is weak, then person X is friendly.\nFor all X, Y, if person X is calm and object Y is hard, then person X likes object Y.\n\nAnd the following facts:\nbook is old.\nfrank is a friend of carol.\ngeorge is an enemy of bob.\nbob is tired.\nfrank is sad.\nbob is a friend of alice.\nalice is busy.\ncarol is clever.\n\nQUESTION:\nIs book is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 480,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(book).",
    "c": "big(X) :- old(X).\nclean(X) :- big(X).\nrough(X) :- clean(X).\nwet(X) :- rough(X).\nbig(X) :- wet(X).\nheavy(X) :- big(X).\nlight(X) :- heavy(X).\nclean(X) :- light(X).\nsoft(X) :- clean(X).\nlight(X) :- soft(X).\nsibling(X,Z) :- busy(Z), bored(X).\nred(Z) :- red(Z), likes(B,Z), funny(B).\nbrave(Z) :- angry(Z), likes(Z,B), red(B).\nfriendly(X) :- angry(X), weak(X).\nlikes(X,Y) :- calm(X), hard(Y).\nold(book).\nfriend(frank,carol).\nenemy(george,bob).\ntired(bob).\nsad(frank).\nfriend(bob,alice).\nbusy(alice).\nclever(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, Z, if person Z is busy and person X is bored, then person X is a sibling of person Z.\nFor all Z, if there exists B such that object Z is red and person B likes object Z and person B is funny, then object Z is red.\nFor all Z, if there exists B such that person Z is angry and person Z likes object B and object B is red, then person Z is brave.\nFor all X, if person X is angry and person X is weak, then person X is friendly.\nFor all X, Y, if person X is calm and object Y is hard, then person X likes object Y.\n\nAnd the following facts:\nbook is old.\nfrank is a friend of carol.\ngeorge is an enemy of bob.\nbob is tired.\nfrank is sad.\nbob is a friend of alice.\nalice is busy.\ncarol is clever.\n\nQUESTION:\nIs book is heavy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 481,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(book).",
    "c": "big(X) :- old(X).\nclean(X) :- big(X).\nrough(X) :- clean(X).\nwet(X) :- rough(X).\nbig(X) :- wet(X).\nheavy(X) :- big(X).\nlight(X) :- heavy(X).\nclean(X) :- light(X).\nsoft(X) :- clean(X).\nlight(X) :- soft(X).\nsibling(X,Z) :- busy(Z), bored(X).\nred(Z) :- red(Z), likes(B,Z), funny(B).\nbrave(Z) :- angry(Z), likes(Z,B), red(B).\nfriendly(X) :- angry(X), weak(X).\nlikes(X,Y) :- calm(X), hard(Y).\nlight(book).\nfriend(frank,carol).\nenemy(george,bob).\ntired(bob).\nsad(frank).\nfriend(bob,alice).\nbusy(alice).\nclever(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, Z, if person Z is busy and person X is bored, then person X is a sibling of person Z.\nFor all Z, if there exists B such that object Z is red and person B likes object Z and person B is funny, then object Z is red.\nFor all Z, if there exists B such that person Z is angry and person Z likes object B and object B is red, then person Z is brave.\nFor all X, if person X is angry and person X is weak, then person X is friendly.\nFor all X, Y, if person X is calm and object Y is hard, then person X likes object Y.\n\nAnd the following facts:\nbook is light.\nfrank is a friend of carol.\ngeorge is an enemy of bob.\nbob is tired.\nfrank is sad.\nbob is a friend of alice.\nalice is busy.\ncarol is clever.\n\nQUESTION:\nCould book is old explain book is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 482,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(phone).",
    "c": "big(X) :- old(X).\nclean(X) :- big(X).\nrough(X) :- clean(X).\nwet(X) :- rough(X).\nbig(X) :- wet(X).\nheavy(X) :- big(X).\nlight(X) :- heavy(X).\nclean(X) :- light(X).\nsoft(X) :- clean(X).\nlight(X) :- soft(X).\nsibling(X,Z) :- busy(Z), bored(X).\nred(Z) :- red(Z), likes(B,Z), funny(B).\nbrave(Z) :- angry(Z), likes(Z,B), red(B).\nfriendly(X) :- angry(X), weak(X).\nlikes(X,Y) :- calm(X), hard(Y).\nlight(book).\nfriend(frank,carol).\nenemy(george,bob).\ntired(bob).\nsad(frank).\nfriend(bob,alice).\nbusy(alice).\nclever(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, Z, if person Z is busy and person X is bored, then person X is a sibling of person Z.\nFor all Z, if there exists B such that object Z is red and person B likes object Z and person B is funny, then object Z is red.\nFor all Z, if there exists B such that person Z is angry and person Z likes object B and object B is red, then person Z is brave.\nFor all X, if person X is angry and person X is weak, then person X is friendly.\nFor all X, Y, if person X is calm and object Y is hard, then person X likes object Y.\n\nAnd the following facts:\nbook is light.\nfrank is a friend of carol.\ngeorge is an enemy of bob.\nbob is tired.\nfrank is sad.\nbob is a friend of alice.\nalice is busy.\ncarol is clever.\n\nQUESTION:\nCould phone is hard explain book is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 483,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(car).",
    "c": "rough(X) :- new(X).\nclean(X) :- rough(X).\nsmooth(X) :- clean(X).\nsoft(X) :- smooth(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nsoft(X) :- new(X).\nold(X) :- soft(X).\nnew(X) :- old(X).\nclean(X) :- new(X).\nhard(Z) :- light(Z), light(A).\nparent(Z,X) :- busy(Z), tall(X), friend(Z,V).\nlight(X) :- red(X), heavy(X).\nclever(X) :- bored(X), busy(X).\nclever(X) :- happy(X).\nnew(car).\nowns(alice,ball).\nowns(carol,car).\nenemy(dave,alice).\nfriend(alice,frank).\nsibling(frank,carol).\nsad(alice).\nfunny(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all Z, if there exists A such that object Z is light and object A is light, then object Z is hard.\nFor all X, Z, if there exists V such that person Z is busy and person X is tall and person Z is a friend of person V, then person Z is a parent of person X.\nFor all X, if object X is red and object X is heavy, then object X is light.\nFor all X, if person X is bored and person X is busy, then person X is clever.\nFor all X, if person X is happy, then person X is clever.\n\nAnd the following facts:\ncar is new.\nalice owns ball.\ncarol owns car.\ndave is an enemy of alice.\nalice is a friend of frank.\nfrank is a sibling of carol.\nalice is sad.\nbob is funny.\n\nQUESTION:\nIs car is clean true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 484,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "small(pencil).",
    "c": "rough(X) :- new(X).\nclean(X) :- rough(X).\nsmooth(X) :- clean(X).\nsoft(X) :- smooth(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nsoft(X) :- new(X).\nold(X) :- soft(X).\nnew(X) :- old(X).\nclean(X) :- new(X).\nhard(Z) :- light(Z), light(A).\nparent(Z,X) :- busy(Z), tall(X), friend(Z,V).\nlight(X) :- red(X), heavy(X).\nclever(X) :- bored(X), busy(X).\nclever(X) :- happy(X).\nnew(car).\nowns(alice,ball).\nowns(carol,car).\nenemy(dave,alice).\nfriend(alice,frank).\nsibling(frank,carol).\nsad(alice).\nfunny(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all Z, if there exists A such that object Z is light and object A is light, then object Z is hard.\nFor all X, Z, if there exists V such that person Z is busy and person X is tall and person Z is a friend of person V, then person Z is a parent of person X.\nFor all X, if object X is red and object X is heavy, then object X is light.\nFor all X, if person X is bored and person X is busy, then person X is clever.\nFor all X, if person X is happy, then person X is clever.\n\nAnd the following facts:\ncar is new.\nalice owns ball.\ncarol owns car.\ndave is an enemy of alice.\nalice is a friend of frank.\nfrank is a sibling of carol.\nalice is sad.\nbob is funny.\n\nQUESTION:\nIs pencil is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 485,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(car).",
    "c": "rough(X) :- new(X).\nclean(X) :- rough(X).\nsmooth(X) :- clean(X).\nsoft(X) :- smooth(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nsoft(X) :- new(X).\nold(X) :- soft(X).\nnew(X) :- old(X).\nclean(X) :- new(X).\nhard(Z) :- light(Z), light(A).\nparent(Z,X) :- busy(Z), tall(X), friend(Z,V).\nlight(X) :- red(X), heavy(X).\nclever(X) :- bored(X), busy(X).\nclever(X) :- happy(X).\nclean(car).\nowns(alice,ball).\nowns(carol,car).\nenemy(dave,alice).\nfriend(alice,frank).\nsibling(frank,carol).\nsad(alice).\nfunny(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all Z, if there exists A such that object Z is light and object A is light, then object Z is hard.\nFor all X, Z, if there exists V such that person Z is busy and person X is tall and person Z is a friend of person V, then person Z is a parent of person X.\nFor all X, if object X is red and object X is heavy, then object X is light.\nFor all X, if person X is bored and person X is busy, then person X is clever.\nFor all X, if person X is happy, then person X is clever.\n\nAnd the following facts:\ncar is clean.\nalice owns ball.\ncarol owns car.\ndave is an enemy of alice.\nalice is a friend of frank.\nfrank is a sibling of carol.\nalice is sad.\nbob is funny.\n\nQUESTION:\nCould car is new explain car is clean?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 486,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(george).",
    "c": "rough(X) :- new(X).\nclean(X) :- rough(X).\nsmooth(X) :- clean(X).\nsoft(X) :- smooth(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nsoft(X) :- new(X).\nold(X) :- soft(X).\nnew(X) :- old(X).\nclean(X) :- new(X).\nhard(Z) :- light(Z), light(A).\nparent(Z,X) :- busy(Z), tall(X), friend(Z,V).\nlight(X) :- red(X), heavy(X).\nclever(X) :- bored(X), busy(X).\nclever(X) :- happy(X).\nclean(car).\nowns(alice,ball).\nowns(carol,car).\nenemy(dave,alice).\nfriend(alice,frank).\nsibling(frank,carol).\nsad(alice).\nfunny(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all Z, if there exists A such that object Z is light and object A is light, then object Z is hard.\nFor all X, Z, if there exists V such that person Z is busy and person X is tall and person Z is a friend of person V, then person Z is a parent of person X.\nFor all X, if object X is red and object X is heavy, then object X is light.\nFor all X, if person X is bored and person X is busy, then person X is clever.\nFor all X, if person X is happy, then person X is clever.\n\nAnd the following facts:\ncar is clean.\nalice owns ball.\ncarol owns car.\ndave is an enemy of alice.\nalice is a friend of frank.\nfrank is a sibling of carol.\nalice is sad.\nbob is funny.\n\nQUESTION:\nCould george is busy explain car is clean?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 487,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(dave).",
    "c": "happy(X) :- weak(X).\nfriendly(X) :- happy(X).\nclever(X) :- friendly(X).\nbored(X) :- clever(X).\ncurious(X) :- bored(X).\nbusy(X) :- curious(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nexcited(X) :- brave(X).\ntired(X) :- excited(X).\nangry(X) :- strong(X), likes(X,V), dirty(V).\nsad(Z) :- funny(Z), owns(Z,W), old(W).\ndislikes(X,Y) :- tall(X), hard(Y).\nlight(X) :- smooth(X).\nheavy(X) :- wet(X), rough(X).\nweak(dave).\nenemy(eve,dave).\nowns(frank,apple).\nenemy(eve,frank).\nenemy(frank,dave).\nangry(dave).\ncalm(alice).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if there exists V such that person X is strong and person X likes object V and object V is dirty, then person X is angry.\nFor all Z, if there exists W such that person Z is funny and person Z owns object W and object W is old, then person Z is sad.\nFor all X, Y, if person X is tall and object Y is hard, then person X dislikes object Y.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is wet and object X is rough, then object X is heavy.\n\nAnd the following facts:\ndave is weak.\neve is an enemy of dave.\nfrank owns apple.\neve is an enemy of frank.\nfrank is an enemy of dave.\ndave is angry.\nalice is calm.\ngeorge likes pencil.\n\nQUESTION:\nIs dave is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 488,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "happy(X) :- weak(X).\nfriendly(X) :- happy(X).\nclever(X) :- friendly(X).\nbored(X) :- clever(X).\ncurious(X) :- bored(X).\nbusy(X) :- curious(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nexcited(X) :- brave(X).\ntired(X) :- excited(X).\nangry(X) :- strong(X), likes(X,V), dirty(V).\nsad(Z) :- funny(Z), owns(Z,W), old(W).\ndislikes(X,Y) :- tall(X), hard(Y).\nlight(X) :- smooth(X).\nheavy(X) :- wet(X), rough(X).\nweak(dave).\nenemy(eve,dave).\nowns(frank,apple).\nenemy(eve,frank).\nenemy(frank,dave).\nangry(dave).\ncalm(alice).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if there exists V such that person X is strong and person X likes object V and object V is dirty, then person X is angry.\nFor all Z, if there exists W such that person Z is funny and person Z owns object W and object W is old, then person Z is sad.\nFor all X, Y, if person X is tall and object Y is hard, then person X dislikes object Y.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is wet and object X is rough, then object X is heavy.\n\nAnd the following facts:\ndave is weak.\neve is an enemy of dave.\nfrank owns apple.\neve is an enemy of frank.\nfrank is an enemy of dave.\ndave is angry.\nalice is calm.\ngeorge likes pencil.\n\nQUESTION:\nIs bob is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 489,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "happy(X) :- weak(X).\nfriendly(X) :- happy(X).\nclever(X) :- friendly(X).\nbored(X) :- clever(X).\ncurious(X) :- bored(X).\nbusy(X) :- curious(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nexcited(X) :- brave(X).\ntired(X) :- excited(X).\nangry(X) :- strong(X), likes(X,V), dirty(V).\nsad(Z) :- funny(Z), owns(Z,W), old(W).\ndislikes(X,Y) :- tall(X), hard(Y).\nlight(X) :- smooth(X).\nheavy(X) :- wet(X), rough(X).\ntired(dave).\nenemy(eve,dave).\nowns(frank,apple).\nenemy(eve,frank).\nenemy(frank,dave).\nangry(dave).\ncalm(alice).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if there exists V such that person X is strong and person X likes object V and object V is dirty, then person X is angry.\nFor all Z, if there exists W such that person Z is funny and person Z owns object W and object W is old, then person Z is sad.\nFor all X, Y, if person X is tall and object Y is hard, then person X dislikes object Y.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is wet and object X is rough, then object X is heavy.\n\nAnd the following facts:\ndave is tired.\neve is an enemy of dave.\nfrank owns apple.\neve is an enemy of frank.\nfrank is an enemy of dave.\ndave is angry.\nalice is calm.\ngeorge likes pencil.\n\nQUESTION:\nCould dave is weak explain dave is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 490,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(frank).",
    "c": "happy(X) :- weak(X).\nfriendly(X) :- happy(X).\nclever(X) :- friendly(X).\nbored(X) :- clever(X).\ncurious(X) :- bored(X).\nbusy(X) :- curious(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nexcited(X) :- brave(X).\ntired(X) :- excited(X).\nangry(X) :- strong(X), likes(X,V), dirty(V).\nsad(Z) :- funny(Z), owns(Z,W), old(W).\ndislikes(X,Y) :- tall(X), hard(Y).\nlight(X) :- smooth(X).\nheavy(X) :- wet(X), rough(X).\ntired(dave).\nenemy(eve,dave).\nowns(frank,apple).\nenemy(eve,frank).\nenemy(frank,dave).\nangry(dave).\ncalm(alice).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if there exists V such that person X is strong and person X likes object V and object V is dirty, then person X is angry.\nFor all Z, if there exists W such that person Z is funny and person Z owns object W and object W is old, then person Z is sad.\nFor all X, Y, if person X is tall and object Y is hard, then person X dislikes object Y.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is wet and object X is rough, then object X is heavy.\n\nAnd the following facts:\ndave is tired.\neve is an enemy of dave.\nfrank owns apple.\neve is an enemy of frank.\nfrank is an enemy of dave.\ndave is angry.\nalice is calm.\ngeorge likes pencil.\n\nQUESTION:\nCould frank is busy explain dave is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 491,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(eve).",
    "c": "strong(X) :- friendly(X).\ntired(X) :- strong(X).\nfunny(X) :- tired(X).\ntall(X) :- funny(X).\nangry(X) :- tall(X).\nclever(X) :- angry(X).\nbrave(X) :- clever(X).\nweak(X) :- brave(X).\nhappy(X) :- weak(X).\nsad(X) :- happy(X).\nsmall(X) :- heavy(X), hard(C).\nparent(X,Y) :- calm(Y), calm(X), friend(Y,A).\nlight(X) :- old(X).\nenemy(X,Y) :- hungry(X), busy(Y).\nsibling(X,Y) :- excited(X), excited(Y).\nfriendly(eve).\nbusy(alice).\nsibling(bob,carol).\nowns(eve,ball).\nenemy(bob,alice).\nparent(alice,dave).\nlikes(frank,phone).\nbig(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if there exists C such that object X is heavy and object C is hard, then object X is small.\nFor all X, Y, if there exists A such that person Y is calm and person X is calm and person Y is a friend of person A, then person X is a parent of person Y.\nFor all X, if object X is old, then object X is light.\nFor all X, Y, if person X is hungry and person Y is busy, then person X is an enemy of person Y.\nFor all X, Y, if person X is excited and person Y is excited, then person X is a sibling of person Y.\n\nAnd the following facts:\neve is friendly.\nalice is busy.\nbob is a sibling of carol.\neve owns ball.\nbob is an enemy of alice.\nalice is a parent of dave.\nfrank likes phone.\npencil is big.\n\nQUESTION:\nIs eve is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 492,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(alice).",
    "c": "strong(X) :- friendly(X).\ntired(X) :- strong(X).\nfunny(X) :- tired(X).\ntall(X) :- funny(X).\nangry(X) :- tall(X).\nclever(X) :- angry(X).\nbrave(X) :- clever(X).\nweak(X) :- brave(X).\nhappy(X) :- weak(X).\nsad(X) :- happy(X).\nsmall(X) :- heavy(X), hard(C).\nparent(X,Y) :- calm(Y), calm(X), friend(Y,A).\nlight(X) :- old(X).\nenemy(X,Y) :- hungry(X), busy(Y).\nsibling(X,Y) :- excited(X), excited(Y).\nfriendly(eve).\nbusy(alice).\nsibling(bob,carol).\nowns(eve,ball).\nenemy(bob,alice).\nparent(alice,dave).\nlikes(frank,phone).\nbig(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if there exists C such that object X is heavy and object C is hard, then object X is small.\nFor all X, Y, if there exists A such that person Y is calm and person X is calm and person Y is a friend of person A, then person X is a parent of person Y.\nFor all X, if object X is old, then object X is light.\nFor all X, Y, if person X is hungry and person Y is busy, then person X is an enemy of person Y.\nFor all X, Y, if person X is excited and person Y is excited, then person X is a sibling of person Y.\n\nAnd the following facts:\neve is friendly.\nalice is busy.\nbob is a sibling of carol.\neve owns ball.\nbob is an enemy of alice.\nalice is a parent of dave.\nfrank likes phone.\npencil is big.\n\nQUESTION:\nIs alice is brave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 493,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "strong(X) :- friendly(X).\ntired(X) :- strong(X).\nfunny(X) :- tired(X).\ntall(X) :- funny(X).\nangry(X) :- tall(X).\nclever(X) :- angry(X).\nbrave(X) :- clever(X).\nweak(X) :- brave(X).\nhappy(X) :- weak(X).\nsad(X) :- happy(X).\nsmall(X) :- heavy(X), hard(C).\nparent(X,Y) :- calm(Y), calm(X), friend(Y,A).\nlight(X) :- old(X).\nenemy(X,Y) :- hungry(X), busy(Y).\nsibling(X,Y) :- excited(X), excited(Y).\nsad(eve).\nbusy(alice).\nsibling(bob,carol).\nowns(eve,ball).\nenemy(bob,alice).\nparent(alice,dave).\nlikes(frank,phone).\nbig(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if there exists C such that object X is heavy and object C is hard, then object X is small.\nFor all X, Y, if there exists A such that person Y is calm and person X is calm and person Y is a friend of person A, then person X is a parent of person Y.\nFor all X, if object X is old, then object X is light.\nFor all X, Y, if person X is hungry and person Y is busy, then person X is an enemy of person Y.\nFor all X, Y, if person X is excited and person Y is excited, then person X is a sibling of person Y.\n\nAnd the following facts:\neve is sad.\nalice is busy.\nbob is a sibling of carol.\neve owns ball.\nbob is an enemy of alice.\nalice is a parent of dave.\nfrank likes phone.\npencil is big.\n\nQUESTION:\nCould eve is friendly explain eve is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 494,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(bob).",
    "c": "strong(X) :- friendly(X).\ntired(X) :- strong(X).\nfunny(X) :- tired(X).\ntall(X) :- funny(X).\nangry(X) :- tall(X).\nclever(X) :- angry(X).\nbrave(X) :- clever(X).\nweak(X) :- brave(X).\nhappy(X) :- weak(X).\nsad(X) :- happy(X).\nsmall(X) :- heavy(X), hard(C).\nparent(X,Y) :- calm(Y), calm(X), friend(Y,A).\nlight(X) :- old(X).\nenemy(X,Y) :- hungry(X), busy(Y).\nsibling(X,Y) :- excited(X), excited(Y).\nsad(eve).\nbusy(alice).\nsibling(bob,carol).\nowns(eve,ball).\nenemy(bob,alice).\nparent(alice,dave).\nlikes(frank,phone).\nbig(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if there exists C such that object X is heavy and object C is hard, then object X is small.\nFor all X, Y, if there exists A such that person Y is calm and person X is calm and person Y is a friend of person A, then person X is a parent of person Y.\nFor all X, if object X is old, then object X is light.\nFor all X, Y, if person X is hungry and person Y is busy, then person X is an enemy of person Y.\nFor all X, Y, if person X is excited and person Y is excited, then person X is a sibling of person Y.\n\nAnd the following facts:\neve is sad.\nalice is busy.\nbob is a sibling of carol.\neve owns ball.\nbob is an enemy of alice.\nalice is a parent of dave.\nfrank likes phone.\npencil is big.\n\nQUESTION:\nCould bob is weak explain eve is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 495,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(frank).",
    "c": "tired(X) :- sad(X).\nnew(Y) :- smooth(Y), owns(U,Y), tall(U).\nnew(Z) :- light(Z), dislikes(W,Z), angry(W).\nowns(Y,X) :- hungry(Y), old(X).\nstrong(Z) :- tall(Z).\nparent(Z,Y) :- calm(Y), busy(Z), owns(Y,A).\nold(Y) :- small(Y), busy(B).\nlikes(Z,Y) :- light(Y), funny(Z), heavy(D).\nlight(X) :- rough(X), big(X).\nbusy(X) :- weak(X), friendly(X).\nbored(X) :- hungry(X).\nclean(X) :- new(X).\nnew(X) :- small(X).\ntall(X) :- hungry(X).\nbig(X) :- old(X), wet(X).\nsad(frank).\nclever(frank).\nclean(pencil).\nenemy(frank,dave).\nowns(dave,ball).\nbored(carol).\nparent(george,eve).\nenemy(george,frank).\nfriend(carol,eve).\ndislikes(george,ball).\nowns(alice,book).\nbrave(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is tired.\nFor all Y, if there exists U such that object Y is smooth and person U owns object Y and person U is tall, then object Y is new.\nFor all Z, if there exists W such that object Z is light and person W dislikes object Z and person W is angry, then object Z is new.\nFor all X, Y, if person Y is hungry and object X is old, then person Y owns object X.\nFor all Z, if person Z is tall, then person Z is strong.\nFor all Y, Z, if there exists A such that person Y is calm and person Z is busy and person Y owns object A, then person Z is a parent of person Y.\nFor all Y, if there exists B such that object Y is small and person B is busy, then object Y is old.\nFor all Y, Z, if there exists D such that object Y is light and person Z is funny and object D is heavy, then person Z likes object Y.\nFor all X, if object X is rough and object X is big, then object X is light.\nFor all X, if person X is weak and person X is friendly, then person X is busy.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is small, then object X is new.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if object X is old and object X is wet, then object X is big.\n\nAnd the following facts:\nfrank is sad.\nfrank is clever.\npencil is clean.\nfrank is an enemy of dave.\ndave owns ball.\ncarol is bored.\ngeorge is a parent of eve.\ngeorge is an enemy of frank.\ncarol is a friend of eve.\ngeorge dislikes ball.\nalice owns book.\nfrank is brave.\n\nQUESTION:\nIs frank is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 496,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(carol).",
    "c": "tired(X) :- sad(X).\nnew(Y) :- smooth(Y), owns(U,Y), tall(U).\nnew(Z) :- light(Z), dislikes(W,Z), angry(W).\nowns(Y,X) :- hungry(Y), old(X).\nstrong(Z) :- tall(Z).\nparent(Z,Y) :- calm(Y), busy(Z), owns(Y,A).\nold(Y) :- small(Y), busy(B).\nlikes(Z,Y) :- light(Y), funny(Z), heavy(D).\nlight(X) :- rough(X), big(X).\nbusy(X) :- weak(X), friendly(X).\nbored(X) :- hungry(X).\nclean(X) :- new(X).\nnew(X) :- small(X).\ntall(X) :- hungry(X).\nbig(X) :- old(X), wet(X).\nsad(frank).\nclever(frank).\nclean(pencil).\nenemy(frank,dave).\nowns(dave,ball).\nbored(carol).\nparent(george,eve).\nenemy(george,frank).\nfriend(carol,eve).\ndislikes(george,ball).\nowns(alice,book).\nbrave(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is tired.\nFor all Y, if there exists U such that object Y is smooth and person U owns object Y and person U is tall, then object Y is new.\nFor all Z, if there exists W such that object Z is light and person W dislikes object Z and person W is angry, then object Z is new.\nFor all X, Y, if person Y is hungry and object X is old, then person Y owns object X.\nFor all Z, if person Z is tall, then person Z is strong.\nFor all Y, Z, if there exists A such that person Y is calm and person Z is busy and person Y owns object A, then person Z is a parent of person Y.\nFor all Y, if there exists B such that object Y is small and person B is busy, then object Y is old.\nFor all Y, Z, if there exists D such that object Y is light and person Z is funny and object D is heavy, then person Z likes object Y.\nFor all X, if object X is rough and object X is big, then object X is light.\nFor all X, if person X is weak and person X is friendly, then person X is busy.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is small, then object X is new.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if object X is old and object X is wet, then object X is big.\n\nAnd the following facts:\nfrank is sad.\nfrank is clever.\npencil is clean.\nfrank is an enemy of dave.\ndave owns ball.\ncarol is bored.\ngeorge is a parent of eve.\ngeorge is an enemy of frank.\ncarol is a friend of eve.\ngeorge dislikes ball.\nalice owns book.\nfrank is brave.\n\nQUESTION:\nIs carol is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 497,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(frank).",
    "c": "tired(X) :- sad(X).\nnew(Y) :- smooth(Y), owns(U,Y), tall(U).\nnew(Z) :- light(Z), dislikes(W,Z), angry(W).\nowns(Y,X) :- hungry(Y), old(X).\nstrong(Z) :- tall(Z).\nparent(Z,Y) :- calm(Y), busy(Z), owns(Y,A).\nold(Y) :- small(Y), busy(B).\nlikes(Z,Y) :- light(Y), funny(Z), heavy(D).\nlight(X) :- rough(X), big(X).\nbusy(X) :- weak(X), friendly(X).\nbored(X) :- hungry(X).\nclean(X) :- new(X).\nnew(X) :- small(X).\ntall(X) :- hungry(X).\nbig(X) :- old(X), wet(X).\ntired(frank).\nclever(frank).\nclean(pencil).\nenemy(frank,dave).\nowns(dave,ball).\nbored(carol).\nparent(george,eve).\nenemy(george,frank).\nfriend(carol,eve).\ndislikes(george,ball).\nowns(alice,book).\nbrave(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is tired.\nFor all Y, if there exists U such that object Y is smooth and person U owns object Y and person U is tall, then object Y is new.\nFor all Z, if there exists W such that object Z is light and person W dislikes object Z and person W is angry, then object Z is new.\nFor all X, Y, if person Y is hungry and object X is old, then person Y owns object X.\nFor all Z, if person Z is tall, then person Z is strong.\nFor all Y, Z, if there exists A such that person Y is calm and person Z is busy and person Y owns object A, then person Z is a parent of person Y.\nFor all Y, if there exists B such that object Y is small and person B is busy, then object Y is old.\nFor all Y, Z, if there exists D such that object Y is light and person Z is funny and object D is heavy, then person Z likes object Y.\nFor all X, if object X is rough and object X is big, then object X is light.\nFor all X, if person X is weak and person X is friendly, then person X is busy.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is small, then object X is new.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if object X is old and object X is wet, then object X is big.\n\nAnd the following facts:\nfrank is tired.\nfrank is clever.\npencil is clean.\nfrank is an enemy of dave.\ndave owns ball.\ncarol is bored.\ngeorge is a parent of eve.\ngeorge is an enemy of frank.\ncarol is a friend of eve.\ngeorge dislikes ball.\nalice owns book.\nfrank is brave.\n\nQUESTION:\nCould frank is sad explain frank is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 498,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(pencil).",
    "c": "tired(X) :- sad(X).\nnew(Y) :- smooth(Y), owns(U,Y), tall(U).\nnew(Z) :- light(Z), dislikes(W,Z), angry(W).\nowns(Y,X) :- hungry(Y), old(X).\nstrong(Z) :- tall(Z).\nparent(Z,Y) :- calm(Y), busy(Z), owns(Y,A).\nold(Y) :- small(Y), busy(B).\nlikes(Z,Y) :- light(Y), funny(Z), heavy(D).\nlight(X) :- rough(X), big(X).\nbusy(X) :- weak(X), friendly(X).\nbored(X) :- hungry(X).\nclean(X) :- new(X).\nnew(X) :- small(X).\ntall(X) :- hungry(X).\nbig(X) :- old(X), wet(X).\ntired(frank).\nclever(frank).\nclean(pencil).\nenemy(frank,dave).\nowns(dave,ball).\nbored(carol).\nparent(george,eve).\nenemy(george,frank).\nfriend(carol,eve).\ndislikes(george,ball).\nowns(alice,book).\nbrave(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is tired.\nFor all Y, if there exists U such that object Y is smooth and person U owns object Y and person U is tall, then object Y is new.\nFor all Z, if there exists W such that object Z is light and person W dislikes object Z and person W is angry, then object Z is new.\nFor all X, Y, if person Y is hungry and object X is old, then person Y owns object X.\nFor all Z, if person Z is tall, then person Z is strong.\nFor all Y, Z, if there exists A such that person Y is calm and person Z is busy and person Y owns object A, then person Z is a parent of person Y.\nFor all Y, if there exists B such that object Y is small and person B is busy, then object Y is old.\nFor all Y, Z, if there exists D such that object Y is light and person Z is funny and object D is heavy, then person Z likes object Y.\nFor all X, if object X is rough and object X is big, then object X is light.\nFor all X, if person X is weak and person X is friendly, then person X is busy.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is small, then object X is new.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if object X is old and object X is wet, then object X is big.\n\nAnd the following facts:\nfrank is tired.\nfrank is clever.\npencil is clean.\nfrank is an enemy of dave.\ndave owns ball.\ncarol is bored.\ngeorge is a parent of eve.\ngeorge is an enemy of frank.\ncarol is a friend of eve.\ngeorge dislikes ball.\nalice owns book.\nfrank is brave.\n\nQUESTION:\nCould pencil is big explain frank is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 499,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "light(X) :- small(X).\nold(X) :- dirty(X).\nheavy(Z) :- new(Z), friendly(E).\nbrave(X) :- brave(X).\ntired(X) :- weak(X), friend(X,W), bored(W).\ndislikes(X,Y) :- smooth(Y), tall(X), friend(X,V).\nenemy(Y,Z) :- friendly(Y), sad(Z), parent(Z,B).\nfunny(Z) :- excited(Z).\nwet(Y) :- wet(Y).\nheavy(X) :- clean(X), likes(W,X), tired(W).\ncurious(X) :- weak(X), strong(X).\ntall(X) :- weak(X).\nwet(X) :- hard(X).\nwet(X) :- heavy(X).\nclean(X) :- smooth(X), smooth(X).\nsmall(ball).\ndislikes(dave,apple).\nenemy(alice,george).\nfriend(eve,frank).\nbusy(eve).\nhungry(dave).\nparent(eve,alice).\nnew(apple).\nparent(frank,dave).\nparent(eve,carol).\ncurious(bob).\nbrave(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is dirty, then object X is old.\nFor all Z, if there exists E such that object Z is new and person E is friendly, then object Z is heavy.\nFor all X, if person X is brave, then person X is brave.\nFor all X, if there exists W such that person X is weak and person X is a friend of person W and person W is bored, then person X is tired.\nFor all X, Y, if there exists V such that object Y is smooth and person X is tall and person X is a friend of person V, then person X dislikes object Y.\nFor all Y, Z, if there exists B such that person Y is friendly and person Z is sad and person Z is a parent of person B, then person Y is an enemy of person Z.\nFor all Z, if person Z is excited, then person Z is funny.\nFor all Y, if object Y is wet, then object Y is wet.\nFor all X, if there exists W such that object X is clean and person W likes object X and person W is tired, then object X is heavy.\nFor all X, if person X is weak and person X is strong, then person X is curious.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is heavy, then object X is wet.\nFor all X, if object X is smooth and object X is smooth, then object X is clean.\n\nAnd the following facts:\nball is small.\ndave dislikes apple.\nalice is an enemy of george.\neve is a friend of frank.\neve is busy.\ndave is hungry.\neve is a parent of alice.\napple is new.\nfrank is a parent of dave.\neve is a parent of carol.\nbob is curious.\nalice is brave.\n\nQUESTION:\nIs ball is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 500,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(book).",
    "c": "light(X) :- small(X).\nold(X) :- dirty(X).\nheavy(Z) :- new(Z), friendly(E).\nbrave(X) :- brave(X).\ntired(X) :- weak(X), friend(X,W), bored(W).\ndislikes(X,Y) :- smooth(Y), tall(X), friend(X,V).\nenemy(Y,Z) :- friendly(Y), sad(Z), parent(Z,B).\nfunny(Z) :- excited(Z).\nwet(Y) :- wet(Y).\nheavy(X) :- clean(X), likes(W,X), tired(W).\ncurious(X) :- weak(X), strong(X).\ntall(X) :- weak(X).\nwet(X) :- hard(X).\nwet(X) :- heavy(X).\nclean(X) :- smooth(X), smooth(X).\nsmall(ball).\ndislikes(dave,apple).\nenemy(alice,george).\nfriend(eve,frank).\nbusy(eve).\nhungry(dave).\nparent(eve,alice).\nnew(apple).\nparent(frank,dave).\nparent(eve,carol).\ncurious(bob).\nbrave(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is dirty, then object X is old.\nFor all Z, if there exists E such that object Z is new and person E is friendly, then object Z is heavy.\nFor all X, if person X is brave, then person X is brave.\nFor all X, if there exists W such that person X is weak and person X is a friend of person W and person W is bored, then person X is tired.\nFor all X, Y, if there exists V such that object Y is smooth and person X is tall and person X is a friend of person V, then person X dislikes object Y.\nFor all Y, Z, if there exists B such that person Y is friendly and person Z is sad and person Z is a parent of person B, then person Y is an enemy of person Z.\nFor all Z, if person Z is excited, then person Z is funny.\nFor all Y, if object Y is wet, then object Y is wet.\nFor all X, if there exists W such that object X is clean and person W likes object X and person W is tired, then object X is heavy.\nFor all X, if person X is weak and person X is strong, then person X is curious.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is heavy, then object X is wet.\nFor all X, if object X is smooth and object X is smooth, then object X is clean.\n\nAnd the following facts:\nball is small.\ndave dislikes apple.\nalice is an enemy of george.\neve is a friend of frank.\neve is busy.\ndave is hungry.\neve is a parent of alice.\napple is new.\nfrank is a parent of dave.\neve is a parent of carol.\nbob is curious.\nalice is brave.\n\nQUESTION:\nIs book is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 501,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(ball).",
    "c": "light(X) :- small(X).\nold(X) :- dirty(X).\nheavy(Z) :- new(Z), friendly(E).\nbrave(X) :- brave(X).\ntired(X) :- weak(X), friend(X,W), bored(W).\ndislikes(X,Y) :- smooth(Y), tall(X), friend(X,V).\nenemy(Y,Z) :- friendly(Y), sad(Z), parent(Z,B).\nfunny(Z) :- excited(Z).\nwet(Y) :- wet(Y).\nheavy(X) :- clean(X), likes(W,X), tired(W).\ncurious(X) :- weak(X), strong(X).\ntall(X) :- weak(X).\nwet(X) :- hard(X).\nwet(X) :- heavy(X).\nclean(X) :- smooth(X), smooth(X).\nlight(ball).\ndislikes(dave,apple).\nenemy(alice,george).\nfriend(eve,frank).\nbusy(eve).\nhungry(dave).\nparent(eve,alice).\nnew(apple).\nparent(frank,dave).\nparent(eve,carol).\ncurious(bob).\nbrave(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is dirty, then object X is old.\nFor all Z, if there exists E such that object Z is new and person E is friendly, then object Z is heavy.\nFor all X, if person X is brave, then person X is brave.\nFor all X, if there exists W such that person X is weak and person X is a friend of person W and person W is bored, then person X is tired.\nFor all X, Y, if there exists V such that object Y is smooth and person X is tall and person X is a friend of person V, then person X dislikes object Y.\nFor all Y, Z, if there exists B such that person Y is friendly and person Z is sad and person Z is a parent of person B, then person Y is an enemy of person Z.\nFor all Z, if person Z is excited, then person Z is funny.\nFor all Y, if object Y is wet, then object Y is wet.\nFor all X, if there exists W such that object X is clean and person W likes object X and person W is tired, then object X is heavy.\nFor all X, if person X is weak and person X is strong, then person X is curious.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is heavy, then object X is wet.\nFor all X, if object X is smooth and object X is smooth, then object X is clean.\n\nAnd the following facts:\nball is light.\ndave dislikes apple.\nalice is an enemy of george.\neve is a friend of frank.\neve is busy.\ndave is hungry.\neve is a parent of alice.\napple is new.\nfrank is a parent of dave.\neve is a parent of carol.\nbob is curious.\nalice is brave.\n\nQUESTION:\nCould ball is small explain ball is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 502,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "light(X) :- small(X).\nold(X) :- dirty(X).\nheavy(Z) :- new(Z), friendly(E).\nbrave(X) :- brave(X).\ntired(X) :- weak(X), friend(X,W), bored(W).\ndislikes(X,Y) :- smooth(Y), tall(X), friend(X,V).\nenemy(Y,Z) :- friendly(Y), sad(Z), parent(Z,B).\nfunny(Z) :- excited(Z).\nwet(Y) :- wet(Y).\nheavy(X) :- clean(X), likes(W,X), tired(W).\ncurious(X) :- weak(X), strong(X).\ntall(X) :- weak(X).\nwet(X) :- hard(X).\nwet(X) :- heavy(X).\nclean(X) :- smooth(X), smooth(X).\nlight(ball).\ndislikes(dave,apple).\nenemy(alice,george).\nfriend(eve,frank).\nbusy(eve).\nhungry(dave).\nparent(eve,alice).\nnew(apple).\nparent(frank,dave).\nparent(eve,carol).\ncurious(bob).\nbrave(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is dirty, then object X is old.\nFor all Z, if there exists E such that object Z is new and person E is friendly, then object Z is heavy.\nFor all X, if person X is brave, then person X is brave.\nFor all X, if there exists W such that person X is weak and person X is a friend of person W and person W is bored, then person X is tired.\nFor all X, Y, if there exists V such that object Y is smooth and person X is tall and person X is a friend of person V, then person X dislikes object Y.\nFor all Y, Z, if there exists B such that person Y is friendly and person Z is sad and person Z is a parent of person B, then person Y is an enemy of person Z.\nFor all Z, if person Z is excited, then person Z is funny.\nFor all Y, if object Y is wet, then object Y is wet.\nFor all X, if there exists W such that object X is clean and person W likes object X and person W is tired, then object X is heavy.\nFor all X, if person X is weak and person X is strong, then person X is curious.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is heavy, then object X is wet.\nFor all X, if object X is smooth and object X is smooth, then object X is clean.\n\nAnd the following facts:\nball is light.\ndave dislikes apple.\nalice is an enemy of george.\neve is a friend of frank.\neve is busy.\ndave is hungry.\neve is a parent of alice.\napple is new.\nfrank is a parent of dave.\neve is a parent of carol.\nbob is curious.\nalice is brave.\n\nQUESTION:\nCould dave is curious explain ball is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 503,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(dave).",
    "c": "brave(X) :- weak(X).\nsad(X) :- hungry(X), enemy(X,B), busy(B).\nnew(Y) :- dirty(Y).\nrough(Z) :- dirty(Z), dislikes(U,Z), curious(U).\nlight(Z) :- small(Z), likes(W,Z), busy(W).\ndislikes(Y,Z) :- hungry(Y), small(Z), likes(B,Z).\nbusy(X) :- tall(X), owns(X,U), wet(U).\ncurious(X) :- friendly(X), angry(X).\nhard(X) :- small(X).\nclever(X) :- strong(X).\nowns(X,Y) :- calm(X), dirty(Y).\nsad(X) :- calm(X), happy(X).\nparent(X,Y) :- funny(X), busy(Y), friend(X,Y).\nclean(X) :- soft(X).\nhappy(X) :- tall(X).\nweak(dave).\nlikes(eve,car).\nfriend(george,bob).\nlikes(alice,phone).\nenemy(carol,eve).\nsibling(frank,carol).\nbusy(eve).\nheavy(apple).\nsibling(bob,frank).\nstrong(dave).\nbored(alice).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is brave.\nFor all X, if there exists B such that person X is hungry and person X is an enemy of person B and person B is busy, then person X is sad.\nFor all Y, if object Y is dirty, then object Y is new.\nFor all Z, if there exists U such that object Z is dirty and person U dislikes object Z and person U is curious, then object Z is rough.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is busy, then object Z is light.\nFor all Y, Z, if there exists B such that person Y is hungry and object Z is small and person B likes object Z, then person Y dislikes object Z.\nFor all X, if there exists U such that person X is tall and person X owns object U and object U is wet, then person X is busy.\nFor all X, if person X is friendly and person X is angry, then person X is curious.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is strong, then person X is clever.\nFor all X, Y, if person X is calm and object Y is dirty, then person X owns object Y.\nFor all X, if person X is calm and person X is happy, then person X is sad.\nFor all X, Y, if person X is funny and person Y is busy and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if person X is tall, then person X is happy.\n\nAnd the following facts:\ndave is weak.\neve likes car.\ngeorge is a friend of bob.\nalice likes phone.\ncarol is an enemy of eve.\nfrank is a sibling of carol.\neve is busy.\napple is heavy.\nbob is a sibling of frank.\ndave is strong.\nalice is bored.\nfrank likes ball.\n\nQUESTION:\nIs dave is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 504,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "small(pencil).",
    "c": "brave(X) :- weak(X).\nsad(X) :- hungry(X), enemy(X,B), busy(B).\nnew(Y) :- dirty(Y).\nrough(Z) :- dirty(Z), dislikes(U,Z), curious(U).\nlight(Z) :- small(Z), likes(W,Z), busy(W).\ndislikes(Y,Z) :- hungry(Y), small(Z), likes(B,Z).\nbusy(X) :- tall(X), owns(X,U), wet(U).\ncurious(X) :- friendly(X), angry(X).\nhard(X) :- small(X).\nclever(X) :- strong(X).\nowns(X,Y) :- calm(X), dirty(Y).\nsad(X) :- calm(X), happy(X).\nparent(X,Y) :- funny(X), busy(Y), friend(X,Y).\nclean(X) :- soft(X).\nhappy(X) :- tall(X).\nweak(dave).\nlikes(eve,car).\nfriend(george,bob).\nlikes(alice,phone).\nenemy(carol,eve).\nsibling(frank,carol).\nbusy(eve).\nheavy(apple).\nsibling(bob,frank).\nstrong(dave).\nbored(alice).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is brave.\nFor all X, if there exists B such that person X is hungry and person X is an enemy of person B and person B is busy, then person X is sad.\nFor all Y, if object Y is dirty, then object Y is new.\nFor all Z, if there exists U such that object Z is dirty and person U dislikes object Z and person U is curious, then object Z is rough.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is busy, then object Z is light.\nFor all Y, Z, if there exists B such that person Y is hungry and object Z is small and person B likes object Z, then person Y dislikes object Z.\nFor all X, if there exists U such that person X is tall and person X owns object U and object U is wet, then person X is busy.\nFor all X, if person X is friendly and person X is angry, then person X is curious.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is strong, then person X is clever.\nFor all X, Y, if person X is calm and object Y is dirty, then person X owns object Y.\nFor all X, if person X is calm and person X is happy, then person X is sad.\nFor all X, Y, if person X is funny and person Y is busy and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if person X is tall, then person X is happy.\n\nAnd the following facts:\ndave is weak.\neve likes car.\ngeorge is a friend of bob.\nalice likes phone.\ncarol is an enemy of eve.\nfrank is a sibling of carol.\neve is busy.\napple is heavy.\nbob is a sibling of frank.\ndave is strong.\nalice is bored.\nfrank likes ball.\n\nQUESTION:\nIs pencil is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 505,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "brave(X) :- weak(X).\nsad(X) :- hungry(X), enemy(X,B), busy(B).\nnew(Y) :- dirty(Y).\nrough(Z) :- dirty(Z), dislikes(U,Z), curious(U).\nlight(Z) :- small(Z), likes(W,Z), busy(W).\ndislikes(Y,Z) :- hungry(Y), small(Z), likes(B,Z).\nbusy(X) :- tall(X), owns(X,U), wet(U).\ncurious(X) :- friendly(X), angry(X).\nhard(X) :- small(X).\nclever(X) :- strong(X).\nowns(X,Y) :- calm(X), dirty(Y).\nsad(X) :- calm(X), happy(X).\nparent(X,Y) :- funny(X), busy(Y), friend(X,Y).\nclean(X) :- soft(X).\nhappy(X) :- tall(X).\nbrave(dave).\nlikes(eve,car).\nfriend(george,bob).\nlikes(alice,phone).\nenemy(carol,eve).\nsibling(frank,carol).\nbusy(eve).\nheavy(apple).\nsibling(bob,frank).\nstrong(dave).\nbored(alice).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is brave.\nFor all X, if there exists B such that person X is hungry and person X is an enemy of person B and person B is busy, then person X is sad.\nFor all Y, if object Y is dirty, then object Y is new.\nFor all Z, if there exists U such that object Z is dirty and person U dislikes object Z and person U is curious, then object Z is rough.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is busy, then object Z is light.\nFor all Y, Z, if there exists B such that person Y is hungry and object Z is small and person B likes object Z, then person Y dislikes object Z.\nFor all X, if there exists U such that person X is tall and person X owns object U and object U is wet, then person X is busy.\nFor all X, if person X is friendly and person X is angry, then person X is curious.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is strong, then person X is clever.\nFor all X, Y, if person X is calm and object Y is dirty, then person X owns object Y.\nFor all X, if person X is calm and person X is happy, then person X is sad.\nFor all X, Y, if person X is funny and person Y is busy and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if person X is tall, then person X is happy.\n\nAnd the following facts:\ndave is brave.\neve likes car.\ngeorge is a friend of bob.\nalice likes phone.\ncarol is an enemy of eve.\nfrank is a sibling of carol.\neve is busy.\napple is heavy.\nbob is a sibling of frank.\ndave is strong.\nalice is bored.\nfrank likes ball.\n\nQUESTION:\nCould dave is weak explain dave is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 506,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "light(apple).",
    "c": "brave(X) :- weak(X).\nsad(X) :- hungry(X), enemy(X,B), busy(B).\nnew(Y) :- dirty(Y).\nrough(Z) :- dirty(Z), dislikes(U,Z), curious(U).\nlight(Z) :- small(Z), likes(W,Z), busy(W).\ndislikes(Y,Z) :- hungry(Y), small(Z), likes(B,Z).\nbusy(X) :- tall(X), owns(X,U), wet(U).\ncurious(X) :- friendly(X), angry(X).\nhard(X) :- small(X).\nclever(X) :- strong(X).\nowns(X,Y) :- calm(X), dirty(Y).\nsad(X) :- calm(X), happy(X).\nparent(X,Y) :- funny(X), busy(Y), friend(X,Y).\nclean(X) :- soft(X).\nhappy(X) :- tall(X).\nbrave(dave).\nlikes(eve,car).\nfriend(george,bob).\nlikes(alice,phone).\nenemy(carol,eve).\nsibling(frank,carol).\nbusy(eve).\nheavy(apple).\nsibling(bob,frank).\nstrong(dave).\nbored(alice).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is brave.\nFor all X, if there exists B such that person X is hungry and person X is an enemy of person B and person B is busy, then person X is sad.\nFor all Y, if object Y is dirty, then object Y is new.\nFor all Z, if there exists U such that object Z is dirty and person U dislikes object Z and person U is curious, then object Z is rough.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is busy, then object Z is light.\nFor all Y, Z, if there exists B such that person Y is hungry and object Z is small and person B likes object Z, then person Y dislikes object Z.\nFor all X, if there exists U such that person X is tall and person X owns object U and object U is wet, then person X is busy.\nFor all X, if person X is friendly and person X is angry, then person X is curious.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is strong, then person X is clever.\nFor all X, Y, if person X is calm and object Y is dirty, then person X owns object Y.\nFor all X, if person X is calm and person X is happy, then person X is sad.\nFor all X, Y, if person X is funny and person Y is busy and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if person X is tall, then person X is happy.\n\nAnd the following facts:\ndave is brave.\neve likes car.\ngeorge is a friend of bob.\nalice likes phone.\ncarol is an enemy of eve.\nfrank is a sibling of carol.\neve is busy.\napple is heavy.\nbob is a sibling of frank.\ndave is strong.\nalice is bored.\nfrank likes ball.\n\nQUESTION:\nCould apple is light explain dave is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 507,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(frank).",
    "c": "weak(X) :- funny(X).\nowns(Z,Y) :- red(Y), tall(Z).\nparent(Z,X) :- hungry(Z), tall(X), parent(Z,U).\ndirty(Y) :- clean(Y).\nstrong(Y) :- tall(Y).\nsad(X) :- curious(X), friend(X,A), friendly(A).\nsoft(X) :- rough(X).\nhungry(Y) :- bored(Y), sibling(Y,U), angry(U).\nred(Y) :- dirty(Y).\nfriend(X,Y) :- hungry(Y), tall(X).\nfriendly(Z) :- angry(Z), dislikes(Z,W), red(W).\nlikes(X,Z) :- new(Z), clever(X), owns(V,Z).\ntired(X) :- friendly(X).\ncalm(X) :- angry(X).\nbusy(X) :- strong(X).\nfunny(frank).\nred(apple).\nowns(george,ball).\nfriend(alice,carol).\nfriendly(george).\nhappy(eve).\nsibling(dave,eve).\nfriendly(dave).\nowns(eve,ball).\nparent(bob,carol).\nstrong(alice).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is weak.\nFor all Y, Z, if object Y is red and person Z is tall, then person Z owns object Y.\nFor all X, Z, if there exists U such that person Z is hungry and person X is tall and person Z is a parent of person U, then person Z is a parent of person X.\nFor all Y, if object Y is clean, then object Y is dirty.\nFor all Y, if person Y is tall, then person Y is strong.\nFor all X, if there exists A such that person X is curious and person X is a friend of person A and person A is friendly, then person X is sad.\nFor all X, if object X is rough, then object X is soft.\nFor all Y, if there exists U such that person Y is bored and person Y is a sibling of person U and person U is angry, then person Y is hungry.\nFor all Y, if object Y is dirty, then object Y is red.\nFor all X, Y, if person Y is hungry and person X is tall, then person X is a friend of person Y.\nFor all Z, if there exists W such that person Z is angry and person Z dislikes object W and object W is red, then person Z is friendly.\nFor all X, Z, if there exists V such that object Z is new and person X is clever and person V owns object Z, then person X likes object Z.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is angry, then person X is calm.\nFor all X, if person X is strong, then person X is busy.\n\nAnd the following facts:\nfrank is funny.\napple is red.\ngeorge owns ball.\nalice is a friend of carol.\ngeorge is friendly.\neve is happy.\ndave is a sibling of eve.\ndave is friendly.\neve owns ball.\nbob is a parent of carol.\nalice is strong.\ngeorge is a friend of carol.\n\nQUESTION:\nIs frank is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 508,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(carol).",
    "c": "weak(X) :- funny(X).\nowns(Z,Y) :- red(Y), tall(Z).\nparent(Z,X) :- hungry(Z), tall(X), parent(Z,U).\ndirty(Y) :- clean(Y).\nstrong(Y) :- tall(Y).\nsad(X) :- curious(X), friend(X,A), friendly(A).\nsoft(X) :- rough(X).\nhungry(Y) :- bored(Y), sibling(Y,U), angry(U).\nred(Y) :- dirty(Y).\nfriend(X,Y) :- hungry(Y), tall(X).\nfriendly(Z) :- angry(Z), dislikes(Z,W), red(W).\nlikes(X,Z) :- new(Z), clever(X), owns(V,Z).\ntired(X) :- friendly(X).\ncalm(X) :- angry(X).\nbusy(X) :- strong(X).\nfunny(frank).\nred(apple).\nowns(george,ball).\nfriend(alice,carol).\nfriendly(george).\nhappy(eve).\nsibling(dave,eve).\nfriendly(dave).\nowns(eve,ball).\nparent(bob,carol).\nstrong(alice).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is weak.\nFor all Y, Z, if object Y is red and person Z is tall, then person Z owns object Y.\nFor all X, Z, if there exists U such that person Z is hungry and person X is tall and person Z is a parent of person U, then person Z is a parent of person X.\nFor all Y, if object Y is clean, then object Y is dirty.\nFor all Y, if person Y is tall, then person Y is strong.\nFor all X, if there exists A such that person X is curious and person X is a friend of person A and person A is friendly, then person X is sad.\nFor all X, if object X is rough, then object X is soft.\nFor all Y, if there exists U such that person Y is bored and person Y is a sibling of person U and person U is angry, then person Y is hungry.\nFor all Y, if object Y is dirty, then object Y is red.\nFor all X, Y, if person Y is hungry and person X is tall, then person X is a friend of person Y.\nFor all Z, if there exists W such that person Z is angry and person Z dislikes object W and object W is red, then person Z is friendly.\nFor all X, Z, if there exists V such that object Z is new and person X is clever and person V owns object Z, then person X likes object Z.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is angry, then person X is calm.\nFor all X, if person X is strong, then person X is busy.\n\nAnd the following facts:\nfrank is funny.\napple is red.\ngeorge owns ball.\nalice is a friend of carol.\ngeorge is friendly.\neve is happy.\ndave is a sibling of eve.\ndave is friendly.\neve owns ball.\nbob is a parent of carol.\nalice is strong.\ngeorge is a friend of carol.\n\nQUESTION:\nIs carol is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 509,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(frank).",
    "c": "weak(X) :- funny(X).\nowns(Z,Y) :- red(Y), tall(Z).\nparent(Z,X) :- hungry(Z), tall(X), parent(Z,U).\ndirty(Y) :- clean(Y).\nstrong(Y) :- tall(Y).\nsad(X) :- curious(X), friend(X,A), friendly(A).\nsoft(X) :- rough(X).\nhungry(Y) :- bored(Y), sibling(Y,U), angry(U).\nred(Y) :- dirty(Y).\nfriend(X,Y) :- hungry(Y), tall(X).\nfriendly(Z) :- angry(Z), dislikes(Z,W), red(W).\nlikes(X,Z) :- new(Z), clever(X), owns(V,Z).\ntired(X) :- friendly(X).\ncalm(X) :- angry(X).\nbusy(X) :- strong(X).\nweak(frank).\nred(apple).\nowns(george,ball).\nfriend(alice,carol).\nfriendly(george).\nhappy(eve).\nsibling(dave,eve).\nfriendly(dave).\nowns(eve,ball).\nparent(bob,carol).\nstrong(alice).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is weak.\nFor all Y, Z, if object Y is red and person Z is tall, then person Z owns object Y.\nFor all X, Z, if there exists U such that person Z is hungry and person X is tall and person Z is a parent of person U, then person Z is a parent of person X.\nFor all Y, if object Y is clean, then object Y is dirty.\nFor all Y, if person Y is tall, then person Y is strong.\nFor all X, if there exists A such that person X is curious and person X is a friend of person A and person A is friendly, then person X is sad.\nFor all X, if object X is rough, then object X is soft.\nFor all Y, if there exists U such that person Y is bored and person Y is a sibling of person U and person U is angry, then person Y is hungry.\nFor all Y, if object Y is dirty, then object Y is red.\nFor all X, Y, if person Y is hungry and person X is tall, then person X is a friend of person Y.\nFor all Z, if there exists W such that person Z is angry and person Z dislikes object W and object W is red, then person Z is friendly.\nFor all X, Z, if there exists V such that object Z is new and person X is clever and person V owns object Z, then person X likes object Z.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is angry, then person X is calm.\nFor all X, if person X is strong, then person X is busy.\n\nAnd the following facts:\nfrank is weak.\napple is red.\ngeorge owns ball.\nalice is a friend of carol.\ngeorge is friendly.\neve is happy.\ndave is a sibling of eve.\ndave is friendly.\neve owns ball.\nbob is a parent of carol.\nalice is strong.\ngeorge is a friend of carol.\n\nQUESTION:\nCould frank is funny explain frank is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 510,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "weak(X) :- funny(X).\nowns(Z,Y) :- red(Y), tall(Z).\nparent(Z,X) :- hungry(Z), tall(X), parent(Z,U).\ndirty(Y) :- clean(Y).\nstrong(Y) :- tall(Y).\nsad(X) :- curious(X), friend(X,A), friendly(A).\nsoft(X) :- rough(X).\nhungry(Y) :- bored(Y), sibling(Y,U), angry(U).\nred(Y) :- dirty(Y).\nfriend(X,Y) :- hungry(Y), tall(X).\nfriendly(Z) :- angry(Z), dislikes(Z,W), red(W).\nlikes(X,Z) :- new(Z), clever(X), owns(V,Z).\ntired(X) :- friendly(X).\ncalm(X) :- angry(X).\nbusy(X) :- strong(X).\nweak(frank).\nred(apple).\nowns(george,ball).\nfriend(alice,carol).\nfriendly(george).\nhappy(eve).\nsibling(dave,eve).\nfriendly(dave).\nowns(eve,ball).\nparent(bob,carol).\nstrong(alice).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is weak.\nFor all Y, Z, if object Y is red and person Z is tall, then person Z owns object Y.\nFor all X, Z, if there exists U such that person Z is hungry and person X is tall and person Z is a parent of person U, then person Z is a parent of person X.\nFor all Y, if object Y is clean, then object Y is dirty.\nFor all Y, if person Y is tall, then person Y is strong.\nFor all X, if there exists A such that person X is curious and person X is a friend of person A and person A is friendly, then person X is sad.\nFor all X, if object X is rough, then object X is soft.\nFor all Y, if there exists U such that person Y is bored and person Y is a sibling of person U and person U is angry, then person Y is hungry.\nFor all Y, if object Y is dirty, then object Y is red.\nFor all X, Y, if person Y is hungry and person X is tall, then person X is a friend of person Y.\nFor all Z, if there exists W such that person Z is angry and person Z dislikes object W and object W is red, then person Z is friendly.\nFor all X, Z, if there exists V such that object Z is new and person X is clever and person V owns object Z, then person X likes object Z.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is angry, then person X is calm.\nFor all X, if person X is strong, then person X is busy.\n\nAnd the following facts:\nfrank is weak.\napple is red.\ngeorge owns ball.\nalice is a friend of carol.\ngeorge is friendly.\neve is happy.\ndave is a sibling of eve.\ndave is friendly.\neve owns ball.\nbob is a parent of carol.\nalice is strong.\ngeorge is a friend of carol.\n\nQUESTION:\nCould dave is curious explain frank is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 511,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "wet(ball).",
    "c": "small(X) :- red(X).\nheavy(X) :- small(X).\nhard(X) :- heavy(X).\nnew(X) :- hard(X).\nwet(X) :- new(X).\ndirty(X) :- soft(X), owns(V,X), calm(V).\nfunny(Y) :- sad(Y), owns(Y,A), smooth(A).\ncalm(Y) :- busy(Y).\nfunny(X) :- funny(X), friend(X,B), tall(B).\nbig(Y) :- old(Y), old(A).\nhappy(X) :- strong(X), friendly(X).\nsibling(X,Y) :- hungry(X), sad(Y), parent(X,Y).\nclean(X) :- rough(X), dirty(X).\nlight(X) :- smooth(X).\ntired(X) :- funny(X).\nred(ball).\nsibling(george,frank).\ncalm(frank).\nparent(dave,carol).\nenemy(alice,bob).\nlikes(carol,car).\nbrave(eve).\nfriend(dave,eve).\nsibling(eve,frank).\nfriend(alice,george).\nsibling(eve,carol).\nowns(carol,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if there exists V such that object X is soft and person V owns object X and person V is calm, then object X is dirty.\nFor all Y, if there exists A such that person Y is sad and person Y owns object A and object A is smooth, then person Y is funny.\nFor all Y, if person Y is busy, then person Y is calm.\nFor all X, if there exists B such that person X is funny and person X is a friend of person B and person B is tall, then person X is funny.\nFor all Y, if there exists A such that object Y is old and object A is old, then object Y is big.\nFor all X, if person X is strong and person X is friendly, then person X is happy.\nFor all X, Y, if person X is hungry and person Y is sad and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is rough and object X is dirty, then object X is clean.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if person X is funny, then person X is tired.\n\nAnd the following facts:\nball is red.\ngeorge is a sibling of frank.\nfrank is calm.\ndave is a parent of carol.\nalice is an enemy of bob.\ncarol likes car.\neve is brave.\ndave is a friend of eve.\neve is a sibling of frank.\nalice is a friend of george.\neve is a sibling of carol.\ncarol owns ball.\n\nQUESTION:\nIs ball is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 512,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "light(phone).",
    "c": "small(X) :- red(X).\nheavy(X) :- small(X).\nhard(X) :- heavy(X).\nnew(X) :- hard(X).\nwet(X) :- new(X).\ndirty(X) :- soft(X), owns(V,X), calm(V).\nfunny(Y) :- sad(Y), owns(Y,A), smooth(A).\ncalm(Y) :- busy(Y).\nfunny(X) :- funny(X), friend(X,B), tall(B).\nbig(Y) :- old(Y), old(A).\nhappy(X) :- strong(X), friendly(X).\nsibling(X,Y) :- hungry(X), sad(Y), parent(X,Y).\nclean(X) :- rough(X), dirty(X).\nlight(X) :- smooth(X).\ntired(X) :- funny(X).\nred(ball).\nsibling(george,frank).\ncalm(frank).\nparent(dave,carol).\nenemy(alice,bob).\nlikes(carol,car).\nbrave(eve).\nfriend(dave,eve).\nsibling(eve,frank).\nfriend(alice,george).\nsibling(eve,carol).\nowns(carol,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if there exists V such that object X is soft and person V owns object X and person V is calm, then object X is dirty.\nFor all Y, if there exists A such that person Y is sad and person Y owns object A and object A is smooth, then person Y is funny.\nFor all Y, if person Y is busy, then person Y is calm.\nFor all X, if there exists B such that person X is funny and person X is a friend of person B and person B is tall, then person X is funny.\nFor all Y, if there exists A such that object Y is old and object A is old, then object Y is big.\nFor all X, if person X is strong and person X is friendly, then person X is happy.\nFor all X, Y, if person X is hungry and person Y is sad and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is rough and object X is dirty, then object X is clean.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if person X is funny, then person X is tired.\n\nAnd the following facts:\nball is red.\ngeorge is a sibling of frank.\nfrank is calm.\ndave is a parent of carol.\nalice is an enemy of bob.\ncarol likes car.\neve is brave.\ndave is a friend of eve.\neve is a sibling of frank.\nalice is a friend of george.\neve is a sibling of carol.\ncarol owns ball.\n\nQUESTION:\nIs phone is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 513,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(ball).",
    "c": "small(X) :- red(X).\nheavy(X) :- small(X).\nhard(X) :- heavy(X).\nnew(X) :- hard(X).\nwet(X) :- new(X).\ndirty(X) :- soft(X), owns(V,X), calm(V).\nfunny(Y) :- sad(Y), owns(Y,A), smooth(A).\ncalm(Y) :- busy(Y).\nfunny(X) :- funny(X), friend(X,B), tall(B).\nbig(Y) :- old(Y), old(A).\nhappy(X) :- strong(X), friendly(X).\nsibling(X,Y) :- hungry(X), sad(Y), parent(X,Y).\nclean(X) :- rough(X), dirty(X).\nlight(X) :- smooth(X).\ntired(X) :- funny(X).\nwet(ball).\nsibling(george,frank).\ncalm(frank).\nparent(dave,carol).\nenemy(alice,bob).\nlikes(carol,car).\nbrave(eve).\nfriend(dave,eve).\nsibling(eve,frank).\nfriend(alice,george).\nsibling(eve,carol).\nowns(carol,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if there exists V such that object X is soft and person V owns object X and person V is calm, then object X is dirty.\nFor all Y, if there exists A such that person Y is sad and person Y owns object A and object A is smooth, then person Y is funny.\nFor all Y, if person Y is busy, then person Y is calm.\nFor all X, if there exists B such that person X is funny and person X is a friend of person B and person B is tall, then person X is funny.\nFor all Y, if there exists A such that object Y is old and object A is old, then object Y is big.\nFor all X, if person X is strong and person X is friendly, then person X is happy.\nFor all X, Y, if person X is hungry and person Y is sad and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is rough and object X is dirty, then object X is clean.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if person X is funny, then person X is tired.\n\nAnd the following facts:\nball is wet.\ngeorge is a sibling of frank.\nfrank is calm.\ndave is a parent of carol.\nalice is an enemy of bob.\ncarol likes car.\neve is brave.\ndave is a friend of eve.\neve is a sibling of frank.\nalice is a friend of george.\neve is a sibling of carol.\ncarol owns ball.\n\nQUESTION:\nCould ball is red explain ball is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 514,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(bob).",
    "c": "small(X) :- red(X).\nheavy(X) :- small(X).\nhard(X) :- heavy(X).\nnew(X) :- hard(X).\nwet(X) :- new(X).\ndirty(X) :- soft(X), owns(V,X), calm(V).\nfunny(Y) :- sad(Y), owns(Y,A), smooth(A).\ncalm(Y) :- busy(Y).\nfunny(X) :- funny(X), friend(X,B), tall(B).\nbig(Y) :- old(Y), old(A).\nhappy(X) :- strong(X), friendly(X).\nsibling(X,Y) :- hungry(X), sad(Y), parent(X,Y).\nclean(X) :- rough(X), dirty(X).\nlight(X) :- smooth(X).\ntired(X) :- funny(X).\nwet(ball).\nsibling(george,frank).\ncalm(frank).\nparent(dave,carol).\nenemy(alice,bob).\nlikes(carol,car).\nbrave(eve).\nfriend(dave,eve).\nsibling(eve,frank).\nfriend(alice,george).\nsibling(eve,carol).\nowns(carol,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if there exists V such that object X is soft and person V owns object X and person V is calm, then object X is dirty.\nFor all Y, if there exists A such that person Y is sad and person Y owns object A and object A is smooth, then person Y is funny.\nFor all Y, if person Y is busy, then person Y is calm.\nFor all X, if there exists B such that person X is funny and person X is a friend of person B and person B is tall, then person X is funny.\nFor all Y, if there exists A such that object Y is old and object A is old, then object Y is big.\nFor all X, if person X is strong and person X is friendly, then person X is happy.\nFor all X, Y, if person X is hungry and person Y is sad and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is rough and object X is dirty, then object X is clean.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if person X is funny, then person X is tired.\n\nAnd the following facts:\nball is wet.\ngeorge is a sibling of frank.\nfrank is calm.\ndave is a parent of carol.\nalice is an enemy of bob.\ncarol likes car.\neve is brave.\ndave is a friend of eve.\neve is a sibling of frank.\nalice is a friend of george.\neve is a sibling of carol.\ncarol owns ball.\n\nQUESTION:\nCould bob is funny explain ball is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 515,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(eve).",
    "c": "tall(X) :- excited(X).\nstrong(X) :- tall(X).\nangry(X) :- strong(X).\nsad(X) :- angry(X).\ntired(X) :- sad(X).\nnew(X) :- small(X), heavy(C).\ncalm(X) :- happy(X), small(C).\nfriend(Y,X) :- calm(Y), friendly(X), sibling(X,U).\nheavy(Z) :- hard(Z).\nrough(X) :- smooth(X).\nsibling(Y,X) :- funny(Y), happy(X), dislikes(Y,B).\nclean(X) :- rough(X), wet(X).\nlight(X) :- red(X).\nsmooth(X) :- red(X).\nnew(X) :- smooth(X), heavy(X).\nexcited(eve).\nparent(dave,carol).\nlikes(dave,ball).\nsibling(george,alice).\nsibling(alice,dave).\ndislikes(eve,apple).\nparent(bob,alice).\nsmooth(book).\nenemy(alice,frank).\nsmooth(ball).\nenemy(frank,alice).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is angry.\nFor all X, if person X is angry, then person X is sad.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if there exists C such that object X is small and object C is heavy, then object X is new.\nFor all X, if there exists C such that person X is happy and object C is small, then person X is calm.\nFor all X, Y, if there exists U such that person Y is calm and person X is friendly and person X is a sibling of person U, then person Y is a friend of person X.\nFor all Z, if object Z is hard, then object Z is heavy.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, Y, if there exists B such that person Y is funny and person X is happy and person Y dislikes object B, then person Y is a sibling of person X.\nFor all X, if object X is rough and object X is wet, then object X is clean.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth and object X is heavy, then object X is new.\n\nAnd the following facts:\neve is excited.\ndave is a parent of carol.\ndave likes ball.\ngeorge is a sibling of alice.\nalice is a sibling of dave.\neve dislikes apple.\nbob is a parent of alice.\nbook is smooth.\nalice is an enemy of frank.\nball is smooth.\nfrank is an enemy of alice.\nfrank is a sibling of dave.\n\nQUESTION:\nIs eve is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 516,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(bob).",
    "c": "tall(X) :- excited(X).\nstrong(X) :- tall(X).\nangry(X) :- strong(X).\nsad(X) :- angry(X).\ntired(X) :- sad(X).\nnew(X) :- small(X), heavy(C).\ncalm(X) :- happy(X), small(C).\nfriend(Y,X) :- calm(Y), friendly(X), sibling(X,U).\nheavy(Z) :- hard(Z).\nrough(X) :- smooth(X).\nsibling(Y,X) :- funny(Y), happy(X), dislikes(Y,B).\nclean(X) :- rough(X), wet(X).\nlight(X) :- red(X).\nsmooth(X) :- red(X).\nnew(X) :- smooth(X), heavy(X).\nexcited(eve).\nparent(dave,carol).\nlikes(dave,ball).\nsibling(george,alice).\nsibling(alice,dave).\ndislikes(eve,apple).\nparent(bob,alice).\nsmooth(book).\nenemy(alice,frank).\nsmooth(ball).\nenemy(frank,alice).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is angry.\nFor all X, if person X is angry, then person X is sad.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if there exists C such that object X is small and object C is heavy, then object X is new.\nFor all X, if there exists C such that person X is happy and object C is small, then person X is calm.\nFor all X, Y, if there exists U such that person Y is calm and person X is friendly and person X is a sibling of person U, then person Y is a friend of person X.\nFor all Z, if object Z is hard, then object Z is heavy.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, Y, if there exists B such that person Y is funny and person X is happy and person Y dislikes object B, then person Y is a sibling of person X.\nFor all X, if object X is rough and object X is wet, then object X is clean.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth and object X is heavy, then object X is new.\n\nAnd the following facts:\neve is excited.\ndave is a parent of carol.\ndave likes ball.\ngeorge is a sibling of alice.\nalice is a sibling of dave.\neve dislikes apple.\nbob is a parent of alice.\nbook is smooth.\nalice is an enemy of frank.\nball is smooth.\nfrank is an enemy of alice.\nfrank is a sibling of dave.\n\nQUESTION:\nIs bob is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 517,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(eve).",
    "c": "tall(X) :- excited(X).\nstrong(X) :- tall(X).\nangry(X) :- strong(X).\nsad(X) :- angry(X).\ntired(X) :- sad(X).\nnew(X) :- small(X), heavy(C).\ncalm(X) :- happy(X), small(C).\nfriend(Y,X) :- calm(Y), friendly(X), sibling(X,U).\nheavy(Z) :- hard(Z).\nrough(X) :- smooth(X).\nsibling(Y,X) :- funny(Y), happy(X), dislikes(Y,B).\nclean(X) :- rough(X), wet(X).\nlight(X) :- red(X).\nsmooth(X) :- red(X).\nnew(X) :- smooth(X), heavy(X).\ntired(eve).\nparent(dave,carol).\nlikes(dave,ball).\nsibling(george,alice).\nsibling(alice,dave).\ndislikes(eve,apple).\nparent(bob,alice).\nsmooth(book).\nenemy(alice,frank).\nsmooth(ball).\nenemy(frank,alice).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is angry.\nFor all X, if person X is angry, then person X is sad.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if there exists C such that object X is small and object C is heavy, then object X is new.\nFor all X, if there exists C such that person X is happy and object C is small, then person X is calm.\nFor all X, Y, if there exists U such that person Y is calm and person X is friendly and person X is a sibling of person U, then person Y is a friend of person X.\nFor all Z, if object Z is hard, then object Z is heavy.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, Y, if there exists B such that person Y is funny and person X is happy and person Y dislikes object B, then person Y is a sibling of person X.\nFor all X, if object X is rough and object X is wet, then object X is clean.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth and object X is heavy, then object X is new.\n\nAnd the following facts:\neve is tired.\ndave is a parent of carol.\ndave likes ball.\ngeorge is a sibling of alice.\nalice is a sibling of dave.\neve dislikes apple.\nbob is a parent of alice.\nbook is smooth.\nalice is an enemy of frank.\nball is smooth.\nfrank is an enemy of alice.\nfrank is a sibling of dave.\n\nQUESTION:\nCould eve is excited explain eve is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 518,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "tall(X) :- excited(X).\nstrong(X) :- tall(X).\nangry(X) :- strong(X).\nsad(X) :- angry(X).\ntired(X) :- sad(X).\nnew(X) :- small(X), heavy(C).\ncalm(X) :- happy(X), small(C).\nfriend(Y,X) :- calm(Y), friendly(X), sibling(X,U).\nheavy(Z) :- hard(Z).\nrough(X) :- smooth(X).\nsibling(Y,X) :- funny(Y), happy(X), dislikes(Y,B).\nclean(X) :- rough(X), wet(X).\nlight(X) :- red(X).\nsmooth(X) :- red(X).\nnew(X) :- smooth(X), heavy(X).\ntired(eve).\nparent(dave,carol).\nlikes(dave,ball).\nsibling(george,alice).\nsibling(alice,dave).\ndislikes(eve,apple).\nparent(bob,alice).\nsmooth(book).\nenemy(alice,frank).\nsmooth(ball).\nenemy(frank,alice).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is angry.\nFor all X, if person X is angry, then person X is sad.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if there exists C such that object X is small and object C is heavy, then object X is new.\nFor all X, if there exists C such that person X is happy and object C is small, then person X is calm.\nFor all X, Y, if there exists U such that person Y is calm and person X is friendly and person X is a sibling of person U, then person Y is a friend of person X.\nFor all Z, if object Z is hard, then object Z is heavy.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, Y, if there exists B such that person Y is funny and person X is happy and person Y dislikes object B, then person Y is a sibling of person X.\nFor all X, if object X is rough and object X is wet, then object X is clean.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth and object X is heavy, then object X is new.\n\nAnd the following facts:\neve is tired.\ndave is a parent of carol.\ndave likes ball.\ngeorge is a sibling of alice.\nalice is a sibling of dave.\neve dislikes apple.\nbob is a parent of alice.\nbook is smooth.\nalice is an enemy of frank.\nball is smooth.\nfrank is an enemy of alice.\nfrank is a sibling of dave.\n\nQUESTION:\nCould bob is hungry explain eve is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 519,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "strong(X) :- clever(X).\nhungry(X) :- strong(X).\nbored(X) :- hungry(X).\nfriendly(X) :- bored(X).\nangry(X) :- friendly(X).\nold(Z) :- smooth(Z), tired(C).\nhappy(X) :- busy(X), dislikes(X,U), smooth(U).\nheavy(Z) :- heavy(Z), likes(U,Z), brave(U).\nsmall(Y) :- soft(Y).\nred(Y) :- small(Y), likes(U,Y), sad(U).\nheavy(X) :- red(X).\nold(X) :- new(X).\nenemy(X,Y) :- calm(X), funny(Y).\nbrave(X) :- excited(X), excited(X).\nnew(X) :- big(X).\nclever(bob).\nparent(eve,frank).\nparent(frank,bob).\nfriend(dave,george).\nbusy(george).\nowns(carol,phone).\nlight(book).\nsoft(car).\nsad(frank).\ncurious(dave).\nfriend(frank,eve).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all Z, if there exists C such that object Z is smooth and person C is tired, then object Z is old.\nFor all X, if there exists U such that person X is busy and person X dislikes object U and object U is smooth, then person X is happy.\nFor all Z, if there exists U such that object Z is heavy and person U likes object Z and person U is brave, then object Z is heavy.\nFor all Y, if object Y is soft, then object Y is small.\nFor all Y, if there exists U such that object Y is small and person U likes object Y and person U is sad, then object Y is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is new, then object X is old.\nFor all X, Y, if person X is calm and person Y is funny, then person X is an enemy of person Y.\nFor all X, if person X is excited and person X is excited, then person X is brave.\nFor all X, if object X is big, then object X is new.\n\nAnd the following facts:\nbob is clever.\neve is a parent of frank.\nfrank is a parent of bob.\ndave is a friend of george.\ngeorge is busy.\ncarol owns phone.\nbook is light.\ncar is soft.\nfrank is sad.\ndave is curious.\nfrank is a friend of eve.\ncarol is excited.\n\nQUESTION:\nIs bob is angry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 520,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "strong(X) :- clever(X).\nhungry(X) :- strong(X).\nbored(X) :- hungry(X).\nfriendly(X) :- bored(X).\nangry(X) :- friendly(X).\nold(Z) :- smooth(Z), tired(C).\nhappy(X) :- busy(X), dislikes(X,U), smooth(U).\nheavy(Z) :- heavy(Z), likes(U,Z), brave(U).\nsmall(Y) :- soft(Y).\nred(Y) :- small(Y), likes(U,Y), sad(U).\nheavy(X) :- red(X).\nold(X) :- new(X).\nenemy(X,Y) :- calm(X), funny(Y).\nbrave(X) :- excited(X), excited(X).\nnew(X) :- big(X).\nclever(bob).\nparent(eve,frank).\nparent(frank,bob).\nfriend(dave,george).\nbusy(george).\nowns(carol,phone).\nlight(book).\nsoft(car).\nsad(frank).\ncurious(dave).\nfriend(frank,eve).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all Z, if there exists C such that object Z is smooth and person C is tired, then object Z is old.\nFor all X, if there exists U such that person X is busy and person X dislikes object U and object U is smooth, then person X is happy.\nFor all Z, if there exists U such that object Z is heavy and person U likes object Z and person U is brave, then object Z is heavy.\nFor all Y, if object Y is soft, then object Y is small.\nFor all Y, if there exists U such that object Y is small and person U likes object Y and person U is sad, then object Y is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is new, then object X is old.\nFor all X, Y, if person X is calm and person Y is funny, then person X is an enemy of person Y.\nFor all X, if person X is excited and person X is excited, then person X is brave.\nFor all X, if object X is big, then object X is new.\n\nAnd the following facts:\nbob is clever.\neve is a parent of frank.\nfrank is a parent of bob.\ndave is a friend of george.\ngeorge is busy.\ncarol owns phone.\nbook is light.\ncar is soft.\nfrank is sad.\ndave is curious.\nfrank is a friend of eve.\ncarol is excited.\n\nQUESTION:\nIs car is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 521,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(bob).",
    "c": "strong(X) :- clever(X).\nhungry(X) :- strong(X).\nbored(X) :- hungry(X).\nfriendly(X) :- bored(X).\nangry(X) :- friendly(X).\nold(Z) :- smooth(Z), tired(C).\nhappy(X) :- busy(X), dislikes(X,U), smooth(U).\nheavy(Z) :- heavy(Z), likes(U,Z), brave(U).\nsmall(Y) :- soft(Y).\nred(Y) :- small(Y), likes(U,Y), sad(U).\nheavy(X) :- red(X).\nold(X) :- new(X).\nenemy(X,Y) :- calm(X), funny(Y).\nbrave(X) :- excited(X), excited(X).\nnew(X) :- big(X).\nangry(bob).\nparent(eve,frank).\nparent(frank,bob).\nfriend(dave,george).\nbusy(george).\nowns(carol,phone).\nlight(book).\nsoft(car).\nsad(frank).\ncurious(dave).\nfriend(frank,eve).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all Z, if there exists C such that object Z is smooth and person C is tired, then object Z is old.\nFor all X, if there exists U such that person X is busy and person X dislikes object U and object U is smooth, then person X is happy.\nFor all Z, if there exists U such that object Z is heavy and person U likes object Z and person U is brave, then object Z is heavy.\nFor all Y, if object Y is soft, then object Y is small.\nFor all Y, if there exists U such that object Y is small and person U likes object Y and person U is sad, then object Y is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is new, then object X is old.\nFor all X, Y, if person X is calm and person Y is funny, then person X is an enemy of person Y.\nFor all X, if person X is excited and person X is excited, then person X is brave.\nFor all X, if object X is big, then object X is new.\n\nAnd the following facts:\nbob is angry.\neve is a parent of frank.\nfrank is a parent of bob.\ndave is a friend of george.\ngeorge is busy.\ncarol owns phone.\nbook is light.\ncar is soft.\nfrank is sad.\ndave is curious.\nfrank is a friend of eve.\ncarol is excited.\n\nQUESTION:\nCould bob is clever explain bob is angry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 522,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "strong(X) :- clever(X).\nhungry(X) :- strong(X).\nbored(X) :- hungry(X).\nfriendly(X) :- bored(X).\nangry(X) :- friendly(X).\nold(Z) :- smooth(Z), tired(C).\nhappy(X) :- busy(X), dislikes(X,U), smooth(U).\nheavy(Z) :- heavy(Z), likes(U,Z), brave(U).\nsmall(Y) :- soft(Y).\nred(Y) :- small(Y), likes(U,Y), sad(U).\nheavy(X) :- red(X).\nold(X) :- new(X).\nenemy(X,Y) :- calm(X), funny(Y).\nbrave(X) :- excited(X), excited(X).\nnew(X) :- big(X).\nangry(bob).\nparent(eve,frank).\nparent(frank,bob).\nfriend(dave,george).\nbusy(george).\nowns(carol,phone).\nlight(book).\nsoft(car).\nsad(frank).\ncurious(dave).\nfriend(frank,eve).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all Z, if there exists C such that object Z is smooth and person C is tired, then object Z is old.\nFor all X, if there exists U such that person X is busy and person X dislikes object U and object U is smooth, then person X is happy.\nFor all Z, if there exists U such that object Z is heavy and person U likes object Z and person U is brave, then object Z is heavy.\nFor all Y, if object Y is soft, then object Y is small.\nFor all Y, if there exists U such that object Y is small and person U likes object Y and person U is sad, then object Y is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is new, then object X is old.\nFor all X, Y, if person X is calm and person Y is funny, then person X is an enemy of person Y.\nFor all X, if person X is excited and person X is excited, then person X is brave.\nFor all X, if object X is big, then object X is new.\n\nAnd the following facts:\nbob is angry.\neve is a parent of frank.\nfrank is a parent of bob.\ndave is a friend of george.\ngeorge is busy.\ncarol owns phone.\nbook is light.\ncar is soft.\nfrank is sad.\ndave is curious.\nfrank is a friend of eve.\ncarol is excited.\n\nQUESTION:\nCould eve is friendly explain bob is angry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 523,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(alice).",
    "c": "excited(X) :- brave(X).\nsad(X) :- excited(X).\nfunny(X) :- sad(X).\nhappy(X) :- funny(X).\ntired(X) :- happy(X).\nlikes(Y,X) :- weak(Y), clean(X).\ntall(Y) :- hungry(Y), likes(Y,U), heavy(U).\nnew(X) :- heavy(X), owns(B,X), bored(B).\nbored(X) :- curious(X), sibling(X,U), busy(U).\nweak(Y) :- angry(Y), likes(Y,V), rough(V).\ntall(X) :- hungry(X), friendly(X).\nweak(X) :- strong(X), calm(X).\nclever(X) :- hungry(X), friendly(X).\nwet(X) :- light(X), red(X).\nstrong(X) :- hungry(X).\nbrave(alice).\nowns(eve,phone).\nsmooth(book).\nclean(pencil).\nparent(frank,bob).\nlikes(bob,ball).\nsibling(george,alice).\nhard(car).\nfriend(george,frank).\nenemy(frank,alice).\nsibling(george,bob).\nold(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, Y, if person Y is weak and object X is clean, then person Y likes object X.\nFor all Y, if there exists U such that person Y is hungry and person Y likes object U and object U is heavy, then person Y is tall.\nFor all X, if there exists B such that object X is heavy and person B owns object X and person B is bored, then object X is new.\nFor all X, if there exists U such that person X is curious and person X is a sibling of person U and person U is busy, then person X is bored.\nFor all Y, if there exists V such that person Y is angry and person Y likes object V and object V is rough, then person Y is weak.\nFor all X, if person X is hungry and person X is friendly, then person X is tall.\nFor all X, if person X is strong and person X is calm, then person X is weak.\nFor all X, if person X is hungry and person X is friendly, then person X is clever.\nFor all X, if object X is light and object X is red, then object X is wet.\nFor all X, if person X is hungry, then person X is strong.\n\nAnd the following facts:\nalice is brave.\neve owns phone.\nbook is smooth.\npencil is clean.\nfrank is a parent of bob.\nbob likes ball.\ngeorge is a sibling of alice.\ncar is hard.\ngeorge is a friend of frank.\nfrank is an enemy of alice.\ngeorge is a sibling of bob.\npencil is old.\n\nQUESTION:\nIs alice is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 524,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "angry(frank).",
    "c": "excited(X) :- brave(X).\nsad(X) :- excited(X).\nfunny(X) :- sad(X).\nhappy(X) :- funny(X).\ntired(X) :- happy(X).\nlikes(Y,X) :- weak(Y), clean(X).\ntall(Y) :- hungry(Y), likes(Y,U), heavy(U).\nnew(X) :- heavy(X), owns(B,X), bored(B).\nbored(X) :- curious(X), sibling(X,U), busy(U).\nweak(Y) :- angry(Y), likes(Y,V), rough(V).\ntall(X) :- hungry(X), friendly(X).\nweak(X) :- strong(X), calm(X).\nclever(X) :- hungry(X), friendly(X).\nwet(X) :- light(X), red(X).\nstrong(X) :- hungry(X).\nbrave(alice).\nowns(eve,phone).\nsmooth(book).\nclean(pencil).\nparent(frank,bob).\nlikes(bob,ball).\nsibling(george,alice).\nhard(car).\nfriend(george,frank).\nenemy(frank,alice).\nsibling(george,bob).\nold(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, Y, if person Y is weak and object X is clean, then person Y likes object X.\nFor all Y, if there exists U such that person Y is hungry and person Y likes object U and object U is heavy, then person Y is tall.\nFor all X, if there exists B such that object X is heavy and person B owns object X and person B is bored, then object X is new.\nFor all X, if there exists U such that person X is curious and person X is a sibling of person U and person U is busy, then person X is bored.\nFor all Y, if there exists V such that person Y is angry and person Y likes object V and object V is rough, then person Y is weak.\nFor all X, if person X is hungry and person X is friendly, then person X is tall.\nFor all X, if person X is strong and person X is calm, then person X is weak.\nFor all X, if person X is hungry and person X is friendly, then person X is clever.\nFor all X, if object X is light and object X is red, then object X is wet.\nFor all X, if person X is hungry, then person X is strong.\n\nAnd the following facts:\nalice is brave.\neve owns phone.\nbook is smooth.\npencil is clean.\nfrank is a parent of bob.\nbob likes ball.\ngeorge is a sibling of alice.\ncar is hard.\ngeorge is a friend of frank.\nfrank is an enemy of alice.\ngeorge is a sibling of bob.\npencil is old.\n\nQUESTION:\nIs frank is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 525,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(alice).",
    "c": "excited(X) :- brave(X).\nsad(X) :- excited(X).\nfunny(X) :- sad(X).\nhappy(X) :- funny(X).\ntired(X) :- happy(X).\nlikes(Y,X) :- weak(Y), clean(X).\ntall(Y) :- hungry(Y), likes(Y,U), heavy(U).\nnew(X) :- heavy(X), owns(B,X), bored(B).\nbored(X) :- curious(X), sibling(X,U), busy(U).\nweak(Y) :- angry(Y), likes(Y,V), rough(V).\ntall(X) :- hungry(X), friendly(X).\nweak(X) :- strong(X), calm(X).\nclever(X) :- hungry(X), friendly(X).\nwet(X) :- light(X), red(X).\nstrong(X) :- hungry(X).\ntired(alice).\nowns(eve,phone).\nsmooth(book).\nclean(pencil).\nparent(frank,bob).\nlikes(bob,ball).\nsibling(george,alice).\nhard(car).\nfriend(george,frank).\nenemy(frank,alice).\nsibling(george,bob).\nold(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, Y, if person Y is weak and object X is clean, then person Y likes object X.\nFor all Y, if there exists U such that person Y is hungry and person Y likes object U and object U is heavy, then person Y is tall.\nFor all X, if there exists B such that object X is heavy and person B owns object X and person B is bored, then object X is new.\nFor all X, if there exists U such that person X is curious and person X is a sibling of person U and person U is busy, then person X is bored.\nFor all Y, if there exists V such that person Y is angry and person Y likes object V and object V is rough, then person Y is weak.\nFor all X, if person X is hungry and person X is friendly, then person X is tall.\nFor all X, if person X is strong and person X is calm, then person X is weak.\nFor all X, if person X is hungry and person X is friendly, then person X is clever.\nFor all X, if object X is light and object X is red, then object X is wet.\nFor all X, if person X is hungry, then person X is strong.\n\nAnd the following facts:\nalice is tired.\neve owns phone.\nbook is smooth.\npencil is clean.\nfrank is a parent of bob.\nbob likes ball.\ngeorge is a sibling of alice.\ncar is hard.\ngeorge is a friend of frank.\nfrank is an enemy of alice.\ngeorge is a sibling of bob.\npencil is old.\n\nQUESTION:\nCould alice is brave explain alice is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 526,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(frank).",
    "c": "excited(X) :- brave(X).\nsad(X) :- excited(X).\nfunny(X) :- sad(X).\nhappy(X) :- funny(X).\ntired(X) :- happy(X).\nlikes(Y,X) :- weak(Y), clean(X).\ntall(Y) :- hungry(Y), likes(Y,U), heavy(U).\nnew(X) :- heavy(X), owns(B,X), bored(B).\nbored(X) :- curious(X), sibling(X,U), busy(U).\nweak(Y) :- angry(Y), likes(Y,V), rough(V).\ntall(X) :- hungry(X), friendly(X).\nweak(X) :- strong(X), calm(X).\nclever(X) :- hungry(X), friendly(X).\nwet(X) :- light(X), red(X).\nstrong(X) :- hungry(X).\ntired(alice).\nowns(eve,phone).\nsmooth(book).\nclean(pencil).\nparent(frank,bob).\nlikes(bob,ball).\nsibling(george,alice).\nhard(car).\nfriend(george,frank).\nenemy(frank,alice).\nsibling(george,bob).\nold(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, Y, if person Y is weak and object X is clean, then person Y likes object X.\nFor all Y, if there exists U such that person Y is hungry and person Y likes object U and object U is heavy, then person Y is tall.\nFor all X, if there exists B such that object X is heavy and person B owns object X and person B is bored, then object X is new.\nFor all X, if there exists U such that person X is curious and person X is a sibling of person U and person U is busy, then person X is bored.\nFor all Y, if there exists V such that person Y is angry and person Y likes object V and object V is rough, then person Y is weak.\nFor all X, if person X is hungry and person X is friendly, then person X is tall.\nFor all X, if person X is strong and person X is calm, then person X is weak.\nFor all X, if person X is hungry and person X is friendly, then person X is clever.\nFor all X, if object X is light and object X is red, then object X is wet.\nFor all X, if person X is hungry, then person X is strong.\n\nAnd the following facts:\nalice is tired.\neve owns phone.\nbook is smooth.\npencil is clean.\nfrank is a parent of bob.\nbob likes ball.\ngeorge is a sibling of alice.\ncar is hard.\ngeorge is a friend of frank.\nfrank is an enemy of alice.\ngeorge is a sibling of bob.\npencil is old.\n\nQUESTION:\nCould frank is weak explain alice is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 527,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "hard(X) :- red(X).\nold(X) :- hard(X).\nclean(X) :- old(X).\nnew(X) :- clean(X).\nsmooth(X) :- new(X).\nnew(X) :- smooth(X).\nrough(X) :- new(X).\nbig(X) :- rough(X).\nsoft(X) :- big(X).\nsmall(X) :- soft(X).\nheavy(Y) :- light(Y), dislikes(A,Y), happy(A).\ntired(X) :- friendly(X).\nfriend(Y,X) :- brave(Y), curious(X).\nlikes(Z,X) :- brave(Z), wet(X).\nparent(Y,X) :- tired(Y), hungry(X), owns(Y,V).\nred(book).\nowns(dave,phone).\nbusy(bob).\nlikes(bob,apple).\nangry(eve).\nfriend(bob,frank).\nowns(bob,apple).\nowns(carol,car).\nlight(book).\ndislikes(eve,apple).\nowns(frank,apple).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all Y, if there exists A such that object Y is light and person A dislikes object Y and person A is happy, then object Y is heavy.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, Y, if person Y is brave and person X is curious, then person Y is a friend of person X.\nFor all X, Z, if person Z is brave and object X is wet, then person Z likes object X.\nFor all X, Y, if there exists V such that person Y is tired and person X is hungry and person Y owns object V, then person Y is a parent of person X.\n\nAnd the following facts:\nbook is red.\ndave owns phone.\nbob is busy.\nbob likes apple.\neve is angry.\nbob is a friend of frank.\nbob owns apple.\ncarol owns car.\nbook is light.\neve dislikes apple.\nfrank owns apple.\ndave is a parent of frank.\n\nQUESTION:\nIs book is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 528,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "light(pencil).",
    "c": "hard(X) :- red(X).\nold(X) :- hard(X).\nclean(X) :- old(X).\nnew(X) :- clean(X).\nsmooth(X) :- new(X).\nnew(X) :- smooth(X).\nrough(X) :- new(X).\nbig(X) :- rough(X).\nsoft(X) :- big(X).\nsmall(X) :- soft(X).\nheavy(Y) :- light(Y), dislikes(A,Y), happy(A).\ntired(X) :- friendly(X).\nfriend(Y,X) :- brave(Y), curious(X).\nlikes(Z,X) :- brave(Z), wet(X).\nparent(Y,X) :- tired(Y), hungry(X), owns(Y,V).\nred(book).\nowns(dave,phone).\nbusy(bob).\nlikes(bob,apple).\nangry(eve).\nfriend(bob,frank).\nowns(bob,apple).\nowns(carol,car).\nlight(book).\ndislikes(eve,apple).\nowns(frank,apple).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all Y, if there exists A such that object Y is light and person A dislikes object Y and person A is happy, then object Y is heavy.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, Y, if person Y is brave and person X is curious, then person Y is a friend of person X.\nFor all X, Z, if person Z is brave and object X is wet, then person Z likes object X.\nFor all X, Y, if there exists V such that person Y is tired and person X is hungry and person Y owns object V, then person Y is a parent of person X.\n\nAnd the following facts:\nbook is red.\ndave owns phone.\nbob is busy.\nbob likes apple.\neve is angry.\nbob is a friend of frank.\nbob owns apple.\ncarol owns car.\nbook is light.\neve dislikes apple.\nfrank owns apple.\ndave is a parent of frank.\n\nQUESTION:\nIs pencil is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 529,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(book).",
    "c": "hard(X) :- red(X).\nold(X) :- hard(X).\nclean(X) :- old(X).\nnew(X) :- clean(X).\nsmooth(X) :- new(X).\nnew(X) :- smooth(X).\nrough(X) :- new(X).\nbig(X) :- rough(X).\nsoft(X) :- big(X).\nsmall(X) :- soft(X).\nheavy(Y) :- light(Y), dislikes(A,Y), happy(A).\ntired(X) :- friendly(X).\nfriend(Y,X) :- brave(Y), curious(X).\nlikes(Z,X) :- brave(Z), wet(X).\nparent(Y,X) :- tired(Y), hungry(X), owns(Y,V).\nsmall(book).\nowns(dave,phone).\nbusy(bob).\nlikes(bob,apple).\nangry(eve).\nfriend(bob,frank).\nowns(bob,apple).\nowns(carol,car).\nlight(book).\ndislikes(eve,apple).\nowns(frank,apple).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all Y, if there exists A such that object Y is light and person A dislikes object Y and person A is happy, then object Y is heavy.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, Y, if person Y is brave and person X is curious, then person Y is a friend of person X.\nFor all X, Z, if person Z is brave and object X is wet, then person Z likes object X.\nFor all X, Y, if there exists V such that person Y is tired and person X is hungry and person Y owns object V, then person Y is a parent of person X.\n\nAnd the following facts:\nbook is small.\ndave owns phone.\nbob is busy.\nbob likes apple.\neve is angry.\nbob is a friend of frank.\nbob owns apple.\ncarol owns car.\nbook is light.\neve dislikes apple.\nfrank owns apple.\ndave is a parent of frank.\n\nQUESTION:\nCould book is red explain book is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 530,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "soft(car).",
    "c": "hard(X) :- red(X).\nold(X) :- hard(X).\nclean(X) :- old(X).\nnew(X) :- clean(X).\nsmooth(X) :- new(X).\nnew(X) :- smooth(X).\nrough(X) :- new(X).\nbig(X) :- rough(X).\nsoft(X) :- big(X).\nsmall(X) :- soft(X).\nheavy(Y) :- light(Y), dislikes(A,Y), happy(A).\ntired(X) :- friendly(X).\nfriend(Y,X) :- brave(Y), curious(X).\nlikes(Z,X) :- brave(Z), wet(X).\nparent(Y,X) :- tired(Y), hungry(X), owns(Y,V).\nsmall(book).\nowns(dave,phone).\nbusy(bob).\nlikes(bob,apple).\nangry(eve).\nfriend(bob,frank).\nowns(bob,apple).\nowns(carol,car).\nlight(book).\ndislikes(eve,apple).\nowns(frank,apple).\nparent(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all Y, if there exists A such that object Y is light and person A dislikes object Y and person A is happy, then object Y is heavy.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, Y, if person Y is brave and person X is curious, then person Y is a friend of person X.\nFor all X, Z, if person Z is brave and object X is wet, then person Z likes object X.\nFor all X, Y, if there exists V such that person Y is tired and person X is hungry and person Y owns object V, then person Y is a parent of person X.\n\nAnd the following facts:\nbook is small.\ndave owns phone.\nbob is busy.\nbob likes apple.\neve is angry.\nbob is a friend of frank.\nbob owns apple.\ncarol owns car.\nbook is light.\neve dislikes apple.\nfrank owns apple.\ndave is a parent of frank.\n\nQUESTION:\nCould car is soft explain book is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 531,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "old(X) :- heavy(X).\nnew(X) :- old(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nsmall(X) :- rough(X).\nbig(X) :- small(X).\nrough(X) :- big(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nsoft(X) :- clean(X).\nsmooth(Z) :- wet(Z), likes(U,Z), clever(U).\nlikes(Y,Z) :- busy(Y), hard(Z).\nsibling(Y,X) :- strong(Y), busy(X), sibling(Y,A).\nbusy(X) :- weak(X).\nbusy(X) :- strong(X), clever(X).\nheavy(phone).\nenemy(dave,george).\nfriend(eve,carol).\nsmooth(phone).\nparent(frank,george).\nenemy(frank,george).\nbusy(george).\nsibling(bob,dave).\nhungry(george).\nowns(eve,phone).\nbrave(alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all Z, if there exists U such that object Z is wet and person U likes object Z and person U is clever, then object Z is smooth.\nFor all Y, Z, if person Y is busy and object Z is hard, then person Y likes object Z.\nFor all X, Y, if there exists A such that person Y is strong and person X is busy and person Y is a sibling of person A, then person Y is a sibling of person X.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is strong and person X is clever, then person X is busy.\n\nAnd the following facts:\nphone is heavy.\ndave is an enemy of george.\neve is a friend of carol.\nphone is smooth.\nfrank is a parent of george.\nfrank is an enemy of george.\ngeorge is busy.\nbob is a sibling of dave.\ngeorge is hungry.\neve owns phone.\nalice is brave.\ndave is an enemy of eve.\n\nQUESTION:\nIs phone is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 532,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(dave).",
    "c": "old(X) :- heavy(X).\nnew(X) :- old(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nsmall(X) :- rough(X).\nbig(X) :- small(X).\nrough(X) :- big(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nsoft(X) :- clean(X).\nsmooth(Z) :- wet(Z), likes(U,Z), clever(U).\nlikes(Y,Z) :- busy(Y), hard(Z).\nsibling(Y,X) :- strong(Y), busy(X), sibling(Y,A).\nbusy(X) :- weak(X).\nbusy(X) :- strong(X), clever(X).\nheavy(phone).\nenemy(dave,george).\nfriend(eve,carol).\nsmooth(phone).\nparent(frank,george).\nenemy(frank,george).\nbusy(george).\nsibling(bob,dave).\nhungry(george).\nowns(eve,phone).\nbrave(alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all Z, if there exists U such that object Z is wet and person U likes object Z and person U is clever, then object Z is smooth.\nFor all Y, Z, if person Y is busy and object Z is hard, then person Y likes object Z.\nFor all X, Y, if there exists A such that person Y is strong and person X is busy and person Y is a sibling of person A, then person Y is a sibling of person X.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is strong and person X is clever, then person X is busy.\n\nAnd the following facts:\nphone is heavy.\ndave is an enemy of george.\neve is a friend of carol.\nphone is smooth.\nfrank is a parent of george.\nfrank is an enemy of george.\ngeorge is busy.\nbob is a sibling of dave.\ngeorge is hungry.\neve owns phone.\nalice is brave.\ndave is an enemy of eve.\n\nQUESTION:\nIs dave is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 533,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(phone).",
    "c": "old(X) :- heavy(X).\nnew(X) :- old(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nsmall(X) :- rough(X).\nbig(X) :- small(X).\nrough(X) :- big(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nsoft(X) :- clean(X).\nsmooth(Z) :- wet(Z), likes(U,Z), clever(U).\nlikes(Y,Z) :- busy(Y), hard(Z).\nsibling(Y,X) :- strong(Y), busy(X), sibling(Y,A).\nbusy(X) :- weak(X).\nbusy(X) :- strong(X), clever(X).\nsoft(phone).\nenemy(dave,george).\nfriend(eve,carol).\nsmooth(phone).\nparent(frank,george).\nenemy(frank,george).\nbusy(george).\nsibling(bob,dave).\nhungry(george).\nowns(eve,phone).\nbrave(alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all Z, if there exists U such that object Z is wet and person U likes object Z and person U is clever, then object Z is smooth.\nFor all Y, Z, if person Y is busy and object Z is hard, then person Y likes object Z.\nFor all X, Y, if there exists A such that person Y is strong and person X is busy and person Y is a sibling of person A, then person Y is a sibling of person X.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is strong and person X is clever, then person X is busy.\n\nAnd the following facts:\nphone is soft.\ndave is an enemy of george.\neve is a friend of carol.\nphone is smooth.\nfrank is a parent of george.\nfrank is an enemy of george.\ngeorge is busy.\nbob is a sibling of dave.\ngeorge is hungry.\neve owns phone.\nalice is brave.\ndave is an enemy of eve.\n\nQUESTION:\nCould phone is heavy explain phone is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 534,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "tall(george).",
    "c": "old(X) :- heavy(X).\nnew(X) :- old(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nsmall(X) :- rough(X).\nbig(X) :- small(X).\nrough(X) :- big(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nsoft(X) :- clean(X).\nsmooth(Z) :- wet(Z), likes(U,Z), clever(U).\nlikes(Y,Z) :- busy(Y), hard(Z).\nsibling(Y,X) :- strong(Y), busy(X), sibling(Y,A).\nbusy(X) :- weak(X).\nbusy(X) :- strong(X), clever(X).\nsoft(phone).\nenemy(dave,george).\nfriend(eve,carol).\nsmooth(phone).\nparent(frank,george).\nenemy(frank,george).\nbusy(george).\nsibling(bob,dave).\nhungry(george).\nowns(eve,phone).\nbrave(alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all Z, if there exists U such that object Z is wet and person U likes object Z and person U is clever, then object Z is smooth.\nFor all Y, Z, if person Y is busy and object Z is hard, then person Y likes object Z.\nFor all X, Y, if there exists A such that person Y is strong and person X is busy and person Y is a sibling of person A, then person Y is a sibling of person X.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is strong and person X is clever, then person X is busy.\n\nAnd the following facts:\nphone is soft.\ndave is an enemy of george.\neve is a friend of carol.\nphone is smooth.\nfrank is a parent of george.\nfrank is an enemy of george.\ngeorge is busy.\nbob is a sibling of dave.\ngeorge is hungry.\neve owns phone.\nalice is brave.\ndave is an enemy of eve.\n\nQUESTION:\nCould george is tall explain phone is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 535,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(alice).",
    "c": "curious(X) :- clever(X).\ncalm(X) :- curious(X).\nweak(X) :- calm(X).\nfunny(X) :- weak(X).\nhappy(X) :- funny(X).\nbored(X) :- happy(X).\nbusy(X) :- bored(X).\nhungry(X) :- busy(X).\ntired(X) :- hungry(X).\nfriendly(X) :- tired(X).\nfriend(X,Z) :- strong(Z), excited(X), parent(X,V).\nred(X) :- red(X), dislikes(B,X), strong(B).\nsoft(X) :- big(X), heavy(X).\nbig(X) :- red(X), smooth(X).\nheavy(X) :- old(X), light(X).\nclever(alice).\nenemy(eve,george).\nlikes(dave,phone).\nfriend(dave,alice).\ndislikes(eve,ball).\nenemy(alice,bob).\nparent(frank,dave).\nbig(apple).\nowns(frank,phone).\nsmall(ball).\nenemy(carol,frank).\nenemy(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, Z, if there exists V such that person Z is strong and person X is excited and person X is a parent of person V, then person X is a friend of person Z.\nFor all X, if there exists B such that object X is red and person B dislikes object X and person B is strong, then object X is red.\nFor all X, if object X is big and object X is heavy, then object X is soft.\nFor all X, if object X is red and object X is smooth, then object X is big.\nFor all X, if object X is old and object X is light, then object X is heavy.\n\nAnd the following facts:\nalice is clever.\neve is an enemy of george.\ndave likes phone.\ndave is a friend of alice.\neve dislikes ball.\nalice is an enemy of bob.\nfrank is a parent of dave.\napple is big.\nfrank owns phone.\nball is small.\ncarol is an enemy of frank.\ngeorge is an enemy of carol.\n\nQUESTION:\nIs alice is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 536,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(carol).",
    "c": "curious(X) :- clever(X).\ncalm(X) :- curious(X).\nweak(X) :- calm(X).\nfunny(X) :- weak(X).\nhappy(X) :- funny(X).\nbored(X) :- happy(X).\nbusy(X) :- bored(X).\nhungry(X) :- busy(X).\ntired(X) :- hungry(X).\nfriendly(X) :- tired(X).\nfriend(X,Z) :- strong(Z), excited(X), parent(X,V).\nred(X) :- red(X), dislikes(B,X), strong(B).\nsoft(X) :- big(X), heavy(X).\nbig(X) :- red(X), smooth(X).\nheavy(X) :- old(X), light(X).\nclever(alice).\nenemy(eve,george).\nlikes(dave,phone).\nfriend(dave,alice).\ndislikes(eve,ball).\nenemy(alice,bob).\nparent(frank,dave).\nbig(apple).\nowns(frank,phone).\nsmall(ball).\nenemy(carol,frank).\nenemy(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, Z, if there exists V such that person Z is strong and person X is excited and person X is a parent of person V, then person X is a friend of person Z.\nFor all X, if there exists B such that object X is red and person B dislikes object X and person B is strong, then object X is red.\nFor all X, if object X is big and object X is heavy, then object X is soft.\nFor all X, if object X is red and object X is smooth, then object X is big.\nFor all X, if object X is old and object X is light, then object X is heavy.\n\nAnd the following facts:\nalice is clever.\neve is an enemy of george.\ndave likes phone.\ndave is a friend of alice.\neve dislikes ball.\nalice is an enemy of bob.\nfrank is a parent of dave.\napple is big.\nfrank owns phone.\nball is small.\ncarol is an enemy of frank.\ngeorge is an enemy of carol.\n\nQUESTION:\nIs carol is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 537,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(alice).",
    "c": "curious(X) :- clever(X).\ncalm(X) :- curious(X).\nweak(X) :- calm(X).\nfunny(X) :- weak(X).\nhappy(X) :- funny(X).\nbored(X) :- happy(X).\nbusy(X) :- bored(X).\nhungry(X) :- busy(X).\ntired(X) :- hungry(X).\nfriendly(X) :- tired(X).\nfriend(X,Z) :- strong(Z), excited(X), parent(X,V).\nred(X) :- red(X), dislikes(B,X), strong(B).\nsoft(X) :- big(X), heavy(X).\nbig(X) :- red(X), smooth(X).\nheavy(X) :- old(X), light(X).\nfriendly(alice).\nenemy(eve,george).\nlikes(dave,phone).\nfriend(dave,alice).\ndislikes(eve,ball).\nenemy(alice,bob).\nparent(frank,dave).\nbig(apple).\nowns(frank,phone).\nsmall(ball).\nenemy(carol,frank).\nenemy(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, Z, if there exists V such that person Z is strong and person X is excited and person X is a parent of person V, then person X is a friend of person Z.\nFor all X, if there exists B such that object X is red and person B dislikes object X and person B is strong, then object X is red.\nFor all X, if object X is big and object X is heavy, then object X is soft.\nFor all X, if object X is red and object X is smooth, then object X is big.\nFor all X, if object X is old and object X is light, then object X is heavy.\n\nAnd the following facts:\nalice is friendly.\neve is an enemy of george.\ndave likes phone.\ndave is a friend of alice.\neve dislikes ball.\nalice is an enemy of bob.\nfrank is a parent of dave.\napple is big.\nfrank owns phone.\nball is small.\ncarol is an enemy of frank.\ngeorge is an enemy of carol.\n\nQUESTION:\nCould alice is clever explain alice is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 538,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(apple).",
    "c": "curious(X) :- clever(X).\ncalm(X) :- curious(X).\nweak(X) :- calm(X).\nfunny(X) :- weak(X).\nhappy(X) :- funny(X).\nbored(X) :- happy(X).\nbusy(X) :- bored(X).\nhungry(X) :- busy(X).\ntired(X) :- hungry(X).\nfriendly(X) :- tired(X).\nfriend(X,Z) :- strong(Z), excited(X), parent(X,V).\nred(X) :- red(X), dislikes(B,X), strong(B).\nsoft(X) :- big(X), heavy(X).\nbig(X) :- red(X), smooth(X).\nheavy(X) :- old(X), light(X).\nfriendly(alice).\nenemy(eve,george).\nlikes(dave,phone).\nfriend(dave,alice).\ndislikes(eve,ball).\nenemy(alice,bob).\nparent(frank,dave).\nbig(apple).\nowns(frank,phone).\nsmall(ball).\nenemy(carol,frank).\nenemy(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, Z, if there exists V such that person Z is strong and person X is excited and person X is a parent of person V, then person X is a friend of person Z.\nFor all X, if there exists B such that object X is red and person B dislikes object X and person B is strong, then object X is red.\nFor all X, if object X is big and object X is heavy, then object X is soft.\nFor all X, if object X is red and object X is smooth, then object X is big.\nFor all X, if object X is old and object X is light, then object X is heavy.\n\nAnd the following facts:\nalice is friendly.\neve is an enemy of george.\ndave likes phone.\ndave is a friend of alice.\neve dislikes ball.\nalice is an enemy of bob.\nfrank is a parent of dave.\napple is big.\nfrank owns phone.\nball is small.\ncarol is an enemy of frank.\ngeorge is an enemy of carol.\n\nQUESTION:\nCould apple is smooth explain alice is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 539,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(ball).",
    "c": "big(X) :- smooth(X).\nheavy(X) :- big(X).\nrough(X) :- heavy(X).\nclean(X) :- rough(X).\nsoft(X) :- clean(X).\nred(X) :- soft(X).\nwet(X) :- red(X).\nhard(X) :- wet(X).\nlight(X) :- hard(X).\ndirty(X) :- light(X).\nbusy(X) :- brave(X), likes(X,B), old(B).\nangry(Z) :- happy(Z), parent(Z,V), tired(V).\nbored(X) :- weak(X).\nfriendly(X) :- angry(X).\nbrave(X) :- funny(X), weak(X).\nsmooth(ball).\nangry(carol).\nfriend(frank,dave).\nfriendly(bob).\nfriend(eve,frank).\nparent(frank,bob).\nhungry(george).\nhungry(frank).\nowns(eve,car).\nnew(book).\nhappy(eve).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if there exists B such that person X is brave and person X likes object B and object B is old, then person X is busy.\nFor all Z, if there exists V such that person Z is happy and person Z is a parent of person V and person V is tired, then person Z is angry.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is funny and person X is weak, then person X is brave.\n\nAnd the following facts:\nball is smooth.\ncarol is angry.\nfrank is a friend of dave.\nbob is friendly.\neve is a friend of frank.\nfrank is a parent of bob.\ngeorge is hungry.\nfrank is hungry.\neve owns car.\nbook is new.\neve is happy.\nalice is a parent of eve.\n\nQUESTION:\nIs ball is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 540,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(alice).",
    "c": "big(X) :- smooth(X).\nheavy(X) :- big(X).\nrough(X) :- heavy(X).\nclean(X) :- rough(X).\nsoft(X) :- clean(X).\nred(X) :- soft(X).\nwet(X) :- red(X).\nhard(X) :- wet(X).\nlight(X) :- hard(X).\ndirty(X) :- light(X).\nbusy(X) :- brave(X), likes(X,B), old(B).\nangry(Z) :- happy(Z), parent(Z,V), tired(V).\nbored(X) :- weak(X).\nfriendly(X) :- angry(X).\nbrave(X) :- funny(X), weak(X).\nsmooth(ball).\nangry(carol).\nfriend(frank,dave).\nfriendly(bob).\nfriend(eve,frank).\nparent(frank,bob).\nhungry(george).\nhungry(frank).\nowns(eve,car).\nnew(book).\nhappy(eve).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if there exists B such that person X is brave and person X likes object B and object B is old, then person X is busy.\nFor all Z, if there exists V such that person Z is happy and person Z is a parent of person V and person V is tired, then person Z is angry.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is funny and person X is weak, then person X is brave.\n\nAnd the following facts:\nball is smooth.\ncarol is angry.\nfrank is a friend of dave.\nbob is friendly.\neve is a friend of frank.\nfrank is a parent of bob.\ngeorge is hungry.\nfrank is hungry.\neve owns car.\nbook is new.\neve is happy.\nalice is a parent of eve.\n\nQUESTION:\nIs alice is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 541,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(ball).",
    "c": "big(X) :- smooth(X).\nheavy(X) :- big(X).\nrough(X) :- heavy(X).\nclean(X) :- rough(X).\nsoft(X) :- clean(X).\nred(X) :- soft(X).\nwet(X) :- red(X).\nhard(X) :- wet(X).\nlight(X) :- hard(X).\ndirty(X) :- light(X).\nbusy(X) :- brave(X), likes(X,B), old(B).\nangry(Z) :- happy(Z), parent(Z,V), tired(V).\nbored(X) :- weak(X).\nfriendly(X) :- angry(X).\nbrave(X) :- funny(X), weak(X).\ndirty(ball).\nangry(carol).\nfriend(frank,dave).\nfriendly(bob).\nfriend(eve,frank).\nparent(frank,bob).\nhungry(george).\nhungry(frank).\nowns(eve,car).\nnew(book).\nhappy(eve).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if there exists B such that person X is brave and person X likes object B and object B is old, then person X is busy.\nFor all Z, if there exists V such that person Z is happy and person Z is a parent of person V and person V is tired, then person Z is angry.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is funny and person X is weak, then person X is brave.\n\nAnd the following facts:\nball is dirty.\ncarol is angry.\nfrank is a friend of dave.\nbob is friendly.\neve is a friend of frank.\nfrank is a parent of bob.\ngeorge is hungry.\nfrank is hungry.\neve owns car.\nbook is new.\neve is happy.\nalice is a parent of eve.\n\nQUESTION:\nCould ball is smooth explain ball is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 542,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(car).",
    "c": "big(X) :- smooth(X).\nheavy(X) :- big(X).\nrough(X) :- heavy(X).\nclean(X) :- rough(X).\nsoft(X) :- clean(X).\nred(X) :- soft(X).\nwet(X) :- red(X).\nhard(X) :- wet(X).\nlight(X) :- hard(X).\ndirty(X) :- light(X).\nbusy(X) :- brave(X), likes(X,B), old(B).\nangry(Z) :- happy(Z), parent(Z,V), tired(V).\nbored(X) :- weak(X).\nfriendly(X) :- angry(X).\nbrave(X) :- funny(X), weak(X).\ndirty(ball).\nangry(carol).\nfriend(frank,dave).\nfriendly(bob).\nfriend(eve,frank).\nparent(frank,bob).\nhungry(george).\nhungry(frank).\nowns(eve,car).\nnew(book).\nhappy(eve).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if there exists B such that person X is brave and person X likes object B and object B is old, then person X is busy.\nFor all Z, if there exists V such that person Z is happy and person Z is a parent of person V and person V is tired, then person Z is angry.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is funny and person X is weak, then person X is brave.\n\nAnd the following facts:\nball is dirty.\ncarol is angry.\nfrank is a friend of dave.\nbob is friendly.\neve is a friend of frank.\nfrank is a parent of bob.\ngeorge is hungry.\nfrank is hungry.\neve owns car.\nbook is new.\neve is happy.\nalice is a parent of eve.\n\nQUESTION:\nCould car is heavy explain ball is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 543,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(pencil).",
    "c": "soft(X) :- red(X).\nhard(Z) :- wet(Z).\nexcited(X) :- strong(X), owns(X,A), new(A).\ntall(Y) :- busy(Y), enemy(Y,A), funny(A).\nhard(X) :- clean(X), owns(W,X), excited(W).\nsmooth(Z) :- old(Z).\nparent(Z,X) :- angry(Z), busy(X).\nclever(Z) :- strong(Z), likes(Z,W), new(W).\nexcited(Y) :- tired(Y), owns(Y,W), rough(W).\nbig(X) :- clean(X), new(X).\ncalm(X) :- funny(X).\nlight(X) :- big(X).\nold(X) :- heavy(X), smooth(X).\ncurious(X) :- weak(X), friendly(X).\nsmall(X) :- big(X).\nred(pencil).\nbusy(carol).\nweak(alice).\nlikes(dave,phone).\nowns(carol,ball).\nsmooth(apple).\ndirty(book).\nenemy(eve,alice).\ntall(bob).\ncalm(george).\nangry(george).\nhungry(frank).\nparent(george,dave).\nhungry(george).\nhappy(bob).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is soft.\nFor all Z, if object Z is wet, then object Z is hard.\nFor all X, if there exists A such that person X is strong and person X owns object A and object A is new, then person X is excited.\nFor all Y, if there exists A such that person Y is busy and person Y is an enemy of person A and person A is funny, then person Y is tall.\nFor all X, if there exists W such that object X is clean and person W owns object X and person W is excited, then object X is hard.\nFor all Z, if object Z is old, then object Z is smooth.\nFor all X, Z, if person Z is angry and person X is busy, then person Z is a parent of person X.\nFor all Z, if there exists W such that person Z is strong and person Z likes object W and object W is new, then person Z is clever.\nFor all Y, if there exists W such that person Y is tired and person Y owns object W and object W is rough, then person Y is excited.\nFor all X, if object X is clean and object X is new, then object X is big.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is heavy and object X is smooth, then object X is old.\nFor all X, if person X is weak and person X is friendly, then person X is curious.\nFor all X, if object X is big, then object X is small.\n\nAnd the following facts:\npencil is red.\ncarol is busy.\nalice is weak.\ndave likes phone.\ncarol owns ball.\napple is smooth.\nbook is dirty.\neve is an enemy of alice.\nbob is tall.\ngeorge is calm.\ngeorge is angry.\nfrank is hungry.\ngeorge is a parent of dave.\ngeorge is hungry.\nbob is happy.\nfrank is a friend of bob.\n\nQUESTION:\nIs pencil is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 544,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(carol).",
    "c": "soft(X) :- red(X).\nhard(Z) :- wet(Z).\nexcited(X) :- strong(X), owns(X,A), new(A).\ntall(Y) :- busy(Y), enemy(Y,A), funny(A).\nhard(X) :- clean(X), owns(W,X), excited(W).\nsmooth(Z) :- old(Z).\nparent(Z,X) :- angry(Z), busy(X).\nclever(Z) :- strong(Z), likes(Z,W), new(W).\nexcited(Y) :- tired(Y), owns(Y,W), rough(W).\nbig(X) :- clean(X), new(X).\ncalm(X) :- funny(X).\nlight(X) :- big(X).\nold(X) :- heavy(X), smooth(X).\ncurious(X) :- weak(X), friendly(X).\nsmall(X) :- big(X).\nred(pencil).\nbusy(carol).\nweak(alice).\nlikes(dave,phone).\nowns(carol,ball).\nsmooth(apple).\ndirty(book).\nenemy(eve,alice).\ntall(bob).\ncalm(george).\nangry(george).\nhungry(frank).\nparent(george,dave).\nhungry(george).\nhappy(bob).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is soft.\nFor all Z, if object Z is wet, then object Z is hard.\nFor all X, if there exists A such that person X is strong and person X owns object A and object A is new, then person X is excited.\nFor all Y, if there exists A such that person Y is busy and person Y is an enemy of person A and person A is funny, then person Y is tall.\nFor all X, if there exists W such that object X is clean and person W owns object X and person W is excited, then object X is hard.\nFor all Z, if object Z is old, then object Z is smooth.\nFor all X, Z, if person Z is angry and person X is busy, then person Z is a parent of person X.\nFor all Z, if there exists W such that person Z is strong and person Z likes object W and object W is new, then person Z is clever.\nFor all Y, if there exists W such that person Y is tired and person Y owns object W and object W is rough, then person Y is excited.\nFor all X, if object X is clean and object X is new, then object X is big.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is heavy and object X is smooth, then object X is old.\nFor all X, if person X is weak and person X is friendly, then person X is curious.\nFor all X, if object X is big, then object X is small.\n\nAnd the following facts:\npencil is red.\ncarol is busy.\nalice is weak.\ndave likes phone.\ncarol owns ball.\napple is smooth.\nbook is dirty.\neve is an enemy of alice.\nbob is tall.\ngeorge is calm.\ngeorge is angry.\nfrank is hungry.\ngeorge is a parent of dave.\ngeorge is hungry.\nbob is happy.\nfrank is a friend of bob.\n\nQUESTION:\nIs carol is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 545,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(pencil).",
    "c": "soft(X) :- red(X).\nhard(Z) :- wet(Z).\nexcited(X) :- strong(X), owns(X,A), new(A).\ntall(Y) :- busy(Y), enemy(Y,A), funny(A).\nhard(X) :- clean(X), owns(W,X), excited(W).\nsmooth(Z) :- old(Z).\nparent(Z,X) :- angry(Z), busy(X).\nclever(Z) :- strong(Z), likes(Z,W), new(W).\nexcited(Y) :- tired(Y), owns(Y,W), rough(W).\nbig(X) :- clean(X), new(X).\ncalm(X) :- funny(X).\nlight(X) :- big(X).\nold(X) :- heavy(X), smooth(X).\ncurious(X) :- weak(X), friendly(X).\nsmall(X) :- big(X).\nsoft(pencil).\nbusy(carol).\nweak(alice).\nlikes(dave,phone).\nowns(carol,ball).\nsmooth(apple).\ndirty(book).\nenemy(eve,alice).\ntall(bob).\ncalm(george).\nangry(george).\nhungry(frank).\nparent(george,dave).\nhungry(george).\nhappy(bob).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is soft.\nFor all Z, if object Z is wet, then object Z is hard.\nFor all X, if there exists A such that person X is strong and person X owns object A and object A is new, then person X is excited.\nFor all Y, if there exists A such that person Y is busy and person Y is an enemy of person A and person A is funny, then person Y is tall.\nFor all X, if there exists W such that object X is clean and person W owns object X and person W is excited, then object X is hard.\nFor all Z, if object Z is old, then object Z is smooth.\nFor all X, Z, if person Z is angry and person X is busy, then person Z is a parent of person X.\nFor all Z, if there exists W such that person Z is strong and person Z likes object W and object W is new, then person Z is clever.\nFor all Y, if there exists W such that person Y is tired and person Y owns object W and object W is rough, then person Y is excited.\nFor all X, if object X is clean and object X is new, then object X is big.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is heavy and object X is smooth, then object X is old.\nFor all X, if person X is weak and person X is friendly, then person X is curious.\nFor all X, if object X is big, then object X is small.\n\nAnd the following facts:\npencil is soft.\ncarol is busy.\nalice is weak.\ndave likes phone.\ncarol owns ball.\napple is smooth.\nbook is dirty.\neve is an enemy of alice.\nbob is tall.\ngeorge is calm.\ngeorge is angry.\nfrank is hungry.\ngeorge is a parent of dave.\ngeorge is hungry.\nbob is happy.\nfrank is a friend of bob.\n\nQUESTION:\nCould pencil is red explain pencil is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 546,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clever(george).",
    "c": "soft(X) :- red(X).\nhard(Z) :- wet(Z).\nexcited(X) :- strong(X), owns(X,A), new(A).\ntall(Y) :- busy(Y), enemy(Y,A), funny(A).\nhard(X) :- clean(X), owns(W,X), excited(W).\nsmooth(Z) :- old(Z).\nparent(Z,X) :- angry(Z), busy(X).\nclever(Z) :- strong(Z), likes(Z,W), new(W).\nexcited(Y) :- tired(Y), owns(Y,W), rough(W).\nbig(X) :- clean(X), new(X).\ncalm(X) :- funny(X).\nlight(X) :- big(X).\nold(X) :- heavy(X), smooth(X).\ncurious(X) :- weak(X), friendly(X).\nsmall(X) :- big(X).\nsoft(pencil).\nbusy(carol).\nweak(alice).\nlikes(dave,phone).\nowns(carol,ball).\nsmooth(apple).\ndirty(book).\nenemy(eve,alice).\ntall(bob).\ncalm(george).\nangry(george).\nhungry(frank).\nparent(george,dave).\nhungry(george).\nhappy(bob).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is soft.\nFor all Z, if object Z is wet, then object Z is hard.\nFor all X, if there exists A such that person X is strong and person X owns object A and object A is new, then person X is excited.\nFor all Y, if there exists A such that person Y is busy and person Y is an enemy of person A and person A is funny, then person Y is tall.\nFor all X, if there exists W such that object X is clean and person W owns object X and person W is excited, then object X is hard.\nFor all Z, if object Z is old, then object Z is smooth.\nFor all X, Z, if person Z is angry and person X is busy, then person Z is a parent of person X.\nFor all Z, if there exists W such that person Z is strong and person Z likes object W and object W is new, then person Z is clever.\nFor all Y, if there exists W such that person Y is tired and person Y owns object W and object W is rough, then person Y is excited.\nFor all X, if object X is clean and object X is new, then object X is big.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is heavy and object X is smooth, then object X is old.\nFor all X, if person X is weak and person X is friendly, then person X is curious.\nFor all X, if object X is big, then object X is small.\n\nAnd the following facts:\npencil is soft.\ncarol is busy.\nalice is weak.\ndave likes phone.\ncarol owns ball.\napple is smooth.\nbook is dirty.\neve is an enemy of alice.\nbob is tall.\ngeorge is calm.\ngeorge is angry.\nfrank is hungry.\ngeorge is a parent of dave.\ngeorge is hungry.\nbob is happy.\nfrank is a friend of bob.\n\nQUESTION:\nCould george is clever explain pencil is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 547,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(pencil).",
    "c": "old(X) :- red(X).\nhard(X) :- clean(X).\ncurious(Z) :- weak(Z), clean(F).\nsad(Z) :- excited(Z), parent(Z,A), friendly(A).\nweak(Y) :- bored(Y), friend(Y,W), sad(W).\nowns(Y,Z) :- weak(Y), clean(Z), friendly(B).\nhard(Y) :- light(Y).\nowns(Y,Z) :- angry(Y), soft(Z), owns(Y,A).\nsibling(X,Y) :- angry(X), calm(Y), friend(X,Y).\nexcited(X) :- calm(X), hungry(X).\nnew(X) :- rough(X).\nweak(X) :- excited(X).\nlikes(X,Y) :- tall(X), clean(Y), dislikes(X,Y).\nbrave(X) :- busy(X), curious(X).\nbrave(X) :- friendly(X).\nred(pencil).\nowns(carol,apple).\nclean(apple).\nenemy(alice,carol).\nlikes(dave,pencil).\ntired(alice).\nsibling(george,alice).\ndislikes(dave,car).\ncurious(dave).\nowns(frank,ball).\nparent(frank,dave).\nfriend(bob,carol).\nparent(eve,frank).\nsibling(george,carol).\nlikes(carol,phone).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is clean, then object X is hard.\nFor all Z, if there exists F such that person Z is weak and object F is clean, then person Z is curious.\nFor all Z, if there exists A such that person Z is excited and person Z is a parent of person A and person A is friendly, then person Z is sad.\nFor all Y, if there exists W such that person Y is bored and person Y is a friend of person W and person W is sad, then person Y is weak.\nFor all Y, Z, if there exists B such that person Y is weak and object Z is clean and person B is friendly, then person Y owns object Z.\nFor all Y, if object Y is light, then object Y is hard.\nFor all Y, Z, if there exists A such that person Y is angry and object Z is soft and person Y owns object A, then person Y owns object Z.\nFor all X, Y, if person X is angry and person Y is calm and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if person X is calm and person X is hungry, then person X is excited.\nFor all X, if object X is rough, then object X is new.\nFor all X, if person X is excited, then person X is weak.\nFor all X, Y, if person X is tall and object Y is clean and person X dislikes object Y, then person X likes object Y.\nFor all X, if person X is busy and person X is curious, then person X is brave.\nFor all X, if person X is friendly, then person X is brave.\n\nAnd the following facts:\npencil is red.\ncarol owns apple.\napple is clean.\nalice is an enemy of carol.\ndave likes pencil.\nalice is tired.\ngeorge is a sibling of alice.\ndave dislikes car.\ndave is curious.\nfrank owns ball.\nfrank is a parent of dave.\nbob is a friend of carol.\neve is a parent of frank.\ngeorge is a sibling of carol.\ncarol likes phone.\ncarol owns book.\n\nQUESTION:\nIs pencil is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 548,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(dave).",
    "c": "old(X) :- red(X).\nhard(X) :- clean(X).\ncurious(Z) :- weak(Z), clean(F).\nsad(Z) :- excited(Z), parent(Z,A), friendly(A).\nweak(Y) :- bored(Y), friend(Y,W), sad(W).\nowns(Y,Z) :- weak(Y), clean(Z), friendly(B).\nhard(Y) :- light(Y).\nowns(Y,Z) :- angry(Y), soft(Z), owns(Y,A).\nsibling(X,Y) :- angry(X), calm(Y), friend(X,Y).\nexcited(X) :- calm(X), hungry(X).\nnew(X) :- rough(X).\nweak(X) :- excited(X).\nlikes(X,Y) :- tall(X), clean(Y), dislikes(X,Y).\nbrave(X) :- busy(X), curious(X).\nbrave(X) :- friendly(X).\nred(pencil).\nowns(carol,apple).\nclean(apple).\nenemy(alice,carol).\nlikes(dave,pencil).\ntired(alice).\nsibling(george,alice).\ndislikes(dave,car).\ncurious(dave).\nowns(frank,ball).\nparent(frank,dave).\nfriend(bob,carol).\nparent(eve,frank).\nsibling(george,carol).\nlikes(carol,phone).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is clean, then object X is hard.\nFor all Z, if there exists F such that person Z is weak and object F is clean, then person Z is curious.\nFor all Z, if there exists A such that person Z is excited and person Z is a parent of person A and person A is friendly, then person Z is sad.\nFor all Y, if there exists W such that person Y is bored and person Y is a friend of person W and person W is sad, then person Y is weak.\nFor all Y, Z, if there exists B such that person Y is weak and object Z is clean and person B is friendly, then person Y owns object Z.\nFor all Y, if object Y is light, then object Y is hard.\nFor all Y, Z, if there exists A such that person Y is angry and object Z is soft and person Y owns object A, then person Y owns object Z.\nFor all X, Y, if person X is angry and person Y is calm and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if person X is calm and person X is hungry, then person X is excited.\nFor all X, if object X is rough, then object X is new.\nFor all X, if person X is excited, then person X is weak.\nFor all X, Y, if person X is tall and object Y is clean and person X dislikes object Y, then person X likes object Y.\nFor all X, if person X is busy and person X is curious, then person X is brave.\nFor all X, if person X is friendly, then person X is brave.\n\nAnd the following facts:\npencil is red.\ncarol owns apple.\napple is clean.\nalice is an enemy of carol.\ndave likes pencil.\nalice is tired.\ngeorge is a sibling of alice.\ndave dislikes car.\ndave is curious.\nfrank owns ball.\nfrank is a parent of dave.\nbob is a friend of carol.\neve is a parent of frank.\ngeorge is a sibling of carol.\ncarol likes phone.\ncarol owns book.\n\nQUESTION:\nIs dave is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 549,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(pencil).",
    "c": "old(X) :- red(X).\nhard(X) :- clean(X).\ncurious(Z) :- weak(Z), clean(F).\nsad(Z) :- excited(Z), parent(Z,A), friendly(A).\nweak(Y) :- bored(Y), friend(Y,W), sad(W).\nowns(Y,Z) :- weak(Y), clean(Z), friendly(B).\nhard(Y) :- light(Y).\nowns(Y,Z) :- angry(Y), soft(Z), owns(Y,A).\nsibling(X,Y) :- angry(X), calm(Y), friend(X,Y).\nexcited(X) :- calm(X), hungry(X).\nnew(X) :- rough(X).\nweak(X) :- excited(X).\nlikes(X,Y) :- tall(X), clean(Y), dislikes(X,Y).\nbrave(X) :- busy(X), curious(X).\nbrave(X) :- friendly(X).\nold(pencil).\nowns(carol,apple).\nclean(apple).\nenemy(alice,carol).\nlikes(dave,pencil).\ntired(alice).\nsibling(george,alice).\ndislikes(dave,car).\ncurious(dave).\nowns(frank,ball).\nparent(frank,dave).\nfriend(bob,carol).\nparent(eve,frank).\nsibling(george,carol).\nlikes(carol,phone).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is clean, then object X is hard.\nFor all Z, if there exists F such that person Z is weak and object F is clean, then person Z is curious.\nFor all Z, if there exists A such that person Z is excited and person Z is a parent of person A and person A is friendly, then person Z is sad.\nFor all Y, if there exists W such that person Y is bored and person Y is a friend of person W and person W is sad, then person Y is weak.\nFor all Y, Z, if there exists B such that person Y is weak and object Z is clean and person B is friendly, then person Y owns object Z.\nFor all Y, if object Y is light, then object Y is hard.\nFor all Y, Z, if there exists A such that person Y is angry and object Z is soft and person Y owns object A, then person Y owns object Z.\nFor all X, Y, if person X is angry and person Y is calm and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if person X is calm and person X is hungry, then person X is excited.\nFor all X, if object X is rough, then object X is new.\nFor all X, if person X is excited, then person X is weak.\nFor all X, Y, if person X is tall and object Y is clean and person X dislikes object Y, then person X likes object Y.\nFor all X, if person X is busy and person X is curious, then person X is brave.\nFor all X, if person X is friendly, then person X is brave.\n\nAnd the following facts:\npencil is old.\ncarol owns apple.\napple is clean.\nalice is an enemy of carol.\ndave likes pencil.\nalice is tired.\ngeorge is a sibling of alice.\ndave dislikes car.\ndave is curious.\nfrank owns ball.\nfrank is a parent of dave.\nbob is a friend of carol.\neve is a parent of frank.\ngeorge is a sibling of carol.\ncarol likes phone.\ncarol owns book.\n\nQUESTION:\nCould pencil is red explain pencil is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 550,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(frank).",
    "c": "old(X) :- red(X).\nhard(X) :- clean(X).\ncurious(Z) :- weak(Z), clean(F).\nsad(Z) :- excited(Z), parent(Z,A), friendly(A).\nweak(Y) :- bored(Y), friend(Y,W), sad(W).\nowns(Y,Z) :- weak(Y), clean(Z), friendly(B).\nhard(Y) :- light(Y).\nowns(Y,Z) :- angry(Y), soft(Z), owns(Y,A).\nsibling(X,Y) :- angry(X), calm(Y), friend(X,Y).\nexcited(X) :- calm(X), hungry(X).\nnew(X) :- rough(X).\nweak(X) :- excited(X).\nlikes(X,Y) :- tall(X), clean(Y), dislikes(X,Y).\nbrave(X) :- busy(X), curious(X).\nbrave(X) :- friendly(X).\nold(pencil).\nowns(carol,apple).\nclean(apple).\nenemy(alice,carol).\nlikes(dave,pencil).\ntired(alice).\nsibling(george,alice).\ndislikes(dave,car).\ncurious(dave).\nowns(frank,ball).\nparent(frank,dave).\nfriend(bob,carol).\nparent(eve,frank).\nsibling(george,carol).\nlikes(carol,phone).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is clean, then object X is hard.\nFor all Z, if there exists F such that person Z is weak and object F is clean, then person Z is curious.\nFor all Z, if there exists A such that person Z is excited and person Z is a parent of person A and person A is friendly, then person Z is sad.\nFor all Y, if there exists W such that person Y is bored and person Y is a friend of person W and person W is sad, then person Y is weak.\nFor all Y, Z, if there exists B such that person Y is weak and object Z is clean and person B is friendly, then person Y owns object Z.\nFor all Y, if object Y is light, then object Y is hard.\nFor all Y, Z, if there exists A such that person Y is angry and object Z is soft and person Y owns object A, then person Y owns object Z.\nFor all X, Y, if person X is angry and person Y is calm and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if person X is calm and person X is hungry, then person X is excited.\nFor all X, if object X is rough, then object X is new.\nFor all X, if person X is excited, then person X is weak.\nFor all X, Y, if person X is tall and object Y is clean and person X dislikes object Y, then person X likes object Y.\nFor all X, if person X is busy and person X is curious, then person X is brave.\nFor all X, if person X is friendly, then person X is brave.\n\nAnd the following facts:\npencil is old.\ncarol owns apple.\napple is clean.\nalice is an enemy of carol.\ndave likes pencil.\nalice is tired.\ngeorge is a sibling of alice.\ndave dislikes car.\ndave is curious.\nfrank owns ball.\nfrank is a parent of dave.\nbob is a friend of carol.\neve is a parent of frank.\ngeorge is a sibling of carol.\ncarol likes phone.\ncarol owns book.\n\nQUESTION:\nCould frank is hungry explain pencil is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 551,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(ball).",
    "c": "smooth(X) :- hard(X).\nred(Y) :- wet(Y), likes(A,Y), angry(A).\nlikes(X,Z) :- soft(Z), curious(X), dislikes(V,Z).\ncurious(X) :- tall(X), likes(X,W), old(W).\nred(Y) :- red(Y), dislikes(V,Y), curious(V).\ncalm(Z) :- brave(Z).\nbig(Y) :- heavy(Y), owns(B,Y), curious(B).\nhungry(X) :- clever(X).\nexcited(X) :- angry(X).\nclever(X) :- tired(X), friendly(X).\nsoft(X) :- wet(X).\nbusy(X) :- angry(X).\nstrong(X) :- brave(X).\nfriend(X,Y) :- tall(X), calm(Y).\nsibling(X,Y) :- hungry(X), strong(Y).\nhard(ball).\nenemy(alice,carol).\nlikes(bob,apple).\nowns(dave,book).\nsmall(phone).\nparent(eve,carol).\nowns(alice,phone).\nfunny(dave).\nparent(alice,eve).\nrough(phone).\ndislikes(bob,pencil).\nclever(eve).\nweak(bob).\ndirty(phone).\nexcited(frank).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is smooth.\nFor all Y, if there exists A such that object Y is wet and person A likes object Y and person A is angry, then object Y is red.\nFor all X, Z, if there exists V such that object Z is soft and person X is curious and person V dislikes object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is tall and person X likes object W and object W is old, then person X is curious.\nFor all Y, if there exists V such that object Y is red and person V dislikes object Y and person V is curious, then object Y is red.\nFor all Z, if person Z is brave, then person Z is calm.\nFor all Y, if there exists B such that object Y is heavy and person B owns object Y and person B is curious, then object Y is big.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is tired and person X is friendly, then person X is clever.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is brave, then person X is strong.\nFor all X, Y, if person X is tall and person Y is calm, then person X is a friend of person Y.\nFor all X, Y, if person X is hungry and person Y is strong, then person X is a sibling of person Y.\n\nAnd the following facts:\nball is hard.\nalice is an enemy of carol.\nbob likes apple.\ndave owns book.\nphone is small.\neve is a parent of carol.\nalice owns phone.\ndave is funny.\nalice is a parent of eve.\nphone is rough.\nbob dislikes pencil.\neve is clever.\nbob is weak.\nphone is dirty.\nfrank is excited.\nbob is a parent of eve.\n\nQUESTION:\nIs ball is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 552,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "tall(alice).",
    "c": "smooth(X) :- hard(X).\nred(Y) :- wet(Y), likes(A,Y), angry(A).\nlikes(X,Z) :- soft(Z), curious(X), dislikes(V,Z).\ncurious(X) :- tall(X), likes(X,W), old(W).\nred(Y) :- red(Y), dislikes(V,Y), curious(V).\ncalm(Z) :- brave(Z).\nbig(Y) :- heavy(Y), owns(B,Y), curious(B).\nhungry(X) :- clever(X).\nexcited(X) :- angry(X).\nclever(X) :- tired(X), friendly(X).\nsoft(X) :- wet(X).\nbusy(X) :- angry(X).\nstrong(X) :- brave(X).\nfriend(X,Y) :- tall(X), calm(Y).\nsibling(X,Y) :- hungry(X), strong(Y).\nhard(ball).\nenemy(alice,carol).\nlikes(bob,apple).\nowns(dave,book).\nsmall(phone).\nparent(eve,carol).\nowns(alice,phone).\nfunny(dave).\nparent(alice,eve).\nrough(phone).\ndislikes(bob,pencil).\nclever(eve).\nweak(bob).\ndirty(phone).\nexcited(frank).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is smooth.\nFor all Y, if there exists A such that object Y is wet and person A likes object Y and person A is angry, then object Y is red.\nFor all X, Z, if there exists V such that object Z is soft and person X is curious and person V dislikes object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is tall and person X likes object W and object W is old, then person X is curious.\nFor all Y, if there exists V such that object Y is red and person V dislikes object Y and person V is curious, then object Y is red.\nFor all Z, if person Z is brave, then person Z is calm.\nFor all Y, if there exists B such that object Y is heavy and person B owns object Y and person B is curious, then object Y is big.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is tired and person X is friendly, then person X is clever.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is brave, then person X is strong.\nFor all X, Y, if person X is tall and person Y is calm, then person X is a friend of person Y.\nFor all X, Y, if person X is hungry and person Y is strong, then person X is a sibling of person Y.\n\nAnd the following facts:\nball is hard.\nalice is an enemy of carol.\nbob likes apple.\ndave owns book.\nphone is small.\neve is a parent of carol.\nalice owns phone.\ndave is funny.\nalice is a parent of eve.\nphone is rough.\nbob dislikes pencil.\neve is clever.\nbob is weak.\nphone is dirty.\nfrank is excited.\nbob is a parent of eve.\n\nQUESTION:\nIs alice is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 553,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(ball).",
    "c": "smooth(X) :- hard(X).\nred(Y) :- wet(Y), likes(A,Y), angry(A).\nlikes(X,Z) :- soft(Z), curious(X), dislikes(V,Z).\ncurious(X) :- tall(X), likes(X,W), old(W).\nred(Y) :- red(Y), dislikes(V,Y), curious(V).\ncalm(Z) :- brave(Z).\nbig(Y) :- heavy(Y), owns(B,Y), curious(B).\nhungry(X) :- clever(X).\nexcited(X) :- angry(X).\nclever(X) :- tired(X), friendly(X).\nsoft(X) :- wet(X).\nbusy(X) :- angry(X).\nstrong(X) :- brave(X).\nfriend(X,Y) :- tall(X), calm(Y).\nsibling(X,Y) :- hungry(X), strong(Y).\nsmooth(ball).\nenemy(alice,carol).\nlikes(bob,apple).\nowns(dave,book).\nsmall(phone).\nparent(eve,carol).\nowns(alice,phone).\nfunny(dave).\nparent(alice,eve).\nrough(phone).\ndislikes(bob,pencil).\nclever(eve).\nweak(bob).\ndirty(phone).\nexcited(frank).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is smooth.\nFor all Y, if there exists A such that object Y is wet and person A likes object Y and person A is angry, then object Y is red.\nFor all X, Z, if there exists V such that object Z is soft and person X is curious and person V dislikes object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is tall and person X likes object W and object W is old, then person X is curious.\nFor all Y, if there exists V such that object Y is red and person V dislikes object Y and person V is curious, then object Y is red.\nFor all Z, if person Z is brave, then person Z is calm.\nFor all Y, if there exists B such that object Y is heavy and person B owns object Y and person B is curious, then object Y is big.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is tired and person X is friendly, then person X is clever.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is brave, then person X is strong.\nFor all X, Y, if person X is tall and person Y is calm, then person X is a friend of person Y.\nFor all X, Y, if person X is hungry and person Y is strong, then person X is a sibling of person Y.\n\nAnd the following facts:\nball is smooth.\nalice is an enemy of carol.\nbob likes apple.\ndave owns book.\nphone is small.\neve is a parent of carol.\nalice owns phone.\ndave is funny.\nalice is a parent of eve.\nphone is rough.\nbob dislikes pencil.\neve is clever.\nbob is weak.\nphone is dirty.\nfrank is excited.\nbob is a parent of eve.\n\nQUESTION:\nCould ball is hard explain ball is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 554,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "smooth(X) :- hard(X).\nred(Y) :- wet(Y), likes(A,Y), angry(A).\nlikes(X,Z) :- soft(Z), curious(X), dislikes(V,Z).\ncurious(X) :- tall(X), likes(X,W), old(W).\nred(Y) :- red(Y), dislikes(V,Y), curious(V).\ncalm(Z) :- brave(Z).\nbig(Y) :- heavy(Y), owns(B,Y), curious(B).\nhungry(X) :- clever(X).\nexcited(X) :- angry(X).\nclever(X) :- tired(X), friendly(X).\nsoft(X) :- wet(X).\nbusy(X) :- angry(X).\nstrong(X) :- brave(X).\nfriend(X,Y) :- tall(X), calm(Y).\nsibling(X,Y) :- hungry(X), strong(Y).\nsmooth(ball).\nenemy(alice,carol).\nlikes(bob,apple).\nowns(dave,book).\nsmall(phone).\nparent(eve,carol).\nowns(alice,phone).\nfunny(dave).\nparent(alice,eve).\nrough(phone).\ndislikes(bob,pencil).\nclever(eve).\nweak(bob).\ndirty(phone).\nexcited(frank).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is smooth.\nFor all Y, if there exists A such that object Y is wet and person A likes object Y and person A is angry, then object Y is red.\nFor all X, Z, if there exists V such that object Z is soft and person X is curious and person V dislikes object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is tall and person X likes object W and object W is old, then person X is curious.\nFor all Y, if there exists V such that object Y is red and person V dislikes object Y and person V is curious, then object Y is red.\nFor all Z, if person Z is brave, then person Z is calm.\nFor all Y, if there exists B such that object Y is heavy and person B owns object Y and person B is curious, then object Y is big.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is tired and person X is friendly, then person X is clever.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is brave, then person X is strong.\nFor all X, Y, if person X is tall and person Y is calm, then person X is a friend of person Y.\nFor all X, Y, if person X is hungry and person Y is strong, then person X is a sibling of person Y.\n\nAnd the following facts:\nball is smooth.\nalice is an enemy of carol.\nbob likes apple.\ndave owns book.\nphone is small.\neve is a parent of carol.\nalice owns phone.\ndave is funny.\nalice is a parent of eve.\nphone is rough.\nbob dislikes pencil.\neve is clever.\nbob is weak.\nphone is dirty.\nfrank is excited.\nbob is a parent of eve.\n\nQUESTION:\nCould book is small explain ball is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 555,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "brave(X) :- calm(X).\nbig(Y) :- rough(Y), clean(D).\nwet(X) :- small(X).\nnew(Y) :- dirty(Y), owns(U,Y), sad(U).\nfunny(X) :- weak(X), weak(A).\nlikes(X,Z) :- big(Z), strong(X), owns(V,Z).\ntired(X) :- curious(X), parent(X,W), angry(W).\nweak(X) :- busy(X), busy(X).\nclever(X) :- sad(X), excited(X).\ncurious(X) :- happy(X).\nlikes(X,Y) :- strong(X), big(Y), owns(X,Y).\ndislikes(X,Y) :- happy(X), hard(Y).\nexcited(X) :- sad(X), sad(X).\nangry(X) :- friendly(X).\nsoft(X) :- big(X).\ncalm(eve).\nowns(alice,book).\ndislikes(bob,phone).\nangry(frank).\ndislikes(dave,phone).\nfriend(george,carol).\nsibling(alice,george).\nparent(alice,dave).\nparent(carol,eve).\nsibling(bob,eve).\nnew(car).\nfriend(dave,eve).\nparent(carol,alice).\nsoft(phone).\ndislikes(dave,pencil).\nbored(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is brave.\nFor all Y, if there exists D such that object Y is rough and object D is clean, then object Y is big.\nFor all X, if object X is small, then object X is wet.\nFor all Y, if there exists U such that object Y is dirty and person U owns object Y and person U is sad, then object Y is new.\nFor all X, if there exists A such that person X is weak and person A is weak, then person X is funny.\nFor all X, Z, if there exists V such that object Z is big and person X is strong and person V owns object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is curious and person X is a parent of person W and person W is angry, then person X is tired.\nFor all X, if person X is busy and person X is busy, then person X is weak.\nFor all X, if person X is sad and person X is excited, then person X is clever.\nFor all X, if person X is happy, then person X is curious.\nFor all X, Y, if person X is strong and object Y is big and person X owns object Y, then person X likes object Y.\nFor all X, Y, if person X is happy and object Y is hard, then person X dislikes object Y.\nFor all X, if person X is sad and person X is sad, then person X is excited.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if object X is big, then object X is soft.\n\nAnd the following facts:\neve is calm.\nalice owns book.\nbob dislikes phone.\nfrank is angry.\ndave dislikes phone.\ngeorge is a friend of carol.\nalice is a sibling of george.\nalice is a parent of dave.\ncarol is a parent of eve.\nbob is a sibling of eve.\ncar is new.\ndave is a friend of eve.\ncarol is a parent of alice.\nphone is soft.\ndave dislikes pencil.\neve is bored.\n\nQUESTION:\nIs eve is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 556,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(carol).",
    "c": "brave(X) :- calm(X).\nbig(Y) :- rough(Y), clean(D).\nwet(X) :- small(X).\nnew(Y) :- dirty(Y), owns(U,Y), sad(U).\nfunny(X) :- weak(X), weak(A).\nlikes(X,Z) :- big(Z), strong(X), owns(V,Z).\ntired(X) :- curious(X), parent(X,W), angry(W).\nweak(X) :- busy(X), busy(X).\nclever(X) :- sad(X), excited(X).\ncurious(X) :- happy(X).\nlikes(X,Y) :- strong(X), big(Y), owns(X,Y).\ndislikes(X,Y) :- happy(X), hard(Y).\nexcited(X) :- sad(X), sad(X).\nangry(X) :- friendly(X).\nsoft(X) :- big(X).\ncalm(eve).\nowns(alice,book).\ndislikes(bob,phone).\nangry(frank).\ndislikes(dave,phone).\nfriend(george,carol).\nsibling(alice,george).\nparent(alice,dave).\nparent(carol,eve).\nsibling(bob,eve).\nnew(car).\nfriend(dave,eve).\nparent(carol,alice).\nsoft(phone).\ndislikes(dave,pencil).\nbored(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is brave.\nFor all Y, if there exists D such that object Y is rough and object D is clean, then object Y is big.\nFor all X, if object X is small, then object X is wet.\nFor all Y, if there exists U such that object Y is dirty and person U owns object Y and person U is sad, then object Y is new.\nFor all X, if there exists A such that person X is weak and person A is weak, then person X is funny.\nFor all X, Z, if there exists V such that object Z is big and person X is strong and person V owns object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is curious and person X is a parent of person W and person W is angry, then person X is tired.\nFor all X, if person X is busy and person X is busy, then person X is weak.\nFor all X, if person X is sad and person X is excited, then person X is clever.\nFor all X, if person X is happy, then person X is curious.\nFor all X, Y, if person X is strong and object Y is big and person X owns object Y, then person X likes object Y.\nFor all X, Y, if person X is happy and object Y is hard, then person X dislikes object Y.\nFor all X, if person X is sad and person X is sad, then person X is excited.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if object X is big, then object X is soft.\n\nAnd the following facts:\neve is calm.\nalice owns book.\nbob dislikes phone.\nfrank is angry.\ndave dislikes phone.\ngeorge is a friend of carol.\nalice is a sibling of george.\nalice is a parent of dave.\ncarol is a parent of eve.\nbob is a sibling of eve.\ncar is new.\ndave is a friend of eve.\ncarol is a parent of alice.\nphone is soft.\ndave dislikes pencil.\neve is bored.\n\nQUESTION:\nIs carol is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 557,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(eve).",
    "c": "brave(X) :- calm(X).\nbig(Y) :- rough(Y), clean(D).\nwet(X) :- small(X).\nnew(Y) :- dirty(Y), owns(U,Y), sad(U).\nfunny(X) :- weak(X), weak(A).\nlikes(X,Z) :- big(Z), strong(X), owns(V,Z).\ntired(X) :- curious(X), parent(X,W), angry(W).\nweak(X) :- busy(X), busy(X).\nclever(X) :- sad(X), excited(X).\ncurious(X) :- happy(X).\nlikes(X,Y) :- strong(X), big(Y), owns(X,Y).\ndislikes(X,Y) :- happy(X), hard(Y).\nexcited(X) :- sad(X), sad(X).\nangry(X) :- friendly(X).\nsoft(X) :- big(X).\nbrave(eve).\nowns(alice,book).\ndislikes(bob,phone).\nangry(frank).\ndislikes(dave,phone).\nfriend(george,carol).\nsibling(alice,george).\nparent(alice,dave).\nparent(carol,eve).\nsibling(bob,eve).\nnew(car).\nfriend(dave,eve).\nparent(carol,alice).\nsoft(phone).\ndislikes(dave,pencil).\nbored(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is brave.\nFor all Y, if there exists D such that object Y is rough and object D is clean, then object Y is big.\nFor all X, if object X is small, then object X is wet.\nFor all Y, if there exists U such that object Y is dirty and person U owns object Y and person U is sad, then object Y is new.\nFor all X, if there exists A such that person X is weak and person A is weak, then person X is funny.\nFor all X, Z, if there exists V such that object Z is big and person X is strong and person V owns object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is curious and person X is a parent of person W and person W is angry, then person X is tired.\nFor all X, if person X is busy and person X is busy, then person X is weak.\nFor all X, if person X is sad and person X is excited, then person X is clever.\nFor all X, if person X is happy, then person X is curious.\nFor all X, Y, if person X is strong and object Y is big and person X owns object Y, then person X likes object Y.\nFor all X, Y, if person X is happy and object Y is hard, then person X dislikes object Y.\nFor all X, if person X is sad and person X is sad, then person X is excited.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if object X is big, then object X is soft.\n\nAnd the following facts:\neve is brave.\nalice owns book.\nbob dislikes phone.\nfrank is angry.\ndave dislikes phone.\ngeorge is a friend of carol.\nalice is a sibling of george.\nalice is a parent of dave.\ncarol is a parent of eve.\nbob is a sibling of eve.\ncar is new.\ndave is a friend of eve.\ncarol is a parent of alice.\nphone is soft.\ndave dislikes pencil.\neve is bored.\n\nQUESTION:\nCould eve is calm explain eve is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 558,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(alice).",
    "c": "brave(X) :- calm(X).\nbig(Y) :- rough(Y), clean(D).\nwet(X) :- small(X).\nnew(Y) :- dirty(Y), owns(U,Y), sad(U).\nfunny(X) :- weak(X), weak(A).\nlikes(X,Z) :- big(Z), strong(X), owns(V,Z).\ntired(X) :- curious(X), parent(X,W), angry(W).\nweak(X) :- busy(X), busy(X).\nclever(X) :- sad(X), excited(X).\ncurious(X) :- happy(X).\nlikes(X,Y) :- strong(X), big(Y), owns(X,Y).\ndislikes(X,Y) :- happy(X), hard(Y).\nexcited(X) :- sad(X), sad(X).\nangry(X) :- friendly(X).\nsoft(X) :- big(X).\nbrave(eve).\nowns(alice,book).\ndislikes(bob,phone).\nangry(frank).\ndislikes(dave,phone).\nfriend(george,carol).\nsibling(alice,george).\nparent(alice,dave).\nparent(carol,eve).\nsibling(bob,eve).\nnew(car).\nfriend(dave,eve).\nparent(carol,alice).\nsoft(phone).\ndislikes(dave,pencil).\nbored(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is brave.\nFor all Y, if there exists D such that object Y is rough and object D is clean, then object Y is big.\nFor all X, if object X is small, then object X is wet.\nFor all Y, if there exists U such that object Y is dirty and person U owns object Y and person U is sad, then object Y is new.\nFor all X, if there exists A such that person X is weak and person A is weak, then person X is funny.\nFor all X, Z, if there exists V such that object Z is big and person X is strong and person V owns object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is curious and person X is a parent of person W and person W is angry, then person X is tired.\nFor all X, if person X is busy and person X is busy, then person X is weak.\nFor all X, if person X is sad and person X is excited, then person X is clever.\nFor all X, if person X is happy, then person X is curious.\nFor all X, Y, if person X is strong and object Y is big and person X owns object Y, then person X likes object Y.\nFor all X, Y, if person X is happy and object Y is hard, then person X dislikes object Y.\nFor all X, if person X is sad and person X is sad, then person X is excited.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if object X is big, then object X is soft.\n\nAnd the following facts:\neve is brave.\nalice owns book.\nbob dislikes phone.\nfrank is angry.\ndave dislikes phone.\ngeorge is a friend of carol.\nalice is a sibling of george.\nalice is a parent of dave.\ncarol is a parent of eve.\nbob is a sibling of eve.\ncar is new.\ndave is a friend of eve.\ncarol is a parent of alice.\nphone is soft.\ndave dislikes pencil.\neve is bored.\n\nQUESTION:\nCould alice is hungry explain eve is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 559,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "wet(ball).",
    "c": "hard(X) :- smooth(X).\nold(X) :- hard(X).\nsmall(X) :- old(X).\nrough(X) :- small(X).\nwet(X) :- rough(X).\nbig(Y) :- red(Y).\nstrong(Z) :- tired(Z), enemy(Z,B), angry(B).\nbig(Z) :- dirty(Z).\nsoft(X) :- soft(X), dirty(F).\nbored(Y) :- busy(Y), new(E).\nhappy(Y) :- friendly(Y), enemy(Y,W), angry(W).\ncalm(X) :- curious(X).\nred(X) :- new(X), soft(X).\nhungry(X) :- angry(X).\nparent(X,Y) :- curious(X), friendly(Y).\nsmooth(ball).\ndislikes(carol,phone).\nfriend(dave,bob).\nsibling(dave,george).\nfriendly(eve).\nsad(frank).\nowns(eve,phone).\nbusy(dave).\nfriend(frank,george).\nfriend(bob,dave).\nenemy(frank,carol).\nangry(carol).\nlikes(george,apple).\nenemy(alice,frank).\nlight(book).\nfriend(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all Y, if object Y is red, then object Y is big.\nFor all Z, if there exists B such that person Z is tired and person Z is an enemy of person B and person B is angry, then person Z is strong.\nFor all Z, if object Z is dirty, then object Z is big.\nFor all X, if there exists F such that object X is soft and object F is dirty, then object X is soft.\nFor all Y, if there exists E such that person Y is busy and object E is new, then person Y is bored.\nFor all Y, if there exists W such that person Y is friendly and person Y is an enemy of person W and person W is angry, then person Y is happy.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if object X is new and object X is soft, then object X is red.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, Y, if person X is curious and person Y is friendly, then person X is a parent of person Y.\n\nAnd the following facts:\nball is smooth.\ncarol dislikes phone.\ndave is a friend of bob.\ndave is a sibling of george.\neve is friendly.\nfrank is sad.\neve owns phone.\ndave is busy.\nfrank is a friend of george.\nbob is a friend of dave.\nfrank is an enemy of carol.\ncarol is angry.\ngeorge likes apple.\nalice is an enemy of frank.\nbook is light.\ndave is a friend of eve.\n\nQUESTION:\nIs ball is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 560,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "red(phone).",
    "c": "hard(X) :- smooth(X).\nold(X) :- hard(X).\nsmall(X) :- old(X).\nrough(X) :- small(X).\nwet(X) :- rough(X).\nbig(Y) :- red(Y).\nstrong(Z) :- tired(Z), enemy(Z,B), angry(B).\nbig(Z) :- dirty(Z).\nsoft(X) :- soft(X), dirty(F).\nbored(Y) :- busy(Y), new(E).\nhappy(Y) :- friendly(Y), enemy(Y,W), angry(W).\ncalm(X) :- curious(X).\nred(X) :- new(X), soft(X).\nhungry(X) :- angry(X).\nparent(X,Y) :- curious(X), friendly(Y).\nsmooth(ball).\ndislikes(carol,phone).\nfriend(dave,bob).\nsibling(dave,george).\nfriendly(eve).\nsad(frank).\nowns(eve,phone).\nbusy(dave).\nfriend(frank,george).\nfriend(bob,dave).\nenemy(frank,carol).\nangry(carol).\nlikes(george,apple).\nenemy(alice,frank).\nlight(book).\nfriend(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all Y, if object Y is red, then object Y is big.\nFor all Z, if there exists B such that person Z is tired and person Z is an enemy of person B and person B is angry, then person Z is strong.\nFor all Z, if object Z is dirty, then object Z is big.\nFor all X, if there exists F such that object X is soft and object F is dirty, then object X is soft.\nFor all Y, if there exists E such that person Y is busy and object E is new, then person Y is bored.\nFor all Y, if there exists W such that person Y is friendly and person Y is an enemy of person W and person W is angry, then person Y is happy.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if object X is new and object X is soft, then object X is red.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, Y, if person X is curious and person Y is friendly, then person X is a parent of person Y.\n\nAnd the following facts:\nball is smooth.\ncarol dislikes phone.\ndave is a friend of bob.\ndave is a sibling of george.\neve is friendly.\nfrank is sad.\neve owns phone.\ndave is busy.\nfrank is a friend of george.\nbob is a friend of dave.\nfrank is an enemy of carol.\ncarol is angry.\ngeorge likes apple.\nalice is an enemy of frank.\nbook is light.\ndave is a friend of eve.\n\nQUESTION:\nIs phone is red true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 561,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(ball).",
    "c": "hard(X) :- smooth(X).\nold(X) :- hard(X).\nsmall(X) :- old(X).\nrough(X) :- small(X).\nwet(X) :- rough(X).\nbig(Y) :- red(Y).\nstrong(Z) :- tired(Z), enemy(Z,B), angry(B).\nbig(Z) :- dirty(Z).\nsoft(X) :- soft(X), dirty(F).\nbored(Y) :- busy(Y), new(E).\nhappy(Y) :- friendly(Y), enemy(Y,W), angry(W).\ncalm(X) :- curious(X).\nred(X) :- new(X), soft(X).\nhungry(X) :- angry(X).\nparent(X,Y) :- curious(X), friendly(Y).\nwet(ball).\ndislikes(carol,phone).\nfriend(dave,bob).\nsibling(dave,george).\nfriendly(eve).\nsad(frank).\nowns(eve,phone).\nbusy(dave).\nfriend(frank,george).\nfriend(bob,dave).\nenemy(frank,carol).\nangry(carol).\nlikes(george,apple).\nenemy(alice,frank).\nlight(book).\nfriend(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all Y, if object Y is red, then object Y is big.\nFor all Z, if there exists B such that person Z is tired and person Z is an enemy of person B and person B is angry, then person Z is strong.\nFor all Z, if object Z is dirty, then object Z is big.\nFor all X, if there exists F such that object X is soft and object F is dirty, then object X is soft.\nFor all Y, if there exists E such that person Y is busy and object E is new, then person Y is bored.\nFor all Y, if there exists W such that person Y is friendly and person Y is an enemy of person W and person W is angry, then person Y is happy.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if object X is new and object X is soft, then object X is red.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, Y, if person X is curious and person Y is friendly, then person X is a parent of person Y.\n\nAnd the following facts:\nball is wet.\ncarol dislikes phone.\ndave is a friend of bob.\ndave is a sibling of george.\neve is friendly.\nfrank is sad.\neve owns phone.\ndave is busy.\nfrank is a friend of george.\nbob is a friend of dave.\nfrank is an enemy of carol.\ncarol is angry.\ngeorge likes apple.\nalice is an enemy of frank.\nbook is light.\ndave is a friend of eve.\n\nQUESTION:\nCould ball is smooth explain ball is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 562,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(alice).",
    "c": "hard(X) :- smooth(X).\nold(X) :- hard(X).\nsmall(X) :- old(X).\nrough(X) :- small(X).\nwet(X) :- rough(X).\nbig(Y) :- red(Y).\nstrong(Z) :- tired(Z), enemy(Z,B), angry(B).\nbig(Z) :- dirty(Z).\nsoft(X) :- soft(X), dirty(F).\nbored(Y) :- busy(Y), new(E).\nhappy(Y) :- friendly(Y), enemy(Y,W), angry(W).\ncalm(X) :- curious(X).\nred(X) :- new(X), soft(X).\nhungry(X) :- angry(X).\nparent(X,Y) :- curious(X), friendly(Y).\nwet(ball).\ndislikes(carol,phone).\nfriend(dave,bob).\nsibling(dave,george).\nfriendly(eve).\nsad(frank).\nowns(eve,phone).\nbusy(dave).\nfriend(frank,george).\nfriend(bob,dave).\nenemy(frank,carol).\nangry(carol).\nlikes(george,apple).\nenemy(alice,frank).\nlight(book).\nfriend(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all Y, if object Y is red, then object Y is big.\nFor all Z, if there exists B such that person Z is tired and person Z is an enemy of person B and person B is angry, then person Z is strong.\nFor all Z, if object Z is dirty, then object Z is big.\nFor all X, if there exists F such that object X is soft and object F is dirty, then object X is soft.\nFor all Y, if there exists E such that person Y is busy and object E is new, then person Y is bored.\nFor all Y, if there exists W such that person Y is friendly and person Y is an enemy of person W and person W is angry, then person Y is happy.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if object X is new and object X is soft, then object X is red.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, Y, if person X is curious and person Y is friendly, then person X is a parent of person Y.\n\nAnd the following facts:\nball is wet.\ncarol dislikes phone.\ndave is a friend of bob.\ndave is a sibling of george.\neve is friendly.\nfrank is sad.\neve owns phone.\ndave is busy.\nfrank is a friend of george.\nbob is a friend of dave.\nfrank is an enemy of carol.\ncarol is angry.\ngeorge likes apple.\nalice is an enemy of frank.\nbook is light.\ndave is a friend of eve.\n\nQUESTION:\nCould alice is excited explain ball is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 563,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(carol).",
    "c": "happy(X) :- hungry(X).\nexcited(X) :- happy(X).\nfriendly(X) :- excited(X).\ncalm(X) :- friendly(X).\nclever(X) :- calm(X).\ndislikes(X,Y) :- light(Y), busy(X), sad(B).\nparent(Y,X) :- tall(Y), funny(X), sibling(X,V).\nbusy(Z) :- curious(Z).\nsoft(X) :- clean(X), owns(U,X), weak(U).\ncurious(Z) :- sad(Z), dislikes(Z,U), dirty(U).\nweak(X) :- curious(X).\ntall(X) :- funny(X).\nbusy(X) :- bored(X).\nsmooth(X) :- red(X).\nbusy(X) :- angry(X).\nhungry(carol).\nbored(eve).\nsibling(dave,eve).\ndislikes(eve,ball).\nsibling(frank,alice).\nlikes(eve,pencil).\ntired(alice).\nlikes(carol,pencil).\nfriend(bob,dave).\nsoft(phone).\nfunny(bob).\nparent(bob,carol).\nrough(pencil).\nlikes(bob,book).\nowns(dave,car).\nowns(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is clever.\nFor all X, Y, if there exists B such that object Y is light and person X is busy and person B is sad, then person X dislikes object Y.\nFor all X, Y, if there exists V such that person Y is tall and person X is funny and person X is a sibling of person V, then person Y is a parent of person X.\nFor all Z, if person Z is curious, then person Z is busy.\nFor all X, if there exists U such that object X is clean and person U owns object X and person U is weak, then object X is soft.\nFor all Z, if there exists U such that person Z is sad and person Z dislikes object U and object U is dirty, then person Z is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if person X is angry, then person X is busy.\n\nAnd the following facts:\ncarol is hungry.\neve is bored.\ndave is a sibling of eve.\neve dislikes ball.\nfrank is a sibling of alice.\neve likes pencil.\nalice is tired.\ncarol likes pencil.\nbob is a friend of dave.\nphone is soft.\nbob is funny.\nbob is a parent of carol.\npencil is rough.\nbob likes book.\ndave owns car.\ndave owns book.\n\nQUESTION:\nIs carol is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 564,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(george).",
    "c": "happy(X) :- hungry(X).\nexcited(X) :- happy(X).\nfriendly(X) :- excited(X).\ncalm(X) :- friendly(X).\nclever(X) :- calm(X).\ndislikes(X,Y) :- light(Y), busy(X), sad(B).\nparent(Y,X) :- tall(Y), funny(X), sibling(X,V).\nbusy(Z) :- curious(Z).\nsoft(X) :- clean(X), owns(U,X), weak(U).\ncurious(Z) :- sad(Z), dislikes(Z,U), dirty(U).\nweak(X) :- curious(X).\ntall(X) :- funny(X).\nbusy(X) :- bored(X).\nsmooth(X) :- red(X).\nbusy(X) :- angry(X).\nhungry(carol).\nbored(eve).\nsibling(dave,eve).\ndislikes(eve,ball).\nsibling(frank,alice).\nlikes(eve,pencil).\ntired(alice).\nlikes(carol,pencil).\nfriend(bob,dave).\nsoft(phone).\nfunny(bob).\nparent(bob,carol).\nrough(pencil).\nlikes(bob,book).\nowns(dave,car).\nowns(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is clever.\nFor all X, Y, if there exists B such that object Y is light and person X is busy and person B is sad, then person X dislikes object Y.\nFor all X, Y, if there exists V such that person Y is tall and person X is funny and person X is a sibling of person V, then person Y is a parent of person X.\nFor all Z, if person Z is curious, then person Z is busy.\nFor all X, if there exists U such that object X is clean and person U owns object X and person U is weak, then object X is soft.\nFor all Z, if there exists U such that person Z is sad and person Z dislikes object U and object U is dirty, then person Z is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if person X is angry, then person X is busy.\n\nAnd the following facts:\ncarol is hungry.\neve is bored.\ndave is a sibling of eve.\neve dislikes ball.\nfrank is a sibling of alice.\neve likes pencil.\nalice is tired.\ncarol likes pencil.\nbob is a friend of dave.\nphone is soft.\nbob is funny.\nbob is a parent of carol.\npencil is rough.\nbob likes book.\ndave owns car.\ndave owns book.\n\nQUESTION:\nIs george is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 565,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(carol).",
    "c": "happy(X) :- hungry(X).\nexcited(X) :- happy(X).\nfriendly(X) :- excited(X).\ncalm(X) :- friendly(X).\nclever(X) :- calm(X).\ndislikes(X,Y) :- light(Y), busy(X), sad(B).\nparent(Y,X) :- tall(Y), funny(X), sibling(X,V).\nbusy(Z) :- curious(Z).\nsoft(X) :- clean(X), owns(U,X), weak(U).\ncurious(Z) :- sad(Z), dislikes(Z,U), dirty(U).\nweak(X) :- curious(X).\ntall(X) :- funny(X).\nbusy(X) :- bored(X).\nsmooth(X) :- red(X).\nbusy(X) :- angry(X).\nclever(carol).\nbored(eve).\nsibling(dave,eve).\ndislikes(eve,ball).\nsibling(frank,alice).\nlikes(eve,pencil).\ntired(alice).\nlikes(carol,pencil).\nfriend(bob,dave).\nsoft(phone).\nfunny(bob).\nparent(bob,carol).\nrough(pencil).\nlikes(bob,book).\nowns(dave,car).\nowns(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is clever.\nFor all X, Y, if there exists B such that object Y is light and person X is busy and person B is sad, then person X dislikes object Y.\nFor all X, Y, if there exists V such that person Y is tall and person X is funny and person X is a sibling of person V, then person Y is a parent of person X.\nFor all Z, if person Z is curious, then person Z is busy.\nFor all X, if there exists U such that object X is clean and person U owns object X and person U is weak, then object X is soft.\nFor all Z, if there exists U such that person Z is sad and person Z dislikes object U and object U is dirty, then person Z is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if person X is angry, then person X is busy.\n\nAnd the following facts:\ncarol is clever.\neve is bored.\ndave is a sibling of eve.\neve dislikes ball.\nfrank is a sibling of alice.\neve likes pencil.\nalice is tired.\ncarol likes pencil.\nbob is a friend of dave.\nphone is soft.\nbob is funny.\nbob is a parent of carol.\npencil is rough.\nbob likes book.\ndave owns car.\ndave owns book.\n\nQUESTION:\nCould carol is hungry explain carol is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 566,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(carol).",
    "c": "happy(X) :- hungry(X).\nexcited(X) :- happy(X).\nfriendly(X) :- excited(X).\ncalm(X) :- friendly(X).\nclever(X) :- calm(X).\ndislikes(X,Y) :- light(Y), busy(X), sad(B).\nparent(Y,X) :- tall(Y), funny(X), sibling(X,V).\nbusy(Z) :- curious(Z).\nsoft(X) :- clean(X), owns(U,X), weak(U).\ncurious(Z) :- sad(Z), dislikes(Z,U), dirty(U).\nweak(X) :- curious(X).\ntall(X) :- funny(X).\nbusy(X) :- bored(X).\nsmooth(X) :- red(X).\nbusy(X) :- angry(X).\nclever(carol).\nbored(eve).\nsibling(dave,eve).\ndislikes(eve,ball).\nsibling(frank,alice).\nlikes(eve,pencil).\ntired(alice).\nlikes(carol,pencil).\nfriend(bob,dave).\nsoft(phone).\nfunny(bob).\nparent(bob,carol).\nrough(pencil).\nlikes(bob,book).\nowns(dave,car).\nowns(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is clever.\nFor all X, Y, if there exists B such that object Y is light and person X is busy and person B is sad, then person X dislikes object Y.\nFor all X, Y, if there exists V such that person Y is tall and person X is funny and person X is a sibling of person V, then person Y is a parent of person X.\nFor all Z, if person Z is curious, then person Z is busy.\nFor all X, if there exists U such that object X is clean and person U owns object X and person U is weak, then object X is soft.\nFor all Z, if there exists U such that person Z is sad and person Z dislikes object U and object U is dirty, then person Z is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is funny, then person X is tall.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if person X is angry, then person X is busy.\n\nAnd the following facts:\ncarol is clever.\neve is bored.\ndave is a sibling of eve.\neve dislikes ball.\nfrank is a sibling of alice.\neve likes pencil.\nalice is tired.\ncarol likes pencil.\nbob is a friend of dave.\nphone is soft.\nbob is funny.\nbob is a parent of carol.\npencil is rough.\nbob likes book.\ndave owns car.\ndave owns book.\n\nQUESTION:\nCould carol is curious explain carol is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 567,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(dave).",
    "c": "weak(X) :- friendly(X).\nbusy(X) :- weak(X).\nbored(X) :- busy(X).\nhungry(X) :- bored(X).\ntired(X) :- hungry(X).\nrough(Y) :- rough(Y), dislikes(W,Y), funny(W).\nsad(Y) :- clever(Y), friend(Y,B), strong(B).\nhard(Y) :- wet(Y), owns(W,Y), sad(W).\ntall(Z) :- curious(Z).\ndislikes(X,Z) :- hard(Z), strong(X), angry(A).\nnew(X) :- dirty(X), hard(X).\nhard(X) :- small(X).\nsoft(X) :- clean(X).\nsibling(X,Y) :- sad(X), strong(Y).\nfriend(X,Y) :- happy(X), tall(Y).\nfriendly(dave).\nfriend(bob,eve).\nsmall(car).\nclean(book).\nwet(book).\nenemy(bob,carol).\nsibling(george,dave).\nstrong(dave).\nfriend(dave,carol).\nbrave(george).\nsmall(book).\nfriend(bob,alice).\nbrave(frank).\nsibling(george,alice).\nsibling(dave,george).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all Y, if there exists W such that object Y is rough and person W dislikes object Y and person W is funny, then object Y is rough.\nFor all Y, if there exists B such that person Y is clever and person Y is a friend of person B and person B is strong, then person Y is sad.\nFor all Y, if there exists W such that object Y is wet and person W owns object Y and person W is sad, then object Y is hard.\nFor all Z, if person Z is curious, then person Z is tall.\nFor all X, Z, if there exists A such that object Z is hard and person X is strong and person A is angry, then person X dislikes object Z.\nFor all X, if object X is dirty and object X is hard, then object X is new.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is clean, then object X is soft.\nFor all X, Y, if person X is sad and person Y is strong, then person X is a sibling of person Y.\nFor all X, Y, if person X is happy and person Y is tall, then person X is a friend of person Y.\n\nAnd the following facts:\ndave is friendly.\nbob is a friend of eve.\ncar is small.\nbook is clean.\nbook is wet.\nbob is an enemy of carol.\ngeorge is a sibling of dave.\ndave is strong.\ndave is a friend of carol.\ngeorge is brave.\nbook is small.\nbob is a friend of alice.\nfrank is brave.\ngeorge is a sibling of alice.\ndave is a sibling of george.\neve dislikes apple.\n\nQUESTION:\nIs dave is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 568,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(frank).",
    "c": "weak(X) :- friendly(X).\nbusy(X) :- weak(X).\nbored(X) :- busy(X).\nhungry(X) :- bored(X).\ntired(X) :- hungry(X).\nrough(Y) :- rough(Y), dislikes(W,Y), funny(W).\nsad(Y) :- clever(Y), friend(Y,B), strong(B).\nhard(Y) :- wet(Y), owns(W,Y), sad(W).\ntall(Z) :- curious(Z).\ndislikes(X,Z) :- hard(Z), strong(X), angry(A).\nnew(X) :- dirty(X), hard(X).\nhard(X) :- small(X).\nsoft(X) :- clean(X).\nsibling(X,Y) :- sad(X), strong(Y).\nfriend(X,Y) :- happy(X), tall(Y).\nfriendly(dave).\nfriend(bob,eve).\nsmall(car).\nclean(book).\nwet(book).\nenemy(bob,carol).\nsibling(george,dave).\nstrong(dave).\nfriend(dave,carol).\nbrave(george).\nsmall(book).\nfriend(bob,alice).\nbrave(frank).\nsibling(george,alice).\nsibling(dave,george).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all Y, if there exists W such that object Y is rough and person W dislikes object Y and person W is funny, then object Y is rough.\nFor all Y, if there exists B such that person Y is clever and person Y is a friend of person B and person B is strong, then person Y is sad.\nFor all Y, if there exists W such that object Y is wet and person W owns object Y and person W is sad, then object Y is hard.\nFor all Z, if person Z is curious, then person Z is tall.\nFor all X, Z, if there exists A such that object Z is hard and person X is strong and person A is angry, then person X dislikes object Z.\nFor all X, if object X is dirty and object X is hard, then object X is new.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is clean, then object X is soft.\nFor all X, Y, if person X is sad and person Y is strong, then person X is a sibling of person Y.\nFor all X, Y, if person X is happy and person Y is tall, then person X is a friend of person Y.\n\nAnd the following facts:\ndave is friendly.\nbob is a friend of eve.\ncar is small.\nbook is clean.\nbook is wet.\nbob is an enemy of carol.\ngeorge is a sibling of dave.\ndave is strong.\ndave is a friend of carol.\ngeorge is brave.\nbook is small.\nbob is a friend of alice.\nfrank is brave.\ngeorge is a sibling of alice.\ndave is a sibling of george.\neve dislikes apple.\n\nQUESTION:\nIs frank is excited true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 569,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(dave).",
    "c": "weak(X) :- friendly(X).\nbusy(X) :- weak(X).\nbored(X) :- busy(X).\nhungry(X) :- bored(X).\ntired(X) :- hungry(X).\nrough(Y) :- rough(Y), dislikes(W,Y), funny(W).\nsad(Y) :- clever(Y), friend(Y,B), strong(B).\nhard(Y) :- wet(Y), owns(W,Y), sad(W).\ntall(Z) :- curious(Z).\ndislikes(X,Z) :- hard(Z), strong(X), angry(A).\nnew(X) :- dirty(X), hard(X).\nhard(X) :- small(X).\nsoft(X) :- clean(X).\nsibling(X,Y) :- sad(X), strong(Y).\nfriend(X,Y) :- happy(X), tall(Y).\ntired(dave).\nfriend(bob,eve).\nsmall(car).\nclean(book).\nwet(book).\nenemy(bob,carol).\nsibling(george,dave).\nstrong(dave).\nfriend(dave,carol).\nbrave(george).\nsmall(book).\nfriend(bob,alice).\nbrave(frank).\nsibling(george,alice).\nsibling(dave,george).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all Y, if there exists W such that object Y is rough and person W dislikes object Y and person W is funny, then object Y is rough.\nFor all Y, if there exists B such that person Y is clever and person Y is a friend of person B and person B is strong, then person Y is sad.\nFor all Y, if there exists W such that object Y is wet and person W owns object Y and person W is sad, then object Y is hard.\nFor all Z, if person Z is curious, then person Z is tall.\nFor all X, Z, if there exists A such that object Z is hard and person X is strong and person A is angry, then person X dislikes object Z.\nFor all X, if object X is dirty and object X is hard, then object X is new.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is clean, then object X is soft.\nFor all X, Y, if person X is sad and person Y is strong, then person X is a sibling of person Y.\nFor all X, Y, if person X is happy and person Y is tall, then person X is a friend of person Y.\n\nAnd the following facts:\ndave is tired.\nbob is a friend of eve.\ncar is small.\nbook is clean.\nbook is wet.\nbob is an enemy of carol.\ngeorge is a sibling of dave.\ndave is strong.\ndave is a friend of carol.\ngeorge is brave.\nbook is small.\nbob is a friend of alice.\nfrank is brave.\ngeorge is a sibling of alice.\ndave is a sibling of george.\neve dislikes apple.\n\nQUESTION:\nCould dave is friendly explain dave is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 570,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "sad(george).",
    "c": "weak(X) :- friendly(X).\nbusy(X) :- weak(X).\nbored(X) :- busy(X).\nhungry(X) :- bored(X).\ntired(X) :- hungry(X).\nrough(Y) :- rough(Y), dislikes(W,Y), funny(W).\nsad(Y) :- clever(Y), friend(Y,B), strong(B).\nhard(Y) :- wet(Y), owns(W,Y), sad(W).\ntall(Z) :- curious(Z).\ndislikes(X,Z) :- hard(Z), strong(X), angry(A).\nnew(X) :- dirty(X), hard(X).\nhard(X) :- small(X).\nsoft(X) :- clean(X).\nsibling(X,Y) :- sad(X), strong(Y).\nfriend(X,Y) :- happy(X), tall(Y).\ntired(dave).\nfriend(bob,eve).\nsmall(car).\nclean(book).\nwet(book).\nenemy(bob,carol).\nsibling(george,dave).\nstrong(dave).\nfriend(dave,carol).\nbrave(george).\nsmall(book).\nfriend(bob,alice).\nbrave(frank).\nsibling(george,alice).\nsibling(dave,george).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all Y, if there exists W such that object Y is rough and person W dislikes object Y and person W is funny, then object Y is rough.\nFor all Y, if there exists B such that person Y is clever and person Y is a friend of person B and person B is strong, then person Y is sad.\nFor all Y, if there exists W such that object Y is wet and person W owns object Y and person W is sad, then object Y is hard.\nFor all Z, if person Z is curious, then person Z is tall.\nFor all X, Z, if there exists A such that object Z is hard and person X is strong and person A is angry, then person X dislikes object Z.\nFor all X, if object X is dirty and object X is hard, then object X is new.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is clean, then object X is soft.\nFor all X, Y, if person X is sad and person Y is strong, then person X is a sibling of person Y.\nFor all X, Y, if person X is happy and person Y is tall, then person X is a friend of person Y.\n\nAnd the following facts:\ndave is tired.\nbob is a friend of eve.\ncar is small.\nbook is clean.\nbook is wet.\nbob is an enemy of carol.\ngeorge is a sibling of dave.\ndave is strong.\ndave is a friend of carol.\ngeorge is brave.\nbook is small.\nbob is a friend of alice.\nfrank is brave.\ngeorge is a sibling of alice.\ndave is a sibling of george.\neve dislikes apple.\n\nQUESTION:\nCould george is sad explain dave is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 571,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "funny(bob).",
    "c": "curious(X) :- happy(X).\nbored(X) :- curious(X).\nbusy(X) :- bored(X).\ntired(X) :- busy(X).\nfunny(X) :- tired(X).\nold(X) :- light(X), dislikes(A,X), tall(A).\nhungry(X) :- brave(X), sibling(X,A), brave(A).\nclever(Y) :- excited(Y), parent(Y,W), clever(W).\nsmooth(Z) :- small(Z), likes(W,Z), strong(W).\nhard(X) :- light(X).\nexcited(X) :- angry(X), calm(X).\nsad(X) :- calm(X).\nheavy(X) :- new(X).\nparent(X,Y) :- weak(X), tall(Y), sibling(X,Y).\nbrave(X) :- strong(X).\nhappy(bob).\ncalm(alice).\nlikes(george,pencil).\nsibling(alice,carol).\nsibling(alice,dave).\nhungry(eve).\nclever(carol).\nlikes(dave,ball).\nparent(george,carol).\nfriend(george,alice).\nparent(carol,alice).\nlikes(frank,book).\ndislikes(george,pencil).\nfriendly(frank).\nweak(eve).\nenemy(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if there exists A such that object X is light and person A dislikes object X and person A is tall, then object X is old.\nFor all X, if there exists A such that person X is brave and person X is a sibling of person A and person A is brave, then person X is hungry.\nFor all Y, if there exists W such that person Y is excited and person Y is a parent of person W and person W is clever, then person Y is clever.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is strong, then object Z is smooth.\nFor all X, if object X is light, then object X is hard.\nFor all X, if person X is angry and person X is calm, then person X is excited.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if object X is new, then object X is heavy.\nFor all X, Y, if person X is weak and person Y is tall and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is brave.\n\nAnd the following facts:\nbob is happy.\nalice is calm.\ngeorge likes pencil.\nalice is a sibling of carol.\nalice is a sibling of dave.\neve is hungry.\ncarol is clever.\ndave likes ball.\ngeorge is a parent of carol.\ngeorge is a friend of alice.\ncarol is a parent of alice.\nfrank likes book.\ngeorge dislikes pencil.\nfrank is friendly.\neve is weak.\nfrank is an enemy of bob.\n\nQUESTION:\nIs bob is funny true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 572,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "curious(X) :- happy(X).\nbored(X) :- curious(X).\nbusy(X) :- bored(X).\ntired(X) :- busy(X).\nfunny(X) :- tired(X).\nold(X) :- light(X), dislikes(A,X), tall(A).\nhungry(X) :- brave(X), sibling(X,A), brave(A).\nclever(Y) :- excited(Y), parent(Y,W), clever(W).\nsmooth(Z) :- small(Z), likes(W,Z), strong(W).\nhard(X) :- light(X).\nexcited(X) :- angry(X), calm(X).\nsad(X) :- calm(X).\nheavy(X) :- new(X).\nparent(X,Y) :- weak(X), tall(Y), sibling(X,Y).\nbrave(X) :- strong(X).\nhappy(bob).\ncalm(alice).\nlikes(george,pencil).\nsibling(alice,carol).\nsibling(alice,dave).\nhungry(eve).\nclever(carol).\nlikes(dave,ball).\nparent(george,carol).\nfriend(george,alice).\nparent(carol,alice).\nlikes(frank,book).\ndislikes(george,pencil).\nfriendly(frank).\nweak(eve).\nenemy(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if there exists A such that object X is light and person A dislikes object X and person A is tall, then object X is old.\nFor all X, if there exists A such that person X is brave and person X is a sibling of person A and person A is brave, then person X is hungry.\nFor all Y, if there exists W such that person Y is excited and person Y is a parent of person W and person W is clever, then person Y is clever.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is strong, then object Z is smooth.\nFor all X, if object X is light, then object X is hard.\nFor all X, if person X is angry and person X is calm, then person X is excited.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if object X is new, then object X is heavy.\nFor all X, Y, if person X is weak and person Y is tall and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is brave.\n\nAnd the following facts:\nbob is happy.\nalice is calm.\ngeorge likes pencil.\nalice is a sibling of carol.\nalice is a sibling of dave.\neve is hungry.\ncarol is clever.\ndave likes ball.\ngeorge is a parent of carol.\ngeorge is a friend of alice.\ncarol is a parent of alice.\nfrank likes book.\ngeorge dislikes pencil.\nfrank is friendly.\neve is weak.\nfrank is an enemy of bob.\n\nQUESTION:\nIs bob is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 573,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(bob).",
    "c": "curious(X) :- happy(X).\nbored(X) :- curious(X).\nbusy(X) :- bored(X).\ntired(X) :- busy(X).\nfunny(X) :- tired(X).\nold(X) :- light(X), dislikes(A,X), tall(A).\nhungry(X) :- brave(X), sibling(X,A), brave(A).\nclever(Y) :- excited(Y), parent(Y,W), clever(W).\nsmooth(Z) :- small(Z), likes(W,Z), strong(W).\nhard(X) :- light(X).\nexcited(X) :- angry(X), calm(X).\nsad(X) :- calm(X).\nheavy(X) :- new(X).\nparent(X,Y) :- weak(X), tall(Y), sibling(X,Y).\nbrave(X) :- strong(X).\nfunny(bob).\ncalm(alice).\nlikes(george,pencil).\nsibling(alice,carol).\nsibling(alice,dave).\nhungry(eve).\nclever(carol).\nlikes(dave,ball).\nparent(george,carol).\nfriend(george,alice).\nparent(carol,alice).\nlikes(frank,book).\ndislikes(george,pencil).\nfriendly(frank).\nweak(eve).\nenemy(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if there exists A such that object X is light and person A dislikes object X and person A is tall, then object X is old.\nFor all X, if there exists A such that person X is brave and person X is a sibling of person A and person A is brave, then person X is hungry.\nFor all Y, if there exists W such that person Y is excited and person Y is a parent of person W and person W is clever, then person Y is clever.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is strong, then object Z is smooth.\nFor all X, if object X is light, then object X is hard.\nFor all X, if person X is angry and person X is calm, then person X is excited.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if object X is new, then object X is heavy.\nFor all X, Y, if person X is weak and person Y is tall and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is brave.\n\nAnd the following facts:\nbob is funny.\nalice is calm.\ngeorge likes pencil.\nalice is a sibling of carol.\nalice is a sibling of dave.\neve is hungry.\ncarol is clever.\ndave likes ball.\ngeorge is a parent of carol.\ngeorge is a friend of alice.\ncarol is a parent of alice.\nfrank likes book.\ngeorge dislikes pencil.\nfrank is friendly.\neve is weak.\nfrank is an enemy of bob.\n\nQUESTION:\nCould bob is happy explain bob is funny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 574,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(book).",
    "c": "curious(X) :- happy(X).\nbored(X) :- curious(X).\nbusy(X) :- bored(X).\ntired(X) :- busy(X).\nfunny(X) :- tired(X).\nold(X) :- light(X), dislikes(A,X), tall(A).\nhungry(X) :- brave(X), sibling(X,A), brave(A).\nclever(Y) :- excited(Y), parent(Y,W), clever(W).\nsmooth(Z) :- small(Z), likes(W,Z), strong(W).\nhard(X) :- light(X).\nexcited(X) :- angry(X), calm(X).\nsad(X) :- calm(X).\nheavy(X) :- new(X).\nparent(X,Y) :- weak(X), tall(Y), sibling(X,Y).\nbrave(X) :- strong(X).\nfunny(bob).\ncalm(alice).\nlikes(george,pencil).\nsibling(alice,carol).\nsibling(alice,dave).\nhungry(eve).\nclever(carol).\nlikes(dave,ball).\nparent(george,carol).\nfriend(george,alice).\nparent(carol,alice).\nlikes(frank,book).\ndislikes(george,pencil).\nfriendly(frank).\nweak(eve).\nenemy(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if there exists A such that object X is light and person A dislikes object X and person A is tall, then object X is old.\nFor all X, if there exists A such that person X is brave and person X is a sibling of person A and person A is brave, then person X is hungry.\nFor all Y, if there exists W such that person Y is excited and person Y is a parent of person W and person W is clever, then person Y is clever.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is strong, then object Z is smooth.\nFor all X, if object X is light, then object X is hard.\nFor all X, if person X is angry and person X is calm, then person X is excited.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if object X is new, then object X is heavy.\nFor all X, Y, if person X is weak and person Y is tall and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is brave.\n\nAnd the following facts:\nbob is funny.\nalice is calm.\ngeorge likes pencil.\nalice is a sibling of carol.\nalice is a sibling of dave.\neve is hungry.\ncarol is clever.\ndave likes ball.\ngeorge is a parent of carol.\ngeorge is a friend of alice.\ncarol is a parent of alice.\nfrank likes book.\ngeorge dislikes pencil.\nfrank is friendly.\neve is weak.\nfrank is an enemy of bob.\n\nQUESTION:\nCould book is smooth explain bob is funny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 575,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(car).",
    "c": "heavy(X) :- rough(X).\nnew(X) :- heavy(X).\nwet(X) :- new(X).\nheavy(X) :- wet(X).\ndirty(X) :- heavy(X).\nsmooth(X) :- dirty(X).\nsoft(X) :- smooth(X).\nbig(X) :- soft(X).\nrough(X) :- big(X).\nhard(X) :- rough(X).\nbusy(Z) :- hungry(Z), light(C).\nexcited(Z) :- excited(Z), dislikes(Z,V), red(V).\nsibling(X,Y) :- busy(X), excited(Y).\nlikes(X,Y) :- strong(X), old(Y).\nclever(X) :- angry(X), funny(X).\nrough(car).\ntired(george).\nlikes(bob,ball).\ndislikes(alice,phone).\ndislikes(eve,book).\ntired(eve).\nsibling(eve,dave).\nsunny.\nparent(bob,eve).\nowns(frank,book).\ntired(dave).\ntall(bob).\nfriend(george,carol).\nfriend(george,bob).\nlikes(bob,car).\nhappy(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is hard.\nFor all Z, if there exists C such that person Z is hungry and object C is light, then person Z is busy.\nFor all Z, if there exists V such that person Z is excited and person Z dislikes object V and object V is red, then person Z is excited.\nFor all X, Y, if person X is busy and person Y is excited, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is old, then person X likes object Y.\nFor all X, if person X is angry and person X is funny, then person X is clever.\n\nAnd the following facts:\ncar is rough.\ngeorge is tired.\nbob likes ball.\nalice dislikes phone.\neve dislikes book.\neve is tired.\neve is a sibling of dave.\nit is sunny.\nbob is a parent of eve.\nfrank owns book.\ndave is tired.\nbob is tall.\ngeorge is a friend of carol.\ngeorge is a friend of bob.\nbob likes car.\nbob is happy.\n\nQUESTION:\nIs car is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 576,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "soft(apple).",
    "c": "heavy(X) :- rough(X).\nnew(X) :- heavy(X).\nwet(X) :- new(X).\nheavy(X) :- wet(X).\ndirty(X) :- heavy(X).\nsmooth(X) :- dirty(X).\nsoft(X) :- smooth(X).\nbig(X) :- soft(X).\nrough(X) :- big(X).\nhard(X) :- rough(X).\nbusy(Z) :- hungry(Z), light(C).\nexcited(Z) :- excited(Z), dislikes(Z,V), red(V).\nsibling(X,Y) :- busy(X), excited(Y).\nlikes(X,Y) :- strong(X), old(Y).\nclever(X) :- angry(X), funny(X).\nrough(car).\ntired(george).\nlikes(bob,ball).\ndislikes(alice,phone).\ndislikes(eve,book).\ntired(eve).\nsibling(eve,dave).\nsunny.\nparent(bob,eve).\nowns(frank,book).\ntired(dave).\ntall(bob).\nfriend(george,carol).\nfriend(george,bob).\nlikes(bob,car).\nhappy(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is hard.\nFor all Z, if there exists C such that person Z is hungry and object C is light, then person Z is busy.\nFor all Z, if there exists V such that person Z is excited and person Z dislikes object V and object V is red, then person Z is excited.\nFor all X, Y, if person X is busy and person Y is excited, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is old, then person X likes object Y.\nFor all X, if person X is angry and person X is funny, then person X is clever.\n\nAnd the following facts:\ncar is rough.\ngeorge is tired.\nbob likes ball.\nalice dislikes phone.\neve dislikes book.\neve is tired.\neve is a sibling of dave.\nit is sunny.\nbob is a parent of eve.\nfrank owns book.\ndave is tired.\nbob is tall.\ngeorge is a friend of carol.\ngeorge is a friend of bob.\nbob likes car.\nbob is happy.\n\nQUESTION:\nIs apple is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 577,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(car).",
    "c": "heavy(X) :- rough(X).\nnew(X) :- heavy(X).\nwet(X) :- new(X).\nheavy(X) :- wet(X).\ndirty(X) :- heavy(X).\nsmooth(X) :- dirty(X).\nsoft(X) :- smooth(X).\nbig(X) :- soft(X).\nrough(X) :- big(X).\nhard(X) :- rough(X).\nbusy(Z) :- hungry(Z), light(C).\nexcited(Z) :- excited(Z), dislikes(Z,V), red(V).\nsibling(X,Y) :- busy(X), excited(Y).\nlikes(X,Y) :- strong(X), old(Y).\nclever(X) :- angry(X), funny(X).\nhard(car).\ntired(george).\nlikes(bob,ball).\ndislikes(alice,phone).\ndislikes(eve,book).\ntired(eve).\nsibling(eve,dave).\nsunny.\nparent(bob,eve).\nowns(frank,book).\ntired(dave).\ntall(bob).\nfriend(george,carol).\nfriend(george,bob).\nlikes(bob,car).\nhappy(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is hard.\nFor all Z, if there exists C such that person Z is hungry and object C is light, then person Z is busy.\nFor all Z, if there exists V such that person Z is excited and person Z dislikes object V and object V is red, then person Z is excited.\nFor all X, Y, if person X is busy and person Y is excited, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is old, then person X likes object Y.\nFor all X, if person X is angry and person X is funny, then person X is clever.\n\nAnd the following facts:\ncar is hard.\ngeorge is tired.\nbob likes ball.\nalice dislikes phone.\neve dislikes book.\neve is tired.\neve is a sibling of dave.\nit is sunny.\nbob is a parent of eve.\nfrank owns book.\ndave is tired.\nbob is tall.\ngeorge is a friend of carol.\ngeorge is a friend of bob.\nbob likes car.\nbob is happy.\n\nQUESTION:\nCould car is rough explain car is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 578,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "strong(frank).",
    "c": "heavy(X) :- rough(X).\nnew(X) :- heavy(X).\nwet(X) :- new(X).\nheavy(X) :- wet(X).\ndirty(X) :- heavy(X).\nsmooth(X) :- dirty(X).\nsoft(X) :- smooth(X).\nbig(X) :- soft(X).\nrough(X) :- big(X).\nhard(X) :- rough(X).\nbusy(Z) :- hungry(Z), light(C).\nexcited(Z) :- excited(Z), dislikes(Z,V), red(V).\nsibling(X,Y) :- busy(X), excited(Y).\nlikes(X,Y) :- strong(X), old(Y).\nclever(X) :- angry(X), funny(X).\nhard(car).\ntired(george).\nlikes(bob,ball).\ndislikes(alice,phone).\ndislikes(eve,book).\ntired(eve).\nsibling(eve,dave).\nsunny.\nparent(bob,eve).\nowns(frank,book).\ntired(dave).\ntall(bob).\nfriend(george,carol).\nfriend(george,bob).\nlikes(bob,car).\nhappy(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is hard.\nFor all Z, if there exists C such that person Z is hungry and object C is light, then person Z is busy.\nFor all Z, if there exists V such that person Z is excited and person Z dislikes object V and object V is red, then person Z is excited.\nFor all X, Y, if person X is busy and person Y is excited, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is old, then person X likes object Y.\nFor all X, if person X is angry and person X is funny, then person X is clever.\n\nAnd the following facts:\ncar is hard.\ngeorge is tired.\nbob likes ball.\nalice dislikes phone.\neve dislikes book.\neve is tired.\neve is a sibling of dave.\nit is sunny.\nbob is a parent of eve.\nfrank owns book.\ndave is tired.\nbob is tall.\ngeorge is a friend of carol.\ngeorge is a friend of bob.\nbob likes car.\nbob is happy.\n\nQUESTION:\nCould frank is strong explain car is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 579,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(eve).",
    "c": "weak(X) :- sad(X).\nsad(X) :- weak(X).\ntired(X) :- sad(X).\nfunny(X) :- tired(X).\nweak(X) :- funny(X).\nbusy(X) :- weak(X).\nfunny(X) :- busy(X).\nstrong(X) :- funny(X).\nhappy(X) :- strong(X).\nhungry(X) :- happy(X).\nlight(X) :- smooth(X), likes(W,X), angry(W).\nheavy(Z) :- dirty(Z), likes(A,Z), tall(A).\nclean(X) :- smooth(X).\nsmall(X) :- light(X).\nheavy(X) :- big(X).\nsad(eve).\nsibling(dave,carol).\nfriend(eve,bob).\nenemy(bob,eve).\nsibling(alice,george).\nenemy(george,dave).\nclean(car).\nowns(carol,pencil).\nsibling(dave,eve).\nenemy(george,eve).\nfriend(alice,eve).\nsibling(frank,eve).\nenemy(george,carol).\nenemy(alice,george).\ndislikes(carol,book).\nfriendly(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if there exists W such that object X is smooth and person W likes object X and person W is angry, then object X is light.\nFor all Z, if there exists A such that object Z is dirty and person A likes object Z and person A is tall, then object Z is heavy.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is big, then object X is heavy.\n\nAnd the following facts:\neve is sad.\ndave is a sibling of carol.\neve is a friend of bob.\nbob is an enemy of eve.\nalice is a sibling of george.\ngeorge is an enemy of dave.\ncar is clean.\ncarol owns pencil.\ndave is a sibling of eve.\ngeorge is an enemy of eve.\nalice is a friend of eve.\nfrank is a sibling of eve.\ngeorge is an enemy of carol.\nalice is an enemy of george.\ncarol dislikes book.\ndave is friendly.\n\nQUESTION:\nIs eve is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 580,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "new(apple).",
    "c": "weak(X) :- sad(X).\nsad(X) :- weak(X).\ntired(X) :- sad(X).\nfunny(X) :- tired(X).\nweak(X) :- funny(X).\nbusy(X) :- weak(X).\nfunny(X) :- busy(X).\nstrong(X) :- funny(X).\nhappy(X) :- strong(X).\nhungry(X) :- happy(X).\nlight(X) :- smooth(X), likes(W,X), angry(W).\nheavy(Z) :- dirty(Z), likes(A,Z), tall(A).\nclean(X) :- smooth(X).\nsmall(X) :- light(X).\nheavy(X) :- big(X).\nsad(eve).\nsibling(dave,carol).\nfriend(eve,bob).\nenemy(bob,eve).\nsibling(alice,george).\nenemy(george,dave).\nclean(car).\nowns(carol,pencil).\nsibling(dave,eve).\nenemy(george,eve).\nfriend(alice,eve).\nsibling(frank,eve).\nenemy(george,carol).\nenemy(alice,george).\ndislikes(carol,book).\nfriendly(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if there exists W such that object X is smooth and person W likes object X and person W is angry, then object X is light.\nFor all Z, if there exists A such that object Z is dirty and person A likes object Z and person A is tall, then object Z is heavy.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is big, then object X is heavy.\n\nAnd the following facts:\neve is sad.\ndave is a sibling of carol.\neve is a friend of bob.\nbob is an enemy of eve.\nalice is a sibling of george.\ngeorge is an enemy of dave.\ncar is clean.\ncarol owns pencil.\ndave is a sibling of eve.\ngeorge is an enemy of eve.\nalice is a friend of eve.\nfrank is a sibling of eve.\ngeorge is an enemy of carol.\nalice is an enemy of george.\ncarol dislikes book.\ndave is friendly.\n\nQUESTION:\nIs apple is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 581,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(eve).",
    "c": "weak(X) :- sad(X).\nsad(X) :- weak(X).\ntired(X) :- sad(X).\nfunny(X) :- tired(X).\nweak(X) :- funny(X).\nbusy(X) :- weak(X).\nfunny(X) :- busy(X).\nstrong(X) :- funny(X).\nhappy(X) :- strong(X).\nhungry(X) :- happy(X).\nlight(X) :- smooth(X), likes(W,X), angry(W).\nheavy(Z) :- dirty(Z), likes(A,Z), tall(A).\nclean(X) :- smooth(X).\nsmall(X) :- light(X).\nheavy(X) :- big(X).\nhungry(eve).\nsibling(dave,carol).\nfriend(eve,bob).\nenemy(bob,eve).\nsibling(alice,george).\nenemy(george,dave).\nclean(car).\nowns(carol,pencil).\nsibling(dave,eve).\nenemy(george,eve).\nfriend(alice,eve).\nsibling(frank,eve).\nenemy(george,carol).\nenemy(alice,george).\ndislikes(carol,book).\nfriendly(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if there exists W such that object X is smooth and person W likes object X and person W is angry, then object X is light.\nFor all Z, if there exists A such that object Z is dirty and person A likes object Z and person A is tall, then object Z is heavy.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is big, then object X is heavy.\n\nAnd the following facts:\neve is hungry.\ndave is a sibling of carol.\neve is a friend of bob.\nbob is an enemy of eve.\nalice is a sibling of george.\ngeorge is an enemy of dave.\ncar is clean.\ncarol owns pencil.\ndave is a sibling of eve.\ngeorge is an enemy of eve.\nalice is a friend of eve.\nfrank is a sibling of eve.\ngeorge is an enemy of carol.\nalice is an enemy of george.\ncarol dislikes book.\ndave is friendly.\n\nQUESTION:\nCould eve is sad explain eve is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 582,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "calm(dave).",
    "c": "weak(X) :- sad(X).\nsad(X) :- weak(X).\ntired(X) :- sad(X).\nfunny(X) :- tired(X).\nweak(X) :- funny(X).\nbusy(X) :- weak(X).\nfunny(X) :- busy(X).\nstrong(X) :- funny(X).\nhappy(X) :- strong(X).\nhungry(X) :- happy(X).\nlight(X) :- smooth(X), likes(W,X), angry(W).\nheavy(Z) :- dirty(Z), likes(A,Z), tall(A).\nclean(X) :- smooth(X).\nsmall(X) :- light(X).\nheavy(X) :- big(X).\nhungry(eve).\nsibling(dave,carol).\nfriend(eve,bob).\nenemy(bob,eve).\nsibling(alice,george).\nenemy(george,dave).\nclean(car).\nowns(carol,pencil).\nsibling(dave,eve).\nenemy(george,eve).\nfriend(alice,eve).\nsibling(frank,eve).\nenemy(george,carol).\nenemy(alice,george).\ndislikes(carol,book).\nfriendly(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if there exists W such that object X is smooth and person W likes object X and person W is angry, then object X is light.\nFor all Z, if there exists A such that object Z is dirty and person A likes object Z and person A is tall, then object Z is heavy.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is big, then object X is heavy.\n\nAnd the following facts:\neve is hungry.\ndave is a sibling of carol.\neve is a friend of bob.\nbob is an enemy of eve.\nalice is a sibling of george.\ngeorge is an enemy of dave.\ncar is clean.\ncarol owns pencil.\ndave is a sibling of eve.\ngeorge is an enemy of eve.\nalice is a friend of eve.\nfrank is a sibling of eve.\ngeorge is an enemy of carol.\nalice is an enemy of george.\ncarol dislikes book.\ndave is friendly.\n\nQUESTION:\nCould dave is calm explain eve is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 583,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "brave(george).",
    "c": "curious(X) :- sad(X).\nfriendly(X) :- curious(X).\ntall(X) :- friendly(X).\nexcited(X) :- tall(X).\nclever(X) :- excited(X).\nbusy(X) :- clever(X).\nbored(X) :- busy(X).\nangry(X) :- bored(X).\nweak(X) :- angry(X).\nbrave(X) :- weak(X).\nfriend(X,Y) :- tired(Y), happy(X).\nparent(X,Z) :- happy(Z), tired(X), likes(Z,V).\nfriend(X,Y) :- tired(Y), hungry(X), dislikes(Y,W).\nsmooth(X) :- new(X).\nrough(X) :- heavy(X), big(X).\nsad(george).\nsoft(pencil).\nheavy(apple).\nheavy(ball).\nhappy(alice).\nparent(frank,carol).\nred(pencil).\nheavy(car).\nlikes(dave,pencil).\nenemy(carol,frank).\nparent(carol,frank).\nparent(dave,eve).\nfunny(george).\nsibling(bob,alice).\nsibling(bob,eve).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, Y, if person Y is tired and person X is happy, then person X is a friend of person Y.\nFor all X, Z, if there exists V such that person Z is happy and person X is tired and person Z likes object V, then person X is a parent of person Z.\nFor all X, Y, if there exists W such that person Y is tired and person X is hungry and person Y dislikes object W, then person X is a friend of person Y.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is heavy and object X is big, then object X is rough.\n\nAnd the following facts:\ngeorge is sad.\npencil is soft.\napple is heavy.\nball is heavy.\nalice is happy.\nfrank is a parent of carol.\npencil is red.\ncar is heavy.\ndave likes pencil.\ncarol is an enemy of frank.\ncarol is a parent of frank.\ndave is a parent of eve.\ngeorge is funny.\nbob is a sibling of alice.\nbob is a sibling of eve.\nbob is a parent of alice.\n\nQUESTION:\nIs george is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 584,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(eve).",
    "c": "curious(X) :- sad(X).\nfriendly(X) :- curious(X).\ntall(X) :- friendly(X).\nexcited(X) :- tall(X).\nclever(X) :- excited(X).\nbusy(X) :- clever(X).\nbored(X) :- busy(X).\nangry(X) :- bored(X).\nweak(X) :- angry(X).\nbrave(X) :- weak(X).\nfriend(X,Y) :- tired(Y), happy(X).\nparent(X,Z) :- happy(Z), tired(X), likes(Z,V).\nfriend(X,Y) :- tired(Y), hungry(X), dislikes(Y,W).\nsmooth(X) :- new(X).\nrough(X) :- heavy(X), big(X).\nsad(george).\nsoft(pencil).\nheavy(apple).\nheavy(ball).\nhappy(alice).\nparent(frank,carol).\nred(pencil).\nheavy(car).\nlikes(dave,pencil).\nenemy(carol,frank).\nparent(carol,frank).\nparent(dave,eve).\nfunny(george).\nsibling(bob,alice).\nsibling(bob,eve).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, Y, if person Y is tired and person X is happy, then person X is a friend of person Y.\nFor all X, Z, if there exists V such that person Z is happy and person X is tired and person Z likes object V, then person X is a parent of person Z.\nFor all X, Y, if there exists W such that person Y is tired and person X is hungry and person Y dislikes object W, then person X is a friend of person Y.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is heavy and object X is big, then object X is rough.\n\nAnd the following facts:\ngeorge is sad.\npencil is soft.\napple is heavy.\nball is heavy.\nalice is happy.\nfrank is a parent of carol.\npencil is red.\ncar is heavy.\ndave likes pencil.\ncarol is an enemy of frank.\ncarol is a parent of frank.\ndave is a parent of eve.\ngeorge is funny.\nbob is a sibling of alice.\nbob is a sibling of eve.\nbob is a parent of alice.\n\nQUESTION:\nIs eve is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 585,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(george).",
    "c": "curious(X) :- sad(X).\nfriendly(X) :- curious(X).\ntall(X) :- friendly(X).\nexcited(X) :- tall(X).\nclever(X) :- excited(X).\nbusy(X) :- clever(X).\nbored(X) :- busy(X).\nangry(X) :- bored(X).\nweak(X) :- angry(X).\nbrave(X) :- weak(X).\nfriend(X,Y) :- tired(Y), happy(X).\nparent(X,Z) :- happy(Z), tired(X), likes(Z,V).\nfriend(X,Y) :- tired(Y), hungry(X), dislikes(Y,W).\nsmooth(X) :- new(X).\nrough(X) :- heavy(X), big(X).\nbrave(george).\nsoft(pencil).\nheavy(apple).\nheavy(ball).\nhappy(alice).\nparent(frank,carol).\nred(pencil).\nheavy(car).\nlikes(dave,pencil).\nenemy(carol,frank).\nparent(carol,frank).\nparent(dave,eve).\nfunny(george).\nsibling(bob,alice).\nsibling(bob,eve).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, Y, if person Y is tired and person X is happy, then person X is a friend of person Y.\nFor all X, Z, if there exists V such that person Z is happy and person X is tired and person Z likes object V, then person X is a parent of person Z.\nFor all X, Y, if there exists W such that person Y is tired and person X is hungry and person Y dislikes object W, then person X is a friend of person Y.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is heavy and object X is big, then object X is rough.\n\nAnd the following facts:\ngeorge is brave.\npencil is soft.\napple is heavy.\nball is heavy.\nalice is happy.\nfrank is a parent of carol.\npencil is red.\ncar is heavy.\ndave likes pencil.\ncarol is an enemy of frank.\ncarol is a parent of frank.\ndave is a parent of eve.\ngeorge is funny.\nbob is a sibling of alice.\nbob is a sibling of eve.\nbob is a parent of alice.\n\nQUESTION:\nCould george is sad explain george is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 586,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(car).",
    "c": "curious(X) :- sad(X).\nfriendly(X) :- curious(X).\ntall(X) :- friendly(X).\nexcited(X) :- tall(X).\nclever(X) :- excited(X).\nbusy(X) :- clever(X).\nbored(X) :- busy(X).\nangry(X) :- bored(X).\nweak(X) :- angry(X).\nbrave(X) :- weak(X).\nfriend(X,Y) :- tired(Y), happy(X).\nparent(X,Z) :- happy(Z), tired(X), likes(Z,V).\nfriend(X,Y) :- tired(Y), hungry(X), dislikes(Y,W).\nsmooth(X) :- new(X).\nrough(X) :- heavy(X), big(X).\nbrave(george).\nsoft(pencil).\nheavy(apple).\nheavy(ball).\nhappy(alice).\nparent(frank,carol).\nred(pencil).\nheavy(car).\nlikes(dave,pencil).\nenemy(carol,frank).\nparent(carol,frank).\nparent(dave,eve).\nfunny(george).\nsibling(bob,alice).\nsibling(bob,eve).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is angry.\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, Y, if person Y is tired and person X is happy, then person X is a friend of person Y.\nFor all X, Z, if there exists V such that person Z is happy and person X is tired and person Z likes object V, then person X is a parent of person Z.\nFor all X, Y, if there exists W such that person Y is tired and person X is hungry and person Y dislikes object W, then person X is a friend of person Y.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is heavy and object X is big, then object X is rough.\n\nAnd the following facts:\ngeorge is brave.\npencil is soft.\napple is heavy.\nball is heavy.\nalice is happy.\nfrank is a parent of carol.\npencil is red.\ncar is heavy.\ndave likes pencil.\ncarol is an enemy of frank.\ncarol is a parent of frank.\ndave is a parent of eve.\ngeorge is funny.\nbob is a sibling of alice.\nbob is a sibling of eve.\nbob is a parent of alice.\n\nQUESTION:\nCould car is rough explain george is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 587,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(alice).",
    "c": "curious(X) :- brave(X).\nclever(X) :- curious(X).\nhappy(X) :- clever(X).\nstrong(X) :- happy(X).\nexcited(X) :- strong(X).\ntall(X) :- excited(X).\nsad(X) :- tall(X).\nfunny(X) :- sad(X).\ncalm(X) :- funny(X).\nweak(X) :- calm(X).\nclean(Z) :- new(Z), owns(B,Z), hungry(B).\nsmall(X) :- dirty(X).\nheavy(Z) :- light(Z), busy(F).\nnew(X) :- rough(X).\nlikes(X,Y) :- angry(X), rough(Y).\nbrave(alice).\ndislikes(eve,ball).\nsibling(bob,frank).\nhungry(alice).\nnew(apple).\ndislikes(alice,book).\nlikes(bob,apple).\nbusy(eve).\nlikes(george,car).\nparent(carol,bob).\nparent(eve,alice).\nenemy(carol,alice).\nsunny.\nowns(carol,phone).\nowns(alice,ball).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is excited.\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all Z, if there exists B such that object Z is new and person B owns object Z and person B is hungry, then object Z is clean.\nFor all X, if object X is dirty, then object X is small.\nFor all Z, if there exists F such that object Z is light and person F is busy, then object Z is heavy.\nFor all X, if object X is rough, then object X is new.\nFor all X, Y, if person X is angry and object Y is rough, then person X likes object Y.\n\nAnd the following facts:\nalice is brave.\neve dislikes ball.\nbob is a sibling of frank.\nalice is hungry.\napple is new.\nalice dislikes book.\nbob likes apple.\neve is busy.\ngeorge likes car.\ncarol is a parent of bob.\neve is a parent of alice.\ncarol is an enemy of alice.\nit is sunny.\ncarol owns phone.\nalice owns ball.\ncarol dislikes pencil.\n\nQUESTION:\nIs alice is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 588,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "light(pencil).",
    "c": "curious(X) :- brave(X).\nclever(X) :- curious(X).\nhappy(X) :- clever(X).\nstrong(X) :- happy(X).\nexcited(X) :- strong(X).\ntall(X) :- excited(X).\nsad(X) :- tall(X).\nfunny(X) :- sad(X).\ncalm(X) :- funny(X).\nweak(X) :- calm(X).\nclean(Z) :- new(Z), owns(B,Z), hungry(B).\nsmall(X) :- dirty(X).\nheavy(Z) :- light(Z), busy(F).\nnew(X) :- rough(X).\nlikes(X,Y) :- angry(X), rough(Y).\nbrave(alice).\ndislikes(eve,ball).\nsibling(bob,frank).\nhungry(alice).\nnew(apple).\ndislikes(alice,book).\nlikes(bob,apple).\nbusy(eve).\nlikes(george,car).\nparent(carol,bob).\nparent(eve,alice).\nenemy(carol,alice).\nsunny.\nowns(carol,phone).\nowns(alice,ball).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is excited.\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all Z, if there exists B such that object Z is new and person B owns object Z and person B is hungry, then object Z is clean.\nFor all X, if object X is dirty, then object X is small.\nFor all Z, if there exists F such that object Z is light and person F is busy, then object Z is heavy.\nFor all X, if object X is rough, then object X is new.\nFor all X, Y, if person X is angry and object Y is rough, then person X likes object Y.\n\nAnd the following facts:\nalice is brave.\neve dislikes ball.\nbob is a sibling of frank.\nalice is hungry.\napple is new.\nalice dislikes book.\nbob likes apple.\neve is busy.\ngeorge likes car.\ncarol is a parent of bob.\neve is a parent of alice.\ncarol is an enemy of alice.\nit is sunny.\ncarol owns phone.\nalice owns ball.\ncarol dislikes pencil.\n\nQUESTION:\nIs pencil is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 589,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(alice).",
    "c": "curious(X) :- brave(X).\nclever(X) :- curious(X).\nhappy(X) :- clever(X).\nstrong(X) :- happy(X).\nexcited(X) :- strong(X).\ntall(X) :- excited(X).\nsad(X) :- tall(X).\nfunny(X) :- sad(X).\ncalm(X) :- funny(X).\nweak(X) :- calm(X).\nclean(Z) :- new(Z), owns(B,Z), hungry(B).\nsmall(X) :- dirty(X).\nheavy(Z) :- light(Z), busy(F).\nnew(X) :- rough(X).\nlikes(X,Y) :- angry(X), rough(Y).\nweak(alice).\ndislikes(eve,ball).\nsibling(bob,frank).\nhungry(alice).\nnew(apple).\ndislikes(alice,book).\nlikes(bob,apple).\nbusy(eve).\nlikes(george,car).\nparent(carol,bob).\nparent(eve,alice).\nenemy(carol,alice).\nsunny.\nowns(carol,phone).\nowns(alice,ball).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is excited.\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all Z, if there exists B such that object Z is new and person B owns object Z and person B is hungry, then object Z is clean.\nFor all X, if object X is dirty, then object X is small.\nFor all Z, if there exists F such that object Z is light and person F is busy, then object Z is heavy.\nFor all X, if object X is rough, then object X is new.\nFor all X, Y, if person X is angry and object Y is rough, then person X likes object Y.\n\nAnd the following facts:\nalice is weak.\neve dislikes ball.\nbob is a sibling of frank.\nalice is hungry.\napple is new.\nalice dislikes book.\nbob likes apple.\neve is busy.\ngeorge likes car.\ncarol is a parent of bob.\neve is a parent of alice.\ncarol is an enemy of alice.\nit is sunny.\ncarol owns phone.\nalice owns ball.\ncarol dislikes pencil.\n\nQUESTION:\nCould alice is brave explain alice is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 590,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(eve).",
    "c": "curious(X) :- brave(X).\nclever(X) :- curious(X).\nhappy(X) :- clever(X).\nstrong(X) :- happy(X).\nexcited(X) :- strong(X).\ntall(X) :- excited(X).\nsad(X) :- tall(X).\nfunny(X) :- sad(X).\ncalm(X) :- funny(X).\nweak(X) :- calm(X).\nclean(Z) :- new(Z), owns(B,Z), hungry(B).\nsmall(X) :- dirty(X).\nheavy(Z) :- light(Z), busy(F).\nnew(X) :- rough(X).\nlikes(X,Y) :- angry(X), rough(Y).\nweak(alice).\ndislikes(eve,ball).\nsibling(bob,frank).\nhungry(alice).\nnew(apple).\ndislikes(alice,book).\nlikes(bob,apple).\nbusy(eve).\nlikes(george,car).\nparent(carol,bob).\nparent(eve,alice).\nenemy(carol,alice).\nsunny.\nowns(carol,phone).\nowns(alice,ball).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is excited.\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all Z, if there exists B such that object Z is new and person B owns object Z and person B is hungry, then object Z is clean.\nFor all X, if object X is dirty, then object X is small.\nFor all Z, if there exists F such that object Z is light and person F is busy, then object Z is heavy.\nFor all X, if object X is rough, then object X is new.\nFor all X, Y, if person X is angry and object Y is rough, then person X likes object Y.\n\nAnd the following facts:\nalice is weak.\neve dislikes ball.\nbob is a sibling of frank.\nalice is hungry.\napple is new.\nalice dislikes book.\nbob likes apple.\neve is busy.\ngeorge likes car.\ncarol is a parent of bob.\neve is a parent of alice.\ncarol is an enemy of alice.\nit is sunny.\ncarol owns phone.\nalice owns ball.\ncarol dislikes pencil.\n\nQUESTION:\nCould eve is tired explain alice is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 591,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(eve).",
    "c": "tired(X) :- funny(X).\nsad(Z) :- excited(Z), owns(Z,B), clean(B).\ndirty(Z) :- small(Z).\nfriendly(Y) :- curious(Y), owns(Y,V), soft(V).\nsibling(Z,Y) :- sad(Y), bored(Z), sad(D).\nstrong(Y) :- excited(Y), owns(Y,A), smooth(A).\nbored(Z) :- strong(Z), sibling(Z,W), friendly(W).\nclever(X) :- brave(X).\nowns(X,Y) :- tall(X), rough(Y), likes(X,Y).\ncurious(X) :- friendly(X).\nfriend(X,Y) :- friendly(X), weak(Y).\nsoft(X) :- small(X).\nbusy(X) :- strong(X), sad(X).\ndislikes(X,Y) :- bored(X), smooth(Y), owns(X,Y).\nclever(X) :- bored(X).\nfunny(eve).\nowns(alice,phone).\ndislikes(bob,car).\nclever(alice).\nwet(ball).\nenemy(carol,george).\nfriend(carol,frank).\nsibling(eve,alice).\nexcited(alice).\ndislikes(bob,apple).\nfriend(eve,george).\nenemy(frank,george).\nhappy(alice).\nsibling(bob,alice).\ndislikes(carol,apple).\nbrave(bob).\nfriend(dave,alice).\nparent(alice,eve).\nenemy(george,alice).\ndislikes(dave,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is tired.\nFor all Z, if there exists B such that person Z is excited and person Z owns object B and object B is clean, then person Z is sad.\nFor all Z, if object Z is small, then object Z is dirty.\nFor all Y, if there exists V such that person Y is curious and person Y owns object V and object V is soft, then person Y is friendly.\nFor all Y, Z, if there exists D such that person Y is sad and person Z is bored and person D is sad, then person Z is a sibling of person Y.\nFor all Y, if there exists A such that person Y is excited and person Y owns object A and object A is smooth, then person Y is strong.\nFor all Z, if there exists W such that person Z is strong and person Z is a sibling of person W and person W is friendly, then person Z is bored.\nFor all X, if person X is brave, then person X is clever.\nFor all X, Y, if person X is tall and object Y is rough and person X likes object Y, then person X owns object Y.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, Y, if person X is friendly and person Y is weak, then person X is a friend of person Y.\nFor all X, if object X is small, then object X is soft.\nFor all X, if person X is strong and person X is sad, then person X is busy.\nFor all X, Y, if person X is bored and object Y is smooth and person X owns object Y, then person X dislikes object Y.\nFor all X, if person X is bored, then person X is clever.\n\nAnd the following facts:\neve is funny.\nalice owns phone.\nbob dislikes car.\nalice is clever.\nball is wet.\ncarol is an enemy of george.\ncarol is a friend of frank.\neve is a sibling of alice.\nalice is excited.\nbob dislikes apple.\neve is a friend of george.\nfrank is an enemy of george.\nalice is happy.\nbob is a sibling of alice.\ncarol dislikes apple.\nbob is brave.\ndave is a friend of alice.\nalice is a parent of eve.\ngeorge is an enemy of alice.\ndave dislikes phone.\n\nQUESTION:\nIs eve is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 592,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "funny(bob).",
    "c": "tired(X) :- funny(X).\nsad(Z) :- excited(Z), owns(Z,B), clean(B).\ndirty(Z) :- small(Z).\nfriendly(Y) :- curious(Y), owns(Y,V), soft(V).\nsibling(Z,Y) :- sad(Y), bored(Z), sad(D).\nstrong(Y) :- excited(Y), owns(Y,A), smooth(A).\nbored(Z) :- strong(Z), sibling(Z,W), friendly(W).\nclever(X) :- brave(X).\nowns(X,Y) :- tall(X), rough(Y), likes(X,Y).\ncurious(X) :- friendly(X).\nfriend(X,Y) :- friendly(X), weak(Y).\nsoft(X) :- small(X).\nbusy(X) :- strong(X), sad(X).\ndislikes(X,Y) :- bored(X), smooth(Y), owns(X,Y).\nclever(X) :- bored(X).\nfunny(eve).\nowns(alice,phone).\ndislikes(bob,car).\nclever(alice).\nwet(ball).\nenemy(carol,george).\nfriend(carol,frank).\nsibling(eve,alice).\nexcited(alice).\ndislikes(bob,apple).\nfriend(eve,george).\nenemy(frank,george).\nhappy(alice).\nsibling(bob,alice).\ndislikes(carol,apple).\nbrave(bob).\nfriend(dave,alice).\nparent(alice,eve).\nenemy(george,alice).\ndislikes(dave,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is tired.\nFor all Z, if there exists B such that person Z is excited and person Z owns object B and object B is clean, then person Z is sad.\nFor all Z, if object Z is small, then object Z is dirty.\nFor all Y, if there exists V such that person Y is curious and person Y owns object V and object V is soft, then person Y is friendly.\nFor all Y, Z, if there exists D such that person Y is sad and person Z is bored and person D is sad, then person Z is a sibling of person Y.\nFor all Y, if there exists A such that person Y is excited and person Y owns object A and object A is smooth, then person Y is strong.\nFor all Z, if there exists W such that person Z is strong and person Z is a sibling of person W and person W is friendly, then person Z is bored.\nFor all X, if person X is brave, then person X is clever.\nFor all X, Y, if person X is tall and object Y is rough and person X likes object Y, then person X owns object Y.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, Y, if person X is friendly and person Y is weak, then person X is a friend of person Y.\nFor all X, if object X is small, then object X is soft.\nFor all X, if person X is strong and person X is sad, then person X is busy.\nFor all X, Y, if person X is bored and object Y is smooth and person X owns object Y, then person X dislikes object Y.\nFor all X, if person X is bored, then person X is clever.\n\nAnd the following facts:\neve is funny.\nalice owns phone.\nbob dislikes car.\nalice is clever.\nball is wet.\ncarol is an enemy of george.\ncarol is a friend of frank.\neve is a sibling of alice.\nalice is excited.\nbob dislikes apple.\neve is a friend of george.\nfrank is an enemy of george.\nalice is happy.\nbob is a sibling of alice.\ncarol dislikes apple.\nbob is brave.\ndave is a friend of alice.\nalice is a parent of eve.\ngeorge is an enemy of alice.\ndave dislikes phone.\n\nQUESTION:\nIs bob is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 593,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(eve).",
    "c": "tired(X) :- funny(X).\nsad(Z) :- excited(Z), owns(Z,B), clean(B).\ndirty(Z) :- small(Z).\nfriendly(Y) :- curious(Y), owns(Y,V), soft(V).\nsibling(Z,Y) :- sad(Y), bored(Z), sad(D).\nstrong(Y) :- excited(Y), owns(Y,A), smooth(A).\nbored(Z) :- strong(Z), sibling(Z,W), friendly(W).\nclever(X) :- brave(X).\nowns(X,Y) :- tall(X), rough(Y), likes(X,Y).\ncurious(X) :- friendly(X).\nfriend(X,Y) :- friendly(X), weak(Y).\nsoft(X) :- small(X).\nbusy(X) :- strong(X), sad(X).\ndislikes(X,Y) :- bored(X), smooth(Y), owns(X,Y).\nclever(X) :- bored(X).\ntired(eve).\nowns(alice,phone).\ndislikes(bob,car).\nclever(alice).\nwet(ball).\nenemy(carol,george).\nfriend(carol,frank).\nsibling(eve,alice).\nexcited(alice).\ndislikes(bob,apple).\nfriend(eve,george).\nenemy(frank,george).\nhappy(alice).\nsibling(bob,alice).\ndislikes(carol,apple).\nbrave(bob).\nfriend(dave,alice).\nparent(alice,eve).\nenemy(george,alice).\ndislikes(dave,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is tired.\nFor all Z, if there exists B such that person Z is excited and person Z owns object B and object B is clean, then person Z is sad.\nFor all Z, if object Z is small, then object Z is dirty.\nFor all Y, if there exists V such that person Y is curious and person Y owns object V and object V is soft, then person Y is friendly.\nFor all Y, Z, if there exists D such that person Y is sad and person Z is bored and person D is sad, then person Z is a sibling of person Y.\nFor all Y, if there exists A such that person Y is excited and person Y owns object A and object A is smooth, then person Y is strong.\nFor all Z, if there exists W such that person Z is strong and person Z is a sibling of person W and person W is friendly, then person Z is bored.\nFor all X, if person X is brave, then person X is clever.\nFor all X, Y, if person X is tall and object Y is rough and person X likes object Y, then person X owns object Y.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, Y, if person X is friendly and person Y is weak, then person X is a friend of person Y.\nFor all X, if object X is small, then object X is soft.\nFor all X, if person X is strong and person X is sad, then person X is busy.\nFor all X, Y, if person X is bored and object Y is smooth and person X owns object Y, then person X dislikes object Y.\nFor all X, if person X is bored, then person X is clever.\n\nAnd the following facts:\neve is tired.\nalice owns phone.\nbob dislikes car.\nalice is clever.\nball is wet.\ncarol is an enemy of george.\ncarol is a friend of frank.\neve is a sibling of alice.\nalice is excited.\nbob dislikes apple.\neve is a friend of george.\nfrank is an enemy of george.\nalice is happy.\nbob is a sibling of alice.\ncarol dislikes apple.\nbob is brave.\ndave is a friend of alice.\nalice is a parent of eve.\ngeorge is an enemy of alice.\ndave dislikes phone.\n\nQUESTION:\nCould eve is funny explain eve is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 594,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clever(eve).",
    "c": "tired(X) :- funny(X).\nsad(Z) :- excited(Z), owns(Z,B), clean(B).\ndirty(Z) :- small(Z).\nfriendly(Y) :- curious(Y), owns(Y,V), soft(V).\nsibling(Z,Y) :- sad(Y), bored(Z), sad(D).\nstrong(Y) :- excited(Y), owns(Y,A), smooth(A).\nbored(Z) :- strong(Z), sibling(Z,W), friendly(W).\nclever(X) :- brave(X).\nowns(X,Y) :- tall(X), rough(Y), likes(X,Y).\ncurious(X) :- friendly(X).\nfriend(X,Y) :- friendly(X), weak(Y).\nsoft(X) :- small(X).\nbusy(X) :- strong(X), sad(X).\ndislikes(X,Y) :- bored(X), smooth(Y), owns(X,Y).\nclever(X) :- bored(X).\ntired(eve).\nowns(alice,phone).\ndislikes(bob,car).\nclever(alice).\nwet(ball).\nenemy(carol,george).\nfriend(carol,frank).\nsibling(eve,alice).\nexcited(alice).\ndislikes(bob,apple).\nfriend(eve,george).\nenemy(frank,george).\nhappy(alice).\nsibling(bob,alice).\ndislikes(carol,apple).\nbrave(bob).\nfriend(dave,alice).\nparent(alice,eve).\nenemy(george,alice).\ndislikes(dave,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is tired.\nFor all Z, if there exists B such that person Z is excited and person Z owns object B and object B is clean, then person Z is sad.\nFor all Z, if object Z is small, then object Z is dirty.\nFor all Y, if there exists V such that person Y is curious and person Y owns object V and object V is soft, then person Y is friendly.\nFor all Y, Z, if there exists D such that person Y is sad and person Z is bored and person D is sad, then person Z is a sibling of person Y.\nFor all Y, if there exists A such that person Y is excited and person Y owns object A and object A is smooth, then person Y is strong.\nFor all Z, if there exists W such that person Z is strong and person Z is a sibling of person W and person W is friendly, then person Z is bored.\nFor all X, if person X is brave, then person X is clever.\nFor all X, Y, if person X is tall and object Y is rough and person X likes object Y, then person X owns object Y.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, Y, if person X is friendly and person Y is weak, then person X is a friend of person Y.\nFor all X, if object X is small, then object X is soft.\nFor all X, if person X is strong and person X is sad, then person X is busy.\nFor all X, Y, if person X is bored and object Y is smooth and person X owns object Y, then person X dislikes object Y.\nFor all X, if person X is bored, then person X is clever.\n\nAnd the following facts:\neve is tired.\nalice owns phone.\nbob dislikes car.\nalice is clever.\nball is wet.\ncarol is an enemy of george.\ncarol is a friend of frank.\neve is a sibling of alice.\nalice is excited.\nbob dislikes apple.\neve is a friend of george.\nfrank is an enemy of george.\nalice is happy.\nbob is a sibling of alice.\ncarol dislikes apple.\nbob is brave.\ndave is a friend of alice.\nalice is a parent of eve.\ngeorge is an enemy of alice.\ndave dislikes phone.\n\nQUESTION:\nCould eve is clever explain eve is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 595,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(bob).",
    "c": "happy(X) :- excited(X).\nangry(Y) :- friendly(Y), small(A).\nenemy(X,Y) :- hungry(Y), hungry(X).\nbored(X) :- strong(X), rough(E).\nenemy(X,Z) :- angry(Z), bored(X).\ntired(Y) :- friendly(Y).\nsmall(X) :- new(X), likes(U,X), strong(U).\nfunny(Y) :- brave(Y).\nfunny(Z) :- strong(Z), sibling(Z,U), funny(U).\ncurious(Z) :- tired(Z), dislikes(Z,U), old(U).\nrough(X) :- clean(X).\nsad(X) :- weak(X).\nenemy(X,Y) :- sad(X), brave(Y), friend(X,Y).\ntall(X) :- bored(X).\nlikes(X,Y) :- strong(X), heavy(Y).\nexcited(bob).\nlikes(alice,car).\nbored(alice).\nowns(eve,book).\nfriend(alice,carol).\nfriend(alice,frank).\nfunny(bob).\nhungry(george).\nparent(carol,alice).\nowns(frank,ball).\nowns(dave,apple).\nfriend(frank,george).\ntall(george).\nstrong(frank).\ndislikes(eve,pencil).\nhard(phone).\nowns(alice,pencil).\nstrong(carol).\nowns(dave,car).\ndislikes(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is happy.\nFor all Y, if there exists A such that person Y is friendly and object A is small, then person Y is angry.\nFor all X, Y, if person Y is hungry and person X is hungry, then person X is an enemy of person Y.\nFor all X, if there exists E such that person X is strong and object E is rough, then person X is bored.\nFor all X, Z, if person Z is angry and person X is bored, then person X is an enemy of person Z.\nFor all Y, if person Y is friendly, then person Y is tired.\nFor all X, if there exists U such that object X is new and person U likes object X and person U is strong, then object X is small.\nFor all Y, if person Y is brave, then person Y is funny.\nFor all Z, if there exists U such that person Z is strong and person Z is a sibling of person U and person U is funny, then person Z is funny.\nFor all Z, if there exists U such that person Z is tired and person Z dislikes object U and object U is old, then person Z is curious.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if person X is weak, then person X is sad.\nFor all X, Y, if person X is sad and person Y is brave and person X is a friend of person Y, then person X is an enemy of person Y.\nFor all X, if person X is bored, then person X is tall.\nFor all X, Y, if person X is strong and object Y is heavy, then person X likes object Y.\n\nAnd the following facts:\nbob is excited.\nalice likes car.\nalice is bored.\neve owns book.\nalice is a friend of carol.\nalice is a friend of frank.\nbob is funny.\ngeorge is hungry.\ncarol is a parent of alice.\nfrank owns ball.\ndave owns apple.\nfrank is a friend of george.\ngeorge is tall.\nfrank is strong.\neve dislikes pencil.\nphone is hard.\nalice owns pencil.\ncarol is strong.\ndave owns car.\nalice dislikes apple.\n\nQUESTION:\nIs bob is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 596,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(carol).",
    "c": "happy(X) :- excited(X).\nangry(Y) :- friendly(Y), small(A).\nenemy(X,Y) :- hungry(Y), hungry(X).\nbored(X) :- strong(X), rough(E).\nenemy(X,Z) :- angry(Z), bored(X).\ntired(Y) :- friendly(Y).\nsmall(X) :- new(X), likes(U,X), strong(U).\nfunny(Y) :- brave(Y).\nfunny(Z) :- strong(Z), sibling(Z,U), funny(U).\ncurious(Z) :- tired(Z), dislikes(Z,U), old(U).\nrough(X) :- clean(X).\nsad(X) :- weak(X).\nenemy(X,Y) :- sad(X), brave(Y), friend(X,Y).\ntall(X) :- bored(X).\nlikes(X,Y) :- strong(X), heavy(Y).\nexcited(bob).\nlikes(alice,car).\nbored(alice).\nowns(eve,book).\nfriend(alice,carol).\nfriend(alice,frank).\nfunny(bob).\nhungry(george).\nparent(carol,alice).\nowns(frank,ball).\nowns(dave,apple).\nfriend(frank,george).\ntall(george).\nstrong(frank).\ndislikes(eve,pencil).\nhard(phone).\nowns(alice,pencil).\nstrong(carol).\nowns(dave,car).\ndislikes(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is happy.\nFor all Y, if there exists A such that person Y is friendly and object A is small, then person Y is angry.\nFor all X, Y, if person Y is hungry and person X is hungry, then person X is an enemy of person Y.\nFor all X, if there exists E such that person X is strong and object E is rough, then person X is bored.\nFor all X, Z, if person Z is angry and person X is bored, then person X is an enemy of person Z.\nFor all Y, if person Y is friendly, then person Y is tired.\nFor all X, if there exists U such that object X is new and person U likes object X and person U is strong, then object X is small.\nFor all Y, if person Y is brave, then person Y is funny.\nFor all Z, if there exists U such that person Z is strong and person Z is a sibling of person U and person U is funny, then person Z is funny.\nFor all Z, if there exists U such that person Z is tired and person Z dislikes object U and object U is old, then person Z is curious.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if person X is weak, then person X is sad.\nFor all X, Y, if person X is sad and person Y is brave and person X is a friend of person Y, then person X is an enemy of person Y.\nFor all X, if person X is bored, then person X is tall.\nFor all X, Y, if person X is strong and object Y is heavy, then person X likes object Y.\n\nAnd the following facts:\nbob is excited.\nalice likes car.\nalice is bored.\neve owns book.\nalice is a friend of carol.\nalice is a friend of frank.\nbob is funny.\ngeorge is hungry.\ncarol is a parent of alice.\nfrank owns ball.\ndave owns apple.\nfrank is a friend of george.\ngeorge is tall.\nfrank is strong.\neve dislikes pencil.\nphone is hard.\nalice owns pencil.\ncarol is strong.\ndave owns car.\nalice dislikes apple.\n\nQUESTION:\nIs carol is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 597,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(bob).",
    "c": "happy(X) :- excited(X).\nangry(Y) :- friendly(Y), small(A).\nenemy(X,Y) :- hungry(Y), hungry(X).\nbored(X) :- strong(X), rough(E).\nenemy(X,Z) :- angry(Z), bored(X).\ntired(Y) :- friendly(Y).\nsmall(X) :- new(X), likes(U,X), strong(U).\nfunny(Y) :- brave(Y).\nfunny(Z) :- strong(Z), sibling(Z,U), funny(U).\ncurious(Z) :- tired(Z), dislikes(Z,U), old(U).\nrough(X) :- clean(X).\nsad(X) :- weak(X).\nenemy(X,Y) :- sad(X), brave(Y), friend(X,Y).\ntall(X) :- bored(X).\nlikes(X,Y) :- strong(X), heavy(Y).\nhappy(bob).\nlikes(alice,car).\nbored(alice).\nowns(eve,book).\nfriend(alice,carol).\nfriend(alice,frank).\nfunny(bob).\nhungry(george).\nparent(carol,alice).\nowns(frank,ball).\nowns(dave,apple).\nfriend(frank,george).\ntall(george).\nstrong(frank).\ndislikes(eve,pencil).\nhard(phone).\nowns(alice,pencil).\nstrong(carol).\nowns(dave,car).\ndislikes(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is happy.\nFor all Y, if there exists A such that person Y is friendly and object A is small, then person Y is angry.\nFor all X, Y, if person Y is hungry and person X is hungry, then person X is an enemy of person Y.\nFor all X, if there exists E such that person X is strong and object E is rough, then person X is bored.\nFor all X, Z, if person Z is angry and person X is bored, then person X is an enemy of person Z.\nFor all Y, if person Y is friendly, then person Y is tired.\nFor all X, if there exists U such that object X is new and person U likes object X and person U is strong, then object X is small.\nFor all Y, if person Y is brave, then person Y is funny.\nFor all Z, if there exists U such that person Z is strong and person Z is a sibling of person U and person U is funny, then person Z is funny.\nFor all Z, if there exists U such that person Z is tired and person Z dislikes object U and object U is old, then person Z is curious.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if person X is weak, then person X is sad.\nFor all X, Y, if person X is sad and person Y is brave and person X is a friend of person Y, then person X is an enemy of person Y.\nFor all X, if person X is bored, then person X is tall.\nFor all X, Y, if person X is strong and object Y is heavy, then person X likes object Y.\n\nAnd the following facts:\nbob is happy.\nalice likes car.\nalice is bored.\neve owns book.\nalice is a friend of carol.\nalice is a friend of frank.\nbob is funny.\ngeorge is hungry.\ncarol is a parent of alice.\nfrank owns ball.\ndave owns apple.\nfrank is a friend of george.\ngeorge is tall.\nfrank is strong.\neve dislikes pencil.\nphone is hard.\nalice owns pencil.\ncarol is strong.\ndave owns car.\nalice dislikes apple.\n\nQUESTION:\nCould bob is excited explain bob is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 598,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "strong(alice).",
    "c": "happy(X) :- excited(X).\nangry(Y) :- friendly(Y), small(A).\nenemy(X,Y) :- hungry(Y), hungry(X).\nbored(X) :- strong(X), rough(E).\nenemy(X,Z) :- angry(Z), bored(X).\ntired(Y) :- friendly(Y).\nsmall(X) :- new(X), likes(U,X), strong(U).\nfunny(Y) :- brave(Y).\nfunny(Z) :- strong(Z), sibling(Z,U), funny(U).\ncurious(Z) :- tired(Z), dislikes(Z,U), old(U).\nrough(X) :- clean(X).\nsad(X) :- weak(X).\nenemy(X,Y) :- sad(X), brave(Y), friend(X,Y).\ntall(X) :- bored(X).\nlikes(X,Y) :- strong(X), heavy(Y).\nhappy(bob).\nlikes(alice,car).\nbored(alice).\nowns(eve,book).\nfriend(alice,carol).\nfriend(alice,frank).\nfunny(bob).\nhungry(george).\nparent(carol,alice).\nowns(frank,ball).\nowns(dave,apple).\nfriend(frank,george).\ntall(george).\nstrong(frank).\ndislikes(eve,pencil).\nhard(phone).\nowns(alice,pencil).\nstrong(carol).\nowns(dave,car).\ndislikes(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is happy.\nFor all Y, if there exists A such that person Y is friendly and object A is small, then person Y is angry.\nFor all X, Y, if person Y is hungry and person X is hungry, then person X is an enemy of person Y.\nFor all X, if there exists E such that person X is strong and object E is rough, then person X is bored.\nFor all X, Z, if person Z is angry and person X is bored, then person X is an enemy of person Z.\nFor all Y, if person Y is friendly, then person Y is tired.\nFor all X, if there exists U such that object X is new and person U likes object X and person U is strong, then object X is small.\nFor all Y, if person Y is brave, then person Y is funny.\nFor all Z, if there exists U such that person Z is strong and person Z is a sibling of person U and person U is funny, then person Z is funny.\nFor all Z, if there exists U such that person Z is tired and person Z dislikes object U and object U is old, then person Z is curious.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if person X is weak, then person X is sad.\nFor all X, Y, if person X is sad and person Y is brave and person X is a friend of person Y, then person X is an enemy of person Y.\nFor all X, if person X is bored, then person X is tall.\nFor all X, Y, if person X is strong and object Y is heavy, then person X likes object Y.\n\nAnd the following facts:\nbob is happy.\nalice likes car.\nalice is bored.\neve owns book.\nalice is a friend of carol.\nalice is a friend of frank.\nbob is funny.\ngeorge is hungry.\ncarol is a parent of alice.\nfrank owns ball.\ndave owns apple.\nfrank is a friend of george.\ngeorge is tall.\nfrank is strong.\neve dislikes pencil.\nphone is hard.\nalice owns pencil.\ncarol is strong.\ndave owns car.\nalice dislikes apple.\n\nQUESTION:\nCould alice is strong explain bob is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 599,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "small(X) :- soft(X).\nparent(Y,X) :- busy(Y), angry(X).\nclever(X) :- excited(X), sibling(X,V), hungry(V).\nheavy(Z) :- rough(Z), old(F).\nfunny(X) :- brave(X), dislikes(X,V), smooth(V).\nbored(Z) :- bored(Z), likes(Z,B), red(B).\nsibling(X,Z) :- funny(Z), clever(X), dirty(E).\nclean(X) :- rough(X), big(X).\ntired(X) :- busy(X).\nbrave(X) :- excited(X).\nangry(X) :- excited(X), hungry(X).\nsibling(X,Y) :- curious(X), curious(Y).\nlikes(X,Y) :- tired(X), hard(Y).\ncalm(X) :- excited(X).\nweak(X) :- brave(X).\nsoft(book).\nlight(car).\nnew(apple).\nenemy(dave,alice).\nparent(dave,bob).\nlikes(eve,car).\nenemy(frank,alice).\nparent(bob,george).\ncold.\nlikes(alice,car).\nparent(frank,alice).\nclever(bob).\nenemy(frank,eve).\nsibling(bob,eve).\nowns(frank,pencil).\nhot.\ndislikes(frank,apple).\nparent(alice,dave).\nowns(george,ball).\nbusy(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is small.\nFor all X, Y, if person Y is busy and person X is angry, then person Y is a parent of person X.\nFor all X, if there exists V such that person X is excited and person X is a sibling of person V and person V is hungry, then person X is clever.\nFor all Z, if there exists F such that object Z is rough and object F is old, then object Z is heavy.\nFor all X, if there exists V such that person X is brave and person X dislikes object V and object V is smooth, then person X is funny.\nFor all Z, if there exists B such that person Z is bored and person Z likes object B and object B is red, then person Z is bored.\nFor all X, Z, if there exists E such that person Z is funny and person X is clever and object E is dirty, then person X is a sibling of person Z.\nFor all X, if object X is rough and object X is big, then object X is clean.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is excited and person X is hungry, then person X is angry.\nFor all X, Y, if person X is curious and person Y is curious, then person X is a sibling of person Y.\nFor all X, Y, if person X is tired and object Y is hard, then person X likes object Y.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is brave, then person X is weak.\n\nAnd the following facts:\nbook is soft.\ncar is light.\napple is new.\ndave is an enemy of alice.\ndave is a parent of bob.\neve likes car.\nfrank is an enemy of alice.\nbob is a parent of george.\nit is cold.\nalice likes car.\nfrank is a parent of alice.\nbob is clever.\nfrank is an enemy of eve.\nbob is a sibling of eve.\nfrank owns pencil.\nit is hot.\nfrank dislikes apple.\nalice is a parent of dave.\ngeorge owns ball.\neve is busy.\n\nQUESTION:\nIs book is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 600,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "calm(alice).",
    "c": "small(X) :- soft(X).\nparent(Y,X) :- busy(Y), angry(X).\nclever(X) :- excited(X), sibling(X,V), hungry(V).\nheavy(Z) :- rough(Z), old(F).\nfunny(X) :- brave(X), dislikes(X,V), smooth(V).\nbored(Z) :- bored(Z), likes(Z,B), red(B).\nsibling(X,Z) :- funny(Z), clever(X), dirty(E).\nclean(X) :- rough(X), big(X).\ntired(X) :- busy(X).\nbrave(X) :- excited(X).\nangry(X) :- excited(X), hungry(X).\nsibling(X,Y) :- curious(X), curious(Y).\nlikes(X,Y) :- tired(X), hard(Y).\ncalm(X) :- excited(X).\nweak(X) :- brave(X).\nsoft(book).\nlight(car).\nnew(apple).\nenemy(dave,alice).\nparent(dave,bob).\nlikes(eve,car).\nenemy(frank,alice).\nparent(bob,george).\ncold.\nlikes(alice,car).\nparent(frank,alice).\nclever(bob).\nenemy(frank,eve).\nsibling(bob,eve).\nowns(frank,pencil).\nhot.\ndislikes(frank,apple).\nparent(alice,dave).\nowns(george,ball).\nbusy(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is small.\nFor all X, Y, if person Y is busy and person X is angry, then person Y is a parent of person X.\nFor all X, if there exists V such that person X is excited and person X is a sibling of person V and person V is hungry, then person X is clever.\nFor all Z, if there exists F such that object Z is rough and object F is old, then object Z is heavy.\nFor all X, if there exists V such that person X is brave and person X dislikes object V and object V is smooth, then person X is funny.\nFor all Z, if there exists B such that person Z is bored and person Z likes object B and object B is red, then person Z is bored.\nFor all X, Z, if there exists E such that person Z is funny and person X is clever and object E is dirty, then person X is a sibling of person Z.\nFor all X, if object X is rough and object X is big, then object X is clean.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is excited and person X is hungry, then person X is angry.\nFor all X, Y, if person X is curious and person Y is curious, then person X is a sibling of person Y.\nFor all X, Y, if person X is tired and object Y is hard, then person X likes object Y.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is brave, then person X is weak.\n\nAnd the following facts:\nbook is soft.\ncar is light.\napple is new.\ndave is an enemy of alice.\ndave is a parent of bob.\neve likes car.\nfrank is an enemy of alice.\nbob is a parent of george.\nit is cold.\nalice likes car.\nfrank is a parent of alice.\nbob is clever.\nfrank is an enemy of eve.\nbob is a sibling of eve.\nfrank owns pencil.\nit is hot.\nfrank dislikes apple.\nalice is a parent of dave.\ngeorge owns ball.\neve is busy.\n\nQUESTION:\nIs alice is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 601,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(book).",
    "c": "small(X) :- soft(X).\nparent(Y,X) :- busy(Y), angry(X).\nclever(X) :- excited(X), sibling(X,V), hungry(V).\nheavy(Z) :- rough(Z), old(F).\nfunny(X) :- brave(X), dislikes(X,V), smooth(V).\nbored(Z) :- bored(Z), likes(Z,B), red(B).\nsibling(X,Z) :- funny(Z), clever(X), dirty(E).\nclean(X) :- rough(X), big(X).\ntired(X) :- busy(X).\nbrave(X) :- excited(X).\nangry(X) :- excited(X), hungry(X).\nsibling(X,Y) :- curious(X), curious(Y).\nlikes(X,Y) :- tired(X), hard(Y).\ncalm(X) :- excited(X).\nweak(X) :- brave(X).\nsmall(book).\nlight(car).\nnew(apple).\nenemy(dave,alice).\nparent(dave,bob).\nlikes(eve,car).\nenemy(frank,alice).\nparent(bob,george).\ncold.\nlikes(alice,car).\nparent(frank,alice).\nclever(bob).\nenemy(frank,eve).\nsibling(bob,eve).\nowns(frank,pencil).\nhot.\ndislikes(frank,apple).\nparent(alice,dave).\nowns(george,ball).\nbusy(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is small.\nFor all X, Y, if person Y is busy and person X is angry, then person Y is a parent of person X.\nFor all X, if there exists V such that person X is excited and person X is a sibling of person V and person V is hungry, then person X is clever.\nFor all Z, if there exists F such that object Z is rough and object F is old, then object Z is heavy.\nFor all X, if there exists V such that person X is brave and person X dislikes object V and object V is smooth, then person X is funny.\nFor all Z, if there exists B such that person Z is bored and person Z likes object B and object B is red, then person Z is bored.\nFor all X, Z, if there exists E such that person Z is funny and person X is clever and object E is dirty, then person X is a sibling of person Z.\nFor all X, if object X is rough and object X is big, then object X is clean.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is excited and person X is hungry, then person X is angry.\nFor all X, Y, if person X is curious and person Y is curious, then person X is a sibling of person Y.\nFor all X, Y, if person X is tired and object Y is hard, then person X likes object Y.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is brave, then person X is weak.\n\nAnd the following facts:\nbook is small.\ncar is light.\napple is new.\ndave is an enemy of alice.\ndave is a parent of bob.\neve likes car.\nfrank is an enemy of alice.\nbob is a parent of george.\nit is cold.\nalice likes car.\nfrank is a parent of alice.\nbob is clever.\nfrank is an enemy of eve.\nbob is a sibling of eve.\nfrank owns pencil.\nit is hot.\nfrank dislikes apple.\nalice is a parent of dave.\ngeorge owns ball.\neve is busy.\n\nQUESTION:\nCould book is soft explain book is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 602,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "new(book).",
    "c": "small(X) :- soft(X).\nparent(Y,X) :- busy(Y), angry(X).\nclever(X) :- excited(X), sibling(X,V), hungry(V).\nheavy(Z) :- rough(Z), old(F).\nfunny(X) :- brave(X), dislikes(X,V), smooth(V).\nbored(Z) :- bored(Z), likes(Z,B), red(B).\nsibling(X,Z) :- funny(Z), clever(X), dirty(E).\nclean(X) :- rough(X), big(X).\ntired(X) :- busy(X).\nbrave(X) :- excited(X).\nangry(X) :- excited(X), hungry(X).\nsibling(X,Y) :- curious(X), curious(Y).\nlikes(X,Y) :- tired(X), hard(Y).\ncalm(X) :- excited(X).\nweak(X) :- brave(X).\nsmall(book).\nlight(car).\nnew(apple).\nenemy(dave,alice).\nparent(dave,bob).\nlikes(eve,car).\nenemy(frank,alice).\nparent(bob,george).\ncold.\nlikes(alice,car).\nparent(frank,alice).\nclever(bob).\nenemy(frank,eve).\nsibling(bob,eve).\nowns(frank,pencil).\nhot.\ndislikes(frank,apple).\nparent(alice,dave).\nowns(george,ball).\nbusy(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is small.\nFor all X, Y, if person Y is busy and person X is angry, then person Y is a parent of person X.\nFor all X, if there exists V such that person X is excited and person X is a sibling of person V and person V is hungry, then person X is clever.\nFor all Z, if there exists F such that object Z is rough and object F is old, then object Z is heavy.\nFor all X, if there exists V such that person X is brave and person X dislikes object V and object V is smooth, then person X is funny.\nFor all Z, if there exists B such that person Z is bored and person Z likes object B and object B is red, then person Z is bored.\nFor all X, Z, if there exists E such that person Z is funny and person X is clever and object E is dirty, then person X is a sibling of person Z.\nFor all X, if object X is rough and object X is big, then object X is clean.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is excited and person X is hungry, then person X is angry.\nFor all X, Y, if person X is curious and person Y is curious, then person X is a sibling of person Y.\nFor all X, Y, if person X is tired and object Y is hard, then person X likes object Y.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is brave, then person X is weak.\n\nAnd the following facts:\nbook is small.\ncar is light.\napple is new.\ndave is an enemy of alice.\ndave is a parent of bob.\neve likes car.\nfrank is an enemy of alice.\nbob is a parent of george.\nit is cold.\nalice likes car.\nfrank is a parent of alice.\nbob is clever.\nfrank is an enemy of eve.\nbob is a sibling of eve.\nfrank owns pencil.\nit is hot.\nfrank dislikes apple.\nalice is a parent of dave.\ngeorge owns ball.\neve is busy.\n\nQUESTION:\nCould book is new explain book is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 603,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "small(X) :- rough(X).\nwet(Y) :- new(Y), likes(U,Y), curious(U).\nangry(Y) :- brave(Y), owns(Y,U), big(U).\nhappy(Z) :- weak(Z), likes(Z,B), heavy(B).\nsoft(X) :- soft(X), wet(B).\ntired(Z) :- excited(Z), friend(Z,B), curious(B).\nclean(X) :- old(X), wet(X).\nbig(X) :- hard(X).\ncurious(X) :- excited(X).\nowns(X,Y) :- angry(X), wet(Y).\nsibling(X,Y) :- tired(X), friendly(Y), friend(X,Y).\nhungry(X) :- funny(X), strong(X).\nparent(X,Y) :- bored(X), happy(Y).\nexcited(X) :- happy(X).\nsad(X) :- excited(X), bored(X).\nrough(phone).\nsoft(apple).\nsibling(eve,frank).\nlikes(frank,apple).\nowns(frank,ball).\nparent(alice,george).\nclean(car).\nheavy(pencil).\nparent(eve,bob).\nlikes(alice,phone).\nowns(alice,ball).\nlikes(george,ball).\ndirty(ball).\ndislikes(george,apple).\nlikes(dave,car).\nenemy(bob,frank).\nsibling(carol,george).\ndislikes(dave,pencil).\nstrong(frank).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is small.\nFor all Y, if there exists U such that object Y is new and person U likes object Y and person U is curious, then object Y is wet.\nFor all Y, if there exists U such that person Y is brave and person Y owns object U and object U is big, then person Y is angry.\nFor all Z, if there exists B such that person Z is weak and person Z likes object B and object B is heavy, then person Z is happy.\nFor all X, if there exists B such that object X is soft and object B is wet, then object X is soft.\nFor all Z, if there exists B such that person Z is excited and person Z is a friend of person B and person B is curious, then person Z is tired.\nFor all X, if object X is old and object X is wet, then object X is clean.\nFor all X, if object X is hard, then object X is big.\nFor all X, if person X is excited, then person X is curious.\nFor all X, Y, if person X is angry and object Y is wet, then person X owns object Y.\nFor all X, Y, if person X is tired and person Y is friendly and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if person X is funny and person X is strong, then person X is hungry.\nFor all X, Y, if person X is bored and person Y is happy, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited and person X is bored, then person X is sad.\n\nAnd the following facts:\nphone is rough.\napple is soft.\neve is a sibling of frank.\nfrank likes apple.\nfrank owns ball.\nalice is a parent of george.\ncar is clean.\npencil is heavy.\neve is a parent of bob.\nalice likes phone.\nalice owns ball.\ngeorge likes ball.\nball is dirty.\ngeorge dislikes apple.\ndave likes car.\nbob is an enemy of frank.\ncarol is a sibling of george.\ndave dislikes pencil.\nfrank is strong.\nfrank is sad.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 604,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "tall(eve).",
    "c": "small(X) :- rough(X).\nwet(Y) :- new(Y), likes(U,Y), curious(U).\nangry(Y) :- brave(Y), owns(Y,U), big(U).\nhappy(Z) :- weak(Z), likes(Z,B), heavy(B).\nsoft(X) :- soft(X), wet(B).\ntired(Z) :- excited(Z), friend(Z,B), curious(B).\nclean(X) :- old(X), wet(X).\nbig(X) :- hard(X).\ncurious(X) :- excited(X).\nowns(X,Y) :- angry(X), wet(Y).\nsibling(X,Y) :- tired(X), friendly(Y), friend(X,Y).\nhungry(X) :- funny(X), strong(X).\nparent(X,Y) :- bored(X), happy(Y).\nexcited(X) :- happy(X).\nsad(X) :- excited(X), bored(X).\nrough(phone).\nsoft(apple).\nsibling(eve,frank).\nlikes(frank,apple).\nowns(frank,ball).\nparent(alice,george).\nclean(car).\nheavy(pencil).\nparent(eve,bob).\nlikes(alice,phone).\nowns(alice,ball).\nlikes(george,ball).\ndirty(ball).\ndislikes(george,apple).\nlikes(dave,car).\nenemy(bob,frank).\nsibling(carol,george).\ndislikes(dave,pencil).\nstrong(frank).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is small.\nFor all Y, if there exists U such that object Y is new and person U likes object Y and person U is curious, then object Y is wet.\nFor all Y, if there exists U such that person Y is brave and person Y owns object U and object U is big, then person Y is angry.\nFor all Z, if there exists B such that person Z is weak and person Z likes object B and object B is heavy, then person Z is happy.\nFor all X, if there exists B such that object X is soft and object B is wet, then object X is soft.\nFor all Z, if there exists B such that person Z is excited and person Z is a friend of person B and person B is curious, then person Z is tired.\nFor all X, if object X is old and object X is wet, then object X is clean.\nFor all X, if object X is hard, then object X is big.\nFor all X, if person X is excited, then person X is curious.\nFor all X, Y, if person X is angry and object Y is wet, then person X owns object Y.\nFor all X, Y, if person X is tired and person Y is friendly and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if person X is funny and person X is strong, then person X is hungry.\nFor all X, Y, if person X is bored and person Y is happy, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited and person X is bored, then person X is sad.\n\nAnd the following facts:\nphone is rough.\napple is soft.\neve is a sibling of frank.\nfrank likes apple.\nfrank owns ball.\nalice is a parent of george.\ncar is clean.\npencil is heavy.\neve is a parent of bob.\nalice likes phone.\nalice owns ball.\ngeorge likes ball.\nball is dirty.\ngeorge dislikes apple.\ndave likes car.\nbob is an enemy of frank.\ncarol is a sibling of george.\ndave dislikes pencil.\nfrank is strong.\nfrank is sad.\n\nQUESTION:\nIs eve is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 605,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "small(X) :- rough(X).\nwet(Y) :- new(Y), likes(U,Y), curious(U).\nangry(Y) :- brave(Y), owns(Y,U), big(U).\nhappy(Z) :- weak(Z), likes(Z,B), heavy(B).\nsoft(X) :- soft(X), wet(B).\ntired(Z) :- excited(Z), friend(Z,B), curious(B).\nclean(X) :- old(X), wet(X).\nbig(X) :- hard(X).\ncurious(X) :- excited(X).\nowns(X,Y) :- angry(X), wet(Y).\nsibling(X,Y) :- tired(X), friendly(Y), friend(X,Y).\nhungry(X) :- funny(X), strong(X).\nparent(X,Y) :- bored(X), happy(Y).\nexcited(X) :- happy(X).\nsad(X) :- excited(X), bored(X).\nsmall(phone).\nsoft(apple).\nsibling(eve,frank).\nlikes(frank,apple).\nowns(frank,ball).\nparent(alice,george).\nclean(car).\nheavy(pencil).\nparent(eve,bob).\nlikes(alice,phone).\nowns(alice,ball).\nlikes(george,ball).\ndirty(ball).\ndislikes(george,apple).\nlikes(dave,car).\nenemy(bob,frank).\nsibling(carol,george).\ndislikes(dave,pencil).\nstrong(frank).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is small.\nFor all Y, if there exists U such that object Y is new and person U likes object Y and person U is curious, then object Y is wet.\nFor all Y, if there exists U such that person Y is brave and person Y owns object U and object U is big, then person Y is angry.\nFor all Z, if there exists B such that person Z is weak and person Z likes object B and object B is heavy, then person Z is happy.\nFor all X, if there exists B such that object X is soft and object B is wet, then object X is soft.\nFor all Z, if there exists B such that person Z is excited and person Z is a friend of person B and person B is curious, then person Z is tired.\nFor all X, if object X is old and object X is wet, then object X is clean.\nFor all X, if object X is hard, then object X is big.\nFor all X, if person X is excited, then person X is curious.\nFor all X, Y, if person X is angry and object Y is wet, then person X owns object Y.\nFor all X, Y, if person X is tired and person Y is friendly and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if person X is funny and person X is strong, then person X is hungry.\nFor all X, Y, if person X is bored and person Y is happy, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited and person X is bored, then person X is sad.\n\nAnd the following facts:\nphone is small.\napple is soft.\neve is a sibling of frank.\nfrank likes apple.\nfrank owns ball.\nalice is a parent of george.\ncar is clean.\npencil is heavy.\neve is a parent of bob.\nalice likes phone.\nalice owns ball.\ngeorge likes ball.\nball is dirty.\ngeorge dislikes apple.\ndave likes car.\nbob is an enemy of frank.\ncarol is a sibling of george.\ndave dislikes pencil.\nfrank is strong.\nfrank is sad.\n\nQUESTION:\nCould phone is rough explain phone is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 606,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(carol).",
    "c": "small(X) :- rough(X).\nwet(Y) :- new(Y), likes(U,Y), curious(U).\nangry(Y) :- brave(Y), owns(Y,U), big(U).\nhappy(Z) :- weak(Z), likes(Z,B), heavy(B).\nsoft(X) :- soft(X), wet(B).\ntired(Z) :- excited(Z), friend(Z,B), curious(B).\nclean(X) :- old(X), wet(X).\nbig(X) :- hard(X).\ncurious(X) :- excited(X).\nowns(X,Y) :- angry(X), wet(Y).\nsibling(X,Y) :- tired(X), friendly(Y), friend(X,Y).\nhungry(X) :- funny(X), strong(X).\nparent(X,Y) :- bored(X), happy(Y).\nexcited(X) :- happy(X).\nsad(X) :- excited(X), bored(X).\nsmall(phone).\nsoft(apple).\nsibling(eve,frank).\nlikes(frank,apple).\nowns(frank,ball).\nparent(alice,george).\nclean(car).\nheavy(pencil).\nparent(eve,bob).\nlikes(alice,phone).\nowns(alice,ball).\nlikes(george,ball).\ndirty(ball).\ndislikes(george,apple).\nlikes(dave,car).\nenemy(bob,frank).\nsibling(carol,george).\ndislikes(dave,pencil).\nstrong(frank).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is small.\nFor all Y, if there exists U such that object Y is new and person U likes object Y and person U is curious, then object Y is wet.\nFor all Y, if there exists U such that person Y is brave and person Y owns object U and object U is big, then person Y is angry.\nFor all Z, if there exists B such that person Z is weak and person Z likes object B and object B is heavy, then person Z is happy.\nFor all X, if there exists B such that object X is soft and object B is wet, then object X is soft.\nFor all Z, if there exists B such that person Z is excited and person Z is a friend of person B and person B is curious, then person Z is tired.\nFor all X, if object X is old and object X is wet, then object X is clean.\nFor all X, if object X is hard, then object X is big.\nFor all X, if person X is excited, then person X is curious.\nFor all X, Y, if person X is angry and object Y is wet, then person X owns object Y.\nFor all X, Y, if person X is tired and person Y is friendly and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if person X is funny and person X is strong, then person X is hungry.\nFor all X, Y, if person X is bored and person Y is happy, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is excited and person X is bored, then person X is sad.\n\nAnd the following facts:\nphone is small.\napple is soft.\neve is a sibling of frank.\nfrank likes apple.\nfrank owns ball.\nalice is a parent of george.\ncar is clean.\npencil is heavy.\neve is a parent of bob.\nalice likes phone.\nalice owns ball.\ngeorge likes ball.\nball is dirty.\ngeorge dislikes apple.\ndave likes car.\nbob is an enemy of frank.\ncarol is a sibling of george.\ndave dislikes pencil.\nfrank is strong.\nfrank is sad.\n\nQUESTION:\nCould carol is tired explain phone is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 607,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clean(car).",
    "c": "old(X) :- new(X).\nlight(X) :- old(X).\nold(X) :- light(X).\nsmooth(X) :- old(X).\nclean(X) :- smooth(X).\ntired(Y) :- tall(Y), enemy(Y,B), brave(B).\nstrong(Z) :- sad(Z), dislikes(Z,A), red(A).\nrough(X) :- rough(X).\nweak(Y) :- busy(Y), sibling(Y,B), tired(B).\nhappy(Y) :- happy(Y), friend(Y,V), sad(V).\nowns(X,Y) :- hungry(X), rough(Y).\ndislikes(X,Y) :- busy(X), rough(Y), likes(X,Y).\nangry(X) :- calm(X), tired(X).\nexcited(X) :- busy(X), calm(X).\ntired(X) :- hungry(X).\nnew(car).\nowns(george,car).\nlikes(bob,book).\nhungry(alice).\nowns(alice,car).\ntired(alice).\nfriend(carol,alice).\nfriendly(frank).\ntired(dave).\nenemy(alice,carol).\nowns(frank,phone).\nlikes(eve,car).\nsmall(book).\ndislikes(frank,apple).\nhard(book).\nclever(eve).\ndislikes(eve,ball).\nsibling(george,alice).\nfriend(alice,frank).\ntall(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all Y, if there exists B such that person Y is tall and person Y is an enemy of person B and person B is brave, then person Y is tired.\nFor all Z, if there exists A such that person Z is sad and person Z dislikes object A and object A is red, then person Z is strong.\nFor all X, if object X is rough, then object X is rough.\nFor all Y, if there exists B such that person Y is busy and person Y is a sibling of person B and person B is tired, then person Y is weak.\nFor all Y, if there exists V such that person Y is happy and person Y is a friend of person V and person V is sad, then person Y is happy.\nFor all X, Y, if person X is hungry and object Y is rough, then person X owns object Y.\nFor all X, Y, if person X is busy and object Y is rough and person X likes object Y, then person X dislikes object Y.\nFor all X, if person X is calm and person X is tired, then person X is angry.\nFor all X, if person X is busy and person X is calm, then person X is excited.\nFor all X, if person X is hungry, then person X is tired.\n\nAnd the following facts:\ncar is new.\ngeorge owns car.\nbob likes book.\nalice is hungry.\nalice owns car.\nalice is tired.\ncarol is a friend of alice.\nfrank is friendly.\ndave is tired.\nalice is an enemy of carol.\nfrank owns phone.\neve likes car.\nbook is small.\nfrank dislikes apple.\nbook is hard.\neve is clever.\neve dislikes ball.\ngeorge is a sibling of alice.\nalice is a friend of frank.\nalice is tall.\n\nQUESTION:\nIs car is clean true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 608,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(george).",
    "c": "old(X) :- new(X).\nlight(X) :- old(X).\nold(X) :- light(X).\nsmooth(X) :- old(X).\nclean(X) :- smooth(X).\ntired(Y) :- tall(Y), enemy(Y,B), brave(B).\nstrong(Z) :- sad(Z), dislikes(Z,A), red(A).\nrough(X) :- rough(X).\nweak(Y) :- busy(Y), sibling(Y,B), tired(B).\nhappy(Y) :- happy(Y), friend(Y,V), sad(V).\nowns(X,Y) :- hungry(X), rough(Y).\ndislikes(X,Y) :- busy(X), rough(Y), likes(X,Y).\nangry(X) :- calm(X), tired(X).\nexcited(X) :- busy(X), calm(X).\ntired(X) :- hungry(X).\nnew(car).\nowns(george,car).\nlikes(bob,book).\nhungry(alice).\nowns(alice,car).\ntired(alice).\nfriend(carol,alice).\nfriendly(frank).\ntired(dave).\nenemy(alice,carol).\nowns(frank,phone).\nlikes(eve,car).\nsmall(book).\ndislikes(frank,apple).\nhard(book).\nclever(eve).\ndislikes(eve,ball).\nsibling(george,alice).\nfriend(alice,frank).\ntall(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all Y, if there exists B such that person Y is tall and person Y is an enemy of person B and person B is brave, then person Y is tired.\nFor all Z, if there exists A such that person Z is sad and person Z dislikes object A and object A is red, then person Z is strong.\nFor all X, if object X is rough, then object X is rough.\nFor all Y, if there exists B such that person Y is busy and person Y is a sibling of person B and person B is tired, then person Y is weak.\nFor all Y, if there exists V such that person Y is happy and person Y is a friend of person V and person V is sad, then person Y is happy.\nFor all X, Y, if person X is hungry and object Y is rough, then person X owns object Y.\nFor all X, Y, if person X is busy and object Y is rough and person X likes object Y, then person X dislikes object Y.\nFor all X, if person X is calm and person X is tired, then person X is angry.\nFor all X, if person X is busy and person X is calm, then person X is excited.\nFor all X, if person X is hungry, then person X is tired.\n\nAnd the following facts:\ncar is new.\ngeorge owns car.\nbob likes book.\nalice is hungry.\nalice owns car.\nalice is tired.\ncarol is a friend of alice.\nfrank is friendly.\ndave is tired.\nalice is an enemy of carol.\nfrank owns phone.\neve likes car.\nbook is small.\nfrank dislikes apple.\nbook is hard.\neve is clever.\neve dislikes ball.\ngeorge is a sibling of alice.\nalice is a friend of frank.\nalice is tall.\n\nQUESTION:\nIs george is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 609,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(car).",
    "c": "old(X) :- new(X).\nlight(X) :- old(X).\nold(X) :- light(X).\nsmooth(X) :- old(X).\nclean(X) :- smooth(X).\ntired(Y) :- tall(Y), enemy(Y,B), brave(B).\nstrong(Z) :- sad(Z), dislikes(Z,A), red(A).\nrough(X) :- rough(X).\nweak(Y) :- busy(Y), sibling(Y,B), tired(B).\nhappy(Y) :- happy(Y), friend(Y,V), sad(V).\nowns(X,Y) :- hungry(X), rough(Y).\ndislikes(X,Y) :- busy(X), rough(Y), likes(X,Y).\nangry(X) :- calm(X), tired(X).\nexcited(X) :- busy(X), calm(X).\ntired(X) :- hungry(X).\nclean(car).\nowns(george,car).\nlikes(bob,book).\nhungry(alice).\nowns(alice,car).\ntired(alice).\nfriend(carol,alice).\nfriendly(frank).\ntired(dave).\nenemy(alice,carol).\nowns(frank,phone).\nlikes(eve,car).\nsmall(book).\ndislikes(frank,apple).\nhard(book).\nclever(eve).\ndislikes(eve,ball).\nsibling(george,alice).\nfriend(alice,frank).\ntall(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all Y, if there exists B such that person Y is tall and person Y is an enemy of person B and person B is brave, then person Y is tired.\nFor all Z, if there exists A such that person Z is sad and person Z dislikes object A and object A is red, then person Z is strong.\nFor all X, if object X is rough, then object X is rough.\nFor all Y, if there exists B such that person Y is busy and person Y is a sibling of person B and person B is tired, then person Y is weak.\nFor all Y, if there exists V such that person Y is happy and person Y is a friend of person V and person V is sad, then person Y is happy.\nFor all X, Y, if person X is hungry and object Y is rough, then person X owns object Y.\nFor all X, Y, if person X is busy and object Y is rough and person X likes object Y, then person X dislikes object Y.\nFor all X, if person X is calm and person X is tired, then person X is angry.\nFor all X, if person X is busy and person X is calm, then person X is excited.\nFor all X, if person X is hungry, then person X is tired.\n\nAnd the following facts:\ncar is clean.\ngeorge owns car.\nbob likes book.\nalice is hungry.\nalice owns car.\nalice is tired.\ncarol is a friend of alice.\nfrank is friendly.\ndave is tired.\nalice is an enemy of carol.\nfrank owns phone.\neve likes car.\nbook is small.\nfrank dislikes apple.\nbook is hard.\neve is clever.\neve dislikes ball.\ngeorge is a sibling of alice.\nalice is a friend of frank.\nalice is tall.\n\nQUESTION:\nCould car is new explain car is clean?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 610,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(apple).",
    "c": "old(X) :- new(X).\nlight(X) :- old(X).\nold(X) :- light(X).\nsmooth(X) :- old(X).\nclean(X) :- smooth(X).\ntired(Y) :- tall(Y), enemy(Y,B), brave(B).\nstrong(Z) :- sad(Z), dislikes(Z,A), red(A).\nrough(X) :- rough(X).\nweak(Y) :- busy(Y), sibling(Y,B), tired(B).\nhappy(Y) :- happy(Y), friend(Y,V), sad(V).\nowns(X,Y) :- hungry(X), rough(Y).\ndislikes(X,Y) :- busy(X), rough(Y), likes(X,Y).\nangry(X) :- calm(X), tired(X).\nexcited(X) :- busy(X), calm(X).\ntired(X) :- hungry(X).\nclean(car).\nowns(george,car).\nlikes(bob,book).\nhungry(alice).\nowns(alice,car).\ntired(alice).\nfriend(carol,alice).\nfriendly(frank).\ntired(dave).\nenemy(alice,carol).\nowns(frank,phone).\nlikes(eve,car).\nsmall(book).\ndislikes(frank,apple).\nhard(book).\nclever(eve).\ndislikes(eve,ball).\nsibling(george,alice).\nfriend(alice,frank).\ntall(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all Y, if there exists B such that person Y is tall and person Y is an enemy of person B and person B is brave, then person Y is tired.\nFor all Z, if there exists A such that person Z is sad and person Z dislikes object A and object A is red, then person Z is strong.\nFor all X, if object X is rough, then object X is rough.\nFor all Y, if there exists B such that person Y is busy and person Y is a sibling of person B and person B is tired, then person Y is weak.\nFor all Y, if there exists V such that person Y is happy and person Y is a friend of person V and person V is sad, then person Y is happy.\nFor all X, Y, if person X is hungry and object Y is rough, then person X owns object Y.\nFor all X, Y, if person X is busy and object Y is rough and person X likes object Y, then person X dislikes object Y.\nFor all X, if person X is calm and person X is tired, then person X is angry.\nFor all X, if person X is busy and person X is calm, then person X is excited.\nFor all X, if person X is hungry, then person X is tired.\n\nAnd the following facts:\ncar is clean.\ngeorge owns car.\nbob likes book.\nalice is hungry.\nalice owns car.\nalice is tired.\ncarol is a friend of alice.\nfrank is friendly.\ndave is tired.\nalice is an enemy of carol.\nfrank owns phone.\neve likes car.\nbook is small.\nfrank dislikes apple.\nbook is hard.\neve is clever.\neve dislikes ball.\ngeorge is a sibling of alice.\nalice is a friend of frank.\nalice is tall.\n\nQUESTION:\nCould apple is big explain car is clean?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 611,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "angry(george).",
    "c": "busy(X) :- curious(X).\ncurious(X) :- busy(X).\nclever(X) :- curious(X).\nbrave(X) :- clever(X).\nangry(X) :- brave(X).\nparent(Y,Z) :- friendly(Y), excited(Z), enemy(Z,U).\nlight(X) :- new(X).\nbig(Z) :- heavy(Z), likes(V,Z), hungry(V).\nexcited(Z) :- friendly(Z), rough(F).\nhungry(Y) :- happy(Y), likes(Y,A), smooth(A).\nhappy(X) :- strong(X), excited(X).\nbored(X) :- strong(X).\ncalm(X) :- friendly(X), strong(X).\nhard(X) :- soft(X), smooth(X).\nstrong(X) :- friendly(X), bored(X).\ncurious(george).\nhappy(frank).\ndirty(phone).\nsibling(eve,george).\nsibling(eve,carol).\nlikes(eve,ball).\nnew(book).\nheavy(phone).\nlikes(george,phone).\ndislikes(frank,apple).\nenemy(dave,eve).\nweak(alice).\nenemy(bob,alice).\nparent(eve,alice).\nowns(dave,phone).\ndislikes(eve,book).\nfriend(alice,dave).\nparent(george,frank).\nsibling(dave,bob).\nhungry(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all Y, Z, if there exists U such that person Y is friendly and person Z is excited and person Z is an enemy of person U, then person Y is a parent of person Z.\nFor all X, if object X is new, then object X is light.\nFor all Z, if there exists V such that object Z is heavy and person V likes object Z and person V is hungry, then object Z is big.\nFor all Z, if there exists F such that person Z is friendly and object F is rough, then person Z is excited.\nFor all Y, if there exists A such that person Y is happy and person Y likes object A and object A is smooth, then person Y is hungry.\nFor all X, if person X is strong and person X is excited, then person X is happy.\nFor all X, if person X is strong, then person X is bored.\nFor all X, if person X is friendly and person X is strong, then person X is calm.\nFor all X, if object X is soft and object X is smooth, then object X is hard.\nFor all X, if person X is friendly and person X is bored, then person X is strong.\n\nAnd the following facts:\ngeorge is curious.\nfrank is happy.\nphone is dirty.\neve is a sibling of george.\neve is a sibling of carol.\neve likes ball.\nbook is new.\nphone is heavy.\ngeorge likes phone.\nfrank dislikes apple.\ndave is an enemy of eve.\nalice is weak.\nbob is an enemy of alice.\neve is a parent of alice.\ndave owns phone.\neve dislikes book.\nalice is a friend of dave.\ngeorge is a parent of frank.\ndave is a sibling of bob.\nalice is hungry.\n\nQUESTION:\nIs george is angry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 612,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "strong(frank).",
    "c": "busy(X) :- curious(X).\ncurious(X) :- busy(X).\nclever(X) :- curious(X).\nbrave(X) :- clever(X).\nangry(X) :- brave(X).\nparent(Y,Z) :- friendly(Y), excited(Z), enemy(Z,U).\nlight(X) :- new(X).\nbig(Z) :- heavy(Z), likes(V,Z), hungry(V).\nexcited(Z) :- friendly(Z), rough(F).\nhungry(Y) :- happy(Y), likes(Y,A), smooth(A).\nhappy(X) :- strong(X), excited(X).\nbored(X) :- strong(X).\ncalm(X) :- friendly(X), strong(X).\nhard(X) :- soft(X), smooth(X).\nstrong(X) :- friendly(X), bored(X).\ncurious(george).\nhappy(frank).\ndirty(phone).\nsibling(eve,george).\nsibling(eve,carol).\nlikes(eve,ball).\nnew(book).\nheavy(phone).\nlikes(george,phone).\ndislikes(frank,apple).\nenemy(dave,eve).\nweak(alice).\nenemy(bob,alice).\nparent(eve,alice).\nowns(dave,phone).\ndislikes(eve,book).\nfriend(alice,dave).\nparent(george,frank).\nsibling(dave,bob).\nhungry(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all Y, Z, if there exists U such that person Y is friendly and person Z is excited and person Z is an enemy of person U, then person Y is a parent of person Z.\nFor all X, if object X is new, then object X is light.\nFor all Z, if there exists V such that object Z is heavy and person V likes object Z and person V is hungry, then object Z is big.\nFor all Z, if there exists F such that person Z is friendly and object F is rough, then person Z is excited.\nFor all Y, if there exists A such that person Y is happy and person Y likes object A and object A is smooth, then person Y is hungry.\nFor all X, if person X is strong and person X is excited, then person X is happy.\nFor all X, if person X is strong, then person X is bored.\nFor all X, if person X is friendly and person X is strong, then person X is calm.\nFor all X, if object X is soft and object X is smooth, then object X is hard.\nFor all X, if person X is friendly and person X is bored, then person X is strong.\n\nAnd the following facts:\ngeorge is curious.\nfrank is happy.\nphone is dirty.\neve is a sibling of george.\neve is a sibling of carol.\neve likes ball.\nbook is new.\nphone is heavy.\ngeorge likes phone.\nfrank dislikes apple.\ndave is an enemy of eve.\nalice is weak.\nbob is an enemy of alice.\neve is a parent of alice.\ndave owns phone.\neve dislikes book.\nalice is a friend of dave.\ngeorge is a parent of frank.\ndave is a sibling of bob.\nalice is hungry.\n\nQUESTION:\nIs frank is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 613,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(george).",
    "c": "busy(X) :- curious(X).\ncurious(X) :- busy(X).\nclever(X) :- curious(X).\nbrave(X) :- clever(X).\nangry(X) :- brave(X).\nparent(Y,Z) :- friendly(Y), excited(Z), enemy(Z,U).\nlight(X) :- new(X).\nbig(Z) :- heavy(Z), likes(V,Z), hungry(V).\nexcited(Z) :- friendly(Z), rough(F).\nhungry(Y) :- happy(Y), likes(Y,A), smooth(A).\nhappy(X) :- strong(X), excited(X).\nbored(X) :- strong(X).\ncalm(X) :- friendly(X), strong(X).\nhard(X) :- soft(X), smooth(X).\nstrong(X) :- friendly(X), bored(X).\nangry(george).\nhappy(frank).\ndirty(phone).\nsibling(eve,george).\nsibling(eve,carol).\nlikes(eve,ball).\nnew(book).\nheavy(phone).\nlikes(george,phone).\ndislikes(frank,apple).\nenemy(dave,eve).\nweak(alice).\nenemy(bob,alice).\nparent(eve,alice).\nowns(dave,phone).\ndislikes(eve,book).\nfriend(alice,dave).\nparent(george,frank).\nsibling(dave,bob).\nhungry(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all Y, Z, if there exists U such that person Y is friendly and person Z is excited and person Z is an enemy of person U, then person Y is a parent of person Z.\nFor all X, if object X is new, then object X is light.\nFor all Z, if there exists V such that object Z is heavy and person V likes object Z and person V is hungry, then object Z is big.\nFor all Z, if there exists F such that person Z is friendly and object F is rough, then person Z is excited.\nFor all Y, if there exists A such that person Y is happy and person Y likes object A and object A is smooth, then person Y is hungry.\nFor all X, if person X is strong and person X is excited, then person X is happy.\nFor all X, if person X is strong, then person X is bored.\nFor all X, if person X is friendly and person X is strong, then person X is calm.\nFor all X, if object X is soft and object X is smooth, then object X is hard.\nFor all X, if person X is friendly and person X is bored, then person X is strong.\n\nAnd the following facts:\ngeorge is angry.\nfrank is happy.\nphone is dirty.\neve is a sibling of george.\neve is a sibling of carol.\neve likes ball.\nbook is new.\nphone is heavy.\ngeorge likes phone.\nfrank dislikes apple.\ndave is an enemy of eve.\nalice is weak.\nbob is an enemy of alice.\neve is a parent of alice.\ndave owns phone.\neve dislikes book.\nalice is a friend of dave.\ngeorge is a parent of frank.\ndave is a sibling of bob.\nalice is hungry.\n\nQUESTION:\nCould george is curious explain george is angry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 614,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "red(pencil).",
    "c": "busy(X) :- curious(X).\ncurious(X) :- busy(X).\nclever(X) :- curious(X).\nbrave(X) :- clever(X).\nangry(X) :- brave(X).\nparent(Y,Z) :- friendly(Y), excited(Z), enemy(Z,U).\nlight(X) :- new(X).\nbig(Z) :- heavy(Z), likes(V,Z), hungry(V).\nexcited(Z) :- friendly(Z), rough(F).\nhungry(Y) :- happy(Y), likes(Y,A), smooth(A).\nhappy(X) :- strong(X), excited(X).\nbored(X) :- strong(X).\ncalm(X) :- friendly(X), strong(X).\nhard(X) :- soft(X), smooth(X).\nstrong(X) :- friendly(X), bored(X).\nangry(george).\nhappy(frank).\ndirty(phone).\nsibling(eve,george).\nsibling(eve,carol).\nlikes(eve,ball).\nnew(book).\nheavy(phone).\nlikes(george,phone).\ndislikes(frank,apple).\nenemy(dave,eve).\nweak(alice).\nenemy(bob,alice).\nparent(eve,alice).\nowns(dave,phone).\ndislikes(eve,book).\nfriend(alice,dave).\nparent(george,frank).\nsibling(dave,bob).\nhungry(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all Y, Z, if there exists U such that person Y is friendly and person Z is excited and person Z is an enemy of person U, then person Y is a parent of person Z.\nFor all X, if object X is new, then object X is light.\nFor all Z, if there exists V such that object Z is heavy and person V likes object Z and person V is hungry, then object Z is big.\nFor all Z, if there exists F such that person Z is friendly and object F is rough, then person Z is excited.\nFor all Y, if there exists A such that person Y is happy and person Y likes object A and object A is smooth, then person Y is hungry.\nFor all X, if person X is strong and person X is excited, then person X is happy.\nFor all X, if person X is strong, then person X is bored.\nFor all X, if person X is friendly and person X is strong, then person X is calm.\nFor all X, if object X is soft and object X is smooth, then object X is hard.\nFor all X, if person X is friendly and person X is bored, then person X is strong.\n\nAnd the following facts:\ngeorge is angry.\nfrank is happy.\nphone is dirty.\neve is a sibling of george.\neve is a sibling of carol.\neve likes ball.\nbook is new.\nphone is heavy.\ngeorge likes phone.\nfrank dislikes apple.\ndave is an enemy of eve.\nalice is weak.\nbob is an enemy of alice.\neve is a parent of alice.\ndave owns phone.\neve dislikes book.\nalice is a friend of dave.\ngeorge is a parent of frank.\ndave is a sibling of bob.\nalice is hungry.\n\nQUESTION:\nCould pencil is red explain george is angry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 615,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(frank).",
    "c": "busy(X) :- sad(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nbored(X) :- brave(X).\nexcited(X) :- bored(X).\nwet(Z) :- old(Z), dislikes(U,Z), tired(U).\nsibling(Y,X) :- happy(Y), strong(X), enemy(X,V).\nclean(Y) :- hard(Y), owns(B,Y), angry(B).\ntall(Z) :- friendly(Z), parent(Z,W), strong(W).\nlight(X) :- wet(X).\nold(X) :- dirty(X), dirty(X).\nfunny(X) :- clever(X), tall(X).\nnew(X) :- wet(X).\nsoft(X) :- rough(X).\nheavy(X) :- old(X), big(X).\nsad(frank).\nlikes(frank,ball).\nparent(dave,george).\nenemy(george,carol).\nowns(carol,phone).\nsibling(eve,carol).\nlikes(bob,ball).\nenemy(dave,bob).\nlikes(alice,phone).\nparent(george,carol).\nlikes(alice,apple).\nfriend(dave,george).\nparent(eve,dave).\nenemy(george,eve).\nweak(frank).\ndislikes(frank,apple).\nowns(frank,pencil).\nlikes(alice,ball).\nenemy(dave,alice).\ndirty(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all Z, if there exists U such that object Z is old and person U dislikes object Z and person U is tired, then object Z is wet.\nFor all X, Y, if there exists V such that person Y is happy and person X is strong and person X is an enemy of person V, then person Y is a sibling of person X.\nFor all Y, if there exists B such that object Y is hard and person B owns object Y and person B is angry, then object Y is clean.\nFor all Z, if there exists W such that person Z is friendly and person Z is a parent of person W and person W is strong, then person Z is tall.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is dirty and object X is dirty, then object X is old.\nFor all X, if person X is clever and person X is tall, then person X is funny.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is old and object X is big, then object X is heavy.\n\nAnd the following facts:\nfrank is sad.\nfrank likes ball.\ndave is a parent of george.\ngeorge is an enemy of carol.\ncarol owns phone.\neve is a sibling of carol.\nbob likes ball.\ndave is an enemy of bob.\nalice likes phone.\ngeorge is a parent of carol.\nalice likes apple.\ndave is a friend of george.\neve is a parent of dave.\ngeorge is an enemy of eve.\nfrank is weak.\nfrank dislikes apple.\nfrank owns pencil.\nalice likes ball.\ndave is an enemy of alice.\napple is dirty.\n\nQUESTION:\nIs frank is excited true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 616,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(eve).",
    "c": "busy(X) :- sad(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nbored(X) :- brave(X).\nexcited(X) :- bored(X).\nwet(Z) :- old(Z), dislikes(U,Z), tired(U).\nsibling(Y,X) :- happy(Y), strong(X), enemy(X,V).\nclean(Y) :- hard(Y), owns(B,Y), angry(B).\ntall(Z) :- friendly(Z), parent(Z,W), strong(W).\nlight(X) :- wet(X).\nold(X) :- dirty(X), dirty(X).\nfunny(X) :- clever(X), tall(X).\nnew(X) :- wet(X).\nsoft(X) :- rough(X).\nheavy(X) :- old(X), big(X).\nsad(frank).\nlikes(frank,ball).\nparent(dave,george).\nenemy(george,carol).\nowns(carol,phone).\nsibling(eve,carol).\nlikes(bob,ball).\nenemy(dave,bob).\nlikes(alice,phone).\nparent(george,carol).\nlikes(alice,apple).\nfriend(dave,george).\nparent(eve,dave).\nenemy(george,eve).\nweak(frank).\ndislikes(frank,apple).\nowns(frank,pencil).\nlikes(alice,ball).\nenemy(dave,alice).\ndirty(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all Z, if there exists U such that object Z is old and person U dislikes object Z and person U is tired, then object Z is wet.\nFor all X, Y, if there exists V such that person Y is happy and person X is strong and person X is an enemy of person V, then person Y is a sibling of person X.\nFor all Y, if there exists B such that object Y is hard and person B owns object Y and person B is angry, then object Y is clean.\nFor all Z, if there exists W such that person Z is friendly and person Z is a parent of person W and person W is strong, then person Z is tall.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is dirty and object X is dirty, then object X is old.\nFor all X, if person X is clever and person X is tall, then person X is funny.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is old and object X is big, then object X is heavy.\n\nAnd the following facts:\nfrank is sad.\nfrank likes ball.\ndave is a parent of george.\ngeorge is an enemy of carol.\ncarol owns phone.\neve is a sibling of carol.\nbob likes ball.\ndave is an enemy of bob.\nalice likes phone.\ngeorge is a parent of carol.\nalice likes apple.\ndave is a friend of george.\neve is a parent of dave.\ngeorge is an enemy of eve.\nfrank is weak.\nfrank dislikes apple.\nfrank owns pencil.\nalice likes ball.\ndave is an enemy of alice.\napple is dirty.\n\nQUESTION:\nIs eve is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 617,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(frank).",
    "c": "busy(X) :- sad(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nbored(X) :- brave(X).\nexcited(X) :- bored(X).\nwet(Z) :- old(Z), dislikes(U,Z), tired(U).\nsibling(Y,X) :- happy(Y), strong(X), enemy(X,V).\nclean(Y) :- hard(Y), owns(B,Y), angry(B).\ntall(Z) :- friendly(Z), parent(Z,W), strong(W).\nlight(X) :- wet(X).\nold(X) :- dirty(X), dirty(X).\nfunny(X) :- clever(X), tall(X).\nnew(X) :- wet(X).\nsoft(X) :- rough(X).\nheavy(X) :- old(X), big(X).\nexcited(frank).\nlikes(frank,ball).\nparent(dave,george).\nenemy(george,carol).\nowns(carol,phone).\nsibling(eve,carol).\nlikes(bob,ball).\nenemy(dave,bob).\nlikes(alice,phone).\nparent(george,carol).\nlikes(alice,apple).\nfriend(dave,george).\nparent(eve,dave).\nenemy(george,eve).\nweak(frank).\ndislikes(frank,apple).\nowns(frank,pencil).\nlikes(alice,ball).\nenemy(dave,alice).\ndirty(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all Z, if there exists U such that object Z is old and person U dislikes object Z and person U is tired, then object Z is wet.\nFor all X, Y, if there exists V such that person Y is happy and person X is strong and person X is an enemy of person V, then person Y is a sibling of person X.\nFor all Y, if there exists B such that object Y is hard and person B owns object Y and person B is angry, then object Y is clean.\nFor all Z, if there exists W such that person Z is friendly and person Z is a parent of person W and person W is strong, then person Z is tall.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is dirty and object X is dirty, then object X is old.\nFor all X, if person X is clever and person X is tall, then person X is funny.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is old and object X is big, then object X is heavy.\n\nAnd the following facts:\nfrank is excited.\nfrank likes ball.\ndave is a parent of george.\ngeorge is an enemy of carol.\ncarol owns phone.\neve is a sibling of carol.\nbob likes ball.\ndave is an enemy of bob.\nalice likes phone.\ngeorge is a parent of carol.\nalice likes apple.\ndave is a friend of george.\neve is a parent of dave.\ngeorge is an enemy of eve.\nfrank is weak.\nfrank dislikes apple.\nfrank owns pencil.\nalice likes ball.\ndave is an enemy of alice.\napple is dirty.\n\nQUESTION:\nCould frank is sad explain frank is excited?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 618,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(frank).",
    "c": "busy(X) :- sad(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nbored(X) :- brave(X).\nexcited(X) :- bored(X).\nwet(Z) :- old(Z), dislikes(U,Z), tired(U).\nsibling(Y,X) :- happy(Y), strong(X), enemy(X,V).\nclean(Y) :- hard(Y), owns(B,Y), angry(B).\ntall(Z) :- friendly(Z), parent(Z,W), strong(W).\nlight(X) :- wet(X).\nold(X) :- dirty(X), dirty(X).\nfunny(X) :- clever(X), tall(X).\nnew(X) :- wet(X).\nsoft(X) :- rough(X).\nheavy(X) :- old(X), big(X).\nexcited(frank).\nlikes(frank,ball).\nparent(dave,george).\nenemy(george,carol).\nowns(carol,phone).\nsibling(eve,carol).\nlikes(bob,ball).\nenemy(dave,bob).\nlikes(alice,phone).\nparent(george,carol).\nlikes(alice,apple).\nfriend(dave,george).\nparent(eve,dave).\nenemy(george,eve).\nweak(frank).\ndislikes(frank,apple).\nowns(frank,pencil).\nlikes(alice,ball).\nenemy(dave,alice).\ndirty(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all Z, if there exists U such that object Z is old and person U dislikes object Z and person U is tired, then object Z is wet.\nFor all X, Y, if there exists V such that person Y is happy and person X is strong and person X is an enemy of person V, then person Y is a sibling of person X.\nFor all Y, if there exists B such that object Y is hard and person B owns object Y and person B is angry, then object Y is clean.\nFor all Z, if there exists W such that person Z is friendly and person Z is a parent of person W and person W is strong, then person Z is tall.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is dirty and object X is dirty, then object X is old.\nFor all X, if person X is clever and person X is tall, then person X is funny.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is old and object X is big, then object X is heavy.\n\nAnd the following facts:\nfrank is excited.\nfrank likes ball.\ndave is a parent of george.\ngeorge is an enemy of carol.\ncarol owns phone.\neve is a sibling of carol.\nbob likes ball.\ndave is an enemy of bob.\nalice likes phone.\ngeorge is a parent of carol.\nalice likes apple.\ndave is a friend of george.\neve is a parent of dave.\ngeorge is an enemy of eve.\nfrank is weak.\nfrank dislikes apple.\nfrank owns pencil.\nalice likes ball.\ndave is an enemy of alice.\napple is dirty.\n\nQUESTION:\nCould frank is happy explain frank is excited?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 619,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "bored(frank).",
    "c": "weak(X) :- tall(X).\nfriendly(X) :- weak(X).\nhappy(X) :- friendly(X).\nbrave(X) :- happy(X).\nbored(X) :- brave(X).\nwet(X) :- new(X), dislikes(B,X), curious(B).\ndislikes(Z,X) :- angry(Z), soft(X), sibling(Z,W).\nenemy(Y,X) :- clever(Y), strong(X).\nexcited(Y) :- sad(Y), enemy(Y,V), excited(V).\nsibling(X,Y) :- sad(Y), funny(X), friend(X,A).\nsad(X) :- excited(X).\nold(X) :- clean(X).\nnew(X) :- small(X), soft(X).\nsibling(X,Y) :- sad(X), tired(Y).\nred(X) :- heavy(X).\ntall(frank).\ndislikes(eve,book).\nlikes(frank,car).\ndislikes(frank,phone).\ndirty(pencil).\nfriend(eve,carol).\nparent(bob,george).\nowns(carol,pencil).\nhungry(dave).\nsoft(phone).\nfriend(carol,alice).\nsibling(dave,george).\nbig(pencil).\nenemy(frank,eve).\nsad(bob).\nfriend(bob,alice).\nsibling(george,eve).\nclean(car).\nsibling(carol,eve).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if there exists B such that object X is new and person B dislikes object X and person B is curious, then object X is wet.\nFor all X, Z, if there exists W such that person Z is angry and object X is soft and person Z is a sibling of person W, then person Z dislikes object X.\nFor all X, Y, if person Y is clever and person X is strong, then person Y is an enemy of person X.\nFor all Y, if there exists V such that person Y is sad and person Y is an enemy of person V and person V is excited, then person Y is excited.\nFor all X, Y, if there exists A such that person Y is sad and person X is funny and person X is a friend of person A, then person X is a sibling of person Y.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is small and object X is soft, then object X is new.\nFor all X, Y, if person X is sad and person Y is tired, then person X is a sibling of person Y.\nFor all X, if object X is heavy, then object X is red.\n\nAnd the following facts:\nfrank is tall.\neve dislikes book.\nfrank likes car.\nfrank dislikes phone.\npencil is dirty.\neve is a friend of carol.\nbob is a parent of george.\ncarol owns pencil.\ndave is hungry.\nphone is soft.\ncarol is a friend of alice.\ndave is a sibling of george.\npencil is big.\nfrank is an enemy of eve.\nbob is sad.\nbob is a friend of alice.\ngeorge is a sibling of eve.\ncar is clean.\ncarol is a sibling of eve.\ncarol is a parent of eve.\n\nQUESTION:\nIs frank is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 620,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(book).",
    "c": "weak(X) :- tall(X).\nfriendly(X) :- weak(X).\nhappy(X) :- friendly(X).\nbrave(X) :- happy(X).\nbored(X) :- brave(X).\nwet(X) :- new(X), dislikes(B,X), curious(B).\ndislikes(Z,X) :- angry(Z), soft(X), sibling(Z,W).\nenemy(Y,X) :- clever(Y), strong(X).\nexcited(Y) :- sad(Y), enemy(Y,V), excited(V).\nsibling(X,Y) :- sad(Y), funny(X), friend(X,A).\nsad(X) :- excited(X).\nold(X) :- clean(X).\nnew(X) :- small(X), soft(X).\nsibling(X,Y) :- sad(X), tired(Y).\nred(X) :- heavy(X).\ntall(frank).\ndislikes(eve,book).\nlikes(frank,car).\ndislikes(frank,phone).\ndirty(pencil).\nfriend(eve,carol).\nparent(bob,george).\nowns(carol,pencil).\nhungry(dave).\nsoft(phone).\nfriend(carol,alice).\nsibling(dave,george).\nbig(pencil).\nenemy(frank,eve).\nsad(bob).\nfriend(bob,alice).\nsibling(george,eve).\nclean(car).\nsibling(carol,eve).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if there exists B such that object X is new and person B dislikes object X and person B is curious, then object X is wet.\nFor all X, Z, if there exists W such that person Z is angry and object X is soft and person Z is a sibling of person W, then person Z dislikes object X.\nFor all X, Y, if person Y is clever and person X is strong, then person Y is an enemy of person X.\nFor all Y, if there exists V such that person Y is sad and person Y is an enemy of person V and person V is excited, then person Y is excited.\nFor all X, Y, if there exists A such that person Y is sad and person X is funny and person X is a friend of person A, then person X is a sibling of person Y.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is small and object X is soft, then object X is new.\nFor all X, Y, if person X is sad and person Y is tired, then person X is a sibling of person Y.\nFor all X, if object X is heavy, then object X is red.\n\nAnd the following facts:\nfrank is tall.\neve dislikes book.\nfrank likes car.\nfrank dislikes phone.\npencil is dirty.\neve is a friend of carol.\nbob is a parent of george.\ncarol owns pencil.\ndave is hungry.\nphone is soft.\ncarol is a friend of alice.\ndave is a sibling of george.\npencil is big.\nfrank is an enemy of eve.\nbob is sad.\nbob is a friend of alice.\ngeorge is a sibling of eve.\ncar is clean.\ncarol is a sibling of eve.\ncarol is a parent of eve.\n\nQUESTION:\nIs book is dirty true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 621,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(frank).",
    "c": "weak(X) :- tall(X).\nfriendly(X) :- weak(X).\nhappy(X) :- friendly(X).\nbrave(X) :- happy(X).\nbored(X) :- brave(X).\nwet(X) :- new(X), dislikes(B,X), curious(B).\ndislikes(Z,X) :- angry(Z), soft(X), sibling(Z,W).\nenemy(Y,X) :- clever(Y), strong(X).\nexcited(Y) :- sad(Y), enemy(Y,V), excited(V).\nsibling(X,Y) :- sad(Y), funny(X), friend(X,A).\nsad(X) :- excited(X).\nold(X) :- clean(X).\nnew(X) :- small(X), soft(X).\nsibling(X,Y) :- sad(X), tired(Y).\nred(X) :- heavy(X).\nbored(frank).\ndislikes(eve,book).\nlikes(frank,car).\ndislikes(frank,phone).\ndirty(pencil).\nfriend(eve,carol).\nparent(bob,george).\nowns(carol,pencil).\nhungry(dave).\nsoft(phone).\nfriend(carol,alice).\nsibling(dave,george).\nbig(pencil).\nenemy(frank,eve).\nsad(bob).\nfriend(bob,alice).\nsibling(george,eve).\nclean(car).\nsibling(carol,eve).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if there exists B such that object X is new and person B dislikes object X and person B is curious, then object X is wet.\nFor all X, Z, if there exists W such that person Z is angry and object X is soft and person Z is a sibling of person W, then person Z dislikes object X.\nFor all X, Y, if person Y is clever and person X is strong, then person Y is an enemy of person X.\nFor all Y, if there exists V such that person Y is sad and person Y is an enemy of person V and person V is excited, then person Y is excited.\nFor all X, Y, if there exists A such that person Y is sad and person X is funny and person X is a friend of person A, then person X is a sibling of person Y.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is small and object X is soft, then object X is new.\nFor all X, Y, if person X is sad and person Y is tired, then person X is a sibling of person Y.\nFor all X, if object X is heavy, then object X is red.\n\nAnd the following facts:\nfrank is bored.\neve dislikes book.\nfrank likes car.\nfrank dislikes phone.\npencil is dirty.\neve is a friend of carol.\nbob is a parent of george.\ncarol owns pencil.\ndave is hungry.\nphone is soft.\ncarol is a friend of alice.\ndave is a sibling of george.\npencil is big.\nfrank is an enemy of eve.\nbob is sad.\nbob is a friend of alice.\ngeorge is a sibling of eve.\ncar is clean.\ncarol is a sibling of eve.\ncarol is a parent of eve.\n\nQUESTION:\nCould frank is tall explain frank is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 622,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "brave(george).",
    "c": "weak(X) :- tall(X).\nfriendly(X) :- weak(X).\nhappy(X) :- friendly(X).\nbrave(X) :- happy(X).\nbored(X) :- brave(X).\nwet(X) :- new(X), dislikes(B,X), curious(B).\ndislikes(Z,X) :- angry(Z), soft(X), sibling(Z,W).\nenemy(Y,X) :- clever(Y), strong(X).\nexcited(Y) :- sad(Y), enemy(Y,V), excited(V).\nsibling(X,Y) :- sad(Y), funny(X), friend(X,A).\nsad(X) :- excited(X).\nold(X) :- clean(X).\nnew(X) :- small(X), soft(X).\nsibling(X,Y) :- sad(X), tired(Y).\nred(X) :- heavy(X).\nbored(frank).\ndislikes(eve,book).\nlikes(frank,car).\ndislikes(frank,phone).\ndirty(pencil).\nfriend(eve,carol).\nparent(bob,george).\nowns(carol,pencil).\nhungry(dave).\nsoft(phone).\nfriend(carol,alice).\nsibling(dave,george).\nbig(pencil).\nenemy(frank,eve).\nsad(bob).\nfriend(bob,alice).\nsibling(george,eve).\nclean(car).\nsibling(carol,eve).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if there exists B such that object X is new and person B dislikes object X and person B is curious, then object X is wet.\nFor all X, Z, if there exists W such that person Z is angry and object X is soft and person Z is a sibling of person W, then person Z dislikes object X.\nFor all X, Y, if person Y is clever and person X is strong, then person Y is an enemy of person X.\nFor all Y, if there exists V such that person Y is sad and person Y is an enemy of person V and person V is excited, then person Y is excited.\nFor all X, Y, if there exists A such that person Y is sad and person X is funny and person X is a friend of person A, then person X is a sibling of person Y.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is small and object X is soft, then object X is new.\nFor all X, Y, if person X is sad and person Y is tired, then person X is a sibling of person Y.\nFor all X, if object X is heavy, then object X is red.\n\nAnd the following facts:\nfrank is bored.\neve dislikes book.\nfrank likes car.\nfrank dislikes phone.\npencil is dirty.\neve is a friend of carol.\nbob is a parent of george.\ncarol owns pencil.\ndave is hungry.\nphone is soft.\ncarol is a friend of alice.\ndave is a sibling of george.\npencil is big.\nfrank is an enemy of eve.\nbob is sad.\nbob is a friend of alice.\ngeorge is a sibling of eve.\ncar is clean.\ncarol is a sibling of eve.\ncarol is a parent of eve.\n\nQUESTION:\nCould george is brave explain frank is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 623,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(pencil).",
    "c": "old(X) :- heavy(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nbig(X) :- red(X).\nsmall(X) :- big(X).\nheavy(X) :- small(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nsoft(X) :- clean(X).\nnew(X) :- soft(X).\nhungry(Y) :- tall(Y), friend(Y,A), happy(A).\nfriendly(X) :- happy(X), clever(E).\nowns(X,Y) :- weak(X), dirty(Y).\nrough(X) :- light(X).\nparent(X,Y) :- brave(X), weak(Y).\nheavy(pencil).\ncurious(dave).\ntall(eve).\nhungry(frank).\nenemy(frank,eve).\nsibling(dave,frank).\ndislikes(dave,apple).\ndislikes(frank,book).\nowns(carol,phone).\nowns(eve,book).\ntired(bob).\nbored(alice).\nenemy(carol,dave).\nlikes(george,car).\nenemy(alice,carol).\nparent(bob,george).\nsmooth(ball).\nbusy(dave).\nowns(frank,book).\nfriend(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all Y, if there exists A such that person Y is tall and person Y is a friend of person A and person A is happy, then person Y is hungry.\nFor all X, if there exists E such that person X is happy and person E is clever, then person X is friendly.\nFor all X, Y, if person X is weak and object Y is dirty, then person X owns object Y.\nFor all X, if object X is light, then object X is rough.\nFor all X, Y, if person X is brave and person Y is weak, then person X is a parent of person Y.\n\nAnd the following facts:\npencil is heavy.\ndave is curious.\neve is tall.\nfrank is hungry.\nfrank is an enemy of eve.\ndave is a sibling of frank.\ndave dislikes apple.\nfrank dislikes book.\ncarol owns phone.\neve owns book.\nbob is tired.\nalice is bored.\ncarol is an enemy of dave.\ngeorge likes car.\nalice is an enemy of carol.\nbob is a parent of george.\nball is smooth.\ndave is busy.\nfrank owns book.\ndave is a friend of george.\n\nQUESTION:\nIs pencil is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 624,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hard(ball).",
    "c": "old(X) :- heavy(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nbig(X) :- red(X).\nsmall(X) :- big(X).\nheavy(X) :- small(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nsoft(X) :- clean(X).\nnew(X) :- soft(X).\nhungry(Y) :- tall(Y), friend(Y,A), happy(A).\nfriendly(X) :- happy(X), clever(E).\nowns(X,Y) :- weak(X), dirty(Y).\nrough(X) :- light(X).\nparent(X,Y) :- brave(X), weak(Y).\nheavy(pencil).\ncurious(dave).\ntall(eve).\nhungry(frank).\nenemy(frank,eve).\nsibling(dave,frank).\ndislikes(dave,apple).\ndislikes(frank,book).\nowns(carol,phone).\nowns(eve,book).\ntired(bob).\nbored(alice).\nenemy(carol,dave).\nlikes(george,car).\nenemy(alice,carol).\nparent(bob,george).\nsmooth(ball).\nbusy(dave).\nowns(frank,book).\nfriend(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all Y, if there exists A such that person Y is tall and person Y is a friend of person A and person A is happy, then person Y is hungry.\nFor all X, if there exists E such that person X is happy and person E is clever, then person X is friendly.\nFor all X, Y, if person X is weak and object Y is dirty, then person X owns object Y.\nFor all X, if object X is light, then object X is rough.\nFor all X, Y, if person X is brave and person Y is weak, then person X is a parent of person Y.\n\nAnd the following facts:\npencil is heavy.\ndave is curious.\neve is tall.\nfrank is hungry.\nfrank is an enemy of eve.\ndave is a sibling of frank.\ndave dislikes apple.\nfrank dislikes book.\ncarol owns phone.\neve owns book.\nbob is tired.\nalice is bored.\ncarol is an enemy of dave.\ngeorge likes car.\nalice is an enemy of carol.\nbob is a parent of george.\nball is smooth.\ndave is busy.\nfrank owns book.\ndave is a friend of george.\n\nQUESTION:\nIs ball is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 625,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(pencil).",
    "c": "old(X) :- heavy(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nbig(X) :- red(X).\nsmall(X) :- big(X).\nheavy(X) :- small(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nsoft(X) :- clean(X).\nnew(X) :- soft(X).\nhungry(Y) :- tall(Y), friend(Y,A), happy(A).\nfriendly(X) :- happy(X), clever(E).\nowns(X,Y) :- weak(X), dirty(Y).\nrough(X) :- light(X).\nparent(X,Y) :- brave(X), weak(Y).\nnew(pencil).\ncurious(dave).\ntall(eve).\nhungry(frank).\nenemy(frank,eve).\nsibling(dave,frank).\ndislikes(dave,apple).\ndislikes(frank,book).\nowns(carol,phone).\nowns(eve,book).\ntired(bob).\nbored(alice).\nenemy(carol,dave).\nlikes(george,car).\nenemy(alice,carol).\nparent(bob,george).\nsmooth(ball).\nbusy(dave).\nowns(frank,book).\nfriend(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all Y, if there exists A such that person Y is tall and person Y is a friend of person A and person A is happy, then person Y is hungry.\nFor all X, if there exists E such that person X is happy and person E is clever, then person X is friendly.\nFor all X, Y, if person X is weak and object Y is dirty, then person X owns object Y.\nFor all X, if object X is light, then object X is rough.\nFor all X, Y, if person X is brave and person Y is weak, then person X is a parent of person Y.\n\nAnd the following facts:\npencil is new.\ndave is curious.\neve is tall.\nfrank is hungry.\nfrank is an enemy of eve.\ndave is a sibling of frank.\ndave dislikes apple.\nfrank dislikes book.\ncarol owns phone.\neve owns book.\nbob is tired.\nalice is bored.\ncarol is an enemy of dave.\ngeorge likes car.\nalice is an enemy of carol.\nbob is a parent of george.\nball is smooth.\ndave is busy.\nfrank owns book.\ndave is a friend of george.\n\nQUESTION:\nCould pencil is heavy explain pencil is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 626,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(ball).",
    "c": "old(X) :- heavy(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nbig(X) :- red(X).\nsmall(X) :- big(X).\nheavy(X) :- small(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nsoft(X) :- clean(X).\nnew(X) :- soft(X).\nhungry(Y) :- tall(Y), friend(Y,A), happy(A).\nfriendly(X) :- happy(X), clever(E).\nowns(X,Y) :- weak(X), dirty(Y).\nrough(X) :- light(X).\nparent(X,Y) :- brave(X), weak(Y).\nnew(pencil).\ncurious(dave).\ntall(eve).\nhungry(frank).\nenemy(frank,eve).\nsibling(dave,frank).\ndislikes(dave,apple).\ndislikes(frank,book).\nowns(carol,phone).\nowns(eve,book).\ntired(bob).\nbored(alice).\nenemy(carol,dave).\nlikes(george,car).\nenemy(alice,carol).\nparent(bob,george).\nsmooth(ball).\nbusy(dave).\nowns(frank,book).\nfriend(dave,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all Y, if there exists A such that person Y is tall and person Y is a friend of person A and person A is happy, then person Y is hungry.\nFor all X, if there exists E such that person X is happy and person E is clever, then person X is friendly.\nFor all X, Y, if person X is weak and object Y is dirty, then person X owns object Y.\nFor all X, if object X is light, then object X is rough.\nFor all X, Y, if person X is brave and person Y is weak, then person X is a parent of person Y.\n\nAnd the following facts:\npencil is new.\ndave is curious.\neve is tall.\nfrank is hungry.\nfrank is an enemy of eve.\ndave is a sibling of frank.\ndave dislikes apple.\nfrank dislikes book.\ncarol owns phone.\neve owns book.\nbob is tired.\nalice is bored.\ncarol is an enemy of dave.\ngeorge likes car.\nalice is an enemy of carol.\nbob is a parent of george.\nball is smooth.\ndave is busy.\nfrank owns book.\ndave is a friend of george.\n\nQUESTION:\nCould ball is rough explain pencil is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 627,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(bob).",
    "c": "curious(X) :- excited(X).\nexcited(X) :- curious(X).\nhungry(X) :- excited(X).\nexcited(X) :- hungry(X).\nhungry(X) :- excited(X).\ncurious(X) :- hungry(X).\nclever(X) :- curious(X).\nfunny(X) :- clever(X).\ntired(X) :- funny(X).\nstrong(X) :- tired(X).\nnew(X) :- dirty(X), likes(B,X), busy(B).\nsad(X) :- brave(X).\ntall(Z) :- weak(Z).\nwet(Z) :- hard(Z), dislikes(U,Z), busy(U).\nbusy(X) :- friendly(X).\nexcited(bob).\nbrave(carol).\nfriendly(eve).\nparent(george,carol).\nenemy(dave,frank).\nlikes(carol,apple).\nowns(alice,apple).\nfriend(alice,eve).\nfriend(carol,alice).\nfriend(carol,eve).\ndirty(car).\nlikes(alice,phone).\nenemy(dave,eve).\nsibling(alice,eve).\nfriendly(george).\nparent(eve,carol).\nfriend(bob,george).\ndirty(pencil).\nnew(book).\nbusy(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if there exists B such that object X is dirty and person B likes object X and person B is busy, then object X is new.\nFor all X, if person X is brave, then person X is sad.\nFor all Z, if person Z is weak, then person Z is tall.\nFor all Z, if there exists U such that object Z is hard and person U dislikes object Z and person U is busy, then object Z is wet.\nFor all X, if person X is friendly, then person X is busy.\n\nAnd the following facts:\nbob is excited.\ncarol is brave.\neve is friendly.\ngeorge is a parent of carol.\ndave is an enemy of frank.\ncarol likes apple.\nalice owns apple.\nalice is a friend of eve.\ncarol is a friend of alice.\ncarol is a friend of eve.\ncar is dirty.\nalice likes phone.\ndave is an enemy of eve.\nalice is a sibling of eve.\ngeorge is friendly.\neve is a parent of carol.\nbob is a friend of george.\npencil is dirty.\nbook is new.\ndave is busy.\n\nQUESTION:\nIs bob is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 628,
    "pred": "ERROR",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"type\": \"object\",\\n  \"properties\": {\\n    \"answer\": {\\n      \"type\": \"string'}]"
  },
  {
    "q": "funny(frank).",
    "c": "curious(X) :- excited(X).\nexcited(X) :- curious(X).\nhungry(X) :- excited(X).\nexcited(X) :- hungry(X).\nhungry(X) :- excited(X).\ncurious(X) :- hungry(X).\nclever(X) :- curious(X).\nfunny(X) :- clever(X).\ntired(X) :- funny(X).\nstrong(X) :- tired(X).\nnew(X) :- dirty(X), likes(B,X), busy(B).\nsad(X) :- brave(X).\ntall(Z) :- weak(Z).\nwet(Z) :- hard(Z), dislikes(U,Z), busy(U).\nbusy(X) :- friendly(X).\nexcited(bob).\nbrave(carol).\nfriendly(eve).\nparent(george,carol).\nenemy(dave,frank).\nlikes(carol,apple).\nowns(alice,apple).\nfriend(alice,eve).\nfriend(carol,alice).\nfriend(carol,eve).\ndirty(car).\nlikes(alice,phone).\nenemy(dave,eve).\nsibling(alice,eve).\nfriendly(george).\nparent(eve,carol).\nfriend(bob,george).\ndirty(pencil).\nnew(book).\nbusy(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if there exists B such that object X is dirty and person B likes object X and person B is busy, then object X is new.\nFor all X, if person X is brave, then person X is sad.\nFor all Z, if person Z is weak, then person Z is tall.\nFor all Z, if there exists U such that object Z is hard and person U dislikes object Z and person U is busy, then object Z is wet.\nFor all X, if person X is friendly, then person X is busy.\n\nAnd the following facts:\nbob is excited.\ncarol is brave.\neve is friendly.\ngeorge is a parent of carol.\ndave is an enemy of frank.\ncarol likes apple.\nalice owns apple.\nalice is a friend of eve.\ncarol is a friend of alice.\ncarol is a friend of eve.\ncar is dirty.\nalice likes phone.\ndave is an enemy of eve.\nalice is a sibling of eve.\ngeorge is friendly.\neve is a parent of carol.\nbob is a friend of george.\npencil is dirty.\nbook is new.\ndave is busy.\n\nQUESTION:\nIs frank is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 629,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(bob).",
    "c": "curious(X) :- excited(X).\nexcited(X) :- curious(X).\nhungry(X) :- excited(X).\nexcited(X) :- hungry(X).\nhungry(X) :- excited(X).\ncurious(X) :- hungry(X).\nclever(X) :- curious(X).\nfunny(X) :- clever(X).\ntired(X) :- funny(X).\nstrong(X) :- tired(X).\nnew(X) :- dirty(X), likes(B,X), busy(B).\nsad(X) :- brave(X).\ntall(Z) :- weak(Z).\nwet(Z) :- hard(Z), dislikes(U,Z), busy(U).\nbusy(X) :- friendly(X).\nstrong(bob).\nbrave(carol).\nfriendly(eve).\nparent(george,carol).\nenemy(dave,frank).\nlikes(carol,apple).\nowns(alice,apple).\nfriend(alice,eve).\nfriend(carol,alice).\nfriend(carol,eve).\ndirty(car).\nlikes(alice,phone).\nenemy(dave,eve).\nsibling(alice,eve).\nfriendly(george).\nparent(eve,carol).\nfriend(bob,george).\ndirty(pencil).\nnew(book).\nbusy(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if there exists B such that object X is dirty and person B likes object X and person B is busy, then object X is new.\nFor all X, if person X is brave, then person X is sad.\nFor all Z, if person Z is weak, then person Z is tall.\nFor all Z, if there exists U such that object Z is hard and person U dislikes object Z and person U is busy, then object Z is wet.\nFor all X, if person X is friendly, then person X is busy.\n\nAnd the following facts:\nbob is strong.\ncarol is brave.\neve is friendly.\ngeorge is a parent of carol.\ndave is an enemy of frank.\ncarol likes apple.\nalice owns apple.\nalice is a friend of eve.\ncarol is a friend of alice.\ncarol is a friend of eve.\ncar is dirty.\nalice likes phone.\ndave is an enemy of eve.\nalice is a sibling of eve.\ngeorge is friendly.\neve is a parent of carol.\nbob is a friend of george.\npencil is dirty.\nbook is new.\ndave is busy.\n\nQUESTION:\nCould bob is excited explain bob is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 630,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(pencil).",
    "c": "curious(X) :- excited(X).\nexcited(X) :- curious(X).\nhungry(X) :- excited(X).\nexcited(X) :- hungry(X).\nhungry(X) :- excited(X).\ncurious(X) :- hungry(X).\nclever(X) :- curious(X).\nfunny(X) :- clever(X).\ntired(X) :- funny(X).\nstrong(X) :- tired(X).\nnew(X) :- dirty(X), likes(B,X), busy(B).\nsad(X) :- brave(X).\ntall(Z) :- weak(Z).\nwet(Z) :- hard(Z), dislikes(U,Z), busy(U).\nbusy(X) :- friendly(X).\nstrong(bob).\nbrave(carol).\nfriendly(eve).\nparent(george,carol).\nenemy(dave,frank).\nlikes(carol,apple).\nowns(alice,apple).\nfriend(alice,eve).\nfriend(carol,alice).\nfriend(carol,eve).\ndirty(car).\nlikes(alice,phone).\nenemy(dave,eve).\nsibling(alice,eve).\nfriendly(george).\nparent(eve,carol).\nfriend(bob,george).\ndirty(pencil).\nnew(book).\nbusy(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if there exists B such that object X is dirty and person B likes object X and person B is busy, then object X is new.\nFor all X, if person X is brave, then person X is sad.\nFor all Z, if person Z is weak, then person Z is tall.\nFor all Z, if there exists U such that object Z is hard and person U dislikes object Z and person U is busy, then object Z is wet.\nFor all X, if person X is friendly, then person X is busy.\n\nAnd the following facts:\nbob is strong.\ncarol is brave.\neve is friendly.\ngeorge is a parent of carol.\ndave is an enemy of frank.\ncarol likes apple.\nalice owns apple.\nalice is a friend of eve.\ncarol is a friend of alice.\ncarol is a friend of eve.\ncar is dirty.\nalice likes phone.\ndave is an enemy of eve.\nalice is a sibling of eve.\ngeorge is friendly.\neve is a parent of carol.\nbob is a friend of george.\npencil is dirty.\nbook is new.\ndave is busy.\n\nQUESTION:\nCould pencil is heavy explain bob is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 631,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(book).",
    "c": "heavy(X) :- soft(X).\nred(X) :- heavy(X).\nsmooth(X) :- red(X).\nwet(X) :- smooth(X).\nclean(X) :- wet(X).\nlight(X) :- clean(X).\nnew(X) :- light(X).\nhard(X) :- new(X).\nold(X) :- hard(X).\ndirty(X) :- old(X).\nfunny(Z) :- sad(Z), dislikes(Z,B), small(B).\ndislikes(Z,X) :- strong(Z), big(X), owns(A,X).\nbig(X) :- rough(X), small(X).\nstrong(X) :- friendly(X).\nbored(X) :- sad(X), angry(X).\nsoft(book).\nlikes(george,apple).\ncold.\nparent(dave,frank).\nsibling(bob,george).\nsmall(apple).\nowns(frank,pencil).\nlikes(dave,apple).\nenemy(george,carol).\nclever(carol).\nsibling(george,frank).\ncurious(carol).\nlikes(george,phone).\nowns(george,ball).\nexcited(carol).\ndislikes(eve,pencil).\nlikes(carol,apple).\nstrong(bob).\nfriend(carol,bob).\nrough(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Z, if there exists B such that person Z is sad and person Z dislikes object B and object B is small, then person Z is funny.\nFor all X, Z, if there exists A such that person Z is strong and object X is big and person A owns object X, then person Z dislikes object X.\nFor all X, if object X is rough and object X is small, then object X is big.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is sad and person X is angry, then person X is bored.\n\nAnd the following facts:\nbook is soft.\ngeorge likes apple.\nit is cold.\ndave is a parent of frank.\nbob is a sibling of george.\napple is small.\nfrank owns pencil.\ndave likes apple.\ngeorge is an enemy of carol.\ncarol is clever.\ngeorge is a sibling of frank.\ncarol is curious.\ngeorge likes phone.\ngeorge owns ball.\ncarol is excited.\neve dislikes pencil.\ncarol likes apple.\nbob is strong.\ncarol is a friend of bob.\napple is rough.\n\nQUESTION:\nIs book is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 632,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "heavy(X) :- soft(X).\nred(X) :- heavy(X).\nsmooth(X) :- red(X).\nwet(X) :- smooth(X).\nclean(X) :- wet(X).\nlight(X) :- clean(X).\nnew(X) :- light(X).\nhard(X) :- new(X).\nold(X) :- hard(X).\ndirty(X) :- old(X).\nfunny(Z) :- sad(Z), dislikes(Z,B), small(B).\ndislikes(Z,X) :- strong(Z), big(X), owns(A,X).\nbig(X) :- rough(X), small(X).\nstrong(X) :- friendly(X).\nbored(X) :- sad(X), angry(X).\nsoft(book).\nlikes(george,apple).\ncold.\nparent(dave,frank).\nsibling(bob,george).\nsmall(apple).\nowns(frank,pencil).\nlikes(dave,apple).\nenemy(george,carol).\nclever(carol).\nsibling(george,frank).\ncurious(carol).\nlikes(george,phone).\nowns(george,ball).\nexcited(carol).\ndislikes(eve,pencil).\nlikes(carol,apple).\nstrong(bob).\nfriend(carol,bob).\nrough(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Z, if there exists B such that person Z is sad and person Z dislikes object B and object B is small, then person Z is funny.\nFor all X, Z, if there exists A such that person Z is strong and object X is big and person A owns object X, then person Z dislikes object X.\nFor all X, if object X is rough and object X is small, then object X is big.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is sad and person X is angry, then person X is bored.\n\nAnd the following facts:\nbook is soft.\ngeorge likes apple.\nit is cold.\ndave is a parent of frank.\nbob is a sibling of george.\napple is small.\nfrank owns pencil.\ndave likes apple.\ngeorge is an enemy of carol.\ncarol is clever.\ngeorge is a sibling of frank.\ncarol is curious.\ngeorge likes phone.\ngeorge owns ball.\ncarol is excited.\neve dislikes pencil.\ncarol likes apple.\nbob is strong.\ncarol is a friend of bob.\napple is rough.\n\nQUESTION:\nIs bob is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 633,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(book).",
    "c": "heavy(X) :- soft(X).\nred(X) :- heavy(X).\nsmooth(X) :- red(X).\nwet(X) :- smooth(X).\nclean(X) :- wet(X).\nlight(X) :- clean(X).\nnew(X) :- light(X).\nhard(X) :- new(X).\nold(X) :- hard(X).\ndirty(X) :- old(X).\nfunny(Z) :- sad(Z), dislikes(Z,B), small(B).\ndislikes(Z,X) :- strong(Z), big(X), owns(A,X).\nbig(X) :- rough(X), small(X).\nstrong(X) :- friendly(X).\nbored(X) :- sad(X), angry(X).\ndirty(book).\nlikes(george,apple).\ncold.\nparent(dave,frank).\nsibling(bob,george).\nsmall(apple).\nowns(frank,pencil).\nlikes(dave,apple).\nenemy(george,carol).\nclever(carol).\nsibling(george,frank).\ncurious(carol).\nlikes(george,phone).\nowns(george,ball).\nexcited(carol).\ndislikes(eve,pencil).\nlikes(carol,apple).\nstrong(bob).\nfriend(carol,bob).\nrough(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Z, if there exists B such that person Z is sad and person Z dislikes object B and object B is small, then person Z is funny.\nFor all X, Z, if there exists A such that person Z is strong and object X is big and person A owns object X, then person Z dislikes object X.\nFor all X, if object X is rough and object X is small, then object X is big.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is sad and person X is angry, then person X is bored.\n\nAnd the following facts:\nbook is dirty.\ngeorge likes apple.\nit is cold.\ndave is a parent of frank.\nbob is a sibling of george.\napple is small.\nfrank owns pencil.\ndave likes apple.\ngeorge is an enemy of carol.\ncarol is clever.\ngeorge is a sibling of frank.\ncarol is curious.\ngeorge likes phone.\ngeorge owns ball.\ncarol is excited.\neve dislikes pencil.\ncarol likes apple.\nbob is strong.\ncarol is a friend of bob.\napple is rough.\n\nQUESTION:\nCould book is soft explain book is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 634,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(eve).",
    "c": "heavy(X) :- soft(X).\nred(X) :- heavy(X).\nsmooth(X) :- red(X).\nwet(X) :- smooth(X).\nclean(X) :- wet(X).\nlight(X) :- clean(X).\nnew(X) :- light(X).\nhard(X) :- new(X).\nold(X) :- hard(X).\ndirty(X) :- old(X).\nfunny(Z) :- sad(Z), dislikes(Z,B), small(B).\ndislikes(Z,X) :- strong(Z), big(X), owns(A,X).\nbig(X) :- rough(X), small(X).\nstrong(X) :- friendly(X).\nbored(X) :- sad(X), angry(X).\ndirty(book).\nlikes(george,apple).\ncold.\nparent(dave,frank).\nsibling(bob,george).\nsmall(apple).\nowns(frank,pencil).\nlikes(dave,apple).\nenemy(george,carol).\nclever(carol).\nsibling(george,frank).\ncurious(carol).\nlikes(george,phone).\nowns(george,ball).\nexcited(carol).\ndislikes(eve,pencil).\nlikes(carol,apple).\nstrong(bob).\nfriend(carol,bob).\nrough(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Z, if there exists B such that person Z is sad and person Z dislikes object B and object B is small, then person Z is funny.\nFor all X, Z, if there exists A such that person Z is strong and object X is big and person A owns object X, then person Z dislikes object X.\nFor all X, if object X is rough and object X is small, then object X is big.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is sad and person X is angry, then person X is bored.\n\nAnd the following facts:\nbook is dirty.\ngeorge likes apple.\nit is cold.\ndave is a parent of frank.\nbob is a sibling of george.\napple is small.\nfrank owns pencil.\ndave likes apple.\ngeorge is an enemy of carol.\ncarol is clever.\ngeorge is a sibling of frank.\ncarol is curious.\ngeorge likes phone.\ngeorge owns ball.\ncarol is excited.\neve dislikes pencil.\ncarol likes apple.\nbob is strong.\ncarol is a friend of bob.\napple is rough.\n\nQUESTION:\nCould eve is tall explain book is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 635,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(apple).",
    "c": "red(X) :- smooth(X).\nsoft(X) :- red(X).\nheavy(X) :- soft(X).\nbig(X) :- heavy(X).\nrough(X) :- big(X).\nclean(X) :- rough(X).\nnew(X) :- clean(X).\nsmall(X) :- new(X).\nold(X) :- small(X).\ndirty(X) :- old(X).\ncalm(Y) :- strong(Y), calm(E).\nweak(Z) :- friendly(Z), enemy(Z,W), clever(W).\nbrave(X) :- funny(X).\nbored(X) :- funny(X).\nenemy(X,Y) :- excited(X), angry(Y).\nsmooth(apple).\nowns(george,apple).\ncalm(bob).\ndislikes(frank,apple).\nowns(eve,book).\nsibling(carol,alice).\ndislikes(bob,phone).\nsibling(eve,bob).\nfriend(alice,george).\nweak(alice).\nsibling(alice,carol).\nenemy(carol,dave).\nhard(pencil).\ndislikes(alice,pencil).\nfriend(dave,george).\nsibling(eve,george).\ncurious(frank).\nlikes(dave,phone).\ndislikes(alice,apple).\ndislikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Y, if there exists E such that person Y is strong and person E is calm, then person Y is calm.\nFor all Z, if there exists W such that person Z is friendly and person Z is an enemy of person W and person W is clever, then person Z is weak.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is funny, then person X is bored.\nFor all X, Y, if person X is excited and person Y is angry, then person X is an enemy of person Y.\n\nAnd the following facts:\napple is smooth.\ngeorge owns apple.\nbob is calm.\nfrank dislikes apple.\neve owns book.\ncarol is a sibling of alice.\nbob dislikes phone.\neve is a sibling of bob.\nalice is a friend of george.\nalice is weak.\nalice is a sibling of carol.\ncarol is an enemy of dave.\npencil is hard.\nalice dislikes pencil.\ndave is a friend of george.\neve is a sibling of george.\nfrank is curious.\ndave likes phone.\nalice dislikes apple.\ncarol dislikes car.\n\nQUESTION:\nIs apple is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 636,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(carol).",
    "c": "red(X) :- smooth(X).\nsoft(X) :- red(X).\nheavy(X) :- soft(X).\nbig(X) :- heavy(X).\nrough(X) :- big(X).\nclean(X) :- rough(X).\nnew(X) :- clean(X).\nsmall(X) :- new(X).\nold(X) :- small(X).\ndirty(X) :- old(X).\ncalm(Y) :- strong(Y), calm(E).\nweak(Z) :- friendly(Z), enemy(Z,W), clever(W).\nbrave(X) :- funny(X).\nbored(X) :- funny(X).\nenemy(X,Y) :- excited(X), angry(Y).\nsmooth(apple).\nowns(george,apple).\ncalm(bob).\ndislikes(frank,apple).\nowns(eve,book).\nsibling(carol,alice).\ndislikes(bob,phone).\nsibling(eve,bob).\nfriend(alice,george).\nweak(alice).\nsibling(alice,carol).\nenemy(carol,dave).\nhard(pencil).\ndislikes(alice,pencil).\nfriend(dave,george).\nsibling(eve,george).\ncurious(frank).\nlikes(dave,phone).\ndislikes(alice,apple).\ndislikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Y, if there exists E such that person Y is strong and person E is calm, then person Y is calm.\nFor all Z, if there exists W such that person Z is friendly and person Z is an enemy of person W and person W is clever, then person Z is weak.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is funny, then person X is bored.\nFor all X, Y, if person X is excited and person Y is angry, then person X is an enemy of person Y.\n\nAnd the following facts:\napple is smooth.\ngeorge owns apple.\nbob is calm.\nfrank dislikes apple.\neve owns book.\ncarol is a sibling of alice.\nbob dislikes phone.\neve is a sibling of bob.\nalice is a friend of george.\nalice is weak.\nalice is a sibling of carol.\ncarol is an enemy of dave.\npencil is hard.\nalice dislikes pencil.\ndave is a friend of george.\neve is a sibling of george.\nfrank is curious.\ndave likes phone.\nalice dislikes apple.\ncarol dislikes car.\n\nQUESTION:\nIs carol is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 637,
    "pred": "ERROR",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"type\": \"object\",\\n  \"properties\": {\\n    \"answer\": {\\n      \"type\": \"string'}]"
  },
  {
    "q": "smooth(apple).",
    "c": "red(X) :- smooth(X).\nsoft(X) :- red(X).\nheavy(X) :- soft(X).\nbig(X) :- heavy(X).\nrough(X) :- big(X).\nclean(X) :- rough(X).\nnew(X) :- clean(X).\nsmall(X) :- new(X).\nold(X) :- small(X).\ndirty(X) :- old(X).\ncalm(Y) :- strong(Y), calm(E).\nweak(Z) :- friendly(Z), enemy(Z,W), clever(W).\nbrave(X) :- funny(X).\nbored(X) :- funny(X).\nenemy(X,Y) :- excited(X), angry(Y).\ndirty(apple).\nowns(george,apple).\ncalm(bob).\ndislikes(frank,apple).\nowns(eve,book).\nsibling(carol,alice).\ndislikes(bob,phone).\nsibling(eve,bob).\nfriend(alice,george).\nweak(alice).\nsibling(alice,carol).\nenemy(carol,dave).\nhard(pencil).\ndislikes(alice,pencil).\nfriend(dave,george).\nsibling(eve,george).\ncurious(frank).\nlikes(dave,phone).\ndislikes(alice,apple).\ndislikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Y, if there exists E such that person Y is strong and person E is calm, then person Y is calm.\nFor all Z, if there exists W such that person Z is friendly and person Z is an enemy of person W and person W is clever, then person Z is weak.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is funny, then person X is bored.\nFor all X, Y, if person X is excited and person Y is angry, then person X is an enemy of person Y.\n\nAnd the following facts:\napple is dirty.\ngeorge owns apple.\nbob is calm.\nfrank dislikes apple.\neve owns book.\ncarol is a sibling of alice.\nbob dislikes phone.\neve is a sibling of bob.\nalice is a friend of george.\nalice is weak.\nalice is a sibling of carol.\ncarol is an enemy of dave.\npencil is hard.\nalice dislikes pencil.\ndave is a friend of george.\neve is a sibling of george.\nfrank is curious.\ndave likes phone.\nalice dislikes apple.\ncarol dislikes car.\n\nQUESTION:\nCould apple is smooth explain apple is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 638,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(dave).",
    "c": "red(X) :- smooth(X).\nsoft(X) :- red(X).\nheavy(X) :- soft(X).\nbig(X) :- heavy(X).\nrough(X) :- big(X).\nclean(X) :- rough(X).\nnew(X) :- clean(X).\nsmall(X) :- new(X).\nold(X) :- small(X).\ndirty(X) :- old(X).\ncalm(Y) :- strong(Y), calm(E).\nweak(Z) :- friendly(Z), enemy(Z,W), clever(W).\nbrave(X) :- funny(X).\nbored(X) :- funny(X).\nenemy(X,Y) :- excited(X), angry(Y).\ndirty(apple).\nowns(george,apple).\ncalm(bob).\ndislikes(frank,apple).\nowns(eve,book).\nsibling(carol,alice).\ndislikes(bob,phone).\nsibling(eve,bob).\nfriend(alice,george).\nweak(alice).\nsibling(alice,carol).\nenemy(carol,dave).\nhard(pencil).\ndislikes(alice,pencil).\nfriend(dave,george).\nsibling(eve,george).\ncurious(frank).\nlikes(dave,phone).\ndislikes(alice,apple).\ndislikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Y, if there exists E such that person Y is strong and person E is calm, then person Y is calm.\nFor all Z, if there exists W such that person Z is friendly and person Z is an enemy of person W and person W is clever, then person Z is weak.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is funny, then person X is bored.\nFor all X, Y, if person X is excited and person Y is angry, then person X is an enemy of person Y.\n\nAnd the following facts:\napple is dirty.\ngeorge owns apple.\nbob is calm.\nfrank dislikes apple.\neve owns book.\ncarol is a sibling of alice.\nbob dislikes phone.\neve is a sibling of bob.\nalice is a friend of george.\nalice is weak.\nalice is a sibling of carol.\ncarol is an enemy of dave.\npencil is hard.\nalice dislikes pencil.\ndave is a friend of george.\neve is a sibling of george.\nfrank is curious.\ndave likes phone.\nalice dislikes apple.\ncarol dislikes car.\n\nQUESTION:\nCould dave is angry explain apple is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 639,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(alice).",
    "c": "friendly(X) :- hungry(X).\nfunny(X) :- busy(X).\ntall(Y) :- tired(Y), friend(Y,W), calm(W).\nlight(Y) :- small(Y), dislikes(A,Y), excited(A).\nheavy(Z) :- rough(Z), dislikes(A,Z), brave(A).\nheavy(Y) :- rough(Y), likes(U,Y), curious(U).\nfriend(Y,Z) :- weak(Y), tall(Z), owns(Y,B).\ntall(X) :- weak(X), owns(X,U), heavy(U).\nexcited(Y) :- tired(Y), old(B).\nnew(X) :- soft(X).\ndislikes(X,Y) :- busy(X), rough(Y), likes(X,Y).\ncalm(X) :- brave(X).\nfriend(X,Y) :- curious(X), strong(Y).\ncalm(X) :- clever(X), brave(X).\nsad(X) :- calm(X), excited(X).\nlight(X) :- heavy(X), smooth(X).\nnew(X) :- heavy(X).\nhappy(X) :- tall(X).\nsad(X) :- clever(X), strong(X).\nlikes(X,Y) :- tall(X), old(Y), owns(X,Y).\nhungry(alice).\ndislikes(eve,car).\nsibling(george,eve).\nwet(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is busy, then person X is funny.\nFor all Y, if there exists W such that person Y is tired and person Y is a friend of person W and person W is calm, then person Y is tall.\nFor all Y, if there exists A such that object Y is small and person A dislikes object Y and person A is excited, then object Y is light.\nFor all Z, if there exists A such that object Z is rough and person A dislikes object Z and person A is brave, then object Z is heavy.\nFor all Y, if there exists U such that object Y is rough and person U likes object Y and person U is curious, then object Y is heavy.\nFor all Y, Z, if there exists B such that person Y is weak and person Z is tall and person Y owns object B, then person Y is a friend of person Z.\nFor all X, if there exists U such that person X is weak and person X owns object U and object U is heavy, then person X is tall.\nFor all Y, if there exists B such that person Y is tired and object B is old, then person Y is excited.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is busy and object Y is rough and person X likes object Y, then person X dislikes object Y.\nFor all X, if person X is brave, then person X is calm.\nFor all X, Y, if person X is curious and person Y is strong, then person X is a friend of person Y.\nFor all X, if person X is clever and person X is brave, then person X is calm.\nFor all X, if person X is calm and person X is excited, then person X is sad.\nFor all X, if object X is heavy and object X is smooth, then object X is light.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is clever and person X is strong, then person X is sad.\nFor all X, Y, if person X is tall and object Y is old and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nalice is hungry.\neve dislikes car.\ngeorge is a sibling of eve.\nball is wet.\n\nQUESTION:\nIs alice is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 640,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "friendly(X) :- hungry(X).\nfunny(X) :- busy(X).\ntall(Y) :- tired(Y), friend(Y,W), calm(W).\nlight(Y) :- small(Y), dislikes(A,Y), excited(A).\nheavy(Z) :- rough(Z), dislikes(A,Z), brave(A).\nheavy(Y) :- rough(Y), likes(U,Y), curious(U).\nfriend(Y,Z) :- weak(Y), tall(Z), owns(Y,B).\ntall(X) :- weak(X), owns(X,U), heavy(U).\nexcited(Y) :- tired(Y), old(B).\nnew(X) :- soft(X).\ndislikes(X,Y) :- busy(X), rough(Y), likes(X,Y).\ncalm(X) :- brave(X).\nfriend(X,Y) :- curious(X), strong(Y).\ncalm(X) :- clever(X), brave(X).\nsad(X) :- calm(X), excited(X).\nlight(X) :- heavy(X), smooth(X).\nnew(X) :- heavy(X).\nhappy(X) :- tall(X).\nsad(X) :- clever(X), strong(X).\nlikes(X,Y) :- tall(X), old(Y), owns(X,Y).\nhungry(alice).\ndislikes(eve,car).\nsibling(george,eve).\nwet(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is busy, then person X is funny.\nFor all Y, if there exists W such that person Y is tired and person Y is a friend of person W and person W is calm, then person Y is tall.\nFor all Y, if there exists A such that object Y is small and person A dislikes object Y and person A is excited, then object Y is light.\nFor all Z, if there exists A such that object Z is rough and person A dislikes object Z and person A is brave, then object Z is heavy.\nFor all Y, if there exists U such that object Y is rough and person U likes object Y and person U is curious, then object Y is heavy.\nFor all Y, Z, if there exists B such that person Y is weak and person Z is tall and person Y owns object B, then person Y is a friend of person Z.\nFor all X, if there exists U such that person X is weak and person X owns object U and object U is heavy, then person X is tall.\nFor all Y, if there exists B such that person Y is tired and object B is old, then person Y is excited.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is busy and object Y is rough and person X likes object Y, then person X dislikes object Y.\nFor all X, if person X is brave, then person X is calm.\nFor all X, Y, if person X is curious and person Y is strong, then person X is a friend of person Y.\nFor all X, if person X is clever and person X is brave, then person X is calm.\nFor all X, if person X is calm and person X is excited, then person X is sad.\nFor all X, if object X is heavy and object X is smooth, then object X is light.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is clever and person X is strong, then person X is sad.\nFor all X, Y, if person X is tall and object Y is old and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nalice is hungry.\neve dislikes car.\ngeorge is a sibling of eve.\nball is wet.\n\nQUESTION:\nIs book is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 641,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(alice).",
    "c": "friendly(X) :- hungry(X).\nfunny(X) :- busy(X).\ntall(Y) :- tired(Y), friend(Y,W), calm(W).\nlight(Y) :- small(Y), dislikes(A,Y), excited(A).\nheavy(Z) :- rough(Z), dislikes(A,Z), brave(A).\nheavy(Y) :- rough(Y), likes(U,Y), curious(U).\nfriend(Y,Z) :- weak(Y), tall(Z), owns(Y,B).\ntall(X) :- weak(X), owns(X,U), heavy(U).\nexcited(Y) :- tired(Y), old(B).\nnew(X) :- soft(X).\ndislikes(X,Y) :- busy(X), rough(Y), likes(X,Y).\ncalm(X) :- brave(X).\nfriend(X,Y) :- curious(X), strong(Y).\ncalm(X) :- clever(X), brave(X).\nsad(X) :- calm(X), excited(X).\nlight(X) :- heavy(X), smooth(X).\nnew(X) :- heavy(X).\nhappy(X) :- tall(X).\nsad(X) :- clever(X), strong(X).\nlikes(X,Y) :- tall(X), old(Y), owns(X,Y).\nfriendly(alice).\ndislikes(eve,car).\nsibling(george,eve).\nwet(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is busy, then person X is funny.\nFor all Y, if there exists W such that person Y is tired and person Y is a friend of person W and person W is calm, then person Y is tall.\nFor all Y, if there exists A such that object Y is small and person A dislikes object Y and person A is excited, then object Y is light.\nFor all Z, if there exists A such that object Z is rough and person A dislikes object Z and person A is brave, then object Z is heavy.\nFor all Y, if there exists U such that object Y is rough and person U likes object Y and person U is curious, then object Y is heavy.\nFor all Y, Z, if there exists B such that person Y is weak and person Z is tall and person Y owns object B, then person Y is a friend of person Z.\nFor all X, if there exists U such that person X is weak and person X owns object U and object U is heavy, then person X is tall.\nFor all Y, if there exists B such that person Y is tired and object B is old, then person Y is excited.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is busy and object Y is rough and person X likes object Y, then person X dislikes object Y.\nFor all X, if person X is brave, then person X is calm.\nFor all X, Y, if person X is curious and person Y is strong, then person X is a friend of person Y.\nFor all X, if person X is clever and person X is brave, then person X is calm.\nFor all X, if person X is calm and person X is excited, then person X is sad.\nFor all X, if object X is heavy and object X is smooth, then object X is light.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is clever and person X is strong, then person X is sad.\nFor all X, Y, if person X is tall and object Y is old and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nalice is friendly.\neve dislikes car.\ngeorge is a sibling of eve.\nball is wet.\n\nQUESTION:\nCould alice is hungry explain alice is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 642,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "friendly(X) :- hungry(X).\nfunny(X) :- busy(X).\ntall(Y) :- tired(Y), friend(Y,W), calm(W).\nlight(Y) :- small(Y), dislikes(A,Y), excited(A).\nheavy(Z) :- rough(Z), dislikes(A,Z), brave(A).\nheavy(Y) :- rough(Y), likes(U,Y), curious(U).\nfriend(Y,Z) :- weak(Y), tall(Z), owns(Y,B).\ntall(X) :- weak(X), owns(X,U), heavy(U).\nexcited(Y) :- tired(Y), old(B).\nnew(X) :- soft(X).\ndislikes(X,Y) :- busy(X), rough(Y), likes(X,Y).\ncalm(X) :- brave(X).\nfriend(X,Y) :- curious(X), strong(Y).\ncalm(X) :- clever(X), brave(X).\nsad(X) :- calm(X), excited(X).\nlight(X) :- heavy(X), smooth(X).\nnew(X) :- heavy(X).\nhappy(X) :- tall(X).\nsad(X) :- clever(X), strong(X).\nlikes(X,Y) :- tall(X), old(Y), owns(X,Y).\nfriendly(alice).\ndislikes(eve,car).\nsibling(george,eve).\nwet(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is busy, then person X is funny.\nFor all Y, if there exists W such that person Y is tired and person Y is a friend of person W and person W is calm, then person Y is tall.\nFor all Y, if there exists A such that object Y is small and person A dislikes object Y and person A is excited, then object Y is light.\nFor all Z, if there exists A such that object Z is rough and person A dislikes object Z and person A is brave, then object Z is heavy.\nFor all Y, if there exists U such that object Y is rough and person U likes object Y and person U is curious, then object Y is heavy.\nFor all Y, Z, if there exists B such that person Y is weak and person Z is tall and person Y owns object B, then person Y is a friend of person Z.\nFor all X, if there exists U such that person X is weak and person X owns object U and object U is heavy, then person X is tall.\nFor all Y, if there exists B such that person Y is tired and object B is old, then person Y is excited.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is busy and object Y is rough and person X likes object Y, then person X dislikes object Y.\nFor all X, if person X is brave, then person X is calm.\nFor all X, Y, if person X is curious and person Y is strong, then person X is a friend of person Y.\nFor all X, if person X is clever and person X is brave, then person X is calm.\nFor all X, if person X is calm and person X is excited, then person X is sad.\nFor all X, if object X is heavy and object X is smooth, then object X is light.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is clever and person X is strong, then person X is sad.\nFor all X, Y, if person X is tall and object Y is old and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nalice is friendly.\neve dislikes car.\ngeorge is a sibling of eve.\nball is wet.\n\nQUESTION:\nCould ball is heavy explain alice is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 643,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(phone).",
    "c": "heavy(X) :- small(X).\nbrave(Z) :- tired(Z), owns(Z,A), red(A).\nsad(Z) :- bored(Z), dislikes(Z,V), rough(V).\ndirty(Z) :- clean(Z), owns(U,Z), angry(U).\nweak(Y) :- strong(Y), sibling(Y,A), tall(A).\nsad(Y) :- bored(Y), busy(C).\ntall(X) :- curious(X).\nlight(Z) :- old(Z).\nowns(Y,Z) :- calm(Y), clean(Z).\nangry(X) :- bored(X), parent(X,W), bored(W).\nsmooth(Z) :- light(Z), owns(U,Z), funny(U).\nsibling(X,Y) :- excited(X), busy(Y), parent(X,Y).\nrough(X) :- big(X).\nangry(X) :- busy(X).\nfriend(X,Y) :- excited(X), tall(Y).\nsad(X) :- curious(X).\ncalm(X) :- bored(X), friendly(X).\nweak(X) :- calm(X).\nbusy(X) :- sad(X).\ndislikes(X,Y) :- friendly(X), rough(Y), owns(X,Y).\nsmall(phone).\nfriend(george,bob).\ntired(dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is heavy.\nFor all Z, if there exists A such that person Z is tired and person Z owns object A and object A is red, then person Z is brave.\nFor all Z, if there exists V such that person Z is bored and person Z dislikes object V and object V is rough, then person Z is sad.\nFor all Z, if there exists U such that object Z is clean and person U owns object Z and person U is angry, then object Z is dirty.\nFor all Y, if there exists A such that person Y is strong and person Y is a sibling of person A and person A is tall, then person Y is weak.\nFor all Y, if there exists C such that person Y is bored and person C is busy, then person Y is sad.\nFor all X, if person X is curious, then person X is tall.\nFor all Z, if object Z is old, then object Z is light.\nFor all Y, Z, if person Y is calm and object Z is clean, then person Y owns object Z.\nFor all X, if there exists W such that person X is bored and person X is a parent of person W and person W is bored, then person X is angry.\nFor all Z, if there exists U such that object Z is light and person U owns object Z and person U is funny, then object Z is smooth.\nFor all X, Y, if person X is excited and person Y is busy and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is big, then object X is rough.\nFor all X, if person X is busy, then person X is angry.\nFor all X, Y, if person X is excited and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is bored and person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is sad, then person X is busy.\nFor all X, Y, if person X is friendly and object Y is rough and person X owns object Y, then person X dislikes object Y.\n\nAnd the following facts:\nphone is small.\ngeorge is a friend of bob.\ndave is tired.\ndave owns ball.\n\nQUESTION:\nIs phone is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 644,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(frank).",
    "c": "heavy(X) :- small(X).\nbrave(Z) :- tired(Z), owns(Z,A), red(A).\nsad(Z) :- bored(Z), dislikes(Z,V), rough(V).\ndirty(Z) :- clean(Z), owns(U,Z), angry(U).\nweak(Y) :- strong(Y), sibling(Y,A), tall(A).\nsad(Y) :- bored(Y), busy(C).\ntall(X) :- curious(X).\nlight(Z) :- old(Z).\nowns(Y,Z) :- calm(Y), clean(Z).\nangry(X) :- bored(X), parent(X,W), bored(W).\nsmooth(Z) :- light(Z), owns(U,Z), funny(U).\nsibling(X,Y) :- excited(X), busy(Y), parent(X,Y).\nrough(X) :- big(X).\nangry(X) :- busy(X).\nfriend(X,Y) :- excited(X), tall(Y).\nsad(X) :- curious(X).\ncalm(X) :- bored(X), friendly(X).\nweak(X) :- calm(X).\nbusy(X) :- sad(X).\ndislikes(X,Y) :- friendly(X), rough(Y), owns(X,Y).\nsmall(phone).\nfriend(george,bob).\ntired(dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is heavy.\nFor all Z, if there exists A such that person Z is tired and person Z owns object A and object A is red, then person Z is brave.\nFor all Z, if there exists V such that person Z is bored and person Z dislikes object V and object V is rough, then person Z is sad.\nFor all Z, if there exists U such that object Z is clean and person U owns object Z and person U is angry, then object Z is dirty.\nFor all Y, if there exists A such that person Y is strong and person Y is a sibling of person A and person A is tall, then person Y is weak.\nFor all Y, if there exists C such that person Y is bored and person C is busy, then person Y is sad.\nFor all X, if person X is curious, then person X is tall.\nFor all Z, if object Z is old, then object Z is light.\nFor all Y, Z, if person Y is calm and object Z is clean, then person Y owns object Z.\nFor all X, if there exists W such that person X is bored and person X is a parent of person W and person W is bored, then person X is angry.\nFor all Z, if there exists U such that object Z is light and person U owns object Z and person U is funny, then object Z is smooth.\nFor all X, Y, if person X is excited and person Y is busy and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is big, then object X is rough.\nFor all X, if person X is busy, then person X is angry.\nFor all X, Y, if person X is excited and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is bored and person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is sad, then person X is busy.\nFor all X, Y, if person X is friendly and object Y is rough and person X owns object Y, then person X dislikes object Y.\n\nAnd the following facts:\nphone is small.\ngeorge is a friend of bob.\ndave is tired.\ndave owns ball.\n\nQUESTION:\nIs frank is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 645,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "heavy(X) :- small(X).\nbrave(Z) :- tired(Z), owns(Z,A), red(A).\nsad(Z) :- bored(Z), dislikes(Z,V), rough(V).\ndirty(Z) :- clean(Z), owns(U,Z), angry(U).\nweak(Y) :- strong(Y), sibling(Y,A), tall(A).\nsad(Y) :- bored(Y), busy(C).\ntall(X) :- curious(X).\nlight(Z) :- old(Z).\nowns(Y,Z) :- calm(Y), clean(Z).\nangry(X) :- bored(X), parent(X,W), bored(W).\nsmooth(Z) :- light(Z), owns(U,Z), funny(U).\nsibling(X,Y) :- excited(X), busy(Y), parent(X,Y).\nrough(X) :- big(X).\nangry(X) :- busy(X).\nfriend(X,Y) :- excited(X), tall(Y).\nsad(X) :- curious(X).\ncalm(X) :- bored(X), friendly(X).\nweak(X) :- calm(X).\nbusy(X) :- sad(X).\ndislikes(X,Y) :- friendly(X), rough(Y), owns(X,Y).\nheavy(phone).\nfriend(george,bob).\ntired(dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is heavy.\nFor all Z, if there exists A such that person Z is tired and person Z owns object A and object A is red, then person Z is brave.\nFor all Z, if there exists V such that person Z is bored and person Z dislikes object V and object V is rough, then person Z is sad.\nFor all Z, if there exists U such that object Z is clean and person U owns object Z and person U is angry, then object Z is dirty.\nFor all Y, if there exists A such that person Y is strong and person Y is a sibling of person A and person A is tall, then person Y is weak.\nFor all Y, if there exists C such that person Y is bored and person C is busy, then person Y is sad.\nFor all X, if person X is curious, then person X is tall.\nFor all Z, if object Z is old, then object Z is light.\nFor all Y, Z, if person Y is calm and object Z is clean, then person Y owns object Z.\nFor all X, if there exists W such that person X is bored and person X is a parent of person W and person W is bored, then person X is angry.\nFor all Z, if there exists U such that object Z is light and person U owns object Z and person U is funny, then object Z is smooth.\nFor all X, Y, if person X is excited and person Y is busy and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is big, then object X is rough.\nFor all X, if person X is busy, then person X is angry.\nFor all X, Y, if person X is excited and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is bored and person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is sad, then person X is busy.\nFor all X, Y, if person X is friendly and object Y is rough and person X owns object Y, then person X dislikes object Y.\n\nAnd the following facts:\nphone is heavy.\ngeorge is a friend of bob.\ndave is tired.\ndave owns ball.\n\nQUESTION:\nCould phone is small explain phone is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 646,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(alice).",
    "c": "heavy(X) :- small(X).\nbrave(Z) :- tired(Z), owns(Z,A), red(A).\nsad(Z) :- bored(Z), dislikes(Z,V), rough(V).\ndirty(Z) :- clean(Z), owns(U,Z), angry(U).\nweak(Y) :- strong(Y), sibling(Y,A), tall(A).\nsad(Y) :- bored(Y), busy(C).\ntall(X) :- curious(X).\nlight(Z) :- old(Z).\nowns(Y,Z) :- calm(Y), clean(Z).\nangry(X) :- bored(X), parent(X,W), bored(W).\nsmooth(Z) :- light(Z), owns(U,Z), funny(U).\nsibling(X,Y) :- excited(X), busy(Y), parent(X,Y).\nrough(X) :- big(X).\nangry(X) :- busy(X).\nfriend(X,Y) :- excited(X), tall(Y).\nsad(X) :- curious(X).\ncalm(X) :- bored(X), friendly(X).\nweak(X) :- calm(X).\nbusy(X) :- sad(X).\ndislikes(X,Y) :- friendly(X), rough(Y), owns(X,Y).\nheavy(phone).\nfriend(george,bob).\ntired(dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is heavy.\nFor all Z, if there exists A such that person Z is tired and person Z owns object A and object A is red, then person Z is brave.\nFor all Z, if there exists V such that person Z is bored and person Z dislikes object V and object V is rough, then person Z is sad.\nFor all Z, if there exists U such that object Z is clean and person U owns object Z and person U is angry, then object Z is dirty.\nFor all Y, if there exists A such that person Y is strong and person Y is a sibling of person A and person A is tall, then person Y is weak.\nFor all Y, if there exists C such that person Y is bored and person C is busy, then person Y is sad.\nFor all X, if person X is curious, then person X is tall.\nFor all Z, if object Z is old, then object Z is light.\nFor all Y, Z, if person Y is calm and object Z is clean, then person Y owns object Z.\nFor all X, if there exists W such that person X is bored and person X is a parent of person W and person W is bored, then person X is angry.\nFor all Z, if there exists U such that object Z is light and person U owns object Z and person U is funny, then object Z is smooth.\nFor all X, Y, if person X is excited and person Y is busy and person X is a parent of person Y, then person X is a sibling of person Y.\nFor all X, if object X is big, then object X is rough.\nFor all X, if person X is busy, then person X is angry.\nFor all X, Y, if person X is excited and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is bored and person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is sad, then person X is busy.\nFor all X, Y, if person X is friendly and object Y is rough and person X owns object Y, then person X dislikes object Y.\n\nAnd the following facts:\nphone is heavy.\ngeorge is a friend of bob.\ndave is tired.\ndave owns ball.\n\nQUESTION:\nCould alice is calm explain phone is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 647,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(alice).",
    "c": "brave(X) :- curious(X).\nsmooth(Y) :- heavy(Y).\nsad(Z) :- angry(Z), clever(F).\nhappy(Z) :- tall(Z), parent(Z,W), bored(W).\nangry(Y) :- hungry(Y), likes(Y,B), heavy(B).\nowns(Y,Z) :- strong(Y), dirty(Z), friend(Y,V).\ndislikes(Y,Z) :- busy(Y), rough(Z), hard(F).\nheavy(X) :- clean(X), likes(B,X), strong(B).\nangry(Z) :- calm(Z).\nsoft(Y) :- dirty(Y), owns(U,Y), clever(U).\nlight(X) :- red(X), hard(X).\nsoft(X) :- heavy(X), wet(X).\ndislikes(X,Y) :- strong(X), red(Y).\nwet(X) :- new(X).\nenemy(X,Y) :- busy(X), angry(Y).\nsibling(X,Y) :- bored(X), bored(Y).\nrough(X) :- clean(X).\nsoft(X) :- clean(X), smooth(X).\ndislikes(X,Y) :- bored(X), red(Y), likes(X,Y).\nwet(X) :- dirty(X).\ncurious(alice).\nparent(george,alice).\ndislikes(alice,phone).\nlikes(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is brave.\nFor all Y, if object Y is heavy, then object Y is smooth.\nFor all Z, if there exists F such that person Z is angry and person F is clever, then person Z is sad.\nFor all Z, if there exists W such that person Z is tall and person Z is a parent of person W and person W is bored, then person Z is happy.\nFor all Y, if there exists B such that person Y is hungry and person Y likes object B and object B is heavy, then person Y is angry.\nFor all Y, Z, if there exists V such that person Y is strong and object Z is dirty and person Y is a friend of person V, then person Y owns object Z.\nFor all Y, Z, if there exists F such that person Y is busy and object Z is rough and object F is hard, then person Y dislikes object Z.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is strong, then object X is heavy.\nFor all Z, if person Z is calm, then person Z is angry.\nFor all Y, if there exists U such that object Y is dirty and person U owns object Y and person U is clever, then object Y is soft.\nFor all X, if object X is red and object X is hard, then object X is light.\nFor all X, if object X is heavy and object X is wet, then object X is soft.\nFor all X, Y, if person X is strong and object Y is red, then person X dislikes object Y.\nFor all X, if object X is new, then object X is wet.\nFor all X, Y, if person X is busy and person Y is angry, then person X is an enemy of person Y.\nFor all X, Y, if person X is bored and person Y is bored, then person X is a sibling of person Y.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is clean and object X is smooth, then object X is soft.\nFor all X, Y, if person X is bored and object Y is red and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is dirty, then object X is wet.\n\nAnd the following facts:\nalice is curious.\ngeorge is a parent of alice.\nalice dislikes phone.\nbob likes pencil.\n\nQUESTION:\nIs alice is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 648,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(phone).",
    "c": "brave(X) :- curious(X).\nsmooth(Y) :- heavy(Y).\nsad(Z) :- angry(Z), clever(F).\nhappy(Z) :- tall(Z), parent(Z,W), bored(W).\nangry(Y) :- hungry(Y), likes(Y,B), heavy(B).\nowns(Y,Z) :- strong(Y), dirty(Z), friend(Y,V).\ndislikes(Y,Z) :- busy(Y), rough(Z), hard(F).\nheavy(X) :- clean(X), likes(B,X), strong(B).\nangry(Z) :- calm(Z).\nsoft(Y) :- dirty(Y), owns(U,Y), clever(U).\nlight(X) :- red(X), hard(X).\nsoft(X) :- heavy(X), wet(X).\ndislikes(X,Y) :- strong(X), red(Y).\nwet(X) :- new(X).\nenemy(X,Y) :- busy(X), angry(Y).\nsibling(X,Y) :- bored(X), bored(Y).\nrough(X) :- clean(X).\nsoft(X) :- clean(X), smooth(X).\ndislikes(X,Y) :- bored(X), red(Y), likes(X,Y).\nwet(X) :- dirty(X).\ncurious(alice).\nparent(george,alice).\ndislikes(alice,phone).\nlikes(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is brave.\nFor all Y, if object Y is heavy, then object Y is smooth.\nFor all Z, if there exists F such that person Z is angry and person F is clever, then person Z is sad.\nFor all Z, if there exists W such that person Z is tall and person Z is a parent of person W and person W is bored, then person Z is happy.\nFor all Y, if there exists B such that person Y is hungry and person Y likes object B and object B is heavy, then person Y is angry.\nFor all Y, Z, if there exists V such that person Y is strong and object Z is dirty and person Y is a friend of person V, then person Y owns object Z.\nFor all Y, Z, if there exists F such that person Y is busy and object Z is rough and object F is hard, then person Y dislikes object Z.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is strong, then object X is heavy.\nFor all Z, if person Z is calm, then person Z is angry.\nFor all Y, if there exists U such that object Y is dirty and person U owns object Y and person U is clever, then object Y is soft.\nFor all X, if object X is red and object X is hard, then object X is light.\nFor all X, if object X is heavy and object X is wet, then object X is soft.\nFor all X, Y, if person X is strong and object Y is red, then person X dislikes object Y.\nFor all X, if object X is new, then object X is wet.\nFor all X, Y, if person X is busy and person Y is angry, then person X is an enemy of person Y.\nFor all X, Y, if person X is bored and person Y is bored, then person X is a sibling of person Y.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is clean and object X is smooth, then object X is soft.\nFor all X, Y, if person X is bored and object Y is red and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is dirty, then object X is wet.\n\nAnd the following facts:\nalice is curious.\ngeorge is a parent of alice.\nalice dislikes phone.\nbob likes pencil.\n\nQUESTION:\nIs phone is smooth true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 649,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(alice).",
    "c": "brave(X) :- curious(X).\nsmooth(Y) :- heavy(Y).\nsad(Z) :- angry(Z), clever(F).\nhappy(Z) :- tall(Z), parent(Z,W), bored(W).\nangry(Y) :- hungry(Y), likes(Y,B), heavy(B).\nowns(Y,Z) :- strong(Y), dirty(Z), friend(Y,V).\ndislikes(Y,Z) :- busy(Y), rough(Z), hard(F).\nheavy(X) :- clean(X), likes(B,X), strong(B).\nangry(Z) :- calm(Z).\nsoft(Y) :- dirty(Y), owns(U,Y), clever(U).\nlight(X) :- red(X), hard(X).\nsoft(X) :- heavy(X), wet(X).\ndislikes(X,Y) :- strong(X), red(Y).\nwet(X) :- new(X).\nenemy(X,Y) :- busy(X), angry(Y).\nsibling(X,Y) :- bored(X), bored(Y).\nrough(X) :- clean(X).\nsoft(X) :- clean(X), smooth(X).\ndislikes(X,Y) :- bored(X), red(Y), likes(X,Y).\nwet(X) :- dirty(X).\nbrave(alice).\nparent(george,alice).\ndislikes(alice,phone).\nlikes(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is brave.\nFor all Y, if object Y is heavy, then object Y is smooth.\nFor all Z, if there exists F such that person Z is angry and person F is clever, then person Z is sad.\nFor all Z, if there exists W such that person Z is tall and person Z is a parent of person W and person W is bored, then person Z is happy.\nFor all Y, if there exists B such that person Y is hungry and person Y likes object B and object B is heavy, then person Y is angry.\nFor all Y, Z, if there exists V such that person Y is strong and object Z is dirty and person Y is a friend of person V, then person Y owns object Z.\nFor all Y, Z, if there exists F such that person Y is busy and object Z is rough and object F is hard, then person Y dislikes object Z.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is strong, then object X is heavy.\nFor all Z, if person Z is calm, then person Z is angry.\nFor all Y, if there exists U such that object Y is dirty and person U owns object Y and person U is clever, then object Y is soft.\nFor all X, if object X is red and object X is hard, then object X is light.\nFor all X, if object X is heavy and object X is wet, then object X is soft.\nFor all X, Y, if person X is strong and object Y is red, then person X dislikes object Y.\nFor all X, if object X is new, then object X is wet.\nFor all X, Y, if person X is busy and person Y is angry, then person X is an enemy of person Y.\nFor all X, Y, if person X is bored and person Y is bored, then person X is a sibling of person Y.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is clean and object X is smooth, then object X is soft.\nFor all X, Y, if person X is bored and object Y is red and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is dirty, then object X is wet.\n\nAnd the following facts:\nalice is brave.\ngeorge is a parent of alice.\nalice dislikes phone.\nbob likes pencil.\n\nQUESTION:\nCould alice is curious explain alice is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 650,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(frank).",
    "c": "brave(X) :- curious(X).\nsmooth(Y) :- heavy(Y).\nsad(Z) :- angry(Z), clever(F).\nhappy(Z) :- tall(Z), parent(Z,W), bored(W).\nangry(Y) :- hungry(Y), likes(Y,B), heavy(B).\nowns(Y,Z) :- strong(Y), dirty(Z), friend(Y,V).\ndislikes(Y,Z) :- busy(Y), rough(Z), hard(F).\nheavy(X) :- clean(X), likes(B,X), strong(B).\nangry(Z) :- calm(Z).\nsoft(Y) :- dirty(Y), owns(U,Y), clever(U).\nlight(X) :- red(X), hard(X).\nsoft(X) :- heavy(X), wet(X).\ndislikes(X,Y) :- strong(X), red(Y).\nwet(X) :- new(X).\nenemy(X,Y) :- busy(X), angry(Y).\nsibling(X,Y) :- bored(X), bored(Y).\nrough(X) :- clean(X).\nsoft(X) :- clean(X), smooth(X).\ndislikes(X,Y) :- bored(X), red(Y), likes(X,Y).\nwet(X) :- dirty(X).\nbrave(alice).\nparent(george,alice).\ndislikes(alice,phone).\nlikes(bob,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is brave.\nFor all Y, if object Y is heavy, then object Y is smooth.\nFor all Z, if there exists F such that person Z is angry and person F is clever, then person Z is sad.\nFor all Z, if there exists W such that person Z is tall and person Z is a parent of person W and person W is bored, then person Z is happy.\nFor all Y, if there exists B such that person Y is hungry and person Y likes object B and object B is heavy, then person Y is angry.\nFor all Y, Z, if there exists V such that person Y is strong and object Z is dirty and person Y is a friend of person V, then person Y owns object Z.\nFor all Y, Z, if there exists F such that person Y is busy and object Z is rough and object F is hard, then person Y dislikes object Z.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is strong, then object X is heavy.\nFor all Z, if person Z is calm, then person Z is angry.\nFor all Y, if there exists U such that object Y is dirty and person U owns object Y and person U is clever, then object Y is soft.\nFor all X, if object X is red and object X is hard, then object X is light.\nFor all X, if object X is heavy and object X is wet, then object X is soft.\nFor all X, Y, if person X is strong and object Y is red, then person X dislikes object Y.\nFor all X, if object X is new, then object X is wet.\nFor all X, Y, if person X is busy and person Y is angry, then person X is an enemy of person Y.\nFor all X, Y, if person X is bored and person Y is bored, then person X is a sibling of person Y.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is clean and object X is smooth, then object X is soft.\nFor all X, Y, if person X is bored and object Y is red and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is dirty, then object X is wet.\n\nAnd the following facts:\nalice is brave.\ngeorge is a parent of alice.\nalice dislikes phone.\nbob likes pencil.\n\nQUESTION:\nCould frank is happy explain alice is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 651,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "smooth(book).",
    "c": "smooth(X) :- clean(X).\nrough(Y) :- soft(Y), owns(V,Y), strong(V).\nsad(X) :- busy(X), dislikes(X,A), small(A).\nfunny(Y) :- strong(Y).\nparent(X,Z) :- hungry(Z), sad(X), rough(F).\nnew(Z) :- new(Z).\nsmall(X) :- dirty(X), owns(W,X), excited(W).\ntall(X) :- clever(X).\nstrong(X) :- happy(X).\nangry(Z) :- angry(Z), sibling(Z,A), curious(A).\ntired(Y) :- clever(Y), friend(Y,A), funny(A).\ndislikes(X,Y) :- small(Y), brave(X).\nstrong(Z) :- calm(Z).\nnew(Z) :- old(Z), likes(V,Z), brave(V).\nsmall(X) :- dirty(X).\nsad(X) :- strong(X).\nbored(X) :- happy(X).\nfunny(X) :- bored(X), bored(X).\nhappy(X) :- calm(X).\ncalm(X) :- brave(X).\nclean(book).\nparent(eve,bob).\nheavy(ball).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is smooth.\nFor all Y, if there exists V such that object Y is soft and person V owns object Y and person V is strong, then object Y is rough.\nFor all X, if there exists A such that person X is busy and person X dislikes object A and object A is small, then person X is sad.\nFor all Y, if person Y is strong, then person Y is funny.\nFor all X, Z, if there exists F such that person Z is hungry and person X is sad and object F is rough, then person X is a parent of person Z.\nFor all Z, if object Z is new, then object Z is new.\nFor all X, if there exists W such that object X is dirty and person W owns object X and person W is excited, then object X is small.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if person X is happy, then person X is strong.\nFor all Z, if there exists A such that person Z is angry and person Z is a sibling of person A and person A is curious, then person Z is angry.\nFor all Y, if there exists A such that person Y is clever and person Y is a friend of person A and person A is funny, then person Y is tired.\nFor all X, Y, if object Y is small and person X is brave, then person X dislikes object Y.\nFor all Z, if person Z is calm, then person Z is strong.\nFor all Z, if there exists V such that object Z is old and person V likes object Z and person V is brave, then object Z is new.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored and person X is bored, then person X is funny.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is brave, then person X is calm.\n\nAnd the following facts:\nbook is clean.\neve is a parent of bob.\nball is heavy.\nbob is a friend of frank.\n\nQUESTION:\nIs book is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 652,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(george).",
    "c": "smooth(X) :- clean(X).\nrough(Y) :- soft(Y), owns(V,Y), strong(V).\nsad(X) :- busy(X), dislikes(X,A), small(A).\nfunny(Y) :- strong(Y).\nparent(X,Z) :- hungry(Z), sad(X), rough(F).\nnew(Z) :- new(Z).\nsmall(X) :- dirty(X), owns(W,X), excited(W).\ntall(X) :- clever(X).\nstrong(X) :- happy(X).\nangry(Z) :- angry(Z), sibling(Z,A), curious(A).\ntired(Y) :- clever(Y), friend(Y,A), funny(A).\ndislikes(X,Y) :- small(Y), brave(X).\nstrong(Z) :- calm(Z).\nnew(Z) :- old(Z), likes(V,Z), brave(V).\nsmall(X) :- dirty(X).\nsad(X) :- strong(X).\nbored(X) :- happy(X).\nfunny(X) :- bored(X), bored(X).\nhappy(X) :- calm(X).\ncalm(X) :- brave(X).\nclean(book).\nparent(eve,bob).\nheavy(ball).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is smooth.\nFor all Y, if there exists V such that object Y is soft and person V owns object Y and person V is strong, then object Y is rough.\nFor all X, if there exists A such that person X is busy and person X dislikes object A and object A is small, then person X is sad.\nFor all Y, if person Y is strong, then person Y is funny.\nFor all X, Z, if there exists F such that person Z is hungry and person X is sad and object F is rough, then person X is a parent of person Z.\nFor all Z, if object Z is new, then object Z is new.\nFor all X, if there exists W such that object X is dirty and person W owns object X and person W is excited, then object X is small.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if person X is happy, then person X is strong.\nFor all Z, if there exists A such that person Z is angry and person Z is a sibling of person A and person A is curious, then person Z is angry.\nFor all Y, if there exists A such that person Y is clever and person Y is a friend of person A and person A is funny, then person Y is tired.\nFor all X, Y, if object Y is small and person X is brave, then person X dislikes object Y.\nFor all Z, if person Z is calm, then person Z is strong.\nFor all Z, if there exists V such that object Z is old and person V likes object Z and person V is brave, then object Z is new.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored and person X is bored, then person X is funny.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is brave, then person X is calm.\n\nAnd the following facts:\nbook is clean.\neve is a parent of bob.\nball is heavy.\nbob is a friend of frank.\n\nQUESTION:\nIs george is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 653,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(book).",
    "c": "smooth(X) :- clean(X).\nrough(Y) :- soft(Y), owns(V,Y), strong(V).\nsad(X) :- busy(X), dislikes(X,A), small(A).\nfunny(Y) :- strong(Y).\nparent(X,Z) :- hungry(Z), sad(X), rough(F).\nnew(Z) :- new(Z).\nsmall(X) :- dirty(X), owns(W,X), excited(W).\ntall(X) :- clever(X).\nstrong(X) :- happy(X).\nangry(Z) :- angry(Z), sibling(Z,A), curious(A).\ntired(Y) :- clever(Y), friend(Y,A), funny(A).\ndislikes(X,Y) :- small(Y), brave(X).\nstrong(Z) :- calm(Z).\nnew(Z) :- old(Z), likes(V,Z), brave(V).\nsmall(X) :- dirty(X).\nsad(X) :- strong(X).\nbored(X) :- happy(X).\nfunny(X) :- bored(X), bored(X).\nhappy(X) :- calm(X).\ncalm(X) :- brave(X).\nsmooth(book).\nparent(eve,bob).\nheavy(ball).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is smooth.\nFor all Y, if there exists V such that object Y is soft and person V owns object Y and person V is strong, then object Y is rough.\nFor all X, if there exists A such that person X is busy and person X dislikes object A and object A is small, then person X is sad.\nFor all Y, if person Y is strong, then person Y is funny.\nFor all X, Z, if there exists F such that person Z is hungry and person X is sad and object F is rough, then person X is a parent of person Z.\nFor all Z, if object Z is new, then object Z is new.\nFor all X, if there exists W such that object X is dirty and person W owns object X and person W is excited, then object X is small.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if person X is happy, then person X is strong.\nFor all Z, if there exists A such that person Z is angry and person Z is a sibling of person A and person A is curious, then person Z is angry.\nFor all Y, if there exists A such that person Y is clever and person Y is a friend of person A and person A is funny, then person Y is tired.\nFor all X, Y, if object Y is small and person X is brave, then person X dislikes object Y.\nFor all Z, if person Z is calm, then person Z is strong.\nFor all Z, if there exists V such that object Z is old and person V likes object Z and person V is brave, then object Z is new.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored and person X is bored, then person X is funny.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is brave, then person X is calm.\n\nAnd the following facts:\nbook is smooth.\neve is a parent of bob.\nball is heavy.\nbob is a friend of frank.\n\nQUESTION:\nCould book is clean explain book is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 654,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "soft(ball).",
    "c": "smooth(X) :- clean(X).\nrough(Y) :- soft(Y), owns(V,Y), strong(V).\nsad(X) :- busy(X), dislikes(X,A), small(A).\nfunny(Y) :- strong(Y).\nparent(X,Z) :- hungry(Z), sad(X), rough(F).\nnew(Z) :- new(Z).\nsmall(X) :- dirty(X), owns(W,X), excited(W).\ntall(X) :- clever(X).\nstrong(X) :- happy(X).\nangry(Z) :- angry(Z), sibling(Z,A), curious(A).\ntired(Y) :- clever(Y), friend(Y,A), funny(A).\ndislikes(X,Y) :- small(Y), brave(X).\nstrong(Z) :- calm(Z).\nnew(Z) :- old(Z), likes(V,Z), brave(V).\nsmall(X) :- dirty(X).\nsad(X) :- strong(X).\nbored(X) :- happy(X).\nfunny(X) :- bored(X), bored(X).\nhappy(X) :- calm(X).\ncalm(X) :- brave(X).\nsmooth(book).\nparent(eve,bob).\nheavy(ball).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is smooth.\nFor all Y, if there exists V such that object Y is soft and person V owns object Y and person V is strong, then object Y is rough.\nFor all X, if there exists A such that person X is busy and person X dislikes object A and object A is small, then person X is sad.\nFor all Y, if person Y is strong, then person Y is funny.\nFor all X, Z, if there exists F such that person Z is hungry and person X is sad and object F is rough, then person X is a parent of person Z.\nFor all Z, if object Z is new, then object Z is new.\nFor all X, if there exists W such that object X is dirty and person W owns object X and person W is excited, then object X is small.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if person X is happy, then person X is strong.\nFor all Z, if there exists A such that person Z is angry and person Z is a sibling of person A and person A is curious, then person Z is angry.\nFor all Y, if there exists A such that person Y is clever and person Y is a friend of person A and person A is funny, then person Y is tired.\nFor all X, Y, if object Y is small and person X is brave, then person X dislikes object Y.\nFor all Z, if person Z is calm, then person Z is strong.\nFor all Z, if there exists V such that object Z is old and person V likes object Z and person V is brave, then object Z is new.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored and person X is bored, then person X is funny.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is brave, then person X is calm.\n\nAnd the following facts:\nbook is smooth.\neve is a parent of bob.\nball is heavy.\nbob is a friend of frank.\n\nQUESTION:\nCould ball is soft explain book is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 655,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "soft(ball).",
    "c": "old(X) :- clean(X).\nclean(X) :- old(X).\nsmooth(X) :- clean(X).\nold(X) :- smooth(X).\nsoft(X) :- old(X).\nsad(Z) :- hungry(Z), friend(Z,A), calm(A).\nhard(X) :- hard(X).\nbored(Y) :- calm(Y).\nbored(Y) :- weak(Y).\nlikes(Z,X) :- tired(Z), wet(X), owns(B,X).\nhungry(X) :- clever(X), parent(X,B), excited(B).\nfunny(Y) :- busy(Y), enemy(Y,A), weak(A).\ntired(Z) :- weak(Z), dislikes(Z,U), rough(U).\ncalm(Y) :- clever(Y), dislikes(Y,U), light(U).\ncurious(X) :- strong(X).\nfunny(X) :- friendly(X), brave(X).\nrough(X) :- big(X).\ndirty(X) :- wet(X).\nbored(X) :- tired(X), curious(X).\nbusy(X) :- bored(X).\nclean(ball).\nbored(bob).\nowns(carol,apple).\nwet(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all Z, if there exists A such that person Z is hungry and person Z is a friend of person A and person A is calm, then person Z is sad.\nFor all X, if object X is hard, then object X is hard.\nFor all Y, if person Y is calm, then person Y is bored.\nFor all Y, if person Y is weak, then person Y is bored.\nFor all X, Z, if there exists B such that person Z is tired and object X is wet and person B owns object X, then person Z likes object X.\nFor all X, if there exists B such that person X is clever and person X is a parent of person B and person B is excited, then person X is hungry.\nFor all Y, if there exists A such that person Y is busy and person Y is an enemy of person A and person A is weak, then person Y is funny.\nFor all Z, if there exists U such that person Z is weak and person Z dislikes object U and object U is rough, then person Z is tired.\nFor all Y, if there exists U such that person Y is clever and person Y dislikes object U and object U is light, then person Y is calm.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is friendly and person X is brave, then person X is funny.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if person X is tired and person X is curious, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\n\nAnd the following facts:\nball is clean.\nbob is bored.\ncarol owns apple.\ncar is wet.\n\nQUESTION:\nIs ball is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 656,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(bob).",
    "c": "old(X) :- clean(X).\nclean(X) :- old(X).\nsmooth(X) :- clean(X).\nold(X) :- smooth(X).\nsoft(X) :- old(X).\nsad(Z) :- hungry(Z), friend(Z,A), calm(A).\nhard(X) :- hard(X).\nbored(Y) :- calm(Y).\nbored(Y) :- weak(Y).\nlikes(Z,X) :- tired(Z), wet(X), owns(B,X).\nhungry(X) :- clever(X), parent(X,B), excited(B).\nfunny(Y) :- busy(Y), enemy(Y,A), weak(A).\ntired(Z) :- weak(Z), dislikes(Z,U), rough(U).\ncalm(Y) :- clever(Y), dislikes(Y,U), light(U).\ncurious(X) :- strong(X).\nfunny(X) :- friendly(X), brave(X).\nrough(X) :- big(X).\ndirty(X) :- wet(X).\nbored(X) :- tired(X), curious(X).\nbusy(X) :- bored(X).\nclean(ball).\nbored(bob).\nowns(carol,apple).\nwet(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all Z, if there exists A such that person Z is hungry and person Z is a friend of person A and person A is calm, then person Z is sad.\nFor all X, if object X is hard, then object X is hard.\nFor all Y, if person Y is calm, then person Y is bored.\nFor all Y, if person Y is weak, then person Y is bored.\nFor all X, Z, if there exists B such that person Z is tired and object X is wet and person B owns object X, then person Z likes object X.\nFor all X, if there exists B such that person X is clever and person X is a parent of person B and person B is excited, then person X is hungry.\nFor all Y, if there exists A such that person Y is busy and person Y is an enemy of person A and person A is weak, then person Y is funny.\nFor all Z, if there exists U such that person Z is weak and person Z dislikes object U and object U is rough, then person Z is tired.\nFor all Y, if there exists U such that person Y is clever and person Y dislikes object U and object U is light, then person Y is calm.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is friendly and person X is brave, then person X is funny.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if person X is tired and person X is curious, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\n\nAnd the following facts:\nball is clean.\nbob is bored.\ncarol owns apple.\ncar is wet.\n\nQUESTION:\nIs bob is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 657,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "old(X) :- clean(X).\nclean(X) :- old(X).\nsmooth(X) :- clean(X).\nold(X) :- smooth(X).\nsoft(X) :- old(X).\nsad(Z) :- hungry(Z), friend(Z,A), calm(A).\nhard(X) :- hard(X).\nbored(Y) :- calm(Y).\nbored(Y) :- weak(Y).\nlikes(Z,X) :- tired(Z), wet(X), owns(B,X).\nhungry(X) :- clever(X), parent(X,B), excited(B).\nfunny(Y) :- busy(Y), enemy(Y,A), weak(A).\ntired(Z) :- weak(Z), dislikes(Z,U), rough(U).\ncalm(Y) :- clever(Y), dislikes(Y,U), light(U).\ncurious(X) :- strong(X).\nfunny(X) :- friendly(X), brave(X).\nrough(X) :- big(X).\ndirty(X) :- wet(X).\nbored(X) :- tired(X), curious(X).\nbusy(X) :- bored(X).\nsoft(ball).\nbored(bob).\nowns(carol,apple).\nwet(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all Z, if there exists A such that person Z is hungry and person Z is a friend of person A and person A is calm, then person Z is sad.\nFor all X, if object X is hard, then object X is hard.\nFor all Y, if person Y is calm, then person Y is bored.\nFor all Y, if person Y is weak, then person Y is bored.\nFor all X, Z, if there exists B such that person Z is tired and object X is wet and person B owns object X, then person Z likes object X.\nFor all X, if there exists B such that person X is clever and person X is a parent of person B and person B is excited, then person X is hungry.\nFor all Y, if there exists A such that person Y is busy and person Y is an enemy of person A and person A is weak, then person Y is funny.\nFor all Z, if there exists U such that person Z is weak and person Z dislikes object U and object U is rough, then person Z is tired.\nFor all Y, if there exists U such that person Y is clever and person Y dislikes object U and object U is light, then person Y is calm.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is friendly and person X is brave, then person X is funny.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if person X is tired and person X is curious, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\n\nAnd the following facts:\nball is soft.\nbob is bored.\ncarol owns apple.\ncar is wet.\n\nQUESTION:\nCould ball is clean explain ball is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 658,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "soft(book).",
    "c": "old(X) :- clean(X).\nclean(X) :- old(X).\nsmooth(X) :- clean(X).\nold(X) :- smooth(X).\nsoft(X) :- old(X).\nsad(Z) :- hungry(Z), friend(Z,A), calm(A).\nhard(X) :- hard(X).\nbored(Y) :- calm(Y).\nbored(Y) :- weak(Y).\nlikes(Z,X) :- tired(Z), wet(X), owns(B,X).\nhungry(X) :- clever(X), parent(X,B), excited(B).\nfunny(Y) :- busy(Y), enemy(Y,A), weak(A).\ntired(Z) :- weak(Z), dislikes(Z,U), rough(U).\ncalm(Y) :- clever(Y), dislikes(Y,U), light(U).\ncurious(X) :- strong(X).\nfunny(X) :- friendly(X), brave(X).\nrough(X) :- big(X).\ndirty(X) :- wet(X).\nbored(X) :- tired(X), curious(X).\nbusy(X) :- bored(X).\nsoft(ball).\nbored(bob).\nowns(carol,apple).\nwet(car).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all Z, if there exists A such that person Z is hungry and person Z is a friend of person A and person A is calm, then person Z is sad.\nFor all X, if object X is hard, then object X is hard.\nFor all Y, if person Y is calm, then person Y is bored.\nFor all Y, if person Y is weak, then person Y is bored.\nFor all X, Z, if there exists B such that person Z is tired and object X is wet and person B owns object X, then person Z likes object X.\nFor all X, if there exists B such that person X is clever and person X is a parent of person B and person B is excited, then person X is hungry.\nFor all Y, if there exists A such that person Y is busy and person Y is an enemy of person A and person A is weak, then person Y is funny.\nFor all Z, if there exists U such that person Z is weak and person Z dislikes object U and object U is rough, then person Z is tired.\nFor all Y, if there exists U such that person Y is clever and person Y dislikes object U and object U is light, then person Y is calm.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is friendly and person X is brave, then person X is funny.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if person X is tired and person X is curious, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\n\nAnd the following facts:\nball is soft.\nbob is bored.\ncarol owns apple.\ncar is wet.\n\nQUESTION:\nCould book is soft explain ball is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 659,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "soft(apple).",
    "c": "light(X) :- small(X).\nbig(X) :- light(X).\nold(X) :- big(X).\nred(X) :- old(X).\nsoft(X) :- red(X).\nsad(Z) :- bored(Z), new(A).\ndislikes(X,Y) :- rough(Y), sad(X), new(C).\nnew(Y) :- heavy(Y), sad(A).\nfriendly(Z) :- happy(Z), enemy(Z,W), bored(W).\nbored(Y) :- tired(Y), enemy(Y,B), calm(B).\ntall(Y) :- curious(Y), likes(Y,B), wet(B).\nwet(X) :- new(X).\ntired(X) :- tall(X).\ncalm(X) :- tall(X).\nnew(X) :- clean(X).\nparent(X,Y) :- funny(X), calm(Y).\nsmooth(X) :- heavy(X).\nfriend(X,Y) :- weak(X), weak(Y).\nwet(X) :- heavy(X), new(X).\nnew(X) :- dirty(X).\nsmall(apple).\nangry(george).\ndislikes(frank,ball).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all Z, if there exists A such that person Z is bored and object A is new, then person Z is sad.\nFor all X, Y, if there exists C such that object Y is rough and person X is sad and object C is new, then person X dislikes object Y.\nFor all Y, if there exists A such that object Y is heavy and person A is sad, then object Y is new.\nFor all Z, if there exists W such that person Z is happy and person Z is an enemy of person W and person W is bored, then person Z is friendly.\nFor all Y, if there exists B such that person Y is tired and person Y is an enemy of person B and person B is calm, then person Y is bored.\nFor all Y, if there exists B such that person Y is curious and person Y likes object B and object B is wet, then person Y is tall.\nFor all X, if object X is new, then object X is wet.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if object X is clean, then object X is new.\nFor all X, Y, if person X is funny and person Y is calm, then person X is a parent of person Y.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a friend of person Y.\nFor all X, if object X is heavy and object X is new, then object X is wet.\nFor all X, if object X is dirty, then object X is new.\n\nAnd the following facts:\napple is small.\ngeorge is angry.\nfrank dislikes ball.\nbook is wet.\n\nQUESTION:\nIs apple is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 660,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(eve).",
    "c": "light(X) :- small(X).\nbig(X) :- light(X).\nold(X) :- big(X).\nred(X) :- old(X).\nsoft(X) :- red(X).\nsad(Z) :- bored(Z), new(A).\ndislikes(X,Y) :- rough(Y), sad(X), new(C).\nnew(Y) :- heavy(Y), sad(A).\nfriendly(Z) :- happy(Z), enemy(Z,W), bored(W).\nbored(Y) :- tired(Y), enemy(Y,B), calm(B).\ntall(Y) :- curious(Y), likes(Y,B), wet(B).\nwet(X) :- new(X).\ntired(X) :- tall(X).\ncalm(X) :- tall(X).\nnew(X) :- clean(X).\nparent(X,Y) :- funny(X), calm(Y).\nsmooth(X) :- heavy(X).\nfriend(X,Y) :- weak(X), weak(Y).\nwet(X) :- heavy(X), new(X).\nnew(X) :- dirty(X).\nsmall(apple).\nangry(george).\ndislikes(frank,ball).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all Z, if there exists A such that person Z is bored and object A is new, then person Z is sad.\nFor all X, Y, if there exists C such that object Y is rough and person X is sad and object C is new, then person X dislikes object Y.\nFor all Y, if there exists A such that object Y is heavy and person A is sad, then object Y is new.\nFor all Z, if there exists W such that person Z is happy and person Z is an enemy of person W and person W is bored, then person Z is friendly.\nFor all Y, if there exists B such that person Y is tired and person Y is an enemy of person B and person B is calm, then person Y is bored.\nFor all Y, if there exists B such that person Y is curious and person Y likes object B and object B is wet, then person Y is tall.\nFor all X, if object X is new, then object X is wet.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if object X is clean, then object X is new.\nFor all X, Y, if person X is funny and person Y is calm, then person X is a parent of person Y.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a friend of person Y.\nFor all X, if object X is heavy and object X is new, then object X is wet.\nFor all X, if object X is dirty, then object X is new.\n\nAnd the following facts:\napple is small.\ngeorge is angry.\nfrank dislikes ball.\nbook is wet.\n\nQUESTION:\nIs eve is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 661,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(apple).",
    "c": "light(X) :- small(X).\nbig(X) :- light(X).\nold(X) :- big(X).\nred(X) :- old(X).\nsoft(X) :- red(X).\nsad(Z) :- bored(Z), new(A).\ndislikes(X,Y) :- rough(Y), sad(X), new(C).\nnew(Y) :- heavy(Y), sad(A).\nfriendly(Z) :- happy(Z), enemy(Z,W), bored(W).\nbored(Y) :- tired(Y), enemy(Y,B), calm(B).\ntall(Y) :- curious(Y), likes(Y,B), wet(B).\nwet(X) :- new(X).\ntired(X) :- tall(X).\ncalm(X) :- tall(X).\nnew(X) :- clean(X).\nparent(X,Y) :- funny(X), calm(Y).\nsmooth(X) :- heavy(X).\nfriend(X,Y) :- weak(X), weak(Y).\nwet(X) :- heavy(X), new(X).\nnew(X) :- dirty(X).\nsoft(apple).\nangry(george).\ndislikes(frank,ball).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all Z, if there exists A such that person Z is bored and object A is new, then person Z is sad.\nFor all X, Y, if there exists C such that object Y is rough and person X is sad and object C is new, then person X dislikes object Y.\nFor all Y, if there exists A such that object Y is heavy and person A is sad, then object Y is new.\nFor all Z, if there exists W such that person Z is happy and person Z is an enemy of person W and person W is bored, then person Z is friendly.\nFor all Y, if there exists B such that person Y is tired and person Y is an enemy of person B and person B is calm, then person Y is bored.\nFor all Y, if there exists B such that person Y is curious and person Y likes object B and object B is wet, then person Y is tall.\nFor all X, if object X is new, then object X is wet.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if object X is clean, then object X is new.\nFor all X, Y, if person X is funny and person Y is calm, then person X is a parent of person Y.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a friend of person Y.\nFor all X, if object X is heavy and object X is new, then object X is wet.\nFor all X, if object X is dirty, then object X is new.\n\nAnd the following facts:\napple is soft.\ngeorge is angry.\nfrank dislikes ball.\nbook is wet.\n\nQUESTION:\nCould apple is small explain apple is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 662,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(george).",
    "c": "light(X) :- small(X).\nbig(X) :- light(X).\nold(X) :- big(X).\nred(X) :- old(X).\nsoft(X) :- red(X).\nsad(Z) :- bored(Z), new(A).\ndislikes(X,Y) :- rough(Y), sad(X), new(C).\nnew(Y) :- heavy(Y), sad(A).\nfriendly(Z) :- happy(Z), enemy(Z,W), bored(W).\nbored(Y) :- tired(Y), enemy(Y,B), calm(B).\ntall(Y) :- curious(Y), likes(Y,B), wet(B).\nwet(X) :- new(X).\ntired(X) :- tall(X).\ncalm(X) :- tall(X).\nnew(X) :- clean(X).\nparent(X,Y) :- funny(X), calm(Y).\nsmooth(X) :- heavy(X).\nfriend(X,Y) :- weak(X), weak(Y).\nwet(X) :- heavy(X), new(X).\nnew(X) :- dirty(X).\nsoft(apple).\nangry(george).\ndislikes(frank,ball).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all Z, if there exists A such that person Z is bored and object A is new, then person Z is sad.\nFor all X, Y, if there exists C such that object Y is rough and person X is sad and object C is new, then person X dislikes object Y.\nFor all Y, if there exists A such that object Y is heavy and person A is sad, then object Y is new.\nFor all Z, if there exists W such that person Z is happy and person Z is an enemy of person W and person W is bored, then person Z is friendly.\nFor all Y, if there exists B such that person Y is tired and person Y is an enemy of person B and person B is calm, then person Y is bored.\nFor all Y, if there exists B such that person Y is curious and person Y likes object B and object B is wet, then person Y is tall.\nFor all X, if object X is new, then object X is wet.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if object X is clean, then object X is new.\nFor all X, Y, if person X is funny and person Y is calm, then person X is a parent of person Y.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a friend of person Y.\nFor all X, if object X is heavy and object X is new, then object X is wet.\nFor all X, if object X is dirty, then object X is new.\n\nAnd the following facts:\napple is soft.\ngeorge is angry.\nfrank dislikes ball.\nbook is wet.\n\nQUESTION:\nCould george is happy explain apple is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 663,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(george).",
    "c": "brave(X) :- excited(X).\nangry(X) :- brave(X).\ntall(X) :- angry(X).\nsad(X) :- tall(X).\nbusy(X) :- sad(X).\nenemy(Z,Y) :- curious(Y), tired(Z), friend(Y,B).\nfriend(Z,X) :- strong(Z), weak(X), parent(Z,W).\ncalm(X) :- calm(X).\ntired(Z) :- hungry(Z), parent(Z,W), tired(W).\ntired(Z) :- weak(Z), likes(Z,A), hard(A).\nlight(Y) :- new(Y), likes(W,Y), curious(W).\nsmooth(Y) :- small(Y), owns(U,Y), curious(U).\nhungry(X) :- happy(X).\ncurious(X) :- tired(X).\nheavy(X) :- small(X), big(X).\nsmooth(X) :- soft(X).\nparent(X,Y) :- weak(X), weak(Y).\nfriendly(X) :- strong(X).\nhard(X) :- old(X).\nlight(X) :- hard(X).\nexcited(george).\nlight(phone).\nenemy(frank,george).\ntired(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is busy.\nFor all Y, Z, if there exists B such that person Y is curious and person Z is tired and person Y is a friend of person B, then person Z is an enemy of person Y.\nFor all X, Z, if there exists W such that person Z is strong and person X is weak and person Z is a parent of person W, then person Z is a friend of person X.\nFor all X, if person X is calm, then person X is calm.\nFor all Z, if there exists W such that person Z is hungry and person Z is a parent of person W and person W is tired, then person Z is tired.\nFor all Z, if there exists A such that person Z is weak and person Z likes object A and object A is hard, then person Z is tired.\nFor all Y, if there exists W such that object Y is new and person W likes object Y and person W is curious, then object Y is light.\nFor all Y, if there exists U such that object Y is small and person U owns object Y and person U is curious, then object Y is smooth.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is tired, then person X is curious.\nFor all X, if object X is small and object X is big, then object X is heavy.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if object X is old, then object X is hard.\nFor all X, if object X is hard, then object X is light.\n\nAnd the following facts:\ngeorge is excited.\nphone is light.\nfrank is an enemy of george.\ngeorge is tired.\n\nQUESTION:\nIs george is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 664,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "big(pencil).",
    "c": "brave(X) :- excited(X).\nangry(X) :- brave(X).\ntall(X) :- angry(X).\nsad(X) :- tall(X).\nbusy(X) :- sad(X).\nenemy(Z,Y) :- curious(Y), tired(Z), friend(Y,B).\nfriend(Z,X) :- strong(Z), weak(X), parent(Z,W).\ncalm(X) :- calm(X).\ntired(Z) :- hungry(Z), parent(Z,W), tired(W).\ntired(Z) :- weak(Z), likes(Z,A), hard(A).\nlight(Y) :- new(Y), likes(W,Y), curious(W).\nsmooth(Y) :- small(Y), owns(U,Y), curious(U).\nhungry(X) :- happy(X).\ncurious(X) :- tired(X).\nheavy(X) :- small(X), big(X).\nsmooth(X) :- soft(X).\nparent(X,Y) :- weak(X), weak(Y).\nfriendly(X) :- strong(X).\nhard(X) :- old(X).\nlight(X) :- hard(X).\nexcited(george).\nlight(phone).\nenemy(frank,george).\ntired(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is busy.\nFor all Y, Z, if there exists B such that person Y is curious and person Z is tired and person Y is a friend of person B, then person Z is an enemy of person Y.\nFor all X, Z, if there exists W such that person Z is strong and person X is weak and person Z is a parent of person W, then person Z is a friend of person X.\nFor all X, if person X is calm, then person X is calm.\nFor all Z, if there exists W such that person Z is hungry and person Z is a parent of person W and person W is tired, then person Z is tired.\nFor all Z, if there exists A such that person Z is weak and person Z likes object A and object A is hard, then person Z is tired.\nFor all Y, if there exists W such that object Y is new and person W likes object Y and person W is curious, then object Y is light.\nFor all Y, if there exists U such that object Y is small and person U owns object Y and person U is curious, then object Y is smooth.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is tired, then person X is curious.\nFor all X, if object X is small and object X is big, then object X is heavy.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if object X is old, then object X is hard.\nFor all X, if object X is hard, then object X is light.\n\nAnd the following facts:\ngeorge is excited.\nphone is light.\nfrank is an enemy of george.\ngeorge is tired.\n\nQUESTION:\nIs pencil is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 665,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(george).",
    "c": "brave(X) :- excited(X).\nangry(X) :- brave(X).\ntall(X) :- angry(X).\nsad(X) :- tall(X).\nbusy(X) :- sad(X).\nenemy(Z,Y) :- curious(Y), tired(Z), friend(Y,B).\nfriend(Z,X) :- strong(Z), weak(X), parent(Z,W).\ncalm(X) :- calm(X).\ntired(Z) :- hungry(Z), parent(Z,W), tired(W).\ntired(Z) :- weak(Z), likes(Z,A), hard(A).\nlight(Y) :- new(Y), likes(W,Y), curious(W).\nsmooth(Y) :- small(Y), owns(U,Y), curious(U).\nhungry(X) :- happy(X).\ncurious(X) :- tired(X).\nheavy(X) :- small(X), big(X).\nsmooth(X) :- soft(X).\nparent(X,Y) :- weak(X), weak(Y).\nfriendly(X) :- strong(X).\nhard(X) :- old(X).\nlight(X) :- hard(X).\nbusy(george).\nlight(phone).\nenemy(frank,george).\ntired(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is busy.\nFor all Y, Z, if there exists B such that person Y is curious and person Z is tired and person Y is a friend of person B, then person Z is an enemy of person Y.\nFor all X, Z, if there exists W such that person Z is strong and person X is weak and person Z is a parent of person W, then person Z is a friend of person X.\nFor all X, if person X is calm, then person X is calm.\nFor all Z, if there exists W such that person Z is hungry and person Z is a parent of person W and person W is tired, then person Z is tired.\nFor all Z, if there exists A such that person Z is weak and person Z likes object A and object A is hard, then person Z is tired.\nFor all Y, if there exists W such that object Y is new and person W likes object Y and person W is curious, then object Y is light.\nFor all Y, if there exists U such that object Y is small and person U owns object Y and person U is curious, then object Y is smooth.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is tired, then person X is curious.\nFor all X, if object X is small and object X is big, then object X is heavy.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if object X is old, then object X is hard.\nFor all X, if object X is hard, then object X is light.\n\nAnd the following facts:\ngeorge is busy.\nphone is light.\nfrank is an enemy of george.\ngeorge is tired.\n\nQUESTION:\nCould george is excited explain george is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 666,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "brave(X) :- excited(X).\nangry(X) :- brave(X).\ntall(X) :- angry(X).\nsad(X) :- tall(X).\nbusy(X) :- sad(X).\nenemy(Z,Y) :- curious(Y), tired(Z), friend(Y,B).\nfriend(Z,X) :- strong(Z), weak(X), parent(Z,W).\ncalm(X) :- calm(X).\ntired(Z) :- hungry(Z), parent(Z,W), tired(W).\ntired(Z) :- weak(Z), likes(Z,A), hard(A).\nlight(Y) :- new(Y), likes(W,Y), curious(W).\nsmooth(Y) :- small(Y), owns(U,Y), curious(U).\nhungry(X) :- happy(X).\ncurious(X) :- tired(X).\nheavy(X) :- small(X), big(X).\nsmooth(X) :- soft(X).\nparent(X,Y) :- weak(X), weak(Y).\nfriendly(X) :- strong(X).\nhard(X) :- old(X).\nlight(X) :- hard(X).\nbusy(george).\nlight(phone).\nenemy(frank,george).\ntired(george).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is busy.\nFor all Y, Z, if there exists B such that person Y is curious and person Z is tired and person Y is a friend of person B, then person Z is an enemy of person Y.\nFor all X, Z, if there exists W such that person Z is strong and person X is weak and person Z is a parent of person W, then person Z is a friend of person X.\nFor all X, if person X is calm, then person X is calm.\nFor all Z, if there exists W such that person Z is hungry and person Z is a parent of person W and person W is tired, then person Z is tired.\nFor all Z, if there exists A such that person Z is weak and person Z likes object A and object A is hard, then person Z is tired.\nFor all Y, if there exists W such that object Y is new and person W likes object Y and person W is curious, then object Y is light.\nFor all Y, if there exists U such that object Y is small and person U owns object Y and person U is curious, then object Y is smooth.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is tired, then person X is curious.\nFor all X, if object X is small and object X is big, then object X is heavy.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if object X is old, then object X is hard.\nFor all X, if object X is hard, then object X is light.\n\nAnd the following facts:\ngeorge is busy.\nphone is light.\nfrank is an enemy of george.\ngeorge is tired.\n\nQUESTION:\nCould pencil is hard explain george is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 667,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(ball).",
    "c": "light(X) :- heavy(X).\nred(X) :- light(X).\nrough(X) :- red(X).\ndirty(X) :- rough(X).\nbig(X) :- dirty(X).\ntired(Y) :- weak(Y).\nsoft(Z) :- smooth(Z).\ndislikes(X,Y) :- smooth(Y), curious(X), enemy(X,B).\nsibling(X,Z) :- strong(Z), brave(X), likes(X,U).\nlikes(X,Y) :- clean(Y), happy(X), clever(C).\nweak(X) :- angry(X), sibling(X,W), angry(W).\ncalm(X) :- weak(X), dislikes(X,V), clean(V).\nweak(Z) :- clever(Z), soft(E).\nsmall(X) :- new(X), old(X).\nclever(X) :- friendly(X), hungry(X).\ntired(X) :- sad(X).\nold(X) :- small(X).\nhappy(X) :- friendly(X), bored(X).\nowns(X,Y) :- tall(X), new(Y).\nclever(X) :- tired(X), curious(X).\nheavy(ball).\ntall(bob).\nenemy(carol,frank).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all Y, if person Y is weak, then person Y is tired.\nFor all Z, if object Z is smooth, then object Z is soft.\nFor all X, Y, if there exists B such that object Y is smooth and person X is curious and person X is an enemy of person B, then person X dislikes object Y.\nFor all X, Z, if there exists U such that person Z is strong and person X is brave and person X likes object U, then person X is a sibling of person Z.\nFor all X, Y, if there exists C such that object Y is clean and person X is happy and person C is clever, then person X likes object Y.\nFor all X, if there exists W such that person X is angry and person X is a sibling of person W and person W is angry, then person X is weak.\nFor all X, if there exists V such that person X is weak and person X dislikes object V and object V is clean, then person X is calm.\nFor all Z, if there exists E such that person Z is clever and object E is soft, then person Z is weak.\nFor all X, if object X is new and object X is old, then object X is small.\nFor all X, if person X is friendly and person X is hungry, then person X is clever.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if object X is small, then object X is old.\nFor all X, if person X is friendly and person X is bored, then person X is happy.\nFor all X, Y, if person X is tall and object Y is new, then person X owns object Y.\nFor all X, if person X is tired and person X is curious, then person X is clever.\n\nAnd the following facts:\nball is heavy.\nbob is tall.\ncarol is an enemy of frank.\ncarol owns book.\n\nQUESTION:\nIs ball is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 668,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(car).",
    "c": "light(X) :- heavy(X).\nred(X) :- light(X).\nrough(X) :- red(X).\ndirty(X) :- rough(X).\nbig(X) :- dirty(X).\ntired(Y) :- weak(Y).\nsoft(Z) :- smooth(Z).\ndislikes(X,Y) :- smooth(Y), curious(X), enemy(X,B).\nsibling(X,Z) :- strong(Z), brave(X), likes(X,U).\nlikes(X,Y) :- clean(Y), happy(X), clever(C).\nweak(X) :- angry(X), sibling(X,W), angry(W).\ncalm(X) :- weak(X), dislikes(X,V), clean(V).\nweak(Z) :- clever(Z), soft(E).\nsmall(X) :- new(X), old(X).\nclever(X) :- friendly(X), hungry(X).\ntired(X) :- sad(X).\nold(X) :- small(X).\nhappy(X) :- friendly(X), bored(X).\nowns(X,Y) :- tall(X), new(Y).\nclever(X) :- tired(X), curious(X).\nheavy(ball).\ntall(bob).\nenemy(carol,frank).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all Y, if person Y is weak, then person Y is tired.\nFor all Z, if object Z is smooth, then object Z is soft.\nFor all X, Y, if there exists B such that object Y is smooth and person X is curious and person X is an enemy of person B, then person X dislikes object Y.\nFor all X, Z, if there exists U such that person Z is strong and person X is brave and person X likes object U, then person X is a sibling of person Z.\nFor all X, Y, if there exists C such that object Y is clean and person X is happy and person C is clever, then person X likes object Y.\nFor all X, if there exists W such that person X is angry and person X is a sibling of person W and person W is angry, then person X is weak.\nFor all X, if there exists V such that person X is weak and person X dislikes object V and object V is clean, then person X is calm.\nFor all Z, if there exists E such that person Z is clever and object E is soft, then person Z is weak.\nFor all X, if object X is new and object X is old, then object X is small.\nFor all X, if person X is friendly and person X is hungry, then person X is clever.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if object X is small, then object X is old.\nFor all X, if person X is friendly and person X is bored, then person X is happy.\nFor all X, Y, if person X is tall and object Y is new, then person X owns object Y.\nFor all X, if person X is tired and person X is curious, then person X is clever.\n\nAnd the following facts:\nball is heavy.\nbob is tall.\ncarol is an enemy of frank.\ncarol owns book.\n\nQUESTION:\nIs car is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 669,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "light(X) :- heavy(X).\nred(X) :- light(X).\nrough(X) :- red(X).\ndirty(X) :- rough(X).\nbig(X) :- dirty(X).\ntired(Y) :- weak(Y).\nsoft(Z) :- smooth(Z).\ndislikes(X,Y) :- smooth(Y), curious(X), enemy(X,B).\nsibling(X,Z) :- strong(Z), brave(X), likes(X,U).\nlikes(X,Y) :- clean(Y), happy(X), clever(C).\nweak(X) :- angry(X), sibling(X,W), angry(W).\ncalm(X) :- weak(X), dislikes(X,V), clean(V).\nweak(Z) :- clever(Z), soft(E).\nsmall(X) :- new(X), old(X).\nclever(X) :- friendly(X), hungry(X).\ntired(X) :- sad(X).\nold(X) :- small(X).\nhappy(X) :- friendly(X), bored(X).\nowns(X,Y) :- tall(X), new(Y).\nclever(X) :- tired(X), curious(X).\nbig(ball).\ntall(bob).\nenemy(carol,frank).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all Y, if person Y is weak, then person Y is tired.\nFor all Z, if object Z is smooth, then object Z is soft.\nFor all X, Y, if there exists B such that object Y is smooth and person X is curious and person X is an enemy of person B, then person X dislikes object Y.\nFor all X, Z, if there exists U such that person Z is strong and person X is brave and person X likes object U, then person X is a sibling of person Z.\nFor all X, Y, if there exists C such that object Y is clean and person X is happy and person C is clever, then person X likes object Y.\nFor all X, if there exists W such that person X is angry and person X is a sibling of person W and person W is angry, then person X is weak.\nFor all X, if there exists V such that person X is weak and person X dislikes object V and object V is clean, then person X is calm.\nFor all Z, if there exists E such that person Z is clever and object E is soft, then person Z is weak.\nFor all X, if object X is new and object X is old, then object X is small.\nFor all X, if person X is friendly and person X is hungry, then person X is clever.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if object X is small, then object X is old.\nFor all X, if person X is friendly and person X is bored, then person X is happy.\nFor all X, Y, if person X is tall and object Y is new, then person X owns object Y.\nFor all X, if person X is tired and person X is curious, then person X is clever.\n\nAnd the following facts:\nball is big.\nbob is tall.\ncarol is an enemy of frank.\ncarol owns book.\n\nQUESTION:\nCould ball is heavy explain ball is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 670,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "excited(frank).",
    "c": "light(X) :- heavy(X).\nred(X) :- light(X).\nrough(X) :- red(X).\ndirty(X) :- rough(X).\nbig(X) :- dirty(X).\ntired(Y) :- weak(Y).\nsoft(Z) :- smooth(Z).\ndislikes(X,Y) :- smooth(Y), curious(X), enemy(X,B).\nsibling(X,Z) :- strong(Z), brave(X), likes(X,U).\nlikes(X,Y) :- clean(Y), happy(X), clever(C).\nweak(X) :- angry(X), sibling(X,W), angry(W).\ncalm(X) :- weak(X), dislikes(X,V), clean(V).\nweak(Z) :- clever(Z), soft(E).\nsmall(X) :- new(X), old(X).\nclever(X) :- friendly(X), hungry(X).\ntired(X) :- sad(X).\nold(X) :- small(X).\nhappy(X) :- friendly(X), bored(X).\nowns(X,Y) :- tall(X), new(Y).\nclever(X) :- tired(X), curious(X).\nbig(ball).\ntall(bob).\nenemy(carol,frank).\nowns(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all Y, if person Y is weak, then person Y is tired.\nFor all Z, if object Z is smooth, then object Z is soft.\nFor all X, Y, if there exists B such that object Y is smooth and person X is curious and person X is an enemy of person B, then person X dislikes object Y.\nFor all X, Z, if there exists U such that person Z is strong and person X is brave and person X likes object U, then person X is a sibling of person Z.\nFor all X, Y, if there exists C such that object Y is clean and person X is happy and person C is clever, then person X likes object Y.\nFor all X, if there exists W such that person X is angry and person X is a sibling of person W and person W is angry, then person X is weak.\nFor all X, if there exists V such that person X is weak and person X dislikes object V and object V is clean, then person X is calm.\nFor all Z, if there exists E such that person Z is clever and object E is soft, then person Z is weak.\nFor all X, if object X is new and object X is old, then object X is small.\nFor all X, if person X is friendly and person X is hungry, then person X is clever.\nFor all X, if person X is sad, then person X is tired.\nFor all X, if object X is small, then object X is old.\nFor all X, if person X is friendly and person X is bored, then person X is happy.\nFor all X, Y, if person X is tall and object Y is new, then person X owns object Y.\nFor all X, if person X is tired and person X is curious, then person X is clever.\n\nAnd the following facts:\nball is big.\nbob is tall.\ncarol is an enemy of frank.\ncarol owns book.\n\nQUESTION:\nCould frank is excited explain ball is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 671,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(car).",
    "c": "new(X) :- smooth(X).\nrough(X) :- new(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nwet(X) :- red(X).\nheavy(X) :- wet(X).\ndirty(X) :- heavy(X).\nred(X) :- dirty(X).\nrough(X) :- red(X).\ncurious(Z) :- strong(Z).\nangry(Z) :- sad(Z).\nhard(Z) :- soft(Z), owns(V,Z), tall(V).\nhard(Y) :- soft(Y), likes(V,Y), friendly(V).\nbored(Y) :- strong(Y), likes(Y,A), big(A).\ntired(X) :- friendly(X).\ntired(X) :- busy(X), parent(X,U), busy(U).\nsmall(X) :- soft(X), big(X).\nfriendly(X) :- excited(X).\ncurious(X) :- bored(X), weak(X).\nsmooth(car).\nsoft(car).\nhappy(dave).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all Z, if person Z is strong, then person Z is curious.\nFor all Z, if person Z is sad, then person Z is angry.\nFor all Z, if there exists V such that object Z is soft and person V owns object Z and person V is tall, then object Z is hard.\nFor all Y, if there exists V such that object Y is soft and person V likes object Y and person V is friendly, then object Y is hard.\nFor all Y, if there exists A such that person Y is strong and person Y likes object A and object A is big, then person Y is bored.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if there exists U such that person X is busy and person X is a parent of person U and person U is busy, then person X is tired.\nFor all X, if object X is soft and object X is big, then object X is small.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is bored and person X is weak, then person X is curious.\n\nAnd the following facts:\ncar is smooth.\ncar is soft.\ndave is happy.\nalice is a friend of bob.\n\nQUESTION:\nIs car is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 672,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(frank).",
    "c": "new(X) :- smooth(X).\nrough(X) :- new(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nwet(X) :- red(X).\nheavy(X) :- wet(X).\ndirty(X) :- heavy(X).\nred(X) :- dirty(X).\nrough(X) :- red(X).\ncurious(Z) :- strong(Z).\nangry(Z) :- sad(Z).\nhard(Z) :- soft(Z), owns(V,Z), tall(V).\nhard(Y) :- soft(Y), likes(V,Y), friendly(V).\nbored(Y) :- strong(Y), likes(Y,A), big(A).\ntired(X) :- friendly(X).\ntired(X) :- busy(X), parent(X,U), busy(U).\nsmall(X) :- soft(X), big(X).\nfriendly(X) :- excited(X).\ncurious(X) :- bored(X), weak(X).\nsmooth(car).\nsoft(car).\nhappy(dave).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all Z, if person Z is strong, then person Z is curious.\nFor all Z, if person Z is sad, then person Z is angry.\nFor all Z, if there exists V such that object Z is soft and person V owns object Z and person V is tall, then object Z is hard.\nFor all Y, if there exists V such that object Y is soft and person V likes object Y and person V is friendly, then object Y is hard.\nFor all Y, if there exists A such that person Y is strong and person Y likes object A and object A is big, then person Y is bored.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if there exists U such that person X is busy and person X is a parent of person U and person U is busy, then person X is tired.\nFor all X, if object X is soft and object X is big, then object X is small.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is bored and person X is weak, then person X is curious.\n\nAnd the following facts:\ncar is smooth.\ncar is soft.\ndave is happy.\nalice is a friend of bob.\n\nQUESTION:\nIs frank is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 673,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(car).",
    "c": "new(X) :- smooth(X).\nrough(X) :- new(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nwet(X) :- red(X).\nheavy(X) :- wet(X).\ndirty(X) :- heavy(X).\nred(X) :- dirty(X).\nrough(X) :- red(X).\ncurious(Z) :- strong(Z).\nangry(Z) :- sad(Z).\nhard(Z) :- soft(Z), owns(V,Z), tall(V).\nhard(Y) :- soft(Y), likes(V,Y), friendly(V).\nbored(Y) :- strong(Y), likes(Y,A), big(A).\ntired(X) :- friendly(X).\ntired(X) :- busy(X), parent(X,U), busy(U).\nsmall(X) :- soft(X), big(X).\nfriendly(X) :- excited(X).\ncurious(X) :- bored(X), weak(X).\nrough(car).\nsoft(car).\nhappy(dave).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all Z, if person Z is strong, then person Z is curious.\nFor all Z, if person Z is sad, then person Z is angry.\nFor all Z, if there exists V such that object Z is soft and person V owns object Z and person V is tall, then object Z is hard.\nFor all Y, if there exists V such that object Y is soft and person V likes object Y and person V is friendly, then object Y is hard.\nFor all Y, if there exists A such that person Y is strong and person Y likes object A and object A is big, then person Y is bored.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if there exists U such that person X is busy and person X is a parent of person U and person U is busy, then person X is tired.\nFor all X, if object X is soft and object X is big, then object X is small.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is bored and person X is weak, then person X is curious.\n\nAnd the following facts:\ncar is rough.\ncar is soft.\ndave is happy.\nalice is a friend of bob.\n\nQUESTION:\nCould car is smooth explain car is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 674,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(phone).",
    "c": "new(X) :- smooth(X).\nrough(X) :- new(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nwet(X) :- red(X).\nheavy(X) :- wet(X).\ndirty(X) :- heavy(X).\nred(X) :- dirty(X).\nrough(X) :- red(X).\ncurious(Z) :- strong(Z).\nangry(Z) :- sad(Z).\nhard(Z) :- soft(Z), owns(V,Z), tall(V).\nhard(Y) :- soft(Y), likes(V,Y), friendly(V).\nbored(Y) :- strong(Y), likes(Y,A), big(A).\ntired(X) :- friendly(X).\ntired(X) :- busy(X), parent(X,U), busy(U).\nsmall(X) :- soft(X), big(X).\nfriendly(X) :- excited(X).\ncurious(X) :- bored(X), weak(X).\nrough(car).\nsoft(car).\nhappy(dave).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all Z, if person Z is strong, then person Z is curious.\nFor all Z, if person Z is sad, then person Z is angry.\nFor all Z, if there exists V such that object Z is soft and person V owns object Z and person V is tall, then object Z is hard.\nFor all Y, if there exists V such that object Y is soft and person V likes object Y and person V is friendly, then object Y is hard.\nFor all Y, if there exists A such that person Y is strong and person Y likes object A and object A is big, then person Y is bored.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if there exists U such that person X is busy and person X is a parent of person U and person U is busy, then person X is tired.\nFor all X, if object X is soft and object X is big, then object X is small.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is bored and person X is weak, then person X is curious.\n\nAnd the following facts:\ncar is rough.\ncar is soft.\ndave is happy.\nalice is a friend of bob.\n\nQUESTION:\nCould phone is big explain car is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 675,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(eve).",
    "c": "hungry(X) :- busy(X).\nfriendly(X) :- hungry(X).\nexcited(X) :- friendly(X).\nhappy(X) :- excited(X).\nbrave(X) :- happy(X).\nangry(X) :- brave(X).\ntall(X) :- angry(X).\nclever(X) :- tall(X).\nangry(X) :- clever(X).\nstrong(X) :- angry(X).\nclean(X) :- old(X), owns(U,X), calm(U).\nred(X) :- big(X), owns(V,X), tired(V).\ntired(Y) :- weak(Y), sibling(Y,B), tired(B).\ntired(X) :- curious(X), bored(C).\ncurious(X) :- bored(X).\nweak(X) :- calm(X), bored(X).\nparent(X,Y) :- funny(X), weak(Y).\ncurious(X) :- weak(X).\nlikes(X,Y) :- curious(X), heavy(Y), owns(X,Y).\nheavy(X) :- soft(X), rough(X).\nbusy(eve).\nparent(eve,carol).\nsibling(frank,eve).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if there exists U such that object X is old and person U owns object X and person U is calm, then object X is clean.\nFor all X, if there exists V such that object X is big and person V owns object X and person V is tired, then object X is red.\nFor all Y, if there exists B such that person Y is weak and person Y is a sibling of person B and person B is tired, then person Y is tired.\nFor all X, if there exists C such that person X is curious and person C is bored, then person X is tired.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is calm and person X is bored, then person X is weak.\nFor all X, Y, if person X is funny and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is weak, then person X is curious.\nFor all X, Y, if person X is curious and object Y is heavy and person X owns object Y, then person X likes object Y.\nFor all X, if object X is soft and object X is rough, then object X is heavy.\n\nAnd the following facts:\neve is busy.\neve is a parent of carol.\nfrank is a sibling of eve.\nbob is a friend of frank.\n\nQUESTION:\nIs eve is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 676,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(car).",
    "c": "hungry(X) :- busy(X).\nfriendly(X) :- hungry(X).\nexcited(X) :- friendly(X).\nhappy(X) :- excited(X).\nbrave(X) :- happy(X).\nangry(X) :- brave(X).\ntall(X) :- angry(X).\nclever(X) :- tall(X).\nangry(X) :- clever(X).\nstrong(X) :- angry(X).\nclean(X) :- old(X), owns(U,X), calm(U).\nred(X) :- big(X), owns(V,X), tired(V).\ntired(Y) :- weak(Y), sibling(Y,B), tired(B).\ntired(X) :- curious(X), bored(C).\ncurious(X) :- bored(X).\nweak(X) :- calm(X), bored(X).\nparent(X,Y) :- funny(X), weak(Y).\ncurious(X) :- weak(X).\nlikes(X,Y) :- curious(X), heavy(Y), owns(X,Y).\nheavy(X) :- soft(X), rough(X).\nbusy(eve).\nparent(eve,carol).\nsibling(frank,eve).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if there exists U such that object X is old and person U owns object X and person U is calm, then object X is clean.\nFor all X, if there exists V such that object X is big and person V owns object X and person V is tired, then object X is red.\nFor all Y, if there exists B such that person Y is weak and person Y is a sibling of person B and person B is tired, then person Y is tired.\nFor all X, if there exists C such that person X is curious and person C is bored, then person X is tired.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is calm and person X is bored, then person X is weak.\nFor all X, Y, if person X is funny and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is weak, then person X is curious.\nFor all X, Y, if person X is curious and object Y is heavy and person X owns object Y, then person X likes object Y.\nFor all X, if object X is soft and object X is rough, then object X is heavy.\n\nAnd the following facts:\neve is busy.\neve is a parent of carol.\nfrank is a sibling of eve.\nbob is a friend of frank.\n\nQUESTION:\nIs car is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 677,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(eve).",
    "c": "hungry(X) :- busy(X).\nfriendly(X) :- hungry(X).\nexcited(X) :- friendly(X).\nhappy(X) :- excited(X).\nbrave(X) :- happy(X).\nangry(X) :- brave(X).\ntall(X) :- angry(X).\nclever(X) :- tall(X).\nangry(X) :- clever(X).\nstrong(X) :- angry(X).\nclean(X) :- old(X), owns(U,X), calm(U).\nred(X) :- big(X), owns(V,X), tired(V).\ntired(Y) :- weak(Y), sibling(Y,B), tired(B).\ntired(X) :- curious(X), bored(C).\ncurious(X) :- bored(X).\nweak(X) :- calm(X), bored(X).\nparent(X,Y) :- funny(X), weak(Y).\ncurious(X) :- weak(X).\nlikes(X,Y) :- curious(X), heavy(Y), owns(X,Y).\nheavy(X) :- soft(X), rough(X).\nstrong(eve).\nparent(eve,carol).\nsibling(frank,eve).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if there exists U such that object X is old and person U owns object X and person U is calm, then object X is clean.\nFor all X, if there exists V such that object X is big and person V owns object X and person V is tired, then object X is red.\nFor all Y, if there exists B such that person Y is weak and person Y is a sibling of person B and person B is tired, then person Y is tired.\nFor all X, if there exists C such that person X is curious and person C is bored, then person X is tired.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is calm and person X is bored, then person X is weak.\nFor all X, Y, if person X is funny and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is weak, then person X is curious.\nFor all X, Y, if person X is curious and object Y is heavy and person X owns object Y, then person X likes object Y.\nFor all X, if object X is soft and object X is rough, then object X is heavy.\n\nAnd the following facts:\neve is strong.\neve is a parent of carol.\nfrank is a sibling of eve.\nbob is a friend of frank.\n\nQUESTION:\nCould eve is busy explain eve is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 678,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(frank).",
    "c": "hungry(X) :- busy(X).\nfriendly(X) :- hungry(X).\nexcited(X) :- friendly(X).\nhappy(X) :- excited(X).\nbrave(X) :- happy(X).\nangry(X) :- brave(X).\ntall(X) :- angry(X).\nclever(X) :- tall(X).\nangry(X) :- clever(X).\nstrong(X) :- angry(X).\nclean(X) :- old(X), owns(U,X), calm(U).\nred(X) :- big(X), owns(V,X), tired(V).\ntired(Y) :- weak(Y), sibling(Y,B), tired(B).\ntired(X) :- curious(X), bored(C).\ncurious(X) :- bored(X).\nweak(X) :- calm(X), bored(X).\nparent(X,Y) :- funny(X), weak(Y).\ncurious(X) :- weak(X).\nlikes(X,Y) :- curious(X), heavy(Y), owns(X,Y).\nheavy(X) :- soft(X), rough(X).\nstrong(eve).\nparent(eve,carol).\nsibling(frank,eve).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if there exists U such that object X is old and person U owns object X and person U is calm, then object X is clean.\nFor all X, if there exists V such that object X is big and person V owns object X and person V is tired, then object X is red.\nFor all Y, if there exists B such that person Y is weak and person Y is a sibling of person B and person B is tired, then person Y is tired.\nFor all X, if there exists C such that person X is curious and person C is bored, then person X is tired.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is calm and person X is bored, then person X is weak.\nFor all X, Y, if person X is funny and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is weak, then person X is curious.\nFor all X, Y, if person X is curious and object Y is heavy and person X owns object Y, then person X likes object Y.\nFor all X, if object X is soft and object X is rough, then object X is heavy.\n\nAnd the following facts:\neve is strong.\neve is a parent of carol.\nfrank is a sibling of eve.\nbob is a friend of frank.\n\nQUESTION:\nCould frank is weak explain eve is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 679,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "clever(dave).",
    "c": "friendly(X) :- curious(X).\nbusy(X) :- friendly(X).\ntired(X) :- busy(X).\nexcited(X) :- tired(X).\nstrong(X) :- excited(X).\nweak(X) :- strong(X).\nbrave(X) :- weak(X).\nfunny(X) :- brave(X).\nhungry(X) :- funny(X).\nclever(X) :- hungry(X).\nclean(X) :- rough(X), likes(W,X), sad(W).\nparent(Z,X) :- calm(Z), sad(X).\nowns(Z,Y) :- hard(Y), calm(Z), dislikes(U,Y).\nhappy(Z) :- angry(Z), dislikes(Z,V), smooth(V).\nbored(X) :- sad(X), parent(X,B), happy(B).\nsmooth(X) :- hard(X).\nlikes(X,Y) :- calm(X), rough(Y), dislikes(X,Y).\nsmall(X) :- light(X), dirty(X).\nsmall(X) :- heavy(X).\nangry(X) :- happy(X), sad(X).\ncurious(dave).\nsibling(alice,carol).\nsad(dave).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if there exists W such that object X is rough and person W likes object X and person W is sad, then object X is clean.\nFor all X, Z, if person Z is calm and person X is sad, then person Z is a parent of person X.\nFor all Y, Z, if there exists U such that object Y is hard and person Z is calm and person U dislikes object Y, then person Z owns object Y.\nFor all Z, if there exists V such that person Z is angry and person Z dislikes object V and object V is smooth, then person Z is happy.\nFor all X, if there exists B such that person X is sad and person X is a parent of person B and person B is happy, then person X is bored.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, Y, if person X is calm and object Y is rough and person X dislikes object Y, then person X likes object Y.\nFor all X, if object X is light and object X is dirty, then object X is small.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if person X is happy and person X is sad, then person X is angry.\n\nAnd the following facts:\ndave is curious.\nalice is a sibling of carol.\ndave is sad.\nfrank is a sibling of carol.\n\nQUESTION:\nIs dave is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 680,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(car).",
    "c": "friendly(X) :- curious(X).\nbusy(X) :- friendly(X).\ntired(X) :- busy(X).\nexcited(X) :- tired(X).\nstrong(X) :- excited(X).\nweak(X) :- strong(X).\nbrave(X) :- weak(X).\nfunny(X) :- brave(X).\nhungry(X) :- funny(X).\nclever(X) :- hungry(X).\nclean(X) :- rough(X), likes(W,X), sad(W).\nparent(Z,X) :- calm(Z), sad(X).\nowns(Z,Y) :- hard(Y), calm(Z), dislikes(U,Y).\nhappy(Z) :- angry(Z), dislikes(Z,V), smooth(V).\nbored(X) :- sad(X), parent(X,B), happy(B).\nsmooth(X) :- hard(X).\nlikes(X,Y) :- calm(X), rough(Y), dislikes(X,Y).\nsmall(X) :- light(X), dirty(X).\nsmall(X) :- heavy(X).\nangry(X) :- happy(X), sad(X).\ncurious(dave).\nsibling(alice,carol).\nsad(dave).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if there exists W such that object X is rough and person W likes object X and person W is sad, then object X is clean.\nFor all X, Z, if person Z is calm and person X is sad, then person Z is a parent of person X.\nFor all Y, Z, if there exists U such that object Y is hard and person Z is calm and person U dislikes object Y, then person Z owns object Y.\nFor all Z, if there exists V such that person Z is angry and person Z dislikes object V and object V is smooth, then person Z is happy.\nFor all X, if there exists B such that person X is sad and person X is a parent of person B and person B is happy, then person X is bored.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, Y, if person X is calm and object Y is rough and person X dislikes object Y, then person X likes object Y.\nFor all X, if object X is light and object X is dirty, then object X is small.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if person X is happy and person X is sad, then person X is angry.\n\nAnd the following facts:\ndave is curious.\nalice is a sibling of carol.\ndave is sad.\nfrank is a sibling of carol.\n\nQUESTION:\nIs car is old true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 681,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "friendly(X) :- curious(X).\nbusy(X) :- friendly(X).\ntired(X) :- busy(X).\nexcited(X) :- tired(X).\nstrong(X) :- excited(X).\nweak(X) :- strong(X).\nbrave(X) :- weak(X).\nfunny(X) :- brave(X).\nhungry(X) :- funny(X).\nclever(X) :- hungry(X).\nclean(X) :- rough(X), likes(W,X), sad(W).\nparent(Z,X) :- calm(Z), sad(X).\nowns(Z,Y) :- hard(Y), calm(Z), dislikes(U,Y).\nhappy(Z) :- angry(Z), dislikes(Z,V), smooth(V).\nbored(X) :- sad(X), parent(X,B), happy(B).\nsmooth(X) :- hard(X).\nlikes(X,Y) :- calm(X), rough(Y), dislikes(X,Y).\nsmall(X) :- light(X), dirty(X).\nsmall(X) :- heavy(X).\nangry(X) :- happy(X), sad(X).\nclever(dave).\nsibling(alice,carol).\nsad(dave).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if there exists W such that object X is rough and person W likes object X and person W is sad, then object X is clean.\nFor all X, Z, if person Z is calm and person X is sad, then person Z is a parent of person X.\nFor all Y, Z, if there exists U such that object Y is hard and person Z is calm and person U dislikes object Y, then person Z owns object Y.\nFor all Z, if there exists V such that person Z is angry and person Z dislikes object V and object V is smooth, then person Z is happy.\nFor all X, if there exists B such that person X is sad and person X is a parent of person B and person B is happy, then person X is bored.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, Y, if person X is calm and object Y is rough and person X dislikes object Y, then person X likes object Y.\nFor all X, if object X is light and object X is dirty, then object X is small.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if person X is happy and person X is sad, then person X is angry.\n\nAnd the following facts:\ndave is clever.\nalice is a sibling of carol.\ndave is sad.\nfrank is a sibling of carol.\n\nQUESTION:\nCould dave is curious explain dave is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 682,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hard(car).",
    "c": "friendly(X) :- curious(X).\nbusy(X) :- friendly(X).\ntired(X) :- busy(X).\nexcited(X) :- tired(X).\nstrong(X) :- excited(X).\nweak(X) :- strong(X).\nbrave(X) :- weak(X).\nfunny(X) :- brave(X).\nhungry(X) :- funny(X).\nclever(X) :- hungry(X).\nclean(X) :- rough(X), likes(W,X), sad(W).\nparent(Z,X) :- calm(Z), sad(X).\nowns(Z,Y) :- hard(Y), calm(Z), dislikes(U,Y).\nhappy(Z) :- angry(Z), dislikes(Z,V), smooth(V).\nbored(X) :- sad(X), parent(X,B), happy(B).\nsmooth(X) :- hard(X).\nlikes(X,Y) :- calm(X), rough(Y), dislikes(X,Y).\nsmall(X) :- light(X), dirty(X).\nsmall(X) :- heavy(X).\nangry(X) :- happy(X), sad(X).\nclever(dave).\nsibling(alice,carol).\nsad(dave).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if there exists W such that object X is rough and person W likes object X and person W is sad, then object X is clean.\nFor all X, Z, if person Z is calm and person X is sad, then person Z is a parent of person X.\nFor all Y, Z, if there exists U such that object Y is hard and person Z is calm and person U dislikes object Y, then person Z owns object Y.\nFor all Z, if there exists V such that person Z is angry and person Z dislikes object V and object V is smooth, then person Z is happy.\nFor all X, if there exists B such that person X is sad and person X is a parent of person B and person B is happy, then person X is bored.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, Y, if person X is calm and object Y is rough and person X dislikes object Y, then person X likes object Y.\nFor all X, if object X is light and object X is dirty, then object X is small.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if person X is happy and person X is sad, then person X is angry.\n\nAnd the following facts:\ndave is clever.\nalice is a sibling of carol.\ndave is sad.\nfrank is a sibling of carol.\n\nQUESTION:\nCould car is hard explain dave is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 683,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "dirty(phone).",
    "c": "smooth(X) :- big(X).\nold(X) :- smooth(X).\nlight(X) :- old(X).\nsmall(X) :- light(X).\nwet(X) :- small(X).\nrough(X) :- wet(X).\nclean(X) :- rough(X).\nhard(X) :- clean(X).\nsoft(X) :- hard(X).\ndirty(X) :- soft(X).\ndislikes(X,Y) :- new(Y), happy(X), likes(W,Y).\ntall(X) :- calm(X), dislikes(X,B), new(B).\ncalm(X) :- brave(X), enemy(X,A), sad(A).\nbusy(Y) :- tall(Y).\nbrave(Z) :- curious(Z), likes(Z,A), new(A).\nfunny(X) :- friendly(X).\nhappy(X) :- calm(X).\nowns(X,Y) :- funny(X), heavy(Y).\nfunny(X) :- strong(X), excited(X).\nfriendly(X) :- hungry(X), tall(X).\nbig(phone).\nparent(dave,alice).\nowns(dave,apple).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, Y, if there exists W such that object Y is new and person X is happy and person W likes object Y, then person X dislikes object Y.\nFor all X, if there exists B such that person X is calm and person X dislikes object B and object B is new, then person X is tall.\nFor all X, if there exists A such that person X is brave and person X is an enemy of person A and person A is sad, then person X is calm.\nFor all Y, if person Y is tall, then person Y is busy.\nFor all Z, if there exists A such that person Z is curious and person Z likes object A and object A is new, then person Z is brave.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is calm, then person X is happy.\nFor all X, Y, if person X is funny and object Y is heavy, then person X owns object Y.\nFor all X, if person X is strong and person X is excited, then person X is funny.\nFor all X, if person X is hungry and person X is tall, then person X is friendly.\n\nAnd the following facts:\nphone is big.\ndave is a parent of alice.\ndave owns apple.\nfrank is a friend of bob.\n\nQUESTION:\nIs phone is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 684,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(ball).",
    "c": "smooth(X) :- big(X).\nold(X) :- smooth(X).\nlight(X) :- old(X).\nsmall(X) :- light(X).\nwet(X) :- small(X).\nrough(X) :- wet(X).\nclean(X) :- rough(X).\nhard(X) :- clean(X).\nsoft(X) :- hard(X).\ndirty(X) :- soft(X).\ndislikes(X,Y) :- new(Y), happy(X), likes(W,Y).\ntall(X) :- calm(X), dislikes(X,B), new(B).\ncalm(X) :- brave(X), enemy(X,A), sad(A).\nbusy(Y) :- tall(Y).\nbrave(Z) :- curious(Z), likes(Z,A), new(A).\nfunny(X) :- friendly(X).\nhappy(X) :- calm(X).\nowns(X,Y) :- funny(X), heavy(Y).\nfunny(X) :- strong(X), excited(X).\nfriendly(X) :- hungry(X), tall(X).\nbig(phone).\nparent(dave,alice).\nowns(dave,apple).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, Y, if there exists W such that object Y is new and person X is happy and person W likes object Y, then person X dislikes object Y.\nFor all X, if there exists B such that person X is calm and person X dislikes object B and object B is new, then person X is tall.\nFor all X, if there exists A such that person X is brave and person X is an enemy of person A and person A is sad, then person X is calm.\nFor all Y, if person Y is tall, then person Y is busy.\nFor all Z, if there exists A such that person Z is curious and person Z likes object A and object A is new, then person Z is brave.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is calm, then person X is happy.\nFor all X, Y, if person X is funny and object Y is heavy, then person X owns object Y.\nFor all X, if person X is strong and person X is excited, then person X is funny.\nFor all X, if person X is hungry and person X is tall, then person X is friendly.\n\nAnd the following facts:\nphone is big.\ndave is a parent of alice.\ndave owns apple.\nfrank is a friend of bob.\n\nQUESTION:\nIs ball is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 685,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(phone).",
    "c": "smooth(X) :- big(X).\nold(X) :- smooth(X).\nlight(X) :- old(X).\nsmall(X) :- light(X).\nwet(X) :- small(X).\nrough(X) :- wet(X).\nclean(X) :- rough(X).\nhard(X) :- clean(X).\nsoft(X) :- hard(X).\ndirty(X) :- soft(X).\ndislikes(X,Y) :- new(Y), happy(X), likes(W,Y).\ntall(X) :- calm(X), dislikes(X,B), new(B).\ncalm(X) :- brave(X), enemy(X,A), sad(A).\nbusy(Y) :- tall(Y).\nbrave(Z) :- curious(Z), likes(Z,A), new(A).\nfunny(X) :- friendly(X).\nhappy(X) :- calm(X).\nowns(X,Y) :- funny(X), heavy(Y).\nfunny(X) :- strong(X), excited(X).\nfriendly(X) :- hungry(X), tall(X).\ndirty(phone).\nparent(dave,alice).\nowns(dave,apple).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, Y, if there exists W such that object Y is new and person X is happy and person W likes object Y, then person X dislikes object Y.\nFor all X, if there exists B such that person X is calm and person X dislikes object B and object B is new, then person X is tall.\nFor all X, if there exists A such that person X is brave and person X is an enemy of person A and person A is sad, then person X is calm.\nFor all Y, if person Y is tall, then person Y is busy.\nFor all Z, if there exists A such that person Z is curious and person Z likes object A and object A is new, then person Z is brave.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is calm, then person X is happy.\nFor all X, Y, if person X is funny and object Y is heavy, then person X owns object Y.\nFor all X, if person X is strong and person X is excited, then person X is funny.\nFor all X, if person X is hungry and person X is tall, then person X is friendly.\n\nAnd the following facts:\nphone is dirty.\ndave is a parent of alice.\ndave owns apple.\nfrank is a friend of bob.\n\nQUESTION:\nCould phone is big explain phone is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 686,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "light(apple).",
    "c": "smooth(X) :- big(X).\nold(X) :- smooth(X).\nlight(X) :- old(X).\nsmall(X) :- light(X).\nwet(X) :- small(X).\nrough(X) :- wet(X).\nclean(X) :- rough(X).\nhard(X) :- clean(X).\nsoft(X) :- hard(X).\ndirty(X) :- soft(X).\ndislikes(X,Y) :- new(Y), happy(X), likes(W,Y).\ntall(X) :- calm(X), dislikes(X,B), new(B).\ncalm(X) :- brave(X), enemy(X,A), sad(A).\nbusy(Y) :- tall(Y).\nbrave(Z) :- curious(Z), likes(Z,A), new(A).\nfunny(X) :- friendly(X).\nhappy(X) :- calm(X).\nowns(X,Y) :- funny(X), heavy(Y).\nfunny(X) :- strong(X), excited(X).\nfriendly(X) :- hungry(X), tall(X).\ndirty(phone).\nparent(dave,alice).\nowns(dave,apple).\nfriend(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, Y, if there exists W such that object Y is new and person X is happy and person W likes object Y, then person X dislikes object Y.\nFor all X, if there exists B such that person X is calm and person X dislikes object B and object B is new, then person X is tall.\nFor all X, if there exists A such that person X is brave and person X is an enemy of person A and person A is sad, then person X is calm.\nFor all Y, if person Y is tall, then person Y is busy.\nFor all Z, if there exists A such that person Z is curious and person Z likes object A and object A is new, then person Z is brave.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is calm, then person X is happy.\nFor all X, Y, if person X is funny and object Y is heavy, then person X owns object Y.\nFor all X, if person X is strong and person X is excited, then person X is funny.\nFor all X, if person X is hungry and person X is tall, then person X is friendly.\n\nAnd the following facts:\nphone is dirty.\ndave is a parent of alice.\ndave owns apple.\nfrank is a friend of bob.\n\nQUESTION:\nCould apple is light explain phone is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 687,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(car).",
    "c": "red(X) :- old(X).\nnew(X) :- red(X).\nred(X) :- new(X).\nlight(X) :- red(X).\nsmall(X) :- light(X).\nbig(X) :- small(X).\nsmooth(X) :- big(X).\nwet(X) :- smooth(X).\nrough(X) :- wet(X).\nhard(X) :- rough(X).\nsmall(X) :- hard(X).\nlight(X) :- small(X).\nsoft(X) :- light(X).\ndirty(X) :- soft(X).\nnew(X) :- dirty(X).\nsmooth(X) :- new(X).\ndirty(X) :- smooth(X).\nsmall(X) :- dirty(X).\nold(X) :- small(X).\nrough(X) :- old(X).\nold(car).\nsad(carol).\ndislikes(bob,pencil).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is rough.\n\nAnd the following facts:\ncar is old.\ncarol is sad.\nbob dislikes pencil.\neve is tall.\n\nQUESTION:\nIs car is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 688,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(frank).",
    "c": "red(X) :- old(X).\nnew(X) :- red(X).\nred(X) :- new(X).\nlight(X) :- red(X).\nsmall(X) :- light(X).\nbig(X) :- small(X).\nsmooth(X) :- big(X).\nwet(X) :- smooth(X).\nrough(X) :- wet(X).\nhard(X) :- rough(X).\nsmall(X) :- hard(X).\nlight(X) :- small(X).\nsoft(X) :- light(X).\ndirty(X) :- soft(X).\nnew(X) :- dirty(X).\nsmooth(X) :- new(X).\ndirty(X) :- smooth(X).\nsmall(X) :- dirty(X).\nold(X) :- small(X).\nrough(X) :- old(X).\nold(car).\nsad(carol).\ndislikes(bob,pencil).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is rough.\n\nAnd the following facts:\ncar is old.\ncarol is sad.\nbob dislikes pencil.\neve is tall.\n\nQUESTION:\nIs frank is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 689,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(car).",
    "c": "red(X) :- old(X).\nnew(X) :- red(X).\nred(X) :- new(X).\nlight(X) :- red(X).\nsmall(X) :- light(X).\nbig(X) :- small(X).\nsmooth(X) :- big(X).\nwet(X) :- smooth(X).\nrough(X) :- wet(X).\nhard(X) :- rough(X).\nsmall(X) :- hard(X).\nlight(X) :- small(X).\nsoft(X) :- light(X).\ndirty(X) :- soft(X).\nnew(X) :- dirty(X).\nsmooth(X) :- new(X).\ndirty(X) :- smooth(X).\nsmall(X) :- dirty(X).\nold(X) :- small(X).\nrough(X) :- old(X).\nrough(car).\nsad(carol).\ndislikes(bob,pencil).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is rough.\n\nAnd the following facts:\ncar is rough.\ncarol is sad.\nbob dislikes pencil.\neve is tall.\n\nQUESTION:\nCould car is old explain car is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 690,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "red(X) :- old(X).\nnew(X) :- red(X).\nred(X) :- new(X).\nlight(X) :- red(X).\nsmall(X) :- light(X).\nbig(X) :- small(X).\nsmooth(X) :- big(X).\nwet(X) :- smooth(X).\nrough(X) :- wet(X).\nhard(X) :- rough(X).\nsmall(X) :- hard(X).\nlight(X) :- small(X).\nsoft(X) :- light(X).\ndirty(X) :- soft(X).\nnew(X) :- dirty(X).\nsmooth(X) :- new(X).\ndirty(X) :- smooth(X).\nsmall(X) :- dirty(X).\nold(X) :- small(X).\nrough(X) :- old(X).\nrough(car).\nsad(carol).\ndislikes(bob,pencil).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is rough.\n\nAnd the following facts:\ncar is rough.\ncarol is sad.\nbob dislikes pencil.\neve is tall.\n\nQUESTION:\nCould ball is heavy explain car is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 691,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(dave).",
    "c": "brave(X) :- friendly(X).\ncalm(X) :- brave(X).\ntall(X) :- calm(X).\ncalm(X) :- tall(X).\nhungry(X) :- calm(X).\ntall(X) :- hungry(X).\nhungry(X) :- tall(X).\nclever(X) :- hungry(X).\ncurious(X) :- clever(X).\nweak(X) :- curious(X).\nbrave(X) :- weak(X).\nsad(X) :- brave(X).\nstrong(X) :- sad(X).\nbrave(X) :- strong(X).\ncurious(X) :- brave(X).\nhungry(X) :- curious(X).\nclever(X) :- hungry(X).\nbusy(X) :- clever(X).\nweak(X) :- busy(X).\nhappy(X) :- weak(X).\nfriendly(dave).\ndislikes(eve,phone).\nlight(ball).\ndirty(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\n\nAnd the following facts:\ndave is friendly.\neve dislikes phone.\nball is light.\ncar is dirty.\n\nQUESTION:\nIs dave is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 692,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "brave(X) :- friendly(X).\ncalm(X) :- brave(X).\ntall(X) :- calm(X).\ncalm(X) :- tall(X).\nhungry(X) :- calm(X).\ntall(X) :- hungry(X).\nhungry(X) :- tall(X).\nclever(X) :- hungry(X).\ncurious(X) :- clever(X).\nweak(X) :- curious(X).\nbrave(X) :- weak(X).\nsad(X) :- brave(X).\nstrong(X) :- sad(X).\nbrave(X) :- strong(X).\ncurious(X) :- brave(X).\nhungry(X) :- curious(X).\nclever(X) :- hungry(X).\nbusy(X) :- clever(X).\nweak(X) :- busy(X).\nhappy(X) :- weak(X).\nfriendly(dave).\ndislikes(eve,phone).\nlight(ball).\ndirty(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\n\nAnd the following facts:\ndave is friendly.\neve dislikes phone.\nball is light.\ncar is dirty.\n\nQUESTION:\nIs phone is rough true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 693,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(dave).",
    "c": "brave(X) :- friendly(X).\ncalm(X) :- brave(X).\ntall(X) :- calm(X).\ncalm(X) :- tall(X).\nhungry(X) :- calm(X).\ntall(X) :- hungry(X).\nhungry(X) :- tall(X).\nclever(X) :- hungry(X).\ncurious(X) :- clever(X).\nweak(X) :- curious(X).\nbrave(X) :- weak(X).\nsad(X) :- brave(X).\nstrong(X) :- sad(X).\nbrave(X) :- strong(X).\ncurious(X) :- brave(X).\nhungry(X) :- curious(X).\nclever(X) :- hungry(X).\nbusy(X) :- clever(X).\nweak(X) :- busy(X).\nhappy(X) :- weak(X).\nhappy(dave).\ndislikes(eve,phone).\nlight(ball).\ndirty(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\n\nAnd the following facts:\ndave is happy.\neve dislikes phone.\nball is light.\ncar is dirty.\n\nQUESTION:\nCould dave is friendly explain dave is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 694,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(apple).",
    "c": "brave(X) :- friendly(X).\ncalm(X) :- brave(X).\ntall(X) :- calm(X).\ncalm(X) :- tall(X).\nhungry(X) :- calm(X).\ntall(X) :- hungry(X).\nhungry(X) :- tall(X).\nclever(X) :- hungry(X).\ncurious(X) :- clever(X).\nweak(X) :- curious(X).\nbrave(X) :- weak(X).\nsad(X) :- brave(X).\nstrong(X) :- sad(X).\nbrave(X) :- strong(X).\ncurious(X) :- brave(X).\nhungry(X) :- curious(X).\nclever(X) :- hungry(X).\nbusy(X) :- clever(X).\nweak(X) :- busy(X).\nhappy(X) :- weak(X).\nhappy(dave).\ndislikes(eve,phone).\nlight(ball).\ndirty(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is clever, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\n\nAnd the following facts:\ndave is happy.\neve dislikes phone.\nball is light.\ncar is dirty.\n\nQUESTION:\nCould apple is big explain dave is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 695,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "curious(X) :- hungry(X).\ncalm(X) :- curious(X).\nclever(X) :- calm(X).\nsad(X) :- clever(X).\nweak(X) :- sad(X).\ntall(X) :- weak(X).\nfriendly(X) :- tall(X).\nbored(X) :- friendly(X).\nfunny(X) :- bored(X).\ntired(X) :- funny(X).\nbusy(X) :- tired(X).\nexcited(X) :- busy(X).\nangry(X) :- excited(X).\nhappy(X) :- angry(X).\nbrave(X) :- happy(X).\nstrong(X) :- brave(X).\ncurious(X) :- strong(X).\nfriendly(X) :- curious(X).\nbusy(X) :- friendly(X).\nweak(X) :- busy(X).\nhungry(dave).\nnew(book).\nfriend(george,bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is clever.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\n\nAnd the following facts:\ndave is hungry.\nbook is new.\ngeorge is a friend of bob.\ngeorge is a parent of carol.\n\nQUESTION:\nIs dave is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 696,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(frank).",
    "c": "curious(X) :- hungry(X).\ncalm(X) :- curious(X).\nclever(X) :- calm(X).\nsad(X) :- clever(X).\nweak(X) :- sad(X).\ntall(X) :- weak(X).\nfriendly(X) :- tall(X).\nbored(X) :- friendly(X).\nfunny(X) :- bored(X).\ntired(X) :- funny(X).\nbusy(X) :- tired(X).\nexcited(X) :- busy(X).\nangry(X) :- excited(X).\nhappy(X) :- angry(X).\nbrave(X) :- happy(X).\nstrong(X) :- brave(X).\ncurious(X) :- strong(X).\nfriendly(X) :- curious(X).\nbusy(X) :- friendly(X).\nweak(X) :- busy(X).\nhungry(dave).\nnew(book).\nfriend(george,bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is clever.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\n\nAnd the following facts:\ndave is hungry.\nbook is new.\ngeorge is a friend of bob.\ngeorge is a parent of carol.\n\nQUESTION:\nIs frank is brave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 697,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(dave).",
    "c": "curious(X) :- hungry(X).\ncalm(X) :- curious(X).\nclever(X) :- calm(X).\nsad(X) :- clever(X).\nweak(X) :- sad(X).\ntall(X) :- weak(X).\nfriendly(X) :- tall(X).\nbored(X) :- friendly(X).\nfunny(X) :- bored(X).\ntired(X) :- funny(X).\nbusy(X) :- tired(X).\nexcited(X) :- busy(X).\nangry(X) :- excited(X).\nhappy(X) :- angry(X).\nbrave(X) :- happy(X).\nstrong(X) :- brave(X).\ncurious(X) :- strong(X).\nfriendly(X) :- curious(X).\nbusy(X) :- friendly(X).\nweak(X) :- busy(X).\nweak(dave).\nnew(book).\nfriend(george,bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is clever.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\n\nAnd the following facts:\ndave is weak.\nbook is new.\ngeorge is a friend of bob.\ngeorge is a parent of carol.\n\nQUESTION:\nCould dave is hungry explain dave is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 698,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "curious(X) :- hungry(X).\ncalm(X) :- curious(X).\nclever(X) :- calm(X).\nsad(X) :- clever(X).\nweak(X) :- sad(X).\ntall(X) :- weak(X).\nfriendly(X) :- tall(X).\nbored(X) :- friendly(X).\nfunny(X) :- bored(X).\ntired(X) :- funny(X).\nbusy(X) :- tired(X).\nexcited(X) :- busy(X).\nangry(X) :- excited(X).\nhappy(X) :- angry(X).\nbrave(X) :- happy(X).\nstrong(X) :- brave(X).\ncurious(X) :- strong(X).\nfriendly(X) :- curious(X).\nbusy(X) :- friendly(X).\nweak(X) :- busy(X).\nweak(dave).\nnew(book).\nfriend(george,bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is clever.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\n\nAnd the following facts:\ndave is weak.\nbook is new.\ngeorge is a friend of bob.\ngeorge is a parent of carol.\n\nQUESTION:\nCould ball is light explain dave is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 699,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(book).",
    "c": "dirty(X) :- red(X).\nold(X) :- dirty(X).\nlight(X) :- old(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nwet(X) :- clean(X).\nhard(X) :- wet(X).\nnew(X) :- hard(X).\nsmooth(X) :- new(X).\nrough(X) :- smooth(X).\nsoft(X) :- rough(X).\nsmall(X) :- soft(X).\nclean(X) :- small(X).\nheavy(X) :- clean(X).\nsmooth(X) :- heavy(X).\nsmooth(X) :- smooth(X).\nhard(X) :- smooth(X).\nhard(X) :- hard(X).\nred(book).\nparent(eve,bob).\ncalm(george).\ncurious(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is hard.\n\nAnd the following facts:\nbook is red.\neve is a parent of bob.\ngeorge is calm.\ndave is curious.\n\nQUESTION:\nIs book is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 700,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "dirty(X) :- red(X).\nold(X) :- dirty(X).\nlight(X) :- old(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nwet(X) :- clean(X).\nhard(X) :- wet(X).\nnew(X) :- hard(X).\nsmooth(X) :- new(X).\nrough(X) :- smooth(X).\nsoft(X) :- rough(X).\nsmall(X) :- soft(X).\nclean(X) :- small(X).\nheavy(X) :- clean(X).\nsmooth(X) :- heavy(X).\nsmooth(X) :- smooth(X).\nhard(X) :- smooth(X).\nhard(X) :- hard(X).\nred(book).\nparent(eve,bob).\ncalm(george).\ncurious(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is hard.\n\nAnd the following facts:\nbook is red.\neve is a parent of bob.\ngeorge is calm.\ndave is curious.\n\nQUESTION:\nIs car is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 701,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(book).",
    "c": "dirty(X) :- red(X).\nold(X) :- dirty(X).\nlight(X) :- old(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nwet(X) :- clean(X).\nhard(X) :- wet(X).\nnew(X) :- hard(X).\nsmooth(X) :- new(X).\nrough(X) :- smooth(X).\nsoft(X) :- rough(X).\nsmall(X) :- soft(X).\nclean(X) :- small(X).\nheavy(X) :- clean(X).\nsmooth(X) :- heavy(X).\nsmooth(X) :- smooth(X).\nhard(X) :- smooth(X).\nhard(X) :- hard(X).\nhard(book).\nparent(eve,bob).\ncalm(george).\ncurious(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is hard.\n\nAnd the following facts:\nbook is hard.\neve is a parent of bob.\ngeorge is calm.\ndave is curious.\n\nQUESTION:\nCould book is red explain book is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 702,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(apple).",
    "c": "dirty(X) :- red(X).\nold(X) :- dirty(X).\nlight(X) :- old(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nwet(X) :- clean(X).\nhard(X) :- wet(X).\nnew(X) :- hard(X).\nsmooth(X) :- new(X).\nrough(X) :- smooth(X).\nsoft(X) :- rough(X).\nsmall(X) :- soft(X).\nclean(X) :- small(X).\nheavy(X) :- clean(X).\nsmooth(X) :- heavy(X).\nsmooth(X) :- smooth(X).\nhard(X) :- smooth(X).\nhard(X) :- hard(X).\nhard(book).\nparent(eve,bob).\ncalm(george).\ncurious(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is hard.\n\nAnd the following facts:\nbook is hard.\neve is a parent of bob.\ngeorge is calm.\ndave is curious.\n\nQUESTION:\nCould apple is heavy explain book is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 703,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(dave).",
    "c": "angry(X) :- bored(X).\nnew(Z) :- hard(Z).\nsmall(Y) :- hard(Y), owns(A,Y), hungry(A).\nstrong(Y) :- brave(Y), sibling(Y,B), sad(B).\nsmooth(Y) :- smooth(Y), dislikes(V,Y), funny(V).\nstrong(Z) :- busy(Z).\nhard(Y) :- hard(Y), dislikes(U,Y), hungry(U).\nweak(X) :- tall(X), sibling(X,W), weak(W).\nrough(Y) :- dirty(Y).\nexcited(Y) :- funny(Y), tall(F).\ntired(X) :- busy(X), friend(X,V), sad(V).\nfunny(X) :- friendly(X).\nold(X) :- wet(X).\nstrong(X) :- calm(X), brave(X).\ntired(X) :- brave(X), brave(X).\nweak(X) :- happy(X), sad(X).\nrough(X) :- new(X).\nbrave(X) :- funny(X).\ntired(X) :- happy(X), curious(X).\nsoft(X) :- small(X).\nbored(dave).\nfriend(carol,frank).\nowns(frank,pencil).\nfriendly(dave).\ntired(dave).\nparent(eve,dave).\nfriend(carol,george).\nbrave(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is angry.\nFor all Z, if object Z is hard, then object Z is new.\nFor all Y, if there exists A such that object Y is hard and person A owns object Y and person A is hungry, then object Y is small.\nFor all Y, if there exists B such that person Y is brave and person Y is a sibling of person B and person B is sad, then person Y is strong.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is funny, then object Y is smooth.\nFor all Z, if person Z is busy, then person Z is strong.\nFor all Y, if there exists U such that object Y is hard and person U dislikes object Y and person U is hungry, then object Y is hard.\nFor all X, if there exists W such that person X is tall and person X is a sibling of person W and person W is weak, then person X is weak.\nFor all Y, if object Y is dirty, then object Y is rough.\nFor all Y, if there exists F such that person Y is funny and person F is tall, then person Y is excited.\nFor all X, if there exists V such that person X is busy and person X is a friend of person V and person V is sad, then person X is tired.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if object X is wet, then object X is old.\nFor all X, if person X is calm and person X is brave, then person X is strong.\nFor all X, if person X is brave and person X is brave, then person X is tired.\nFor all X, if person X is happy and person X is sad, then person X is weak.\nFor all X, if object X is new, then object X is rough.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is happy and person X is curious, then person X is tired.\nFor all X, if object X is small, then object X is soft.\n\nAnd the following facts:\ndave is bored.\ncarol is a friend of frank.\nfrank owns pencil.\ndave is friendly.\ndave is tired.\neve is a parent of dave.\ncarol is a friend of george.\ncarol is brave.\n\nQUESTION:\nIs dave is angry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 704,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(frank).",
    "c": "angry(X) :- bored(X).\nnew(Z) :- hard(Z).\nsmall(Y) :- hard(Y), owns(A,Y), hungry(A).\nstrong(Y) :- brave(Y), sibling(Y,B), sad(B).\nsmooth(Y) :- smooth(Y), dislikes(V,Y), funny(V).\nstrong(Z) :- busy(Z).\nhard(Y) :- hard(Y), dislikes(U,Y), hungry(U).\nweak(X) :- tall(X), sibling(X,W), weak(W).\nrough(Y) :- dirty(Y).\nexcited(Y) :- funny(Y), tall(F).\ntired(X) :- busy(X), friend(X,V), sad(V).\nfunny(X) :- friendly(X).\nold(X) :- wet(X).\nstrong(X) :- calm(X), brave(X).\ntired(X) :- brave(X), brave(X).\nweak(X) :- happy(X), sad(X).\nrough(X) :- new(X).\nbrave(X) :- funny(X).\ntired(X) :- happy(X), curious(X).\nsoft(X) :- small(X).\nbored(dave).\nfriend(carol,frank).\nowns(frank,pencil).\nfriendly(dave).\ntired(dave).\nparent(eve,dave).\nfriend(carol,george).\nbrave(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is angry.\nFor all Z, if object Z is hard, then object Z is new.\nFor all Y, if there exists A such that object Y is hard and person A owns object Y and person A is hungry, then object Y is small.\nFor all Y, if there exists B such that person Y is brave and person Y is a sibling of person B and person B is sad, then person Y is strong.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is funny, then object Y is smooth.\nFor all Z, if person Z is busy, then person Z is strong.\nFor all Y, if there exists U such that object Y is hard and person U dislikes object Y and person U is hungry, then object Y is hard.\nFor all X, if there exists W such that person X is tall and person X is a sibling of person W and person W is weak, then person X is weak.\nFor all Y, if object Y is dirty, then object Y is rough.\nFor all Y, if there exists F such that person Y is funny and person F is tall, then person Y is excited.\nFor all X, if there exists V such that person X is busy and person X is a friend of person V and person V is sad, then person X is tired.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if object X is wet, then object X is old.\nFor all X, if person X is calm and person X is brave, then person X is strong.\nFor all X, if person X is brave and person X is brave, then person X is tired.\nFor all X, if person X is happy and person X is sad, then person X is weak.\nFor all X, if object X is new, then object X is rough.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is happy and person X is curious, then person X is tired.\nFor all X, if object X is small, then object X is soft.\n\nAnd the following facts:\ndave is bored.\ncarol is a friend of frank.\nfrank owns pencil.\ndave is friendly.\ndave is tired.\neve is a parent of dave.\ncarol is a friend of george.\ncarol is brave.\n\nQUESTION:\nIs frank is excited true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 705,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(dave).",
    "c": "angry(X) :- bored(X).\nnew(Z) :- hard(Z).\nsmall(Y) :- hard(Y), owns(A,Y), hungry(A).\nstrong(Y) :- brave(Y), sibling(Y,B), sad(B).\nsmooth(Y) :- smooth(Y), dislikes(V,Y), funny(V).\nstrong(Z) :- busy(Z).\nhard(Y) :- hard(Y), dislikes(U,Y), hungry(U).\nweak(X) :- tall(X), sibling(X,W), weak(W).\nrough(Y) :- dirty(Y).\nexcited(Y) :- funny(Y), tall(F).\ntired(X) :- busy(X), friend(X,V), sad(V).\nfunny(X) :- friendly(X).\nold(X) :- wet(X).\nstrong(X) :- calm(X), brave(X).\ntired(X) :- brave(X), brave(X).\nweak(X) :- happy(X), sad(X).\nrough(X) :- new(X).\nbrave(X) :- funny(X).\ntired(X) :- happy(X), curious(X).\nsoft(X) :- small(X).\nangry(dave).\nfriend(carol,frank).\nowns(frank,pencil).\nfriendly(dave).\ntired(dave).\nparent(eve,dave).\nfriend(carol,george).\nbrave(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is angry.\nFor all Z, if object Z is hard, then object Z is new.\nFor all Y, if there exists A such that object Y is hard and person A owns object Y and person A is hungry, then object Y is small.\nFor all Y, if there exists B such that person Y is brave and person Y is a sibling of person B and person B is sad, then person Y is strong.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is funny, then object Y is smooth.\nFor all Z, if person Z is busy, then person Z is strong.\nFor all Y, if there exists U such that object Y is hard and person U dislikes object Y and person U is hungry, then object Y is hard.\nFor all X, if there exists W such that person X is tall and person X is a sibling of person W and person W is weak, then person X is weak.\nFor all Y, if object Y is dirty, then object Y is rough.\nFor all Y, if there exists F such that person Y is funny and person F is tall, then person Y is excited.\nFor all X, if there exists V such that person X is busy and person X is a friend of person V and person V is sad, then person X is tired.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if object X is wet, then object X is old.\nFor all X, if person X is calm and person X is brave, then person X is strong.\nFor all X, if person X is brave and person X is brave, then person X is tired.\nFor all X, if person X is happy and person X is sad, then person X is weak.\nFor all X, if object X is new, then object X is rough.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is happy and person X is curious, then person X is tired.\nFor all X, if object X is small, then object X is soft.\n\nAnd the following facts:\ndave is angry.\ncarol is a friend of frank.\nfrank owns pencil.\ndave is friendly.\ndave is tired.\neve is a parent of dave.\ncarol is a friend of george.\ncarol is brave.\n\nQUESTION:\nCould dave is bored explain dave is angry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 706,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "calm(alice).",
    "c": "angry(X) :- bored(X).\nnew(Z) :- hard(Z).\nsmall(Y) :- hard(Y), owns(A,Y), hungry(A).\nstrong(Y) :- brave(Y), sibling(Y,B), sad(B).\nsmooth(Y) :- smooth(Y), dislikes(V,Y), funny(V).\nstrong(Z) :- busy(Z).\nhard(Y) :- hard(Y), dislikes(U,Y), hungry(U).\nweak(X) :- tall(X), sibling(X,W), weak(W).\nrough(Y) :- dirty(Y).\nexcited(Y) :- funny(Y), tall(F).\ntired(X) :- busy(X), friend(X,V), sad(V).\nfunny(X) :- friendly(X).\nold(X) :- wet(X).\nstrong(X) :- calm(X), brave(X).\ntired(X) :- brave(X), brave(X).\nweak(X) :- happy(X), sad(X).\nrough(X) :- new(X).\nbrave(X) :- funny(X).\ntired(X) :- happy(X), curious(X).\nsoft(X) :- small(X).\nangry(dave).\nfriend(carol,frank).\nowns(frank,pencil).\nfriendly(dave).\ntired(dave).\nparent(eve,dave).\nfriend(carol,george).\nbrave(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is angry.\nFor all Z, if object Z is hard, then object Z is new.\nFor all Y, if there exists A such that object Y is hard and person A owns object Y and person A is hungry, then object Y is small.\nFor all Y, if there exists B such that person Y is brave and person Y is a sibling of person B and person B is sad, then person Y is strong.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is funny, then object Y is smooth.\nFor all Z, if person Z is busy, then person Z is strong.\nFor all Y, if there exists U such that object Y is hard and person U dislikes object Y and person U is hungry, then object Y is hard.\nFor all X, if there exists W such that person X is tall and person X is a sibling of person W and person W is weak, then person X is weak.\nFor all Y, if object Y is dirty, then object Y is rough.\nFor all Y, if there exists F such that person Y is funny and person F is tall, then person Y is excited.\nFor all X, if there exists V such that person X is busy and person X is a friend of person V and person V is sad, then person X is tired.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if object X is wet, then object X is old.\nFor all X, if person X is calm and person X is brave, then person X is strong.\nFor all X, if person X is brave and person X is brave, then person X is tired.\nFor all X, if person X is happy and person X is sad, then person X is weak.\nFor all X, if object X is new, then object X is rough.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is happy and person X is curious, then person X is tired.\nFor all X, if object X is small, then object X is soft.\n\nAnd the following facts:\ndave is angry.\ncarol is a friend of frank.\nfrank owns pencil.\ndave is friendly.\ndave is tired.\neve is a parent of dave.\ncarol is a friend of george.\ncarol is brave.\n\nQUESTION:\nCould alice is calm explain dave is angry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 707,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "brave(X) :- hungry(X).\nclean(Y) :- soft(Y), dislikes(A,Y), funny(A).\nsibling(Z,Y) :- happy(Y), tired(Z), enemy(Y,V).\nenemy(Y,Z) :- weak(Y), funny(Z), tall(F).\nnew(Z) :- red(Z), tall(E).\nsmooth(X) :- new(X).\nclean(X) :- new(X), dislikes(B,X), weak(B).\nfriendly(Y) :- tired(Y), owns(Y,B), big(B).\nnew(Y) :- small(Y), owns(B,Y), calm(B).\nparent(X,Y) :- tall(X), excited(Y).\nfunny(X) :- strong(X).\nbusy(X) :- excited(X).\ntall(X) :- clever(X).\nsibling(X,Y) :- friendly(X), sad(Y).\nowns(X,Y) :- strong(X), old(Y), dislikes(X,Y).\nangry(X) :- calm(X).\nlight(X) :- big(X).\nparent(X,Y) :- bored(X), sad(Y).\nnew(X) :- soft(X).\nparent(X,Y) :- angry(X), calm(Y), friend(X,Y).\nhungry(eve).\nlikes(dave,car).\nfriend(carol,alice).\nlikes(dave,phone).\nlikes(alice,apple).\nlikes(george,car).\nsoft(phone).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is brave.\nFor all Y, if there exists A such that object Y is soft and person A dislikes object Y and person A is funny, then object Y is clean.\nFor all Y, Z, if there exists V such that person Y is happy and person Z is tired and person Y is an enemy of person V, then person Z is a sibling of person Y.\nFor all Y, Z, if there exists F such that person Y is weak and person Z is funny and person F is tall, then person Y is an enemy of person Z.\nFor all Z, if there exists E such that object Z is red and person E is tall, then object Z is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if there exists B such that object X is new and person B dislikes object X and person B is weak, then object X is clean.\nFor all Y, if there exists B such that person Y is tired and person Y owns object B and object B is big, then person Y is friendly.\nFor all Y, if there exists B such that object Y is small and person B owns object Y and person B is calm, then object Y is new.\nFor all X, Y, if person X is tall and person Y is excited, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is funny.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if person X is clever, then person X is tall.\nFor all X, Y, if person X is friendly and person Y is sad, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is old and person X dislikes object Y, then person X owns object Y.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is bored and person Y is sad, then person X is a parent of person Y.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is angry and person Y is calm and person X is a friend of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\neve is hungry.\ndave likes car.\ncarol is a friend of alice.\ndave likes phone.\nalice likes apple.\ngeorge likes car.\nphone is soft.\neve is a parent of dave.\n\nQUESTION:\nIs eve is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 708,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(alice).",
    "c": "brave(X) :- hungry(X).\nclean(Y) :- soft(Y), dislikes(A,Y), funny(A).\nsibling(Z,Y) :- happy(Y), tired(Z), enemy(Y,V).\nenemy(Y,Z) :- weak(Y), funny(Z), tall(F).\nnew(Z) :- red(Z), tall(E).\nsmooth(X) :- new(X).\nclean(X) :- new(X), dislikes(B,X), weak(B).\nfriendly(Y) :- tired(Y), owns(Y,B), big(B).\nnew(Y) :- small(Y), owns(B,Y), calm(B).\nparent(X,Y) :- tall(X), excited(Y).\nfunny(X) :- strong(X).\nbusy(X) :- excited(X).\ntall(X) :- clever(X).\nsibling(X,Y) :- friendly(X), sad(Y).\nowns(X,Y) :- strong(X), old(Y), dislikes(X,Y).\nangry(X) :- calm(X).\nlight(X) :- big(X).\nparent(X,Y) :- bored(X), sad(Y).\nnew(X) :- soft(X).\nparent(X,Y) :- angry(X), calm(Y), friend(X,Y).\nhungry(eve).\nlikes(dave,car).\nfriend(carol,alice).\nlikes(dave,phone).\nlikes(alice,apple).\nlikes(george,car).\nsoft(phone).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is brave.\nFor all Y, if there exists A such that object Y is soft and person A dislikes object Y and person A is funny, then object Y is clean.\nFor all Y, Z, if there exists V such that person Y is happy and person Z is tired and person Y is an enemy of person V, then person Z is a sibling of person Y.\nFor all Y, Z, if there exists F such that person Y is weak and person Z is funny and person F is tall, then person Y is an enemy of person Z.\nFor all Z, if there exists E such that object Z is red and person E is tall, then object Z is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if there exists B such that object X is new and person B dislikes object X and person B is weak, then object X is clean.\nFor all Y, if there exists B such that person Y is tired and person Y owns object B and object B is big, then person Y is friendly.\nFor all Y, if there exists B such that object Y is small and person B owns object Y and person B is calm, then object Y is new.\nFor all X, Y, if person X is tall and person Y is excited, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is funny.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if person X is clever, then person X is tall.\nFor all X, Y, if person X is friendly and person Y is sad, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is old and person X dislikes object Y, then person X owns object Y.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is bored and person Y is sad, then person X is a parent of person Y.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is angry and person Y is calm and person X is a friend of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\neve is hungry.\ndave likes car.\ncarol is a friend of alice.\ndave likes phone.\nalice likes apple.\ngeorge likes car.\nphone is soft.\neve is a parent of dave.\n\nQUESTION:\nIs alice is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 709,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(eve).",
    "c": "brave(X) :- hungry(X).\nclean(Y) :- soft(Y), dislikes(A,Y), funny(A).\nsibling(Z,Y) :- happy(Y), tired(Z), enemy(Y,V).\nenemy(Y,Z) :- weak(Y), funny(Z), tall(F).\nnew(Z) :- red(Z), tall(E).\nsmooth(X) :- new(X).\nclean(X) :- new(X), dislikes(B,X), weak(B).\nfriendly(Y) :- tired(Y), owns(Y,B), big(B).\nnew(Y) :- small(Y), owns(B,Y), calm(B).\nparent(X,Y) :- tall(X), excited(Y).\nfunny(X) :- strong(X).\nbusy(X) :- excited(X).\ntall(X) :- clever(X).\nsibling(X,Y) :- friendly(X), sad(Y).\nowns(X,Y) :- strong(X), old(Y), dislikes(X,Y).\nangry(X) :- calm(X).\nlight(X) :- big(X).\nparent(X,Y) :- bored(X), sad(Y).\nnew(X) :- soft(X).\nparent(X,Y) :- angry(X), calm(Y), friend(X,Y).\nbrave(eve).\nlikes(dave,car).\nfriend(carol,alice).\nlikes(dave,phone).\nlikes(alice,apple).\nlikes(george,car).\nsoft(phone).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is brave.\nFor all Y, if there exists A such that object Y is soft and person A dislikes object Y and person A is funny, then object Y is clean.\nFor all Y, Z, if there exists V such that person Y is happy and person Z is tired and person Y is an enemy of person V, then person Z is a sibling of person Y.\nFor all Y, Z, if there exists F such that person Y is weak and person Z is funny and person F is tall, then person Y is an enemy of person Z.\nFor all Z, if there exists E such that object Z is red and person E is tall, then object Z is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if there exists B such that object X is new and person B dislikes object X and person B is weak, then object X is clean.\nFor all Y, if there exists B such that person Y is tired and person Y owns object B and object B is big, then person Y is friendly.\nFor all Y, if there exists B such that object Y is small and person B owns object Y and person B is calm, then object Y is new.\nFor all X, Y, if person X is tall and person Y is excited, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is funny.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if person X is clever, then person X is tall.\nFor all X, Y, if person X is friendly and person Y is sad, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is old and person X dislikes object Y, then person X owns object Y.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is bored and person Y is sad, then person X is a parent of person Y.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is angry and person Y is calm and person X is a friend of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\neve is brave.\ndave likes car.\ncarol is a friend of alice.\ndave likes phone.\nalice likes apple.\ngeorge likes car.\nphone is soft.\neve is a parent of dave.\n\nQUESTION:\nCould eve is hungry explain eve is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 710,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "brave(X) :- hungry(X).\nclean(Y) :- soft(Y), dislikes(A,Y), funny(A).\nsibling(Z,Y) :- happy(Y), tired(Z), enemy(Y,V).\nenemy(Y,Z) :- weak(Y), funny(Z), tall(F).\nnew(Z) :- red(Z), tall(E).\nsmooth(X) :- new(X).\nclean(X) :- new(X), dislikes(B,X), weak(B).\nfriendly(Y) :- tired(Y), owns(Y,B), big(B).\nnew(Y) :- small(Y), owns(B,Y), calm(B).\nparent(X,Y) :- tall(X), excited(Y).\nfunny(X) :- strong(X).\nbusy(X) :- excited(X).\ntall(X) :- clever(X).\nsibling(X,Y) :- friendly(X), sad(Y).\nowns(X,Y) :- strong(X), old(Y), dislikes(X,Y).\nangry(X) :- calm(X).\nlight(X) :- big(X).\nparent(X,Y) :- bored(X), sad(Y).\nnew(X) :- soft(X).\nparent(X,Y) :- angry(X), calm(Y), friend(X,Y).\nbrave(eve).\nlikes(dave,car).\nfriend(carol,alice).\nlikes(dave,phone).\nlikes(alice,apple).\nlikes(george,car).\nsoft(phone).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is brave.\nFor all Y, if there exists A such that object Y is soft and person A dislikes object Y and person A is funny, then object Y is clean.\nFor all Y, Z, if there exists V such that person Y is happy and person Z is tired and person Y is an enemy of person V, then person Z is a sibling of person Y.\nFor all Y, Z, if there exists F such that person Y is weak and person Z is funny and person F is tall, then person Y is an enemy of person Z.\nFor all Z, if there exists E such that object Z is red and person E is tall, then object Z is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if there exists B such that object X is new and person B dislikes object X and person B is weak, then object X is clean.\nFor all Y, if there exists B such that person Y is tired and person Y owns object B and object B is big, then person Y is friendly.\nFor all Y, if there exists B such that object Y is small and person B owns object Y and person B is calm, then object Y is new.\nFor all X, Y, if person X is tall and person Y is excited, then person X is a parent of person Y.\nFor all X, if person X is strong, then person X is funny.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if person X is clever, then person X is tall.\nFor all X, Y, if person X is friendly and person Y is sad, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is old and person X dislikes object Y, then person X owns object Y.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is bored and person Y is sad, then person X is a parent of person Y.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is angry and person Y is calm and person X is a friend of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\neve is brave.\ndave likes car.\ncarol is a friend of alice.\ndave likes phone.\nalice likes apple.\ngeorge likes car.\nphone is soft.\neve is a parent of dave.\n\nQUESTION:\nCould book is small explain eve is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 711,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(alice).",
    "c": "strong(X) :- tired(X).\nbusy(Z) :- hungry(Z).\nwet(Z) :- dirty(Z).\nweak(Z) :- bored(Z).\nbig(Z) :- soft(Z).\nbig(Z) :- wet(Z), curious(F).\ndislikes(Z,X) :- excited(Z), clean(X), parent(Z,U).\ndislikes(X,Y) :- old(Y), calm(X), dislikes(W,Y).\nsoft(Y) :- big(Y).\ndislikes(Y,Z) :- angry(Y), light(Z), likes(V,Z).\nfunny(Y) :- sad(Y), parent(Y,V), funny(V).\nhappy(Y) :- happy(Y), small(C).\nsoft(Z) :- hard(Z), likes(V,Z), brave(V).\nlight(X) :- hard(X).\ncurious(X) :- happy(X).\ncurious(X) :- tall(X).\nred(X) :- clean(X).\nenemy(X,Y) :- clever(X), happy(Y).\nred(X) :- hard(X).\nexcited(X) :- tall(X), calm(X).\ntired(alice).\nowns(george,ball).\ntall(carol).\nhungry(dave).\nangry(frank).\nowns(george,phone).\nnew(ball).\ndislikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all Z, if person Z is hungry, then person Z is busy.\nFor all Z, if object Z is dirty, then object Z is wet.\nFor all Z, if person Z is bored, then person Z is weak.\nFor all Z, if object Z is soft, then object Z is big.\nFor all Z, if there exists F such that object Z is wet and person F is curious, then object Z is big.\nFor all X, Z, if there exists U such that person Z is excited and object X is clean and person Z is a parent of person U, then person Z dislikes object X.\nFor all X, Y, if there exists W such that object Y is old and person X is calm and person W dislikes object Y, then person X dislikes object Y.\nFor all Y, if object Y is big, then object Y is soft.\nFor all Y, Z, if there exists V such that person Y is angry and object Z is light and person V likes object Z, then person Y dislikes object Z.\nFor all Y, if there exists V such that person Y is sad and person Y is a parent of person V and person V is funny, then person Y is funny.\nFor all Y, if there exists C such that person Y is happy and object C is small, then person Y is happy.\nFor all Z, if there exists V such that object Z is hard and person V likes object Z and person V is brave, then object Z is soft.\nFor all X, if object X is hard, then object X is light.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if object X is clean, then object X is red.\nFor all X, Y, if person X is clever and person Y is happy, then person X is an enemy of person Y.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is tall and person X is calm, then person X is excited.\n\nAnd the following facts:\nalice is tired.\ngeorge owns ball.\ncarol is tall.\ndave is hungry.\nfrank is angry.\ngeorge owns phone.\nball is new.\nfrank dislikes ball.\n\nQUESTION:\nIs alice is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 712,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(car).",
    "c": "strong(X) :- tired(X).\nbusy(Z) :- hungry(Z).\nwet(Z) :- dirty(Z).\nweak(Z) :- bored(Z).\nbig(Z) :- soft(Z).\nbig(Z) :- wet(Z), curious(F).\ndislikes(Z,X) :- excited(Z), clean(X), parent(Z,U).\ndislikes(X,Y) :- old(Y), calm(X), dislikes(W,Y).\nsoft(Y) :- big(Y).\ndislikes(Y,Z) :- angry(Y), light(Z), likes(V,Z).\nfunny(Y) :- sad(Y), parent(Y,V), funny(V).\nhappy(Y) :- happy(Y), small(C).\nsoft(Z) :- hard(Z), likes(V,Z), brave(V).\nlight(X) :- hard(X).\ncurious(X) :- happy(X).\ncurious(X) :- tall(X).\nred(X) :- clean(X).\nenemy(X,Y) :- clever(X), happy(Y).\nred(X) :- hard(X).\nexcited(X) :- tall(X), calm(X).\ntired(alice).\nowns(george,ball).\ntall(carol).\nhungry(dave).\nangry(frank).\nowns(george,phone).\nnew(ball).\ndislikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all Z, if person Z is hungry, then person Z is busy.\nFor all Z, if object Z is dirty, then object Z is wet.\nFor all Z, if person Z is bored, then person Z is weak.\nFor all Z, if object Z is soft, then object Z is big.\nFor all Z, if there exists F such that object Z is wet and person F is curious, then object Z is big.\nFor all X, Z, if there exists U such that person Z is excited and object X is clean and person Z is a parent of person U, then person Z dislikes object X.\nFor all X, Y, if there exists W such that object Y is old and person X is calm and person W dislikes object Y, then person X dislikes object Y.\nFor all Y, if object Y is big, then object Y is soft.\nFor all Y, Z, if there exists V such that person Y is angry and object Z is light and person V likes object Z, then person Y dislikes object Z.\nFor all Y, if there exists V such that person Y is sad and person Y is a parent of person V and person V is funny, then person Y is funny.\nFor all Y, if there exists C such that person Y is happy and object C is small, then person Y is happy.\nFor all Z, if there exists V such that object Z is hard and person V likes object Z and person V is brave, then object Z is soft.\nFor all X, if object X is hard, then object X is light.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if object X is clean, then object X is red.\nFor all X, Y, if person X is clever and person Y is happy, then person X is an enemy of person Y.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is tall and person X is calm, then person X is excited.\n\nAnd the following facts:\nalice is tired.\ngeorge owns ball.\ncarol is tall.\ndave is hungry.\nfrank is angry.\ngeorge owns phone.\nball is new.\nfrank dislikes ball.\n\nQUESTION:\nIs car is clean true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 713,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(alice).",
    "c": "strong(X) :- tired(X).\nbusy(Z) :- hungry(Z).\nwet(Z) :- dirty(Z).\nweak(Z) :- bored(Z).\nbig(Z) :- soft(Z).\nbig(Z) :- wet(Z), curious(F).\ndislikes(Z,X) :- excited(Z), clean(X), parent(Z,U).\ndislikes(X,Y) :- old(Y), calm(X), dislikes(W,Y).\nsoft(Y) :- big(Y).\ndislikes(Y,Z) :- angry(Y), light(Z), likes(V,Z).\nfunny(Y) :- sad(Y), parent(Y,V), funny(V).\nhappy(Y) :- happy(Y), small(C).\nsoft(Z) :- hard(Z), likes(V,Z), brave(V).\nlight(X) :- hard(X).\ncurious(X) :- happy(X).\ncurious(X) :- tall(X).\nred(X) :- clean(X).\nenemy(X,Y) :- clever(X), happy(Y).\nred(X) :- hard(X).\nexcited(X) :- tall(X), calm(X).\nstrong(alice).\nowns(george,ball).\ntall(carol).\nhungry(dave).\nangry(frank).\nowns(george,phone).\nnew(ball).\ndislikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all Z, if person Z is hungry, then person Z is busy.\nFor all Z, if object Z is dirty, then object Z is wet.\nFor all Z, if person Z is bored, then person Z is weak.\nFor all Z, if object Z is soft, then object Z is big.\nFor all Z, if there exists F such that object Z is wet and person F is curious, then object Z is big.\nFor all X, Z, if there exists U such that person Z is excited and object X is clean and person Z is a parent of person U, then person Z dislikes object X.\nFor all X, Y, if there exists W such that object Y is old and person X is calm and person W dislikes object Y, then person X dislikes object Y.\nFor all Y, if object Y is big, then object Y is soft.\nFor all Y, Z, if there exists V such that person Y is angry and object Z is light and person V likes object Z, then person Y dislikes object Z.\nFor all Y, if there exists V such that person Y is sad and person Y is a parent of person V and person V is funny, then person Y is funny.\nFor all Y, if there exists C such that person Y is happy and object C is small, then person Y is happy.\nFor all Z, if there exists V such that object Z is hard and person V likes object Z and person V is brave, then object Z is soft.\nFor all X, if object X is hard, then object X is light.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if object X is clean, then object X is red.\nFor all X, Y, if person X is clever and person Y is happy, then person X is an enemy of person Y.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is tall and person X is calm, then person X is excited.\n\nAnd the following facts:\nalice is strong.\ngeorge owns ball.\ncarol is tall.\ndave is hungry.\nfrank is angry.\ngeorge owns phone.\nball is new.\nfrank dislikes ball.\n\nQUESTION:\nCould alice is tired explain alice is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 714,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "happy(bob).",
    "c": "strong(X) :- tired(X).\nbusy(Z) :- hungry(Z).\nwet(Z) :- dirty(Z).\nweak(Z) :- bored(Z).\nbig(Z) :- soft(Z).\nbig(Z) :- wet(Z), curious(F).\ndislikes(Z,X) :- excited(Z), clean(X), parent(Z,U).\ndislikes(X,Y) :- old(Y), calm(X), dislikes(W,Y).\nsoft(Y) :- big(Y).\ndislikes(Y,Z) :- angry(Y), light(Z), likes(V,Z).\nfunny(Y) :- sad(Y), parent(Y,V), funny(V).\nhappy(Y) :- happy(Y), small(C).\nsoft(Z) :- hard(Z), likes(V,Z), brave(V).\nlight(X) :- hard(X).\ncurious(X) :- happy(X).\ncurious(X) :- tall(X).\nred(X) :- clean(X).\nenemy(X,Y) :- clever(X), happy(Y).\nred(X) :- hard(X).\nexcited(X) :- tall(X), calm(X).\nstrong(alice).\nowns(george,ball).\ntall(carol).\nhungry(dave).\nangry(frank).\nowns(george,phone).\nnew(ball).\ndislikes(frank,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all Z, if person Z is hungry, then person Z is busy.\nFor all Z, if object Z is dirty, then object Z is wet.\nFor all Z, if person Z is bored, then person Z is weak.\nFor all Z, if object Z is soft, then object Z is big.\nFor all Z, if there exists F such that object Z is wet and person F is curious, then object Z is big.\nFor all X, Z, if there exists U such that person Z is excited and object X is clean and person Z is a parent of person U, then person Z dislikes object X.\nFor all X, Y, if there exists W such that object Y is old and person X is calm and person W dislikes object Y, then person X dislikes object Y.\nFor all Y, if object Y is big, then object Y is soft.\nFor all Y, Z, if there exists V such that person Y is angry and object Z is light and person V likes object Z, then person Y dislikes object Z.\nFor all Y, if there exists V such that person Y is sad and person Y is a parent of person V and person V is funny, then person Y is funny.\nFor all Y, if there exists C such that person Y is happy and object C is small, then person Y is happy.\nFor all Z, if there exists V such that object Z is hard and person V likes object Z and person V is brave, then object Z is soft.\nFor all X, if object X is hard, then object X is light.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if object X is clean, then object X is red.\nFor all X, Y, if person X is clever and person Y is happy, then person X is an enemy of person Y.\nFor all X, if object X is hard, then object X is red.\nFor all X, if person X is tall and person X is calm, then person X is excited.\n\nAnd the following facts:\nalice is strong.\ngeorge owns ball.\ncarol is tall.\ndave is hungry.\nfrank is angry.\ngeorge owns phone.\nball is new.\nfrank dislikes ball.\n\nQUESTION:\nCould bob is happy explain alice is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 715,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(bob).",
    "c": "weak(X) :- busy(X).\nhappy(Y) :- happy(Y), owns(Y,W), old(W).\nsibling(Y,Z) :- clever(Y), excited(Z), dislikes(Z,A).\nhungry(X) :- friendly(X), friendly(F).\nlikes(Z,X) :- strong(Z), big(X), dislikes(V,X).\nhard(X) :- hard(X).\nhungry(Z) :- bored(Z), owns(Z,A), soft(A).\nold(Y) :- hard(Y), likes(U,Y), sad(U).\nbig(Y) :- smooth(Y), dislikes(V,Y), excited(V).\nrough(X) :- clean(X), old(X).\nclean(X) :- smooth(X), rough(X).\nenemy(X,Y) :- funny(X), clever(Y).\nrough(X) :- old(X), old(X).\nold(X) :- clean(X).\nnew(X) :- big(X), smooth(X).\nhard(X) :- light(X).\nlight(X) :- heavy(X), clean(X).\nsad(X) :- clever(X), friendly(X).\nsmooth(X) :- hard(X).\nfunny(X) :- sad(X).\nbusy(bob).\nhappy(frank).\nfriend(carol,dave).\nlikes(carol,book).\nowns(dave,ball).\nsibling(george,frank).\nsibling(frank,eve).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is weak.\nFor all Y, if there exists W such that person Y is happy and person Y owns object W and object W is old, then person Y is happy.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is excited and person Z dislikes object A, then person Y is a sibling of person Z.\nFor all X, if there exists F such that person X is friendly and person F is friendly, then person X is hungry.\nFor all X, Z, if there exists V such that person Z is strong and object X is big and person V dislikes object X, then person Z likes object X.\nFor all X, if object X is hard, then object X is hard.\nFor all Z, if there exists A such that person Z is bored and person Z owns object A and object A is soft, then person Z is hungry.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is sad, then object Y is old.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is excited, then object Y is big.\nFor all X, if object X is clean and object X is old, then object X is rough.\nFor all X, if object X is smooth and object X is rough, then object X is clean.\nFor all X, Y, if person X is funny and person Y is clever, then person X is an enemy of person Y.\nFor all X, if object X is old and object X is old, then object X is rough.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is big and object X is smooth, then object X is new.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is heavy and object X is clean, then object X is light.\nFor all X, if person X is clever and person X is friendly, then person X is sad.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if person X is sad, then person X is funny.\n\nAnd the following facts:\nbob is busy.\nfrank is happy.\ncarol is a friend of dave.\ncarol likes book.\ndave owns ball.\ngeorge is a sibling of frank.\nfrank is a sibling of eve.\nalice dislikes book.\n\nQUESTION:\nIs bob is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 716,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "weak(X) :- busy(X).\nhappy(Y) :- happy(Y), owns(Y,W), old(W).\nsibling(Y,Z) :- clever(Y), excited(Z), dislikes(Z,A).\nhungry(X) :- friendly(X), friendly(F).\nlikes(Z,X) :- strong(Z), big(X), dislikes(V,X).\nhard(X) :- hard(X).\nhungry(Z) :- bored(Z), owns(Z,A), soft(A).\nold(Y) :- hard(Y), likes(U,Y), sad(U).\nbig(Y) :- smooth(Y), dislikes(V,Y), excited(V).\nrough(X) :- clean(X), old(X).\nclean(X) :- smooth(X), rough(X).\nenemy(X,Y) :- funny(X), clever(Y).\nrough(X) :- old(X), old(X).\nold(X) :- clean(X).\nnew(X) :- big(X), smooth(X).\nhard(X) :- light(X).\nlight(X) :- heavy(X), clean(X).\nsad(X) :- clever(X), friendly(X).\nsmooth(X) :- hard(X).\nfunny(X) :- sad(X).\nbusy(bob).\nhappy(frank).\nfriend(carol,dave).\nlikes(carol,book).\nowns(dave,ball).\nsibling(george,frank).\nsibling(frank,eve).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is weak.\nFor all Y, if there exists W such that person Y is happy and person Y owns object W and object W is old, then person Y is happy.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is excited and person Z dislikes object A, then person Y is a sibling of person Z.\nFor all X, if there exists F such that person X is friendly and person F is friendly, then person X is hungry.\nFor all X, Z, if there exists V such that person Z is strong and object X is big and person V dislikes object X, then person Z likes object X.\nFor all X, if object X is hard, then object X is hard.\nFor all Z, if there exists A such that person Z is bored and person Z owns object A and object A is soft, then person Z is hungry.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is sad, then object Y is old.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is excited, then object Y is big.\nFor all X, if object X is clean and object X is old, then object X is rough.\nFor all X, if object X is smooth and object X is rough, then object X is clean.\nFor all X, Y, if person X is funny and person Y is clever, then person X is an enemy of person Y.\nFor all X, if object X is old and object X is old, then object X is rough.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is big and object X is smooth, then object X is new.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is heavy and object X is clean, then object X is light.\nFor all X, if person X is clever and person X is friendly, then person X is sad.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if person X is sad, then person X is funny.\n\nAnd the following facts:\nbob is busy.\nfrank is happy.\ncarol is a friend of dave.\ncarol likes book.\ndave owns ball.\ngeorge is a sibling of frank.\nfrank is a sibling of eve.\nalice dislikes book.\n\nQUESTION:\nIs car is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 717,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(bob).",
    "c": "weak(X) :- busy(X).\nhappy(Y) :- happy(Y), owns(Y,W), old(W).\nsibling(Y,Z) :- clever(Y), excited(Z), dislikes(Z,A).\nhungry(X) :- friendly(X), friendly(F).\nlikes(Z,X) :- strong(Z), big(X), dislikes(V,X).\nhard(X) :- hard(X).\nhungry(Z) :- bored(Z), owns(Z,A), soft(A).\nold(Y) :- hard(Y), likes(U,Y), sad(U).\nbig(Y) :- smooth(Y), dislikes(V,Y), excited(V).\nrough(X) :- clean(X), old(X).\nclean(X) :- smooth(X), rough(X).\nenemy(X,Y) :- funny(X), clever(Y).\nrough(X) :- old(X), old(X).\nold(X) :- clean(X).\nnew(X) :- big(X), smooth(X).\nhard(X) :- light(X).\nlight(X) :- heavy(X), clean(X).\nsad(X) :- clever(X), friendly(X).\nsmooth(X) :- hard(X).\nfunny(X) :- sad(X).\nweak(bob).\nhappy(frank).\nfriend(carol,dave).\nlikes(carol,book).\nowns(dave,ball).\nsibling(george,frank).\nsibling(frank,eve).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is weak.\nFor all Y, if there exists W such that person Y is happy and person Y owns object W and object W is old, then person Y is happy.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is excited and person Z dislikes object A, then person Y is a sibling of person Z.\nFor all X, if there exists F such that person X is friendly and person F is friendly, then person X is hungry.\nFor all X, Z, if there exists V such that person Z is strong and object X is big and person V dislikes object X, then person Z likes object X.\nFor all X, if object X is hard, then object X is hard.\nFor all Z, if there exists A such that person Z is bored and person Z owns object A and object A is soft, then person Z is hungry.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is sad, then object Y is old.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is excited, then object Y is big.\nFor all X, if object X is clean and object X is old, then object X is rough.\nFor all X, if object X is smooth and object X is rough, then object X is clean.\nFor all X, Y, if person X is funny and person Y is clever, then person X is an enemy of person Y.\nFor all X, if object X is old and object X is old, then object X is rough.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is big and object X is smooth, then object X is new.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is heavy and object X is clean, then object X is light.\nFor all X, if person X is clever and person X is friendly, then person X is sad.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if person X is sad, then person X is funny.\n\nAnd the following facts:\nbob is weak.\nfrank is happy.\ncarol is a friend of dave.\ncarol likes book.\ndave owns ball.\ngeorge is a sibling of frank.\nfrank is a sibling of eve.\nalice dislikes book.\n\nQUESTION:\nCould bob is busy explain bob is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 718,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(george).",
    "c": "weak(X) :- busy(X).\nhappy(Y) :- happy(Y), owns(Y,W), old(W).\nsibling(Y,Z) :- clever(Y), excited(Z), dislikes(Z,A).\nhungry(X) :- friendly(X), friendly(F).\nlikes(Z,X) :- strong(Z), big(X), dislikes(V,X).\nhard(X) :- hard(X).\nhungry(Z) :- bored(Z), owns(Z,A), soft(A).\nold(Y) :- hard(Y), likes(U,Y), sad(U).\nbig(Y) :- smooth(Y), dislikes(V,Y), excited(V).\nrough(X) :- clean(X), old(X).\nclean(X) :- smooth(X), rough(X).\nenemy(X,Y) :- funny(X), clever(Y).\nrough(X) :- old(X), old(X).\nold(X) :- clean(X).\nnew(X) :- big(X), smooth(X).\nhard(X) :- light(X).\nlight(X) :- heavy(X), clean(X).\nsad(X) :- clever(X), friendly(X).\nsmooth(X) :- hard(X).\nfunny(X) :- sad(X).\nweak(bob).\nhappy(frank).\nfriend(carol,dave).\nlikes(carol,book).\nowns(dave,ball).\nsibling(george,frank).\nsibling(frank,eve).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is weak.\nFor all Y, if there exists W such that person Y is happy and person Y owns object W and object W is old, then person Y is happy.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is excited and person Z dislikes object A, then person Y is a sibling of person Z.\nFor all X, if there exists F such that person X is friendly and person F is friendly, then person X is hungry.\nFor all X, Z, if there exists V such that person Z is strong and object X is big and person V dislikes object X, then person Z likes object X.\nFor all X, if object X is hard, then object X is hard.\nFor all Z, if there exists A such that person Z is bored and person Z owns object A and object A is soft, then person Z is hungry.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is sad, then object Y is old.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is excited, then object Y is big.\nFor all X, if object X is clean and object X is old, then object X is rough.\nFor all X, if object X is smooth and object X is rough, then object X is clean.\nFor all X, Y, if person X is funny and person Y is clever, then person X is an enemy of person Y.\nFor all X, if object X is old and object X is old, then object X is rough.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is big and object X is smooth, then object X is new.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is heavy and object X is clean, then object X is light.\nFor all X, if person X is clever and person X is friendly, then person X is sad.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if person X is sad, then person X is funny.\n\nAnd the following facts:\nbob is weak.\nfrank is happy.\ncarol is a friend of dave.\ncarol likes book.\ndave owns ball.\ngeorge is a sibling of frank.\nfrank is a sibling of eve.\nalice dislikes book.\n\nQUESTION:\nCould george is weak explain bob is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 719,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(book).",
    "c": "small(X) :- heavy(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nhard(X) :- light(X).\nrough(X) :- hard(X).\ndirty(X) :- red(X), dislikes(V,X), friendly(V).\nowns(Z,X) :- clever(Z), dirty(X).\nfriend(X,Z) :- brave(Z), hungry(X), owns(X,B).\nhappy(Z) :- excited(Z), friend(Z,A), hungry(A).\ntall(Z) :- calm(Z).\nbrave(Z) :- friendly(Z).\nsmooth(Z) :- dirty(Z).\nfunny(X) :- excited(X), sibling(X,W), angry(W).\nweak(X) :- tall(X), likes(X,U), red(U).\ncurious(Y) :- tall(Y), parent(Y,U), excited(U).\ndirty(X) :- smooth(X), smooth(X).\nbored(X) :- tired(X).\nbrave(X) :- excited(X), friendly(X).\nsad(X) :- curious(X).\nred(X) :- dirty(X), dirty(X).\nheavy(book).\ndislikes(bob,book).\nparent(george,bob).\ndislikes(george,book).\nenemy(george,frank).\nnew(car).\nsibling(frank,bob).\nweak(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if there exists V such that object X is red and person V dislikes object X and person V is friendly, then object X is dirty.\nFor all X, Z, if person Z is clever and object X is dirty, then person Z owns object X.\nFor all X, Z, if there exists B such that person Z is brave and person X is hungry and person X owns object B, then person X is a friend of person Z.\nFor all Z, if there exists A such that person Z is excited and person Z is a friend of person A and person A is hungry, then person Z is happy.\nFor all Z, if person Z is calm, then person Z is tall.\nFor all Z, if person Z is friendly, then person Z is brave.\nFor all Z, if object Z is dirty, then object Z is smooth.\nFor all X, if there exists W such that person X is excited and person X is a sibling of person W and person W is angry, then person X is funny.\nFor all X, if there exists U such that person X is tall and person X likes object U and object U is red, then person X is weak.\nFor all Y, if there exists U such that person Y is tall and person Y is a parent of person U and person U is excited, then person Y is curious.\nFor all X, if object X is smooth and object X is smooth, then object X is dirty.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is excited and person X is friendly, then person X is brave.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if object X is dirty and object X is dirty, then object X is red.\n\nAnd the following facts:\nbook is heavy.\nbob dislikes book.\ngeorge is a parent of bob.\ngeorge dislikes book.\ngeorge is an enemy of frank.\ncar is new.\nfrank is a sibling of bob.\ncarol is weak.\n\nQUESTION:\nIs book is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 720,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(ball).",
    "c": "small(X) :- heavy(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nhard(X) :- light(X).\nrough(X) :- hard(X).\ndirty(X) :- red(X), dislikes(V,X), friendly(V).\nowns(Z,X) :- clever(Z), dirty(X).\nfriend(X,Z) :- brave(Z), hungry(X), owns(X,B).\nhappy(Z) :- excited(Z), friend(Z,A), hungry(A).\ntall(Z) :- calm(Z).\nbrave(Z) :- friendly(Z).\nsmooth(Z) :- dirty(Z).\nfunny(X) :- excited(X), sibling(X,W), angry(W).\nweak(X) :- tall(X), likes(X,U), red(U).\ncurious(Y) :- tall(Y), parent(Y,U), excited(U).\ndirty(X) :- smooth(X), smooth(X).\nbored(X) :- tired(X).\nbrave(X) :- excited(X), friendly(X).\nsad(X) :- curious(X).\nred(X) :- dirty(X), dirty(X).\nheavy(book).\ndislikes(bob,book).\nparent(george,bob).\ndislikes(george,book).\nenemy(george,frank).\nnew(car).\nsibling(frank,bob).\nweak(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if there exists V such that object X is red and person V dislikes object X and person V is friendly, then object X is dirty.\nFor all X, Z, if person Z is clever and object X is dirty, then person Z owns object X.\nFor all X, Z, if there exists B such that person Z is brave and person X is hungry and person X owns object B, then person X is a friend of person Z.\nFor all Z, if there exists A such that person Z is excited and person Z is a friend of person A and person A is hungry, then person Z is happy.\nFor all Z, if person Z is calm, then person Z is tall.\nFor all Z, if person Z is friendly, then person Z is brave.\nFor all Z, if object Z is dirty, then object Z is smooth.\nFor all X, if there exists W such that person X is excited and person X is a sibling of person W and person W is angry, then person X is funny.\nFor all X, if there exists U such that person X is tall and person X likes object U and object U is red, then person X is weak.\nFor all Y, if there exists U such that person Y is tall and person Y is a parent of person U and person U is excited, then person Y is curious.\nFor all X, if object X is smooth and object X is smooth, then object X is dirty.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is excited and person X is friendly, then person X is brave.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if object X is dirty and object X is dirty, then object X is red.\n\nAnd the following facts:\nbook is heavy.\nbob dislikes book.\ngeorge is a parent of bob.\ngeorge dislikes book.\ngeorge is an enemy of frank.\ncar is new.\nfrank is a sibling of bob.\ncarol is weak.\n\nQUESTION:\nIs ball is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 721,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(book).",
    "c": "small(X) :- heavy(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nhard(X) :- light(X).\nrough(X) :- hard(X).\ndirty(X) :- red(X), dislikes(V,X), friendly(V).\nowns(Z,X) :- clever(Z), dirty(X).\nfriend(X,Z) :- brave(Z), hungry(X), owns(X,B).\nhappy(Z) :- excited(Z), friend(Z,A), hungry(A).\ntall(Z) :- calm(Z).\nbrave(Z) :- friendly(Z).\nsmooth(Z) :- dirty(Z).\nfunny(X) :- excited(X), sibling(X,W), angry(W).\nweak(X) :- tall(X), likes(X,U), red(U).\ncurious(Y) :- tall(Y), parent(Y,U), excited(U).\ndirty(X) :- smooth(X), smooth(X).\nbored(X) :- tired(X).\nbrave(X) :- excited(X), friendly(X).\nsad(X) :- curious(X).\nred(X) :- dirty(X), dirty(X).\nrough(book).\ndislikes(bob,book).\nparent(george,bob).\ndislikes(george,book).\nenemy(george,frank).\nnew(car).\nsibling(frank,bob).\nweak(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if there exists V such that object X is red and person V dislikes object X and person V is friendly, then object X is dirty.\nFor all X, Z, if person Z is clever and object X is dirty, then person Z owns object X.\nFor all X, Z, if there exists B such that person Z is brave and person X is hungry and person X owns object B, then person X is a friend of person Z.\nFor all Z, if there exists A such that person Z is excited and person Z is a friend of person A and person A is hungry, then person Z is happy.\nFor all Z, if person Z is calm, then person Z is tall.\nFor all Z, if person Z is friendly, then person Z is brave.\nFor all Z, if object Z is dirty, then object Z is smooth.\nFor all X, if there exists W such that person X is excited and person X is a sibling of person W and person W is angry, then person X is funny.\nFor all X, if there exists U such that person X is tall and person X likes object U and object U is red, then person X is weak.\nFor all Y, if there exists U such that person Y is tall and person Y is a parent of person U and person U is excited, then person Y is curious.\nFor all X, if object X is smooth and object X is smooth, then object X is dirty.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is excited and person X is friendly, then person X is brave.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if object X is dirty and object X is dirty, then object X is red.\n\nAnd the following facts:\nbook is rough.\nbob dislikes book.\ngeorge is a parent of bob.\ngeorge dislikes book.\ngeorge is an enemy of frank.\ncar is new.\nfrank is a sibling of bob.\ncarol is weak.\n\nQUESTION:\nCould book is heavy explain book is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 722,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(car).",
    "c": "small(X) :- heavy(X).\nbig(X) :- small(X).\nlight(X) :- big(X).\nhard(X) :- light(X).\nrough(X) :- hard(X).\ndirty(X) :- red(X), dislikes(V,X), friendly(V).\nowns(Z,X) :- clever(Z), dirty(X).\nfriend(X,Z) :- brave(Z), hungry(X), owns(X,B).\nhappy(Z) :- excited(Z), friend(Z,A), hungry(A).\ntall(Z) :- calm(Z).\nbrave(Z) :- friendly(Z).\nsmooth(Z) :- dirty(Z).\nfunny(X) :- excited(X), sibling(X,W), angry(W).\nweak(X) :- tall(X), likes(X,U), red(U).\ncurious(Y) :- tall(Y), parent(Y,U), excited(U).\ndirty(X) :- smooth(X), smooth(X).\nbored(X) :- tired(X).\nbrave(X) :- excited(X), friendly(X).\nsad(X) :- curious(X).\nred(X) :- dirty(X), dirty(X).\nrough(book).\ndislikes(bob,book).\nparent(george,bob).\ndislikes(george,book).\nenemy(george,frank).\nnew(car).\nsibling(frank,bob).\nweak(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if there exists V such that object X is red and person V dislikes object X and person V is friendly, then object X is dirty.\nFor all X, Z, if person Z is clever and object X is dirty, then person Z owns object X.\nFor all X, Z, if there exists B such that person Z is brave and person X is hungry and person X owns object B, then person X is a friend of person Z.\nFor all Z, if there exists A such that person Z is excited and person Z is a friend of person A and person A is hungry, then person Z is happy.\nFor all Z, if person Z is calm, then person Z is tall.\nFor all Z, if person Z is friendly, then person Z is brave.\nFor all Z, if object Z is dirty, then object Z is smooth.\nFor all X, if there exists W such that person X is excited and person X is a sibling of person W and person W is angry, then person X is funny.\nFor all X, if there exists U such that person X is tall and person X likes object U and object U is red, then person X is weak.\nFor all Y, if there exists U such that person Y is tall and person Y is a parent of person U and person U is excited, then person Y is curious.\nFor all X, if object X is smooth and object X is smooth, then object X is dirty.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is excited and person X is friendly, then person X is brave.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if object X is dirty and object X is dirty, then object X is red.\n\nAnd the following facts:\nbook is rough.\nbob dislikes book.\ngeorge is a parent of bob.\ngeorge dislikes book.\ngeorge is an enemy of frank.\ncar is new.\nfrank is a sibling of bob.\ncarol is weak.\n\nQUESTION:\nCould car is big explain book is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 723,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(apple).",
    "c": "smooth(X) :- small(X).\nsoft(X) :- smooth(X).\nsmooth(X) :- soft(X).\nred(X) :- smooth(X).\nrough(X) :- red(X).\nwet(Z) :- big(Z).\nweak(Z) :- bored(Z).\nexcited(Y) :- angry(Y), enemy(Y,B), excited(B).\nfunny(Z) :- weak(Z), owns(Z,B), hard(B).\nbored(Z) :- friendly(Z), enemy(Z,V), curious(V).\nfunny(Z) :- curious(Z), likes(Z,A), new(A).\nexcited(Y) :- happy(Y), sibling(Y,W), angry(W).\ntall(Y) :- hungry(Y).\nbusy(Y) :- calm(Y).\nfriendly(Y) :- tired(Y), calm(D).\nnew(X) :- old(X), dirty(X).\nbusy(X) :- weak(X), brave(X).\nclean(X) :- new(X).\nfunny(X) :- weak(X).\nhungry(X) :- sad(X).\nsmall(apple).\nenemy(george,eve).\nfriendly(eve).\nowns(bob,phone).\nbored(eve).\nsad(carol).\nlikes(bob,car).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all Z, if object Z is big, then object Z is wet.\nFor all Z, if person Z is bored, then person Z is weak.\nFor all Y, if there exists B such that person Y is angry and person Y is an enemy of person B and person B is excited, then person Y is excited.\nFor all Z, if there exists B such that person Z is weak and person Z owns object B and object B is hard, then person Z is funny.\nFor all Z, if there exists V such that person Z is friendly and person Z is an enemy of person V and person V is curious, then person Z is bored.\nFor all Z, if there exists A such that person Z is curious and person Z likes object A and object A is new, then person Z is funny.\nFor all Y, if there exists W such that person Y is happy and person Y is a sibling of person W and person W is angry, then person Y is excited.\nFor all Y, if person Y is hungry, then person Y is tall.\nFor all Y, if person Y is calm, then person Y is busy.\nFor all Y, if there exists D such that person Y is tired and person D is calm, then person Y is friendly.\nFor all X, if object X is old and object X is dirty, then object X is new.\nFor all X, if person X is weak and person X is brave, then person X is busy.\nFor all X, if object X is new, then object X is clean.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is sad, then person X is hungry.\n\nAnd the following facts:\napple is small.\ngeorge is an enemy of eve.\neve is friendly.\nbob owns phone.\neve is bored.\ncarol is sad.\nbob likes car.\ncarol is a friend of eve.\n\nQUESTION:\nIs apple is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 724,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(george).",
    "c": "smooth(X) :- small(X).\nsoft(X) :- smooth(X).\nsmooth(X) :- soft(X).\nred(X) :- smooth(X).\nrough(X) :- red(X).\nwet(Z) :- big(Z).\nweak(Z) :- bored(Z).\nexcited(Y) :- angry(Y), enemy(Y,B), excited(B).\nfunny(Z) :- weak(Z), owns(Z,B), hard(B).\nbored(Z) :- friendly(Z), enemy(Z,V), curious(V).\nfunny(Z) :- curious(Z), likes(Z,A), new(A).\nexcited(Y) :- happy(Y), sibling(Y,W), angry(W).\ntall(Y) :- hungry(Y).\nbusy(Y) :- calm(Y).\nfriendly(Y) :- tired(Y), calm(D).\nnew(X) :- old(X), dirty(X).\nbusy(X) :- weak(X), brave(X).\nclean(X) :- new(X).\nfunny(X) :- weak(X).\nhungry(X) :- sad(X).\nsmall(apple).\nenemy(george,eve).\nfriendly(eve).\nowns(bob,phone).\nbored(eve).\nsad(carol).\nlikes(bob,car).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all Z, if object Z is big, then object Z is wet.\nFor all Z, if person Z is bored, then person Z is weak.\nFor all Y, if there exists B such that person Y is angry and person Y is an enemy of person B and person B is excited, then person Y is excited.\nFor all Z, if there exists B such that person Z is weak and person Z owns object B and object B is hard, then person Z is funny.\nFor all Z, if there exists V such that person Z is friendly and person Z is an enemy of person V and person V is curious, then person Z is bored.\nFor all Z, if there exists A such that person Z is curious and person Z likes object A and object A is new, then person Z is funny.\nFor all Y, if there exists W such that person Y is happy and person Y is a sibling of person W and person W is angry, then person Y is excited.\nFor all Y, if person Y is hungry, then person Y is tall.\nFor all Y, if person Y is calm, then person Y is busy.\nFor all Y, if there exists D such that person Y is tired and person D is calm, then person Y is friendly.\nFor all X, if object X is old and object X is dirty, then object X is new.\nFor all X, if person X is weak and person X is brave, then person X is busy.\nFor all X, if object X is new, then object X is clean.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is sad, then person X is hungry.\n\nAnd the following facts:\napple is small.\ngeorge is an enemy of eve.\neve is friendly.\nbob owns phone.\neve is bored.\ncarol is sad.\nbob likes car.\ncarol is a friend of eve.\n\nQUESTION:\nIs george is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 725,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(apple).",
    "c": "smooth(X) :- small(X).\nsoft(X) :- smooth(X).\nsmooth(X) :- soft(X).\nred(X) :- smooth(X).\nrough(X) :- red(X).\nwet(Z) :- big(Z).\nweak(Z) :- bored(Z).\nexcited(Y) :- angry(Y), enemy(Y,B), excited(B).\nfunny(Z) :- weak(Z), owns(Z,B), hard(B).\nbored(Z) :- friendly(Z), enemy(Z,V), curious(V).\nfunny(Z) :- curious(Z), likes(Z,A), new(A).\nexcited(Y) :- happy(Y), sibling(Y,W), angry(W).\ntall(Y) :- hungry(Y).\nbusy(Y) :- calm(Y).\nfriendly(Y) :- tired(Y), calm(D).\nnew(X) :- old(X), dirty(X).\nbusy(X) :- weak(X), brave(X).\nclean(X) :- new(X).\nfunny(X) :- weak(X).\nhungry(X) :- sad(X).\nrough(apple).\nenemy(george,eve).\nfriendly(eve).\nowns(bob,phone).\nbored(eve).\nsad(carol).\nlikes(bob,car).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all Z, if object Z is big, then object Z is wet.\nFor all Z, if person Z is bored, then person Z is weak.\nFor all Y, if there exists B such that person Y is angry and person Y is an enemy of person B and person B is excited, then person Y is excited.\nFor all Z, if there exists B such that person Z is weak and person Z owns object B and object B is hard, then person Z is funny.\nFor all Z, if there exists V such that person Z is friendly and person Z is an enemy of person V and person V is curious, then person Z is bored.\nFor all Z, if there exists A such that person Z is curious and person Z likes object A and object A is new, then person Z is funny.\nFor all Y, if there exists W such that person Y is happy and person Y is a sibling of person W and person W is angry, then person Y is excited.\nFor all Y, if person Y is hungry, then person Y is tall.\nFor all Y, if person Y is calm, then person Y is busy.\nFor all Y, if there exists D such that person Y is tired and person D is calm, then person Y is friendly.\nFor all X, if object X is old and object X is dirty, then object X is new.\nFor all X, if person X is weak and person X is brave, then person X is busy.\nFor all X, if object X is new, then object X is clean.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is sad, then person X is hungry.\n\nAnd the following facts:\napple is rough.\ngeorge is an enemy of eve.\neve is friendly.\nbob owns phone.\neve is bored.\ncarol is sad.\nbob likes car.\ncarol is a friend of eve.\n\nQUESTION:\nCould apple is small explain apple is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 726,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(frank).",
    "c": "smooth(X) :- small(X).\nsoft(X) :- smooth(X).\nsmooth(X) :- soft(X).\nred(X) :- smooth(X).\nrough(X) :- red(X).\nwet(Z) :- big(Z).\nweak(Z) :- bored(Z).\nexcited(Y) :- angry(Y), enemy(Y,B), excited(B).\nfunny(Z) :- weak(Z), owns(Z,B), hard(B).\nbored(Z) :- friendly(Z), enemy(Z,V), curious(V).\nfunny(Z) :- curious(Z), likes(Z,A), new(A).\nexcited(Y) :- happy(Y), sibling(Y,W), angry(W).\ntall(Y) :- hungry(Y).\nbusy(Y) :- calm(Y).\nfriendly(Y) :- tired(Y), calm(D).\nnew(X) :- old(X), dirty(X).\nbusy(X) :- weak(X), brave(X).\nclean(X) :- new(X).\nfunny(X) :- weak(X).\nhungry(X) :- sad(X).\nrough(apple).\nenemy(george,eve).\nfriendly(eve).\nowns(bob,phone).\nbored(eve).\nsad(carol).\nlikes(bob,car).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is rough.\nFor all Z, if object Z is big, then object Z is wet.\nFor all Z, if person Z is bored, then person Z is weak.\nFor all Y, if there exists B such that person Y is angry and person Y is an enemy of person B and person B is excited, then person Y is excited.\nFor all Z, if there exists B such that person Z is weak and person Z owns object B and object B is hard, then person Z is funny.\nFor all Z, if there exists V such that person Z is friendly and person Z is an enemy of person V and person V is curious, then person Z is bored.\nFor all Z, if there exists A such that person Z is curious and person Z likes object A and object A is new, then person Z is funny.\nFor all Y, if there exists W such that person Y is happy and person Y is a sibling of person W and person W is angry, then person Y is excited.\nFor all Y, if person Y is hungry, then person Y is tall.\nFor all Y, if person Y is calm, then person Y is busy.\nFor all Y, if there exists D such that person Y is tired and person D is calm, then person Y is friendly.\nFor all X, if object X is old and object X is dirty, then object X is new.\nFor all X, if person X is weak and person X is brave, then person X is busy.\nFor all X, if object X is new, then object X is clean.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is sad, then person X is hungry.\n\nAnd the following facts:\napple is rough.\ngeorge is an enemy of eve.\neve is friendly.\nbob owns phone.\neve is bored.\ncarol is sad.\nbob likes car.\ncarol is a friend of eve.\n\nQUESTION:\nCould frank is tired explain apple is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 727,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(book).",
    "c": "rough(X) :- hard(X).\nbig(X) :- rough(X).\nlight(X) :- big(X).\nold(X) :- light(X).\ndirty(X) :- old(X).\ntired(Z) :- calm(Z).\nbored(Y) :- busy(Y), parent(Y,W), curious(W).\nsmall(Y) :- wet(Y), angry(D).\nhungry(X) :- tired(X), likes(X,B), soft(B).\nstrong(Z) :- excited(Z).\nsmooth(Y) :- soft(Y).\nparent(Y,Z) :- tired(Y), tired(Z), sibling(Y,V).\nweak(Y) :- bored(Y).\nfriendly(X) :- clever(X), happy(D).\nclean(Z) :- soft(Z).\nhungry(Z) :- bored(Z).\nsmooth(X) :- clean(X), owns(W,X), friendly(W).\nfunny(X) :- angry(X).\nhungry(X) :- tall(X).\nangry(X) :- weak(X), hungry(X).\nhard(book).\nheavy(pencil).\nred(book).\nheavy(phone).\nclean(car).\nclean(phone).\nfriend(alice,george).\nfriend(eve,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Z, if person Z is calm, then person Z is tired.\nFor all Y, if there exists W such that person Y is busy and person Y is a parent of person W and person W is curious, then person Y is bored.\nFor all Y, if there exists D such that object Y is wet and person D is angry, then object Y is small.\nFor all X, if there exists B such that person X is tired and person X likes object B and object B is soft, then person X is hungry.\nFor all Z, if person Z is excited, then person Z is strong.\nFor all Y, if object Y is soft, then object Y is smooth.\nFor all Y, Z, if there exists V such that person Y is tired and person Z is tired and person Y is a sibling of person V, then person Y is a parent of person Z.\nFor all Y, if person Y is bored, then person Y is weak.\nFor all X, if there exists D such that person X is clever and person D is happy, then person X is friendly.\nFor all Z, if object Z is soft, then object Z is clean.\nFor all Z, if person Z is bored, then person Z is hungry.\nFor all X, if there exists W such that object X is clean and person W owns object X and person W is friendly, then object X is smooth.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is weak and person X is hungry, then person X is angry.\n\nAnd the following facts:\nbook is hard.\npencil is heavy.\nbook is red.\nphone is heavy.\ncar is clean.\nphone is clean.\nalice is a friend of george.\neve is a friend of dave.\n\nQUESTION:\nIs book is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 728,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(dave).",
    "c": "rough(X) :- hard(X).\nbig(X) :- rough(X).\nlight(X) :- big(X).\nold(X) :- light(X).\ndirty(X) :- old(X).\ntired(Z) :- calm(Z).\nbored(Y) :- busy(Y), parent(Y,W), curious(W).\nsmall(Y) :- wet(Y), angry(D).\nhungry(X) :- tired(X), likes(X,B), soft(B).\nstrong(Z) :- excited(Z).\nsmooth(Y) :- soft(Y).\nparent(Y,Z) :- tired(Y), tired(Z), sibling(Y,V).\nweak(Y) :- bored(Y).\nfriendly(X) :- clever(X), happy(D).\nclean(Z) :- soft(Z).\nhungry(Z) :- bored(Z).\nsmooth(X) :- clean(X), owns(W,X), friendly(W).\nfunny(X) :- angry(X).\nhungry(X) :- tall(X).\nangry(X) :- weak(X), hungry(X).\nhard(book).\nheavy(pencil).\nred(book).\nheavy(phone).\nclean(car).\nclean(phone).\nfriend(alice,george).\nfriend(eve,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Z, if person Z is calm, then person Z is tired.\nFor all Y, if there exists W such that person Y is busy and person Y is a parent of person W and person W is curious, then person Y is bored.\nFor all Y, if there exists D such that object Y is wet and person D is angry, then object Y is small.\nFor all X, if there exists B such that person X is tired and person X likes object B and object B is soft, then person X is hungry.\nFor all Z, if person Z is excited, then person Z is strong.\nFor all Y, if object Y is soft, then object Y is smooth.\nFor all Y, Z, if there exists V such that person Y is tired and person Z is tired and person Y is a sibling of person V, then person Y is a parent of person Z.\nFor all Y, if person Y is bored, then person Y is weak.\nFor all X, if there exists D such that person X is clever and person D is happy, then person X is friendly.\nFor all Z, if object Z is soft, then object Z is clean.\nFor all Z, if person Z is bored, then person Z is hungry.\nFor all X, if there exists W such that object X is clean and person W owns object X and person W is friendly, then object X is smooth.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is weak and person X is hungry, then person X is angry.\n\nAnd the following facts:\nbook is hard.\npencil is heavy.\nbook is red.\nphone is heavy.\ncar is clean.\nphone is clean.\nalice is a friend of george.\neve is a friend of dave.\n\nQUESTION:\nIs dave is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 729,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hard(book).",
    "c": "rough(X) :- hard(X).\nbig(X) :- rough(X).\nlight(X) :- big(X).\nold(X) :- light(X).\ndirty(X) :- old(X).\ntired(Z) :- calm(Z).\nbored(Y) :- busy(Y), parent(Y,W), curious(W).\nsmall(Y) :- wet(Y), angry(D).\nhungry(X) :- tired(X), likes(X,B), soft(B).\nstrong(Z) :- excited(Z).\nsmooth(Y) :- soft(Y).\nparent(Y,Z) :- tired(Y), tired(Z), sibling(Y,V).\nweak(Y) :- bored(Y).\nfriendly(X) :- clever(X), happy(D).\nclean(Z) :- soft(Z).\nhungry(Z) :- bored(Z).\nsmooth(X) :- clean(X), owns(W,X), friendly(W).\nfunny(X) :- angry(X).\nhungry(X) :- tall(X).\nangry(X) :- weak(X), hungry(X).\ndirty(book).\nheavy(pencil).\nred(book).\nheavy(phone).\nclean(car).\nclean(phone).\nfriend(alice,george).\nfriend(eve,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Z, if person Z is calm, then person Z is tired.\nFor all Y, if there exists W such that person Y is busy and person Y is a parent of person W and person W is curious, then person Y is bored.\nFor all Y, if there exists D such that object Y is wet and person D is angry, then object Y is small.\nFor all X, if there exists B such that person X is tired and person X likes object B and object B is soft, then person X is hungry.\nFor all Z, if person Z is excited, then person Z is strong.\nFor all Y, if object Y is soft, then object Y is smooth.\nFor all Y, Z, if there exists V such that person Y is tired and person Z is tired and person Y is a sibling of person V, then person Y is a parent of person Z.\nFor all Y, if person Y is bored, then person Y is weak.\nFor all X, if there exists D such that person X is clever and person D is happy, then person X is friendly.\nFor all Z, if object Z is soft, then object Z is clean.\nFor all Z, if person Z is bored, then person Z is hungry.\nFor all X, if there exists W such that object X is clean and person W owns object X and person W is friendly, then object X is smooth.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is weak and person X is hungry, then person X is angry.\n\nAnd the following facts:\nbook is dirty.\npencil is heavy.\nbook is red.\nphone is heavy.\ncar is clean.\nphone is clean.\nalice is a friend of george.\neve is a friend of dave.\n\nQUESTION:\nCould book is hard explain book is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 730,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(alice).",
    "c": "rough(X) :- hard(X).\nbig(X) :- rough(X).\nlight(X) :- big(X).\nold(X) :- light(X).\ndirty(X) :- old(X).\ntired(Z) :- calm(Z).\nbored(Y) :- busy(Y), parent(Y,W), curious(W).\nsmall(Y) :- wet(Y), angry(D).\nhungry(X) :- tired(X), likes(X,B), soft(B).\nstrong(Z) :- excited(Z).\nsmooth(Y) :- soft(Y).\nparent(Y,Z) :- tired(Y), tired(Z), sibling(Y,V).\nweak(Y) :- bored(Y).\nfriendly(X) :- clever(X), happy(D).\nclean(Z) :- soft(Z).\nhungry(Z) :- bored(Z).\nsmooth(X) :- clean(X), owns(W,X), friendly(W).\nfunny(X) :- angry(X).\nhungry(X) :- tall(X).\nangry(X) :- weak(X), hungry(X).\ndirty(book).\nheavy(pencil).\nred(book).\nheavy(phone).\nclean(car).\nclean(phone).\nfriend(alice,george).\nfriend(eve,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all Z, if person Z is calm, then person Z is tired.\nFor all Y, if there exists W such that person Y is busy and person Y is a parent of person W and person W is curious, then person Y is bored.\nFor all Y, if there exists D such that object Y is wet and person D is angry, then object Y is small.\nFor all X, if there exists B such that person X is tired and person X likes object B and object B is soft, then person X is hungry.\nFor all Z, if person Z is excited, then person Z is strong.\nFor all Y, if object Y is soft, then object Y is smooth.\nFor all Y, Z, if there exists V such that person Y is tired and person Z is tired and person Y is a sibling of person V, then person Y is a parent of person Z.\nFor all Y, if person Y is bored, then person Y is weak.\nFor all X, if there exists D such that person X is clever and person D is happy, then person X is friendly.\nFor all Z, if object Z is soft, then object Z is clean.\nFor all Z, if person Z is bored, then person Z is hungry.\nFor all X, if there exists W such that object X is clean and person W owns object X and person W is friendly, then object X is smooth.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is weak and person X is hungry, then person X is angry.\n\nAnd the following facts:\nbook is dirty.\npencil is heavy.\nbook is red.\nphone is heavy.\ncar is clean.\nphone is clean.\nalice is a friend of george.\neve is a friend of dave.\n\nQUESTION:\nCould alice is brave explain book is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 731,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "curious(X) :- weak(X).\nbrave(X) :- curious(X).\nhappy(X) :- brave(X).\nbusy(X) :- happy(X).\nfriendly(X) :- busy(X).\nangry(Z) :- calm(Z), owns(Z,B), heavy(B).\ndirty(Z) :- old(Z).\nlikes(Y,X) :- funny(Y), red(X).\nwet(Y) :- heavy(Y), strong(B).\nlikes(Y,Z) :- tired(Y), dirty(Z), likes(W,Z).\nred(Y) :- clean(Y), soft(F).\nlight(Z) :- clean(Z), dislikes(B,Z), funny(B).\nsmooth(Y) :- old(Y), owns(U,Y), tall(U).\nheavy(X) :- old(X).\ntall(X) :- tired(X).\nfriend(X,Y) :- excited(X), hungry(Y), sibling(X,Y).\nclever(X) :- funny(X), excited(X).\nfunny(X) :- angry(X), excited(X).\nhard(X) :- big(X), light(X).\nenemy(X,Y) :- tired(X), sad(Y).\nweak(eve).\nlikes(george,book).\nheavy(apple).\ncalm(frank).\nfriend(alice,george).\nenemy(eve,alice).\nowns(eve,phone).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is heavy, then person Z is angry.\nFor all Z, if object Z is old, then object Z is dirty.\nFor all X, Y, if person Y is funny and object X is red, then person Y likes object X.\nFor all Y, if there exists B such that object Y is heavy and person B is strong, then object Y is wet.\nFor all Y, Z, if there exists W such that person Y is tired and object Z is dirty and person W likes object Z, then person Y likes object Z.\nFor all Y, if there exists F such that object Y is clean and object F is soft, then object Y is red.\nFor all Z, if there exists B such that object Z is clean and person B dislikes object Z and person B is funny, then object Z is light.\nFor all Y, if there exists U such that object Y is old and person U owns object Y and person U is tall, then object Y is smooth.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if person X is tired, then person X is tall.\nFor all X, Y, if person X is excited and person Y is hungry and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if person X is funny and person X is excited, then person X is clever.\nFor all X, if person X is angry and person X is excited, then person X is funny.\nFor all X, if object X is big and object X is light, then object X is hard.\nFor all X, Y, if person X is tired and person Y is sad, then person X is an enemy of person Y.\n\nAnd the following facts:\neve is weak.\ngeorge likes book.\napple is heavy.\nfrank is calm.\nalice is a friend of george.\neve is an enemy of alice.\neve owns phone.\nfrank is sad.\n\nQUESTION:\nIs eve is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 732,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(carol).",
    "c": "curious(X) :- weak(X).\nbrave(X) :- curious(X).\nhappy(X) :- brave(X).\nbusy(X) :- happy(X).\nfriendly(X) :- busy(X).\nangry(Z) :- calm(Z), owns(Z,B), heavy(B).\ndirty(Z) :- old(Z).\nlikes(Y,X) :- funny(Y), red(X).\nwet(Y) :- heavy(Y), strong(B).\nlikes(Y,Z) :- tired(Y), dirty(Z), likes(W,Z).\nred(Y) :- clean(Y), soft(F).\nlight(Z) :- clean(Z), dislikes(B,Z), funny(B).\nsmooth(Y) :- old(Y), owns(U,Y), tall(U).\nheavy(X) :- old(X).\ntall(X) :- tired(X).\nfriend(X,Y) :- excited(X), hungry(Y), sibling(X,Y).\nclever(X) :- funny(X), excited(X).\nfunny(X) :- angry(X), excited(X).\nhard(X) :- big(X), light(X).\nenemy(X,Y) :- tired(X), sad(Y).\nweak(eve).\nlikes(george,book).\nheavy(apple).\ncalm(frank).\nfriend(alice,george).\nenemy(eve,alice).\nowns(eve,phone).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is heavy, then person Z is angry.\nFor all Z, if object Z is old, then object Z is dirty.\nFor all X, Y, if person Y is funny and object X is red, then person Y likes object X.\nFor all Y, if there exists B such that object Y is heavy and person B is strong, then object Y is wet.\nFor all Y, Z, if there exists W such that person Y is tired and object Z is dirty and person W likes object Z, then person Y likes object Z.\nFor all Y, if there exists F such that object Y is clean and object F is soft, then object Y is red.\nFor all Z, if there exists B such that object Z is clean and person B dislikes object Z and person B is funny, then object Z is light.\nFor all Y, if there exists U such that object Y is old and person U owns object Y and person U is tall, then object Y is smooth.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if person X is tired, then person X is tall.\nFor all X, Y, if person X is excited and person Y is hungry and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if person X is funny and person X is excited, then person X is clever.\nFor all X, if person X is angry and person X is excited, then person X is funny.\nFor all X, if object X is big and object X is light, then object X is hard.\nFor all X, Y, if person X is tired and person Y is sad, then person X is an enemy of person Y.\n\nAnd the following facts:\neve is weak.\ngeorge likes book.\napple is heavy.\nfrank is calm.\nalice is a friend of george.\neve is an enemy of alice.\neve owns phone.\nfrank is sad.\n\nQUESTION:\nIs carol is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 733,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(eve).",
    "c": "curious(X) :- weak(X).\nbrave(X) :- curious(X).\nhappy(X) :- brave(X).\nbusy(X) :- happy(X).\nfriendly(X) :- busy(X).\nangry(Z) :- calm(Z), owns(Z,B), heavy(B).\ndirty(Z) :- old(Z).\nlikes(Y,X) :- funny(Y), red(X).\nwet(Y) :- heavy(Y), strong(B).\nlikes(Y,Z) :- tired(Y), dirty(Z), likes(W,Z).\nred(Y) :- clean(Y), soft(F).\nlight(Z) :- clean(Z), dislikes(B,Z), funny(B).\nsmooth(Y) :- old(Y), owns(U,Y), tall(U).\nheavy(X) :- old(X).\ntall(X) :- tired(X).\nfriend(X,Y) :- excited(X), hungry(Y), sibling(X,Y).\nclever(X) :- funny(X), excited(X).\nfunny(X) :- angry(X), excited(X).\nhard(X) :- big(X), light(X).\nenemy(X,Y) :- tired(X), sad(Y).\nfriendly(eve).\nlikes(george,book).\nheavy(apple).\ncalm(frank).\nfriend(alice,george).\nenemy(eve,alice).\nowns(eve,phone).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is heavy, then person Z is angry.\nFor all Z, if object Z is old, then object Z is dirty.\nFor all X, Y, if person Y is funny and object X is red, then person Y likes object X.\nFor all Y, if there exists B such that object Y is heavy and person B is strong, then object Y is wet.\nFor all Y, Z, if there exists W such that person Y is tired and object Z is dirty and person W likes object Z, then person Y likes object Z.\nFor all Y, if there exists F such that object Y is clean and object F is soft, then object Y is red.\nFor all Z, if there exists B such that object Z is clean and person B dislikes object Z and person B is funny, then object Z is light.\nFor all Y, if there exists U such that object Y is old and person U owns object Y and person U is tall, then object Y is smooth.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if person X is tired, then person X is tall.\nFor all X, Y, if person X is excited and person Y is hungry and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if person X is funny and person X is excited, then person X is clever.\nFor all X, if person X is angry and person X is excited, then person X is funny.\nFor all X, if object X is big and object X is light, then object X is hard.\nFor all X, Y, if person X is tired and person Y is sad, then person X is an enemy of person Y.\n\nAnd the following facts:\neve is friendly.\ngeorge likes book.\napple is heavy.\nfrank is calm.\nalice is a friend of george.\neve is an enemy of alice.\neve owns phone.\nfrank is sad.\n\nQUESTION:\nCould eve is weak explain eve is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 734,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "small(ball).",
    "c": "curious(X) :- weak(X).\nbrave(X) :- curious(X).\nhappy(X) :- brave(X).\nbusy(X) :- happy(X).\nfriendly(X) :- busy(X).\nangry(Z) :- calm(Z), owns(Z,B), heavy(B).\ndirty(Z) :- old(Z).\nlikes(Y,X) :- funny(Y), red(X).\nwet(Y) :- heavy(Y), strong(B).\nlikes(Y,Z) :- tired(Y), dirty(Z), likes(W,Z).\nred(Y) :- clean(Y), soft(F).\nlight(Z) :- clean(Z), dislikes(B,Z), funny(B).\nsmooth(Y) :- old(Y), owns(U,Y), tall(U).\nheavy(X) :- old(X).\ntall(X) :- tired(X).\nfriend(X,Y) :- excited(X), hungry(Y), sibling(X,Y).\nclever(X) :- funny(X), excited(X).\nfunny(X) :- angry(X), excited(X).\nhard(X) :- big(X), light(X).\nenemy(X,Y) :- tired(X), sad(Y).\nfriendly(eve).\nlikes(george,book).\nheavy(apple).\ncalm(frank).\nfriend(alice,george).\nenemy(eve,alice).\nowns(eve,phone).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is heavy, then person Z is angry.\nFor all Z, if object Z is old, then object Z is dirty.\nFor all X, Y, if person Y is funny and object X is red, then person Y likes object X.\nFor all Y, if there exists B such that object Y is heavy and person B is strong, then object Y is wet.\nFor all Y, Z, if there exists W such that person Y is tired and object Z is dirty and person W likes object Z, then person Y likes object Z.\nFor all Y, if there exists F such that object Y is clean and object F is soft, then object Y is red.\nFor all Z, if there exists B such that object Z is clean and person B dislikes object Z and person B is funny, then object Z is light.\nFor all Y, if there exists U such that object Y is old and person U owns object Y and person U is tall, then object Y is smooth.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if person X is tired, then person X is tall.\nFor all X, Y, if person X is excited and person Y is hungry and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if person X is funny and person X is excited, then person X is clever.\nFor all X, if person X is angry and person X is excited, then person X is funny.\nFor all X, if object X is big and object X is light, then object X is hard.\nFor all X, Y, if person X is tired and person Y is sad, then person X is an enemy of person Y.\n\nAnd the following facts:\neve is friendly.\ngeorge likes book.\napple is heavy.\nfrank is calm.\nalice is a friend of george.\neve is an enemy of alice.\neve owns phone.\nfrank is sad.\n\nQUESTION:\nCould ball is small explain eve is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 735,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(alice).",
    "c": "strong(X) :- calm(X).\nbusy(X) :- strong(X).\nbored(X) :- busy(X).\ncalm(X) :- bored(X).\ntall(X) :- calm(X).\ntired(X) :- tall(X).\nhappy(X) :- tired(X).\ncalm(X) :- happy(X).\nstrong(X) :- calm(X).\nexcited(X) :- strong(X).\nlight(X) :- rough(X), new(A).\nclean(X) :- wet(X), likes(V,X), friendly(V).\nhungry(Z) :- clever(Z), owns(Z,A), big(A).\nnew(X) :- heavy(X).\nowns(Z,X) :- clever(Z), clean(X), likes(V,X).\nparent(X,Y) :- curious(X), sad(Y).\nlight(X) :- big(X), soft(X).\nheavy(X) :- new(X).\nclean(X) :- small(X), rough(X).\nangry(X) :- friendly(X), brave(X).\ncalm(alice).\nfriend(eve,alice).\nsmooth(car).\nfriend(eve,carol).\nenemy(carol,dave).\nsibling(eve,carol).\nrough(pencil).\nlikes(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is excited.\nFor all X, if there exists A such that object X is rough and object A is new, then object X is light.\nFor all X, if there exists V such that object X is wet and person V likes object X and person V is friendly, then object X is clean.\nFor all Z, if there exists A such that person Z is clever and person Z owns object A and object A is big, then person Z is hungry.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Z, if there exists V such that person Z is clever and object X is clean and person V likes object X, then person Z owns object X.\nFor all X, Y, if person X is curious and person Y is sad, then person X is a parent of person Y.\nFor all X, if object X is big and object X is soft, then object X is light.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is small and object X is rough, then object X is clean.\nFor all X, if person X is friendly and person X is brave, then person X is angry.\n\nAnd the following facts:\nalice is calm.\neve is a friend of alice.\ncar is smooth.\neve is a friend of carol.\ncarol is an enemy of dave.\neve is a sibling of carol.\npencil is rough.\nfrank likes book.\n\nQUESTION:\nIs alice is excited true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 736,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(dave).",
    "c": "strong(X) :- calm(X).\nbusy(X) :- strong(X).\nbored(X) :- busy(X).\ncalm(X) :- bored(X).\ntall(X) :- calm(X).\ntired(X) :- tall(X).\nhappy(X) :- tired(X).\ncalm(X) :- happy(X).\nstrong(X) :- calm(X).\nexcited(X) :- strong(X).\nlight(X) :- rough(X), new(A).\nclean(X) :- wet(X), likes(V,X), friendly(V).\nhungry(Z) :- clever(Z), owns(Z,A), big(A).\nnew(X) :- heavy(X).\nowns(Z,X) :- clever(Z), clean(X), likes(V,X).\nparent(X,Y) :- curious(X), sad(Y).\nlight(X) :- big(X), soft(X).\nheavy(X) :- new(X).\nclean(X) :- small(X), rough(X).\nangry(X) :- friendly(X), brave(X).\ncalm(alice).\nfriend(eve,alice).\nsmooth(car).\nfriend(eve,carol).\nenemy(carol,dave).\nsibling(eve,carol).\nrough(pencil).\nlikes(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is excited.\nFor all X, if there exists A such that object X is rough and object A is new, then object X is light.\nFor all X, if there exists V such that object X is wet and person V likes object X and person V is friendly, then object X is clean.\nFor all Z, if there exists A such that person Z is clever and person Z owns object A and object A is big, then person Z is hungry.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Z, if there exists V such that person Z is clever and object X is clean and person V likes object X, then person Z owns object X.\nFor all X, Y, if person X is curious and person Y is sad, then person X is a parent of person Y.\nFor all X, if object X is big and object X is soft, then object X is light.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is small and object X is rough, then object X is clean.\nFor all X, if person X is friendly and person X is brave, then person X is angry.\n\nAnd the following facts:\nalice is calm.\neve is a friend of alice.\ncar is smooth.\neve is a friend of carol.\ncarol is an enemy of dave.\neve is a sibling of carol.\npencil is rough.\nfrank likes book.\n\nQUESTION:\nIs dave is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 737,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(alice).",
    "c": "strong(X) :- calm(X).\nbusy(X) :- strong(X).\nbored(X) :- busy(X).\ncalm(X) :- bored(X).\ntall(X) :- calm(X).\ntired(X) :- tall(X).\nhappy(X) :- tired(X).\ncalm(X) :- happy(X).\nstrong(X) :- calm(X).\nexcited(X) :- strong(X).\nlight(X) :- rough(X), new(A).\nclean(X) :- wet(X), likes(V,X), friendly(V).\nhungry(Z) :- clever(Z), owns(Z,A), big(A).\nnew(X) :- heavy(X).\nowns(Z,X) :- clever(Z), clean(X), likes(V,X).\nparent(X,Y) :- curious(X), sad(Y).\nlight(X) :- big(X), soft(X).\nheavy(X) :- new(X).\nclean(X) :- small(X), rough(X).\nangry(X) :- friendly(X), brave(X).\nexcited(alice).\nfriend(eve,alice).\nsmooth(car).\nfriend(eve,carol).\nenemy(carol,dave).\nsibling(eve,carol).\nrough(pencil).\nlikes(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is excited.\nFor all X, if there exists A such that object X is rough and object A is new, then object X is light.\nFor all X, if there exists V such that object X is wet and person V likes object X and person V is friendly, then object X is clean.\nFor all Z, if there exists A such that person Z is clever and person Z owns object A and object A is big, then person Z is hungry.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Z, if there exists V such that person Z is clever and object X is clean and person V likes object X, then person Z owns object X.\nFor all X, Y, if person X is curious and person Y is sad, then person X is a parent of person Y.\nFor all X, if object X is big and object X is soft, then object X is light.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is small and object X is rough, then object X is clean.\nFor all X, if person X is friendly and person X is brave, then person X is angry.\n\nAnd the following facts:\nalice is excited.\neve is a friend of alice.\ncar is smooth.\neve is a friend of carol.\ncarol is an enemy of dave.\neve is a sibling of carol.\npencil is rough.\nfrank likes book.\n\nQUESTION:\nCould alice is calm explain alice is excited?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 738,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "soft(ball).",
    "c": "strong(X) :- calm(X).\nbusy(X) :- strong(X).\nbored(X) :- busy(X).\ncalm(X) :- bored(X).\ntall(X) :- calm(X).\ntired(X) :- tall(X).\nhappy(X) :- tired(X).\ncalm(X) :- happy(X).\nstrong(X) :- calm(X).\nexcited(X) :- strong(X).\nlight(X) :- rough(X), new(A).\nclean(X) :- wet(X), likes(V,X), friendly(V).\nhungry(Z) :- clever(Z), owns(Z,A), big(A).\nnew(X) :- heavy(X).\nowns(Z,X) :- clever(Z), clean(X), likes(V,X).\nparent(X,Y) :- curious(X), sad(Y).\nlight(X) :- big(X), soft(X).\nheavy(X) :- new(X).\nclean(X) :- small(X), rough(X).\nangry(X) :- friendly(X), brave(X).\nexcited(alice).\nfriend(eve,alice).\nsmooth(car).\nfriend(eve,carol).\nenemy(carol,dave).\nsibling(eve,carol).\nrough(pencil).\nlikes(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is excited.\nFor all X, if there exists A such that object X is rough and object A is new, then object X is light.\nFor all X, if there exists V such that object X is wet and person V likes object X and person V is friendly, then object X is clean.\nFor all Z, if there exists A such that person Z is clever and person Z owns object A and object A is big, then person Z is hungry.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Z, if there exists V such that person Z is clever and object X is clean and person V likes object X, then person Z owns object X.\nFor all X, Y, if person X is curious and person Y is sad, then person X is a parent of person Y.\nFor all X, if object X is big and object X is soft, then object X is light.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is small and object X is rough, then object X is clean.\nFor all X, if person X is friendly and person X is brave, then person X is angry.\n\nAnd the following facts:\nalice is excited.\neve is a friend of alice.\ncar is smooth.\neve is a friend of carol.\ncarol is an enemy of dave.\neve is a sibling of carol.\npencil is rough.\nfrank likes book.\n\nQUESTION:\nCould ball is soft explain alice is excited?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 739,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "calm(alice).",
    "c": "happy(X) :- bored(X).\nangry(X) :- happy(X).\nstrong(X) :- angry(X).\ncalm(X) :- strong(X).\ntall(X) :- calm(X).\nstrong(X) :- tall(X).\nweak(X) :- strong(X).\nclever(X) :- weak(X).\nweak(X) :- clever(X).\ncalm(X) :- weak(X).\nbusy(Z) :- busy(Z), owns(Z,U), heavy(U).\nbrave(Y) :- sad(Y).\nparent(Z,X) :- curious(Z), tired(X), friend(X,W).\nfriendly(X) :- curious(X), likes(X,W), soft(W).\nparent(X,Y) :- busy(Y), curious(X), parent(X,U).\nwet(X) :- hard(X), old(X).\ntired(X) :- busy(X).\nsibling(X,Y) :- hungry(X), tired(Y).\nfriendly(X) :- hungry(X).\nhungry(X) :- sad(X), busy(X).\nbored(alice).\nparent(bob,frank).\nnew(pencil).\nparent(carol,bob).\nfriend(dave,alice).\nenemy(frank,bob).\nold(phone).\nbrave(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all Z, if there exists U such that person Z is busy and person Z owns object U and object U is heavy, then person Z is busy.\nFor all Y, if person Y is sad, then person Y is brave.\nFor all X, Z, if there exists W such that person Z is curious and person X is tired and person X is a friend of person W, then person Z is a parent of person X.\nFor all X, if there exists W such that person X is curious and person X likes object W and object W is soft, then person X is friendly.\nFor all X, Y, if there exists U such that person Y is busy and person X is curious and person X is a parent of person U, then person X is a parent of person Y.\nFor all X, if object X is hard and object X is old, then object X is wet.\nFor all X, if person X is busy, then person X is tired.\nFor all X, Y, if person X is hungry and person Y is tired, then person X is a sibling of person Y.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is sad and person X is busy, then person X is hungry.\n\nAnd the following facts:\nalice is bored.\nbob is a parent of frank.\npencil is new.\ncarol is a parent of bob.\ndave is a friend of alice.\nfrank is an enemy of bob.\nphone is old.\neve is brave.\n\nQUESTION:\nIs alice is calm true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 740,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "happy(X) :- bored(X).\nangry(X) :- happy(X).\nstrong(X) :- angry(X).\ncalm(X) :- strong(X).\ntall(X) :- calm(X).\nstrong(X) :- tall(X).\nweak(X) :- strong(X).\nclever(X) :- weak(X).\nweak(X) :- clever(X).\ncalm(X) :- weak(X).\nbusy(Z) :- busy(Z), owns(Z,U), heavy(U).\nbrave(Y) :- sad(Y).\nparent(Z,X) :- curious(Z), tired(X), friend(X,W).\nfriendly(X) :- curious(X), likes(X,W), soft(W).\nparent(X,Y) :- busy(Y), curious(X), parent(X,U).\nwet(X) :- hard(X), old(X).\ntired(X) :- busy(X).\nsibling(X,Y) :- hungry(X), tired(Y).\nfriendly(X) :- hungry(X).\nhungry(X) :- sad(X), busy(X).\nbored(alice).\nparent(bob,frank).\nnew(pencil).\nparent(carol,bob).\nfriend(dave,alice).\nenemy(frank,bob).\nold(phone).\nbrave(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all Z, if there exists U such that person Z is busy and person Z owns object U and object U is heavy, then person Z is busy.\nFor all Y, if person Y is sad, then person Y is brave.\nFor all X, Z, if there exists W such that person Z is curious and person X is tired and person X is a friend of person W, then person Z is a parent of person X.\nFor all X, if there exists W such that person X is curious and person X likes object W and object W is soft, then person X is friendly.\nFor all X, Y, if there exists U such that person Y is busy and person X is curious and person X is a parent of person U, then person X is a parent of person Y.\nFor all X, if object X is hard and object X is old, then object X is wet.\nFor all X, if person X is busy, then person X is tired.\nFor all X, Y, if person X is hungry and person Y is tired, then person X is a sibling of person Y.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is sad and person X is busy, then person X is hungry.\n\nAnd the following facts:\nalice is bored.\nbob is a parent of frank.\npencil is new.\ncarol is a parent of bob.\ndave is a friend of alice.\nfrank is an enemy of bob.\nphone is old.\neve is brave.\n\nQUESTION:\nIs pencil is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 741,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(alice).",
    "c": "happy(X) :- bored(X).\nangry(X) :- happy(X).\nstrong(X) :- angry(X).\ncalm(X) :- strong(X).\ntall(X) :- calm(X).\nstrong(X) :- tall(X).\nweak(X) :- strong(X).\nclever(X) :- weak(X).\nweak(X) :- clever(X).\ncalm(X) :- weak(X).\nbusy(Z) :- busy(Z), owns(Z,U), heavy(U).\nbrave(Y) :- sad(Y).\nparent(Z,X) :- curious(Z), tired(X), friend(X,W).\nfriendly(X) :- curious(X), likes(X,W), soft(W).\nparent(X,Y) :- busy(Y), curious(X), parent(X,U).\nwet(X) :- hard(X), old(X).\ntired(X) :- busy(X).\nsibling(X,Y) :- hungry(X), tired(Y).\nfriendly(X) :- hungry(X).\nhungry(X) :- sad(X), busy(X).\ncalm(alice).\nparent(bob,frank).\nnew(pencil).\nparent(carol,bob).\nfriend(dave,alice).\nenemy(frank,bob).\nold(phone).\nbrave(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all Z, if there exists U such that person Z is busy and person Z owns object U and object U is heavy, then person Z is busy.\nFor all Y, if person Y is sad, then person Y is brave.\nFor all X, Z, if there exists W such that person Z is curious and person X is tired and person X is a friend of person W, then person Z is a parent of person X.\nFor all X, if there exists W such that person X is curious and person X likes object W and object W is soft, then person X is friendly.\nFor all X, Y, if there exists U such that person Y is busy and person X is curious and person X is a parent of person U, then person X is a parent of person Y.\nFor all X, if object X is hard and object X is old, then object X is wet.\nFor all X, if person X is busy, then person X is tired.\nFor all X, Y, if person X is hungry and person Y is tired, then person X is a sibling of person Y.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is sad and person X is busy, then person X is hungry.\n\nAnd the following facts:\nalice is calm.\nbob is a parent of frank.\npencil is new.\ncarol is a parent of bob.\ndave is a friend of alice.\nfrank is an enemy of bob.\nphone is old.\neve is brave.\n\nQUESTION:\nCould alice is bored explain alice is calm?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 742,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "busy(bob).",
    "c": "happy(X) :- bored(X).\nangry(X) :- happy(X).\nstrong(X) :- angry(X).\ncalm(X) :- strong(X).\ntall(X) :- calm(X).\nstrong(X) :- tall(X).\nweak(X) :- strong(X).\nclever(X) :- weak(X).\nweak(X) :- clever(X).\ncalm(X) :- weak(X).\nbusy(Z) :- busy(Z), owns(Z,U), heavy(U).\nbrave(Y) :- sad(Y).\nparent(Z,X) :- curious(Z), tired(X), friend(X,W).\nfriendly(X) :- curious(X), likes(X,W), soft(W).\nparent(X,Y) :- busy(Y), curious(X), parent(X,U).\nwet(X) :- hard(X), old(X).\ntired(X) :- busy(X).\nsibling(X,Y) :- hungry(X), tired(Y).\nfriendly(X) :- hungry(X).\nhungry(X) :- sad(X), busy(X).\ncalm(alice).\nparent(bob,frank).\nnew(pencil).\nparent(carol,bob).\nfriend(dave,alice).\nenemy(frank,bob).\nold(phone).\nbrave(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all Z, if there exists U such that person Z is busy and person Z owns object U and object U is heavy, then person Z is busy.\nFor all Y, if person Y is sad, then person Y is brave.\nFor all X, Z, if there exists W such that person Z is curious and person X is tired and person X is a friend of person W, then person Z is a parent of person X.\nFor all X, if there exists W such that person X is curious and person X likes object W and object W is soft, then person X is friendly.\nFor all X, Y, if there exists U such that person Y is busy and person X is curious and person X is a parent of person U, then person X is a parent of person Y.\nFor all X, if object X is hard and object X is old, then object X is wet.\nFor all X, if person X is busy, then person X is tired.\nFor all X, Y, if person X is hungry and person Y is tired, then person X is a sibling of person Y.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is sad and person X is busy, then person X is hungry.\n\nAnd the following facts:\nalice is calm.\nbob is a parent of frank.\npencil is new.\ncarol is a parent of bob.\ndave is a friend of alice.\nfrank is an enemy of bob.\nphone is old.\neve is brave.\n\nQUESTION:\nCould bob is busy explain alice is calm?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 743,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(ball).",
    "c": "old(X) :- light(X).\nnew(X) :- old(X).\nsoft(X) :- new(X).\nheavy(X) :- soft(X).\nbig(X) :- heavy(X).\nred(X) :- big(X).\nsmooth(X) :- red(X).\nsmall(X) :- smooth(X).\nwet(X) :- small(X).\nhard(X) :- wet(X).\nowns(Z,X) :- excited(Z), clean(X), owns(Z,A).\ntired(Y) :- excited(Y), likes(Y,U), rough(U).\nhungry(Y) :- calm(Y), enemy(Y,V), brave(V).\nweak(X) :- sad(X), owns(X,W), dirty(W).\nfriend(X,Y) :- busy(X), friendly(Y).\ntall(X) :- happy(X).\nbored(X) :- clever(X).\nclever(X) :- tired(X), curious(X).\nclean(X) :- rough(X).\nrough(X) :- dirty(X).\nlight(ball).\ncalm(carol).\nowns(dave,ball).\ncalm(george).\nsibling(dave,bob).\ncurious(bob).\nenemy(eve,george).\nbusy(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, Z, if there exists A such that person Z is excited and object X is clean and person Z owns object A, then person Z owns object X.\nFor all Y, if there exists U such that person Y is excited and person Y likes object U and object U is rough, then person Y is tired.\nFor all Y, if there exists V such that person Y is calm and person Y is an enemy of person V and person V is brave, then person Y is hungry.\nFor all X, if there exists W such that person X is sad and person X owns object W and object W is dirty, then person X is weak.\nFor all X, Y, if person X is busy and person Y is friendly, then person X is a friend of person Y.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is tired and person X is curious, then person X is clever.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\nball is light.\ncarol is calm.\ndave owns ball.\ngeorge is calm.\ndave is a sibling of bob.\nbob is curious.\neve is an enemy of george.\ncarol is busy.\n\nQUESTION:\nIs ball is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 744,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(car).",
    "c": "old(X) :- light(X).\nnew(X) :- old(X).\nsoft(X) :- new(X).\nheavy(X) :- soft(X).\nbig(X) :- heavy(X).\nred(X) :- big(X).\nsmooth(X) :- red(X).\nsmall(X) :- smooth(X).\nwet(X) :- small(X).\nhard(X) :- wet(X).\nowns(Z,X) :- excited(Z), clean(X), owns(Z,A).\ntired(Y) :- excited(Y), likes(Y,U), rough(U).\nhungry(Y) :- calm(Y), enemy(Y,V), brave(V).\nweak(X) :- sad(X), owns(X,W), dirty(W).\nfriend(X,Y) :- busy(X), friendly(Y).\ntall(X) :- happy(X).\nbored(X) :- clever(X).\nclever(X) :- tired(X), curious(X).\nclean(X) :- rough(X).\nrough(X) :- dirty(X).\nlight(ball).\ncalm(carol).\nowns(dave,ball).\ncalm(george).\nsibling(dave,bob).\ncurious(bob).\nenemy(eve,george).\nbusy(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, Z, if there exists A such that person Z is excited and object X is clean and person Z owns object A, then person Z owns object X.\nFor all Y, if there exists U such that person Y is excited and person Y likes object U and object U is rough, then person Y is tired.\nFor all Y, if there exists V such that person Y is calm and person Y is an enemy of person V and person V is brave, then person Y is hungry.\nFor all X, if there exists W such that person X is sad and person X owns object W and object W is dirty, then person X is weak.\nFor all X, Y, if person X is busy and person Y is friendly, then person X is a friend of person Y.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is tired and person X is curious, then person X is clever.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\nball is light.\ncarol is calm.\ndave owns ball.\ngeorge is calm.\ndave is a sibling of bob.\nbob is curious.\neve is an enemy of george.\ncarol is busy.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 745,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "old(X) :- light(X).\nnew(X) :- old(X).\nsoft(X) :- new(X).\nheavy(X) :- soft(X).\nbig(X) :- heavy(X).\nred(X) :- big(X).\nsmooth(X) :- red(X).\nsmall(X) :- smooth(X).\nwet(X) :- small(X).\nhard(X) :- wet(X).\nowns(Z,X) :- excited(Z), clean(X), owns(Z,A).\ntired(Y) :- excited(Y), likes(Y,U), rough(U).\nhungry(Y) :- calm(Y), enemy(Y,V), brave(V).\nweak(X) :- sad(X), owns(X,W), dirty(W).\nfriend(X,Y) :- busy(X), friendly(Y).\ntall(X) :- happy(X).\nbored(X) :- clever(X).\nclever(X) :- tired(X), curious(X).\nclean(X) :- rough(X).\nrough(X) :- dirty(X).\nhard(ball).\ncalm(carol).\nowns(dave,ball).\ncalm(george).\nsibling(dave,bob).\ncurious(bob).\nenemy(eve,george).\nbusy(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, Z, if there exists A such that person Z is excited and object X is clean and person Z owns object A, then person Z owns object X.\nFor all Y, if there exists U such that person Y is excited and person Y likes object U and object U is rough, then person Y is tired.\nFor all Y, if there exists V such that person Y is calm and person Y is an enemy of person V and person V is brave, then person Y is hungry.\nFor all X, if there exists W such that person X is sad and person X owns object W and object W is dirty, then person X is weak.\nFor all X, Y, if person X is busy and person Y is friendly, then person X is a friend of person Y.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is tired and person X is curious, then person X is clever.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\nball is hard.\ncarol is calm.\ndave owns ball.\ngeorge is calm.\ndave is a sibling of bob.\nbob is curious.\neve is an enemy of george.\ncarol is busy.\n\nQUESTION:\nCould ball is light explain ball is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 746,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "sad(dave).",
    "c": "old(X) :- light(X).\nnew(X) :- old(X).\nsoft(X) :- new(X).\nheavy(X) :- soft(X).\nbig(X) :- heavy(X).\nred(X) :- big(X).\nsmooth(X) :- red(X).\nsmall(X) :- smooth(X).\nwet(X) :- small(X).\nhard(X) :- wet(X).\nowns(Z,X) :- excited(Z), clean(X), owns(Z,A).\ntired(Y) :- excited(Y), likes(Y,U), rough(U).\nhungry(Y) :- calm(Y), enemy(Y,V), brave(V).\nweak(X) :- sad(X), owns(X,W), dirty(W).\nfriend(X,Y) :- busy(X), friendly(Y).\ntall(X) :- happy(X).\nbored(X) :- clever(X).\nclever(X) :- tired(X), curious(X).\nclean(X) :- rough(X).\nrough(X) :- dirty(X).\nhard(ball).\ncalm(carol).\nowns(dave,ball).\ncalm(george).\nsibling(dave,bob).\ncurious(bob).\nenemy(eve,george).\nbusy(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, Z, if there exists A such that person Z is excited and object X is clean and person Z owns object A, then person Z owns object X.\nFor all Y, if there exists U such that person Y is excited and person Y likes object U and object U is rough, then person Y is tired.\nFor all Y, if there exists V such that person Y is calm and person Y is an enemy of person V and person V is brave, then person Y is hungry.\nFor all X, if there exists W such that person X is sad and person X owns object W and object W is dirty, then person X is weak.\nFor all X, Y, if person X is busy and person Y is friendly, then person X is a friend of person Y.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is tired and person X is curious, then person X is clever.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if object X is dirty, then object X is rough.\n\nAnd the following facts:\nball is hard.\ncarol is calm.\ndave owns ball.\ngeorge is calm.\ndave is a sibling of bob.\nbob is curious.\neve is an enemy of george.\ncarol is busy.\n\nQUESTION:\nCould dave is sad explain ball is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 747,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "curious(carol).",
    "c": "bored(X) :- angry(X).\nfunny(X) :- bored(X).\nbrave(X) :- funny(X).\ntired(X) :- brave(X).\nhappy(X) :- tired(X).\nweak(X) :- happy(X).\nsad(X) :- weak(X).\nexcited(X) :- sad(X).\nfriendly(X) :- excited(X).\ncurious(X) :- friendly(X).\nclever(X) :- busy(X).\nfriend(Z,Y) :- tall(Y), clever(Z), sibling(Y,U).\nhungry(Z) :- clever(Z), dislikes(Z,B), clean(B).\ndirty(X) :- small(X).\nred(X) :- big(X).\nparent(X,Z) :- strong(Z), busy(X), likes(X,W).\nred(X) :- small(X), likes(B,X), tall(B).\nrough(X) :- small(X).\nsmall(X) :- wet(X), new(X).\nhungry(X) :- tall(X), clever(X).\nangry(carol).\ndislikes(dave,ball).\nfriend(frank,bob).\nold(phone).\nlikes(dave,phone).\nhard(pencil).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is busy, then person X is clever.\nFor all Y, Z, if there exists U such that person Y is tall and person Z is clever and person Y is a sibling of person U, then person Z is a friend of person Y.\nFor all Z, if there exists B such that person Z is clever and person Z dislikes object B and object B is clean, then person Z is hungry.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is big, then object X is red.\nFor all X, Z, if there exists W such that person Z is strong and person X is busy and person X likes object W, then person X is a parent of person Z.\nFor all X, if there exists B such that object X is small and person B likes object X and person B is tall, then object X is red.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is wet and object X is new, then object X is small.\nFor all X, if person X is tall and person X is clever, then person X is hungry.\n\nAnd the following facts:\ncarol is angry.\ndave dislikes ball.\nfrank is a friend of bob.\nphone is old.\ndave likes phone.\npencil is hard.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nIs carol is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 748,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(eve).",
    "c": "bored(X) :- angry(X).\nfunny(X) :- bored(X).\nbrave(X) :- funny(X).\ntired(X) :- brave(X).\nhappy(X) :- tired(X).\nweak(X) :- happy(X).\nsad(X) :- weak(X).\nexcited(X) :- sad(X).\nfriendly(X) :- excited(X).\ncurious(X) :- friendly(X).\nclever(X) :- busy(X).\nfriend(Z,Y) :- tall(Y), clever(Z), sibling(Y,U).\nhungry(Z) :- clever(Z), dislikes(Z,B), clean(B).\ndirty(X) :- small(X).\nred(X) :- big(X).\nparent(X,Z) :- strong(Z), busy(X), likes(X,W).\nred(X) :- small(X), likes(B,X), tall(B).\nrough(X) :- small(X).\nsmall(X) :- wet(X), new(X).\nhungry(X) :- tall(X), clever(X).\nangry(carol).\ndislikes(dave,ball).\nfriend(frank,bob).\nold(phone).\nlikes(dave,phone).\nhard(pencil).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is busy, then person X is clever.\nFor all Y, Z, if there exists U such that person Y is tall and person Z is clever and person Y is a sibling of person U, then person Z is a friend of person Y.\nFor all Z, if there exists B such that person Z is clever and person Z dislikes object B and object B is clean, then person Z is hungry.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is big, then object X is red.\nFor all X, Z, if there exists W such that person Z is strong and person X is busy and person X likes object W, then person X is a parent of person Z.\nFor all X, if there exists B such that object X is small and person B likes object X and person B is tall, then object X is red.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is wet and object X is new, then object X is small.\nFor all X, if person X is tall and person X is clever, then person X is hungry.\n\nAnd the following facts:\ncarol is angry.\ndave dislikes ball.\nfrank is a friend of bob.\nphone is old.\ndave likes phone.\npencil is hard.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nIs eve is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 749,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(carol).",
    "c": "bored(X) :- angry(X).\nfunny(X) :- bored(X).\nbrave(X) :- funny(X).\ntired(X) :- brave(X).\nhappy(X) :- tired(X).\nweak(X) :- happy(X).\nsad(X) :- weak(X).\nexcited(X) :- sad(X).\nfriendly(X) :- excited(X).\ncurious(X) :- friendly(X).\nclever(X) :- busy(X).\nfriend(Z,Y) :- tall(Y), clever(Z), sibling(Y,U).\nhungry(Z) :- clever(Z), dislikes(Z,B), clean(B).\ndirty(X) :- small(X).\nred(X) :- big(X).\nparent(X,Z) :- strong(Z), busy(X), likes(X,W).\nred(X) :- small(X), likes(B,X), tall(B).\nrough(X) :- small(X).\nsmall(X) :- wet(X), new(X).\nhungry(X) :- tall(X), clever(X).\ncurious(carol).\ndislikes(dave,ball).\nfriend(frank,bob).\nold(phone).\nlikes(dave,phone).\nhard(pencil).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is busy, then person X is clever.\nFor all Y, Z, if there exists U such that person Y is tall and person Z is clever and person Y is a sibling of person U, then person Z is a friend of person Y.\nFor all Z, if there exists B such that person Z is clever and person Z dislikes object B and object B is clean, then person Z is hungry.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is big, then object X is red.\nFor all X, Z, if there exists W such that person Z is strong and person X is busy and person X likes object W, then person X is a parent of person Z.\nFor all X, if there exists B such that object X is small and person B likes object X and person B is tall, then object X is red.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is wet and object X is new, then object X is small.\nFor all X, if person X is tall and person X is clever, then person X is hungry.\n\nAnd the following facts:\ncarol is curious.\ndave dislikes ball.\nfrank is a friend of bob.\nphone is old.\ndave likes phone.\npencil is hard.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nCould carol is angry explain carol is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 750,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "angry(george).",
    "c": "bored(X) :- angry(X).\nfunny(X) :- bored(X).\nbrave(X) :- funny(X).\ntired(X) :- brave(X).\nhappy(X) :- tired(X).\nweak(X) :- happy(X).\nsad(X) :- weak(X).\nexcited(X) :- sad(X).\nfriendly(X) :- excited(X).\ncurious(X) :- friendly(X).\nclever(X) :- busy(X).\nfriend(Z,Y) :- tall(Y), clever(Z), sibling(Y,U).\nhungry(Z) :- clever(Z), dislikes(Z,B), clean(B).\ndirty(X) :- small(X).\nred(X) :- big(X).\nparent(X,Z) :- strong(Z), busy(X), likes(X,W).\nred(X) :- small(X), likes(B,X), tall(B).\nrough(X) :- small(X).\nsmall(X) :- wet(X), new(X).\nhungry(X) :- tall(X), clever(X).\ncurious(carol).\ndislikes(dave,ball).\nfriend(frank,bob).\nold(phone).\nlikes(dave,phone).\nhard(pencil).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is busy, then person X is clever.\nFor all Y, Z, if there exists U such that person Y is tall and person Z is clever and person Y is a sibling of person U, then person Z is a friend of person Y.\nFor all Z, if there exists B such that person Z is clever and person Z dislikes object B and object B is clean, then person Z is hungry.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is big, then object X is red.\nFor all X, Z, if there exists W such that person Z is strong and person X is busy and person X likes object W, then person X is a parent of person Z.\nFor all X, if there exists B such that object X is small and person B likes object X and person B is tall, then object X is red.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is wet and object X is new, then object X is small.\nFor all X, if person X is tall and person X is clever, then person X is hungry.\n\nAnd the following facts:\ncarol is curious.\ndave dislikes ball.\nfrank is a friend of bob.\nphone is old.\ndave likes phone.\npencil is hard.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nCould george is angry explain carol is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 751,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "sad(frank).",
    "c": "bored(X) :- tall(X).\ncurious(X) :- bored(X).\nsad(X) :- curious(X).\nfunny(X) :- sad(X).\ncurious(X) :- funny(X).\nweak(X) :- curious(X).\nhappy(X) :- weak(X).\ntall(X) :- happy(X).\nfriendly(X) :- tall(X).\nhungry(X) :- friendly(X).\nweak(X) :- hungry(X).\nstrong(X) :- weak(X).\ntall(X) :- strong(X).\nbusy(X) :- tall(X).\ncalm(X) :- busy(X).\nbrave(X) :- calm(X).\nbusy(X) :- brave(X).\ncurious(X) :- busy(X).\nfriendly(X) :- curious(X).\nsad(X) :- friendly(X).\ntall(frank).\nsibling(george,frank).\nfriend(eve,frank).\nbig(ball).\nenemy(carol,alice).\nenemy(alice,eve).\nwet(ball).\nfriend(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if person X is friendly, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\n\nAnd the following facts:\nfrank is tall.\ngeorge is a sibling of frank.\neve is a friend of frank.\nball is big.\ncarol is an enemy of alice.\nalice is an enemy of eve.\nball is wet.\ngeorge is a friend of bob.\n\nQUESTION:\nIs frank is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 752,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(apple).",
    "c": "bored(X) :- tall(X).\ncurious(X) :- bored(X).\nsad(X) :- curious(X).\nfunny(X) :- sad(X).\ncurious(X) :- funny(X).\nweak(X) :- curious(X).\nhappy(X) :- weak(X).\ntall(X) :- happy(X).\nfriendly(X) :- tall(X).\nhungry(X) :- friendly(X).\nweak(X) :- hungry(X).\nstrong(X) :- weak(X).\ntall(X) :- strong(X).\nbusy(X) :- tall(X).\ncalm(X) :- busy(X).\nbrave(X) :- calm(X).\nbusy(X) :- brave(X).\ncurious(X) :- busy(X).\nfriendly(X) :- curious(X).\nsad(X) :- friendly(X).\ntall(frank).\nsibling(george,frank).\nfriend(eve,frank).\nbig(ball).\nenemy(carol,alice).\nenemy(alice,eve).\nwet(ball).\nfriend(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if person X is friendly, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\n\nAnd the following facts:\nfrank is tall.\ngeorge is a sibling of frank.\neve is a friend of frank.\nball is big.\ncarol is an enemy of alice.\nalice is an enemy of eve.\nball is wet.\ngeorge is a friend of bob.\n\nQUESTION:\nIs apple is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 753,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(frank).",
    "c": "bored(X) :- tall(X).\ncurious(X) :- bored(X).\nsad(X) :- curious(X).\nfunny(X) :- sad(X).\ncurious(X) :- funny(X).\nweak(X) :- curious(X).\nhappy(X) :- weak(X).\ntall(X) :- happy(X).\nfriendly(X) :- tall(X).\nhungry(X) :- friendly(X).\nweak(X) :- hungry(X).\nstrong(X) :- weak(X).\ntall(X) :- strong(X).\nbusy(X) :- tall(X).\ncalm(X) :- busy(X).\nbrave(X) :- calm(X).\nbusy(X) :- brave(X).\ncurious(X) :- busy(X).\nfriendly(X) :- curious(X).\nsad(X) :- friendly(X).\nsad(frank).\nsibling(george,frank).\nfriend(eve,frank).\nbig(ball).\nenemy(carol,alice).\nenemy(alice,eve).\nwet(ball).\nfriend(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if person X is friendly, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\n\nAnd the following facts:\nfrank is sad.\ngeorge is a sibling of frank.\neve is a friend of frank.\nball is big.\ncarol is an enemy of alice.\nalice is an enemy of eve.\nball is wet.\ngeorge is a friend of bob.\n\nQUESTION:\nCould frank is tall explain frank is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 754,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(book).",
    "c": "bored(X) :- tall(X).\ncurious(X) :- bored(X).\nsad(X) :- curious(X).\nfunny(X) :- sad(X).\ncurious(X) :- funny(X).\nweak(X) :- curious(X).\nhappy(X) :- weak(X).\ntall(X) :- happy(X).\nfriendly(X) :- tall(X).\nhungry(X) :- friendly(X).\nweak(X) :- hungry(X).\nstrong(X) :- weak(X).\ntall(X) :- strong(X).\nbusy(X) :- tall(X).\ncalm(X) :- busy(X).\nbrave(X) :- calm(X).\nbusy(X) :- brave(X).\ncurious(X) :- busy(X).\nfriendly(X) :- curious(X).\nsad(X) :- friendly(X).\nsad(frank).\nsibling(george,frank).\nfriend(eve,frank).\nbig(ball).\nenemy(carol,alice).\nenemy(alice,eve).\nwet(ball).\nfriend(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if person X is friendly, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is busy, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\n\nAnd the following facts:\nfrank is sad.\ngeorge is a sibling of frank.\neve is a friend of frank.\nball is big.\ncarol is an enemy of alice.\nalice is an enemy of eve.\nball is wet.\ngeorge is a friend of bob.\n\nQUESTION:\nCould book is old explain frank is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 755,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(car).",
    "c": "old(X) :- red(X).\nclean(X) :- old(X).\nsmooth(X) :- clean(X).\nclean(X) :- smooth(X).\ndirty(X) :- clean(X).\nhard(X) :- dirty(X).\nheavy(X) :- hard(X).\nsoft(X) :- heavy(X).\nnew(X) :- soft(X).\nbig(X) :- new(X).\nsmooth(X) :- big(X).\ndirty(X) :- smooth(X).\nold(X) :- dirty(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nlight(X) :- red(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nrough(X) :- heavy(X).\nheavy(X) :- rough(X).\nred(car).\nenemy(george,alice).\nsibling(bob,eve).\nparent(eve,dave).\nenemy(eve,george).\nbusy(bob).\ndislikes(carol,book).\nlikes(bob,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\n\nAnd the following facts:\ncar is red.\ngeorge is an enemy of alice.\nbob is a sibling of eve.\neve is a parent of dave.\neve is an enemy of george.\nbob is busy.\ncarol dislikes book.\nbob likes apple.\n\nQUESTION:\nIs car is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 756,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(dave).",
    "c": "old(X) :- red(X).\nclean(X) :- old(X).\nsmooth(X) :- clean(X).\nclean(X) :- smooth(X).\ndirty(X) :- clean(X).\nhard(X) :- dirty(X).\nheavy(X) :- hard(X).\nsoft(X) :- heavy(X).\nnew(X) :- soft(X).\nbig(X) :- new(X).\nsmooth(X) :- big(X).\ndirty(X) :- smooth(X).\nold(X) :- dirty(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nlight(X) :- red(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nrough(X) :- heavy(X).\nheavy(X) :- rough(X).\nred(car).\nenemy(george,alice).\nsibling(bob,eve).\nparent(eve,dave).\nenemy(eve,george).\nbusy(bob).\ndislikes(carol,book).\nlikes(bob,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\n\nAnd the following facts:\ncar is red.\ngeorge is an enemy of alice.\nbob is a sibling of eve.\neve is a parent of dave.\neve is an enemy of george.\nbob is busy.\ncarol dislikes book.\nbob likes apple.\n\nQUESTION:\nIs dave is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 757,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "old(X) :- red(X).\nclean(X) :- old(X).\nsmooth(X) :- clean(X).\nclean(X) :- smooth(X).\ndirty(X) :- clean(X).\nhard(X) :- dirty(X).\nheavy(X) :- hard(X).\nsoft(X) :- heavy(X).\nnew(X) :- soft(X).\nbig(X) :- new(X).\nsmooth(X) :- big(X).\ndirty(X) :- smooth(X).\nold(X) :- dirty(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nlight(X) :- red(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nrough(X) :- heavy(X).\nheavy(X) :- rough(X).\nheavy(car).\nenemy(george,alice).\nsibling(bob,eve).\nparent(eve,dave).\nenemy(eve,george).\nbusy(bob).\ndislikes(carol,book).\nlikes(bob,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\n\nAnd the following facts:\ncar is heavy.\ngeorge is an enemy of alice.\nbob is a sibling of eve.\neve is a parent of dave.\neve is an enemy of george.\nbob is busy.\ncarol dislikes book.\nbob likes apple.\n\nQUESTION:\nCould car is red explain car is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 758,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(pencil).",
    "c": "old(X) :- red(X).\nclean(X) :- old(X).\nsmooth(X) :- clean(X).\nclean(X) :- smooth(X).\ndirty(X) :- clean(X).\nhard(X) :- dirty(X).\nheavy(X) :- hard(X).\nsoft(X) :- heavy(X).\nnew(X) :- soft(X).\nbig(X) :- new(X).\nsmooth(X) :- big(X).\ndirty(X) :- smooth(X).\nold(X) :- dirty(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nlight(X) :- red(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nrough(X) :- heavy(X).\nheavy(X) :- rough(X).\nheavy(car).\nenemy(george,alice).\nsibling(bob,eve).\nparent(eve,dave).\nenemy(eve,george).\nbusy(bob).\ndislikes(carol,book).\nlikes(bob,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is heavy.\n\nAnd the following facts:\ncar is heavy.\ngeorge is an enemy of alice.\nbob is a sibling of eve.\neve is a parent of dave.\neve is an enemy of george.\nbob is busy.\ncarol dislikes book.\nbob likes apple.\n\nQUESTION:\nCould pencil is small explain car is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 759,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "funny(X) :- strong(X).\nhungry(X) :- funny(X).\ntired(X) :- hungry(X).\nbored(X) :- tired(X).\nexcited(X) :- bored(X).\ncurious(X) :- excited(X).\ntall(X) :- curious(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nhappy(X) :- calm(X).\nangry(X) :- happy(X).\nfriendly(X) :- angry(X).\nsad(X) :- friendly(X).\nbusy(X) :- sad(X).\nclever(X) :- busy(X).\nbrave(X) :- clever(X).\nhungry(X) :- brave(X).\ntired(X) :- hungry(X).\nstrong(X) :- tired(X).\nbrave(X) :- strong(X).\nstrong(eve).\nenemy(eve,dave).\nold(car).\nsibling(dave,george).\nlikes(bob,pencil).\ndislikes(carol,pencil).\nenemy(bob,dave).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\n\nAnd the following facts:\neve is strong.\neve is an enemy of dave.\ncar is old.\ndave is a sibling of george.\nbob likes pencil.\ncarol dislikes pencil.\nbob is an enemy of dave.\ncarol is a sibling of eve.\n\nQUESTION:\nIs eve is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 760,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(book).",
    "c": "funny(X) :- strong(X).\nhungry(X) :- funny(X).\ntired(X) :- hungry(X).\nbored(X) :- tired(X).\nexcited(X) :- bored(X).\ncurious(X) :- excited(X).\ntall(X) :- curious(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nhappy(X) :- calm(X).\nangry(X) :- happy(X).\nfriendly(X) :- angry(X).\nsad(X) :- friendly(X).\nbusy(X) :- sad(X).\nclever(X) :- busy(X).\nbrave(X) :- clever(X).\nhungry(X) :- brave(X).\ntired(X) :- hungry(X).\nstrong(X) :- tired(X).\nbrave(X) :- strong(X).\nstrong(eve).\nenemy(eve,dave).\nold(car).\nsibling(dave,george).\nlikes(bob,pencil).\ndislikes(carol,pencil).\nenemy(bob,dave).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\n\nAnd the following facts:\neve is strong.\neve is an enemy of dave.\ncar is old.\ndave is a sibling of george.\nbob likes pencil.\ncarol dislikes pencil.\nbob is an enemy of dave.\ncarol is a sibling of eve.\n\nQUESTION:\nIs book is smooth true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 761,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(eve).",
    "c": "funny(X) :- strong(X).\nhungry(X) :- funny(X).\ntired(X) :- hungry(X).\nbored(X) :- tired(X).\nexcited(X) :- bored(X).\ncurious(X) :- excited(X).\ntall(X) :- curious(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nhappy(X) :- calm(X).\nangry(X) :- happy(X).\nfriendly(X) :- angry(X).\nsad(X) :- friendly(X).\nbusy(X) :- sad(X).\nclever(X) :- busy(X).\nbrave(X) :- clever(X).\nhungry(X) :- brave(X).\ntired(X) :- hungry(X).\nstrong(X) :- tired(X).\nbrave(X) :- strong(X).\nbrave(eve).\nenemy(eve,dave).\nold(car).\nsibling(dave,george).\nlikes(bob,pencil).\ndislikes(carol,pencil).\nenemy(bob,dave).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\n\nAnd the following facts:\neve is brave.\neve is an enemy of dave.\ncar is old.\ndave is a sibling of george.\nbob likes pencil.\ncarol dislikes pencil.\nbob is an enemy of dave.\ncarol is a sibling of eve.\n\nQUESTION:\nCould eve is strong explain eve is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 762,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "light(book).",
    "c": "funny(X) :- strong(X).\nhungry(X) :- funny(X).\ntired(X) :- hungry(X).\nbored(X) :- tired(X).\nexcited(X) :- bored(X).\ncurious(X) :- excited(X).\ntall(X) :- curious(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nhappy(X) :- calm(X).\nangry(X) :- happy(X).\nfriendly(X) :- angry(X).\nsad(X) :- friendly(X).\nbusy(X) :- sad(X).\nclever(X) :- busy(X).\nbrave(X) :- clever(X).\nhungry(X) :- brave(X).\ntired(X) :- hungry(X).\nstrong(X) :- tired(X).\nbrave(X) :- strong(X).\nbrave(eve).\nenemy(eve,dave).\nold(car).\nsibling(dave,george).\nlikes(bob,pencil).\ndislikes(carol,pencil).\nenemy(bob,dave).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\n\nAnd the following facts:\neve is brave.\neve is an enemy of dave.\ncar is old.\ndave is a sibling of george.\nbob likes pencil.\ncarol dislikes pencil.\nbob is an enemy of dave.\ncarol is a sibling of eve.\n\nQUESTION:\nCould book is light explain eve is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 763,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "excited(X) :- calm(X).\ntired(X) :- excited(X).\nhungry(X) :- tired(X).\nhappy(X) :- hungry(X).\nstrong(X) :- happy(X).\nbrave(X) :- strong(X).\nangry(X) :- brave(X).\nfriendly(X) :- angry(X).\nclever(X) :- friendly(X).\nsad(X) :- clever(X).\nfunny(X) :- sad(X).\nbored(X) :- funny(X).\nbusy(X) :- bored(X).\ntall(X) :- busy(X).\nweak(X) :- tall(X).\ncurious(X) :- weak(X).\nangry(X) :- curious(X).\nbrave(X) :- angry(X).\ntired(X) :- brave(X).\ncurious(X) :- tired(X).\ncalm(dave).\nlikes(george,phone).\nfriend(bob,carol).\ndislikes(george,phone).\nold(apple).\ndislikes(bob,book).\nparent(dave,carol).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is curious.\n\nAnd the following facts:\ndave is calm.\ngeorge likes phone.\nbob is a friend of carol.\ngeorge dislikes phone.\napple is old.\nbob dislikes book.\ndave is a parent of carol.\neve is a friend of alice.\n\nQUESTION:\nIs dave is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 764,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(apple).",
    "c": "excited(X) :- calm(X).\ntired(X) :- excited(X).\nhungry(X) :- tired(X).\nhappy(X) :- hungry(X).\nstrong(X) :- happy(X).\nbrave(X) :- strong(X).\nangry(X) :- brave(X).\nfriendly(X) :- angry(X).\nclever(X) :- friendly(X).\nsad(X) :- clever(X).\nfunny(X) :- sad(X).\nbored(X) :- funny(X).\nbusy(X) :- bored(X).\ntall(X) :- busy(X).\nweak(X) :- tall(X).\ncurious(X) :- weak(X).\nangry(X) :- curious(X).\nbrave(X) :- angry(X).\ntired(X) :- brave(X).\ncurious(X) :- tired(X).\ncalm(dave).\nlikes(george,phone).\nfriend(bob,carol).\ndislikes(george,phone).\nold(apple).\ndislikes(bob,book).\nparent(dave,carol).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is curious.\n\nAnd the following facts:\ndave is calm.\ngeorge likes phone.\nbob is a friend of carol.\ngeorge dislikes phone.\napple is old.\nbob dislikes book.\ndave is a parent of carol.\neve is a friend of alice.\n\nQUESTION:\nIs apple is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 765,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(dave).",
    "c": "excited(X) :- calm(X).\ntired(X) :- excited(X).\nhungry(X) :- tired(X).\nhappy(X) :- hungry(X).\nstrong(X) :- happy(X).\nbrave(X) :- strong(X).\nangry(X) :- brave(X).\nfriendly(X) :- angry(X).\nclever(X) :- friendly(X).\nsad(X) :- clever(X).\nfunny(X) :- sad(X).\nbored(X) :- funny(X).\nbusy(X) :- bored(X).\ntall(X) :- busy(X).\nweak(X) :- tall(X).\ncurious(X) :- weak(X).\nangry(X) :- curious(X).\nbrave(X) :- angry(X).\ntired(X) :- brave(X).\ncurious(X) :- tired(X).\ncurious(dave).\nlikes(george,phone).\nfriend(bob,carol).\ndislikes(george,phone).\nold(apple).\ndislikes(bob,book).\nparent(dave,carol).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is curious.\n\nAnd the following facts:\ndave is curious.\ngeorge likes phone.\nbob is a friend of carol.\ngeorge dislikes phone.\napple is old.\nbob dislikes book.\ndave is a parent of carol.\neve is a friend of alice.\n\nQUESTION:\nCould dave is calm explain dave is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 766,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(frank).",
    "c": "excited(X) :- calm(X).\ntired(X) :- excited(X).\nhungry(X) :- tired(X).\nhappy(X) :- hungry(X).\nstrong(X) :- happy(X).\nbrave(X) :- strong(X).\nangry(X) :- brave(X).\nfriendly(X) :- angry(X).\nclever(X) :- friendly(X).\nsad(X) :- clever(X).\nfunny(X) :- sad(X).\nbored(X) :- funny(X).\nbusy(X) :- bored(X).\ntall(X) :- busy(X).\nweak(X) :- tall(X).\ncurious(X) :- weak(X).\nangry(X) :- curious(X).\nbrave(X) :- angry(X).\ntired(X) :- brave(X).\ncurious(X) :- tired(X).\ncurious(dave).\nlikes(george,phone).\nfriend(bob,carol).\ndislikes(george,phone).\nold(apple).\ndislikes(bob,book).\nparent(dave,carol).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is curious.\n\nAnd the following facts:\ndave is curious.\ngeorge likes phone.\nbob is a friend of carol.\ngeorge dislikes phone.\napple is old.\nbob dislikes book.\ndave is a parent of carol.\neve is a friend of alice.\n\nQUESTION:\nCould frank is excited explain dave is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 767,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(ball).",
    "c": "rough(X) :- wet(X).\nclever(X) :- clever(X), brave(B).\nbig(X) :- old(X).\nbrave(Y) :- sad(Y), dirty(C).\nweak(X) :- weak(X), sibling(X,A), happy(A).\nhard(X) :- old(X), dislikes(B,X), bored(B).\nfriend(Z,X) :- sad(Z), bored(X).\ndirty(Y) :- heavy(Y), clean(A).\ntall(X) :- friendly(X), likes(X,B), dirty(B).\ndislikes(Y,X) :- curious(Y), red(X), owns(B,X).\nowns(X,Y) :- strong(X), light(Y).\ndirty(X) :- heavy(X), clean(X).\nhard(X) :- smooth(X).\nred(X) :- small(X).\nexcited(X) :- friendly(X).\nangry(X) :- curious(X), funny(X).\ndirty(X) :- clean(X).\nowns(X,Y) :- bored(X), old(Y), likes(X,Y).\nbrave(X) :- hungry(X), tired(X).\nnew(X) :- small(X).\nwet(ball).\nexcited(george).\nenemy(bob,frank).\nenemy(dave,frank).\nparent(bob,eve).\nfriend(frank,eve).\nlikes(george,ball).\nsibling(alice,george).\nparent(frank,bob).\nold(apple).\nparent(eve,bob).\nfriend(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is rough.\nFor all X, if there exists B such that person X is clever and person B is brave, then person X is clever.\nFor all X, if object X is old, then object X is big.\nFor all Y, if there exists C such that person Y is sad and object C is dirty, then person Y is brave.\nFor all X, if there exists A such that person X is weak and person X is a sibling of person A and person A is happy, then person X is weak.\nFor all X, if there exists B such that object X is old and person B dislikes object X and person B is bored, then object X is hard.\nFor all X, Z, if person Z is sad and person X is bored, then person Z is a friend of person X.\nFor all Y, if there exists A such that object Y is heavy and object A is clean, then object Y is dirty.\nFor all X, if there exists B such that person X is friendly and person X likes object B and object B is dirty, then person X is tall.\nFor all X, Y, if there exists B such that person Y is curious and object X is red and person B owns object X, then person Y dislikes object X.\nFor all X, Y, if person X is strong and object Y is light, then person X owns object Y.\nFor all X, if object X is heavy and object X is clean, then object X is dirty.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is small, then object X is red.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is curious and person X is funny, then person X is angry.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if person X is bored and object Y is old and person X likes object Y, then person X owns object Y.\nFor all X, if person X is hungry and person X is tired, then person X is brave.\nFor all X, if object X is small, then object X is new.\n\nAnd the following facts:\nball is wet.\ngeorge is excited.\nbob is an enemy of frank.\ndave is an enemy of frank.\nbob is a parent of eve.\nfrank is a friend of eve.\ngeorge likes ball.\nalice is a sibling of george.\nfrank is a parent of bob.\napple is old.\neve is a parent of bob.\ncarol is a friend of george.\n\nQUESTION:\nIs ball is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 768,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "rough(X) :- wet(X).\nclever(X) :- clever(X), brave(B).\nbig(X) :- old(X).\nbrave(Y) :- sad(Y), dirty(C).\nweak(X) :- weak(X), sibling(X,A), happy(A).\nhard(X) :- old(X), dislikes(B,X), bored(B).\nfriend(Z,X) :- sad(Z), bored(X).\ndirty(Y) :- heavy(Y), clean(A).\ntall(X) :- friendly(X), likes(X,B), dirty(B).\ndislikes(Y,X) :- curious(Y), red(X), owns(B,X).\nowns(X,Y) :- strong(X), light(Y).\ndirty(X) :- heavy(X), clean(X).\nhard(X) :- smooth(X).\nred(X) :- small(X).\nexcited(X) :- friendly(X).\nangry(X) :- curious(X), funny(X).\ndirty(X) :- clean(X).\nowns(X,Y) :- bored(X), old(Y), likes(X,Y).\nbrave(X) :- hungry(X), tired(X).\nnew(X) :- small(X).\nwet(ball).\nexcited(george).\nenemy(bob,frank).\nenemy(dave,frank).\nparent(bob,eve).\nfriend(frank,eve).\nlikes(george,ball).\nsibling(alice,george).\nparent(frank,bob).\nold(apple).\nparent(eve,bob).\nfriend(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is rough.\nFor all X, if there exists B such that person X is clever and person B is brave, then person X is clever.\nFor all X, if object X is old, then object X is big.\nFor all Y, if there exists C such that person Y is sad and object C is dirty, then person Y is brave.\nFor all X, if there exists A such that person X is weak and person X is a sibling of person A and person A is happy, then person X is weak.\nFor all X, if there exists B such that object X is old and person B dislikes object X and person B is bored, then object X is hard.\nFor all X, Z, if person Z is sad and person X is bored, then person Z is a friend of person X.\nFor all Y, if there exists A such that object Y is heavy and object A is clean, then object Y is dirty.\nFor all X, if there exists B such that person X is friendly and person X likes object B and object B is dirty, then person X is tall.\nFor all X, Y, if there exists B such that person Y is curious and object X is red and person B owns object X, then person Y dislikes object X.\nFor all X, Y, if person X is strong and object Y is light, then person X owns object Y.\nFor all X, if object X is heavy and object X is clean, then object X is dirty.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is small, then object X is red.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is curious and person X is funny, then person X is angry.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if person X is bored and object Y is old and person X likes object Y, then person X owns object Y.\nFor all X, if person X is hungry and person X is tired, then person X is brave.\nFor all X, if object X is small, then object X is new.\n\nAnd the following facts:\nball is wet.\ngeorge is excited.\nbob is an enemy of frank.\ndave is an enemy of frank.\nbob is a parent of eve.\nfrank is a friend of eve.\ngeorge likes ball.\nalice is a sibling of george.\nfrank is a parent of bob.\napple is old.\neve is a parent of bob.\ncarol is a friend of george.\n\nQUESTION:\nIs eve is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 769,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(ball).",
    "c": "rough(X) :- wet(X).\nclever(X) :- clever(X), brave(B).\nbig(X) :- old(X).\nbrave(Y) :- sad(Y), dirty(C).\nweak(X) :- weak(X), sibling(X,A), happy(A).\nhard(X) :- old(X), dislikes(B,X), bored(B).\nfriend(Z,X) :- sad(Z), bored(X).\ndirty(Y) :- heavy(Y), clean(A).\ntall(X) :- friendly(X), likes(X,B), dirty(B).\ndislikes(Y,X) :- curious(Y), red(X), owns(B,X).\nowns(X,Y) :- strong(X), light(Y).\ndirty(X) :- heavy(X), clean(X).\nhard(X) :- smooth(X).\nred(X) :- small(X).\nexcited(X) :- friendly(X).\nangry(X) :- curious(X), funny(X).\ndirty(X) :- clean(X).\nowns(X,Y) :- bored(X), old(Y), likes(X,Y).\nbrave(X) :- hungry(X), tired(X).\nnew(X) :- small(X).\nrough(ball).\nexcited(george).\nenemy(bob,frank).\nenemy(dave,frank).\nparent(bob,eve).\nfriend(frank,eve).\nlikes(george,ball).\nsibling(alice,george).\nparent(frank,bob).\nold(apple).\nparent(eve,bob).\nfriend(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is rough.\nFor all X, if there exists B such that person X is clever and person B is brave, then person X is clever.\nFor all X, if object X is old, then object X is big.\nFor all Y, if there exists C such that person Y is sad and object C is dirty, then person Y is brave.\nFor all X, if there exists A such that person X is weak and person X is a sibling of person A and person A is happy, then person X is weak.\nFor all X, if there exists B such that object X is old and person B dislikes object X and person B is bored, then object X is hard.\nFor all X, Z, if person Z is sad and person X is bored, then person Z is a friend of person X.\nFor all Y, if there exists A such that object Y is heavy and object A is clean, then object Y is dirty.\nFor all X, if there exists B such that person X is friendly and person X likes object B and object B is dirty, then person X is tall.\nFor all X, Y, if there exists B such that person Y is curious and object X is red and person B owns object X, then person Y dislikes object X.\nFor all X, Y, if person X is strong and object Y is light, then person X owns object Y.\nFor all X, if object X is heavy and object X is clean, then object X is dirty.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is small, then object X is red.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is curious and person X is funny, then person X is angry.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if person X is bored and object Y is old and person X likes object Y, then person X owns object Y.\nFor all X, if person X is hungry and person X is tired, then person X is brave.\nFor all X, if object X is small, then object X is new.\n\nAnd the following facts:\nball is rough.\ngeorge is excited.\nbob is an enemy of frank.\ndave is an enemy of frank.\nbob is a parent of eve.\nfrank is a friend of eve.\ngeorge likes ball.\nalice is a sibling of george.\nfrank is a parent of bob.\napple is old.\neve is a parent of bob.\ncarol is a friend of george.\n\nQUESTION:\nCould ball is wet explain ball is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 770,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "rough(X) :- wet(X).\nclever(X) :- clever(X), brave(B).\nbig(X) :- old(X).\nbrave(Y) :- sad(Y), dirty(C).\nweak(X) :- weak(X), sibling(X,A), happy(A).\nhard(X) :- old(X), dislikes(B,X), bored(B).\nfriend(Z,X) :- sad(Z), bored(X).\ndirty(Y) :- heavy(Y), clean(A).\ntall(X) :- friendly(X), likes(X,B), dirty(B).\ndislikes(Y,X) :- curious(Y), red(X), owns(B,X).\nowns(X,Y) :- strong(X), light(Y).\ndirty(X) :- heavy(X), clean(X).\nhard(X) :- smooth(X).\nred(X) :- small(X).\nexcited(X) :- friendly(X).\nangry(X) :- curious(X), funny(X).\ndirty(X) :- clean(X).\nowns(X,Y) :- bored(X), old(Y), likes(X,Y).\nbrave(X) :- hungry(X), tired(X).\nnew(X) :- small(X).\nrough(ball).\nexcited(george).\nenemy(bob,frank).\nenemy(dave,frank).\nparent(bob,eve).\nfriend(frank,eve).\nlikes(george,ball).\nsibling(alice,george).\nparent(frank,bob).\nold(apple).\nparent(eve,bob).\nfriend(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is rough.\nFor all X, if there exists B such that person X is clever and person B is brave, then person X is clever.\nFor all X, if object X is old, then object X is big.\nFor all Y, if there exists C such that person Y is sad and object C is dirty, then person Y is brave.\nFor all X, if there exists A such that person X is weak and person X is a sibling of person A and person A is happy, then person X is weak.\nFor all X, if there exists B such that object X is old and person B dislikes object X and person B is bored, then object X is hard.\nFor all X, Z, if person Z is sad and person X is bored, then person Z is a friend of person X.\nFor all Y, if there exists A such that object Y is heavy and object A is clean, then object Y is dirty.\nFor all X, if there exists B such that person X is friendly and person X likes object B and object B is dirty, then person X is tall.\nFor all X, Y, if there exists B such that person Y is curious and object X is red and person B owns object X, then person Y dislikes object X.\nFor all X, Y, if person X is strong and object Y is light, then person X owns object Y.\nFor all X, if object X is heavy and object X is clean, then object X is dirty.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is small, then object X is red.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is curious and person X is funny, then person X is angry.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, Y, if person X is bored and object Y is old and person X likes object Y, then person X owns object Y.\nFor all X, if person X is hungry and person X is tired, then person X is brave.\nFor all X, if object X is small, then object X is new.\n\nAnd the following facts:\nball is rough.\ngeorge is excited.\nbob is an enemy of frank.\ndave is an enemy of frank.\nbob is a parent of eve.\nfrank is a friend of eve.\ngeorge likes ball.\nalice is a sibling of george.\nfrank is a parent of bob.\napple is old.\neve is a parent of bob.\ncarol is a friend of george.\n\nQUESTION:\nCould phone is soft explain ball is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 771,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(george).",
    "c": "busy(X) :- weak(X).\nold(Z) :- rough(Z), angry(D).\nsibling(Z,X) :- curious(Z), tall(X), friend(X,W).\nred(Y) :- heavy(Y).\ndislikes(Z,X) :- tired(Z), smooth(X), sad(C).\nparent(X,Z) :- friendly(Z), bored(X), owns(Z,V).\nfriend(Z,Y) :- tired(Y), hungry(Z), likes(Y,W).\nfunny(Z) :- calm(Z), enemy(Z,W), hungry(W).\nbored(Z) :- excited(Z), friend(Z,W), strong(W).\nclean(X) :- new(X), red(X).\nhungry(X) :- friendly(X), friendly(X).\nparent(X,Y) :- happy(X), hungry(Y).\nheavy(X) :- new(X).\nstrong(X) :- excited(X).\nhappy(X) :- brave(X), strong(X).\nexcited(X) :- sad(X), tall(X).\nred(X) :- old(X), big(X).\nsoft(X) :- new(X).\nold(X) :- dirty(X), light(X).\ntired(X) :- tall(X).\nweak(george).\nparent(george,bob).\nclever(frank).\nsad(bob).\nsibling(bob,george).\nowns(dave,pencil).\nlikes(eve,car).\nclever(carol).\ndislikes(frank,book).\nparent(alice,george).\nparent(carol,frank).\ntall(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is busy.\nFor all Z, if there exists D such that object Z is rough and person D is angry, then object Z is old.\nFor all X, Z, if there exists W such that person Z is curious and person X is tall and person X is a friend of person W, then person Z is a sibling of person X.\nFor all Y, if object Y is heavy, then object Y is red.\nFor all X, Z, if there exists C such that person Z is tired and object X is smooth and person C is sad, then person Z dislikes object X.\nFor all X, Z, if there exists V such that person Z is friendly and person X is bored and person Z owns object V, then person X is a parent of person Z.\nFor all Y, Z, if there exists W such that person Y is tired and person Z is hungry and person Y likes object W, then person Z is a friend of person Y.\nFor all Z, if there exists W such that person Z is calm and person Z is an enemy of person W and person W is hungry, then person Z is funny.\nFor all Z, if there exists W such that person Z is excited and person Z is a friend of person W and person W is strong, then person Z is bored.\nFor all X, if object X is new and object X is red, then object X is clean.\nFor all X, if person X is friendly and person X is friendly, then person X is hungry.\nFor all X, Y, if person X is happy and person Y is hungry, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is brave and person X is strong, then person X is happy.\nFor all X, if person X is sad and person X is tall, then person X is excited.\nFor all X, if object X is old and object X is big, then object X is red.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is dirty and object X is light, then object X is old.\nFor all X, if person X is tall, then person X is tired.\n\nAnd the following facts:\ngeorge is weak.\ngeorge is a parent of bob.\nfrank is clever.\nbob is sad.\nbob is a sibling of george.\ndave owns pencil.\neve likes car.\ncarol is clever.\nfrank dislikes book.\nalice is a parent of george.\ncarol is a parent of frank.\ncarol is tall.\n\nQUESTION:\nIs george is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 772,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(george).",
    "c": "busy(X) :- weak(X).\nold(Z) :- rough(Z), angry(D).\nsibling(Z,X) :- curious(Z), tall(X), friend(X,W).\nred(Y) :- heavy(Y).\ndislikes(Z,X) :- tired(Z), smooth(X), sad(C).\nparent(X,Z) :- friendly(Z), bored(X), owns(Z,V).\nfriend(Z,Y) :- tired(Y), hungry(Z), likes(Y,W).\nfunny(Z) :- calm(Z), enemy(Z,W), hungry(W).\nbored(Z) :- excited(Z), friend(Z,W), strong(W).\nclean(X) :- new(X), red(X).\nhungry(X) :- friendly(X), friendly(X).\nparent(X,Y) :- happy(X), hungry(Y).\nheavy(X) :- new(X).\nstrong(X) :- excited(X).\nhappy(X) :- brave(X), strong(X).\nexcited(X) :- sad(X), tall(X).\nred(X) :- old(X), big(X).\nsoft(X) :- new(X).\nold(X) :- dirty(X), light(X).\ntired(X) :- tall(X).\nweak(george).\nparent(george,bob).\nclever(frank).\nsad(bob).\nsibling(bob,george).\nowns(dave,pencil).\nlikes(eve,car).\nclever(carol).\ndislikes(frank,book).\nparent(alice,george).\nparent(carol,frank).\ntall(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is busy.\nFor all Z, if there exists D such that object Z is rough and person D is angry, then object Z is old.\nFor all X, Z, if there exists W such that person Z is curious and person X is tall and person X is a friend of person W, then person Z is a sibling of person X.\nFor all Y, if object Y is heavy, then object Y is red.\nFor all X, Z, if there exists C such that person Z is tired and object X is smooth and person C is sad, then person Z dislikes object X.\nFor all X, Z, if there exists V such that person Z is friendly and person X is bored and person Z owns object V, then person X is a parent of person Z.\nFor all Y, Z, if there exists W such that person Y is tired and person Z is hungry and person Y likes object W, then person Z is a friend of person Y.\nFor all Z, if there exists W such that person Z is calm and person Z is an enemy of person W and person W is hungry, then person Z is funny.\nFor all Z, if there exists W such that person Z is excited and person Z is a friend of person W and person W is strong, then person Z is bored.\nFor all X, if object X is new and object X is red, then object X is clean.\nFor all X, if person X is friendly and person X is friendly, then person X is hungry.\nFor all X, Y, if person X is happy and person Y is hungry, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is brave and person X is strong, then person X is happy.\nFor all X, if person X is sad and person X is tall, then person X is excited.\nFor all X, if object X is old and object X is big, then object X is red.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is dirty and object X is light, then object X is old.\nFor all X, if person X is tall, then person X is tired.\n\nAnd the following facts:\ngeorge is weak.\ngeorge is a parent of bob.\nfrank is clever.\nbob is sad.\nbob is a sibling of george.\ndave owns pencil.\neve likes car.\ncarol is clever.\nfrank dislikes book.\nalice is a parent of george.\ncarol is a parent of frank.\ncarol is tall.\n\nQUESTION:\nIs george is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 773,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(george).",
    "c": "busy(X) :- weak(X).\nold(Z) :- rough(Z), angry(D).\nsibling(Z,X) :- curious(Z), tall(X), friend(X,W).\nred(Y) :- heavy(Y).\ndislikes(Z,X) :- tired(Z), smooth(X), sad(C).\nparent(X,Z) :- friendly(Z), bored(X), owns(Z,V).\nfriend(Z,Y) :- tired(Y), hungry(Z), likes(Y,W).\nfunny(Z) :- calm(Z), enemy(Z,W), hungry(W).\nbored(Z) :- excited(Z), friend(Z,W), strong(W).\nclean(X) :- new(X), red(X).\nhungry(X) :- friendly(X), friendly(X).\nparent(X,Y) :- happy(X), hungry(Y).\nheavy(X) :- new(X).\nstrong(X) :- excited(X).\nhappy(X) :- brave(X), strong(X).\nexcited(X) :- sad(X), tall(X).\nred(X) :- old(X), big(X).\nsoft(X) :- new(X).\nold(X) :- dirty(X), light(X).\ntired(X) :- tall(X).\nbusy(george).\nparent(george,bob).\nclever(frank).\nsad(bob).\nsibling(bob,george).\nowns(dave,pencil).\nlikes(eve,car).\nclever(carol).\ndislikes(frank,book).\nparent(alice,george).\nparent(carol,frank).\ntall(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is busy.\nFor all Z, if there exists D such that object Z is rough and person D is angry, then object Z is old.\nFor all X, Z, if there exists W such that person Z is curious and person X is tall and person X is a friend of person W, then person Z is a sibling of person X.\nFor all Y, if object Y is heavy, then object Y is red.\nFor all X, Z, if there exists C such that person Z is tired and object X is smooth and person C is sad, then person Z dislikes object X.\nFor all X, Z, if there exists V such that person Z is friendly and person X is bored and person Z owns object V, then person X is a parent of person Z.\nFor all Y, Z, if there exists W such that person Y is tired and person Z is hungry and person Y likes object W, then person Z is a friend of person Y.\nFor all Z, if there exists W such that person Z is calm and person Z is an enemy of person W and person W is hungry, then person Z is funny.\nFor all Z, if there exists W such that person Z is excited and person Z is a friend of person W and person W is strong, then person Z is bored.\nFor all X, if object X is new and object X is red, then object X is clean.\nFor all X, if person X is friendly and person X is friendly, then person X is hungry.\nFor all X, Y, if person X is happy and person Y is hungry, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is brave and person X is strong, then person X is happy.\nFor all X, if person X is sad and person X is tall, then person X is excited.\nFor all X, if object X is old and object X is big, then object X is red.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is dirty and object X is light, then object X is old.\nFor all X, if person X is tall, then person X is tired.\n\nAnd the following facts:\ngeorge is busy.\ngeorge is a parent of bob.\nfrank is clever.\nbob is sad.\nbob is a sibling of george.\ndave owns pencil.\neve likes car.\ncarol is clever.\nfrank dislikes book.\nalice is a parent of george.\ncarol is a parent of frank.\ncarol is tall.\n\nQUESTION:\nCould george is weak explain george is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 774,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(phone).",
    "c": "busy(X) :- weak(X).\nold(Z) :- rough(Z), angry(D).\nsibling(Z,X) :- curious(Z), tall(X), friend(X,W).\nred(Y) :- heavy(Y).\ndislikes(Z,X) :- tired(Z), smooth(X), sad(C).\nparent(X,Z) :- friendly(Z), bored(X), owns(Z,V).\nfriend(Z,Y) :- tired(Y), hungry(Z), likes(Y,W).\nfunny(Z) :- calm(Z), enemy(Z,W), hungry(W).\nbored(Z) :- excited(Z), friend(Z,W), strong(W).\nclean(X) :- new(X), red(X).\nhungry(X) :- friendly(X), friendly(X).\nparent(X,Y) :- happy(X), hungry(Y).\nheavy(X) :- new(X).\nstrong(X) :- excited(X).\nhappy(X) :- brave(X), strong(X).\nexcited(X) :- sad(X), tall(X).\nred(X) :- old(X), big(X).\nsoft(X) :- new(X).\nold(X) :- dirty(X), light(X).\ntired(X) :- tall(X).\nbusy(george).\nparent(george,bob).\nclever(frank).\nsad(bob).\nsibling(bob,george).\nowns(dave,pencil).\nlikes(eve,car).\nclever(carol).\ndislikes(frank,book).\nparent(alice,george).\nparent(carol,frank).\ntall(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is busy.\nFor all Z, if there exists D such that object Z is rough and person D is angry, then object Z is old.\nFor all X, Z, if there exists W such that person Z is curious and person X is tall and person X is a friend of person W, then person Z is a sibling of person X.\nFor all Y, if object Y is heavy, then object Y is red.\nFor all X, Z, if there exists C such that person Z is tired and object X is smooth and person C is sad, then person Z dislikes object X.\nFor all X, Z, if there exists V such that person Z is friendly and person X is bored and person Z owns object V, then person X is a parent of person Z.\nFor all Y, Z, if there exists W such that person Y is tired and person Z is hungry and person Y likes object W, then person Z is a friend of person Y.\nFor all Z, if there exists W such that person Z is calm and person Z is an enemy of person W and person W is hungry, then person Z is funny.\nFor all Z, if there exists W such that person Z is excited and person Z is a friend of person W and person W is strong, then person Z is bored.\nFor all X, if object X is new and object X is red, then object X is clean.\nFor all X, if person X is friendly and person X is friendly, then person X is hungry.\nFor all X, Y, if person X is happy and person Y is hungry, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is brave and person X is strong, then person X is happy.\nFor all X, if person X is sad and person X is tall, then person X is excited.\nFor all X, if object X is old and object X is big, then object X is red.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is dirty and object X is light, then object X is old.\nFor all X, if person X is tall, then person X is tired.\n\nAnd the following facts:\ngeorge is busy.\ngeorge is a parent of bob.\nfrank is clever.\nbob is sad.\nbob is a sibling of george.\ndave owns pencil.\neve likes car.\ncarol is clever.\nfrank dislikes book.\nalice is a parent of george.\ncarol is a parent of frank.\ncarol is tall.\n\nQUESTION:\nCould phone is big explain george is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 775,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(alice).",
    "c": "strong(X) :- funny(X).\nsoft(Y) :- small(Y), light(C).\nwet(X) :- old(X).\nowns(Y,X) :- weak(Y), wet(X).\nsmooth(Z) :- heavy(Z).\ncurious(Z) :- excited(Z), owns(Z,B), smooth(B).\nsad(X) :- hungry(X), owns(X,V), soft(V).\nclever(Y) :- happy(Y).\nsad(Z) :- busy(Z).\ntired(Y) :- calm(Y), enemy(Y,W), curious(W).\nhappy(Y) :- excited(Y).\nbrave(Z) :- tired(Z), parent(Z,V), curious(V).\nangry(Z) :- bored(Z).\nlikes(X,Y) :- wet(Y), clever(X).\nclean(Z) :- wet(Z), hungry(F).\nbrave(X) :- tall(X), parent(X,B), hungry(B).\nweak(X) :- brave(X).\nclever(X) :- excited(X), busy(X).\nclever(X) :- brave(X).\nnew(X) :- small(X).\nfunny(alice).\nhungry(alice).\nlikes(dave,phone).\nbrave(bob).\nhungry(george).\nlikes(eve,ball).\ndislikes(dave,book).\nweak(george).\nlikes(bob,book).\ndislikes(frank,apple).\ndislikes(bob,apple).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is strong.\nFor all Y, if there exists C such that object Y is small and object C is light, then object Y is soft.\nFor all X, if object X is old, then object X is wet.\nFor all X, Y, if person Y is weak and object X is wet, then person Y owns object X.\nFor all Z, if object Z is heavy, then object Z is smooth.\nFor all Z, if there exists B such that person Z is excited and person Z owns object B and object B is smooth, then person Z is curious.\nFor all X, if there exists V such that person X is hungry and person X owns object V and object V is soft, then person X is sad.\nFor all Y, if person Y is happy, then person Y is clever.\nFor all Z, if person Z is busy, then person Z is sad.\nFor all Y, if there exists W such that person Y is calm and person Y is an enemy of person W and person W is curious, then person Y is tired.\nFor all Y, if person Y is excited, then person Y is happy.\nFor all Z, if there exists V such that person Z is tired and person Z is a parent of person V and person V is curious, then person Z is brave.\nFor all Z, if person Z is bored, then person Z is angry.\nFor all X, Y, if object Y is wet and person X is clever, then person X likes object Y.\nFor all Z, if there exists F such that object Z is wet and person F is hungry, then object Z is clean.\nFor all X, if there exists B such that person X is tall and person X is a parent of person B and person B is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is excited and person X is busy, then person X is clever.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if object X is small, then object X is new.\n\nAnd the following facts:\nalice is funny.\nalice is hungry.\ndave likes phone.\nbob is brave.\ngeorge is hungry.\neve likes ball.\ndave dislikes book.\ngeorge is weak.\nbob likes book.\nfrank dislikes apple.\nbob dislikes apple.\ncar is smooth.\n\nQUESTION:\nIs alice is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 776,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(frank).",
    "c": "strong(X) :- funny(X).\nsoft(Y) :- small(Y), light(C).\nwet(X) :- old(X).\nowns(Y,X) :- weak(Y), wet(X).\nsmooth(Z) :- heavy(Z).\ncurious(Z) :- excited(Z), owns(Z,B), smooth(B).\nsad(X) :- hungry(X), owns(X,V), soft(V).\nclever(Y) :- happy(Y).\nsad(Z) :- busy(Z).\ntired(Y) :- calm(Y), enemy(Y,W), curious(W).\nhappy(Y) :- excited(Y).\nbrave(Z) :- tired(Z), parent(Z,V), curious(V).\nangry(Z) :- bored(Z).\nlikes(X,Y) :- wet(Y), clever(X).\nclean(Z) :- wet(Z), hungry(F).\nbrave(X) :- tall(X), parent(X,B), hungry(B).\nweak(X) :- brave(X).\nclever(X) :- excited(X), busy(X).\nclever(X) :- brave(X).\nnew(X) :- small(X).\nfunny(alice).\nhungry(alice).\nlikes(dave,phone).\nbrave(bob).\nhungry(george).\nlikes(eve,ball).\ndislikes(dave,book).\nweak(george).\nlikes(bob,book).\ndislikes(frank,apple).\ndislikes(bob,apple).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is strong.\nFor all Y, if there exists C such that object Y is small and object C is light, then object Y is soft.\nFor all X, if object X is old, then object X is wet.\nFor all X, Y, if person Y is weak and object X is wet, then person Y owns object X.\nFor all Z, if object Z is heavy, then object Z is smooth.\nFor all Z, if there exists B such that person Z is excited and person Z owns object B and object B is smooth, then person Z is curious.\nFor all X, if there exists V such that person X is hungry and person X owns object V and object V is soft, then person X is sad.\nFor all Y, if person Y is happy, then person Y is clever.\nFor all Z, if person Z is busy, then person Z is sad.\nFor all Y, if there exists W such that person Y is calm and person Y is an enemy of person W and person W is curious, then person Y is tired.\nFor all Y, if person Y is excited, then person Y is happy.\nFor all Z, if there exists V such that person Z is tired and person Z is a parent of person V and person V is curious, then person Z is brave.\nFor all Z, if person Z is bored, then person Z is angry.\nFor all X, Y, if object Y is wet and person X is clever, then person X likes object Y.\nFor all Z, if there exists F such that object Z is wet and person F is hungry, then object Z is clean.\nFor all X, if there exists B such that person X is tall and person X is a parent of person B and person B is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is excited and person X is busy, then person X is clever.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if object X is small, then object X is new.\n\nAnd the following facts:\nalice is funny.\nalice is hungry.\ndave likes phone.\nbob is brave.\ngeorge is hungry.\neve likes ball.\ndave dislikes book.\ngeorge is weak.\nbob likes book.\nfrank dislikes apple.\nbob dislikes apple.\ncar is smooth.\n\nQUESTION:\nIs frank is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 777,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(alice).",
    "c": "strong(X) :- funny(X).\nsoft(Y) :- small(Y), light(C).\nwet(X) :- old(X).\nowns(Y,X) :- weak(Y), wet(X).\nsmooth(Z) :- heavy(Z).\ncurious(Z) :- excited(Z), owns(Z,B), smooth(B).\nsad(X) :- hungry(X), owns(X,V), soft(V).\nclever(Y) :- happy(Y).\nsad(Z) :- busy(Z).\ntired(Y) :- calm(Y), enemy(Y,W), curious(W).\nhappy(Y) :- excited(Y).\nbrave(Z) :- tired(Z), parent(Z,V), curious(V).\nangry(Z) :- bored(Z).\nlikes(X,Y) :- wet(Y), clever(X).\nclean(Z) :- wet(Z), hungry(F).\nbrave(X) :- tall(X), parent(X,B), hungry(B).\nweak(X) :- brave(X).\nclever(X) :- excited(X), busy(X).\nclever(X) :- brave(X).\nnew(X) :- small(X).\nstrong(alice).\nhungry(alice).\nlikes(dave,phone).\nbrave(bob).\nhungry(george).\nlikes(eve,ball).\ndislikes(dave,book).\nweak(george).\nlikes(bob,book).\ndislikes(frank,apple).\ndislikes(bob,apple).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is strong.\nFor all Y, if there exists C such that object Y is small and object C is light, then object Y is soft.\nFor all X, if object X is old, then object X is wet.\nFor all X, Y, if person Y is weak and object X is wet, then person Y owns object X.\nFor all Z, if object Z is heavy, then object Z is smooth.\nFor all Z, if there exists B such that person Z is excited and person Z owns object B and object B is smooth, then person Z is curious.\nFor all X, if there exists V such that person X is hungry and person X owns object V and object V is soft, then person X is sad.\nFor all Y, if person Y is happy, then person Y is clever.\nFor all Z, if person Z is busy, then person Z is sad.\nFor all Y, if there exists W such that person Y is calm and person Y is an enemy of person W and person W is curious, then person Y is tired.\nFor all Y, if person Y is excited, then person Y is happy.\nFor all Z, if there exists V such that person Z is tired and person Z is a parent of person V and person V is curious, then person Z is brave.\nFor all Z, if person Z is bored, then person Z is angry.\nFor all X, Y, if object Y is wet and person X is clever, then person X likes object Y.\nFor all Z, if there exists F such that object Z is wet and person F is hungry, then object Z is clean.\nFor all X, if there exists B such that person X is tall and person X is a parent of person B and person B is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is excited and person X is busy, then person X is clever.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if object X is small, then object X is new.\n\nAnd the following facts:\nalice is strong.\nalice is hungry.\ndave likes phone.\nbob is brave.\ngeorge is hungry.\neve likes ball.\ndave dislikes book.\ngeorge is weak.\nbob likes book.\nfrank dislikes apple.\nbob dislikes apple.\ncar is smooth.\n\nQUESTION:\nCould alice is funny explain alice is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 778,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(phone).",
    "c": "strong(X) :- funny(X).\nsoft(Y) :- small(Y), light(C).\nwet(X) :- old(X).\nowns(Y,X) :- weak(Y), wet(X).\nsmooth(Z) :- heavy(Z).\ncurious(Z) :- excited(Z), owns(Z,B), smooth(B).\nsad(X) :- hungry(X), owns(X,V), soft(V).\nclever(Y) :- happy(Y).\nsad(Z) :- busy(Z).\ntired(Y) :- calm(Y), enemy(Y,W), curious(W).\nhappy(Y) :- excited(Y).\nbrave(Z) :- tired(Z), parent(Z,V), curious(V).\nangry(Z) :- bored(Z).\nlikes(X,Y) :- wet(Y), clever(X).\nclean(Z) :- wet(Z), hungry(F).\nbrave(X) :- tall(X), parent(X,B), hungry(B).\nweak(X) :- brave(X).\nclever(X) :- excited(X), busy(X).\nclever(X) :- brave(X).\nnew(X) :- small(X).\nstrong(alice).\nhungry(alice).\nlikes(dave,phone).\nbrave(bob).\nhungry(george).\nlikes(eve,ball).\ndislikes(dave,book).\nweak(george).\nlikes(bob,book).\ndislikes(frank,apple).\ndislikes(bob,apple).\nsmooth(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is strong.\nFor all Y, if there exists C such that object Y is small and object C is light, then object Y is soft.\nFor all X, if object X is old, then object X is wet.\nFor all X, Y, if person Y is weak and object X is wet, then person Y owns object X.\nFor all Z, if object Z is heavy, then object Z is smooth.\nFor all Z, if there exists B such that person Z is excited and person Z owns object B and object B is smooth, then person Z is curious.\nFor all X, if there exists V such that person X is hungry and person X owns object V and object V is soft, then person X is sad.\nFor all Y, if person Y is happy, then person Y is clever.\nFor all Z, if person Z is busy, then person Z is sad.\nFor all Y, if there exists W such that person Y is calm and person Y is an enemy of person W and person W is curious, then person Y is tired.\nFor all Y, if person Y is excited, then person Y is happy.\nFor all Z, if there exists V such that person Z is tired and person Z is a parent of person V and person V is curious, then person Z is brave.\nFor all Z, if person Z is bored, then person Z is angry.\nFor all X, Y, if object Y is wet and person X is clever, then person X likes object Y.\nFor all Z, if there exists F such that object Z is wet and person F is hungry, then object Z is clean.\nFor all X, if there exists B such that person X is tall and person X is a parent of person B and person B is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is weak.\nFor all X, if person X is excited and person X is busy, then person X is clever.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if object X is small, then object X is new.\n\nAnd the following facts:\nalice is strong.\nalice is hungry.\ndave likes phone.\nbob is brave.\ngeorge is hungry.\neve likes ball.\ndave dislikes book.\ngeorge is weak.\nbob likes book.\nfrank dislikes apple.\nbob dislikes apple.\ncar is smooth.\n\nQUESTION:\nCould phone is hard explain alice is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 779,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(bob).",
    "c": "sad(X) :- hungry(X).\nred(Z) :- big(Z), owns(A,Z), bored(A).\ndirty(Z) :- small(Z), likes(W,Z), funny(W).\nowns(Y,Z) :- strong(Y), hard(Z), friend(Y,U).\ndirty(X) :- soft(X), small(C).\nsoft(Y) :- smooth(Y).\nred(Y) :- clean(Y), old(A).\ncurious(Y) :- angry(Y).\nlikes(Y,Z) :- bored(Y), wet(Z).\nbored(Z) :- excited(Z), parent(Z,U), tall(U).\ncalm(Y) :- busy(Y).\nlikes(X,Z) :- hard(Z), happy(X), sibling(X,U).\nlight(X) :- rough(X).\nred(X) :- big(X), wet(X).\ncalm(X) :- friendly(X).\nstrong(X) :- friendly(X).\nfriend(X,Y) :- bored(X), busy(Y).\nexcited(X) :- friendly(X).\nsmooth(X) :- heavy(X).\nhappy(X) :- calm(X), brave(X).\nhungry(bob).\nenemy(alice,bob).\ndirty(phone).\nfriend(george,eve).\nsibling(dave,carol).\nowns(frank,pencil).\nenemy(bob,carol).\nnew(pencil).\nowns(dave,phone).\nparent(carol,george).\nowns(carol,car).\nlikes(alice,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is sad.\nFor all Z, if there exists A such that object Z is big and person A owns object Z and person A is bored, then object Z is red.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is funny, then object Z is dirty.\nFor all Y, Z, if there exists U such that person Y is strong and object Z is hard and person Y is a friend of person U, then person Y owns object Z.\nFor all X, if there exists C such that object X is soft and object C is small, then object X is dirty.\nFor all Y, if object Y is smooth, then object Y is soft.\nFor all Y, if there exists A such that object Y is clean and object A is old, then object Y is red.\nFor all Y, if person Y is angry, then person Y is curious.\nFor all Y, Z, if person Y is bored and object Z is wet, then person Y likes object Z.\nFor all Z, if there exists U such that person Z is excited and person Z is a parent of person U and person U is tall, then person Z is bored.\nFor all Y, if person Y is busy, then person Y is calm.\nFor all X, Z, if there exists U such that object Z is hard and person X is happy and person X is a sibling of person U, then person X likes object Z.\nFor all X, if object X is rough, then object X is light.\nFor all X, if object X is big and object X is wet, then object X is red.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, Y, if person X is bored and person Y is busy, then person X is a friend of person Y.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if person X is calm and person X is brave, then person X is happy.\n\nAnd the following facts:\nbob is hungry.\nalice is an enemy of bob.\nphone is dirty.\ngeorge is a friend of eve.\ndave is a sibling of carol.\nfrank owns pencil.\nbob is an enemy of carol.\npencil is new.\ndave owns phone.\ncarol is a parent of george.\ncarol owns car.\nalice likes book.\n\nQUESTION:\nIs bob is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 780,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(frank).",
    "c": "sad(X) :- hungry(X).\nred(Z) :- big(Z), owns(A,Z), bored(A).\ndirty(Z) :- small(Z), likes(W,Z), funny(W).\nowns(Y,Z) :- strong(Y), hard(Z), friend(Y,U).\ndirty(X) :- soft(X), small(C).\nsoft(Y) :- smooth(Y).\nred(Y) :- clean(Y), old(A).\ncurious(Y) :- angry(Y).\nlikes(Y,Z) :- bored(Y), wet(Z).\nbored(Z) :- excited(Z), parent(Z,U), tall(U).\ncalm(Y) :- busy(Y).\nlikes(X,Z) :- hard(Z), happy(X), sibling(X,U).\nlight(X) :- rough(X).\nred(X) :- big(X), wet(X).\ncalm(X) :- friendly(X).\nstrong(X) :- friendly(X).\nfriend(X,Y) :- bored(X), busy(Y).\nexcited(X) :- friendly(X).\nsmooth(X) :- heavy(X).\nhappy(X) :- calm(X), brave(X).\nhungry(bob).\nenemy(alice,bob).\ndirty(phone).\nfriend(george,eve).\nsibling(dave,carol).\nowns(frank,pencil).\nenemy(bob,carol).\nnew(pencil).\nowns(dave,phone).\nparent(carol,george).\nowns(carol,car).\nlikes(alice,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is sad.\nFor all Z, if there exists A such that object Z is big and person A owns object Z and person A is bored, then object Z is red.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is funny, then object Z is dirty.\nFor all Y, Z, if there exists U such that person Y is strong and object Z is hard and person Y is a friend of person U, then person Y owns object Z.\nFor all X, if there exists C such that object X is soft and object C is small, then object X is dirty.\nFor all Y, if object Y is smooth, then object Y is soft.\nFor all Y, if there exists A such that object Y is clean and object A is old, then object Y is red.\nFor all Y, if person Y is angry, then person Y is curious.\nFor all Y, Z, if person Y is bored and object Z is wet, then person Y likes object Z.\nFor all Z, if there exists U such that person Z is excited and person Z is a parent of person U and person U is tall, then person Z is bored.\nFor all Y, if person Y is busy, then person Y is calm.\nFor all X, Z, if there exists U such that object Z is hard and person X is happy and person X is a sibling of person U, then person X likes object Z.\nFor all X, if object X is rough, then object X is light.\nFor all X, if object X is big and object X is wet, then object X is red.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, Y, if person X is bored and person Y is busy, then person X is a friend of person Y.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if person X is calm and person X is brave, then person X is happy.\n\nAnd the following facts:\nbob is hungry.\nalice is an enemy of bob.\nphone is dirty.\ngeorge is a friend of eve.\ndave is a sibling of carol.\nfrank owns pencil.\nbob is an enemy of carol.\npencil is new.\ndave owns phone.\ncarol is a parent of george.\ncarol owns car.\nalice likes book.\n\nQUESTION:\nIs frank is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 781,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "sad(X) :- hungry(X).\nred(Z) :- big(Z), owns(A,Z), bored(A).\ndirty(Z) :- small(Z), likes(W,Z), funny(W).\nowns(Y,Z) :- strong(Y), hard(Z), friend(Y,U).\ndirty(X) :- soft(X), small(C).\nsoft(Y) :- smooth(Y).\nred(Y) :- clean(Y), old(A).\ncurious(Y) :- angry(Y).\nlikes(Y,Z) :- bored(Y), wet(Z).\nbored(Z) :- excited(Z), parent(Z,U), tall(U).\ncalm(Y) :- busy(Y).\nlikes(X,Z) :- hard(Z), happy(X), sibling(X,U).\nlight(X) :- rough(X).\nred(X) :- big(X), wet(X).\ncalm(X) :- friendly(X).\nstrong(X) :- friendly(X).\nfriend(X,Y) :- bored(X), busy(Y).\nexcited(X) :- friendly(X).\nsmooth(X) :- heavy(X).\nhappy(X) :- calm(X), brave(X).\nsad(bob).\nenemy(alice,bob).\ndirty(phone).\nfriend(george,eve).\nsibling(dave,carol).\nowns(frank,pencil).\nenemy(bob,carol).\nnew(pencil).\nowns(dave,phone).\nparent(carol,george).\nowns(carol,car).\nlikes(alice,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is sad.\nFor all Z, if there exists A such that object Z is big and person A owns object Z and person A is bored, then object Z is red.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is funny, then object Z is dirty.\nFor all Y, Z, if there exists U such that person Y is strong and object Z is hard and person Y is a friend of person U, then person Y owns object Z.\nFor all X, if there exists C such that object X is soft and object C is small, then object X is dirty.\nFor all Y, if object Y is smooth, then object Y is soft.\nFor all Y, if there exists A such that object Y is clean and object A is old, then object Y is red.\nFor all Y, if person Y is angry, then person Y is curious.\nFor all Y, Z, if person Y is bored and object Z is wet, then person Y likes object Z.\nFor all Z, if there exists U such that person Z is excited and person Z is a parent of person U and person U is tall, then person Z is bored.\nFor all Y, if person Y is busy, then person Y is calm.\nFor all X, Z, if there exists U such that object Z is hard and person X is happy and person X is a sibling of person U, then person X likes object Z.\nFor all X, if object X is rough, then object X is light.\nFor all X, if object X is big and object X is wet, then object X is red.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, Y, if person X is bored and person Y is busy, then person X is a friend of person Y.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if person X is calm and person X is brave, then person X is happy.\n\nAnd the following facts:\nbob is sad.\nalice is an enemy of bob.\nphone is dirty.\ngeorge is a friend of eve.\ndave is a sibling of carol.\nfrank owns pencil.\nbob is an enemy of carol.\npencil is new.\ndave owns phone.\ncarol is a parent of george.\ncarol owns car.\nalice likes book.\n\nQUESTION:\nCould bob is hungry explain bob is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 782,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "sad(X) :- hungry(X).\nred(Z) :- big(Z), owns(A,Z), bored(A).\ndirty(Z) :- small(Z), likes(W,Z), funny(W).\nowns(Y,Z) :- strong(Y), hard(Z), friend(Y,U).\ndirty(X) :- soft(X), small(C).\nsoft(Y) :- smooth(Y).\nred(Y) :- clean(Y), old(A).\ncurious(Y) :- angry(Y).\nlikes(Y,Z) :- bored(Y), wet(Z).\nbored(Z) :- excited(Z), parent(Z,U), tall(U).\ncalm(Y) :- busy(Y).\nlikes(X,Z) :- hard(Z), happy(X), sibling(X,U).\nlight(X) :- rough(X).\nred(X) :- big(X), wet(X).\ncalm(X) :- friendly(X).\nstrong(X) :- friendly(X).\nfriend(X,Y) :- bored(X), busy(Y).\nexcited(X) :- friendly(X).\nsmooth(X) :- heavy(X).\nhappy(X) :- calm(X), brave(X).\nsad(bob).\nenemy(alice,bob).\ndirty(phone).\nfriend(george,eve).\nsibling(dave,carol).\nowns(frank,pencil).\nenemy(bob,carol).\nnew(pencil).\nowns(dave,phone).\nparent(carol,george).\nowns(carol,car).\nlikes(alice,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is sad.\nFor all Z, if there exists A such that object Z is big and person A owns object Z and person A is bored, then object Z is red.\nFor all Z, if there exists W such that object Z is small and person W likes object Z and person W is funny, then object Z is dirty.\nFor all Y, Z, if there exists U such that person Y is strong and object Z is hard and person Y is a friend of person U, then person Y owns object Z.\nFor all X, if there exists C such that object X is soft and object C is small, then object X is dirty.\nFor all Y, if object Y is smooth, then object Y is soft.\nFor all Y, if there exists A such that object Y is clean and object A is old, then object Y is red.\nFor all Y, if person Y is angry, then person Y is curious.\nFor all Y, Z, if person Y is bored and object Z is wet, then person Y likes object Z.\nFor all Z, if there exists U such that person Z is excited and person Z is a parent of person U and person U is tall, then person Z is bored.\nFor all Y, if person Y is busy, then person Y is calm.\nFor all X, Z, if there exists U such that object Z is hard and person X is happy and person X is a sibling of person U, then person X likes object Z.\nFor all X, if object X is rough, then object X is light.\nFor all X, if object X is big and object X is wet, then object X is red.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, Y, if person X is bored and person Y is busy, then person X is a friend of person Y.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if person X is calm and person X is brave, then person X is happy.\n\nAnd the following facts:\nbob is sad.\nalice is an enemy of bob.\nphone is dirty.\ngeorge is a friend of eve.\ndave is a sibling of carol.\nfrank owns pencil.\nbob is an enemy of carol.\npencil is new.\ndave owns phone.\ncarol is a parent of george.\ncarol owns car.\nalice likes book.\n\nQUESTION:\nCould phone is soft explain bob is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 783,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "new(X) :- hard(X).\nsmall(X) :- new(X).\nnew(X) :- small(X).\nbig(X) :- new(X).\nclean(X) :- big(X).\ndislikes(Y,X) :- tall(Y), smooth(X).\ncalm(X) :- hungry(X), friend(X,A), tall(A).\nstrong(Z) :- sad(Z).\nangry(X) :- tall(X).\nfunny(X) :- happy(X).\nfunny(Y) :- busy(Y), parent(Y,A), tired(A).\nhappy(Z) :- busy(Z).\nheavy(Y) :- old(Y), likes(B,Y), funny(B).\nexcited(X) :- strong(X).\nlight(Z) :- heavy(Z), likes(A,Z), happy(A).\nfriend(Y,Z) :- bored(Y), funny(Z).\ntired(Z) :- busy(Z).\nwet(X) :- smooth(X), dislikes(V,X), funny(V).\nfunny(Z) :- curious(Z).\nowns(X,Y) :- soft(Y), hungry(X).\nhard(ball).\nfunny(george).\ntired(alice).\nfunny(bob).\nsibling(bob,frank).\nlikes(alice,car).\nparent(frank,alice).\nowns(george,phone).\nsad(bob).\nparent(alice,george).\ntall(bob).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, Y, if person Y is tall and object X is smooth, then person Y dislikes object X.\nFor all X, if there exists A such that person X is hungry and person X is a friend of person A and person A is tall, then person X is calm.\nFor all Z, if person Z is sad, then person Z is strong.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is happy, then person X is funny.\nFor all Y, if there exists A such that person Y is busy and person Y is a parent of person A and person A is tired, then person Y is funny.\nFor all Z, if person Z is busy, then person Z is happy.\nFor all Y, if there exists B such that object Y is old and person B likes object Y and person B is funny, then object Y is heavy.\nFor all X, if person X is strong, then person X is excited.\nFor all Z, if there exists A such that object Z is heavy and person A likes object Z and person A is happy, then object Z is light.\nFor all Y, Z, if person Y is bored and person Z is funny, then person Y is a friend of person Z.\nFor all Z, if person Z is busy, then person Z is tired.\nFor all X, if there exists V such that object X is smooth and person V dislikes object X and person V is funny, then object X is wet.\nFor all Z, if person Z is curious, then person Z is funny.\nFor all X, Y, if object Y is soft and person X is hungry, then person X owns object Y.\n\nAnd the following facts:\nball is hard.\ngeorge is funny.\nalice is tired.\nbob is funny.\nbob is a sibling of frank.\nalice likes car.\nfrank is a parent of alice.\ngeorge owns phone.\nbob is sad.\nalice is a parent of george.\nbob is tall.\neve likes apple.\n\nQUESTION:\nIs ball is clean true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 784,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(carol).",
    "c": "new(X) :- hard(X).\nsmall(X) :- new(X).\nnew(X) :- small(X).\nbig(X) :- new(X).\nclean(X) :- big(X).\ndislikes(Y,X) :- tall(Y), smooth(X).\ncalm(X) :- hungry(X), friend(X,A), tall(A).\nstrong(Z) :- sad(Z).\nangry(X) :- tall(X).\nfunny(X) :- happy(X).\nfunny(Y) :- busy(Y), parent(Y,A), tired(A).\nhappy(Z) :- busy(Z).\nheavy(Y) :- old(Y), likes(B,Y), funny(B).\nexcited(X) :- strong(X).\nlight(Z) :- heavy(Z), likes(A,Z), happy(A).\nfriend(Y,Z) :- bored(Y), funny(Z).\ntired(Z) :- busy(Z).\nwet(X) :- smooth(X), dislikes(V,X), funny(V).\nfunny(Z) :- curious(Z).\nowns(X,Y) :- soft(Y), hungry(X).\nhard(ball).\nfunny(george).\ntired(alice).\nfunny(bob).\nsibling(bob,frank).\nlikes(alice,car).\nparent(frank,alice).\nowns(george,phone).\nsad(bob).\nparent(alice,george).\ntall(bob).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, Y, if person Y is tall and object X is smooth, then person Y dislikes object X.\nFor all X, if there exists A such that person X is hungry and person X is a friend of person A and person A is tall, then person X is calm.\nFor all Z, if person Z is sad, then person Z is strong.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is happy, then person X is funny.\nFor all Y, if there exists A such that person Y is busy and person Y is a parent of person A and person A is tired, then person Y is funny.\nFor all Z, if person Z is busy, then person Z is happy.\nFor all Y, if there exists B such that object Y is old and person B likes object Y and person B is funny, then object Y is heavy.\nFor all X, if person X is strong, then person X is excited.\nFor all Z, if there exists A such that object Z is heavy and person A likes object Z and person A is happy, then object Z is light.\nFor all Y, Z, if person Y is bored and person Z is funny, then person Y is a friend of person Z.\nFor all Z, if person Z is busy, then person Z is tired.\nFor all X, if there exists V such that object X is smooth and person V dislikes object X and person V is funny, then object X is wet.\nFor all Z, if person Z is curious, then person Z is funny.\nFor all X, Y, if object Y is soft and person X is hungry, then person X owns object Y.\n\nAnd the following facts:\nball is hard.\ngeorge is funny.\nalice is tired.\nbob is funny.\nbob is a sibling of frank.\nalice likes car.\nfrank is a parent of alice.\ngeorge owns phone.\nbob is sad.\nalice is a parent of george.\nbob is tall.\neve likes apple.\n\nQUESTION:\nIs carol is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 785,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(ball).",
    "c": "new(X) :- hard(X).\nsmall(X) :- new(X).\nnew(X) :- small(X).\nbig(X) :- new(X).\nclean(X) :- big(X).\ndislikes(Y,X) :- tall(Y), smooth(X).\ncalm(X) :- hungry(X), friend(X,A), tall(A).\nstrong(Z) :- sad(Z).\nangry(X) :- tall(X).\nfunny(X) :- happy(X).\nfunny(Y) :- busy(Y), parent(Y,A), tired(A).\nhappy(Z) :- busy(Z).\nheavy(Y) :- old(Y), likes(B,Y), funny(B).\nexcited(X) :- strong(X).\nlight(Z) :- heavy(Z), likes(A,Z), happy(A).\nfriend(Y,Z) :- bored(Y), funny(Z).\ntired(Z) :- busy(Z).\nwet(X) :- smooth(X), dislikes(V,X), funny(V).\nfunny(Z) :- curious(Z).\nowns(X,Y) :- soft(Y), hungry(X).\nclean(ball).\nfunny(george).\ntired(alice).\nfunny(bob).\nsibling(bob,frank).\nlikes(alice,car).\nparent(frank,alice).\nowns(george,phone).\nsad(bob).\nparent(alice,george).\ntall(bob).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, Y, if person Y is tall and object X is smooth, then person Y dislikes object X.\nFor all X, if there exists A such that person X is hungry and person X is a friend of person A and person A is tall, then person X is calm.\nFor all Z, if person Z is sad, then person Z is strong.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is happy, then person X is funny.\nFor all Y, if there exists A such that person Y is busy and person Y is a parent of person A and person A is tired, then person Y is funny.\nFor all Z, if person Z is busy, then person Z is happy.\nFor all Y, if there exists B such that object Y is old and person B likes object Y and person B is funny, then object Y is heavy.\nFor all X, if person X is strong, then person X is excited.\nFor all Z, if there exists A such that object Z is heavy and person A likes object Z and person A is happy, then object Z is light.\nFor all Y, Z, if person Y is bored and person Z is funny, then person Y is a friend of person Z.\nFor all Z, if person Z is busy, then person Z is tired.\nFor all X, if there exists V such that object X is smooth and person V dislikes object X and person V is funny, then object X is wet.\nFor all Z, if person Z is curious, then person Z is funny.\nFor all X, Y, if object Y is soft and person X is hungry, then person X owns object Y.\n\nAnd the following facts:\nball is clean.\ngeorge is funny.\nalice is tired.\nbob is funny.\nbob is a sibling of frank.\nalice likes car.\nfrank is a parent of alice.\ngeorge owns phone.\nbob is sad.\nalice is a parent of george.\nbob is tall.\neve likes apple.\n\nQUESTION:\nCould ball is hard explain ball is clean?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 786,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(pencil).",
    "c": "new(X) :- hard(X).\nsmall(X) :- new(X).\nnew(X) :- small(X).\nbig(X) :- new(X).\nclean(X) :- big(X).\ndislikes(Y,X) :- tall(Y), smooth(X).\ncalm(X) :- hungry(X), friend(X,A), tall(A).\nstrong(Z) :- sad(Z).\nangry(X) :- tall(X).\nfunny(X) :- happy(X).\nfunny(Y) :- busy(Y), parent(Y,A), tired(A).\nhappy(Z) :- busy(Z).\nheavy(Y) :- old(Y), likes(B,Y), funny(B).\nexcited(X) :- strong(X).\nlight(Z) :- heavy(Z), likes(A,Z), happy(A).\nfriend(Y,Z) :- bored(Y), funny(Z).\ntired(Z) :- busy(Z).\nwet(X) :- smooth(X), dislikes(V,X), funny(V).\nfunny(Z) :- curious(Z).\nowns(X,Y) :- soft(Y), hungry(X).\nclean(ball).\nfunny(george).\ntired(alice).\nfunny(bob).\nsibling(bob,frank).\nlikes(alice,car).\nparent(frank,alice).\nowns(george,phone).\nsad(bob).\nparent(alice,george).\ntall(bob).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, Y, if person Y is tall and object X is smooth, then person Y dislikes object X.\nFor all X, if there exists A such that person X is hungry and person X is a friend of person A and person A is tall, then person X is calm.\nFor all Z, if person Z is sad, then person Z is strong.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is happy, then person X is funny.\nFor all Y, if there exists A such that person Y is busy and person Y is a parent of person A and person A is tired, then person Y is funny.\nFor all Z, if person Z is busy, then person Z is happy.\nFor all Y, if there exists B such that object Y is old and person B likes object Y and person B is funny, then object Y is heavy.\nFor all X, if person X is strong, then person X is excited.\nFor all Z, if there exists A such that object Z is heavy and person A likes object Z and person A is happy, then object Z is light.\nFor all Y, Z, if person Y is bored and person Z is funny, then person Y is a friend of person Z.\nFor all Z, if person Z is busy, then person Z is tired.\nFor all X, if there exists V such that object X is smooth and person V dislikes object X and person V is funny, then object X is wet.\nFor all Z, if person Z is curious, then person Z is funny.\nFor all X, Y, if object Y is soft and person X is hungry, then person X owns object Y.\n\nAnd the following facts:\nball is clean.\ngeorge is funny.\nalice is tired.\nbob is funny.\nbob is a sibling of frank.\nalice likes car.\nfrank is a parent of alice.\ngeorge owns phone.\nbob is sad.\nalice is a parent of george.\nbob is tall.\neve likes apple.\n\nQUESTION:\nCould pencil is big explain ball is clean?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 787,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(car).",
    "c": "small(X) :- old(X).\nold(X) :- small(X).\nred(X) :- old(X).\nbig(X) :- red(X).\nnew(X) :- big(X).\nlight(Y) :- heavy(Y), dislikes(U,Y), busy(U).\nsibling(Z,Y) :- tired(Y), weak(Z), sibling(Z,V).\nsmooth(X) :- heavy(X).\nclever(Z) :- friendly(Z).\nhungry(X) :- tired(X).\nclever(Z) :- calm(Z), enemy(Z,W), bored(W).\nparent(Z,X) :- calm(Z), clever(X), sibling(X,U).\nbusy(Y) :- clever(Y).\nowns(Z,Y) :- hard(Y), clever(Z), sad(E).\nhard(X) :- heavy(X), likes(U,X), sad(U).\ncurious(X) :- bored(X), sad(X).\ntired(X) :- calm(X).\nhungry(X) :- tired(X).\nexcited(X) :- angry(X), bored(X).\nheavy(X) :- light(X).\nold(car).\ndirty(car).\nsibling(george,alice).\nsibling(frank,bob).\ndislikes(alice,car).\nenemy(george,alice).\nheavy(book).\ndirty(book).\nfriend(carol,george).\nparent(george,alice).\nsibling(alice,eve).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all Y, if there exists U such that object Y is heavy and person U dislikes object Y and person U is busy, then object Y is light.\nFor all Y, Z, if there exists V such that person Y is tired and person Z is weak and person Z is a sibling of person V, then person Z is a sibling of person Y.\nFor all X, if object X is heavy, then object X is smooth.\nFor all Z, if person Z is friendly, then person Z is clever.\nFor all X, if person X is tired, then person X is hungry.\nFor all Z, if there exists W such that person Z is calm and person Z is an enemy of person W and person W is bored, then person Z is clever.\nFor all X, Z, if there exists U such that person Z is calm and person X is clever and person X is a sibling of person U, then person Z is a parent of person X.\nFor all Y, if person Y is clever, then person Y is busy.\nFor all Y, Z, if there exists E such that object Y is hard and person Z is clever and person E is sad, then person Z owns object Y.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is sad, then object X is hard.\nFor all X, if person X is bored and person X is sad, then person X is curious.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is angry and person X is bored, then person X is excited.\nFor all X, if object X is light, then object X is heavy.\n\nAnd the following facts:\ncar is old.\ncar is dirty.\ngeorge is a sibling of alice.\nfrank is a sibling of bob.\nalice dislikes car.\ngeorge is an enemy of alice.\nbook is heavy.\nbook is dirty.\ncarol is a friend of george.\ngeorge is a parent of alice.\nalice is a sibling of eve.\ndave is a parent of carol.\n\nQUESTION:\nIs car is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 788,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(carol).",
    "c": "small(X) :- old(X).\nold(X) :- small(X).\nred(X) :- old(X).\nbig(X) :- red(X).\nnew(X) :- big(X).\nlight(Y) :- heavy(Y), dislikes(U,Y), busy(U).\nsibling(Z,Y) :- tired(Y), weak(Z), sibling(Z,V).\nsmooth(X) :- heavy(X).\nclever(Z) :- friendly(Z).\nhungry(X) :- tired(X).\nclever(Z) :- calm(Z), enemy(Z,W), bored(W).\nparent(Z,X) :- calm(Z), clever(X), sibling(X,U).\nbusy(Y) :- clever(Y).\nowns(Z,Y) :- hard(Y), clever(Z), sad(E).\nhard(X) :- heavy(X), likes(U,X), sad(U).\ncurious(X) :- bored(X), sad(X).\ntired(X) :- calm(X).\nhungry(X) :- tired(X).\nexcited(X) :- angry(X), bored(X).\nheavy(X) :- light(X).\nold(car).\ndirty(car).\nsibling(george,alice).\nsibling(frank,bob).\ndislikes(alice,car).\nenemy(george,alice).\nheavy(book).\ndirty(book).\nfriend(carol,george).\nparent(george,alice).\nsibling(alice,eve).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all Y, if there exists U such that object Y is heavy and person U dislikes object Y and person U is busy, then object Y is light.\nFor all Y, Z, if there exists V such that person Y is tired and person Z is weak and person Z is a sibling of person V, then person Z is a sibling of person Y.\nFor all X, if object X is heavy, then object X is smooth.\nFor all Z, if person Z is friendly, then person Z is clever.\nFor all X, if person X is tired, then person X is hungry.\nFor all Z, if there exists W such that person Z is calm and person Z is an enemy of person W and person W is bored, then person Z is clever.\nFor all X, Z, if there exists U such that person Z is calm and person X is clever and person X is a sibling of person U, then person Z is a parent of person X.\nFor all Y, if person Y is clever, then person Y is busy.\nFor all Y, Z, if there exists E such that object Y is hard and person Z is clever and person E is sad, then person Z owns object Y.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is sad, then object X is hard.\nFor all X, if person X is bored and person X is sad, then person X is curious.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is angry and person X is bored, then person X is excited.\nFor all X, if object X is light, then object X is heavy.\n\nAnd the following facts:\ncar is old.\ncar is dirty.\ngeorge is a sibling of alice.\nfrank is a sibling of bob.\nalice dislikes car.\ngeorge is an enemy of alice.\nbook is heavy.\nbook is dirty.\ncarol is a friend of george.\ngeorge is a parent of alice.\nalice is a sibling of eve.\ndave is a parent of carol.\n\nQUESTION:\nIs carol is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 789,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(car).",
    "c": "small(X) :- old(X).\nold(X) :- small(X).\nred(X) :- old(X).\nbig(X) :- red(X).\nnew(X) :- big(X).\nlight(Y) :- heavy(Y), dislikes(U,Y), busy(U).\nsibling(Z,Y) :- tired(Y), weak(Z), sibling(Z,V).\nsmooth(X) :- heavy(X).\nclever(Z) :- friendly(Z).\nhungry(X) :- tired(X).\nclever(Z) :- calm(Z), enemy(Z,W), bored(W).\nparent(Z,X) :- calm(Z), clever(X), sibling(X,U).\nbusy(Y) :- clever(Y).\nowns(Z,Y) :- hard(Y), clever(Z), sad(E).\nhard(X) :- heavy(X), likes(U,X), sad(U).\ncurious(X) :- bored(X), sad(X).\ntired(X) :- calm(X).\nhungry(X) :- tired(X).\nexcited(X) :- angry(X), bored(X).\nheavy(X) :- light(X).\nnew(car).\ndirty(car).\nsibling(george,alice).\nsibling(frank,bob).\ndislikes(alice,car).\nenemy(george,alice).\nheavy(book).\ndirty(book).\nfriend(carol,george).\nparent(george,alice).\nsibling(alice,eve).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all Y, if there exists U such that object Y is heavy and person U dislikes object Y and person U is busy, then object Y is light.\nFor all Y, Z, if there exists V such that person Y is tired and person Z is weak and person Z is a sibling of person V, then person Z is a sibling of person Y.\nFor all X, if object X is heavy, then object X is smooth.\nFor all Z, if person Z is friendly, then person Z is clever.\nFor all X, if person X is tired, then person X is hungry.\nFor all Z, if there exists W such that person Z is calm and person Z is an enemy of person W and person W is bored, then person Z is clever.\nFor all X, Z, if there exists U such that person Z is calm and person X is clever and person X is a sibling of person U, then person Z is a parent of person X.\nFor all Y, if person Y is clever, then person Y is busy.\nFor all Y, Z, if there exists E such that object Y is hard and person Z is clever and person E is sad, then person Z owns object Y.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is sad, then object X is hard.\nFor all X, if person X is bored and person X is sad, then person X is curious.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is angry and person X is bored, then person X is excited.\nFor all X, if object X is light, then object X is heavy.\n\nAnd the following facts:\ncar is new.\ncar is dirty.\ngeorge is a sibling of alice.\nfrank is a sibling of bob.\nalice dislikes car.\ngeorge is an enemy of alice.\nbook is heavy.\nbook is dirty.\ncarol is a friend of george.\ngeorge is a parent of alice.\nalice is a sibling of eve.\ndave is a parent of carol.\n\nQUESTION:\nCould car is old explain car is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 790,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(alice).",
    "c": "small(X) :- old(X).\nold(X) :- small(X).\nred(X) :- old(X).\nbig(X) :- red(X).\nnew(X) :- big(X).\nlight(Y) :- heavy(Y), dislikes(U,Y), busy(U).\nsibling(Z,Y) :- tired(Y), weak(Z), sibling(Z,V).\nsmooth(X) :- heavy(X).\nclever(Z) :- friendly(Z).\nhungry(X) :- tired(X).\nclever(Z) :- calm(Z), enemy(Z,W), bored(W).\nparent(Z,X) :- calm(Z), clever(X), sibling(X,U).\nbusy(Y) :- clever(Y).\nowns(Z,Y) :- hard(Y), clever(Z), sad(E).\nhard(X) :- heavy(X), likes(U,X), sad(U).\ncurious(X) :- bored(X), sad(X).\ntired(X) :- calm(X).\nhungry(X) :- tired(X).\nexcited(X) :- angry(X), bored(X).\nheavy(X) :- light(X).\nnew(car).\ndirty(car).\nsibling(george,alice).\nsibling(frank,bob).\ndislikes(alice,car).\nenemy(george,alice).\nheavy(book).\ndirty(book).\nfriend(carol,george).\nparent(george,alice).\nsibling(alice,eve).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all Y, if there exists U such that object Y is heavy and person U dislikes object Y and person U is busy, then object Y is light.\nFor all Y, Z, if there exists V such that person Y is tired and person Z is weak and person Z is a sibling of person V, then person Z is a sibling of person Y.\nFor all X, if object X is heavy, then object X is smooth.\nFor all Z, if person Z is friendly, then person Z is clever.\nFor all X, if person X is tired, then person X is hungry.\nFor all Z, if there exists W such that person Z is calm and person Z is an enemy of person W and person W is bored, then person Z is clever.\nFor all X, Z, if there exists U such that person Z is calm and person X is clever and person X is a sibling of person U, then person Z is a parent of person X.\nFor all Y, if person Y is clever, then person Y is busy.\nFor all Y, Z, if there exists E such that object Y is hard and person Z is clever and person E is sad, then person Z owns object Y.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is sad, then object X is hard.\nFor all X, if person X is bored and person X is sad, then person X is curious.\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is angry and person X is bored, then person X is excited.\nFor all X, if object X is light, then object X is heavy.\n\nAnd the following facts:\ncar is new.\ncar is dirty.\ngeorge is a sibling of alice.\nfrank is a sibling of bob.\nalice dislikes car.\ngeorge is an enemy of alice.\nbook is heavy.\nbook is dirty.\ncarol is a friend of george.\ngeorge is a parent of alice.\nalice is a sibling of eve.\ndave is a parent of carol.\n\nQUESTION:\nCould alice is weak explain car is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 791,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "calm(alice).",
    "c": "angry(X) :- weak(X).\nsad(X) :- angry(X).\ntall(X) :- sad(X).\nhappy(X) :- tall(X).\ncalm(X) :- happy(X).\nclean(Y) :- old(Y), likes(B,Y), brave(B).\nnew(X) :- light(X).\ncurious(Y) :- hungry(Y).\nlikes(Z,X) :- clever(Z), soft(X), dislikes(W,X).\nhard(Z) :- big(Z), likes(B,Z), clever(B).\nwet(Z) :- hard(Z).\nlikes(Z,Y) :- old(Y), tired(Z), sibling(Z,U).\nbrave(X) :- bored(X), likes(X,A), small(A).\nlikes(Z,X) :- curious(Z), soft(X), owns(W,X).\nexcited(X) :- hungry(X), brave(X).\nhard(X) :- old(X).\nclever(X) :- friendly(X), tired(X).\nfunny(X) :- hungry(X), curious(X).\nnew(X) :- light(X), heavy(X).\nrough(X) :- clean(X), soft(X).\nweak(alice).\nold(apple).\nfunny(carol).\nbored(carol).\ndislikes(bob,ball).\nparent(carol,george).\ndislikes(frank,car).\nsibling(alice,dave).\nrough(book).\nold(book).\nlikes(bob,phone).\nred(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is angry.\nFor all X, if person X is angry, then person X is sad.\nFor all X, if person X is sad, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is calm.\nFor all Y, if there exists B such that object Y is old and person B likes object Y and person B is brave, then object Y is clean.\nFor all X, if object X is light, then object X is new.\nFor all Y, if person Y is hungry, then person Y is curious.\nFor all X, Z, if there exists W such that person Z is clever and object X is soft and person W dislikes object X, then person Z likes object X.\nFor all Z, if there exists B such that object Z is big and person B likes object Z and person B is clever, then object Z is hard.\nFor all Z, if object Z is hard, then object Z is wet.\nFor all Y, Z, if there exists U such that object Y is old and person Z is tired and person Z is a sibling of person U, then person Z likes object Y.\nFor all X, if there exists A such that person X is bored and person X likes object A and object A is small, then person X is brave.\nFor all X, Z, if there exists W such that person Z is curious and object X is soft and person W owns object X, then person Z likes object X.\nFor all X, if person X is hungry and person X is brave, then person X is excited.\nFor all X, if object X is old, then object X is hard.\nFor all X, if person X is friendly and person X is tired, then person X is clever.\nFor all X, if person X is hungry and person X is curious, then person X is funny.\nFor all X, if object X is light and object X is heavy, then object X is new.\nFor all X, if object X is clean and object X is soft, then object X is rough.\n\nAnd the following facts:\nalice is weak.\napple is old.\ncarol is funny.\ncarol is bored.\nbob dislikes ball.\ncarol is a parent of george.\nfrank dislikes car.\nalice is a sibling of dave.\nbook is rough.\nbook is old.\nbob likes phone.\ncar is red.\n\nQUESTION:\nIs alice is calm true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 792,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(frank).",
    "c": "angry(X) :- weak(X).\nsad(X) :- angry(X).\ntall(X) :- sad(X).\nhappy(X) :- tall(X).\ncalm(X) :- happy(X).\nclean(Y) :- old(Y), likes(B,Y), brave(B).\nnew(X) :- light(X).\ncurious(Y) :- hungry(Y).\nlikes(Z,X) :- clever(Z), soft(X), dislikes(W,X).\nhard(Z) :- big(Z), likes(B,Z), clever(B).\nwet(Z) :- hard(Z).\nlikes(Z,Y) :- old(Y), tired(Z), sibling(Z,U).\nbrave(X) :- bored(X), likes(X,A), small(A).\nlikes(Z,X) :- curious(Z), soft(X), owns(W,X).\nexcited(X) :- hungry(X), brave(X).\nhard(X) :- old(X).\nclever(X) :- friendly(X), tired(X).\nfunny(X) :- hungry(X), curious(X).\nnew(X) :- light(X), heavy(X).\nrough(X) :- clean(X), soft(X).\nweak(alice).\nold(apple).\nfunny(carol).\nbored(carol).\ndislikes(bob,ball).\nparent(carol,george).\ndislikes(frank,car).\nsibling(alice,dave).\nrough(book).\nold(book).\nlikes(bob,phone).\nred(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is angry.\nFor all X, if person X is angry, then person X is sad.\nFor all X, if person X is sad, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is calm.\nFor all Y, if there exists B such that object Y is old and person B likes object Y and person B is brave, then object Y is clean.\nFor all X, if object X is light, then object X is new.\nFor all Y, if person Y is hungry, then person Y is curious.\nFor all X, Z, if there exists W such that person Z is clever and object X is soft and person W dislikes object X, then person Z likes object X.\nFor all Z, if there exists B such that object Z is big and person B likes object Z and person B is clever, then object Z is hard.\nFor all Z, if object Z is hard, then object Z is wet.\nFor all Y, Z, if there exists U such that object Y is old and person Z is tired and person Z is a sibling of person U, then person Z likes object Y.\nFor all X, if there exists A such that person X is bored and person X likes object A and object A is small, then person X is brave.\nFor all X, Z, if there exists W such that person Z is curious and object X is soft and person W owns object X, then person Z likes object X.\nFor all X, if person X is hungry and person X is brave, then person X is excited.\nFor all X, if object X is old, then object X is hard.\nFor all X, if person X is friendly and person X is tired, then person X is clever.\nFor all X, if person X is hungry and person X is curious, then person X is funny.\nFor all X, if object X is light and object X is heavy, then object X is new.\nFor all X, if object X is clean and object X is soft, then object X is rough.\n\nAnd the following facts:\nalice is weak.\napple is old.\ncarol is funny.\ncarol is bored.\nbob dislikes ball.\ncarol is a parent of george.\nfrank dislikes car.\nalice is a sibling of dave.\nbook is rough.\nbook is old.\nbob likes phone.\ncar is red.\n\nQUESTION:\nIs frank is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 793,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(alice).",
    "c": "angry(X) :- weak(X).\nsad(X) :- angry(X).\ntall(X) :- sad(X).\nhappy(X) :- tall(X).\ncalm(X) :- happy(X).\nclean(Y) :- old(Y), likes(B,Y), brave(B).\nnew(X) :- light(X).\ncurious(Y) :- hungry(Y).\nlikes(Z,X) :- clever(Z), soft(X), dislikes(W,X).\nhard(Z) :- big(Z), likes(B,Z), clever(B).\nwet(Z) :- hard(Z).\nlikes(Z,Y) :- old(Y), tired(Z), sibling(Z,U).\nbrave(X) :- bored(X), likes(X,A), small(A).\nlikes(Z,X) :- curious(Z), soft(X), owns(W,X).\nexcited(X) :- hungry(X), brave(X).\nhard(X) :- old(X).\nclever(X) :- friendly(X), tired(X).\nfunny(X) :- hungry(X), curious(X).\nnew(X) :- light(X), heavy(X).\nrough(X) :- clean(X), soft(X).\ncalm(alice).\nold(apple).\nfunny(carol).\nbored(carol).\ndislikes(bob,ball).\nparent(carol,george).\ndislikes(frank,car).\nsibling(alice,dave).\nrough(book).\nold(book).\nlikes(bob,phone).\nred(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is angry.\nFor all X, if person X is angry, then person X is sad.\nFor all X, if person X is sad, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is calm.\nFor all Y, if there exists B such that object Y is old and person B likes object Y and person B is brave, then object Y is clean.\nFor all X, if object X is light, then object X is new.\nFor all Y, if person Y is hungry, then person Y is curious.\nFor all X, Z, if there exists W such that person Z is clever and object X is soft and person W dislikes object X, then person Z likes object X.\nFor all Z, if there exists B such that object Z is big and person B likes object Z and person B is clever, then object Z is hard.\nFor all Z, if object Z is hard, then object Z is wet.\nFor all Y, Z, if there exists U such that object Y is old and person Z is tired and person Z is a sibling of person U, then person Z likes object Y.\nFor all X, if there exists A such that person X is bored and person X likes object A and object A is small, then person X is brave.\nFor all X, Z, if there exists W such that person Z is curious and object X is soft and person W owns object X, then person Z likes object X.\nFor all X, if person X is hungry and person X is brave, then person X is excited.\nFor all X, if object X is old, then object X is hard.\nFor all X, if person X is friendly and person X is tired, then person X is clever.\nFor all X, if person X is hungry and person X is curious, then person X is funny.\nFor all X, if object X is light and object X is heavy, then object X is new.\nFor all X, if object X is clean and object X is soft, then object X is rough.\n\nAnd the following facts:\nalice is calm.\napple is old.\ncarol is funny.\ncarol is bored.\nbob dislikes ball.\ncarol is a parent of george.\nfrank dislikes car.\nalice is a sibling of dave.\nbook is rough.\nbook is old.\nbob likes phone.\ncar is red.\n\nQUESTION:\nCould alice is weak explain alice is calm?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 794,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(carol).",
    "c": "angry(X) :- weak(X).\nsad(X) :- angry(X).\ntall(X) :- sad(X).\nhappy(X) :- tall(X).\ncalm(X) :- happy(X).\nclean(Y) :- old(Y), likes(B,Y), brave(B).\nnew(X) :- light(X).\ncurious(Y) :- hungry(Y).\nlikes(Z,X) :- clever(Z), soft(X), dislikes(W,X).\nhard(Z) :- big(Z), likes(B,Z), clever(B).\nwet(Z) :- hard(Z).\nlikes(Z,Y) :- old(Y), tired(Z), sibling(Z,U).\nbrave(X) :- bored(X), likes(X,A), small(A).\nlikes(Z,X) :- curious(Z), soft(X), owns(W,X).\nexcited(X) :- hungry(X), brave(X).\nhard(X) :- old(X).\nclever(X) :- friendly(X), tired(X).\nfunny(X) :- hungry(X), curious(X).\nnew(X) :- light(X), heavy(X).\nrough(X) :- clean(X), soft(X).\ncalm(alice).\nold(apple).\nfunny(carol).\nbored(carol).\ndislikes(bob,ball).\nparent(carol,george).\ndislikes(frank,car).\nsibling(alice,dave).\nrough(book).\nold(book).\nlikes(bob,phone).\nred(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is angry.\nFor all X, if person X is angry, then person X is sad.\nFor all X, if person X is sad, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is calm.\nFor all Y, if there exists B such that object Y is old and person B likes object Y and person B is brave, then object Y is clean.\nFor all X, if object X is light, then object X is new.\nFor all Y, if person Y is hungry, then person Y is curious.\nFor all X, Z, if there exists W such that person Z is clever and object X is soft and person W dislikes object X, then person Z likes object X.\nFor all Z, if there exists B such that object Z is big and person B likes object Z and person B is clever, then object Z is hard.\nFor all Z, if object Z is hard, then object Z is wet.\nFor all Y, Z, if there exists U such that object Y is old and person Z is tired and person Z is a sibling of person U, then person Z likes object Y.\nFor all X, if there exists A such that person X is bored and person X likes object A and object A is small, then person X is brave.\nFor all X, Z, if there exists W such that person Z is curious and object X is soft and person W owns object X, then person Z likes object X.\nFor all X, if person X is hungry and person X is brave, then person X is excited.\nFor all X, if object X is old, then object X is hard.\nFor all X, if person X is friendly and person X is tired, then person X is clever.\nFor all X, if person X is hungry and person X is curious, then person X is funny.\nFor all X, if object X is light and object X is heavy, then object X is new.\nFor all X, if object X is clean and object X is soft, then object X is rough.\n\nAnd the following facts:\nalice is calm.\napple is old.\ncarol is funny.\ncarol is bored.\nbob dislikes ball.\ncarol is a parent of george.\nfrank dislikes car.\nalice is a sibling of dave.\nbook is rough.\nbook is old.\nbob likes phone.\ncar is red.\n\nQUESTION:\nCould carol is hungry explain alice is calm?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 795,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(car).",
    "c": "dirty(X) :- smooth(X).\nnew(X) :- dirty(X).\nwet(X) :- new(X).\nred(X) :- wet(X).\nheavy(X) :- red(X).\nrough(X) :- light(X), rough(E).\nsoft(Z) :- old(Z).\nstrong(Y) :- clever(Y), parent(Y,U), funny(U).\nhappy(Z) :- calm(Z), friend(Z,W), brave(W).\ntall(Z) :- tired(Z).\ntall(Y) :- busy(Y), dislikes(Y,V), rough(V).\nhappy(Y) :- brave(Y), enemy(Y,U), calm(U).\nold(Z) :- clean(Z), busy(A).\nfunny(X) :- sad(X).\nclever(X) :- happy(X).\ntall(X) :- weak(X), sad(X).\nlight(X) :- big(X).\nhappy(X) :- clever(X), weak(X).\nenemy(X,Y) :- brave(X), friendly(Y).\nstrong(X) :- funny(X).\nsmooth(car).\nenemy(bob,george).\nfriend(eve,frank).\nparent(eve,carol).\ntall(frank).\nstrong(frank).\nowns(alice,pencil).\nfriend(carol,frank).\nenemy(alice,bob).\nfriend(eve,carol).\nstrong(carol).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if there exists E such that object X is light and object E is rough, then object X is rough.\nFor all Z, if object Z is old, then object Z is soft.\nFor all Y, if there exists U such that person Y is clever and person Y is a parent of person U and person U is funny, then person Y is strong.\nFor all Z, if there exists W such that person Z is calm and person Z is a friend of person W and person W is brave, then person Z is happy.\nFor all Z, if person Z is tired, then person Z is tall.\nFor all Y, if there exists V such that person Y is busy and person Y dislikes object V and object V is rough, then person Y is tall.\nFor all Y, if there exists U such that person Y is brave and person Y is an enemy of person U and person U is calm, then person Y is happy.\nFor all Z, if there exists A such that object Z is clean and person A is busy, then object Z is old.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is weak and person X is sad, then person X is tall.\nFor all X, if object X is big, then object X is light.\nFor all X, if person X is clever and person X is weak, then person X is happy.\nFor all X, Y, if person X is brave and person Y is friendly, then person X is an enemy of person Y.\nFor all X, if person X is funny, then person X is strong.\n\nAnd the following facts:\ncar is smooth.\nbob is an enemy of george.\neve is a friend of frank.\neve is a parent of carol.\nfrank is tall.\nfrank is strong.\nalice owns pencil.\ncarol is a friend of frank.\nalice is an enemy of bob.\neve is a friend of carol.\ncarol is strong.\nalice likes apple.\n\nQUESTION:\nIs car is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 796,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(carol).",
    "c": "dirty(X) :- smooth(X).\nnew(X) :- dirty(X).\nwet(X) :- new(X).\nred(X) :- wet(X).\nheavy(X) :- red(X).\nrough(X) :- light(X), rough(E).\nsoft(Z) :- old(Z).\nstrong(Y) :- clever(Y), parent(Y,U), funny(U).\nhappy(Z) :- calm(Z), friend(Z,W), brave(W).\ntall(Z) :- tired(Z).\ntall(Y) :- busy(Y), dislikes(Y,V), rough(V).\nhappy(Y) :- brave(Y), enemy(Y,U), calm(U).\nold(Z) :- clean(Z), busy(A).\nfunny(X) :- sad(X).\nclever(X) :- happy(X).\ntall(X) :- weak(X), sad(X).\nlight(X) :- big(X).\nhappy(X) :- clever(X), weak(X).\nenemy(X,Y) :- brave(X), friendly(Y).\nstrong(X) :- funny(X).\nsmooth(car).\nenemy(bob,george).\nfriend(eve,frank).\nparent(eve,carol).\ntall(frank).\nstrong(frank).\nowns(alice,pencil).\nfriend(carol,frank).\nenemy(alice,bob).\nfriend(eve,carol).\nstrong(carol).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if there exists E such that object X is light and object E is rough, then object X is rough.\nFor all Z, if object Z is old, then object Z is soft.\nFor all Y, if there exists U such that person Y is clever and person Y is a parent of person U and person U is funny, then person Y is strong.\nFor all Z, if there exists W such that person Z is calm and person Z is a friend of person W and person W is brave, then person Z is happy.\nFor all Z, if person Z is tired, then person Z is tall.\nFor all Y, if there exists V such that person Y is busy and person Y dislikes object V and object V is rough, then person Y is tall.\nFor all Y, if there exists U such that person Y is brave and person Y is an enemy of person U and person U is calm, then person Y is happy.\nFor all Z, if there exists A such that object Z is clean and person A is busy, then object Z is old.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is weak and person X is sad, then person X is tall.\nFor all X, if object X is big, then object X is light.\nFor all X, if person X is clever and person X is weak, then person X is happy.\nFor all X, Y, if person X is brave and person Y is friendly, then person X is an enemy of person Y.\nFor all X, if person X is funny, then person X is strong.\n\nAnd the following facts:\ncar is smooth.\nbob is an enemy of george.\neve is a friend of frank.\neve is a parent of carol.\nfrank is tall.\nfrank is strong.\nalice owns pencil.\ncarol is a friend of frank.\nalice is an enemy of bob.\neve is a friend of carol.\ncarol is strong.\nalice likes apple.\n\nQUESTION:\nIs carol is brave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 797,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(car).",
    "c": "dirty(X) :- smooth(X).\nnew(X) :- dirty(X).\nwet(X) :- new(X).\nred(X) :- wet(X).\nheavy(X) :- red(X).\nrough(X) :- light(X), rough(E).\nsoft(Z) :- old(Z).\nstrong(Y) :- clever(Y), parent(Y,U), funny(U).\nhappy(Z) :- calm(Z), friend(Z,W), brave(W).\ntall(Z) :- tired(Z).\ntall(Y) :- busy(Y), dislikes(Y,V), rough(V).\nhappy(Y) :- brave(Y), enemy(Y,U), calm(U).\nold(Z) :- clean(Z), busy(A).\nfunny(X) :- sad(X).\nclever(X) :- happy(X).\ntall(X) :- weak(X), sad(X).\nlight(X) :- big(X).\nhappy(X) :- clever(X), weak(X).\nenemy(X,Y) :- brave(X), friendly(Y).\nstrong(X) :- funny(X).\nheavy(car).\nenemy(bob,george).\nfriend(eve,frank).\nparent(eve,carol).\ntall(frank).\nstrong(frank).\nowns(alice,pencil).\nfriend(carol,frank).\nenemy(alice,bob).\nfriend(eve,carol).\nstrong(carol).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if there exists E such that object X is light and object E is rough, then object X is rough.\nFor all Z, if object Z is old, then object Z is soft.\nFor all Y, if there exists U such that person Y is clever and person Y is a parent of person U and person U is funny, then person Y is strong.\nFor all Z, if there exists W such that person Z is calm and person Z is a friend of person W and person W is brave, then person Z is happy.\nFor all Z, if person Z is tired, then person Z is tall.\nFor all Y, if there exists V such that person Y is busy and person Y dislikes object V and object V is rough, then person Y is tall.\nFor all Y, if there exists U such that person Y is brave and person Y is an enemy of person U and person U is calm, then person Y is happy.\nFor all Z, if there exists A such that object Z is clean and person A is busy, then object Z is old.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is weak and person X is sad, then person X is tall.\nFor all X, if object X is big, then object X is light.\nFor all X, if person X is clever and person X is weak, then person X is happy.\nFor all X, Y, if person X is brave and person Y is friendly, then person X is an enemy of person Y.\nFor all X, if person X is funny, then person X is strong.\n\nAnd the following facts:\ncar is heavy.\nbob is an enemy of george.\neve is a friend of frank.\neve is a parent of carol.\nfrank is tall.\nfrank is strong.\nalice owns pencil.\ncarol is a friend of frank.\nalice is an enemy of bob.\neve is a friend of carol.\ncarol is strong.\nalice likes apple.\n\nQUESTION:\nCould car is smooth explain car is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 798,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(book).",
    "c": "dirty(X) :- smooth(X).\nnew(X) :- dirty(X).\nwet(X) :- new(X).\nred(X) :- wet(X).\nheavy(X) :- red(X).\nrough(X) :- light(X), rough(E).\nsoft(Z) :- old(Z).\nstrong(Y) :- clever(Y), parent(Y,U), funny(U).\nhappy(Z) :- calm(Z), friend(Z,W), brave(W).\ntall(Z) :- tired(Z).\ntall(Y) :- busy(Y), dislikes(Y,V), rough(V).\nhappy(Y) :- brave(Y), enemy(Y,U), calm(U).\nold(Z) :- clean(Z), busy(A).\nfunny(X) :- sad(X).\nclever(X) :- happy(X).\ntall(X) :- weak(X), sad(X).\nlight(X) :- big(X).\nhappy(X) :- clever(X), weak(X).\nenemy(X,Y) :- brave(X), friendly(Y).\nstrong(X) :- funny(X).\nheavy(car).\nenemy(bob,george).\nfriend(eve,frank).\nparent(eve,carol).\ntall(frank).\nstrong(frank).\nowns(alice,pencil).\nfriend(carol,frank).\nenemy(alice,bob).\nfriend(eve,carol).\nstrong(carol).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if there exists E such that object X is light and object E is rough, then object X is rough.\nFor all Z, if object Z is old, then object Z is soft.\nFor all Y, if there exists U such that person Y is clever and person Y is a parent of person U and person U is funny, then person Y is strong.\nFor all Z, if there exists W such that person Z is calm and person Z is a friend of person W and person W is brave, then person Z is happy.\nFor all Z, if person Z is tired, then person Z is tall.\nFor all Y, if there exists V such that person Y is busy and person Y dislikes object V and object V is rough, then person Y is tall.\nFor all Y, if there exists U such that person Y is brave and person Y is an enemy of person U and person U is calm, then person Y is happy.\nFor all Z, if there exists A such that object Z is clean and person A is busy, then object Z is old.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is weak and person X is sad, then person X is tall.\nFor all X, if object X is big, then object X is light.\nFor all X, if person X is clever and person X is weak, then person X is happy.\nFor all X, Y, if person X is brave and person Y is friendly, then person X is an enemy of person Y.\nFor all X, if person X is funny, then person X is strong.\n\nAnd the following facts:\ncar is heavy.\nbob is an enemy of george.\neve is a friend of frank.\neve is a parent of carol.\nfrank is tall.\nfrank is strong.\nalice owns pencil.\ncarol is a friend of frank.\nalice is an enemy of bob.\neve is a friend of carol.\ncarol is strong.\nalice likes apple.\n\nQUESTION:\nCould book is wet explain car is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 799,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(pencil).",
    "c": "smooth(X) :- big(X).\nheavy(X) :- smooth(X).\nnew(X) :- heavy(X).\nbig(X) :- new(X).\nsmooth(X) :- big(X).\nhard(X) :- smooth(X).\nred(X) :- hard(X).\nlight(X) :- red(X).\ndirty(X) :- light(X).\nlight(X) :- dirty(X).\nlikes(X,Z) :- old(Z), clever(X), dislikes(U,Z).\nfriend(X,Z) :- clever(Z), brave(X).\nfriend(X,Z) :- curious(Z), happy(X), clean(B).\nclever(X) :- calm(X), bored(F).\nbored(Z) :- angry(Z), friend(Z,W), funny(W).\ncurious(X) :- sad(X), weak(X).\nbusy(X) :- angry(X), calm(X).\nfunny(X) :- sad(X).\nsad(X) :- clever(X), brave(X).\nlikes(X,Y) :- bored(X), small(Y).\nbig(pencil).\nrough(book).\nsibling(dave,eve).\nenemy(frank,alice).\nsad(eve).\ncold.\nsmall(ball).\nenemy(eve,frank).\ndislikes(carol,apple).\nfriend(alice,bob).\nrough(apple).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is light.\nFor all X, Z, if there exists U such that object Z is old and person X is clever and person U dislikes object Z, then person X likes object Z.\nFor all X, Z, if person Z is clever and person X is brave, then person X is a friend of person Z.\nFor all X, Z, if there exists B such that person Z is curious and person X is happy and object B is clean, then person X is a friend of person Z.\nFor all X, if there exists F such that person X is calm and person F is bored, then person X is clever.\nFor all Z, if there exists W such that person Z is angry and person Z is a friend of person W and person W is funny, then person Z is bored.\nFor all X, if person X is sad and person X is weak, then person X is curious.\nFor all X, if person X is angry and person X is calm, then person X is busy.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is clever and person X is brave, then person X is sad.\nFor all X, Y, if person X is bored and object Y is small, then person X likes object Y.\n\nAnd the following facts:\npencil is big.\nbook is rough.\ndave is a sibling of eve.\nfrank is an enemy of alice.\neve is sad.\nit is cold.\nball is small.\neve is an enemy of frank.\ncarol dislikes apple.\nalice is a friend of bob.\napple is rough.\nalice is a parent of dave.\n\nQUESTION:\nIs pencil is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 800,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(eve).",
    "c": "smooth(X) :- big(X).\nheavy(X) :- smooth(X).\nnew(X) :- heavy(X).\nbig(X) :- new(X).\nsmooth(X) :- big(X).\nhard(X) :- smooth(X).\nred(X) :- hard(X).\nlight(X) :- red(X).\ndirty(X) :- light(X).\nlight(X) :- dirty(X).\nlikes(X,Z) :- old(Z), clever(X), dislikes(U,Z).\nfriend(X,Z) :- clever(Z), brave(X).\nfriend(X,Z) :- curious(Z), happy(X), clean(B).\nclever(X) :- calm(X), bored(F).\nbored(Z) :- angry(Z), friend(Z,W), funny(W).\ncurious(X) :- sad(X), weak(X).\nbusy(X) :- angry(X), calm(X).\nfunny(X) :- sad(X).\nsad(X) :- clever(X), brave(X).\nlikes(X,Y) :- bored(X), small(Y).\nbig(pencil).\nrough(book).\nsibling(dave,eve).\nenemy(frank,alice).\nsad(eve).\ncold.\nsmall(ball).\nenemy(eve,frank).\ndislikes(carol,apple).\nfriend(alice,bob).\nrough(apple).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is light.\nFor all X, Z, if there exists U such that object Z is old and person X is clever and person U dislikes object Z, then person X likes object Z.\nFor all X, Z, if person Z is clever and person X is brave, then person X is a friend of person Z.\nFor all X, Z, if there exists B such that person Z is curious and person X is happy and object B is clean, then person X is a friend of person Z.\nFor all X, if there exists F such that person X is calm and person F is bored, then person X is clever.\nFor all Z, if there exists W such that person Z is angry and person Z is a friend of person W and person W is funny, then person Z is bored.\nFor all X, if person X is sad and person X is weak, then person X is curious.\nFor all X, if person X is angry and person X is calm, then person X is busy.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is clever and person X is brave, then person X is sad.\nFor all X, Y, if person X is bored and object Y is small, then person X likes object Y.\n\nAnd the following facts:\npencil is big.\nbook is rough.\ndave is a sibling of eve.\nfrank is an enemy of alice.\neve is sad.\nit is cold.\nball is small.\neve is an enemy of frank.\ncarol dislikes apple.\nalice is a friend of bob.\napple is rough.\nalice is a parent of dave.\n\nQUESTION:\nIs eve is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 801,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(pencil).",
    "c": "smooth(X) :- big(X).\nheavy(X) :- smooth(X).\nnew(X) :- heavy(X).\nbig(X) :- new(X).\nsmooth(X) :- big(X).\nhard(X) :- smooth(X).\nred(X) :- hard(X).\nlight(X) :- red(X).\ndirty(X) :- light(X).\nlight(X) :- dirty(X).\nlikes(X,Z) :- old(Z), clever(X), dislikes(U,Z).\nfriend(X,Z) :- clever(Z), brave(X).\nfriend(X,Z) :- curious(Z), happy(X), clean(B).\nclever(X) :- calm(X), bored(F).\nbored(Z) :- angry(Z), friend(Z,W), funny(W).\ncurious(X) :- sad(X), weak(X).\nbusy(X) :- angry(X), calm(X).\nfunny(X) :- sad(X).\nsad(X) :- clever(X), brave(X).\nlikes(X,Y) :- bored(X), small(Y).\nlight(pencil).\nrough(book).\nsibling(dave,eve).\nenemy(frank,alice).\nsad(eve).\ncold.\nsmall(ball).\nenemy(eve,frank).\ndislikes(carol,apple).\nfriend(alice,bob).\nrough(apple).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is light.\nFor all X, Z, if there exists U such that object Z is old and person X is clever and person U dislikes object Z, then person X likes object Z.\nFor all X, Z, if person Z is clever and person X is brave, then person X is a friend of person Z.\nFor all X, Z, if there exists B such that person Z is curious and person X is happy and object B is clean, then person X is a friend of person Z.\nFor all X, if there exists F such that person X is calm and person F is bored, then person X is clever.\nFor all Z, if there exists W such that person Z is angry and person Z is a friend of person W and person W is funny, then person Z is bored.\nFor all X, if person X is sad and person X is weak, then person X is curious.\nFor all X, if person X is angry and person X is calm, then person X is busy.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is clever and person X is brave, then person X is sad.\nFor all X, Y, if person X is bored and object Y is small, then person X likes object Y.\n\nAnd the following facts:\npencil is light.\nbook is rough.\ndave is a sibling of eve.\nfrank is an enemy of alice.\neve is sad.\nit is cold.\nball is small.\neve is an enemy of frank.\ncarol dislikes apple.\nalice is a friend of bob.\napple is rough.\nalice is a parent of dave.\n\nQUESTION:\nCould pencil is big explain pencil is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 802,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(apple).",
    "c": "smooth(X) :- big(X).\nheavy(X) :- smooth(X).\nnew(X) :- heavy(X).\nbig(X) :- new(X).\nsmooth(X) :- big(X).\nhard(X) :- smooth(X).\nred(X) :- hard(X).\nlight(X) :- red(X).\ndirty(X) :- light(X).\nlight(X) :- dirty(X).\nlikes(X,Z) :- old(Z), clever(X), dislikes(U,Z).\nfriend(X,Z) :- clever(Z), brave(X).\nfriend(X,Z) :- curious(Z), happy(X), clean(B).\nclever(X) :- calm(X), bored(F).\nbored(Z) :- angry(Z), friend(Z,W), funny(W).\ncurious(X) :- sad(X), weak(X).\nbusy(X) :- angry(X), calm(X).\nfunny(X) :- sad(X).\nsad(X) :- clever(X), brave(X).\nlikes(X,Y) :- bored(X), small(Y).\nlight(pencil).\nrough(book).\nsibling(dave,eve).\nenemy(frank,alice).\nsad(eve).\ncold.\nsmall(ball).\nenemy(eve,frank).\ndislikes(carol,apple).\nfriend(alice,bob).\nrough(apple).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is light.\nFor all X, Z, if there exists U such that object Z is old and person X is clever and person U dislikes object Z, then person X likes object Z.\nFor all X, Z, if person Z is clever and person X is brave, then person X is a friend of person Z.\nFor all X, Z, if there exists B such that person Z is curious and person X is happy and object B is clean, then person X is a friend of person Z.\nFor all X, if there exists F such that person X is calm and person F is bored, then person X is clever.\nFor all Z, if there exists W such that person Z is angry and person Z is a friend of person W and person W is funny, then person Z is bored.\nFor all X, if person X is sad and person X is weak, then person X is curious.\nFor all X, if person X is angry and person X is calm, then person X is busy.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is clever and person X is brave, then person X is sad.\nFor all X, Y, if person X is bored and object Y is small, then person X likes object Y.\n\nAnd the following facts:\npencil is light.\nbook is rough.\ndave is a sibling of eve.\nfrank is an enemy of alice.\neve is sad.\nit is cold.\nball is small.\neve is an enemy of frank.\ncarol dislikes apple.\nalice is a friend of bob.\napple is rough.\nalice is a parent of dave.\n\nQUESTION:\nCould apple is heavy explain pencil is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 803,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hard(phone).",
    "c": "heavy(X) :- new(X).\nhard(X) :- heavy(X).\nred(X) :- hard(X).\nlight(X) :- red(X).\nsoft(X) :- light(X).\nold(X) :- soft(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nsmooth(X) :- red(X).\nhard(X) :- smooth(X).\nbig(Y) :- wet(Y), dislikes(U,Y), brave(U).\nbig(Y) :- big(Y), dislikes(B,Y), clever(B).\nwet(Y) :- rough(Y).\ntired(Z) :- brave(Z).\nfriendly(Z) :- curious(Z), likes(Z,U), small(U).\nowns(Z,Y) :- dirty(Y), strong(Z), owns(W,Y).\nstrong(X) :- happy(X).\nclever(X) :- hungry(X).\nfriendly(X) :- sad(X), excited(X).\ncurious(X) :- funny(X), brave(X).\nnew(phone).\nsibling(carol,eve).\nparent(dave,eve).\nparent(dave,george).\nenemy(frank,alice).\nowns(dave,phone).\nlikes(alice,pencil).\nenemy(bob,alice).\nparent(alice,dave).\nbored(bob).\nowns(frank,book).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all Y, if there exists U such that object Y is wet and person U dislikes object Y and person U is brave, then object Y is big.\nFor all Y, if there exists B such that object Y is big and person B dislikes object Y and person B is clever, then object Y is big.\nFor all Y, if object Y is rough, then object Y is wet.\nFor all Z, if person Z is brave, then person Z is tired.\nFor all Z, if there exists U such that person Z is curious and person Z likes object U and object U is small, then person Z is friendly.\nFor all Y, Z, if there exists W such that object Y is dirty and person Z is strong and person W owns object Y, then person Z owns object Y.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is sad and person X is excited, then person X is friendly.\nFor all X, if person X is funny and person X is brave, then person X is curious.\n\nAnd the following facts:\nphone is new.\ncarol is a sibling of eve.\ndave is a parent of eve.\ndave is a parent of george.\nfrank is an enemy of alice.\ndave owns phone.\nalice likes pencil.\nbob is an enemy of alice.\nalice is a parent of dave.\nbob is bored.\nfrank owns book.\nbob dislikes ball.\n\nQUESTION:\nIs phone is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 804,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clever(dave).",
    "c": "heavy(X) :- new(X).\nhard(X) :- heavy(X).\nred(X) :- hard(X).\nlight(X) :- red(X).\nsoft(X) :- light(X).\nold(X) :- soft(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nsmooth(X) :- red(X).\nhard(X) :- smooth(X).\nbig(Y) :- wet(Y), dislikes(U,Y), brave(U).\nbig(Y) :- big(Y), dislikes(B,Y), clever(B).\nwet(Y) :- rough(Y).\ntired(Z) :- brave(Z).\nfriendly(Z) :- curious(Z), likes(Z,U), small(U).\nowns(Z,Y) :- dirty(Y), strong(Z), owns(W,Y).\nstrong(X) :- happy(X).\nclever(X) :- hungry(X).\nfriendly(X) :- sad(X), excited(X).\ncurious(X) :- funny(X), brave(X).\nnew(phone).\nsibling(carol,eve).\nparent(dave,eve).\nparent(dave,george).\nenemy(frank,alice).\nowns(dave,phone).\nlikes(alice,pencil).\nenemy(bob,alice).\nparent(alice,dave).\nbored(bob).\nowns(frank,book).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all Y, if there exists U such that object Y is wet and person U dislikes object Y and person U is brave, then object Y is big.\nFor all Y, if there exists B such that object Y is big and person B dislikes object Y and person B is clever, then object Y is big.\nFor all Y, if object Y is rough, then object Y is wet.\nFor all Z, if person Z is brave, then person Z is tired.\nFor all Z, if there exists U such that person Z is curious and person Z likes object U and object U is small, then person Z is friendly.\nFor all Y, Z, if there exists W such that object Y is dirty and person Z is strong and person W owns object Y, then person Z owns object Y.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is sad and person X is excited, then person X is friendly.\nFor all X, if person X is funny and person X is brave, then person X is curious.\n\nAnd the following facts:\nphone is new.\ncarol is a sibling of eve.\ndave is a parent of eve.\ndave is a parent of george.\nfrank is an enemy of alice.\ndave owns phone.\nalice likes pencil.\nbob is an enemy of alice.\nalice is a parent of dave.\nbob is bored.\nfrank owns book.\nbob dislikes ball.\n\nQUESTION:\nIs dave is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 805,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "new(phone).",
    "c": "heavy(X) :- new(X).\nhard(X) :- heavy(X).\nred(X) :- hard(X).\nlight(X) :- red(X).\nsoft(X) :- light(X).\nold(X) :- soft(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nsmooth(X) :- red(X).\nhard(X) :- smooth(X).\nbig(Y) :- wet(Y), dislikes(U,Y), brave(U).\nbig(Y) :- big(Y), dislikes(B,Y), clever(B).\nwet(Y) :- rough(Y).\ntired(Z) :- brave(Z).\nfriendly(Z) :- curious(Z), likes(Z,U), small(U).\nowns(Z,Y) :- dirty(Y), strong(Z), owns(W,Y).\nstrong(X) :- happy(X).\nclever(X) :- hungry(X).\nfriendly(X) :- sad(X), excited(X).\ncurious(X) :- funny(X), brave(X).\nhard(phone).\nsibling(carol,eve).\nparent(dave,eve).\nparent(dave,george).\nenemy(frank,alice).\nowns(dave,phone).\nlikes(alice,pencil).\nenemy(bob,alice).\nparent(alice,dave).\nbored(bob).\nowns(frank,book).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all Y, if there exists U such that object Y is wet and person U dislikes object Y and person U is brave, then object Y is big.\nFor all Y, if there exists B such that object Y is big and person B dislikes object Y and person B is clever, then object Y is big.\nFor all Y, if object Y is rough, then object Y is wet.\nFor all Z, if person Z is brave, then person Z is tired.\nFor all Z, if there exists U such that person Z is curious and person Z likes object U and object U is small, then person Z is friendly.\nFor all Y, Z, if there exists W such that object Y is dirty and person Z is strong and person W owns object Y, then person Z owns object Y.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is sad and person X is excited, then person X is friendly.\nFor all X, if person X is funny and person X is brave, then person X is curious.\n\nAnd the following facts:\nphone is hard.\ncarol is a sibling of eve.\ndave is a parent of eve.\ndave is a parent of george.\nfrank is an enemy of alice.\ndave owns phone.\nalice likes pencil.\nbob is an enemy of alice.\nalice is a parent of dave.\nbob is bored.\nfrank owns book.\nbob dislikes ball.\n\nQUESTION:\nCould phone is new explain phone is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 806,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(bob).",
    "c": "heavy(X) :- new(X).\nhard(X) :- heavy(X).\nred(X) :- hard(X).\nlight(X) :- red(X).\nsoft(X) :- light(X).\nold(X) :- soft(X).\nclean(X) :- old(X).\nred(X) :- clean(X).\nsmooth(X) :- red(X).\nhard(X) :- smooth(X).\nbig(Y) :- wet(Y), dislikes(U,Y), brave(U).\nbig(Y) :- big(Y), dislikes(B,Y), clever(B).\nwet(Y) :- rough(Y).\ntired(Z) :- brave(Z).\nfriendly(Z) :- curious(Z), likes(Z,U), small(U).\nowns(Z,Y) :- dirty(Y), strong(Z), owns(W,Y).\nstrong(X) :- happy(X).\nclever(X) :- hungry(X).\nfriendly(X) :- sad(X), excited(X).\ncurious(X) :- funny(X), brave(X).\nhard(phone).\nsibling(carol,eve).\nparent(dave,eve).\nparent(dave,george).\nenemy(frank,alice).\nowns(dave,phone).\nlikes(alice,pencil).\nenemy(bob,alice).\nparent(alice,dave).\nbored(bob).\nowns(frank,book).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is hard.\nFor all Y, if there exists U such that object Y is wet and person U dislikes object Y and person U is brave, then object Y is big.\nFor all Y, if there exists B such that object Y is big and person B dislikes object Y and person B is clever, then object Y is big.\nFor all Y, if object Y is rough, then object Y is wet.\nFor all Z, if person Z is brave, then person Z is tired.\nFor all Z, if there exists U such that person Z is curious and person Z likes object U and object U is small, then person Z is friendly.\nFor all Y, Z, if there exists W such that object Y is dirty and person Z is strong and person W owns object Y, then person Z owns object Y.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is hungry, then person X is clever.\nFor all X, if person X is sad and person X is excited, then person X is friendly.\nFor all X, if person X is funny and person X is brave, then person X is curious.\n\nAnd the following facts:\nphone is hard.\ncarol is a sibling of eve.\ndave is a parent of eve.\ndave is a parent of george.\nfrank is an enemy of alice.\ndave owns phone.\nalice likes pencil.\nbob is an enemy of alice.\nalice is a parent of dave.\nbob is bored.\nfrank owns book.\nbob dislikes ball.\n\nQUESTION:\nCould bob is strong explain phone is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 807,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(pencil).",
    "c": "soft(X) :- clean(X).\nheavy(X) :- soft(X).\nold(X) :- heavy(X).\nbig(X) :- old(X).\nrough(X) :- big(X).\nwet(X) :- rough(X).\nsmall(X) :- wet(X).\nsmooth(X) :- small(X).\nred(X) :- smooth(X).\nlight(X) :- red(X).\ndirty(Y) :- dirty(Y), owns(A,Y), busy(A).\nlikes(Y,Z) :- excited(Y), hard(Z), likes(V,Z).\nbored(Y) :- angry(Y), likes(Y,A), hard(A).\nparent(X,Y) :- clever(Y), funny(X), sibling(X,B).\nhard(X) :- dirty(X).\nclever(X) :- tired(X).\nfriend(X,Y) :- hungry(X), angry(Y), enemy(X,Y).\ntired(X) :- happy(X).\ncalm(X) :- clever(X), curious(X).\nweak(X) :- calm(X), tall(X).\nclean(pencil).\nowns(bob,book).\nsibling(eve,bob).\ndislikes(carol,car).\nstrong(frank).\nowns(eve,car).\ndirty(book).\ndislikes(george,book).\nnew(pencil).\nfriend(carol,frank).\nsibling(alice,eve).\nhard(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all Y, if there exists A such that object Y is dirty and person A owns object Y and person A is busy, then object Y is dirty.\nFor all Y, Z, if there exists V such that person Y is excited and object Z is hard and person V likes object Z, then person Y likes object Z.\nFor all Y, if there exists A such that person Y is angry and person Y likes object A and object A is hard, then person Y is bored.\nFor all X, Y, if there exists B such that person Y is clever and person X is funny and person X is a sibling of person B, then person X is a parent of person Y.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is hungry and person Y is angry and person X is an enemy of person Y, then person X is a friend of person Y.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is clever and person X is curious, then person X is calm.\nFor all X, if person X is calm and person X is tall, then person X is weak.\n\nAnd the following facts:\npencil is clean.\nbob owns book.\neve is a sibling of bob.\ncarol dislikes car.\nfrank is strong.\neve owns car.\nbook is dirty.\ngeorge dislikes book.\npencil is new.\ncarol is a friend of frank.\nalice is a sibling of eve.\nball is hard.\n\nQUESTION:\nIs pencil is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 808,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(bob).",
    "c": "soft(X) :- clean(X).\nheavy(X) :- soft(X).\nold(X) :- heavy(X).\nbig(X) :- old(X).\nrough(X) :- big(X).\nwet(X) :- rough(X).\nsmall(X) :- wet(X).\nsmooth(X) :- small(X).\nred(X) :- smooth(X).\nlight(X) :- red(X).\ndirty(Y) :- dirty(Y), owns(A,Y), busy(A).\nlikes(Y,Z) :- excited(Y), hard(Z), likes(V,Z).\nbored(Y) :- angry(Y), likes(Y,A), hard(A).\nparent(X,Y) :- clever(Y), funny(X), sibling(X,B).\nhard(X) :- dirty(X).\nclever(X) :- tired(X).\nfriend(X,Y) :- hungry(X), angry(Y), enemy(X,Y).\ntired(X) :- happy(X).\ncalm(X) :- clever(X), curious(X).\nweak(X) :- calm(X), tall(X).\nclean(pencil).\nowns(bob,book).\nsibling(eve,bob).\ndislikes(carol,car).\nstrong(frank).\nowns(eve,car).\ndirty(book).\ndislikes(george,book).\nnew(pencil).\nfriend(carol,frank).\nsibling(alice,eve).\nhard(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all Y, if there exists A such that object Y is dirty and person A owns object Y and person A is busy, then object Y is dirty.\nFor all Y, Z, if there exists V such that person Y is excited and object Z is hard and person V likes object Z, then person Y likes object Z.\nFor all Y, if there exists A such that person Y is angry and person Y likes object A and object A is hard, then person Y is bored.\nFor all X, Y, if there exists B such that person Y is clever and person X is funny and person X is a sibling of person B, then person X is a parent of person Y.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is hungry and person Y is angry and person X is an enemy of person Y, then person X is a friend of person Y.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is clever and person X is curious, then person X is calm.\nFor all X, if person X is calm and person X is tall, then person X is weak.\n\nAnd the following facts:\npencil is clean.\nbob owns book.\neve is a sibling of bob.\ncarol dislikes car.\nfrank is strong.\neve owns car.\nbook is dirty.\ngeorge dislikes book.\npencil is new.\ncarol is a friend of frank.\nalice is a sibling of eve.\nball is hard.\n\nQUESTION:\nIs bob is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 809,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "soft(X) :- clean(X).\nheavy(X) :- soft(X).\nold(X) :- heavy(X).\nbig(X) :- old(X).\nrough(X) :- big(X).\nwet(X) :- rough(X).\nsmall(X) :- wet(X).\nsmooth(X) :- small(X).\nred(X) :- smooth(X).\nlight(X) :- red(X).\ndirty(Y) :- dirty(Y), owns(A,Y), busy(A).\nlikes(Y,Z) :- excited(Y), hard(Z), likes(V,Z).\nbored(Y) :- angry(Y), likes(Y,A), hard(A).\nparent(X,Y) :- clever(Y), funny(X), sibling(X,B).\nhard(X) :- dirty(X).\nclever(X) :- tired(X).\nfriend(X,Y) :- hungry(X), angry(Y), enemy(X,Y).\ntired(X) :- happy(X).\ncalm(X) :- clever(X), curious(X).\nweak(X) :- calm(X), tall(X).\nlight(pencil).\nowns(bob,book).\nsibling(eve,bob).\ndislikes(carol,car).\nstrong(frank).\nowns(eve,car).\ndirty(book).\ndislikes(george,book).\nnew(pencil).\nfriend(carol,frank).\nsibling(alice,eve).\nhard(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all Y, if there exists A such that object Y is dirty and person A owns object Y and person A is busy, then object Y is dirty.\nFor all Y, Z, if there exists V such that person Y is excited and object Z is hard and person V likes object Z, then person Y likes object Z.\nFor all Y, if there exists A such that person Y is angry and person Y likes object A and object A is hard, then person Y is bored.\nFor all X, Y, if there exists B such that person Y is clever and person X is funny and person X is a sibling of person B, then person X is a parent of person Y.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is hungry and person Y is angry and person X is an enemy of person Y, then person X is a friend of person Y.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is clever and person X is curious, then person X is calm.\nFor all X, if person X is calm and person X is tall, then person X is weak.\n\nAnd the following facts:\npencil is light.\nbob owns book.\neve is a sibling of bob.\ncarol dislikes car.\nfrank is strong.\neve owns car.\nbook is dirty.\ngeorge dislikes book.\npencil is new.\ncarol is a friend of frank.\nalice is a sibling of eve.\nball is hard.\n\nQUESTION:\nCould pencil is clean explain pencil is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 810,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(frank).",
    "c": "soft(X) :- clean(X).\nheavy(X) :- soft(X).\nold(X) :- heavy(X).\nbig(X) :- old(X).\nrough(X) :- big(X).\nwet(X) :- rough(X).\nsmall(X) :- wet(X).\nsmooth(X) :- small(X).\nred(X) :- smooth(X).\nlight(X) :- red(X).\ndirty(Y) :- dirty(Y), owns(A,Y), busy(A).\nlikes(Y,Z) :- excited(Y), hard(Z), likes(V,Z).\nbored(Y) :- angry(Y), likes(Y,A), hard(A).\nparent(X,Y) :- clever(Y), funny(X), sibling(X,B).\nhard(X) :- dirty(X).\nclever(X) :- tired(X).\nfriend(X,Y) :- hungry(X), angry(Y), enemy(X,Y).\ntired(X) :- happy(X).\ncalm(X) :- clever(X), curious(X).\nweak(X) :- calm(X), tall(X).\nlight(pencil).\nowns(bob,book).\nsibling(eve,bob).\ndislikes(carol,car).\nstrong(frank).\nowns(eve,car).\ndirty(book).\ndislikes(george,book).\nnew(pencil).\nfriend(carol,frank).\nsibling(alice,eve).\nhard(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all Y, if there exists A such that object Y is dirty and person A owns object Y and person A is busy, then object Y is dirty.\nFor all Y, Z, if there exists V such that person Y is excited and object Z is hard and person V likes object Z, then person Y likes object Z.\nFor all Y, if there exists A such that person Y is angry and person Y likes object A and object A is hard, then person Y is bored.\nFor all X, Y, if there exists B such that person Y is clever and person X is funny and person X is a sibling of person B, then person X is a parent of person Y.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is hungry and person Y is angry and person X is an enemy of person Y, then person X is a friend of person Y.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is clever and person X is curious, then person X is calm.\nFor all X, if person X is calm and person X is tall, then person X is weak.\n\nAnd the following facts:\npencil is light.\nbob owns book.\neve is a sibling of bob.\ncarol dislikes car.\nfrank is strong.\neve owns car.\nbook is dirty.\ngeorge dislikes book.\npencil is new.\ncarol is a friend of frank.\nalice is a sibling of eve.\nball is hard.\n\nQUESTION:\nCould frank is friendly explain pencil is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 811,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "old(phone).",
    "c": "small(X) :- heavy(X).\nrough(X) :- small(X).\ndirty(X) :- rough(X).\nclean(X) :- dirty(X).\nsmooth(X) :- clean(X).\nsoft(X) :- smooth(X).\nnew(X) :- soft(X).\nred(X) :- new(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nfriendly(Z) :- bored(Z), owns(Z,W), wet(W).\nbusy(Y) :- hungry(Y), friend(Y,W), angry(W).\ncalm(Y) :- clever(Y), likes(Y,A), big(A).\nstrong(X) :- hungry(X), likes(X,B), big(B).\nsibling(X,Y) :- angry(X), tall(Y), friend(X,Y).\nlight(X) :- wet(X).\nangry(X) :- happy(X).\nfriend(X,Y) :- funny(X), busy(Y).\nfunny(X) :- angry(X).\nlikes(X,Y) :- weak(X), light(Y), owns(X,Y).\nheavy(phone).\nbrave(dave).\ndislikes(alice,book).\nfriend(carol,frank).\nowns(dave,book).\nsad(carol).\nfriend(frank,dave).\nparent(alice,eve).\nfriendly(george).\nowns(carol,ball).\ndislikes(eve,phone).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all Z, if there exists W such that person Z is bored and person Z owns object W and object W is wet, then person Z is friendly.\nFor all Y, if there exists W such that person Y is hungry and person Y is a friend of person W and person W is angry, then person Y is busy.\nFor all Y, if there exists A such that person Y is clever and person Y likes object A and object A is big, then person Y is calm.\nFor all X, if there exists B such that person X is hungry and person X likes object B and object B is big, then person X is strong.\nFor all X, Y, if person X is angry and person Y is tall and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if object X is wet, then object X is light.\nFor all X, if person X is happy, then person X is angry.\nFor all X, Y, if person X is funny and person Y is busy, then person X is a friend of person Y.\nFor all X, if person X is angry, then person X is funny.\nFor all X, Y, if person X is weak and object Y is light and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nphone is heavy.\ndave is brave.\nalice dislikes book.\ncarol is a friend of frank.\ndave owns book.\ncarol is sad.\nfrank is a friend of dave.\nalice is a parent of eve.\ngeorge is friendly.\ncarol owns ball.\neve dislikes phone.\nbook is wet.\n\nQUESTION:\nIs phone is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 812,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(apple).",
    "c": "small(X) :- heavy(X).\nrough(X) :- small(X).\ndirty(X) :- rough(X).\nclean(X) :- dirty(X).\nsmooth(X) :- clean(X).\nsoft(X) :- smooth(X).\nnew(X) :- soft(X).\nred(X) :- new(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nfriendly(Z) :- bored(Z), owns(Z,W), wet(W).\nbusy(Y) :- hungry(Y), friend(Y,W), angry(W).\ncalm(Y) :- clever(Y), likes(Y,A), big(A).\nstrong(X) :- hungry(X), likes(X,B), big(B).\nsibling(X,Y) :- angry(X), tall(Y), friend(X,Y).\nlight(X) :- wet(X).\nangry(X) :- happy(X).\nfriend(X,Y) :- funny(X), busy(Y).\nfunny(X) :- angry(X).\nlikes(X,Y) :- weak(X), light(Y), owns(X,Y).\nheavy(phone).\nbrave(dave).\ndislikes(alice,book).\nfriend(carol,frank).\nowns(dave,book).\nsad(carol).\nfriend(frank,dave).\nparent(alice,eve).\nfriendly(george).\nowns(carol,ball).\ndislikes(eve,phone).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all Z, if there exists W such that person Z is bored and person Z owns object W and object W is wet, then person Z is friendly.\nFor all Y, if there exists W such that person Y is hungry and person Y is a friend of person W and person W is angry, then person Y is busy.\nFor all Y, if there exists A such that person Y is clever and person Y likes object A and object A is big, then person Y is calm.\nFor all X, if there exists B such that person X is hungry and person X likes object B and object B is big, then person X is strong.\nFor all X, Y, if person X is angry and person Y is tall and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if object X is wet, then object X is light.\nFor all X, if person X is happy, then person X is angry.\nFor all X, Y, if person X is funny and person Y is busy, then person X is a friend of person Y.\nFor all X, if person X is angry, then person X is funny.\nFor all X, Y, if person X is weak and object Y is light and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nphone is heavy.\ndave is brave.\nalice dislikes book.\ncarol is a friend of frank.\ndave owns book.\ncarol is sad.\nfrank is a friend of dave.\nalice is a parent of eve.\ngeorge is friendly.\ncarol owns ball.\neve dislikes phone.\nbook is wet.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 813,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(phone).",
    "c": "small(X) :- heavy(X).\nrough(X) :- small(X).\ndirty(X) :- rough(X).\nclean(X) :- dirty(X).\nsmooth(X) :- clean(X).\nsoft(X) :- smooth(X).\nnew(X) :- soft(X).\nred(X) :- new(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nfriendly(Z) :- bored(Z), owns(Z,W), wet(W).\nbusy(Y) :- hungry(Y), friend(Y,W), angry(W).\ncalm(Y) :- clever(Y), likes(Y,A), big(A).\nstrong(X) :- hungry(X), likes(X,B), big(B).\nsibling(X,Y) :- angry(X), tall(Y), friend(X,Y).\nlight(X) :- wet(X).\nangry(X) :- happy(X).\nfriend(X,Y) :- funny(X), busy(Y).\nfunny(X) :- angry(X).\nlikes(X,Y) :- weak(X), light(Y), owns(X,Y).\nold(phone).\nbrave(dave).\ndislikes(alice,book).\nfriend(carol,frank).\nowns(dave,book).\nsad(carol).\nfriend(frank,dave).\nparent(alice,eve).\nfriendly(george).\nowns(carol,ball).\ndislikes(eve,phone).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all Z, if there exists W such that person Z is bored and person Z owns object W and object W is wet, then person Z is friendly.\nFor all Y, if there exists W such that person Y is hungry and person Y is a friend of person W and person W is angry, then person Y is busy.\nFor all Y, if there exists A such that person Y is clever and person Y likes object A and object A is big, then person Y is calm.\nFor all X, if there exists B such that person X is hungry and person X likes object B and object B is big, then person X is strong.\nFor all X, Y, if person X is angry and person Y is tall and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if object X is wet, then object X is light.\nFor all X, if person X is happy, then person X is angry.\nFor all X, Y, if person X is funny and person Y is busy, then person X is a friend of person Y.\nFor all X, if person X is angry, then person X is funny.\nFor all X, Y, if person X is weak and object Y is light and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nphone is old.\ndave is brave.\nalice dislikes book.\ncarol is a friend of frank.\ndave owns book.\ncarol is sad.\nfrank is a friend of dave.\nalice is a parent of eve.\ngeorge is friendly.\ncarol owns ball.\neve dislikes phone.\nbook is wet.\n\nQUESTION:\nCould phone is heavy explain phone is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 814,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(eve).",
    "c": "small(X) :- heavy(X).\nrough(X) :- small(X).\ndirty(X) :- rough(X).\nclean(X) :- dirty(X).\nsmooth(X) :- clean(X).\nsoft(X) :- smooth(X).\nnew(X) :- soft(X).\nred(X) :- new(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nfriendly(Z) :- bored(Z), owns(Z,W), wet(W).\nbusy(Y) :- hungry(Y), friend(Y,W), angry(W).\ncalm(Y) :- clever(Y), likes(Y,A), big(A).\nstrong(X) :- hungry(X), likes(X,B), big(B).\nsibling(X,Y) :- angry(X), tall(Y), friend(X,Y).\nlight(X) :- wet(X).\nangry(X) :- happy(X).\nfriend(X,Y) :- funny(X), busy(Y).\nfunny(X) :- angry(X).\nlikes(X,Y) :- weak(X), light(Y), owns(X,Y).\nold(phone).\nbrave(dave).\ndislikes(alice,book).\nfriend(carol,frank).\nowns(dave,book).\nsad(carol).\nfriend(frank,dave).\nparent(alice,eve).\nfriendly(george).\nowns(carol,ball).\ndislikes(eve,phone).\nwet(book).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all Z, if there exists W such that person Z is bored and person Z owns object W and object W is wet, then person Z is friendly.\nFor all Y, if there exists W such that person Y is hungry and person Y is a friend of person W and person W is angry, then person Y is busy.\nFor all Y, if there exists A such that person Y is clever and person Y likes object A and object A is big, then person Y is calm.\nFor all X, if there exists B such that person X is hungry and person X likes object B and object B is big, then person X is strong.\nFor all X, Y, if person X is angry and person Y is tall and person X is a friend of person Y, then person X is a sibling of person Y.\nFor all X, if object X is wet, then object X is light.\nFor all X, if person X is happy, then person X is angry.\nFor all X, Y, if person X is funny and person Y is busy, then person X is a friend of person Y.\nFor all X, if person X is angry, then person X is funny.\nFor all X, Y, if person X is weak and object Y is light and person X owns object Y, then person X likes object Y.\n\nAnd the following facts:\nphone is old.\ndave is brave.\nalice dislikes book.\ncarol is a friend of frank.\ndave owns book.\ncarol is sad.\nfrank is a friend of dave.\nalice is a parent of eve.\ngeorge is friendly.\ncarol owns ball.\neve dislikes phone.\nbook is wet.\n\nQUESTION:\nCould eve is hungry explain phone is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 815,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(pencil).",
    "c": "small(X) :- new(X).\nheavy(X) :- small(X).\nred(X) :- heavy(X).\nnew(X) :- red(X).\ndirty(X) :- new(X).\nwet(X) :- dirty(X).\ndirty(X) :- wet(X).\nsoft(X) :- dirty(X).\nnew(X) :- soft(X).\nold(X) :- new(X).\nlight(X) :- old(X).\nbig(X) :- light(X).\nold(X) :- big(X).\nsmooth(X) :- old(X).\nclean(X) :- smooth(X).\nsoft(X) :- clean(X).\nheavy(X) :- soft(X).\nhard(X) :- heavy(X).\nred(X) :- hard(X).\nheavy(X) :- red(X).\nnew(pencil).\nlikes(frank,apple).\nexcited(eve).\nenemy(alice,george).\nfriend(george,frank).\nclever(dave).\nsibling(carol,alice).\nfriend(alice,frank).\nlikes(dave,pencil).\nbored(george).\nparent(dave,eve).\nowns(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is heavy.\n\nAnd the following facts:\npencil is new.\nfrank likes apple.\neve is excited.\nalice is an enemy of george.\ngeorge is a friend of frank.\ndave is clever.\ncarol is a sibling of alice.\nalice is a friend of frank.\ndave likes pencil.\ngeorge is bored.\ndave is a parent of eve.\neve owns phone.\n\nQUESTION:\nIs pencil is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 816,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "new(apple).",
    "c": "small(X) :- new(X).\nheavy(X) :- small(X).\nred(X) :- heavy(X).\nnew(X) :- red(X).\ndirty(X) :- new(X).\nwet(X) :- dirty(X).\ndirty(X) :- wet(X).\nsoft(X) :- dirty(X).\nnew(X) :- soft(X).\nold(X) :- new(X).\nlight(X) :- old(X).\nbig(X) :- light(X).\nold(X) :- big(X).\nsmooth(X) :- old(X).\nclean(X) :- smooth(X).\nsoft(X) :- clean(X).\nheavy(X) :- soft(X).\nhard(X) :- heavy(X).\nred(X) :- hard(X).\nheavy(X) :- red(X).\nnew(pencil).\nlikes(frank,apple).\nexcited(eve).\nenemy(alice,george).\nfriend(george,frank).\nclever(dave).\nsibling(carol,alice).\nfriend(alice,frank).\nlikes(dave,pencil).\nbored(george).\nparent(dave,eve).\nowns(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is heavy.\n\nAnd the following facts:\npencil is new.\nfrank likes apple.\neve is excited.\nalice is an enemy of george.\ngeorge is a friend of frank.\ndave is clever.\ncarol is a sibling of alice.\nalice is a friend of frank.\ndave likes pencil.\ngeorge is bored.\ndave is a parent of eve.\neve owns phone.\n\nQUESTION:\nIs apple is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 817,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(pencil).",
    "c": "small(X) :- new(X).\nheavy(X) :- small(X).\nred(X) :- heavy(X).\nnew(X) :- red(X).\ndirty(X) :- new(X).\nwet(X) :- dirty(X).\ndirty(X) :- wet(X).\nsoft(X) :- dirty(X).\nnew(X) :- soft(X).\nold(X) :- new(X).\nlight(X) :- old(X).\nbig(X) :- light(X).\nold(X) :- big(X).\nsmooth(X) :- old(X).\nclean(X) :- smooth(X).\nsoft(X) :- clean(X).\nheavy(X) :- soft(X).\nhard(X) :- heavy(X).\nred(X) :- hard(X).\nheavy(X) :- red(X).\nheavy(pencil).\nlikes(frank,apple).\nexcited(eve).\nenemy(alice,george).\nfriend(george,frank).\nclever(dave).\nsibling(carol,alice).\nfriend(alice,frank).\nlikes(dave,pencil).\nbored(george).\nparent(dave,eve).\nowns(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is heavy.\n\nAnd the following facts:\npencil is heavy.\nfrank likes apple.\neve is excited.\nalice is an enemy of george.\ngeorge is a friend of frank.\ndave is clever.\ncarol is a sibling of alice.\nalice is a friend of frank.\ndave likes pencil.\ngeorge is bored.\ndave is a parent of eve.\neve owns phone.\n\nQUESTION:\nCould pencil is new explain pencil is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 818,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(frank).",
    "c": "small(X) :- new(X).\nheavy(X) :- small(X).\nred(X) :- heavy(X).\nnew(X) :- red(X).\ndirty(X) :- new(X).\nwet(X) :- dirty(X).\ndirty(X) :- wet(X).\nsoft(X) :- dirty(X).\nnew(X) :- soft(X).\nold(X) :- new(X).\nlight(X) :- old(X).\nbig(X) :- light(X).\nold(X) :- big(X).\nsmooth(X) :- old(X).\nclean(X) :- smooth(X).\nsoft(X) :- clean(X).\nheavy(X) :- soft(X).\nhard(X) :- heavy(X).\nred(X) :- hard(X).\nheavy(X) :- red(X).\nheavy(pencil).\nlikes(frank,apple).\nexcited(eve).\nenemy(alice,george).\nfriend(george,frank).\nclever(dave).\nsibling(carol,alice).\nfriend(alice,frank).\nlikes(dave,pencil).\nbored(george).\nparent(dave,eve).\nowns(eve,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is heavy.\n\nAnd the following facts:\npencil is heavy.\nfrank likes apple.\neve is excited.\nalice is an enemy of george.\ngeorge is a friend of frank.\ndave is clever.\ncarol is a sibling of alice.\nalice is a friend of frank.\ndave likes pencil.\ngeorge is bored.\ndave is a parent of eve.\neve owns phone.\n\nQUESTION:\nCould frank is hungry explain pencil is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 819,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(alice).",
    "c": "hungry(X) :- clever(X).\ntall(X) :- hungry(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nangry(X) :- calm(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nhappy(X) :- clever(X).\ntired(X) :- happy(X).\nclever(X) :- tired(X).\nfunny(X) :- clever(X).\nexcited(X) :- funny(X).\nhappy(X) :- excited(X).\ntired(X) :- happy(X).\nbored(X) :- tired(X).\nstrong(X) :- bored(X).\nweak(X) :- strong(X).\ntall(X) :- weak(X).\ncalm(X) :- tall(X).\nsad(X) :- calm(X).\nclever(alice).\nowns(carol,phone).\nsibling(alice,bob).\nlikes(eve,ball).\nhard(apple).\ncurious(eve).\nwet(car).\nsibling(eve,alice).\nclean(ball).\nowns(george,ball).\nlikes(alice,phone).\nwet(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\n\nAnd the following facts:\nalice is clever.\ncarol owns phone.\nalice is a sibling of bob.\neve likes ball.\napple is hard.\neve is curious.\ncar is wet.\neve is a sibling of alice.\nball is clean.\ngeorge owns ball.\nalice likes phone.\napple is wet.\n\nQUESTION:\nIs alice is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 820,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(apple).",
    "c": "hungry(X) :- clever(X).\ntall(X) :- hungry(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nangry(X) :- calm(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nhappy(X) :- clever(X).\ntired(X) :- happy(X).\nclever(X) :- tired(X).\nfunny(X) :- clever(X).\nexcited(X) :- funny(X).\nhappy(X) :- excited(X).\ntired(X) :- happy(X).\nbored(X) :- tired(X).\nstrong(X) :- bored(X).\nweak(X) :- strong(X).\ntall(X) :- weak(X).\ncalm(X) :- tall(X).\nsad(X) :- calm(X).\nclever(alice).\nowns(carol,phone).\nsibling(alice,bob).\nlikes(eve,ball).\nhard(apple).\ncurious(eve).\nwet(car).\nsibling(eve,alice).\nclean(ball).\nowns(george,ball).\nlikes(alice,phone).\nwet(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\n\nAnd the following facts:\nalice is clever.\ncarol owns phone.\nalice is a sibling of bob.\neve likes ball.\napple is hard.\neve is curious.\ncar is wet.\neve is a sibling of alice.\nball is clean.\ngeorge owns ball.\nalice likes phone.\napple is wet.\n\nQUESTION:\nIs apple is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 821,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(alice).",
    "c": "hungry(X) :- clever(X).\ntall(X) :- hungry(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nangry(X) :- calm(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nhappy(X) :- clever(X).\ntired(X) :- happy(X).\nclever(X) :- tired(X).\nfunny(X) :- clever(X).\nexcited(X) :- funny(X).\nhappy(X) :- excited(X).\ntired(X) :- happy(X).\nbored(X) :- tired(X).\nstrong(X) :- bored(X).\nweak(X) :- strong(X).\ntall(X) :- weak(X).\ncalm(X) :- tall(X).\nsad(X) :- calm(X).\nsad(alice).\nowns(carol,phone).\nsibling(alice,bob).\nlikes(eve,ball).\nhard(apple).\ncurious(eve).\nwet(car).\nsibling(eve,alice).\nclean(ball).\nowns(george,ball).\nlikes(alice,phone).\nwet(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\n\nAnd the following facts:\nalice is sad.\ncarol owns phone.\nalice is a sibling of bob.\neve likes ball.\napple is hard.\neve is curious.\ncar is wet.\neve is a sibling of alice.\nball is clean.\ngeorge owns ball.\nalice likes phone.\napple is wet.\n\nQUESTION:\nCould alice is clever explain alice is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 822,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(dave).",
    "c": "hungry(X) :- clever(X).\ntall(X) :- hungry(X).\nweak(X) :- tall(X).\ncalm(X) :- weak(X).\nangry(X) :- calm(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nhappy(X) :- clever(X).\ntired(X) :- happy(X).\nclever(X) :- tired(X).\nfunny(X) :- clever(X).\nexcited(X) :- funny(X).\nhappy(X) :- excited(X).\ntired(X) :- happy(X).\nbored(X) :- tired(X).\nstrong(X) :- bored(X).\nweak(X) :- strong(X).\ntall(X) :- weak(X).\ncalm(X) :- tall(X).\nsad(X) :- calm(X).\nsad(alice).\nowns(carol,phone).\nsibling(alice,bob).\nlikes(eve,ball).\nhard(apple).\ncurious(eve).\nwet(car).\nsibling(eve,alice).\nclean(ball).\nowns(george,ball).\nlikes(alice,phone).\nwet(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\n\nAnd the following facts:\nalice is sad.\ncarol owns phone.\nalice is a sibling of bob.\neve likes ball.\napple is hard.\neve is curious.\ncar is wet.\neve is a sibling of alice.\nball is clean.\ngeorge owns ball.\nalice likes phone.\napple is wet.\n\nQUESTION:\nCould dave is tired explain alice is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 823,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(ball).",
    "c": "smooth(X) :- heavy(X).\nclean(X) :- smooth(X).\nlight(X) :- clean(X).\nred(X) :- light(X).\nhard(X) :- red(X).\nbig(X) :- hard(X).\nwet(X) :- big(X).\nsmall(X) :- wet(X).\nnew(X) :- small(X).\nsoft(X) :- new(X).\ndirty(X) :- soft(X).\nrough(X) :- dirty(X).\nold(X) :- rough(X).\nsmooth(X) :- old(X).\ndirty(X) :- smooth(X).\nsoft(X) :- dirty(X).\nrough(X) :- soft(X).\ndirty(X) :- rough(X).\nsoft(X) :- dirty(X).\nwet(X) :- soft(X).\nheavy(ball).\nenemy(dave,carol).\nfriend(alice,frank).\nowns(eve,phone).\nenemy(george,alice).\nstrong(george).\nlikes(eve,pencil).\nbrave(frank).\nsibling(eve,frank).\nbusy(dave).\nclever(frank).\nlikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is wet.\nFor all X, if object X is wet, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\n\nAnd the following facts:\nball is heavy.\ndave is an enemy of carol.\nalice is a friend of frank.\neve owns phone.\ngeorge is an enemy of alice.\ngeorge is strong.\neve likes pencil.\nfrank is brave.\neve is a sibling of frank.\ndave is busy.\nfrank is clever.\ncarol likes pencil.\n\nQUESTION:\nIs ball is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 824,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(phone).",
    "c": "smooth(X) :- heavy(X).\nclean(X) :- smooth(X).\nlight(X) :- clean(X).\nred(X) :- light(X).\nhard(X) :- red(X).\nbig(X) :- hard(X).\nwet(X) :- big(X).\nsmall(X) :- wet(X).\nnew(X) :- small(X).\nsoft(X) :- new(X).\ndirty(X) :- soft(X).\nrough(X) :- dirty(X).\nold(X) :- rough(X).\nsmooth(X) :- old(X).\ndirty(X) :- smooth(X).\nsoft(X) :- dirty(X).\nrough(X) :- soft(X).\ndirty(X) :- rough(X).\nsoft(X) :- dirty(X).\nwet(X) :- soft(X).\nheavy(ball).\nenemy(dave,carol).\nfriend(alice,frank).\nowns(eve,phone).\nenemy(george,alice).\nstrong(george).\nlikes(eve,pencil).\nbrave(frank).\nsibling(eve,frank).\nbusy(dave).\nclever(frank).\nlikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is wet.\nFor all X, if object X is wet, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\n\nAnd the following facts:\nball is heavy.\ndave is an enemy of carol.\nalice is a friend of frank.\neve owns phone.\ngeorge is an enemy of alice.\ngeorge is strong.\neve likes pencil.\nfrank is brave.\neve is a sibling of frank.\ndave is busy.\nfrank is clever.\ncarol likes pencil.\n\nQUESTION:\nIs phone is red true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 825,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "smooth(X) :- heavy(X).\nclean(X) :- smooth(X).\nlight(X) :- clean(X).\nred(X) :- light(X).\nhard(X) :- red(X).\nbig(X) :- hard(X).\nwet(X) :- big(X).\nsmall(X) :- wet(X).\nnew(X) :- small(X).\nsoft(X) :- new(X).\ndirty(X) :- soft(X).\nrough(X) :- dirty(X).\nold(X) :- rough(X).\nsmooth(X) :- old(X).\ndirty(X) :- smooth(X).\nsoft(X) :- dirty(X).\nrough(X) :- soft(X).\ndirty(X) :- rough(X).\nsoft(X) :- dirty(X).\nwet(X) :- soft(X).\nwet(ball).\nenemy(dave,carol).\nfriend(alice,frank).\nowns(eve,phone).\nenemy(george,alice).\nstrong(george).\nlikes(eve,pencil).\nbrave(frank).\nsibling(eve,frank).\nbusy(dave).\nclever(frank).\nlikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is wet.\nFor all X, if object X is wet, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\n\nAnd the following facts:\nball is wet.\ndave is an enemy of carol.\nalice is a friend of frank.\neve owns phone.\ngeorge is an enemy of alice.\ngeorge is strong.\neve likes pencil.\nfrank is brave.\neve is a sibling of frank.\ndave is busy.\nfrank is clever.\ncarol likes pencil.\n\nQUESTION:\nCould ball is heavy explain ball is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 826,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(george).",
    "c": "smooth(X) :- heavy(X).\nclean(X) :- smooth(X).\nlight(X) :- clean(X).\nred(X) :- light(X).\nhard(X) :- red(X).\nbig(X) :- hard(X).\nwet(X) :- big(X).\nsmall(X) :- wet(X).\nnew(X) :- small(X).\nsoft(X) :- new(X).\ndirty(X) :- soft(X).\nrough(X) :- dirty(X).\nold(X) :- rough(X).\nsmooth(X) :- old(X).\ndirty(X) :- smooth(X).\nsoft(X) :- dirty(X).\nrough(X) :- soft(X).\ndirty(X) :- rough(X).\nsoft(X) :- dirty(X).\nwet(X) :- soft(X).\nwet(ball).\nenemy(dave,carol).\nfriend(alice,frank).\nowns(eve,phone).\nenemy(george,alice).\nstrong(george).\nlikes(eve,pencil).\nbrave(frank).\nsibling(eve,frank).\nbusy(dave).\nclever(frank).\nlikes(carol,pencil).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is wet.\nFor all X, if object X is wet, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\n\nAnd the following facts:\nball is wet.\ndave is an enemy of carol.\nalice is a friend of frank.\neve owns phone.\ngeorge is an enemy of alice.\ngeorge is strong.\neve likes pencil.\nfrank is brave.\neve is a sibling of frank.\ndave is busy.\nfrank is clever.\ncarol likes pencil.\n\nQUESTION:\nCould george is calm explain ball is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 827,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(pencil).",
    "c": "light(X) :- small(X).\nsmooth(X) :- light(X).\nrough(X) :- smooth(X).\nwet(X) :- rough(X).\nclean(X) :- wet(X).\nhard(X) :- clean(X).\nnew(X) :- hard(X).\nold(X) :- new(X).\nheavy(X) :- old(X).\nred(X) :- heavy(X).\nbig(X) :- red(X).\ndirty(X) :- big(X).\nsoft(X) :- dirty(X).\nbig(X) :- soft(X).\nsoft(X) :- big(X).\nbig(X) :- soft(X).\nbig(X) :- big(X).\nwet(X) :- big(X).\ndirty(X) :- wet(X).\nhard(X) :- dirty(X).\nsmall(pencil).\ndislikes(carol,book).\nlikes(alice,ball).\nowns(eve,book).\nparent(eve,dave).\nangry(eve).\nowns(dave,apple).\nsibling(dave,george).\ndislikes(alice,apple).\ndislikes(dave,book).\nparent(frank,bob).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is big.\nFor all X, if object X is big, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\n\nAnd the following facts:\npencil is small.\ncarol dislikes book.\nalice likes ball.\neve owns book.\neve is a parent of dave.\neve is angry.\ndave owns apple.\ndave is a sibling of george.\nalice dislikes apple.\ndave dislikes book.\nfrank is a parent of bob.\nalice owns apple.\n\nQUESTION:\nIs pencil is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 828,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "light(X) :- small(X).\nsmooth(X) :- light(X).\nrough(X) :- smooth(X).\nwet(X) :- rough(X).\nclean(X) :- wet(X).\nhard(X) :- clean(X).\nnew(X) :- hard(X).\nold(X) :- new(X).\nheavy(X) :- old(X).\nred(X) :- heavy(X).\nbig(X) :- red(X).\ndirty(X) :- big(X).\nsoft(X) :- dirty(X).\nbig(X) :- soft(X).\nsoft(X) :- big(X).\nbig(X) :- soft(X).\nbig(X) :- big(X).\nwet(X) :- big(X).\ndirty(X) :- wet(X).\nhard(X) :- dirty(X).\nsmall(pencil).\ndislikes(carol,book).\nlikes(alice,ball).\nowns(eve,book).\nparent(eve,dave).\nangry(eve).\nowns(dave,apple).\nsibling(dave,george).\ndislikes(alice,apple).\ndislikes(dave,book).\nparent(frank,bob).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is big.\nFor all X, if object X is big, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\n\nAnd the following facts:\npencil is small.\ncarol dislikes book.\nalice likes ball.\neve owns book.\neve is a parent of dave.\neve is angry.\ndave owns apple.\ndave is a sibling of george.\nalice dislikes apple.\ndave dislikes book.\nfrank is a parent of bob.\nalice owns apple.\n\nQUESTION:\nIs dave is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 829,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(pencil).",
    "c": "light(X) :- small(X).\nsmooth(X) :- light(X).\nrough(X) :- smooth(X).\nwet(X) :- rough(X).\nclean(X) :- wet(X).\nhard(X) :- clean(X).\nnew(X) :- hard(X).\nold(X) :- new(X).\nheavy(X) :- old(X).\nred(X) :- heavy(X).\nbig(X) :- red(X).\ndirty(X) :- big(X).\nsoft(X) :- dirty(X).\nbig(X) :- soft(X).\nsoft(X) :- big(X).\nbig(X) :- soft(X).\nbig(X) :- big(X).\nwet(X) :- big(X).\ndirty(X) :- wet(X).\nhard(X) :- dirty(X).\nhard(pencil).\ndislikes(carol,book).\nlikes(alice,ball).\nowns(eve,book).\nparent(eve,dave).\nangry(eve).\nowns(dave,apple).\nsibling(dave,george).\ndislikes(alice,apple).\ndislikes(dave,book).\nparent(frank,bob).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is big.\nFor all X, if object X is big, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\n\nAnd the following facts:\npencil is hard.\ncarol dislikes book.\nalice likes ball.\neve owns book.\neve is a parent of dave.\neve is angry.\ndave owns apple.\ndave is a sibling of george.\nalice dislikes apple.\ndave dislikes book.\nfrank is a parent of bob.\nalice owns apple.\n\nQUESTION:\nCould pencil is small explain pencil is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 830,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(carol).",
    "c": "light(X) :- small(X).\nsmooth(X) :- light(X).\nrough(X) :- smooth(X).\nwet(X) :- rough(X).\nclean(X) :- wet(X).\nhard(X) :- clean(X).\nnew(X) :- hard(X).\nold(X) :- new(X).\nheavy(X) :- old(X).\nred(X) :- heavy(X).\nbig(X) :- red(X).\ndirty(X) :- big(X).\nsoft(X) :- dirty(X).\nbig(X) :- soft(X).\nsoft(X) :- big(X).\nbig(X) :- soft(X).\nbig(X) :- big(X).\nwet(X) :- big(X).\ndirty(X) :- wet(X).\nhard(X) :- dirty(X).\nhard(pencil).\ndislikes(carol,book).\nlikes(alice,ball).\nowns(eve,book).\nparent(eve,dave).\nangry(eve).\nowns(dave,apple).\nsibling(dave,george).\ndislikes(alice,apple).\ndislikes(dave,book).\nparent(frank,bob).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is big.\nFor all X, if object X is big, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\n\nAnd the following facts:\npencil is hard.\ncarol dislikes book.\nalice likes ball.\neve owns book.\neve is a parent of dave.\neve is angry.\ndave owns apple.\ndave is a sibling of george.\nalice dislikes apple.\ndave dislikes book.\nfrank is a parent of bob.\nalice owns apple.\n\nQUESTION:\nCould carol is sad explain pencil is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 831,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(dave).",
    "c": "tired(X) :- strong(X).\nhungry(Z) :- weak(Z), soft(F).\nparent(Z,Y) :- excited(Y), calm(Z).\nclever(Z) :- friendly(Z), sibling(Z,B), bored(B).\nowns(Y,Z) :- excited(Y), old(Z), likes(Y,U).\nlight(Z) :- hard(Z).\nhard(X) :- red(X), dislikes(V,X), friendly(V).\nhappy(Z) :- happy(Z), friend(Z,A), funny(A).\nwet(X) :- clean(X), likes(B,X), busy(B).\ndirty(Y) :- old(Y), dislikes(V,Y), brave(V).\nnew(X) :- soft(X).\nparent(X,Y) :- calm(X), happy(Y).\nold(X) :- dirty(X).\ntall(X) :- happy(X), curious(X).\nfriendly(X) :- calm(X).\ncurious(X) :- busy(X).\nexcited(X) :- tall(X), calm(X).\ncurious(X) :- brave(X).\nlight(X) :- big(X).\nclever(X) :- weak(X).\nstrong(dave).\ndislikes(george,apple).\nheavy(book).\nbusy(alice).\nsoft(ball).\nwet(book).\nsibling(alice,bob).\nenemy(eve,carol).\nlikes(bob,ball).\nweak(eve).\nlikes(dave,book).\nsmooth(apple).\nlikes(alice,ball).\nfriend(alice,bob).\nclever(carol).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is tired.\nFor all Z, if there exists F such that person Z is weak and object F is soft, then person Z is hungry.\nFor all Y, Z, if person Y is excited and person Z is calm, then person Z is a parent of person Y.\nFor all Z, if there exists B such that person Z is friendly and person Z is a sibling of person B and person B is bored, then person Z is clever.\nFor all Y, Z, if there exists U such that person Y is excited and object Z is old and person Y likes object U, then person Y owns object Z.\nFor all Z, if object Z is hard, then object Z is light.\nFor all X, if there exists V such that object X is red and person V dislikes object X and person V is friendly, then object X is hard.\nFor all Z, if there exists A such that person Z is happy and person Z is a friend of person A and person A is funny, then person Z is happy.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is busy, then object X is wet.\nFor all Y, if there exists V such that object Y is old and person V dislikes object Y and person V is brave, then object Y is dirty.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is calm and person Y is happy, then person X is a parent of person Y.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if person X is happy and person X is curious, then person X is tall.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is tall and person X is calm, then person X is excited.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if object X is big, then object X is light.\nFor all X, if person X is weak, then person X is clever.\n\nAnd the following facts:\ndave is strong.\ngeorge dislikes apple.\nbook is heavy.\nalice is busy.\nball is soft.\nbook is wet.\nalice is a sibling of bob.\neve is an enemy of carol.\nbob likes ball.\neve is weak.\ndave likes book.\napple is smooth.\nalice likes ball.\nalice is a friend of bob.\ncarol is clever.\ncarol is excited.\n\nQUESTION:\nIs dave is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 832,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(pencil).",
    "c": "tired(X) :- strong(X).\nhungry(Z) :- weak(Z), soft(F).\nparent(Z,Y) :- excited(Y), calm(Z).\nclever(Z) :- friendly(Z), sibling(Z,B), bored(B).\nowns(Y,Z) :- excited(Y), old(Z), likes(Y,U).\nlight(Z) :- hard(Z).\nhard(X) :- red(X), dislikes(V,X), friendly(V).\nhappy(Z) :- happy(Z), friend(Z,A), funny(A).\nwet(X) :- clean(X), likes(B,X), busy(B).\ndirty(Y) :- old(Y), dislikes(V,Y), brave(V).\nnew(X) :- soft(X).\nparent(X,Y) :- calm(X), happy(Y).\nold(X) :- dirty(X).\ntall(X) :- happy(X), curious(X).\nfriendly(X) :- calm(X).\ncurious(X) :- busy(X).\nexcited(X) :- tall(X), calm(X).\ncurious(X) :- brave(X).\nlight(X) :- big(X).\nclever(X) :- weak(X).\nstrong(dave).\ndislikes(george,apple).\nheavy(book).\nbusy(alice).\nsoft(ball).\nwet(book).\nsibling(alice,bob).\nenemy(eve,carol).\nlikes(bob,ball).\nweak(eve).\nlikes(dave,book).\nsmooth(apple).\nlikes(alice,ball).\nfriend(alice,bob).\nclever(carol).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is tired.\nFor all Z, if there exists F such that person Z is weak and object F is soft, then person Z is hungry.\nFor all Y, Z, if person Y is excited and person Z is calm, then person Z is a parent of person Y.\nFor all Z, if there exists B such that person Z is friendly and person Z is a sibling of person B and person B is bored, then person Z is clever.\nFor all Y, Z, if there exists U such that person Y is excited and object Z is old and person Y likes object U, then person Y owns object Z.\nFor all Z, if object Z is hard, then object Z is light.\nFor all X, if there exists V such that object X is red and person V dislikes object X and person V is friendly, then object X is hard.\nFor all Z, if there exists A such that person Z is happy and person Z is a friend of person A and person A is funny, then person Z is happy.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is busy, then object X is wet.\nFor all Y, if there exists V such that object Y is old and person V dislikes object Y and person V is brave, then object Y is dirty.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is calm and person Y is happy, then person X is a parent of person Y.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if person X is happy and person X is curious, then person X is tall.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is tall and person X is calm, then person X is excited.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if object X is big, then object X is light.\nFor all X, if person X is weak, then person X is clever.\n\nAnd the following facts:\ndave is strong.\ngeorge dislikes apple.\nbook is heavy.\nalice is busy.\nball is soft.\nbook is wet.\nalice is a sibling of bob.\neve is an enemy of carol.\nbob likes ball.\neve is weak.\ndave likes book.\napple is smooth.\nalice likes ball.\nalice is a friend of bob.\ncarol is clever.\ncarol is excited.\n\nQUESTION:\nIs pencil is smooth true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 833,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(dave).",
    "c": "tired(X) :- strong(X).\nhungry(Z) :- weak(Z), soft(F).\nparent(Z,Y) :- excited(Y), calm(Z).\nclever(Z) :- friendly(Z), sibling(Z,B), bored(B).\nowns(Y,Z) :- excited(Y), old(Z), likes(Y,U).\nlight(Z) :- hard(Z).\nhard(X) :- red(X), dislikes(V,X), friendly(V).\nhappy(Z) :- happy(Z), friend(Z,A), funny(A).\nwet(X) :- clean(X), likes(B,X), busy(B).\ndirty(Y) :- old(Y), dislikes(V,Y), brave(V).\nnew(X) :- soft(X).\nparent(X,Y) :- calm(X), happy(Y).\nold(X) :- dirty(X).\ntall(X) :- happy(X), curious(X).\nfriendly(X) :- calm(X).\ncurious(X) :- busy(X).\nexcited(X) :- tall(X), calm(X).\ncurious(X) :- brave(X).\nlight(X) :- big(X).\nclever(X) :- weak(X).\ntired(dave).\ndislikes(george,apple).\nheavy(book).\nbusy(alice).\nsoft(ball).\nwet(book).\nsibling(alice,bob).\nenemy(eve,carol).\nlikes(bob,ball).\nweak(eve).\nlikes(dave,book).\nsmooth(apple).\nlikes(alice,ball).\nfriend(alice,bob).\nclever(carol).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is tired.\nFor all Z, if there exists F such that person Z is weak and object F is soft, then person Z is hungry.\nFor all Y, Z, if person Y is excited and person Z is calm, then person Z is a parent of person Y.\nFor all Z, if there exists B such that person Z is friendly and person Z is a sibling of person B and person B is bored, then person Z is clever.\nFor all Y, Z, if there exists U such that person Y is excited and object Z is old and person Y likes object U, then person Y owns object Z.\nFor all Z, if object Z is hard, then object Z is light.\nFor all X, if there exists V such that object X is red and person V dislikes object X and person V is friendly, then object X is hard.\nFor all Z, if there exists A such that person Z is happy and person Z is a friend of person A and person A is funny, then person Z is happy.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is busy, then object X is wet.\nFor all Y, if there exists V such that object Y is old and person V dislikes object Y and person V is brave, then object Y is dirty.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is calm and person Y is happy, then person X is a parent of person Y.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if person X is happy and person X is curious, then person X is tall.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is tall and person X is calm, then person X is excited.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if object X is big, then object X is light.\nFor all X, if person X is weak, then person X is clever.\n\nAnd the following facts:\ndave is tired.\ngeorge dislikes apple.\nbook is heavy.\nalice is busy.\nball is soft.\nbook is wet.\nalice is a sibling of bob.\neve is an enemy of carol.\nbob likes ball.\neve is weak.\ndave likes book.\napple is smooth.\nalice likes ball.\nalice is a friend of bob.\ncarol is clever.\ncarol is excited.\n\nQUESTION:\nCould dave is strong explain dave is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 834,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(book).",
    "c": "tired(X) :- strong(X).\nhungry(Z) :- weak(Z), soft(F).\nparent(Z,Y) :- excited(Y), calm(Z).\nclever(Z) :- friendly(Z), sibling(Z,B), bored(B).\nowns(Y,Z) :- excited(Y), old(Z), likes(Y,U).\nlight(Z) :- hard(Z).\nhard(X) :- red(X), dislikes(V,X), friendly(V).\nhappy(Z) :- happy(Z), friend(Z,A), funny(A).\nwet(X) :- clean(X), likes(B,X), busy(B).\ndirty(Y) :- old(Y), dislikes(V,Y), brave(V).\nnew(X) :- soft(X).\nparent(X,Y) :- calm(X), happy(Y).\nold(X) :- dirty(X).\ntall(X) :- happy(X), curious(X).\nfriendly(X) :- calm(X).\ncurious(X) :- busy(X).\nexcited(X) :- tall(X), calm(X).\ncurious(X) :- brave(X).\nlight(X) :- big(X).\nclever(X) :- weak(X).\ntired(dave).\ndislikes(george,apple).\nheavy(book).\nbusy(alice).\nsoft(ball).\nwet(book).\nsibling(alice,bob).\nenemy(eve,carol).\nlikes(bob,ball).\nweak(eve).\nlikes(dave,book).\nsmooth(apple).\nlikes(alice,ball).\nfriend(alice,bob).\nclever(carol).\nexcited(carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is tired.\nFor all Z, if there exists F such that person Z is weak and object F is soft, then person Z is hungry.\nFor all Y, Z, if person Y is excited and person Z is calm, then person Z is a parent of person Y.\nFor all Z, if there exists B such that person Z is friendly and person Z is a sibling of person B and person B is bored, then person Z is clever.\nFor all Y, Z, if there exists U such that person Y is excited and object Z is old and person Y likes object U, then person Y owns object Z.\nFor all Z, if object Z is hard, then object Z is light.\nFor all X, if there exists V such that object X is red and person V dislikes object X and person V is friendly, then object X is hard.\nFor all Z, if there exists A such that person Z is happy and person Z is a friend of person A and person A is funny, then person Z is happy.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is busy, then object X is wet.\nFor all Y, if there exists V such that object Y is old and person V dislikes object Y and person V is brave, then object Y is dirty.\nFor all X, if object X is soft, then object X is new.\nFor all X, Y, if person X is calm and person Y is happy, then person X is a parent of person Y.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if person X is happy and person X is curious, then person X is tall.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is tall and person X is calm, then person X is excited.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if object X is big, then object X is light.\nFor all X, if person X is weak, then person X is clever.\n\nAnd the following facts:\ndave is tired.\ngeorge dislikes apple.\nbook is heavy.\nalice is busy.\nball is soft.\nbook is wet.\nalice is a sibling of bob.\neve is an enemy of carol.\nbob likes ball.\neve is weak.\ndave likes book.\napple is smooth.\nalice likes ball.\nalice is a friend of bob.\ncarol is clever.\ncarol is excited.\n\nQUESTION:\nCould book is light explain dave is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 835,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(car).",
    "c": "soft(X) :- rough(X).\nwet(Z) :- red(Z), likes(A,Z), strong(A).\nbored(Y) :- curious(Y), enemy(Y,V), happy(V).\nenemy(X,Z) :- weak(Z), clever(X).\nold(Z) :- heavy(Z), hungry(D).\nheavy(Z) :- red(Z), likes(A,Z), bored(A).\nangry(Z) :- happy(Z).\ndirty(Z) :- smooth(Z).\ndirty(Y) :- smooth(Y), dislikes(V,Y), curious(V).\nangry(X) :- clever(X), friend(X,W), tired(W).\ncalm(X) :- brave(X).\nnew(Z) :- old(Z), likes(U,Z), angry(U).\ntall(X) :- calm(X).\ncurious(X) :- busy(X).\nhappy(X) :- hungry(X).\ntall(X) :- curious(X).\nheavy(X) :- small(X).\nclean(X) :- small(X).\nbrave(X) :- friendly(X), weak(X).\nexcited(X) :- weak(X).\nrough(car).\nlikes(alice,book).\nenemy(carol,frank).\ncalm(frank).\nsibling(dave,carol).\nlikes(george,apple).\nfriend(bob,george).\nparent(eve,dave).\nowns(eve,ball).\nbig(ball).\nhungry(carol).\nweak(carol).\nowns(eve,phone).\nenemy(frank,carol).\nowns(frank,book).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is soft.\nFor all Z, if there exists A such that object Z is red and person A likes object Z and person A is strong, then object Z is wet.\nFor all Y, if there exists V such that person Y is curious and person Y is an enemy of person V and person V is happy, then person Y is bored.\nFor all X, Z, if person Z is weak and person X is clever, then person X is an enemy of person Z.\nFor all Z, if there exists D such that object Z is heavy and person D is hungry, then object Z is old.\nFor all Z, if there exists A such that object Z is red and person A likes object Z and person A is bored, then object Z is heavy.\nFor all Z, if person Z is happy, then person Z is angry.\nFor all Z, if object Z is smooth, then object Z is dirty.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is curious, then object Y is dirty.\nFor all X, if there exists W such that person X is clever and person X is a friend of person W and person W is tired, then person X is angry.\nFor all X, if person X is brave, then person X is calm.\nFor all Z, if there exists U such that object Z is old and person U likes object Z and person U is angry, then object Z is new.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is small, then object X is clean.\nFor all X, if person X is friendly and person X is weak, then person X is brave.\nFor all X, if person X is weak, then person X is excited.\n\nAnd the following facts:\ncar is rough.\nalice likes book.\ncarol is an enemy of frank.\nfrank is calm.\ndave is a sibling of carol.\ngeorge likes apple.\nbob is a friend of george.\neve is a parent of dave.\neve owns ball.\nball is big.\ncarol is hungry.\ncarol is weak.\neve owns phone.\nfrank is an enemy of carol.\nfrank owns book.\nfrank is a parent of bob.\n\nQUESTION:\nIs car is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 836,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(bob).",
    "c": "soft(X) :- rough(X).\nwet(Z) :- red(Z), likes(A,Z), strong(A).\nbored(Y) :- curious(Y), enemy(Y,V), happy(V).\nenemy(X,Z) :- weak(Z), clever(X).\nold(Z) :- heavy(Z), hungry(D).\nheavy(Z) :- red(Z), likes(A,Z), bored(A).\nangry(Z) :- happy(Z).\ndirty(Z) :- smooth(Z).\ndirty(Y) :- smooth(Y), dislikes(V,Y), curious(V).\nangry(X) :- clever(X), friend(X,W), tired(W).\ncalm(X) :- brave(X).\nnew(Z) :- old(Z), likes(U,Z), angry(U).\ntall(X) :- calm(X).\ncurious(X) :- busy(X).\nhappy(X) :- hungry(X).\ntall(X) :- curious(X).\nheavy(X) :- small(X).\nclean(X) :- small(X).\nbrave(X) :- friendly(X), weak(X).\nexcited(X) :- weak(X).\nrough(car).\nlikes(alice,book).\nenemy(carol,frank).\ncalm(frank).\nsibling(dave,carol).\nlikes(george,apple).\nfriend(bob,george).\nparent(eve,dave).\nowns(eve,ball).\nbig(ball).\nhungry(carol).\nweak(carol).\nowns(eve,phone).\nenemy(frank,carol).\nowns(frank,book).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is soft.\nFor all Z, if there exists A such that object Z is red and person A likes object Z and person A is strong, then object Z is wet.\nFor all Y, if there exists V such that person Y is curious and person Y is an enemy of person V and person V is happy, then person Y is bored.\nFor all X, Z, if person Z is weak and person X is clever, then person X is an enemy of person Z.\nFor all Z, if there exists D such that object Z is heavy and person D is hungry, then object Z is old.\nFor all Z, if there exists A such that object Z is red and person A likes object Z and person A is bored, then object Z is heavy.\nFor all Z, if person Z is happy, then person Z is angry.\nFor all Z, if object Z is smooth, then object Z is dirty.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is curious, then object Y is dirty.\nFor all X, if there exists W such that person X is clever and person X is a friend of person W and person W is tired, then person X is angry.\nFor all X, if person X is brave, then person X is calm.\nFor all Z, if there exists U such that object Z is old and person U likes object Z and person U is angry, then object Z is new.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is small, then object X is clean.\nFor all X, if person X is friendly and person X is weak, then person X is brave.\nFor all X, if person X is weak, then person X is excited.\n\nAnd the following facts:\ncar is rough.\nalice likes book.\ncarol is an enemy of frank.\nfrank is calm.\ndave is a sibling of carol.\ngeorge likes apple.\nbob is a friend of george.\neve is a parent of dave.\neve owns ball.\nball is big.\ncarol is hungry.\ncarol is weak.\neve owns phone.\nfrank is an enemy of carol.\nfrank owns book.\nfrank is a parent of bob.\n\nQUESTION:\nIs bob is brave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 837,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(car).",
    "c": "soft(X) :- rough(X).\nwet(Z) :- red(Z), likes(A,Z), strong(A).\nbored(Y) :- curious(Y), enemy(Y,V), happy(V).\nenemy(X,Z) :- weak(Z), clever(X).\nold(Z) :- heavy(Z), hungry(D).\nheavy(Z) :- red(Z), likes(A,Z), bored(A).\nangry(Z) :- happy(Z).\ndirty(Z) :- smooth(Z).\ndirty(Y) :- smooth(Y), dislikes(V,Y), curious(V).\nangry(X) :- clever(X), friend(X,W), tired(W).\ncalm(X) :- brave(X).\nnew(Z) :- old(Z), likes(U,Z), angry(U).\ntall(X) :- calm(X).\ncurious(X) :- busy(X).\nhappy(X) :- hungry(X).\ntall(X) :- curious(X).\nheavy(X) :- small(X).\nclean(X) :- small(X).\nbrave(X) :- friendly(X), weak(X).\nexcited(X) :- weak(X).\nsoft(car).\nlikes(alice,book).\nenemy(carol,frank).\ncalm(frank).\nsibling(dave,carol).\nlikes(george,apple).\nfriend(bob,george).\nparent(eve,dave).\nowns(eve,ball).\nbig(ball).\nhungry(carol).\nweak(carol).\nowns(eve,phone).\nenemy(frank,carol).\nowns(frank,book).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is soft.\nFor all Z, if there exists A such that object Z is red and person A likes object Z and person A is strong, then object Z is wet.\nFor all Y, if there exists V such that person Y is curious and person Y is an enemy of person V and person V is happy, then person Y is bored.\nFor all X, Z, if person Z is weak and person X is clever, then person X is an enemy of person Z.\nFor all Z, if there exists D such that object Z is heavy and person D is hungry, then object Z is old.\nFor all Z, if there exists A such that object Z is red and person A likes object Z and person A is bored, then object Z is heavy.\nFor all Z, if person Z is happy, then person Z is angry.\nFor all Z, if object Z is smooth, then object Z is dirty.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is curious, then object Y is dirty.\nFor all X, if there exists W such that person X is clever and person X is a friend of person W and person W is tired, then person X is angry.\nFor all X, if person X is brave, then person X is calm.\nFor all Z, if there exists U such that object Z is old and person U likes object Z and person U is angry, then object Z is new.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is small, then object X is clean.\nFor all X, if person X is friendly and person X is weak, then person X is brave.\nFor all X, if person X is weak, then person X is excited.\n\nAnd the following facts:\ncar is soft.\nalice likes book.\ncarol is an enemy of frank.\nfrank is calm.\ndave is a sibling of carol.\ngeorge likes apple.\nbob is a friend of george.\neve is a parent of dave.\neve owns ball.\nball is big.\ncarol is hungry.\ncarol is weak.\neve owns phone.\nfrank is an enemy of carol.\nfrank owns book.\nfrank is a parent of bob.\n\nQUESTION:\nCould car is rough explain car is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 838,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "soft(X) :- rough(X).\nwet(Z) :- red(Z), likes(A,Z), strong(A).\nbored(Y) :- curious(Y), enemy(Y,V), happy(V).\nenemy(X,Z) :- weak(Z), clever(X).\nold(Z) :- heavy(Z), hungry(D).\nheavy(Z) :- red(Z), likes(A,Z), bored(A).\nangry(Z) :- happy(Z).\ndirty(Z) :- smooth(Z).\ndirty(Y) :- smooth(Y), dislikes(V,Y), curious(V).\nangry(X) :- clever(X), friend(X,W), tired(W).\ncalm(X) :- brave(X).\nnew(Z) :- old(Z), likes(U,Z), angry(U).\ntall(X) :- calm(X).\ncurious(X) :- busy(X).\nhappy(X) :- hungry(X).\ntall(X) :- curious(X).\nheavy(X) :- small(X).\nclean(X) :- small(X).\nbrave(X) :- friendly(X), weak(X).\nexcited(X) :- weak(X).\nsoft(car).\nlikes(alice,book).\nenemy(carol,frank).\ncalm(frank).\nsibling(dave,carol).\nlikes(george,apple).\nfriend(bob,george).\nparent(eve,dave).\nowns(eve,ball).\nbig(ball).\nhungry(carol).\nweak(carol).\nowns(eve,phone).\nenemy(frank,carol).\nowns(frank,book).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is soft.\nFor all Z, if there exists A such that object Z is red and person A likes object Z and person A is strong, then object Z is wet.\nFor all Y, if there exists V such that person Y is curious and person Y is an enemy of person V and person V is happy, then person Y is bored.\nFor all X, Z, if person Z is weak and person X is clever, then person X is an enemy of person Z.\nFor all Z, if there exists D such that object Z is heavy and person D is hungry, then object Z is old.\nFor all Z, if there exists A such that object Z is red and person A likes object Z and person A is bored, then object Z is heavy.\nFor all Z, if person Z is happy, then person Z is angry.\nFor all Z, if object Z is smooth, then object Z is dirty.\nFor all Y, if there exists V such that object Y is smooth and person V dislikes object Y and person V is curious, then object Y is dirty.\nFor all X, if there exists W such that person X is clever and person X is a friend of person W and person W is tired, then person X is angry.\nFor all X, if person X is brave, then person X is calm.\nFor all Z, if there exists U such that object Z is old and person U likes object Z and person U is angry, then object Z is new.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is small, then object X is clean.\nFor all X, if person X is friendly and person X is weak, then person X is brave.\nFor all X, if person X is weak, then person X is excited.\n\nAnd the following facts:\ncar is soft.\nalice likes book.\ncarol is an enemy of frank.\nfrank is calm.\ndave is a sibling of carol.\ngeorge likes apple.\nbob is a friend of george.\neve is a parent of dave.\neve owns ball.\nball is big.\ncarol is hungry.\ncarol is weak.\neve owns phone.\nfrank is an enemy of carol.\nfrank owns book.\nfrank is a parent of bob.\n\nQUESTION:\nCould eve is brave explain car is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 839,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "light(X) :- red(X).\nold(Z) :- wet(Z), likes(B,Z), friendly(B).\nhungry(Y) :- happy(Y).\nangry(Z) :- brave(Z), friend(Z,V), strong(V).\nsmooth(Y) :- small(Y), owns(B,Y), strong(B).\nsoft(X) :- big(X), owns(V,X), funny(V).\nsoft(X) :- smooth(X), hungry(D).\ntall(X) :- busy(X), sibling(X,V), clever(V).\nwet(Y) :- new(Y), likes(U,Y), angry(U).\nweak(X) :- clever(X).\nlikes(X,Y) :- clever(X), wet(Y), dislikes(X,Y).\nnew(X) :- soft(X), hard(X).\nbusy(X) :- weak(X).\nbig(X) :- rough(X), old(X).\nclean(X) :- hard(X), soft(X).\ntall(X) :- friendly(X).\nsmall(X) :- soft(X).\nclean(X) :- hard(X), big(X).\ndislikes(X,Y) :- angry(X), small(Y).\nstrong(X) :- friendly(X), hungry(X).\nred(ball).\nowns(frank,phone).\ndislikes(carol,ball).\nheavy(pencil).\nbrave(george).\nsad(george).\nowns(dave,apple).\nowns(frank,pencil).\nheavy(ball).\ntired(carol).\nbored(frank).\nclever(george).\nlikes(carol,car).\nsoft(car).\nfriend(dave,carol).\nclean(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all Z, if there exists B such that object Z is wet and person B likes object Z and person B is friendly, then object Z is old.\nFor all Y, if person Y is happy, then person Y is hungry.\nFor all Z, if there exists V such that person Z is brave and person Z is a friend of person V and person V is strong, then person Z is angry.\nFor all Y, if there exists B such that object Y is small and person B owns object Y and person B is strong, then object Y is smooth.\nFor all X, if there exists V such that object X is big and person V owns object X and person V is funny, then object X is soft.\nFor all X, if there exists D such that object X is smooth and person D is hungry, then object X is soft.\nFor all X, if there exists V such that person X is busy and person X is a sibling of person V and person V is clever, then person X is tall.\nFor all Y, if there exists U such that object Y is new and person U likes object Y and person U is angry, then object Y is wet.\nFor all X, if person X is clever, then person X is weak.\nFor all X, Y, if person X is clever and object Y is wet and person X dislikes object Y, then person X likes object Y.\nFor all X, if object X is soft and object X is hard, then object X is new.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if object X is rough and object X is old, then object X is big.\nFor all X, if object X is hard and object X is soft, then object X is clean.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is hard and object X is big, then object X is clean.\nFor all X, Y, if person X is angry and object Y is small, then person X dislikes object Y.\nFor all X, if person X is friendly and person X is hungry, then person X is strong.\n\nAnd the following facts:\nball is red.\nfrank owns phone.\ncarol dislikes ball.\npencil is heavy.\ngeorge is brave.\ngeorge is sad.\ndave owns apple.\nfrank owns pencil.\nball is heavy.\ncarol is tired.\nfrank is bored.\ngeorge is clever.\ncarol likes car.\ncar is soft.\ndave is a friend of carol.\napple is clean.\n\nQUESTION:\nIs ball is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 840,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(frank).",
    "c": "light(X) :- red(X).\nold(Z) :- wet(Z), likes(B,Z), friendly(B).\nhungry(Y) :- happy(Y).\nangry(Z) :- brave(Z), friend(Z,V), strong(V).\nsmooth(Y) :- small(Y), owns(B,Y), strong(B).\nsoft(X) :- big(X), owns(V,X), funny(V).\nsoft(X) :- smooth(X), hungry(D).\ntall(X) :- busy(X), sibling(X,V), clever(V).\nwet(Y) :- new(Y), likes(U,Y), angry(U).\nweak(X) :- clever(X).\nlikes(X,Y) :- clever(X), wet(Y), dislikes(X,Y).\nnew(X) :- soft(X), hard(X).\nbusy(X) :- weak(X).\nbig(X) :- rough(X), old(X).\nclean(X) :- hard(X), soft(X).\ntall(X) :- friendly(X).\nsmall(X) :- soft(X).\nclean(X) :- hard(X), big(X).\ndislikes(X,Y) :- angry(X), small(Y).\nstrong(X) :- friendly(X), hungry(X).\nred(ball).\nowns(frank,phone).\ndislikes(carol,ball).\nheavy(pencil).\nbrave(george).\nsad(george).\nowns(dave,apple).\nowns(frank,pencil).\nheavy(ball).\ntired(carol).\nbored(frank).\nclever(george).\nlikes(carol,car).\nsoft(car).\nfriend(dave,carol).\nclean(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all Z, if there exists B such that object Z is wet and person B likes object Z and person B is friendly, then object Z is old.\nFor all Y, if person Y is happy, then person Y is hungry.\nFor all Z, if there exists V such that person Z is brave and person Z is a friend of person V and person V is strong, then person Z is angry.\nFor all Y, if there exists B such that object Y is small and person B owns object Y and person B is strong, then object Y is smooth.\nFor all X, if there exists V such that object X is big and person V owns object X and person V is funny, then object X is soft.\nFor all X, if there exists D such that object X is smooth and person D is hungry, then object X is soft.\nFor all X, if there exists V such that person X is busy and person X is a sibling of person V and person V is clever, then person X is tall.\nFor all Y, if there exists U such that object Y is new and person U likes object Y and person U is angry, then object Y is wet.\nFor all X, if person X is clever, then person X is weak.\nFor all X, Y, if person X is clever and object Y is wet and person X dislikes object Y, then person X likes object Y.\nFor all X, if object X is soft and object X is hard, then object X is new.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if object X is rough and object X is old, then object X is big.\nFor all X, if object X is hard and object X is soft, then object X is clean.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is hard and object X is big, then object X is clean.\nFor all X, Y, if person X is angry and object Y is small, then person X dislikes object Y.\nFor all X, if person X is friendly and person X is hungry, then person X is strong.\n\nAnd the following facts:\nball is red.\nfrank owns phone.\ncarol dislikes ball.\npencil is heavy.\ngeorge is brave.\ngeorge is sad.\ndave owns apple.\nfrank owns pencil.\nball is heavy.\ncarol is tired.\nfrank is bored.\ngeorge is clever.\ncarol likes car.\ncar is soft.\ndave is a friend of carol.\napple is clean.\n\nQUESTION:\nIs frank is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 841,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(ball).",
    "c": "light(X) :- red(X).\nold(Z) :- wet(Z), likes(B,Z), friendly(B).\nhungry(Y) :- happy(Y).\nangry(Z) :- brave(Z), friend(Z,V), strong(V).\nsmooth(Y) :- small(Y), owns(B,Y), strong(B).\nsoft(X) :- big(X), owns(V,X), funny(V).\nsoft(X) :- smooth(X), hungry(D).\ntall(X) :- busy(X), sibling(X,V), clever(V).\nwet(Y) :- new(Y), likes(U,Y), angry(U).\nweak(X) :- clever(X).\nlikes(X,Y) :- clever(X), wet(Y), dislikes(X,Y).\nnew(X) :- soft(X), hard(X).\nbusy(X) :- weak(X).\nbig(X) :- rough(X), old(X).\nclean(X) :- hard(X), soft(X).\ntall(X) :- friendly(X).\nsmall(X) :- soft(X).\nclean(X) :- hard(X), big(X).\ndislikes(X,Y) :- angry(X), small(Y).\nstrong(X) :- friendly(X), hungry(X).\nlight(ball).\nowns(frank,phone).\ndislikes(carol,ball).\nheavy(pencil).\nbrave(george).\nsad(george).\nowns(dave,apple).\nowns(frank,pencil).\nheavy(ball).\ntired(carol).\nbored(frank).\nclever(george).\nlikes(carol,car).\nsoft(car).\nfriend(dave,carol).\nclean(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all Z, if there exists B such that object Z is wet and person B likes object Z and person B is friendly, then object Z is old.\nFor all Y, if person Y is happy, then person Y is hungry.\nFor all Z, if there exists V such that person Z is brave and person Z is a friend of person V and person V is strong, then person Z is angry.\nFor all Y, if there exists B such that object Y is small and person B owns object Y and person B is strong, then object Y is smooth.\nFor all X, if there exists V such that object X is big and person V owns object X and person V is funny, then object X is soft.\nFor all X, if there exists D such that object X is smooth and person D is hungry, then object X is soft.\nFor all X, if there exists V such that person X is busy and person X is a sibling of person V and person V is clever, then person X is tall.\nFor all Y, if there exists U such that object Y is new and person U likes object Y and person U is angry, then object Y is wet.\nFor all X, if person X is clever, then person X is weak.\nFor all X, Y, if person X is clever and object Y is wet and person X dislikes object Y, then person X likes object Y.\nFor all X, if object X is soft and object X is hard, then object X is new.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if object X is rough and object X is old, then object X is big.\nFor all X, if object X is hard and object X is soft, then object X is clean.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is hard and object X is big, then object X is clean.\nFor all X, Y, if person X is angry and object Y is small, then person X dislikes object Y.\nFor all X, if person X is friendly and person X is hungry, then person X is strong.\n\nAnd the following facts:\nball is light.\nfrank owns phone.\ncarol dislikes ball.\npencil is heavy.\ngeorge is brave.\ngeorge is sad.\ndave owns apple.\nfrank owns pencil.\nball is heavy.\ncarol is tired.\nfrank is bored.\ngeorge is clever.\ncarol likes car.\ncar is soft.\ndave is a friend of carol.\napple is clean.\n\nQUESTION:\nCould ball is red explain ball is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 842,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "light(X) :- red(X).\nold(Z) :- wet(Z), likes(B,Z), friendly(B).\nhungry(Y) :- happy(Y).\nangry(Z) :- brave(Z), friend(Z,V), strong(V).\nsmooth(Y) :- small(Y), owns(B,Y), strong(B).\nsoft(X) :- big(X), owns(V,X), funny(V).\nsoft(X) :- smooth(X), hungry(D).\ntall(X) :- busy(X), sibling(X,V), clever(V).\nwet(Y) :- new(Y), likes(U,Y), angry(U).\nweak(X) :- clever(X).\nlikes(X,Y) :- clever(X), wet(Y), dislikes(X,Y).\nnew(X) :- soft(X), hard(X).\nbusy(X) :- weak(X).\nbig(X) :- rough(X), old(X).\nclean(X) :- hard(X), soft(X).\ntall(X) :- friendly(X).\nsmall(X) :- soft(X).\nclean(X) :- hard(X), big(X).\ndislikes(X,Y) :- angry(X), small(Y).\nstrong(X) :- friendly(X), hungry(X).\nlight(ball).\nowns(frank,phone).\ndislikes(carol,ball).\nheavy(pencil).\nbrave(george).\nsad(george).\nowns(dave,apple).\nowns(frank,pencil).\nheavy(ball).\ntired(carol).\nbored(frank).\nclever(george).\nlikes(carol,car).\nsoft(car).\nfriend(dave,carol).\nclean(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is light.\nFor all Z, if there exists B such that object Z is wet and person B likes object Z and person B is friendly, then object Z is old.\nFor all Y, if person Y is happy, then person Y is hungry.\nFor all Z, if there exists V such that person Z is brave and person Z is a friend of person V and person V is strong, then person Z is angry.\nFor all Y, if there exists B such that object Y is small and person B owns object Y and person B is strong, then object Y is smooth.\nFor all X, if there exists V such that object X is big and person V owns object X and person V is funny, then object X is soft.\nFor all X, if there exists D such that object X is smooth and person D is hungry, then object X is soft.\nFor all X, if there exists V such that person X is busy and person X is a sibling of person V and person V is clever, then person X is tall.\nFor all Y, if there exists U such that object Y is new and person U likes object Y and person U is angry, then object Y is wet.\nFor all X, if person X is clever, then person X is weak.\nFor all X, Y, if person X is clever and object Y is wet and person X dislikes object Y, then person X likes object Y.\nFor all X, if object X is soft and object X is hard, then object X is new.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if object X is rough and object X is old, then object X is big.\nFor all X, if object X is hard and object X is soft, then object X is clean.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is hard and object X is big, then object X is clean.\nFor all X, Y, if person X is angry and object Y is small, then person X dislikes object Y.\nFor all X, if person X is friendly and person X is hungry, then person X is strong.\n\nAnd the following facts:\nball is light.\nfrank owns phone.\ncarol dislikes ball.\npencil is heavy.\ngeorge is brave.\ngeorge is sad.\ndave owns apple.\nfrank owns pencil.\nball is heavy.\ncarol is tired.\nfrank is bored.\ngeorge is clever.\ncarol likes car.\ncar is soft.\ndave is a friend of carol.\napple is clean.\n\nQUESTION:\nCould bob is angry explain ball is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 843,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(apple).",
    "c": "heavy(X) :- big(X).\nwet(Z) :- soft(Z), owns(A,Z), strong(A).\nsmooth(X) :- red(X), owns(B,X), bored(B).\nweak(Y) :- excited(Y), enemy(Y,B), weak(B).\nhappy(Z) :- clever(Z), calm(D).\nclever(Y) :- friendly(Y), friend(Y,B), friendly(B).\nhard(X) :- hard(X), owns(V,X), sad(V).\nsmooth(X) :- light(X).\nenemy(Z,X) :- sad(Z), funny(X), friend(X,V).\nbusy(X) :- strong(X).\nsoft(X) :- old(X).\nsad(X) :- strong(X).\nbusy(X) :- tall(X), bored(X).\nweak(X) :- angry(X), tall(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- excited(X), busy(Y).\ndirty(X) :- smooth(X).\nowns(X,Y) :- weak(X), light(Y), likes(X,Y).\nclever(X) :- angry(X).\nsad(X) :- tall(X), weak(X).\nbig(apple).\nrough(car).\ntall(george).\nowns(bob,car).\nold(apple).\nbored(eve).\nfriend(bob,alice).\ndislikes(george,book).\nhungry(dave).\ndislikes(alice,book).\nowns(alice,pencil).\nowns(eve,car).\nfriend(alice,eve).\nparent(bob,frank).\nexcited(dave).\nstrong(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is heavy.\nFor all Z, if there exists A such that object Z is soft and person A owns object Z and person A is strong, then object Z is wet.\nFor all X, if there exists B such that object X is red and person B owns object X and person B is bored, then object X is smooth.\nFor all Y, if there exists B such that person Y is excited and person Y is an enemy of person B and person B is weak, then person Y is weak.\nFor all Z, if there exists D such that person Z is clever and person D is calm, then person Z is happy.\nFor all Y, if there exists B such that person Y is friendly and person Y is a friend of person B and person B is friendly, then person Y is clever.\nFor all X, if there exists V such that object X is hard and person V owns object X and person V is sad, then object X is hard.\nFor all X, if object X is light, then object X is smooth.\nFor all X, Z, if there exists V such that person Z is sad and person X is funny and person X is a friend of person V, then person Z is an enemy of person X.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if object X is old, then object X is soft.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is tall and person X is bored, then person X is busy.\nFor all X, if person X is angry and person X is tall, then person X is weak.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is excited and person Y is busy, then person X is a sibling of person Y.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, Y, if person X is weak and object Y is light and person X likes object Y, then person X owns object Y.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is tall and person X is weak, then person X is sad.\n\nAnd the following facts:\napple is big.\ncar is rough.\ngeorge is tall.\nbob owns car.\napple is old.\neve is bored.\nbob is a friend of alice.\ngeorge dislikes book.\ndave is hungry.\nalice dislikes book.\nalice owns pencil.\neve owns car.\nalice is a friend of eve.\nbob is a parent of frank.\ndave is excited.\nfrank is strong.\n\nQUESTION:\nIs apple is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 844,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(book).",
    "c": "heavy(X) :- big(X).\nwet(Z) :- soft(Z), owns(A,Z), strong(A).\nsmooth(X) :- red(X), owns(B,X), bored(B).\nweak(Y) :- excited(Y), enemy(Y,B), weak(B).\nhappy(Z) :- clever(Z), calm(D).\nclever(Y) :- friendly(Y), friend(Y,B), friendly(B).\nhard(X) :- hard(X), owns(V,X), sad(V).\nsmooth(X) :- light(X).\nenemy(Z,X) :- sad(Z), funny(X), friend(X,V).\nbusy(X) :- strong(X).\nsoft(X) :- old(X).\nsad(X) :- strong(X).\nbusy(X) :- tall(X), bored(X).\nweak(X) :- angry(X), tall(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- excited(X), busy(Y).\ndirty(X) :- smooth(X).\nowns(X,Y) :- weak(X), light(Y), likes(X,Y).\nclever(X) :- angry(X).\nsad(X) :- tall(X), weak(X).\nbig(apple).\nrough(car).\ntall(george).\nowns(bob,car).\nold(apple).\nbored(eve).\nfriend(bob,alice).\ndislikes(george,book).\nhungry(dave).\ndislikes(alice,book).\nowns(alice,pencil).\nowns(eve,car).\nfriend(alice,eve).\nparent(bob,frank).\nexcited(dave).\nstrong(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is heavy.\nFor all Z, if there exists A such that object Z is soft and person A owns object Z and person A is strong, then object Z is wet.\nFor all X, if there exists B such that object X is red and person B owns object X and person B is bored, then object X is smooth.\nFor all Y, if there exists B such that person Y is excited and person Y is an enemy of person B and person B is weak, then person Y is weak.\nFor all Z, if there exists D such that person Z is clever and person D is calm, then person Z is happy.\nFor all Y, if there exists B such that person Y is friendly and person Y is a friend of person B and person B is friendly, then person Y is clever.\nFor all X, if there exists V such that object X is hard and person V owns object X and person V is sad, then object X is hard.\nFor all X, if object X is light, then object X is smooth.\nFor all X, Z, if there exists V such that person Z is sad and person X is funny and person X is a friend of person V, then person Z is an enemy of person X.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if object X is old, then object X is soft.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is tall and person X is bored, then person X is busy.\nFor all X, if person X is angry and person X is tall, then person X is weak.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is excited and person Y is busy, then person X is a sibling of person Y.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, Y, if person X is weak and object Y is light and person X likes object Y, then person X owns object Y.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is tall and person X is weak, then person X is sad.\n\nAnd the following facts:\napple is big.\ncar is rough.\ngeorge is tall.\nbob owns car.\napple is old.\neve is bored.\nbob is a friend of alice.\ngeorge dislikes book.\ndave is hungry.\nalice dislikes book.\nalice owns pencil.\neve owns car.\nalice is a friend of eve.\nbob is a parent of frank.\ndave is excited.\nfrank is strong.\n\nQUESTION:\nIs book is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 845,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(apple).",
    "c": "heavy(X) :- big(X).\nwet(Z) :- soft(Z), owns(A,Z), strong(A).\nsmooth(X) :- red(X), owns(B,X), bored(B).\nweak(Y) :- excited(Y), enemy(Y,B), weak(B).\nhappy(Z) :- clever(Z), calm(D).\nclever(Y) :- friendly(Y), friend(Y,B), friendly(B).\nhard(X) :- hard(X), owns(V,X), sad(V).\nsmooth(X) :- light(X).\nenemy(Z,X) :- sad(Z), funny(X), friend(X,V).\nbusy(X) :- strong(X).\nsoft(X) :- old(X).\nsad(X) :- strong(X).\nbusy(X) :- tall(X), bored(X).\nweak(X) :- angry(X), tall(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- excited(X), busy(Y).\ndirty(X) :- smooth(X).\nowns(X,Y) :- weak(X), light(Y), likes(X,Y).\nclever(X) :- angry(X).\nsad(X) :- tall(X), weak(X).\nheavy(apple).\nrough(car).\ntall(george).\nowns(bob,car).\nold(apple).\nbored(eve).\nfriend(bob,alice).\ndislikes(george,book).\nhungry(dave).\ndislikes(alice,book).\nowns(alice,pencil).\nowns(eve,car).\nfriend(alice,eve).\nparent(bob,frank).\nexcited(dave).\nstrong(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is heavy.\nFor all Z, if there exists A such that object Z is soft and person A owns object Z and person A is strong, then object Z is wet.\nFor all X, if there exists B such that object X is red and person B owns object X and person B is bored, then object X is smooth.\nFor all Y, if there exists B such that person Y is excited and person Y is an enemy of person B and person B is weak, then person Y is weak.\nFor all Z, if there exists D such that person Z is clever and person D is calm, then person Z is happy.\nFor all Y, if there exists B such that person Y is friendly and person Y is a friend of person B and person B is friendly, then person Y is clever.\nFor all X, if there exists V such that object X is hard and person V owns object X and person V is sad, then object X is hard.\nFor all X, if object X is light, then object X is smooth.\nFor all X, Z, if there exists V such that person Z is sad and person X is funny and person X is a friend of person V, then person Z is an enemy of person X.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if object X is old, then object X is soft.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is tall and person X is bored, then person X is busy.\nFor all X, if person X is angry and person X is tall, then person X is weak.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is excited and person Y is busy, then person X is a sibling of person Y.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, Y, if person X is weak and object Y is light and person X likes object Y, then person X owns object Y.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is tall and person X is weak, then person X is sad.\n\nAnd the following facts:\napple is heavy.\ncar is rough.\ngeorge is tall.\nbob owns car.\napple is old.\neve is bored.\nbob is a friend of alice.\ngeorge dislikes book.\ndave is hungry.\nalice dislikes book.\nalice owns pencil.\neve owns car.\nalice is a friend of eve.\nbob is a parent of frank.\ndave is excited.\nfrank is strong.\n\nQUESTION:\nCould apple is big explain apple is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 846,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "excited(eve).",
    "c": "heavy(X) :- big(X).\nwet(Z) :- soft(Z), owns(A,Z), strong(A).\nsmooth(X) :- red(X), owns(B,X), bored(B).\nweak(Y) :- excited(Y), enemy(Y,B), weak(B).\nhappy(Z) :- clever(Z), calm(D).\nclever(Y) :- friendly(Y), friend(Y,B), friendly(B).\nhard(X) :- hard(X), owns(V,X), sad(V).\nsmooth(X) :- light(X).\nenemy(Z,X) :- sad(Z), funny(X), friend(X,V).\nbusy(X) :- strong(X).\nsoft(X) :- old(X).\nsad(X) :- strong(X).\nbusy(X) :- tall(X), bored(X).\nweak(X) :- angry(X), tall(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- excited(X), busy(Y).\ndirty(X) :- smooth(X).\nowns(X,Y) :- weak(X), light(Y), likes(X,Y).\nclever(X) :- angry(X).\nsad(X) :- tall(X), weak(X).\nheavy(apple).\nrough(car).\ntall(george).\nowns(bob,car).\nold(apple).\nbored(eve).\nfriend(bob,alice).\ndislikes(george,book).\nhungry(dave).\ndislikes(alice,book).\nowns(alice,pencil).\nowns(eve,car).\nfriend(alice,eve).\nparent(bob,frank).\nexcited(dave).\nstrong(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is heavy.\nFor all Z, if there exists A such that object Z is soft and person A owns object Z and person A is strong, then object Z is wet.\nFor all X, if there exists B such that object X is red and person B owns object X and person B is bored, then object X is smooth.\nFor all Y, if there exists B such that person Y is excited and person Y is an enemy of person B and person B is weak, then person Y is weak.\nFor all Z, if there exists D such that person Z is clever and person D is calm, then person Z is happy.\nFor all Y, if there exists B such that person Y is friendly and person Y is a friend of person B and person B is friendly, then person Y is clever.\nFor all X, if there exists V such that object X is hard and person V owns object X and person V is sad, then object X is hard.\nFor all X, if object X is light, then object X is smooth.\nFor all X, Z, if there exists V such that person Z is sad and person X is funny and person X is a friend of person V, then person Z is an enemy of person X.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if object X is old, then object X is soft.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is tall and person X is bored, then person X is busy.\nFor all X, if person X is angry and person X is tall, then person X is weak.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is excited and person Y is busy, then person X is a sibling of person Y.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, Y, if person X is weak and object Y is light and person X likes object Y, then person X owns object Y.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is tall and person X is weak, then person X is sad.\n\nAnd the following facts:\napple is heavy.\ncar is rough.\ngeorge is tall.\nbob owns car.\napple is old.\neve is bored.\nbob is a friend of alice.\ngeorge dislikes book.\ndave is hungry.\nalice dislikes book.\nalice owns pencil.\neve owns car.\nalice is a friend of eve.\nbob is a parent of frank.\ndave is excited.\nfrank is strong.\n\nQUESTION:\nCould eve is excited explain apple is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 847,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(frank).",
    "c": "tired(X) :- calm(X).\nweak(X) :- tired(X).\nfriendly(X) :- weak(X).\nexcited(X) :- friendly(X).\nhappy(X) :- excited(X).\nsmooth(X) :- heavy(X), likes(A,X), funny(A).\nold(X) :- dirty(X), owns(U,X), busy(U).\nlikes(X,Y) :- light(Y), sad(X), owns(X,A).\nlikes(X,Y) :- clean(Y), hungry(X), dislikes(A,Y).\nlikes(Z,Y) :- wet(Y), tall(Z), parent(Z,A).\nnew(Z) :- hard(Z), likes(A,Z), curious(A).\nbig(X) :- wet(X).\nlight(X) :- small(X).\nstrong(X) :- brave(X), funny(X).\ncurious(X) :- hungry(X), bored(X).\nhard(X) :- red(X), smooth(X).\ndislikes(X,Y) :- hungry(X), small(Y).\nrough(X) :- heavy(X), light(X).\nlight(X) :- rough(X).\nclever(X) :- sad(X), brave(X).\ncalm(frank).\nsmall(book).\nfunny(bob).\nenemy(frank,george).\nbored(alice).\nowns(carol,book).\nbrave(frank).\nlikes(dave,book).\nfriend(carol,frank).\nparent(dave,bob).\nstrong(alice).\nfunny(george).\nlikes(bob,phone).\nowns(bob,pencil).\nenemy(eve,dave).\nenemy(bob,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if there exists A such that object X is heavy and person A likes object X and person A is funny, then object X is smooth.\nFor all X, if there exists U such that object X is dirty and person U owns object X and person U is busy, then object X is old.\nFor all X, Y, if there exists A such that object Y is light and person X is sad and person X owns object A, then person X likes object Y.\nFor all X, Y, if there exists A such that object Y is clean and person X is hungry and person A dislikes object Y, then person X likes object Y.\nFor all Y, Z, if there exists A such that object Y is wet and person Z is tall and person Z is a parent of person A, then person Z likes object Y.\nFor all Z, if there exists A such that object Z is hard and person A likes object Z and person A is curious, then object Z is new.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is small, then object X is light.\nFor all X, if person X is brave and person X is funny, then person X is strong.\nFor all X, if person X is hungry and person X is bored, then person X is curious.\nFor all X, if object X is red and object X is smooth, then object X is hard.\nFor all X, Y, if person X is hungry and object Y is small, then person X dislikes object Y.\nFor all X, if object X is heavy and object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is light.\nFor all X, if person X is sad and person X is brave, then person X is clever.\n\nAnd the following facts:\nfrank is calm.\nbook is small.\nbob is funny.\nfrank is an enemy of george.\nalice is bored.\ncarol owns book.\nfrank is brave.\ndave likes book.\ncarol is a friend of frank.\ndave is a parent of bob.\nalice is strong.\ngeorge is funny.\nbob likes phone.\nbob owns pencil.\neve is an enemy of dave.\nbob is an enemy of dave.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 848,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(apple).",
    "c": "tired(X) :- calm(X).\nweak(X) :- tired(X).\nfriendly(X) :- weak(X).\nexcited(X) :- friendly(X).\nhappy(X) :- excited(X).\nsmooth(X) :- heavy(X), likes(A,X), funny(A).\nold(X) :- dirty(X), owns(U,X), busy(U).\nlikes(X,Y) :- light(Y), sad(X), owns(X,A).\nlikes(X,Y) :- clean(Y), hungry(X), dislikes(A,Y).\nlikes(Z,Y) :- wet(Y), tall(Z), parent(Z,A).\nnew(Z) :- hard(Z), likes(A,Z), curious(A).\nbig(X) :- wet(X).\nlight(X) :- small(X).\nstrong(X) :- brave(X), funny(X).\ncurious(X) :- hungry(X), bored(X).\nhard(X) :- red(X), smooth(X).\ndislikes(X,Y) :- hungry(X), small(Y).\nrough(X) :- heavy(X), light(X).\nlight(X) :- rough(X).\nclever(X) :- sad(X), brave(X).\ncalm(frank).\nsmall(book).\nfunny(bob).\nenemy(frank,george).\nbored(alice).\nowns(carol,book).\nbrave(frank).\nlikes(dave,book).\nfriend(carol,frank).\nparent(dave,bob).\nstrong(alice).\nfunny(george).\nlikes(bob,phone).\nowns(bob,pencil).\nenemy(eve,dave).\nenemy(bob,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if there exists A such that object X is heavy and person A likes object X and person A is funny, then object X is smooth.\nFor all X, if there exists U such that object X is dirty and person U owns object X and person U is busy, then object X is old.\nFor all X, Y, if there exists A such that object Y is light and person X is sad and person X owns object A, then person X likes object Y.\nFor all X, Y, if there exists A such that object Y is clean and person X is hungry and person A dislikes object Y, then person X likes object Y.\nFor all Y, Z, if there exists A such that object Y is wet and person Z is tall and person Z is a parent of person A, then person Z likes object Y.\nFor all Z, if there exists A such that object Z is hard and person A likes object Z and person A is curious, then object Z is new.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is small, then object X is light.\nFor all X, if person X is brave and person X is funny, then person X is strong.\nFor all X, if person X is hungry and person X is bored, then person X is curious.\nFor all X, if object X is red and object X is smooth, then object X is hard.\nFor all X, Y, if person X is hungry and object Y is small, then person X dislikes object Y.\nFor all X, if object X is heavy and object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is light.\nFor all X, if person X is sad and person X is brave, then person X is clever.\n\nAnd the following facts:\nfrank is calm.\nbook is small.\nbob is funny.\nfrank is an enemy of george.\nalice is bored.\ncarol owns book.\nfrank is brave.\ndave likes book.\ncarol is a friend of frank.\ndave is a parent of bob.\nalice is strong.\ngeorge is funny.\nbob likes phone.\nbob owns pencil.\neve is an enemy of dave.\nbob is an enemy of dave.\n\nQUESTION:\nIs apple is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 849,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(frank).",
    "c": "tired(X) :- calm(X).\nweak(X) :- tired(X).\nfriendly(X) :- weak(X).\nexcited(X) :- friendly(X).\nhappy(X) :- excited(X).\nsmooth(X) :- heavy(X), likes(A,X), funny(A).\nold(X) :- dirty(X), owns(U,X), busy(U).\nlikes(X,Y) :- light(Y), sad(X), owns(X,A).\nlikes(X,Y) :- clean(Y), hungry(X), dislikes(A,Y).\nlikes(Z,Y) :- wet(Y), tall(Z), parent(Z,A).\nnew(Z) :- hard(Z), likes(A,Z), curious(A).\nbig(X) :- wet(X).\nlight(X) :- small(X).\nstrong(X) :- brave(X), funny(X).\ncurious(X) :- hungry(X), bored(X).\nhard(X) :- red(X), smooth(X).\ndislikes(X,Y) :- hungry(X), small(Y).\nrough(X) :- heavy(X), light(X).\nlight(X) :- rough(X).\nclever(X) :- sad(X), brave(X).\nhappy(frank).\nsmall(book).\nfunny(bob).\nenemy(frank,george).\nbored(alice).\nowns(carol,book).\nbrave(frank).\nlikes(dave,book).\nfriend(carol,frank).\nparent(dave,bob).\nstrong(alice).\nfunny(george).\nlikes(bob,phone).\nowns(bob,pencil).\nenemy(eve,dave).\nenemy(bob,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if there exists A such that object X is heavy and person A likes object X and person A is funny, then object X is smooth.\nFor all X, if there exists U such that object X is dirty and person U owns object X and person U is busy, then object X is old.\nFor all X, Y, if there exists A such that object Y is light and person X is sad and person X owns object A, then person X likes object Y.\nFor all X, Y, if there exists A such that object Y is clean and person X is hungry and person A dislikes object Y, then person X likes object Y.\nFor all Y, Z, if there exists A such that object Y is wet and person Z is tall and person Z is a parent of person A, then person Z likes object Y.\nFor all Z, if there exists A such that object Z is hard and person A likes object Z and person A is curious, then object Z is new.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is small, then object X is light.\nFor all X, if person X is brave and person X is funny, then person X is strong.\nFor all X, if person X is hungry and person X is bored, then person X is curious.\nFor all X, if object X is red and object X is smooth, then object X is hard.\nFor all X, Y, if person X is hungry and object Y is small, then person X dislikes object Y.\nFor all X, if object X is heavy and object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is light.\nFor all X, if person X is sad and person X is brave, then person X is clever.\n\nAnd the following facts:\nfrank is happy.\nbook is small.\nbob is funny.\nfrank is an enemy of george.\nalice is bored.\ncarol owns book.\nfrank is brave.\ndave likes book.\ncarol is a friend of frank.\ndave is a parent of bob.\nalice is strong.\ngeorge is funny.\nbob likes phone.\nbob owns pencil.\neve is an enemy of dave.\nbob is an enemy of dave.\n\nQUESTION:\nCould frank is calm explain frank is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 850,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(eve).",
    "c": "tired(X) :- calm(X).\nweak(X) :- tired(X).\nfriendly(X) :- weak(X).\nexcited(X) :- friendly(X).\nhappy(X) :- excited(X).\nsmooth(X) :- heavy(X), likes(A,X), funny(A).\nold(X) :- dirty(X), owns(U,X), busy(U).\nlikes(X,Y) :- light(Y), sad(X), owns(X,A).\nlikes(X,Y) :- clean(Y), hungry(X), dislikes(A,Y).\nlikes(Z,Y) :- wet(Y), tall(Z), parent(Z,A).\nnew(Z) :- hard(Z), likes(A,Z), curious(A).\nbig(X) :- wet(X).\nlight(X) :- small(X).\nstrong(X) :- brave(X), funny(X).\ncurious(X) :- hungry(X), bored(X).\nhard(X) :- red(X), smooth(X).\ndislikes(X,Y) :- hungry(X), small(Y).\nrough(X) :- heavy(X), light(X).\nlight(X) :- rough(X).\nclever(X) :- sad(X), brave(X).\nhappy(frank).\nsmall(book).\nfunny(bob).\nenemy(frank,george).\nbored(alice).\nowns(carol,book).\nbrave(frank).\nlikes(dave,book).\nfriend(carol,frank).\nparent(dave,bob).\nstrong(alice).\nfunny(george).\nlikes(bob,phone).\nowns(bob,pencil).\nenemy(eve,dave).\nenemy(bob,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if there exists A such that object X is heavy and person A likes object X and person A is funny, then object X is smooth.\nFor all X, if there exists U such that object X is dirty and person U owns object X and person U is busy, then object X is old.\nFor all X, Y, if there exists A such that object Y is light and person X is sad and person X owns object A, then person X likes object Y.\nFor all X, Y, if there exists A such that object Y is clean and person X is hungry and person A dislikes object Y, then person X likes object Y.\nFor all Y, Z, if there exists A such that object Y is wet and person Z is tall and person Z is a parent of person A, then person Z likes object Y.\nFor all Z, if there exists A such that object Z is hard and person A likes object Z and person A is curious, then object Z is new.\nFor all X, if object X is wet, then object X is big.\nFor all X, if object X is small, then object X is light.\nFor all X, if person X is brave and person X is funny, then person X is strong.\nFor all X, if person X is hungry and person X is bored, then person X is curious.\nFor all X, if object X is red and object X is smooth, then object X is hard.\nFor all X, Y, if person X is hungry and object Y is small, then person X dislikes object Y.\nFor all X, if object X is heavy and object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is light.\nFor all X, if person X is sad and person X is brave, then person X is clever.\n\nAnd the following facts:\nfrank is happy.\nbook is small.\nbob is funny.\nfrank is an enemy of george.\nalice is bored.\ncarol owns book.\nfrank is brave.\ndave likes book.\ncarol is a friend of frank.\ndave is a parent of bob.\nalice is strong.\ngeorge is funny.\nbob likes phone.\nbob owns pencil.\neve is an enemy of dave.\nbob is an enemy of dave.\n\nQUESTION:\nCould eve is weak explain frank is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 851,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(carol).",
    "c": "clever(X) :- friendly(X).\ncalm(X) :- clever(X).\nfriendly(X) :- calm(X).\ntall(X) :- friendly(X).\nweak(X) :- tall(X).\nbig(Z) :- clean(Z).\nlikes(Z,X) :- funny(Z), big(X), dislikes(V,X).\nsmooth(X) :- wet(X), likes(U,X), hungry(U).\nold(Z) :- red(Z).\nsmooth(Y) :- rough(Y), owns(A,Y), hungry(A).\nbig(Y) :- new(Y), dislikes(B,Y), angry(B).\nhungry(Z) :- bored(Z), likes(Z,A), big(A).\nbored(Y) :- excited(Y), bored(C).\nsibling(X,Y) :- funny(X), angry(Y), enemy(X,Y).\ncurious(X) :- brave(X).\nexcited(X) :- tired(X).\nsmall(X) :- old(X).\ndirty(X) :- smooth(X).\nbusy(X) :- excited(X).\nbig(X) :- small(X).\nfriendly(carol).\nsibling(carol,eve).\ndislikes(george,phone).\nsibling(george,dave).\nred(phone).\nbored(frank).\nlikes(george,phone).\nparent(carol,george).\nlikes(frank,apple).\nfriend(dave,george).\nenemy(dave,eve).\ndislikes(bob,ball).\nlikes(frank,ball).\nexcited(bob).\nlight(car).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all Z, if object Z is clean, then object Z is big.\nFor all X, Z, if there exists V such that person Z is funny and object X is big and person V dislikes object X, then person Z likes object X.\nFor all X, if there exists U such that object X is wet and person U likes object X and person U is hungry, then object X is smooth.\nFor all Z, if object Z is red, then object Z is old.\nFor all Y, if there exists A such that object Y is rough and person A owns object Y and person A is hungry, then object Y is smooth.\nFor all Y, if there exists B such that object Y is new and person B dislikes object Y and person B is angry, then object Y is big.\nFor all Z, if there exists A such that person Z is bored and person Z likes object A and object A is big, then person Z is hungry.\nFor all Y, if there exists C such that person Y is excited and person C is bored, then person Y is bored.\nFor all X, Y, if person X is funny and person Y is angry and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if object X is small, then object X is big.\n\nAnd the following facts:\ncarol is friendly.\ncarol is a sibling of eve.\ngeorge dislikes phone.\ngeorge is a sibling of dave.\nphone is red.\nfrank is bored.\ngeorge likes phone.\ncarol is a parent of george.\nfrank likes apple.\ndave is a friend of george.\ndave is an enemy of eve.\nbob dislikes ball.\nfrank likes ball.\nbob is excited.\ncar is light.\ncarol likes car.\n\nQUESTION:\nIs carol is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 852,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(car).",
    "c": "clever(X) :- friendly(X).\ncalm(X) :- clever(X).\nfriendly(X) :- calm(X).\ntall(X) :- friendly(X).\nweak(X) :- tall(X).\nbig(Z) :- clean(Z).\nlikes(Z,X) :- funny(Z), big(X), dislikes(V,X).\nsmooth(X) :- wet(X), likes(U,X), hungry(U).\nold(Z) :- red(Z).\nsmooth(Y) :- rough(Y), owns(A,Y), hungry(A).\nbig(Y) :- new(Y), dislikes(B,Y), angry(B).\nhungry(Z) :- bored(Z), likes(Z,A), big(A).\nbored(Y) :- excited(Y), bored(C).\nsibling(X,Y) :- funny(X), angry(Y), enemy(X,Y).\ncurious(X) :- brave(X).\nexcited(X) :- tired(X).\nsmall(X) :- old(X).\ndirty(X) :- smooth(X).\nbusy(X) :- excited(X).\nbig(X) :- small(X).\nfriendly(carol).\nsibling(carol,eve).\ndislikes(george,phone).\nsibling(george,dave).\nred(phone).\nbored(frank).\nlikes(george,phone).\nparent(carol,george).\nlikes(frank,apple).\nfriend(dave,george).\nenemy(dave,eve).\ndislikes(bob,ball).\nlikes(frank,ball).\nexcited(bob).\nlight(car).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all Z, if object Z is clean, then object Z is big.\nFor all X, Z, if there exists V such that person Z is funny and object X is big and person V dislikes object X, then person Z likes object X.\nFor all X, if there exists U such that object X is wet and person U likes object X and person U is hungry, then object X is smooth.\nFor all Z, if object Z is red, then object Z is old.\nFor all Y, if there exists A such that object Y is rough and person A owns object Y and person A is hungry, then object Y is smooth.\nFor all Y, if there exists B such that object Y is new and person B dislikes object Y and person B is angry, then object Y is big.\nFor all Z, if there exists A such that person Z is bored and person Z likes object A and object A is big, then person Z is hungry.\nFor all Y, if there exists C such that person Y is excited and person C is bored, then person Y is bored.\nFor all X, Y, if person X is funny and person Y is angry and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if object X is small, then object X is big.\n\nAnd the following facts:\ncarol is friendly.\ncarol is a sibling of eve.\ngeorge dislikes phone.\ngeorge is a sibling of dave.\nphone is red.\nfrank is bored.\ngeorge likes phone.\ncarol is a parent of george.\nfrank likes apple.\ndave is a friend of george.\ndave is an enemy of eve.\nbob dislikes ball.\nfrank likes ball.\nbob is excited.\ncar is light.\ncarol likes car.\n\nQUESTION:\nIs car is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 853,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(carol).",
    "c": "clever(X) :- friendly(X).\ncalm(X) :- clever(X).\nfriendly(X) :- calm(X).\ntall(X) :- friendly(X).\nweak(X) :- tall(X).\nbig(Z) :- clean(Z).\nlikes(Z,X) :- funny(Z), big(X), dislikes(V,X).\nsmooth(X) :- wet(X), likes(U,X), hungry(U).\nold(Z) :- red(Z).\nsmooth(Y) :- rough(Y), owns(A,Y), hungry(A).\nbig(Y) :- new(Y), dislikes(B,Y), angry(B).\nhungry(Z) :- bored(Z), likes(Z,A), big(A).\nbored(Y) :- excited(Y), bored(C).\nsibling(X,Y) :- funny(X), angry(Y), enemy(X,Y).\ncurious(X) :- brave(X).\nexcited(X) :- tired(X).\nsmall(X) :- old(X).\ndirty(X) :- smooth(X).\nbusy(X) :- excited(X).\nbig(X) :- small(X).\nweak(carol).\nsibling(carol,eve).\ndislikes(george,phone).\nsibling(george,dave).\nred(phone).\nbored(frank).\nlikes(george,phone).\nparent(carol,george).\nlikes(frank,apple).\nfriend(dave,george).\nenemy(dave,eve).\ndislikes(bob,ball).\nlikes(frank,ball).\nexcited(bob).\nlight(car).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all Z, if object Z is clean, then object Z is big.\nFor all X, Z, if there exists V such that person Z is funny and object X is big and person V dislikes object X, then person Z likes object X.\nFor all X, if there exists U such that object X is wet and person U likes object X and person U is hungry, then object X is smooth.\nFor all Z, if object Z is red, then object Z is old.\nFor all Y, if there exists A such that object Y is rough and person A owns object Y and person A is hungry, then object Y is smooth.\nFor all Y, if there exists B such that object Y is new and person B dislikes object Y and person B is angry, then object Y is big.\nFor all Z, if there exists A such that person Z is bored and person Z likes object A and object A is big, then person Z is hungry.\nFor all Y, if there exists C such that person Y is excited and person C is bored, then person Y is bored.\nFor all X, Y, if person X is funny and person Y is angry and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if object X is small, then object X is big.\n\nAnd the following facts:\ncarol is weak.\ncarol is a sibling of eve.\ngeorge dislikes phone.\ngeorge is a sibling of dave.\nphone is red.\nfrank is bored.\ngeorge likes phone.\ncarol is a parent of george.\nfrank likes apple.\ndave is a friend of george.\ndave is an enemy of eve.\nbob dislikes ball.\nfrank likes ball.\nbob is excited.\ncar is light.\ncarol likes car.\n\nQUESTION:\nCould carol is friendly explain carol is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 854,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(george).",
    "c": "clever(X) :- friendly(X).\ncalm(X) :- clever(X).\nfriendly(X) :- calm(X).\ntall(X) :- friendly(X).\nweak(X) :- tall(X).\nbig(Z) :- clean(Z).\nlikes(Z,X) :- funny(Z), big(X), dislikes(V,X).\nsmooth(X) :- wet(X), likes(U,X), hungry(U).\nold(Z) :- red(Z).\nsmooth(Y) :- rough(Y), owns(A,Y), hungry(A).\nbig(Y) :- new(Y), dislikes(B,Y), angry(B).\nhungry(Z) :- bored(Z), likes(Z,A), big(A).\nbored(Y) :- excited(Y), bored(C).\nsibling(X,Y) :- funny(X), angry(Y), enemy(X,Y).\ncurious(X) :- brave(X).\nexcited(X) :- tired(X).\nsmall(X) :- old(X).\ndirty(X) :- smooth(X).\nbusy(X) :- excited(X).\nbig(X) :- small(X).\nweak(carol).\nsibling(carol,eve).\ndislikes(george,phone).\nsibling(george,dave).\nred(phone).\nbored(frank).\nlikes(george,phone).\nparent(carol,george).\nlikes(frank,apple).\nfriend(dave,george).\nenemy(dave,eve).\ndislikes(bob,ball).\nlikes(frank,ball).\nexcited(bob).\nlight(car).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all Z, if object Z is clean, then object Z is big.\nFor all X, Z, if there exists V such that person Z is funny and object X is big and person V dislikes object X, then person Z likes object X.\nFor all X, if there exists U such that object X is wet and person U likes object X and person U is hungry, then object X is smooth.\nFor all Z, if object Z is red, then object Z is old.\nFor all Y, if there exists A such that object Y is rough and person A owns object Y and person A is hungry, then object Y is smooth.\nFor all Y, if there exists B such that object Y is new and person B dislikes object Y and person B is angry, then object Y is big.\nFor all Z, if there exists A such that person Z is bored and person Z likes object A and object A is big, then person Z is hungry.\nFor all Y, if there exists C such that person Y is excited and person C is bored, then person Y is bored.\nFor all X, Y, if person X is funny and person Y is angry and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if person X is excited, then person X is busy.\nFor all X, if object X is small, then object X is big.\n\nAnd the following facts:\ncarol is weak.\ncarol is a sibling of eve.\ngeorge dislikes phone.\ngeorge is a sibling of dave.\nphone is red.\nfrank is bored.\ngeorge likes phone.\ncarol is a parent of george.\nfrank likes apple.\ndave is a friend of george.\ndave is an enemy of eve.\nbob dislikes ball.\nfrank likes ball.\nbob is excited.\ncar is light.\ncarol likes car.\n\nQUESTION:\nCould george is clever explain carol is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 855,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "smooth(book).",
    "c": "soft(X) :- hard(X).\nlight(X) :- soft(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\ncalm(X) :- weak(X), parent(X,U), excited(U).\nenemy(X,Z) :- tall(Z), excited(X).\ntall(Y) :- tall(Y), sibling(Y,W), calm(W).\nhungry(Z) :- happy(Z), dirty(C).\nexcited(X) :- sad(X).\nangry(Z) :- strong(Z), sibling(Z,B), sad(B).\nclean(Y) :- old(Y).\ncalm(Z) :- angry(Z), enemy(Z,U), busy(U).\nrough(X) :- red(X), clean(D).\ntired(X) :- bored(X), weak(X).\nfriend(X,Y) :- bored(X), friendly(Y).\nenemy(X,Y) :- tall(X), tired(Y), sibling(X,Y).\nhappy(X) :- friendly(X), tired(X).\nnew(X) :- wet(X).\nred(X) :- rough(X).\nhard(book).\ndirty(book).\nsibling(carol,eve).\nenemy(eve,frank).\ncurious(george).\nparent(dave,carol).\nhappy(alice).\ndislikes(bob,book).\nbrave(bob).\nrough(phone).\nlikes(frank,ball).\ndislikes(dave,ball).\nclever(carol).\nsibling(eve,dave).\ncalm(eve).\nenemy(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists U such that person X is weak and person X is a parent of person U and person U is excited, then person X is calm.\nFor all X, Z, if person Z is tall and person X is excited, then person X is an enemy of person Z.\nFor all Y, if there exists W such that person Y is tall and person Y is a sibling of person W and person W is calm, then person Y is tall.\nFor all Z, if there exists C such that person Z is happy and object C is dirty, then person Z is hungry.\nFor all X, if person X is sad, then person X is excited.\nFor all Z, if there exists B such that person Z is strong and person Z is a sibling of person B and person B is sad, then person Z is angry.\nFor all Y, if object Y is old, then object Y is clean.\nFor all Z, if there exists U such that person Z is angry and person Z is an enemy of person U and person U is busy, then person Z is calm.\nFor all X, if there exists D such that object X is red and object D is clean, then object X is rough.\nFor all X, if person X is bored and person X is weak, then person X is tired.\nFor all X, Y, if person X is bored and person Y is friendly, then person X is a friend of person Y.\nFor all X, Y, if person X is tall and person Y is tired and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, if person X is friendly and person X is tired, then person X is happy.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is rough, then object X is red.\n\nAnd the following facts:\nbook is hard.\nbook is dirty.\ncarol is a sibling of eve.\neve is an enemy of frank.\ngeorge is curious.\ndave is a parent of carol.\nalice is happy.\nbob dislikes book.\nbob is brave.\nphone is rough.\nfrank likes ball.\ndave dislikes ball.\ncarol is clever.\neve is a sibling of dave.\neve is calm.\ndave is an enemy of frank.\n\nQUESTION:\nIs book is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 856,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(book).",
    "c": "soft(X) :- hard(X).\nlight(X) :- soft(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\ncalm(X) :- weak(X), parent(X,U), excited(U).\nenemy(X,Z) :- tall(Z), excited(X).\ntall(Y) :- tall(Y), sibling(Y,W), calm(W).\nhungry(Z) :- happy(Z), dirty(C).\nexcited(X) :- sad(X).\nangry(Z) :- strong(Z), sibling(Z,B), sad(B).\nclean(Y) :- old(Y).\ncalm(Z) :- angry(Z), enemy(Z,U), busy(U).\nrough(X) :- red(X), clean(D).\ntired(X) :- bored(X), weak(X).\nfriend(X,Y) :- bored(X), friendly(Y).\nenemy(X,Y) :- tall(X), tired(Y), sibling(X,Y).\nhappy(X) :- friendly(X), tired(X).\nnew(X) :- wet(X).\nred(X) :- rough(X).\nhard(book).\ndirty(book).\nsibling(carol,eve).\nenemy(eve,frank).\ncurious(george).\nparent(dave,carol).\nhappy(alice).\ndislikes(bob,book).\nbrave(bob).\nrough(phone).\nlikes(frank,ball).\ndislikes(dave,ball).\nclever(carol).\nsibling(eve,dave).\ncalm(eve).\nenemy(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists U such that person X is weak and person X is a parent of person U and person U is excited, then person X is calm.\nFor all X, Z, if person Z is tall and person X is excited, then person X is an enemy of person Z.\nFor all Y, if there exists W such that person Y is tall and person Y is a sibling of person W and person W is calm, then person Y is tall.\nFor all Z, if there exists C such that person Z is happy and object C is dirty, then person Z is hungry.\nFor all X, if person X is sad, then person X is excited.\nFor all Z, if there exists B such that person Z is strong and person Z is a sibling of person B and person B is sad, then person Z is angry.\nFor all Y, if object Y is old, then object Y is clean.\nFor all Z, if there exists U such that person Z is angry and person Z is an enemy of person U and person U is busy, then person Z is calm.\nFor all X, if there exists D such that object X is red and object D is clean, then object X is rough.\nFor all X, if person X is bored and person X is weak, then person X is tired.\nFor all X, Y, if person X is bored and person Y is friendly, then person X is a friend of person Y.\nFor all X, Y, if person X is tall and person Y is tired and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, if person X is friendly and person X is tired, then person X is happy.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is rough, then object X is red.\n\nAnd the following facts:\nbook is hard.\nbook is dirty.\ncarol is a sibling of eve.\neve is an enemy of frank.\ngeorge is curious.\ndave is a parent of carol.\nalice is happy.\nbob dislikes book.\nbob is brave.\nphone is rough.\nfrank likes ball.\ndave dislikes ball.\ncarol is clever.\neve is a sibling of dave.\neve is calm.\ndave is an enemy of frank.\n\nQUESTION:\nIs book is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 857,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(book).",
    "c": "soft(X) :- hard(X).\nlight(X) :- soft(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\ncalm(X) :- weak(X), parent(X,U), excited(U).\nenemy(X,Z) :- tall(Z), excited(X).\ntall(Y) :- tall(Y), sibling(Y,W), calm(W).\nhungry(Z) :- happy(Z), dirty(C).\nexcited(X) :- sad(X).\nangry(Z) :- strong(Z), sibling(Z,B), sad(B).\nclean(Y) :- old(Y).\ncalm(Z) :- angry(Z), enemy(Z,U), busy(U).\nrough(X) :- red(X), clean(D).\ntired(X) :- bored(X), weak(X).\nfriend(X,Y) :- bored(X), friendly(Y).\nenemy(X,Y) :- tall(X), tired(Y), sibling(X,Y).\nhappy(X) :- friendly(X), tired(X).\nnew(X) :- wet(X).\nred(X) :- rough(X).\nsmooth(book).\ndirty(book).\nsibling(carol,eve).\nenemy(eve,frank).\ncurious(george).\nparent(dave,carol).\nhappy(alice).\ndislikes(bob,book).\nbrave(bob).\nrough(phone).\nlikes(frank,ball).\ndislikes(dave,ball).\nclever(carol).\nsibling(eve,dave).\ncalm(eve).\nenemy(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists U such that person X is weak and person X is a parent of person U and person U is excited, then person X is calm.\nFor all X, Z, if person Z is tall and person X is excited, then person X is an enemy of person Z.\nFor all Y, if there exists W such that person Y is tall and person Y is a sibling of person W and person W is calm, then person Y is tall.\nFor all Z, if there exists C such that person Z is happy and object C is dirty, then person Z is hungry.\nFor all X, if person X is sad, then person X is excited.\nFor all Z, if there exists B such that person Z is strong and person Z is a sibling of person B and person B is sad, then person Z is angry.\nFor all Y, if object Y is old, then object Y is clean.\nFor all Z, if there exists U such that person Z is angry and person Z is an enemy of person U and person U is busy, then person Z is calm.\nFor all X, if there exists D such that object X is red and object D is clean, then object X is rough.\nFor all X, if person X is bored and person X is weak, then person X is tired.\nFor all X, Y, if person X is bored and person Y is friendly, then person X is a friend of person Y.\nFor all X, Y, if person X is tall and person Y is tired and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, if person X is friendly and person X is tired, then person X is happy.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is rough, then object X is red.\n\nAnd the following facts:\nbook is smooth.\nbook is dirty.\ncarol is a sibling of eve.\neve is an enemy of frank.\ngeorge is curious.\ndave is a parent of carol.\nalice is happy.\nbob dislikes book.\nbob is brave.\nphone is rough.\nfrank likes ball.\ndave dislikes ball.\ncarol is clever.\neve is a sibling of dave.\neve is calm.\ndave is an enemy of frank.\n\nQUESTION:\nCould book is hard explain book is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 858,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(frank).",
    "c": "soft(X) :- hard(X).\nlight(X) :- soft(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\ncalm(X) :- weak(X), parent(X,U), excited(U).\nenemy(X,Z) :- tall(Z), excited(X).\ntall(Y) :- tall(Y), sibling(Y,W), calm(W).\nhungry(Z) :- happy(Z), dirty(C).\nexcited(X) :- sad(X).\nangry(Z) :- strong(Z), sibling(Z,B), sad(B).\nclean(Y) :- old(Y).\ncalm(Z) :- angry(Z), enemy(Z,U), busy(U).\nrough(X) :- red(X), clean(D).\ntired(X) :- bored(X), weak(X).\nfriend(X,Y) :- bored(X), friendly(Y).\nenemy(X,Y) :- tall(X), tired(Y), sibling(X,Y).\nhappy(X) :- friendly(X), tired(X).\nnew(X) :- wet(X).\nred(X) :- rough(X).\nsmooth(book).\ndirty(book).\nsibling(carol,eve).\nenemy(eve,frank).\ncurious(george).\nparent(dave,carol).\nhappy(alice).\ndislikes(bob,book).\nbrave(bob).\nrough(phone).\nlikes(frank,ball).\ndislikes(dave,ball).\nclever(carol).\nsibling(eve,dave).\ncalm(eve).\nenemy(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists U such that person X is weak and person X is a parent of person U and person U is excited, then person X is calm.\nFor all X, Z, if person Z is tall and person X is excited, then person X is an enemy of person Z.\nFor all Y, if there exists W such that person Y is tall and person Y is a sibling of person W and person W is calm, then person Y is tall.\nFor all Z, if there exists C such that person Z is happy and object C is dirty, then person Z is hungry.\nFor all X, if person X is sad, then person X is excited.\nFor all Z, if there exists B such that person Z is strong and person Z is a sibling of person B and person B is sad, then person Z is angry.\nFor all Y, if object Y is old, then object Y is clean.\nFor all Z, if there exists U such that person Z is angry and person Z is an enemy of person U and person U is busy, then person Z is calm.\nFor all X, if there exists D such that object X is red and object D is clean, then object X is rough.\nFor all X, if person X is bored and person X is weak, then person X is tired.\nFor all X, Y, if person X is bored and person Y is friendly, then person X is a friend of person Y.\nFor all X, Y, if person X is tall and person Y is tired and person X is a sibling of person Y, then person X is an enemy of person Y.\nFor all X, if person X is friendly and person X is tired, then person X is happy.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is rough, then object X is red.\n\nAnd the following facts:\nbook is smooth.\nbook is dirty.\ncarol is a sibling of eve.\neve is an enemy of frank.\ngeorge is curious.\ndave is a parent of carol.\nalice is happy.\nbob dislikes book.\nbob is brave.\nphone is rough.\nfrank likes ball.\ndave dislikes ball.\ncarol is clever.\neve is a sibling of dave.\neve is calm.\ndave is an enemy of frank.\n\nQUESTION:\nCould frank is sad explain book is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 859,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(dave).",
    "c": "bored(X) :- hungry(X).\nbusy(X) :- bored(X).\nfriendly(X) :- busy(X).\nhappy(X) :- friendly(X).\nstrong(X) :- happy(X).\nlight(Z) :- red(Z).\nwet(X) :- rough(X), owns(W,X), curious(W).\ntired(Z) :- funny(Z), tired(D).\ndirty(Y) :- big(Y), tall(E).\nlikes(X,Z) :- red(Z), angry(X), likes(A,Z).\nsmall(Y) :- dirty(Y), likes(A,Y), weak(A).\nsmooth(Y) :- heavy(Y), dislikes(W,Y), calm(W).\ncurious(X) :- angry(X), tall(X).\nclean(X) :- soft(X), big(X).\nfunny(X) :- tired(X).\ncurious(X) :- angry(X), calm(X).\nsmooth(X) :- red(X), wet(X).\ncurious(X) :- tall(X).\nsibling(X,Y) :- sad(X), funny(Y).\ndislikes(X,Y) :- tired(X), red(Y).\nhungry(dave).\nnew(book).\nparent(carol,dave).\nlikes(frank,phone).\nlikes(frank,pencil).\nold(book).\nangry(carol).\nwet(book).\nenemy(carol,bob).\nbig(phone).\nfriend(dave,frank).\nowns(alice,car).\nweak(george).\nsmooth(apple).\nfriend(frank,dave).\nhard(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all Z, if object Z is red, then object Z is light.\nFor all X, if there exists W such that object X is rough and person W owns object X and person W is curious, then object X is wet.\nFor all Z, if there exists D such that person Z is funny and person D is tired, then person Z is tired.\nFor all Y, if there exists E such that object Y is big and person E is tall, then object Y is dirty.\nFor all X, Z, if there exists A such that object Z is red and person X is angry and person A likes object Z, then person X likes object Z.\nFor all Y, if there exists A such that object Y is dirty and person A likes object Y and person A is weak, then object Y is small.\nFor all Y, if there exists W such that object Y is heavy and person W dislikes object Y and person W is calm, then object Y is smooth.\nFor all X, if person X is angry and person X is tall, then person X is curious.\nFor all X, if object X is soft and object X is big, then object X is clean.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is angry and person X is calm, then person X is curious.\nFor all X, if object X is red and object X is wet, then object X is smooth.\nFor all X, if person X is tall, then person X is curious.\nFor all X, Y, if person X is sad and person Y is funny, then person X is a sibling of person Y.\nFor all X, Y, if person X is tired and object Y is red, then person X dislikes object Y.\n\nAnd the following facts:\ndave is hungry.\nbook is new.\ncarol is a parent of dave.\nfrank likes phone.\nfrank likes pencil.\nbook is old.\ncarol is angry.\nbook is wet.\ncarol is an enemy of bob.\nphone is big.\ndave is a friend of frank.\nalice owns car.\ngeorge is weak.\napple is smooth.\nfrank is a friend of dave.\napple is hard.\n\nQUESTION:\nIs dave is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 860,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(pencil).",
    "c": "bored(X) :- hungry(X).\nbusy(X) :- bored(X).\nfriendly(X) :- busy(X).\nhappy(X) :- friendly(X).\nstrong(X) :- happy(X).\nlight(Z) :- red(Z).\nwet(X) :- rough(X), owns(W,X), curious(W).\ntired(Z) :- funny(Z), tired(D).\ndirty(Y) :- big(Y), tall(E).\nlikes(X,Z) :- red(Z), angry(X), likes(A,Z).\nsmall(Y) :- dirty(Y), likes(A,Y), weak(A).\nsmooth(Y) :- heavy(Y), dislikes(W,Y), calm(W).\ncurious(X) :- angry(X), tall(X).\nclean(X) :- soft(X), big(X).\nfunny(X) :- tired(X).\ncurious(X) :- angry(X), calm(X).\nsmooth(X) :- red(X), wet(X).\ncurious(X) :- tall(X).\nsibling(X,Y) :- sad(X), funny(Y).\ndislikes(X,Y) :- tired(X), red(Y).\nhungry(dave).\nnew(book).\nparent(carol,dave).\nlikes(frank,phone).\nlikes(frank,pencil).\nold(book).\nangry(carol).\nwet(book).\nenemy(carol,bob).\nbig(phone).\nfriend(dave,frank).\nowns(alice,car).\nweak(george).\nsmooth(apple).\nfriend(frank,dave).\nhard(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all Z, if object Z is red, then object Z is light.\nFor all X, if there exists W such that object X is rough and person W owns object X and person W is curious, then object X is wet.\nFor all Z, if there exists D such that person Z is funny and person D is tired, then person Z is tired.\nFor all Y, if there exists E such that object Y is big and person E is tall, then object Y is dirty.\nFor all X, Z, if there exists A such that object Z is red and person X is angry and person A likes object Z, then person X likes object Z.\nFor all Y, if there exists A such that object Y is dirty and person A likes object Y and person A is weak, then object Y is small.\nFor all Y, if there exists W such that object Y is heavy and person W dislikes object Y and person W is calm, then object Y is smooth.\nFor all X, if person X is angry and person X is tall, then person X is curious.\nFor all X, if object X is soft and object X is big, then object X is clean.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is angry and person X is calm, then person X is curious.\nFor all X, if object X is red and object X is wet, then object X is smooth.\nFor all X, if person X is tall, then person X is curious.\nFor all X, Y, if person X is sad and person Y is funny, then person X is a sibling of person Y.\nFor all X, Y, if person X is tired and object Y is red, then person X dislikes object Y.\n\nAnd the following facts:\ndave is hungry.\nbook is new.\ncarol is a parent of dave.\nfrank likes phone.\nfrank likes pencil.\nbook is old.\ncarol is angry.\nbook is wet.\ncarol is an enemy of bob.\nphone is big.\ndave is a friend of frank.\nalice owns car.\ngeorge is weak.\napple is smooth.\nfrank is a friend of dave.\napple is hard.\n\nQUESTION:\nIs pencil is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 861,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(dave).",
    "c": "bored(X) :- hungry(X).\nbusy(X) :- bored(X).\nfriendly(X) :- busy(X).\nhappy(X) :- friendly(X).\nstrong(X) :- happy(X).\nlight(Z) :- red(Z).\nwet(X) :- rough(X), owns(W,X), curious(W).\ntired(Z) :- funny(Z), tired(D).\ndirty(Y) :- big(Y), tall(E).\nlikes(X,Z) :- red(Z), angry(X), likes(A,Z).\nsmall(Y) :- dirty(Y), likes(A,Y), weak(A).\nsmooth(Y) :- heavy(Y), dislikes(W,Y), calm(W).\ncurious(X) :- angry(X), tall(X).\nclean(X) :- soft(X), big(X).\nfunny(X) :- tired(X).\ncurious(X) :- angry(X), calm(X).\nsmooth(X) :- red(X), wet(X).\ncurious(X) :- tall(X).\nsibling(X,Y) :- sad(X), funny(Y).\ndislikes(X,Y) :- tired(X), red(Y).\nstrong(dave).\nnew(book).\nparent(carol,dave).\nlikes(frank,phone).\nlikes(frank,pencil).\nold(book).\nangry(carol).\nwet(book).\nenemy(carol,bob).\nbig(phone).\nfriend(dave,frank).\nowns(alice,car).\nweak(george).\nsmooth(apple).\nfriend(frank,dave).\nhard(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all Z, if object Z is red, then object Z is light.\nFor all X, if there exists W such that object X is rough and person W owns object X and person W is curious, then object X is wet.\nFor all Z, if there exists D such that person Z is funny and person D is tired, then person Z is tired.\nFor all Y, if there exists E such that object Y is big and person E is tall, then object Y is dirty.\nFor all X, Z, if there exists A such that object Z is red and person X is angry and person A likes object Z, then person X likes object Z.\nFor all Y, if there exists A such that object Y is dirty and person A likes object Y and person A is weak, then object Y is small.\nFor all Y, if there exists W such that object Y is heavy and person W dislikes object Y and person W is calm, then object Y is smooth.\nFor all X, if person X is angry and person X is tall, then person X is curious.\nFor all X, if object X is soft and object X is big, then object X is clean.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is angry and person X is calm, then person X is curious.\nFor all X, if object X is red and object X is wet, then object X is smooth.\nFor all X, if person X is tall, then person X is curious.\nFor all X, Y, if person X is sad and person Y is funny, then person X is a sibling of person Y.\nFor all X, Y, if person X is tired and object Y is red, then person X dislikes object Y.\n\nAnd the following facts:\ndave is strong.\nbook is new.\ncarol is a parent of dave.\nfrank likes phone.\nfrank likes pencil.\nbook is old.\ncarol is angry.\nbook is wet.\ncarol is an enemy of bob.\nphone is big.\ndave is a friend of frank.\nalice owns car.\ngeorge is weak.\napple is smooth.\nfrank is a friend of dave.\napple is hard.\n\nQUESTION:\nCould dave is hungry explain dave is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 862,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(frank).",
    "c": "bored(X) :- hungry(X).\nbusy(X) :- bored(X).\nfriendly(X) :- busy(X).\nhappy(X) :- friendly(X).\nstrong(X) :- happy(X).\nlight(Z) :- red(Z).\nwet(X) :- rough(X), owns(W,X), curious(W).\ntired(Z) :- funny(Z), tired(D).\ndirty(Y) :- big(Y), tall(E).\nlikes(X,Z) :- red(Z), angry(X), likes(A,Z).\nsmall(Y) :- dirty(Y), likes(A,Y), weak(A).\nsmooth(Y) :- heavy(Y), dislikes(W,Y), calm(W).\ncurious(X) :- angry(X), tall(X).\nclean(X) :- soft(X), big(X).\nfunny(X) :- tired(X).\ncurious(X) :- angry(X), calm(X).\nsmooth(X) :- red(X), wet(X).\ncurious(X) :- tall(X).\nsibling(X,Y) :- sad(X), funny(Y).\ndislikes(X,Y) :- tired(X), red(Y).\nstrong(dave).\nnew(book).\nparent(carol,dave).\nlikes(frank,phone).\nlikes(frank,pencil).\nold(book).\nangry(carol).\nwet(book).\nenemy(carol,bob).\nbig(phone).\nfriend(dave,frank).\nowns(alice,car).\nweak(george).\nsmooth(apple).\nfriend(frank,dave).\nhard(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is strong.\nFor all Z, if object Z is red, then object Z is light.\nFor all X, if there exists W such that object X is rough and person W owns object X and person W is curious, then object X is wet.\nFor all Z, if there exists D such that person Z is funny and person D is tired, then person Z is tired.\nFor all Y, if there exists E such that object Y is big and person E is tall, then object Y is dirty.\nFor all X, Z, if there exists A such that object Z is red and person X is angry and person A likes object Z, then person X likes object Z.\nFor all Y, if there exists A such that object Y is dirty and person A likes object Y and person A is weak, then object Y is small.\nFor all Y, if there exists W such that object Y is heavy and person W dislikes object Y and person W is calm, then object Y is smooth.\nFor all X, if person X is angry and person X is tall, then person X is curious.\nFor all X, if object X is soft and object X is big, then object X is clean.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is angry and person X is calm, then person X is curious.\nFor all X, if object X is red and object X is wet, then object X is smooth.\nFor all X, if person X is tall, then person X is curious.\nFor all X, Y, if person X is sad and person Y is funny, then person X is a sibling of person Y.\nFor all X, Y, if person X is tired and object Y is red, then person X dislikes object Y.\n\nAnd the following facts:\ndave is strong.\nbook is new.\ncarol is a parent of dave.\nfrank likes phone.\nfrank likes pencil.\nbook is old.\ncarol is angry.\nbook is wet.\ncarol is an enemy of bob.\nphone is big.\ndave is a friend of frank.\nalice owns car.\ngeorge is weak.\napple is smooth.\nfrank is a friend of dave.\napple is hard.\n\nQUESTION:\nCould frank is strong explain dave is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 863,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "dirty(phone).",
    "c": "small(X) :- old(X).\nhard(X) :- small(X).\nclean(X) :- hard(X).\nbig(X) :- clean(X).\nclean(X) :- big(X).\nnew(X) :- clean(X).\nsmall(X) :- new(X).\nsoft(X) :- small(X).\nred(X) :- soft(X).\ndirty(X) :- red(X).\nangry(Z) :- funny(Z), smooth(B).\nfriend(X,Y) :- busy(Y), friendly(X), heavy(B).\nrough(Y) :- wet(Y).\nbusy(X) :- bored(X).\nhungry(Y) :- funny(Y).\nrough(X) :- heavy(X), dislikes(V,X), tall(V).\nheavy(Y) :- heavy(Y), likes(W,Y), tall(W).\nowns(X,Y) :- sad(X), light(Y).\nbrave(X) :- angry(X), strong(X).\nlight(X) :- heavy(X), wet(X).\nold(phone).\nlikes(alice,ball).\nfriend(bob,dave).\nbrave(frank).\ndislikes(eve,book).\nfriendly(alice).\ndislikes(alice,pencil).\nowns(alice,pencil).\nenemy(eve,alice).\ncurious(dave).\nenemy(carol,bob).\nparent(carol,eve).\ntired(carol).\ndislikes(dave,phone).\nfriend(eve,george).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is dirty.\nFor all Z, if there exists B such that person Z is funny and object B is smooth, then person Z is angry.\nFor all X, Y, if there exists B such that person Y is busy and person X is friendly and object B is heavy, then person X is a friend of person Y.\nFor all Y, if object Y is wet, then object Y is rough.\nFor all X, if person X is bored, then person X is busy.\nFor all Y, if person Y is funny, then person Y is hungry.\nFor all X, if there exists V such that object X is heavy and person V dislikes object X and person V is tall, then object X is rough.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is tall, then object Y is heavy.\nFor all X, Y, if person X is sad and object Y is light, then person X owns object Y.\nFor all X, if person X is angry and person X is strong, then person X is brave.\nFor all X, if object X is heavy and object X is wet, then object X is light.\n\nAnd the following facts:\nphone is old.\nalice likes ball.\nbob is a friend of dave.\nfrank is brave.\neve dislikes book.\nalice is friendly.\nalice dislikes pencil.\nalice owns pencil.\neve is an enemy of alice.\ndave is curious.\ncarol is an enemy of bob.\ncarol is a parent of eve.\ncarol is tired.\ndave dislikes phone.\neve is a friend of george.\neve is a friend of alice.\n\nQUESTION:\nIs phone is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 864,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(george).",
    "c": "small(X) :- old(X).\nhard(X) :- small(X).\nclean(X) :- hard(X).\nbig(X) :- clean(X).\nclean(X) :- big(X).\nnew(X) :- clean(X).\nsmall(X) :- new(X).\nsoft(X) :- small(X).\nred(X) :- soft(X).\ndirty(X) :- red(X).\nangry(Z) :- funny(Z), smooth(B).\nfriend(X,Y) :- busy(Y), friendly(X), heavy(B).\nrough(Y) :- wet(Y).\nbusy(X) :- bored(X).\nhungry(Y) :- funny(Y).\nrough(X) :- heavy(X), dislikes(V,X), tall(V).\nheavy(Y) :- heavy(Y), likes(W,Y), tall(W).\nowns(X,Y) :- sad(X), light(Y).\nbrave(X) :- angry(X), strong(X).\nlight(X) :- heavy(X), wet(X).\nold(phone).\nlikes(alice,ball).\nfriend(bob,dave).\nbrave(frank).\ndislikes(eve,book).\nfriendly(alice).\ndislikes(alice,pencil).\nowns(alice,pencil).\nenemy(eve,alice).\ncurious(dave).\nenemy(carol,bob).\nparent(carol,eve).\ntired(carol).\ndislikes(dave,phone).\nfriend(eve,george).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is dirty.\nFor all Z, if there exists B such that person Z is funny and object B is smooth, then person Z is angry.\nFor all X, Y, if there exists B such that person Y is busy and person X is friendly and object B is heavy, then person X is a friend of person Y.\nFor all Y, if object Y is wet, then object Y is rough.\nFor all X, if person X is bored, then person X is busy.\nFor all Y, if person Y is funny, then person Y is hungry.\nFor all X, if there exists V such that object X is heavy and person V dislikes object X and person V is tall, then object X is rough.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is tall, then object Y is heavy.\nFor all X, Y, if person X is sad and object Y is light, then person X owns object Y.\nFor all X, if person X is angry and person X is strong, then person X is brave.\nFor all X, if object X is heavy and object X is wet, then object X is light.\n\nAnd the following facts:\nphone is old.\nalice likes ball.\nbob is a friend of dave.\nfrank is brave.\neve dislikes book.\nalice is friendly.\nalice dislikes pencil.\nalice owns pencil.\neve is an enemy of alice.\ndave is curious.\ncarol is an enemy of bob.\ncarol is a parent of eve.\ncarol is tired.\ndave dislikes phone.\neve is a friend of george.\neve is a friend of alice.\n\nQUESTION:\nIs george is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 865,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(phone).",
    "c": "small(X) :- old(X).\nhard(X) :- small(X).\nclean(X) :- hard(X).\nbig(X) :- clean(X).\nclean(X) :- big(X).\nnew(X) :- clean(X).\nsmall(X) :- new(X).\nsoft(X) :- small(X).\nred(X) :- soft(X).\ndirty(X) :- red(X).\nangry(Z) :- funny(Z), smooth(B).\nfriend(X,Y) :- busy(Y), friendly(X), heavy(B).\nrough(Y) :- wet(Y).\nbusy(X) :- bored(X).\nhungry(Y) :- funny(Y).\nrough(X) :- heavy(X), dislikes(V,X), tall(V).\nheavy(Y) :- heavy(Y), likes(W,Y), tall(W).\nowns(X,Y) :- sad(X), light(Y).\nbrave(X) :- angry(X), strong(X).\nlight(X) :- heavy(X), wet(X).\ndirty(phone).\nlikes(alice,ball).\nfriend(bob,dave).\nbrave(frank).\ndislikes(eve,book).\nfriendly(alice).\ndislikes(alice,pencil).\nowns(alice,pencil).\nenemy(eve,alice).\ncurious(dave).\nenemy(carol,bob).\nparent(carol,eve).\ntired(carol).\ndislikes(dave,phone).\nfriend(eve,george).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is dirty.\nFor all Z, if there exists B such that person Z is funny and object B is smooth, then person Z is angry.\nFor all X, Y, if there exists B such that person Y is busy and person X is friendly and object B is heavy, then person X is a friend of person Y.\nFor all Y, if object Y is wet, then object Y is rough.\nFor all X, if person X is bored, then person X is busy.\nFor all Y, if person Y is funny, then person Y is hungry.\nFor all X, if there exists V such that object X is heavy and person V dislikes object X and person V is tall, then object X is rough.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is tall, then object Y is heavy.\nFor all X, Y, if person X is sad and object Y is light, then person X owns object Y.\nFor all X, if person X is angry and person X is strong, then person X is brave.\nFor all X, if object X is heavy and object X is wet, then object X is light.\n\nAnd the following facts:\nphone is dirty.\nalice likes ball.\nbob is a friend of dave.\nfrank is brave.\neve dislikes book.\nalice is friendly.\nalice dislikes pencil.\nalice owns pencil.\neve is an enemy of alice.\ndave is curious.\ncarol is an enemy of bob.\ncarol is a parent of eve.\ncarol is tired.\ndave dislikes phone.\neve is a friend of george.\neve is a friend of alice.\n\nQUESTION:\nCould phone is old explain phone is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 866,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(alice).",
    "c": "small(X) :- old(X).\nhard(X) :- small(X).\nclean(X) :- hard(X).\nbig(X) :- clean(X).\nclean(X) :- big(X).\nnew(X) :- clean(X).\nsmall(X) :- new(X).\nsoft(X) :- small(X).\nred(X) :- soft(X).\ndirty(X) :- red(X).\nangry(Z) :- funny(Z), smooth(B).\nfriend(X,Y) :- busy(Y), friendly(X), heavy(B).\nrough(Y) :- wet(Y).\nbusy(X) :- bored(X).\nhungry(Y) :- funny(Y).\nrough(X) :- heavy(X), dislikes(V,X), tall(V).\nheavy(Y) :- heavy(Y), likes(W,Y), tall(W).\nowns(X,Y) :- sad(X), light(Y).\nbrave(X) :- angry(X), strong(X).\nlight(X) :- heavy(X), wet(X).\ndirty(phone).\nlikes(alice,ball).\nfriend(bob,dave).\nbrave(frank).\ndislikes(eve,book).\nfriendly(alice).\ndislikes(alice,pencil).\nowns(alice,pencil).\nenemy(eve,alice).\ncurious(dave).\nenemy(carol,bob).\nparent(carol,eve).\ntired(carol).\ndislikes(dave,phone).\nfriend(eve,george).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is dirty.\nFor all Z, if there exists B such that person Z is funny and object B is smooth, then person Z is angry.\nFor all X, Y, if there exists B such that person Y is busy and person X is friendly and object B is heavy, then person X is a friend of person Y.\nFor all Y, if object Y is wet, then object Y is rough.\nFor all X, if person X is bored, then person X is busy.\nFor all Y, if person Y is funny, then person Y is hungry.\nFor all X, if there exists V such that object X is heavy and person V dislikes object X and person V is tall, then object X is rough.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is tall, then object Y is heavy.\nFor all X, Y, if person X is sad and object Y is light, then person X owns object Y.\nFor all X, if person X is angry and person X is strong, then person X is brave.\nFor all X, if object X is heavy and object X is wet, then object X is light.\n\nAnd the following facts:\nphone is dirty.\nalice likes ball.\nbob is a friend of dave.\nfrank is brave.\neve dislikes book.\nalice is friendly.\nalice dislikes pencil.\nalice owns pencil.\neve is an enemy of alice.\ndave is curious.\ncarol is an enemy of bob.\ncarol is a parent of eve.\ncarol is tired.\ndave dislikes phone.\neve is a friend of george.\neve is a friend of alice.\n\nQUESTION:\nCould alice is funny explain phone is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 867,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(carol).",
    "c": "bored(X) :- sad(X).\nfriendly(X) :- bored(X).\nbusy(X) :- friendly(X).\nhungry(X) :- busy(X).\nangry(X) :- hungry(X).\nclever(X) :- angry(X).\nfriendly(X) :- clever(X).\nstrong(X) :- friendly(X).\ncalm(X) :- strong(X).\ncurious(X) :- calm(X).\nlight(Y) :- new(Y), brave(D).\nbig(X) :- light(X), excited(F).\ndislikes(X,Y) :- big(Y), tired(X), clean(C).\nbrave(Z) :- happy(Z), friend(Z,B), tall(B).\nbig(X) :- old(X).\nsmall(X) :- rough(X).\nred(X) :- clean(X), dirty(X).\nparent(X,Y) :- excited(X), brave(Y), friend(X,Y).\nfriend(X,Y) :- tired(X), tall(Y).\nsmooth(X) :- light(X), soft(X).\nsad(carol).\nowns(frank,apple).\nowns(carol,ball).\nsibling(carol,dave).\nwet(pencil).\ndislikes(eve,pencil).\nfriend(carol,eve).\nowns(frank,pencil).\nsibling(carol,eve).\nfriend(bob,frank).\nenemy(eve,carol).\nnew(car).\nenemy(carol,george).\ndislikes(dave,book).\nenemy(carol,frank).\nnew(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all Y, if there exists D such that object Y is new and person D is brave, then object Y is light.\nFor all X, if there exists F such that object X is light and person F is excited, then object X is big.\nFor all X, Y, if there exists C such that object Y is big and person X is tired and object C is clean, then person X dislikes object Y.\nFor all Z, if there exists B such that person Z is happy and person Z is a friend of person B and person B is tall, then person Z is brave.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is clean and object X is dirty, then object X is red.\nFor all X, Y, if person X is excited and person Y is brave and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is tired and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is light and object X is soft, then object X is smooth.\n\nAnd the following facts:\ncarol is sad.\nfrank owns apple.\ncarol owns ball.\ncarol is a sibling of dave.\npencil is wet.\neve dislikes pencil.\ncarol is a friend of eve.\nfrank owns pencil.\ncarol is a sibling of eve.\nbob is a friend of frank.\neve is an enemy of carol.\ncar is new.\ncarol is an enemy of george.\ndave dislikes book.\ncarol is an enemy of frank.\nphone is new.\n\nQUESTION:\nIs carol is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 868,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(phone).",
    "c": "bored(X) :- sad(X).\nfriendly(X) :- bored(X).\nbusy(X) :- friendly(X).\nhungry(X) :- busy(X).\nangry(X) :- hungry(X).\nclever(X) :- angry(X).\nfriendly(X) :- clever(X).\nstrong(X) :- friendly(X).\ncalm(X) :- strong(X).\ncurious(X) :- calm(X).\nlight(Y) :- new(Y), brave(D).\nbig(X) :- light(X), excited(F).\ndislikes(X,Y) :- big(Y), tired(X), clean(C).\nbrave(Z) :- happy(Z), friend(Z,B), tall(B).\nbig(X) :- old(X).\nsmall(X) :- rough(X).\nred(X) :- clean(X), dirty(X).\nparent(X,Y) :- excited(X), brave(Y), friend(X,Y).\nfriend(X,Y) :- tired(X), tall(Y).\nsmooth(X) :- light(X), soft(X).\nsad(carol).\nowns(frank,apple).\nowns(carol,ball).\nsibling(carol,dave).\nwet(pencil).\ndislikes(eve,pencil).\nfriend(carol,eve).\nowns(frank,pencil).\nsibling(carol,eve).\nfriend(bob,frank).\nenemy(eve,carol).\nnew(car).\nenemy(carol,george).\ndislikes(dave,book).\nenemy(carol,frank).\nnew(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all Y, if there exists D such that object Y is new and person D is brave, then object Y is light.\nFor all X, if there exists F such that object X is light and person F is excited, then object X is big.\nFor all X, Y, if there exists C such that object Y is big and person X is tired and object C is clean, then person X dislikes object Y.\nFor all Z, if there exists B such that person Z is happy and person Z is a friend of person B and person B is tall, then person Z is brave.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is clean and object X is dirty, then object X is red.\nFor all X, Y, if person X is excited and person Y is brave and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is tired and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is light and object X is soft, then object X is smooth.\n\nAnd the following facts:\ncarol is sad.\nfrank owns apple.\ncarol owns ball.\ncarol is a sibling of dave.\npencil is wet.\neve dislikes pencil.\ncarol is a friend of eve.\nfrank owns pencil.\ncarol is a sibling of eve.\nbob is a friend of frank.\neve is an enemy of carol.\ncar is new.\ncarol is an enemy of george.\ndave dislikes book.\ncarol is an enemy of frank.\nphone is new.\n\nQUESTION:\nIs phone is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 869,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(carol).",
    "c": "bored(X) :- sad(X).\nfriendly(X) :- bored(X).\nbusy(X) :- friendly(X).\nhungry(X) :- busy(X).\nangry(X) :- hungry(X).\nclever(X) :- angry(X).\nfriendly(X) :- clever(X).\nstrong(X) :- friendly(X).\ncalm(X) :- strong(X).\ncurious(X) :- calm(X).\nlight(Y) :- new(Y), brave(D).\nbig(X) :- light(X), excited(F).\ndislikes(X,Y) :- big(Y), tired(X), clean(C).\nbrave(Z) :- happy(Z), friend(Z,B), tall(B).\nbig(X) :- old(X).\nsmall(X) :- rough(X).\nred(X) :- clean(X), dirty(X).\nparent(X,Y) :- excited(X), brave(Y), friend(X,Y).\nfriend(X,Y) :- tired(X), tall(Y).\nsmooth(X) :- light(X), soft(X).\ncurious(carol).\nowns(frank,apple).\nowns(carol,ball).\nsibling(carol,dave).\nwet(pencil).\ndislikes(eve,pencil).\nfriend(carol,eve).\nowns(frank,pencil).\nsibling(carol,eve).\nfriend(bob,frank).\nenemy(eve,carol).\nnew(car).\nenemy(carol,george).\ndislikes(dave,book).\nenemy(carol,frank).\nnew(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all Y, if there exists D such that object Y is new and person D is brave, then object Y is light.\nFor all X, if there exists F such that object X is light and person F is excited, then object X is big.\nFor all X, Y, if there exists C such that object Y is big and person X is tired and object C is clean, then person X dislikes object Y.\nFor all Z, if there exists B such that person Z is happy and person Z is a friend of person B and person B is tall, then person Z is brave.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is clean and object X is dirty, then object X is red.\nFor all X, Y, if person X is excited and person Y is brave and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is tired and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is light and object X is soft, then object X is smooth.\n\nAnd the following facts:\ncarol is curious.\nfrank owns apple.\ncarol owns ball.\ncarol is a sibling of dave.\npencil is wet.\neve dislikes pencil.\ncarol is a friend of eve.\nfrank owns pencil.\ncarol is a sibling of eve.\nbob is a friend of frank.\neve is an enemy of carol.\ncar is new.\ncarol is an enemy of george.\ndave dislikes book.\ncarol is an enemy of frank.\nphone is new.\n\nQUESTION:\nCould carol is sad explain carol is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 870,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(frank).",
    "c": "bored(X) :- sad(X).\nfriendly(X) :- bored(X).\nbusy(X) :- friendly(X).\nhungry(X) :- busy(X).\nangry(X) :- hungry(X).\nclever(X) :- angry(X).\nfriendly(X) :- clever(X).\nstrong(X) :- friendly(X).\ncalm(X) :- strong(X).\ncurious(X) :- calm(X).\nlight(Y) :- new(Y), brave(D).\nbig(X) :- light(X), excited(F).\ndislikes(X,Y) :- big(Y), tired(X), clean(C).\nbrave(Z) :- happy(Z), friend(Z,B), tall(B).\nbig(X) :- old(X).\nsmall(X) :- rough(X).\nred(X) :- clean(X), dirty(X).\nparent(X,Y) :- excited(X), brave(Y), friend(X,Y).\nfriend(X,Y) :- tired(X), tall(Y).\nsmooth(X) :- light(X), soft(X).\ncurious(carol).\nowns(frank,apple).\nowns(carol,ball).\nsibling(carol,dave).\nwet(pencil).\ndislikes(eve,pencil).\nfriend(carol,eve).\nowns(frank,pencil).\nsibling(carol,eve).\nfriend(bob,frank).\nenemy(eve,carol).\nnew(car).\nenemy(carol,george).\ndislikes(dave,book).\nenemy(carol,frank).\nnew(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is strong.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all Y, if there exists D such that object Y is new and person D is brave, then object Y is light.\nFor all X, if there exists F such that object X is light and person F is excited, then object X is big.\nFor all X, Y, if there exists C such that object Y is big and person X is tired and object C is clean, then person X dislikes object Y.\nFor all Z, if there exists B such that person Z is happy and person Z is a friend of person B and person B is tall, then person Z is brave.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is clean and object X is dirty, then object X is red.\nFor all X, Y, if person X is excited and person Y is brave and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is tired and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is light and object X is soft, then object X is smooth.\n\nAnd the following facts:\ncarol is curious.\nfrank owns apple.\ncarol owns ball.\ncarol is a sibling of dave.\npencil is wet.\neve dislikes pencil.\ncarol is a friend of eve.\nfrank owns pencil.\ncarol is a sibling of eve.\nbob is a friend of frank.\neve is an enemy of carol.\ncar is new.\ncarol is an enemy of george.\ndave dislikes book.\ncarol is an enemy of frank.\nphone is new.\n\nQUESTION:\nCould frank is calm explain carol is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 871,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(dave).",
    "c": "angry(X) :- tired(X).\ncurious(X) :- angry(X).\nfunny(X) :- curious(X).\ncalm(X) :- funny(X).\nweak(X) :- calm(X).\nexcited(X) :- weak(X).\nfriendly(X) :- excited(X).\nbrave(X) :- friendly(X).\nbored(X) :- brave(X).\nclever(X) :- bored(X).\nlikes(Z,Y) :- small(Y), sad(Z).\nred(X) :- new(X), owns(A,X), hungry(A).\nbusy(X) :- strong(X), enemy(X,U), hungry(U).\ntall(Y) :- strong(Y), parent(Y,U), happy(U).\nsmall(Y) :- light(Y), likes(A,Y), tall(A).\nheavy(X) :- rough(X), small(X).\nhungry(X) :- sad(X).\nsmooth(X) :- old(X).\nhard(X) :- light(X).\nsad(X) :- hungry(X).\ntired(dave).\nsibling(george,alice).\nparent(eve,carol).\nparent(eve,bob).\nowns(bob,ball).\nenemy(george,carol).\nparent(carol,alice).\nwet(apple).\nfriend(carol,frank).\nbusy(carol).\nsibling(george,eve).\ndislikes(george,book).\nsad(carol).\nlikes(alice,pencil).\ndislikes(alice,phone).\nbig(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all Y, Z, if object Y is small and person Z is sad, then person Z likes object Y.\nFor all X, if there exists A such that object X is new and person A owns object X and person A is hungry, then object X is red.\nFor all X, if there exists U such that person X is strong and person X is an enemy of person U and person U is hungry, then person X is busy.\nFor all Y, if there exists U such that person Y is strong and person Y is a parent of person U and person U is happy, then person Y is tall.\nFor all Y, if there exists A such that object Y is light and person A likes object Y and person A is tall, then object Y is small.\nFor all X, if object X is rough and object X is small, then object X is heavy.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is light, then object X is hard.\nFor all X, if person X is hungry, then person X is sad.\n\nAnd the following facts:\ndave is tired.\ngeorge is a sibling of alice.\neve is a parent of carol.\neve is a parent of bob.\nbob owns ball.\ngeorge is an enemy of carol.\ncarol is a parent of alice.\napple is wet.\ncarol is a friend of frank.\ncarol is busy.\ngeorge is a sibling of eve.\ngeorge dislikes book.\ncarol is sad.\nalice likes pencil.\nalice dislikes phone.\nball is big.\n\nQUESTION:\nIs dave is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 872,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(pencil).",
    "c": "angry(X) :- tired(X).\ncurious(X) :- angry(X).\nfunny(X) :- curious(X).\ncalm(X) :- funny(X).\nweak(X) :- calm(X).\nexcited(X) :- weak(X).\nfriendly(X) :- excited(X).\nbrave(X) :- friendly(X).\nbored(X) :- brave(X).\nclever(X) :- bored(X).\nlikes(Z,Y) :- small(Y), sad(Z).\nred(X) :- new(X), owns(A,X), hungry(A).\nbusy(X) :- strong(X), enemy(X,U), hungry(U).\ntall(Y) :- strong(Y), parent(Y,U), happy(U).\nsmall(Y) :- light(Y), likes(A,Y), tall(A).\nheavy(X) :- rough(X), small(X).\nhungry(X) :- sad(X).\nsmooth(X) :- old(X).\nhard(X) :- light(X).\nsad(X) :- hungry(X).\ntired(dave).\nsibling(george,alice).\nparent(eve,carol).\nparent(eve,bob).\nowns(bob,ball).\nenemy(george,carol).\nparent(carol,alice).\nwet(apple).\nfriend(carol,frank).\nbusy(carol).\nsibling(george,eve).\ndislikes(george,book).\nsad(carol).\nlikes(alice,pencil).\ndislikes(alice,phone).\nbig(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all Y, Z, if object Y is small and person Z is sad, then person Z likes object Y.\nFor all X, if there exists A such that object X is new and person A owns object X and person A is hungry, then object X is red.\nFor all X, if there exists U such that person X is strong and person X is an enemy of person U and person U is hungry, then person X is busy.\nFor all Y, if there exists U such that person Y is strong and person Y is a parent of person U and person U is happy, then person Y is tall.\nFor all Y, if there exists A such that object Y is light and person A likes object Y and person A is tall, then object Y is small.\nFor all X, if object X is rough and object X is small, then object X is heavy.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is light, then object X is hard.\nFor all X, if person X is hungry, then person X is sad.\n\nAnd the following facts:\ndave is tired.\ngeorge is a sibling of alice.\neve is a parent of carol.\neve is a parent of bob.\nbob owns ball.\ngeorge is an enemy of carol.\ncarol is a parent of alice.\napple is wet.\ncarol is a friend of frank.\ncarol is busy.\ngeorge is a sibling of eve.\ngeorge dislikes book.\ncarol is sad.\nalice likes pencil.\nalice dislikes phone.\nball is big.\n\nQUESTION:\nIs pencil is red true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 873,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(dave).",
    "c": "angry(X) :- tired(X).\ncurious(X) :- angry(X).\nfunny(X) :- curious(X).\ncalm(X) :- funny(X).\nweak(X) :- calm(X).\nexcited(X) :- weak(X).\nfriendly(X) :- excited(X).\nbrave(X) :- friendly(X).\nbored(X) :- brave(X).\nclever(X) :- bored(X).\nlikes(Z,Y) :- small(Y), sad(Z).\nred(X) :- new(X), owns(A,X), hungry(A).\nbusy(X) :- strong(X), enemy(X,U), hungry(U).\ntall(Y) :- strong(Y), parent(Y,U), happy(U).\nsmall(Y) :- light(Y), likes(A,Y), tall(A).\nheavy(X) :- rough(X), small(X).\nhungry(X) :- sad(X).\nsmooth(X) :- old(X).\nhard(X) :- light(X).\nsad(X) :- hungry(X).\nclever(dave).\nsibling(george,alice).\nparent(eve,carol).\nparent(eve,bob).\nowns(bob,ball).\nenemy(george,carol).\nparent(carol,alice).\nwet(apple).\nfriend(carol,frank).\nbusy(carol).\nsibling(george,eve).\ndislikes(george,book).\nsad(carol).\nlikes(alice,pencil).\ndislikes(alice,phone).\nbig(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all Y, Z, if object Y is small and person Z is sad, then person Z likes object Y.\nFor all X, if there exists A such that object X is new and person A owns object X and person A is hungry, then object X is red.\nFor all X, if there exists U such that person X is strong and person X is an enemy of person U and person U is hungry, then person X is busy.\nFor all Y, if there exists U such that person Y is strong and person Y is a parent of person U and person U is happy, then person Y is tall.\nFor all Y, if there exists A such that object Y is light and person A likes object Y and person A is tall, then object Y is small.\nFor all X, if object X is rough and object X is small, then object X is heavy.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is light, then object X is hard.\nFor all X, if person X is hungry, then person X is sad.\n\nAnd the following facts:\ndave is clever.\ngeorge is a sibling of alice.\neve is a parent of carol.\neve is a parent of bob.\nbob owns ball.\ngeorge is an enemy of carol.\ncarol is a parent of alice.\napple is wet.\ncarol is a friend of frank.\ncarol is busy.\ngeorge is a sibling of eve.\ngeorge dislikes book.\ncarol is sad.\nalice likes pencil.\nalice dislikes phone.\nball is big.\n\nQUESTION:\nCould dave is tired explain dave is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 874,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(dave).",
    "c": "angry(X) :- tired(X).\ncurious(X) :- angry(X).\nfunny(X) :- curious(X).\ncalm(X) :- funny(X).\nweak(X) :- calm(X).\nexcited(X) :- weak(X).\nfriendly(X) :- excited(X).\nbrave(X) :- friendly(X).\nbored(X) :- brave(X).\nclever(X) :- bored(X).\nlikes(Z,Y) :- small(Y), sad(Z).\nred(X) :- new(X), owns(A,X), hungry(A).\nbusy(X) :- strong(X), enemy(X,U), hungry(U).\ntall(Y) :- strong(Y), parent(Y,U), happy(U).\nsmall(Y) :- light(Y), likes(A,Y), tall(A).\nheavy(X) :- rough(X), small(X).\nhungry(X) :- sad(X).\nsmooth(X) :- old(X).\nhard(X) :- light(X).\nsad(X) :- hungry(X).\nclever(dave).\nsibling(george,alice).\nparent(eve,carol).\nparent(eve,bob).\nowns(bob,ball).\nenemy(george,carol).\nparent(carol,alice).\nwet(apple).\nfriend(carol,frank).\nbusy(carol).\nsibling(george,eve).\ndislikes(george,book).\nsad(carol).\nlikes(alice,pencil).\ndislikes(alice,phone).\nbig(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is clever.\nFor all Y, Z, if object Y is small and person Z is sad, then person Z likes object Y.\nFor all X, if there exists A such that object X is new and person A owns object X and person A is hungry, then object X is red.\nFor all X, if there exists U such that person X is strong and person X is an enemy of person U and person U is hungry, then person X is busy.\nFor all Y, if there exists U such that person Y is strong and person Y is a parent of person U and person U is happy, then person Y is tall.\nFor all Y, if there exists A such that object Y is light and person A likes object Y and person A is tall, then object Y is small.\nFor all X, if object X is rough and object X is small, then object X is heavy.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is light, then object X is hard.\nFor all X, if person X is hungry, then person X is sad.\n\nAnd the following facts:\ndave is clever.\ngeorge is a sibling of alice.\neve is a parent of carol.\neve is a parent of bob.\nbob owns ball.\ngeorge is an enemy of carol.\ncarol is a parent of alice.\napple is wet.\ncarol is a friend of frank.\ncarol is busy.\ngeorge is a sibling of eve.\ngeorge dislikes book.\ncarol is sad.\nalice likes pencil.\nalice dislikes phone.\nball is big.\n\nQUESTION:\nCould dave is angry explain dave is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 875,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(frank).",
    "c": "tall(X) :- excited(X).\nweak(X) :- tall(X).\nhappy(X) :- weak(X).\nbrave(X) :- happy(X).\ncurious(X) :- brave(X).\nfriendly(X) :- curious(X).\nangry(X) :- friendly(X).\nclever(X) :- angry(X).\nfunny(X) :- clever(X).\nsad(X) :- funny(X).\nclean(X) :- rough(X), hard(C).\ncalm(Z) :- tired(Z), calm(C).\nhard(Z) :- rough(Z), likes(U,Z), busy(U).\nbored(X) :- calm(X), enemy(X,W), tired(W).\nenemy(X,Y) :- bored(X), strong(Y).\nsoft(X) :- light(X), dirty(X).\ntired(X) :- bored(X), strong(X).\nlikes(X,Y) :- calm(X), big(Y).\nlight(X) :- red(X), old(X).\nsoft(X) :- heavy(X).\nexcited(frank).\nparent(dave,eve).\nlikes(eve,ball).\nsmall(phone).\ntired(dave).\nfriend(george,bob).\nsibling(alice,frank).\nfriend(dave,george).\nparent(george,bob).\nowns(alice,ball).\nenemy(bob,carol).\nlikes(bob,car).\nlikes(carol,apple).\nowns(dave,book).\nrough(phone).\nenemy(eve,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is sad.\nFor all X, if there exists C such that object X is rough and object C is hard, then object X is clean.\nFor all Z, if there exists C such that person Z is tired and person C is calm, then person Z is calm.\nFor all Z, if there exists U such that object Z is rough and person U likes object Z and person U is busy, then object Z is hard.\nFor all X, if there exists W such that person X is calm and person X is an enemy of person W and person W is tired, then person X is bored.\nFor all X, Y, if person X is bored and person Y is strong, then person X is an enemy of person Y.\nFor all X, if object X is light and object X is dirty, then object X is soft.\nFor all X, if person X is bored and person X is strong, then person X is tired.\nFor all X, Y, if person X is calm and object Y is big, then person X likes object Y.\nFor all X, if object X is red and object X is old, then object X is light.\nFor all X, if object X is heavy, then object X is soft.\n\nAnd the following facts:\nfrank is excited.\ndave is a parent of eve.\neve likes ball.\nphone is small.\ndave is tired.\ngeorge is a friend of bob.\nalice is a sibling of frank.\ndave is a friend of george.\ngeorge is a parent of bob.\nalice owns ball.\nbob is an enemy of carol.\nbob likes car.\ncarol likes apple.\ndave owns book.\nphone is rough.\neve is an enemy of carol.\n\nQUESTION:\nIs frank is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 876,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(george).",
    "c": "tall(X) :- excited(X).\nweak(X) :- tall(X).\nhappy(X) :- weak(X).\nbrave(X) :- happy(X).\ncurious(X) :- brave(X).\nfriendly(X) :- curious(X).\nangry(X) :- friendly(X).\nclever(X) :- angry(X).\nfunny(X) :- clever(X).\nsad(X) :- funny(X).\nclean(X) :- rough(X), hard(C).\ncalm(Z) :- tired(Z), calm(C).\nhard(Z) :- rough(Z), likes(U,Z), busy(U).\nbored(X) :- calm(X), enemy(X,W), tired(W).\nenemy(X,Y) :- bored(X), strong(Y).\nsoft(X) :- light(X), dirty(X).\ntired(X) :- bored(X), strong(X).\nlikes(X,Y) :- calm(X), big(Y).\nlight(X) :- red(X), old(X).\nsoft(X) :- heavy(X).\nexcited(frank).\nparent(dave,eve).\nlikes(eve,ball).\nsmall(phone).\ntired(dave).\nfriend(george,bob).\nsibling(alice,frank).\nfriend(dave,george).\nparent(george,bob).\nowns(alice,ball).\nenemy(bob,carol).\nlikes(bob,car).\nlikes(carol,apple).\nowns(dave,book).\nrough(phone).\nenemy(eve,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is sad.\nFor all X, if there exists C such that object X is rough and object C is hard, then object X is clean.\nFor all Z, if there exists C such that person Z is tired and person C is calm, then person Z is calm.\nFor all Z, if there exists U such that object Z is rough and person U likes object Z and person U is busy, then object Z is hard.\nFor all X, if there exists W such that person X is calm and person X is an enemy of person W and person W is tired, then person X is bored.\nFor all X, Y, if person X is bored and person Y is strong, then person X is an enemy of person Y.\nFor all X, if object X is light and object X is dirty, then object X is soft.\nFor all X, if person X is bored and person X is strong, then person X is tired.\nFor all X, Y, if person X is calm and object Y is big, then person X likes object Y.\nFor all X, if object X is red and object X is old, then object X is light.\nFor all X, if object X is heavy, then object X is soft.\n\nAnd the following facts:\nfrank is excited.\ndave is a parent of eve.\neve likes ball.\nphone is small.\ndave is tired.\ngeorge is a friend of bob.\nalice is a sibling of frank.\ndave is a friend of george.\ngeorge is a parent of bob.\nalice owns ball.\nbob is an enemy of carol.\nbob likes car.\ncarol likes apple.\ndave owns book.\nphone is rough.\neve is an enemy of carol.\n\nQUESTION:\nIs george is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 877,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(frank).",
    "c": "tall(X) :- excited(X).\nweak(X) :- tall(X).\nhappy(X) :- weak(X).\nbrave(X) :- happy(X).\ncurious(X) :- brave(X).\nfriendly(X) :- curious(X).\nangry(X) :- friendly(X).\nclever(X) :- angry(X).\nfunny(X) :- clever(X).\nsad(X) :- funny(X).\nclean(X) :- rough(X), hard(C).\ncalm(Z) :- tired(Z), calm(C).\nhard(Z) :- rough(Z), likes(U,Z), busy(U).\nbored(X) :- calm(X), enemy(X,W), tired(W).\nenemy(X,Y) :- bored(X), strong(Y).\nsoft(X) :- light(X), dirty(X).\ntired(X) :- bored(X), strong(X).\nlikes(X,Y) :- calm(X), big(Y).\nlight(X) :- red(X), old(X).\nsoft(X) :- heavy(X).\nsad(frank).\nparent(dave,eve).\nlikes(eve,ball).\nsmall(phone).\ntired(dave).\nfriend(george,bob).\nsibling(alice,frank).\nfriend(dave,george).\nparent(george,bob).\nowns(alice,ball).\nenemy(bob,carol).\nlikes(bob,car).\nlikes(carol,apple).\nowns(dave,book).\nrough(phone).\nenemy(eve,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is sad.\nFor all X, if there exists C such that object X is rough and object C is hard, then object X is clean.\nFor all Z, if there exists C such that person Z is tired and person C is calm, then person Z is calm.\nFor all Z, if there exists U such that object Z is rough and person U likes object Z and person U is busy, then object Z is hard.\nFor all X, if there exists W such that person X is calm and person X is an enemy of person W and person W is tired, then person X is bored.\nFor all X, Y, if person X is bored and person Y is strong, then person X is an enemy of person Y.\nFor all X, if object X is light and object X is dirty, then object X is soft.\nFor all X, if person X is bored and person X is strong, then person X is tired.\nFor all X, Y, if person X is calm and object Y is big, then person X likes object Y.\nFor all X, if object X is red and object X is old, then object X is light.\nFor all X, if object X is heavy, then object X is soft.\n\nAnd the following facts:\nfrank is sad.\ndave is a parent of eve.\neve likes ball.\nphone is small.\ndave is tired.\ngeorge is a friend of bob.\nalice is a sibling of frank.\ndave is a friend of george.\ngeorge is a parent of bob.\nalice owns ball.\nbob is an enemy of carol.\nbob likes car.\ncarol likes apple.\ndave owns book.\nphone is rough.\neve is an enemy of carol.\n\nQUESTION:\nCould frank is excited explain frank is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 878,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(carol).",
    "c": "tall(X) :- excited(X).\nweak(X) :- tall(X).\nhappy(X) :- weak(X).\nbrave(X) :- happy(X).\ncurious(X) :- brave(X).\nfriendly(X) :- curious(X).\nangry(X) :- friendly(X).\nclever(X) :- angry(X).\nfunny(X) :- clever(X).\nsad(X) :- funny(X).\nclean(X) :- rough(X), hard(C).\ncalm(Z) :- tired(Z), calm(C).\nhard(Z) :- rough(Z), likes(U,Z), busy(U).\nbored(X) :- calm(X), enemy(X,W), tired(W).\nenemy(X,Y) :- bored(X), strong(Y).\nsoft(X) :- light(X), dirty(X).\ntired(X) :- bored(X), strong(X).\nlikes(X,Y) :- calm(X), big(Y).\nlight(X) :- red(X), old(X).\nsoft(X) :- heavy(X).\nsad(frank).\nparent(dave,eve).\nlikes(eve,ball).\nsmall(phone).\ntired(dave).\nfriend(george,bob).\nsibling(alice,frank).\nfriend(dave,george).\nparent(george,bob).\nowns(alice,ball).\nenemy(bob,carol).\nlikes(bob,car).\nlikes(carol,apple).\nowns(dave,book).\nrough(phone).\nenemy(eve,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is sad.\nFor all X, if there exists C such that object X is rough and object C is hard, then object X is clean.\nFor all Z, if there exists C such that person Z is tired and person C is calm, then person Z is calm.\nFor all Z, if there exists U such that object Z is rough and person U likes object Z and person U is busy, then object Z is hard.\nFor all X, if there exists W such that person X is calm and person X is an enemy of person W and person W is tired, then person X is bored.\nFor all X, Y, if person X is bored and person Y is strong, then person X is an enemy of person Y.\nFor all X, if object X is light and object X is dirty, then object X is soft.\nFor all X, if person X is bored and person X is strong, then person X is tired.\nFor all X, Y, if person X is calm and object Y is big, then person X likes object Y.\nFor all X, if object X is red and object X is old, then object X is light.\nFor all X, if object X is heavy, then object X is soft.\n\nAnd the following facts:\nfrank is sad.\ndave is a parent of eve.\neve likes ball.\nphone is small.\ndave is tired.\ngeorge is a friend of bob.\nalice is a sibling of frank.\ndave is a friend of george.\ngeorge is a parent of bob.\nalice owns ball.\nbob is an enemy of carol.\nbob likes car.\ncarol likes apple.\ndave owns book.\nphone is rough.\neve is an enemy of carol.\n\nQUESTION:\nCould carol is busy explain frank is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 879,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(bob).",
    "c": "happy(X) :- clever(X).\nhungry(X) :- happy(X).\nbrave(X) :- hungry(X).\nexcited(X) :- brave(X).\nhungry(X) :- excited(X).\nstrong(X) :- hungry(X).\nfriendly(X) :- strong(X).\nbrave(X) :- friendly(X).\nexcited(X) :- brave(X).\ntired(X) :- excited(X).\nclever(X) :- tired(X).\nhappy(X) :- clever(X).\nsad(X) :- happy(X).\nhungry(X) :- sad(X).\nfriendly(X) :- hungry(X).\ncalm(X) :- friendly(X).\nangry(X) :- calm(X).\nexcited(X) :- angry(X).\nstrong(X) :- excited(X).\ntall(X) :- strong(X).\nclever(bob).\nheavy(phone).\nsibling(bob,eve).\nowns(frank,ball).\nlikes(bob,pencil).\ndislikes(dave,car).\nowns(bob,phone).\nowns(alice,ball).\nweak(carol).\nenemy(dave,frank).\nowns(george,ball).\nenemy(bob,george).\nbored(frank).\nfriend(george,bob).\ndislikes(frank,book).\nold(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\n\nAnd the following facts:\nbob is clever.\nphone is heavy.\nbob is a sibling of eve.\nfrank owns ball.\nbob likes pencil.\ndave dislikes car.\nbob owns phone.\nalice owns ball.\ncarol is weak.\ndave is an enemy of frank.\ngeorge owns ball.\nbob is an enemy of george.\nfrank is bored.\ngeorge is a friend of bob.\nfrank dislikes book.\nphone is old.\n\nQUESTION:\nIs bob is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 880,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "sad(frank).",
    "c": "happy(X) :- clever(X).\nhungry(X) :- happy(X).\nbrave(X) :- hungry(X).\nexcited(X) :- brave(X).\nhungry(X) :- excited(X).\nstrong(X) :- hungry(X).\nfriendly(X) :- strong(X).\nbrave(X) :- friendly(X).\nexcited(X) :- brave(X).\ntired(X) :- excited(X).\nclever(X) :- tired(X).\nhappy(X) :- clever(X).\nsad(X) :- happy(X).\nhungry(X) :- sad(X).\nfriendly(X) :- hungry(X).\ncalm(X) :- friendly(X).\nangry(X) :- calm(X).\nexcited(X) :- angry(X).\nstrong(X) :- excited(X).\ntall(X) :- strong(X).\nclever(bob).\nheavy(phone).\nsibling(bob,eve).\nowns(frank,ball).\nlikes(bob,pencil).\ndislikes(dave,car).\nowns(bob,phone).\nowns(alice,ball).\nweak(carol).\nenemy(dave,frank).\nowns(george,ball).\nenemy(bob,george).\nbored(frank).\nfriend(george,bob).\ndislikes(frank,book).\nold(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\n\nAnd the following facts:\nbob is clever.\nphone is heavy.\nbob is a sibling of eve.\nfrank owns ball.\nbob likes pencil.\ndave dislikes car.\nbob owns phone.\nalice owns ball.\ncarol is weak.\ndave is an enemy of frank.\ngeorge owns ball.\nbob is an enemy of george.\nfrank is bored.\ngeorge is a friend of bob.\nfrank dislikes book.\nphone is old.\n\nQUESTION:\nIs frank is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 881,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(bob).",
    "c": "happy(X) :- clever(X).\nhungry(X) :- happy(X).\nbrave(X) :- hungry(X).\nexcited(X) :- brave(X).\nhungry(X) :- excited(X).\nstrong(X) :- hungry(X).\nfriendly(X) :- strong(X).\nbrave(X) :- friendly(X).\nexcited(X) :- brave(X).\ntired(X) :- excited(X).\nclever(X) :- tired(X).\nhappy(X) :- clever(X).\nsad(X) :- happy(X).\nhungry(X) :- sad(X).\nfriendly(X) :- hungry(X).\ncalm(X) :- friendly(X).\nangry(X) :- calm(X).\nexcited(X) :- angry(X).\nstrong(X) :- excited(X).\ntall(X) :- strong(X).\ntall(bob).\nheavy(phone).\nsibling(bob,eve).\nowns(frank,ball).\nlikes(bob,pencil).\ndislikes(dave,car).\nowns(bob,phone).\nowns(alice,ball).\nweak(carol).\nenemy(dave,frank).\nowns(george,ball).\nenemy(bob,george).\nbored(frank).\nfriend(george,bob).\ndislikes(frank,book).\nold(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\n\nAnd the following facts:\nbob is tall.\nphone is heavy.\nbob is a sibling of eve.\nfrank owns ball.\nbob likes pencil.\ndave dislikes car.\nbob owns phone.\nalice owns ball.\ncarol is weak.\ndave is an enemy of frank.\ngeorge owns ball.\nbob is an enemy of george.\nfrank is bored.\ngeorge is a friend of bob.\nfrank dislikes book.\nphone is old.\n\nQUESTION:\nCould bob is clever explain bob is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 882,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(eve).",
    "c": "happy(X) :- clever(X).\nhungry(X) :- happy(X).\nbrave(X) :- hungry(X).\nexcited(X) :- brave(X).\nhungry(X) :- excited(X).\nstrong(X) :- hungry(X).\nfriendly(X) :- strong(X).\nbrave(X) :- friendly(X).\nexcited(X) :- brave(X).\ntired(X) :- excited(X).\nclever(X) :- tired(X).\nhappy(X) :- clever(X).\nsad(X) :- happy(X).\nhungry(X) :- sad(X).\nfriendly(X) :- hungry(X).\ncalm(X) :- friendly(X).\nangry(X) :- calm(X).\nexcited(X) :- angry(X).\nstrong(X) :- excited(X).\ntall(X) :- strong(X).\ntall(bob).\nheavy(phone).\nsibling(bob,eve).\nowns(frank,ball).\nlikes(bob,pencil).\ndislikes(dave,car).\nowns(bob,phone).\nowns(alice,ball).\nweak(carol).\nenemy(dave,frank).\nowns(george,ball).\nenemy(bob,george).\nbored(frank).\nfriend(george,bob).\ndislikes(frank,book).\nold(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if person X is calm, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\n\nAnd the following facts:\nbob is tall.\nphone is heavy.\nbob is a sibling of eve.\nfrank owns ball.\nbob likes pencil.\ndave dislikes car.\nbob owns phone.\nalice owns ball.\ncarol is weak.\ndave is an enemy of frank.\ngeorge owns ball.\nbob is an enemy of george.\nfrank is bored.\ngeorge is a friend of bob.\nfrank dislikes book.\nphone is old.\n\nQUESTION:\nCould eve is weak explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 883,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(george).",
    "c": "friendly(X) :- hungry(X).\nclever(X) :- friendly(X).\nbored(X) :- clever(X).\nsad(X) :- bored(X).\nexcited(X) :- sad(X).\nfunny(X) :- excited(X).\nangry(X) :- funny(X).\nbored(X) :- angry(X).\nhappy(X) :- bored(X).\nweak(X) :- happy(X).\nhungry(X) :- weak(X).\ntired(X) :- hungry(X).\ntall(X) :- tired(X).\ncurious(X) :- tall(X).\ntired(X) :- curious(X).\nfunny(X) :- tired(X).\nangry(X) :- funny(X).\nfunny(X) :- angry(X).\ncurious(X) :- funny(X).\nstrong(X) :- curious(X).\nhungry(george).\nclean(ball).\nlikes(alice,car).\nred(phone).\nsmooth(car).\nsibling(bob,dave).\nfriend(frank,bob).\nenemy(george,dave).\nenemy(dave,eve).\nenemy(bob,dave).\nfriend(dave,bob).\nfriend(frank,george).\nparent(bob,alice).\nowns(bob,apple).\nlikes(frank,car).\nsunny.",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\n\nAnd the following facts:\ngeorge is hungry.\nball is clean.\nalice likes car.\nphone is red.\ncar is smooth.\nbob is a sibling of dave.\nfrank is a friend of bob.\ngeorge is an enemy of dave.\ndave is an enemy of eve.\nbob is an enemy of dave.\ndave is a friend of bob.\nfrank is a friend of george.\nbob is a parent of alice.\nbob owns apple.\nfrank likes car.\nit is sunny.\n\nQUESTION:\nIs george is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 884,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(eve).",
    "c": "friendly(X) :- hungry(X).\nclever(X) :- friendly(X).\nbored(X) :- clever(X).\nsad(X) :- bored(X).\nexcited(X) :- sad(X).\nfunny(X) :- excited(X).\nangry(X) :- funny(X).\nbored(X) :- angry(X).\nhappy(X) :- bored(X).\nweak(X) :- happy(X).\nhungry(X) :- weak(X).\ntired(X) :- hungry(X).\ntall(X) :- tired(X).\ncurious(X) :- tall(X).\ntired(X) :- curious(X).\nfunny(X) :- tired(X).\nangry(X) :- funny(X).\nfunny(X) :- angry(X).\ncurious(X) :- funny(X).\nstrong(X) :- curious(X).\nhungry(george).\nclean(ball).\nlikes(alice,car).\nred(phone).\nsmooth(car).\nsibling(bob,dave).\nfriend(frank,bob).\nenemy(george,dave).\nenemy(dave,eve).\nenemy(bob,dave).\nfriend(dave,bob).\nfriend(frank,george).\nparent(bob,alice).\nowns(bob,apple).\nlikes(frank,car).\nsunny.",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\n\nAnd the following facts:\ngeorge is hungry.\nball is clean.\nalice likes car.\nphone is red.\ncar is smooth.\nbob is a sibling of dave.\nfrank is a friend of bob.\ngeorge is an enemy of dave.\ndave is an enemy of eve.\nbob is an enemy of dave.\ndave is a friend of bob.\nfrank is a friend of george.\nbob is a parent of alice.\nbob owns apple.\nfrank likes car.\nit is sunny.\n\nQUESTION:\nIs eve is brave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 885,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(george).",
    "c": "friendly(X) :- hungry(X).\nclever(X) :- friendly(X).\nbored(X) :- clever(X).\nsad(X) :- bored(X).\nexcited(X) :- sad(X).\nfunny(X) :- excited(X).\nangry(X) :- funny(X).\nbored(X) :- angry(X).\nhappy(X) :- bored(X).\nweak(X) :- happy(X).\nhungry(X) :- weak(X).\ntired(X) :- hungry(X).\ntall(X) :- tired(X).\ncurious(X) :- tall(X).\ntired(X) :- curious(X).\nfunny(X) :- tired(X).\nangry(X) :- funny(X).\nfunny(X) :- angry(X).\ncurious(X) :- funny(X).\nstrong(X) :- curious(X).\nstrong(george).\nclean(ball).\nlikes(alice,car).\nred(phone).\nsmooth(car).\nsibling(bob,dave).\nfriend(frank,bob).\nenemy(george,dave).\nenemy(dave,eve).\nenemy(bob,dave).\nfriend(dave,bob).\nfriend(frank,george).\nparent(bob,alice).\nowns(bob,apple).\nlikes(frank,car).\nsunny.",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\n\nAnd the following facts:\ngeorge is strong.\nball is clean.\nalice likes car.\nphone is red.\ncar is smooth.\nbob is a sibling of dave.\nfrank is a friend of bob.\ngeorge is an enemy of dave.\ndave is an enemy of eve.\nbob is an enemy of dave.\ndave is a friend of bob.\nfrank is a friend of george.\nbob is a parent of alice.\nbob owns apple.\nfrank likes car.\nit is sunny.\n\nQUESTION:\nCould george is hungry explain george is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 886,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(apple).",
    "c": "friendly(X) :- hungry(X).\nclever(X) :- friendly(X).\nbored(X) :- clever(X).\nsad(X) :- bored(X).\nexcited(X) :- sad(X).\nfunny(X) :- excited(X).\nangry(X) :- funny(X).\nbored(X) :- angry(X).\nhappy(X) :- bored(X).\nweak(X) :- happy(X).\nhungry(X) :- weak(X).\ntired(X) :- hungry(X).\ntall(X) :- tired(X).\ncurious(X) :- tall(X).\ntired(X) :- curious(X).\nfunny(X) :- tired(X).\nangry(X) :- funny(X).\nfunny(X) :- angry(X).\ncurious(X) :- funny(X).\nstrong(X) :- curious(X).\nstrong(george).\nclean(ball).\nlikes(alice,car).\nred(phone).\nsmooth(car).\nsibling(bob,dave).\nfriend(frank,bob).\nenemy(george,dave).\nenemy(dave,eve).\nenemy(bob,dave).\nfriend(dave,bob).\nfriend(frank,george).\nparent(bob,alice).\nowns(bob,apple).\nlikes(frank,car).\nsunny.",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is strong.\n\nAnd the following facts:\ngeorge is strong.\nball is clean.\nalice likes car.\nphone is red.\ncar is smooth.\nbob is a sibling of dave.\nfrank is a friend of bob.\ngeorge is an enemy of dave.\ndave is an enemy of eve.\nbob is an enemy of dave.\ndave is a friend of bob.\nfrank is a friend of george.\nbob is a parent of alice.\nbob owns apple.\nfrank likes car.\nit is sunny.\n\nQUESTION:\nCould apple is old explain george is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 887,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(pencil).",
    "c": "light(X) :- big(X).\nsmall(X) :- light(X).\nsoft(X) :- small(X).\nsmooth(X) :- soft(X).\nnew(X) :- smooth(X).\nwet(X) :- new(X).\nclean(X) :- wet(X).\nheavy(X) :- clean(X).\nrough(X) :- heavy(X).\nold(X) :- rough(X).\ndirty(X) :- old(X).\nred(X) :- dirty(X).\nhard(X) :- red(X).\nwet(X) :- hard(X).\nrough(X) :- wet(X).\nsmall(X) :- rough(X).\nsmooth(X) :- small(X).\nheavy(X) :- smooth(X).\nhard(X) :- heavy(X).\ndirty(X) :- hard(X).\nbig(pencil).\nenemy(bob,carol).\nparent(carol,eve).\nlikes(alice,car).\nowns(frank,car).\nsibling(dave,george).\nlikes(eve,ball).\nsibling(carol,bob).\ndislikes(frank,pencil).\nowns(bob,pencil).\ntall(george).\nfriendly(frank).\nangry(frank).\nfriend(alice,carol).\nlikes(bob,ball).\nfriend(frank,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\n\nAnd the following facts:\npencil is big.\nbob is an enemy of carol.\ncarol is a parent of eve.\nalice likes car.\nfrank owns car.\ndave is a sibling of george.\neve likes ball.\ncarol is a sibling of bob.\nfrank dislikes pencil.\nbob owns pencil.\ngeorge is tall.\nfrank is friendly.\nfrank is angry.\nalice is a friend of carol.\nbob likes ball.\nfrank is a friend of alice.\n\nQUESTION:\nIs pencil is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 888,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(dave).",
    "c": "light(X) :- big(X).\nsmall(X) :- light(X).\nsoft(X) :- small(X).\nsmooth(X) :- soft(X).\nnew(X) :- smooth(X).\nwet(X) :- new(X).\nclean(X) :- wet(X).\nheavy(X) :- clean(X).\nrough(X) :- heavy(X).\nold(X) :- rough(X).\ndirty(X) :- old(X).\nred(X) :- dirty(X).\nhard(X) :- red(X).\nwet(X) :- hard(X).\nrough(X) :- wet(X).\nsmall(X) :- rough(X).\nsmooth(X) :- small(X).\nheavy(X) :- smooth(X).\nhard(X) :- heavy(X).\ndirty(X) :- hard(X).\nbig(pencil).\nenemy(bob,carol).\nparent(carol,eve).\nlikes(alice,car).\nowns(frank,car).\nsibling(dave,george).\nlikes(eve,ball).\nsibling(carol,bob).\ndislikes(frank,pencil).\nowns(bob,pencil).\ntall(george).\nfriendly(frank).\nangry(frank).\nfriend(alice,carol).\nlikes(bob,ball).\nfriend(frank,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\n\nAnd the following facts:\npencil is big.\nbob is an enemy of carol.\ncarol is a parent of eve.\nalice likes car.\nfrank owns car.\ndave is a sibling of george.\neve likes ball.\ncarol is a sibling of bob.\nfrank dislikes pencil.\nbob owns pencil.\ngeorge is tall.\nfrank is friendly.\nfrank is angry.\nalice is a friend of carol.\nbob likes ball.\nfrank is a friend of alice.\n\nQUESTION:\nIs dave is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 889,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(pencil).",
    "c": "light(X) :- big(X).\nsmall(X) :- light(X).\nsoft(X) :- small(X).\nsmooth(X) :- soft(X).\nnew(X) :- smooth(X).\nwet(X) :- new(X).\nclean(X) :- wet(X).\nheavy(X) :- clean(X).\nrough(X) :- heavy(X).\nold(X) :- rough(X).\ndirty(X) :- old(X).\nred(X) :- dirty(X).\nhard(X) :- red(X).\nwet(X) :- hard(X).\nrough(X) :- wet(X).\nsmall(X) :- rough(X).\nsmooth(X) :- small(X).\nheavy(X) :- smooth(X).\nhard(X) :- heavy(X).\ndirty(X) :- hard(X).\ndirty(pencil).\nenemy(bob,carol).\nparent(carol,eve).\nlikes(alice,car).\nowns(frank,car).\nsibling(dave,george).\nlikes(eve,ball).\nsibling(carol,bob).\ndislikes(frank,pencil).\nowns(bob,pencil).\ntall(george).\nfriendly(frank).\nangry(frank).\nfriend(alice,carol).\nlikes(bob,ball).\nfriend(frank,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\n\nAnd the following facts:\npencil is dirty.\nbob is an enemy of carol.\ncarol is a parent of eve.\nalice likes car.\nfrank owns car.\ndave is a sibling of george.\neve likes ball.\ncarol is a sibling of bob.\nfrank dislikes pencil.\nbob owns pencil.\ngeorge is tall.\nfrank is friendly.\nfrank is angry.\nalice is a friend of carol.\nbob likes ball.\nfrank is a friend of alice.\n\nQUESTION:\nCould pencil is big explain pencil is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 890,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(eve).",
    "c": "light(X) :- big(X).\nsmall(X) :- light(X).\nsoft(X) :- small(X).\nsmooth(X) :- soft(X).\nnew(X) :- smooth(X).\nwet(X) :- new(X).\nclean(X) :- wet(X).\nheavy(X) :- clean(X).\nrough(X) :- heavy(X).\nold(X) :- rough(X).\ndirty(X) :- old(X).\nred(X) :- dirty(X).\nhard(X) :- red(X).\nwet(X) :- hard(X).\nrough(X) :- wet(X).\nsmall(X) :- rough(X).\nsmooth(X) :- small(X).\nheavy(X) :- smooth(X).\nhard(X) :- heavy(X).\ndirty(X) :- hard(X).\ndirty(pencil).\nenemy(bob,carol).\nparent(carol,eve).\nlikes(alice,car).\nowns(frank,car).\nsibling(dave,george).\nlikes(eve,ball).\nsibling(carol,bob).\ndislikes(frank,pencil).\nowns(bob,pencil).\ntall(george).\nfriendly(frank).\nangry(frank).\nfriend(alice,carol).\nlikes(bob,ball).\nfriend(frank,alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\n\nAnd the following facts:\npencil is dirty.\nbob is an enemy of carol.\ncarol is a parent of eve.\nalice likes car.\nfrank owns car.\ndave is a sibling of george.\neve likes ball.\ncarol is a sibling of bob.\nfrank dislikes pencil.\nbob owns pencil.\ngeorge is tall.\nfrank is friendly.\nfrank is angry.\nalice is a friend of carol.\nbob likes ball.\nfrank is a friend of alice.\n\nQUESTION:\nCould eve is tired explain pencil is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 891,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(car).",
    "c": "clean(X) :- red(X).\nold(X) :- clean(X).\nrough(X) :- old(X).\nnew(X) :- rough(X).\ndirty(X) :- new(X).\nsmall(X) :- dirty(X).\nlight(X) :- small(X).\nwet(X) :- light(X).\nheavy(X) :- wet(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nhard(X) :- soft(X).\nbig(X) :- hard(X).\nhard(X) :- big(X).\nsmall(X) :- hard(X).\ndirty(X) :- small(X).\nlight(X) :- dirty(X).\nlight(X) :- light(X).\ndirty(X) :- light(X).\ndirty(X) :- dirty(X).\nred(car).\nsibling(george,bob).\nparent(alice,george).\nenemy(george,eve).\nbrave(george).\ndislikes(carol,car).\ncurious(george).\ndislikes(alice,pencil).\nhungry(alice).\nbrave(eve).\nfriend(frank,bob).\nsibling(george,eve).\nclever(bob).\nsibling(carol,george).\nowns(george,phone).\nfriend(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is dirty.\n\nAnd the following facts:\ncar is red.\ngeorge is a sibling of bob.\nalice is a parent of george.\ngeorge is an enemy of eve.\ngeorge is brave.\ncarol dislikes car.\ngeorge is curious.\nalice dislikes pencil.\nalice is hungry.\neve is brave.\nfrank is a friend of bob.\ngeorge is a sibling of eve.\nbob is clever.\ncarol is a sibling of george.\ngeorge owns phone.\ncarol is a friend of george.\n\nQUESTION:\nIs car is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 892,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(bob).",
    "c": "clean(X) :- red(X).\nold(X) :- clean(X).\nrough(X) :- old(X).\nnew(X) :- rough(X).\ndirty(X) :- new(X).\nsmall(X) :- dirty(X).\nlight(X) :- small(X).\nwet(X) :- light(X).\nheavy(X) :- wet(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nhard(X) :- soft(X).\nbig(X) :- hard(X).\nhard(X) :- big(X).\nsmall(X) :- hard(X).\ndirty(X) :- small(X).\nlight(X) :- dirty(X).\nlight(X) :- light(X).\ndirty(X) :- light(X).\ndirty(X) :- dirty(X).\nred(car).\nsibling(george,bob).\nparent(alice,george).\nenemy(george,eve).\nbrave(george).\ndislikes(carol,car).\ncurious(george).\ndislikes(alice,pencil).\nhungry(alice).\nbrave(eve).\nfriend(frank,bob).\nsibling(george,eve).\nclever(bob).\nsibling(carol,george).\nowns(george,phone).\nfriend(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is dirty.\n\nAnd the following facts:\ncar is red.\ngeorge is a sibling of bob.\nalice is a parent of george.\ngeorge is an enemy of eve.\ngeorge is brave.\ncarol dislikes car.\ngeorge is curious.\nalice dislikes pencil.\nalice is hungry.\neve is brave.\nfrank is a friend of bob.\ngeorge is a sibling of eve.\nbob is clever.\ncarol is a sibling of george.\ngeorge owns phone.\ncarol is a friend of george.\n\nQUESTION:\nIs bob is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 893,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "clean(X) :- red(X).\nold(X) :- clean(X).\nrough(X) :- old(X).\nnew(X) :- rough(X).\ndirty(X) :- new(X).\nsmall(X) :- dirty(X).\nlight(X) :- small(X).\nwet(X) :- light(X).\nheavy(X) :- wet(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nhard(X) :- soft(X).\nbig(X) :- hard(X).\nhard(X) :- big(X).\nsmall(X) :- hard(X).\ndirty(X) :- small(X).\nlight(X) :- dirty(X).\nlight(X) :- light(X).\ndirty(X) :- light(X).\ndirty(X) :- dirty(X).\ndirty(car).\nsibling(george,bob).\nparent(alice,george).\nenemy(george,eve).\nbrave(george).\ndislikes(carol,car).\ncurious(george).\ndislikes(alice,pencil).\nhungry(alice).\nbrave(eve).\nfriend(frank,bob).\nsibling(george,eve).\nclever(bob).\nsibling(carol,george).\nowns(george,phone).\nfriend(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is dirty.\n\nAnd the following facts:\ncar is dirty.\ngeorge is a sibling of bob.\nalice is a parent of george.\ngeorge is an enemy of eve.\ngeorge is brave.\ncarol dislikes car.\ngeorge is curious.\nalice dislikes pencil.\nalice is hungry.\neve is brave.\nfrank is a friend of bob.\ngeorge is a sibling of eve.\nbob is clever.\ncarol is a sibling of george.\ngeorge owns phone.\ncarol is a friend of george.\n\nQUESTION:\nCould car is red explain car is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 894,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(eve).",
    "c": "clean(X) :- red(X).\nold(X) :- clean(X).\nrough(X) :- old(X).\nnew(X) :- rough(X).\ndirty(X) :- new(X).\nsmall(X) :- dirty(X).\nlight(X) :- small(X).\nwet(X) :- light(X).\nheavy(X) :- wet(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nhard(X) :- soft(X).\nbig(X) :- hard(X).\nhard(X) :- big(X).\nsmall(X) :- hard(X).\ndirty(X) :- small(X).\nlight(X) :- dirty(X).\nlight(X) :- light(X).\ndirty(X) :- light(X).\ndirty(X) :- dirty(X).\ndirty(car).\nsibling(george,bob).\nparent(alice,george).\nenemy(george,eve).\nbrave(george).\ndislikes(carol,car).\ncurious(george).\ndislikes(alice,pencil).\nhungry(alice).\nbrave(eve).\nfriend(frank,bob).\nsibling(george,eve).\nclever(bob).\nsibling(carol,george).\nowns(george,phone).\nfriend(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is small, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is dirty.\n\nAnd the following facts:\ncar is dirty.\ngeorge is a sibling of bob.\nalice is a parent of george.\ngeorge is an enemy of eve.\ngeorge is brave.\ncarol dislikes car.\ngeorge is curious.\nalice dislikes pencil.\nalice is hungry.\neve is brave.\nfrank is a friend of bob.\ngeorge is a sibling of eve.\nbob is clever.\ncarol is a sibling of george.\ngeorge owns phone.\ncarol is a friend of george.\n\nQUESTION:\nCould eve is hungry explain car is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 895,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(car).",
    "c": "heavy(X) :- red(X).\nbored(X) :- bored(X), likes(X,B), hard(B).\nbusy(Y) :- bored(Y), weak(A).\nrough(Y) :- new(Y), likes(W,Y), clever(W).\nhappy(X) :- weak(X), parent(X,A), funny(A).\nsad(Z) :- friendly(Z), parent(Z,B), clever(B).\nclean(X) :- light(X).\nstrong(Z) :- tall(Z), friend(Z,V), excited(V).\nfriendly(X) :- friendly(X), parent(X,V), curious(V).\nhungry(X) :- strong(X).\ndislikes(X,Y) :- calm(X), light(Y), owns(X,Y).\nenemy(X,Y) :- busy(X), weak(Y).\ncalm(X) :- happy(X), busy(X).\nsad(X) :- angry(X).\ndislikes(X,Y) :- busy(X), light(Y).\nhappy(X) :- hungry(X).\nfriend(X,Y) :- weak(X), busy(Y), parent(X,Y).\nold(X) :- wet(X).\nowns(X,Y) :- calm(X), soft(Y).\nsad(X) :- strong(X), calm(X).\nred(car).\nowns(bob,apple).\nlikes(dave,car).\ndirty(pencil).\nhard(pencil).\nold(apple).\nenemy(eve,bob).\nlikes(eve,apple).\nclean(book).\nlikes(alice,apple).\nbored(frank).\nnew(ball).\nstrong(dave).\ndislikes(dave,car).\ndislikes(dave,pencil).\nfriend(alice,carol).\nlikes(frank,book).\nenemy(eve,carol).\nlikes(george,car).\nparent(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if there exists B such that person X is bored and person X likes object B and object B is hard, then person X is bored.\nFor all Y, if there exists A such that person Y is bored and person A is weak, then person Y is busy.\nFor all Y, if there exists W such that object Y is new and person W likes object Y and person W is clever, then object Y is rough.\nFor all X, if there exists A such that person X is weak and person X is a parent of person A and person A is funny, then person X is happy.\nFor all Z, if there exists B such that person Z is friendly and person Z is a parent of person B and person B is clever, then person Z is sad.\nFor all X, if object X is light, then object X is clean.\nFor all Z, if there exists V such that person Z is tall and person Z is a friend of person V and person V is excited, then person Z is strong.\nFor all X, if there exists V such that person X is friendly and person X is a parent of person V and person V is curious, then person X is friendly.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, Y, if person X is calm and object Y is light and person X owns object Y, then person X dislikes object Y.\nFor all X, Y, if person X is busy and person Y is weak, then person X is an enemy of person Y.\nFor all X, if person X is happy and person X is busy, then person X is calm.\nFor all X, if person X is angry, then person X is sad.\nFor all X, Y, if person X is busy and object Y is light, then person X dislikes object Y.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, Y, if person X is weak and person Y is busy and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if object X is wet, then object X is old.\nFor all X, Y, if person X is calm and object Y is soft, then person X owns object Y.\nFor all X, if person X is strong and person X is calm, then person X is sad.\n\nAnd the following facts:\ncar is red.\nbob owns apple.\ndave likes car.\npencil is dirty.\npencil is hard.\napple is old.\neve is an enemy of bob.\neve likes apple.\nbook is clean.\nalice likes apple.\nfrank is bored.\nball is new.\ndave is strong.\ndave dislikes car.\ndave dislikes pencil.\nalice is a friend of carol.\nfrank likes book.\neve is an enemy of carol.\ngeorge likes car.\ngeorge is a parent of frank.\n\nQUESTION:\nIs car is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 896,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(dave).",
    "c": "heavy(X) :- red(X).\nbored(X) :- bored(X), likes(X,B), hard(B).\nbusy(Y) :- bored(Y), weak(A).\nrough(Y) :- new(Y), likes(W,Y), clever(W).\nhappy(X) :- weak(X), parent(X,A), funny(A).\nsad(Z) :- friendly(Z), parent(Z,B), clever(B).\nclean(X) :- light(X).\nstrong(Z) :- tall(Z), friend(Z,V), excited(V).\nfriendly(X) :- friendly(X), parent(X,V), curious(V).\nhungry(X) :- strong(X).\ndislikes(X,Y) :- calm(X), light(Y), owns(X,Y).\nenemy(X,Y) :- busy(X), weak(Y).\ncalm(X) :- happy(X), busy(X).\nsad(X) :- angry(X).\ndislikes(X,Y) :- busy(X), light(Y).\nhappy(X) :- hungry(X).\nfriend(X,Y) :- weak(X), busy(Y), parent(X,Y).\nold(X) :- wet(X).\nowns(X,Y) :- calm(X), soft(Y).\nsad(X) :- strong(X), calm(X).\nred(car).\nowns(bob,apple).\nlikes(dave,car).\ndirty(pencil).\nhard(pencil).\nold(apple).\nenemy(eve,bob).\nlikes(eve,apple).\nclean(book).\nlikes(alice,apple).\nbored(frank).\nnew(ball).\nstrong(dave).\ndislikes(dave,car).\ndislikes(dave,pencil).\nfriend(alice,carol).\nlikes(frank,book).\nenemy(eve,carol).\nlikes(george,car).\nparent(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if there exists B such that person X is bored and person X likes object B and object B is hard, then person X is bored.\nFor all Y, if there exists A such that person Y is bored and person A is weak, then person Y is busy.\nFor all Y, if there exists W such that object Y is new and person W likes object Y and person W is clever, then object Y is rough.\nFor all X, if there exists A such that person X is weak and person X is a parent of person A and person A is funny, then person X is happy.\nFor all Z, if there exists B such that person Z is friendly and person Z is a parent of person B and person B is clever, then person Z is sad.\nFor all X, if object X is light, then object X is clean.\nFor all Z, if there exists V such that person Z is tall and person Z is a friend of person V and person V is excited, then person Z is strong.\nFor all X, if there exists V such that person X is friendly and person X is a parent of person V and person V is curious, then person X is friendly.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, Y, if person X is calm and object Y is light and person X owns object Y, then person X dislikes object Y.\nFor all X, Y, if person X is busy and person Y is weak, then person X is an enemy of person Y.\nFor all X, if person X is happy and person X is busy, then person X is calm.\nFor all X, if person X is angry, then person X is sad.\nFor all X, Y, if person X is busy and object Y is light, then person X dislikes object Y.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, Y, if person X is weak and person Y is busy and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if object X is wet, then object X is old.\nFor all X, Y, if person X is calm and object Y is soft, then person X owns object Y.\nFor all X, if person X is strong and person X is calm, then person X is sad.\n\nAnd the following facts:\ncar is red.\nbob owns apple.\ndave likes car.\npencil is dirty.\npencil is hard.\napple is old.\neve is an enemy of bob.\neve likes apple.\nbook is clean.\nalice likes apple.\nfrank is bored.\nball is new.\ndave is strong.\ndave dislikes car.\ndave dislikes pencil.\nalice is a friend of carol.\nfrank likes book.\neve is an enemy of carol.\ngeorge likes car.\ngeorge is a parent of frank.\n\nQUESTION:\nIs dave is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 897,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "heavy(X) :- red(X).\nbored(X) :- bored(X), likes(X,B), hard(B).\nbusy(Y) :- bored(Y), weak(A).\nrough(Y) :- new(Y), likes(W,Y), clever(W).\nhappy(X) :- weak(X), parent(X,A), funny(A).\nsad(Z) :- friendly(Z), parent(Z,B), clever(B).\nclean(X) :- light(X).\nstrong(Z) :- tall(Z), friend(Z,V), excited(V).\nfriendly(X) :- friendly(X), parent(X,V), curious(V).\nhungry(X) :- strong(X).\ndislikes(X,Y) :- calm(X), light(Y), owns(X,Y).\nenemy(X,Y) :- busy(X), weak(Y).\ncalm(X) :- happy(X), busy(X).\nsad(X) :- angry(X).\ndislikes(X,Y) :- busy(X), light(Y).\nhappy(X) :- hungry(X).\nfriend(X,Y) :- weak(X), busy(Y), parent(X,Y).\nold(X) :- wet(X).\nowns(X,Y) :- calm(X), soft(Y).\nsad(X) :- strong(X), calm(X).\nheavy(car).\nowns(bob,apple).\nlikes(dave,car).\ndirty(pencil).\nhard(pencil).\nold(apple).\nenemy(eve,bob).\nlikes(eve,apple).\nclean(book).\nlikes(alice,apple).\nbored(frank).\nnew(ball).\nstrong(dave).\ndislikes(dave,car).\ndislikes(dave,pencil).\nfriend(alice,carol).\nlikes(frank,book).\nenemy(eve,carol).\nlikes(george,car).\nparent(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if there exists B such that person X is bored and person X likes object B and object B is hard, then person X is bored.\nFor all Y, if there exists A such that person Y is bored and person A is weak, then person Y is busy.\nFor all Y, if there exists W such that object Y is new and person W likes object Y and person W is clever, then object Y is rough.\nFor all X, if there exists A such that person X is weak and person X is a parent of person A and person A is funny, then person X is happy.\nFor all Z, if there exists B such that person Z is friendly and person Z is a parent of person B and person B is clever, then person Z is sad.\nFor all X, if object X is light, then object X is clean.\nFor all Z, if there exists V such that person Z is tall and person Z is a friend of person V and person V is excited, then person Z is strong.\nFor all X, if there exists V such that person X is friendly and person X is a parent of person V and person V is curious, then person X is friendly.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, Y, if person X is calm and object Y is light and person X owns object Y, then person X dislikes object Y.\nFor all X, Y, if person X is busy and person Y is weak, then person X is an enemy of person Y.\nFor all X, if person X is happy and person X is busy, then person X is calm.\nFor all X, if person X is angry, then person X is sad.\nFor all X, Y, if person X is busy and object Y is light, then person X dislikes object Y.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, Y, if person X is weak and person Y is busy and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if object X is wet, then object X is old.\nFor all X, Y, if person X is calm and object Y is soft, then person X owns object Y.\nFor all X, if person X is strong and person X is calm, then person X is sad.\n\nAnd the following facts:\ncar is heavy.\nbob owns apple.\ndave likes car.\npencil is dirty.\npencil is hard.\napple is old.\neve is an enemy of bob.\neve likes apple.\nbook is clean.\nalice likes apple.\nfrank is bored.\nball is new.\ndave is strong.\ndave dislikes car.\ndave dislikes pencil.\nalice is a friend of carol.\nfrank likes book.\neve is an enemy of carol.\ngeorge likes car.\ngeorge is a parent of frank.\n\nQUESTION:\nCould car is red explain car is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 898,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(eve).",
    "c": "heavy(X) :- red(X).\nbored(X) :- bored(X), likes(X,B), hard(B).\nbusy(Y) :- bored(Y), weak(A).\nrough(Y) :- new(Y), likes(W,Y), clever(W).\nhappy(X) :- weak(X), parent(X,A), funny(A).\nsad(Z) :- friendly(Z), parent(Z,B), clever(B).\nclean(X) :- light(X).\nstrong(Z) :- tall(Z), friend(Z,V), excited(V).\nfriendly(X) :- friendly(X), parent(X,V), curious(V).\nhungry(X) :- strong(X).\ndislikes(X,Y) :- calm(X), light(Y), owns(X,Y).\nenemy(X,Y) :- busy(X), weak(Y).\ncalm(X) :- happy(X), busy(X).\nsad(X) :- angry(X).\ndislikes(X,Y) :- busy(X), light(Y).\nhappy(X) :- hungry(X).\nfriend(X,Y) :- weak(X), busy(Y), parent(X,Y).\nold(X) :- wet(X).\nowns(X,Y) :- calm(X), soft(Y).\nsad(X) :- strong(X), calm(X).\nheavy(car).\nowns(bob,apple).\nlikes(dave,car).\ndirty(pencil).\nhard(pencil).\nold(apple).\nenemy(eve,bob).\nlikes(eve,apple).\nclean(book).\nlikes(alice,apple).\nbored(frank).\nnew(ball).\nstrong(dave).\ndislikes(dave,car).\ndislikes(dave,pencil).\nfriend(alice,carol).\nlikes(frank,book).\nenemy(eve,carol).\nlikes(george,car).\nparent(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if there exists B such that person X is bored and person X likes object B and object B is hard, then person X is bored.\nFor all Y, if there exists A such that person Y is bored and person A is weak, then person Y is busy.\nFor all Y, if there exists W such that object Y is new and person W likes object Y and person W is clever, then object Y is rough.\nFor all X, if there exists A such that person X is weak and person X is a parent of person A and person A is funny, then person X is happy.\nFor all Z, if there exists B such that person Z is friendly and person Z is a parent of person B and person B is clever, then person Z is sad.\nFor all X, if object X is light, then object X is clean.\nFor all Z, if there exists V such that person Z is tall and person Z is a friend of person V and person V is excited, then person Z is strong.\nFor all X, if there exists V such that person X is friendly and person X is a parent of person V and person V is curious, then person X is friendly.\nFor all X, if person X is strong, then person X is hungry.\nFor all X, Y, if person X is calm and object Y is light and person X owns object Y, then person X dislikes object Y.\nFor all X, Y, if person X is busy and person Y is weak, then person X is an enemy of person Y.\nFor all X, if person X is happy and person X is busy, then person X is calm.\nFor all X, if person X is angry, then person X is sad.\nFor all X, Y, if person X is busy and object Y is light, then person X dislikes object Y.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, Y, if person X is weak and person Y is busy and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if object X is wet, then object X is old.\nFor all X, Y, if person X is calm and object Y is soft, then person X owns object Y.\nFor all X, if person X is strong and person X is calm, then person X is sad.\n\nAnd the following facts:\ncar is heavy.\nbob owns apple.\ndave likes car.\npencil is dirty.\npencil is hard.\napple is old.\neve is an enemy of bob.\neve likes apple.\nbook is clean.\nalice likes apple.\nfrank is bored.\nball is new.\ndave is strong.\ndave dislikes car.\ndave dislikes pencil.\nalice is a friend of carol.\nfrank likes book.\neve is an enemy of carol.\ngeorge likes car.\ngeorge is a parent of frank.\n\nQUESTION:\nCould eve is angry explain car is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 899,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(frank).",
    "c": "curious(X) :- busy(X).\nfriend(Z,Y) :- bored(Y), bored(Z), tired(A).\nrough(Z) :- small(Z), big(F).\nlight(X) :- dirty(X).\nangry(X) :- weak(X), parent(X,A), tired(A).\nfriendly(Y) :- excited(Y), likes(Y,U), big(U).\nclean(Z) :- rough(Z), owns(W,Z), clever(W).\nclever(Z) :- hungry(Z), owns(Z,A), new(A).\nclever(Y) :- funny(Y).\nold(X) :- old(X).\nowns(Z,X) :- clever(Z), smooth(X).\nold(Y) :- new(Y), dislikes(V,Y), angry(V).\nenemy(X,Y) :- tired(X), calm(Y).\nexcited(X) :- clever(X), weak(X).\nparent(X,Y) :- brave(X), happy(Y).\ncalm(X) :- weak(X), bored(X).\nrough(X) :- hard(X), smooth(X).\nfunny(X) :- tall(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- tall(X), friendly(Y), friend(X,Y).\nbusy(frank).\nfriend(dave,carol).\ndislikes(carol,phone).\nparent(dave,eve).\nnew(pencil).\nhungry(dave).\nfriend(frank,eve).\nlikes(alice,pencil).\nsoft(apple).\nstrong(frank).\nenemy(eve,frank).\nhappy(bob).\nhungry(carol).\ntall(eve).\nsibling(dave,eve).\nparent(bob,alice).\ndislikes(carol,apple).\nowns(dave,pencil).\ntired(bob).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is curious.\nFor all Y, Z, if there exists A such that person Y is bored and person Z is bored and person A is tired, then person Z is a friend of person Y.\nFor all Z, if there exists F such that object Z is small and object F is big, then object Z is rough.\nFor all X, if object X is dirty, then object X is light.\nFor all X, if there exists A such that person X is weak and person X is a parent of person A and person A is tired, then person X is angry.\nFor all Y, if there exists U such that person Y is excited and person Y likes object U and object U is big, then person Y is friendly.\nFor all Z, if there exists W such that object Z is rough and person W owns object Z and person W is clever, then object Z is clean.\nFor all Z, if there exists A such that person Z is hungry and person Z owns object A and object A is new, then person Z is clever.\nFor all Y, if person Y is funny, then person Y is clever.\nFor all X, if object X is old, then object X is old.\nFor all X, Z, if person Z is clever and object X is smooth, then person Z owns object X.\nFor all Y, if there exists V such that object Y is new and person V dislikes object Y and person V is angry, then object Y is old.\nFor all X, Y, if person X is tired and person Y is calm, then person X is an enemy of person Y.\nFor all X, if person X is clever and person X is weak, then person X is excited.\nFor all X, Y, if person X is brave and person Y is happy, then person X is a parent of person Y.\nFor all X, if person X is weak and person X is bored, then person X is calm.\nFor all X, if object X is hard and object X is smooth, then object X is rough.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is tall and person Y is friendly and person X is a friend of person Y, then person X is a sibling of person Y.\n\nAnd the following facts:\nfrank is busy.\ndave is a friend of carol.\ncarol dislikes phone.\ndave is a parent of eve.\npencil is new.\ndave is hungry.\nfrank is a friend of eve.\nalice likes pencil.\napple is soft.\nfrank is strong.\neve is an enemy of frank.\nbob is happy.\ncarol is hungry.\neve is tall.\ndave is a sibling of eve.\nbob is a parent of alice.\ncarol dislikes apple.\ndave owns pencil.\nbob is tired.\napple is old.\n\nQUESTION:\nIs frank is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 900,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(apple).",
    "c": "curious(X) :- busy(X).\nfriend(Z,Y) :- bored(Y), bored(Z), tired(A).\nrough(Z) :- small(Z), big(F).\nlight(X) :- dirty(X).\nangry(X) :- weak(X), parent(X,A), tired(A).\nfriendly(Y) :- excited(Y), likes(Y,U), big(U).\nclean(Z) :- rough(Z), owns(W,Z), clever(W).\nclever(Z) :- hungry(Z), owns(Z,A), new(A).\nclever(Y) :- funny(Y).\nold(X) :- old(X).\nowns(Z,X) :- clever(Z), smooth(X).\nold(Y) :- new(Y), dislikes(V,Y), angry(V).\nenemy(X,Y) :- tired(X), calm(Y).\nexcited(X) :- clever(X), weak(X).\nparent(X,Y) :- brave(X), happy(Y).\ncalm(X) :- weak(X), bored(X).\nrough(X) :- hard(X), smooth(X).\nfunny(X) :- tall(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- tall(X), friendly(Y), friend(X,Y).\nbusy(frank).\nfriend(dave,carol).\ndislikes(carol,phone).\nparent(dave,eve).\nnew(pencil).\nhungry(dave).\nfriend(frank,eve).\nlikes(alice,pencil).\nsoft(apple).\nstrong(frank).\nenemy(eve,frank).\nhappy(bob).\nhungry(carol).\ntall(eve).\nsibling(dave,eve).\nparent(bob,alice).\ndislikes(carol,apple).\nowns(dave,pencil).\ntired(bob).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is curious.\nFor all Y, Z, if there exists A such that person Y is bored and person Z is bored and person A is tired, then person Z is a friend of person Y.\nFor all Z, if there exists F such that object Z is small and object F is big, then object Z is rough.\nFor all X, if object X is dirty, then object X is light.\nFor all X, if there exists A such that person X is weak and person X is a parent of person A and person A is tired, then person X is angry.\nFor all Y, if there exists U such that person Y is excited and person Y likes object U and object U is big, then person Y is friendly.\nFor all Z, if there exists W such that object Z is rough and person W owns object Z and person W is clever, then object Z is clean.\nFor all Z, if there exists A such that person Z is hungry and person Z owns object A and object A is new, then person Z is clever.\nFor all Y, if person Y is funny, then person Y is clever.\nFor all X, if object X is old, then object X is old.\nFor all X, Z, if person Z is clever and object X is smooth, then person Z owns object X.\nFor all Y, if there exists V such that object Y is new and person V dislikes object Y and person V is angry, then object Y is old.\nFor all X, Y, if person X is tired and person Y is calm, then person X is an enemy of person Y.\nFor all X, if person X is clever and person X is weak, then person X is excited.\nFor all X, Y, if person X is brave and person Y is happy, then person X is a parent of person Y.\nFor all X, if person X is weak and person X is bored, then person X is calm.\nFor all X, if object X is hard and object X is smooth, then object X is rough.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is tall and person Y is friendly and person X is a friend of person Y, then person X is a sibling of person Y.\n\nAnd the following facts:\nfrank is busy.\ndave is a friend of carol.\ncarol dislikes phone.\ndave is a parent of eve.\npencil is new.\ndave is hungry.\nfrank is a friend of eve.\nalice likes pencil.\napple is soft.\nfrank is strong.\neve is an enemy of frank.\nbob is happy.\ncarol is hungry.\neve is tall.\ndave is a sibling of eve.\nbob is a parent of alice.\ncarol dislikes apple.\ndave owns pencil.\nbob is tired.\napple is old.\n\nQUESTION:\nIs apple is heavy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 901,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(frank).",
    "c": "curious(X) :- busy(X).\nfriend(Z,Y) :- bored(Y), bored(Z), tired(A).\nrough(Z) :- small(Z), big(F).\nlight(X) :- dirty(X).\nangry(X) :- weak(X), parent(X,A), tired(A).\nfriendly(Y) :- excited(Y), likes(Y,U), big(U).\nclean(Z) :- rough(Z), owns(W,Z), clever(W).\nclever(Z) :- hungry(Z), owns(Z,A), new(A).\nclever(Y) :- funny(Y).\nold(X) :- old(X).\nowns(Z,X) :- clever(Z), smooth(X).\nold(Y) :- new(Y), dislikes(V,Y), angry(V).\nenemy(X,Y) :- tired(X), calm(Y).\nexcited(X) :- clever(X), weak(X).\nparent(X,Y) :- brave(X), happy(Y).\ncalm(X) :- weak(X), bored(X).\nrough(X) :- hard(X), smooth(X).\nfunny(X) :- tall(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- tall(X), friendly(Y), friend(X,Y).\ncurious(frank).\nfriend(dave,carol).\ndislikes(carol,phone).\nparent(dave,eve).\nnew(pencil).\nhungry(dave).\nfriend(frank,eve).\nlikes(alice,pencil).\nsoft(apple).\nstrong(frank).\nenemy(eve,frank).\nhappy(bob).\nhungry(carol).\ntall(eve).\nsibling(dave,eve).\nparent(bob,alice).\ndislikes(carol,apple).\nowns(dave,pencil).\ntired(bob).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is curious.\nFor all Y, Z, if there exists A such that person Y is bored and person Z is bored and person A is tired, then person Z is a friend of person Y.\nFor all Z, if there exists F such that object Z is small and object F is big, then object Z is rough.\nFor all X, if object X is dirty, then object X is light.\nFor all X, if there exists A such that person X is weak and person X is a parent of person A and person A is tired, then person X is angry.\nFor all Y, if there exists U such that person Y is excited and person Y likes object U and object U is big, then person Y is friendly.\nFor all Z, if there exists W such that object Z is rough and person W owns object Z and person W is clever, then object Z is clean.\nFor all Z, if there exists A such that person Z is hungry and person Z owns object A and object A is new, then person Z is clever.\nFor all Y, if person Y is funny, then person Y is clever.\nFor all X, if object X is old, then object X is old.\nFor all X, Z, if person Z is clever and object X is smooth, then person Z owns object X.\nFor all Y, if there exists V such that object Y is new and person V dislikes object Y and person V is angry, then object Y is old.\nFor all X, Y, if person X is tired and person Y is calm, then person X is an enemy of person Y.\nFor all X, if person X is clever and person X is weak, then person X is excited.\nFor all X, Y, if person X is brave and person Y is happy, then person X is a parent of person Y.\nFor all X, if person X is weak and person X is bored, then person X is calm.\nFor all X, if object X is hard and object X is smooth, then object X is rough.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is tall and person Y is friendly and person X is a friend of person Y, then person X is a sibling of person Y.\n\nAnd the following facts:\nfrank is curious.\ndave is a friend of carol.\ncarol dislikes phone.\ndave is a parent of eve.\npencil is new.\ndave is hungry.\nfrank is a friend of eve.\nalice likes pencil.\napple is soft.\nfrank is strong.\neve is an enemy of frank.\nbob is happy.\ncarol is hungry.\neve is tall.\ndave is a sibling of eve.\nbob is a parent of alice.\ncarol dislikes apple.\ndave owns pencil.\nbob is tired.\napple is old.\n\nQUESTION:\nCould frank is busy explain frank is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 902,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "busy(bob).",
    "c": "curious(X) :- busy(X).\nfriend(Z,Y) :- bored(Y), bored(Z), tired(A).\nrough(Z) :- small(Z), big(F).\nlight(X) :- dirty(X).\nangry(X) :- weak(X), parent(X,A), tired(A).\nfriendly(Y) :- excited(Y), likes(Y,U), big(U).\nclean(Z) :- rough(Z), owns(W,Z), clever(W).\nclever(Z) :- hungry(Z), owns(Z,A), new(A).\nclever(Y) :- funny(Y).\nold(X) :- old(X).\nowns(Z,X) :- clever(Z), smooth(X).\nold(Y) :- new(Y), dislikes(V,Y), angry(V).\nenemy(X,Y) :- tired(X), calm(Y).\nexcited(X) :- clever(X), weak(X).\nparent(X,Y) :- brave(X), happy(Y).\ncalm(X) :- weak(X), bored(X).\nrough(X) :- hard(X), smooth(X).\nfunny(X) :- tall(X).\nhappy(X) :- friendly(X).\nsibling(X,Y) :- tall(X), friendly(Y), friend(X,Y).\ncurious(frank).\nfriend(dave,carol).\ndislikes(carol,phone).\nparent(dave,eve).\nnew(pencil).\nhungry(dave).\nfriend(frank,eve).\nlikes(alice,pencil).\nsoft(apple).\nstrong(frank).\nenemy(eve,frank).\nhappy(bob).\nhungry(carol).\ntall(eve).\nsibling(dave,eve).\nparent(bob,alice).\ndislikes(carol,apple).\nowns(dave,pencil).\ntired(bob).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is curious.\nFor all Y, Z, if there exists A such that person Y is bored and person Z is bored and person A is tired, then person Z is a friend of person Y.\nFor all Z, if there exists F such that object Z is small and object F is big, then object Z is rough.\nFor all X, if object X is dirty, then object X is light.\nFor all X, if there exists A such that person X is weak and person X is a parent of person A and person A is tired, then person X is angry.\nFor all Y, if there exists U such that person Y is excited and person Y likes object U and object U is big, then person Y is friendly.\nFor all Z, if there exists W such that object Z is rough and person W owns object Z and person W is clever, then object Z is clean.\nFor all Z, if there exists A such that person Z is hungry and person Z owns object A and object A is new, then person Z is clever.\nFor all Y, if person Y is funny, then person Y is clever.\nFor all X, if object X is old, then object X is old.\nFor all X, Z, if person Z is clever and object X is smooth, then person Z owns object X.\nFor all Y, if there exists V such that object Y is new and person V dislikes object Y and person V is angry, then object Y is old.\nFor all X, Y, if person X is tired and person Y is calm, then person X is an enemy of person Y.\nFor all X, if person X is clever and person X is weak, then person X is excited.\nFor all X, Y, if person X is brave and person Y is happy, then person X is a parent of person Y.\nFor all X, if person X is weak and person X is bored, then person X is calm.\nFor all X, if object X is hard and object X is smooth, then object X is rough.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, Y, if person X is tall and person Y is friendly and person X is a friend of person Y, then person X is a sibling of person Y.\n\nAnd the following facts:\nfrank is curious.\ndave is a friend of carol.\ncarol dislikes phone.\ndave is a parent of eve.\npencil is new.\ndave is hungry.\nfrank is a friend of eve.\nalice likes pencil.\napple is soft.\nfrank is strong.\neve is an enemy of frank.\nbob is happy.\ncarol is hungry.\neve is tall.\ndave is a sibling of eve.\nbob is a parent of alice.\ncarol dislikes apple.\ndave owns pencil.\nbob is tired.\napple is old.\n\nQUESTION:\nCould bob is busy explain frank is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 903,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(eve).",
    "c": "angry(X) :- happy(X).\nstrong(Y) :- tall(Y), enemy(Y,W), hungry(W).\nfriendly(X) :- excited(X), dislikes(X,V), hard(V).\nsmooth(Y) :- small(Y).\ntall(X) :- strong(X), likes(X,B), hard(B).\nsoft(Z) :- hard(Z).\nheavy(X) :- heavy(X), likes(U,X), clever(U).\nbrave(X) :- brave(X), friend(X,W), clever(W).\nweak(X) :- funny(X), owns(X,W), rough(W).\nbored(Y) :- bored(Y), likes(Y,A), clean(A).\ncurious(X) :- tall(X), funny(X).\nexcited(X) :- curious(X).\nbig(X) :- clean(X).\nsad(X) :- weak(X).\nstrong(X) :- tall(X).\nred(X) :- wet(X).\ncalm(X) :- strong(X).\nexcited(X) :- hungry(X), sad(X).\nheavy(X) :- wet(X), wet(X).\nfunny(X) :- excited(X).\nhappy(eve).\nsibling(dave,bob).\nheavy(book).\nsibling(bob,eve).\nfriend(alice,frank).\nfriend(frank,bob).\ndislikes(frank,pencil).\nowns(frank,car).\nwet(book).\nweak(carol).\nparent(bob,george).\nenemy(dave,frank).\nparent(alice,frank).\ntired(george).\nweak(george).\nenemy(eve,frank).\ndislikes(alice,pencil).\nhard(book).\nenemy(frank,bob).\nbrave(bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is angry.\nFor all Y, if there exists W such that person Y is tall and person Y is an enemy of person W and person W is hungry, then person Y is strong.\nFor all X, if there exists V such that person X is excited and person X dislikes object V and object V is hard, then person X is friendly.\nFor all Y, if object Y is small, then object Y is smooth.\nFor all X, if there exists B such that person X is strong and person X likes object B and object B is hard, then person X is tall.\nFor all Z, if object Z is hard, then object Z is soft.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is clever, then object X is heavy.\nFor all X, if there exists W such that person X is brave and person X is a friend of person W and person W is clever, then person X is brave.\nFor all X, if there exists W such that person X is funny and person X owns object W and object W is rough, then person X is weak.\nFor all Y, if there exists A such that person Y is bored and person Y likes object A and object A is clean, then person Y is bored.\nFor all X, if person X is tall and person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if object X is clean, then object X is big.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if object X is wet, then object X is red.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is hungry and person X is sad, then person X is excited.\nFor all X, if object X is wet and object X is wet, then object X is heavy.\nFor all X, if person X is excited, then person X is funny.\n\nAnd the following facts:\neve is happy.\ndave is a sibling of bob.\nbook is heavy.\nbob is a sibling of eve.\nalice is a friend of frank.\nfrank is a friend of bob.\nfrank dislikes pencil.\nfrank owns car.\nbook is wet.\ncarol is weak.\nbob is a parent of george.\ndave is an enemy of frank.\nalice is a parent of frank.\ngeorge is tired.\ngeorge is weak.\neve is an enemy of frank.\nalice dislikes pencil.\nbook is hard.\nfrank is an enemy of bob.\nbob is brave.\n\nQUESTION:\nIs eve is angry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 904,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(george).",
    "c": "angry(X) :- happy(X).\nstrong(Y) :- tall(Y), enemy(Y,W), hungry(W).\nfriendly(X) :- excited(X), dislikes(X,V), hard(V).\nsmooth(Y) :- small(Y).\ntall(X) :- strong(X), likes(X,B), hard(B).\nsoft(Z) :- hard(Z).\nheavy(X) :- heavy(X), likes(U,X), clever(U).\nbrave(X) :- brave(X), friend(X,W), clever(W).\nweak(X) :- funny(X), owns(X,W), rough(W).\nbored(Y) :- bored(Y), likes(Y,A), clean(A).\ncurious(X) :- tall(X), funny(X).\nexcited(X) :- curious(X).\nbig(X) :- clean(X).\nsad(X) :- weak(X).\nstrong(X) :- tall(X).\nred(X) :- wet(X).\ncalm(X) :- strong(X).\nexcited(X) :- hungry(X), sad(X).\nheavy(X) :- wet(X), wet(X).\nfunny(X) :- excited(X).\nhappy(eve).\nsibling(dave,bob).\nheavy(book).\nsibling(bob,eve).\nfriend(alice,frank).\nfriend(frank,bob).\ndislikes(frank,pencil).\nowns(frank,car).\nwet(book).\nweak(carol).\nparent(bob,george).\nenemy(dave,frank).\nparent(alice,frank).\ntired(george).\nweak(george).\nenemy(eve,frank).\ndislikes(alice,pencil).\nhard(book).\nenemy(frank,bob).\nbrave(bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is angry.\nFor all Y, if there exists W such that person Y is tall and person Y is an enemy of person W and person W is hungry, then person Y is strong.\nFor all X, if there exists V such that person X is excited and person X dislikes object V and object V is hard, then person X is friendly.\nFor all Y, if object Y is small, then object Y is smooth.\nFor all X, if there exists B such that person X is strong and person X likes object B and object B is hard, then person X is tall.\nFor all Z, if object Z is hard, then object Z is soft.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is clever, then object X is heavy.\nFor all X, if there exists W such that person X is brave and person X is a friend of person W and person W is clever, then person X is brave.\nFor all X, if there exists W such that person X is funny and person X owns object W and object W is rough, then person X is weak.\nFor all Y, if there exists A such that person Y is bored and person Y likes object A and object A is clean, then person Y is bored.\nFor all X, if person X is tall and person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if object X is clean, then object X is big.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if object X is wet, then object X is red.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is hungry and person X is sad, then person X is excited.\nFor all X, if object X is wet and object X is wet, then object X is heavy.\nFor all X, if person X is excited, then person X is funny.\n\nAnd the following facts:\neve is happy.\ndave is a sibling of bob.\nbook is heavy.\nbob is a sibling of eve.\nalice is a friend of frank.\nfrank is a friend of bob.\nfrank dislikes pencil.\nfrank owns car.\nbook is wet.\ncarol is weak.\nbob is a parent of george.\ndave is an enemy of frank.\nalice is a parent of frank.\ngeorge is tired.\ngeorge is weak.\neve is an enemy of frank.\nalice dislikes pencil.\nbook is hard.\nfrank is an enemy of bob.\nbob is brave.\n\nQUESTION:\nIs george is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 905,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(eve).",
    "c": "angry(X) :- happy(X).\nstrong(Y) :- tall(Y), enemy(Y,W), hungry(W).\nfriendly(X) :- excited(X), dislikes(X,V), hard(V).\nsmooth(Y) :- small(Y).\ntall(X) :- strong(X), likes(X,B), hard(B).\nsoft(Z) :- hard(Z).\nheavy(X) :- heavy(X), likes(U,X), clever(U).\nbrave(X) :- brave(X), friend(X,W), clever(W).\nweak(X) :- funny(X), owns(X,W), rough(W).\nbored(Y) :- bored(Y), likes(Y,A), clean(A).\ncurious(X) :- tall(X), funny(X).\nexcited(X) :- curious(X).\nbig(X) :- clean(X).\nsad(X) :- weak(X).\nstrong(X) :- tall(X).\nred(X) :- wet(X).\ncalm(X) :- strong(X).\nexcited(X) :- hungry(X), sad(X).\nheavy(X) :- wet(X), wet(X).\nfunny(X) :- excited(X).\nangry(eve).\nsibling(dave,bob).\nheavy(book).\nsibling(bob,eve).\nfriend(alice,frank).\nfriend(frank,bob).\ndislikes(frank,pencil).\nowns(frank,car).\nwet(book).\nweak(carol).\nparent(bob,george).\nenemy(dave,frank).\nparent(alice,frank).\ntired(george).\nweak(george).\nenemy(eve,frank).\ndislikes(alice,pencil).\nhard(book).\nenemy(frank,bob).\nbrave(bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is angry.\nFor all Y, if there exists W such that person Y is tall and person Y is an enemy of person W and person W is hungry, then person Y is strong.\nFor all X, if there exists V such that person X is excited and person X dislikes object V and object V is hard, then person X is friendly.\nFor all Y, if object Y is small, then object Y is smooth.\nFor all X, if there exists B such that person X is strong and person X likes object B and object B is hard, then person X is tall.\nFor all Z, if object Z is hard, then object Z is soft.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is clever, then object X is heavy.\nFor all X, if there exists W such that person X is brave and person X is a friend of person W and person W is clever, then person X is brave.\nFor all X, if there exists W such that person X is funny and person X owns object W and object W is rough, then person X is weak.\nFor all Y, if there exists A such that person Y is bored and person Y likes object A and object A is clean, then person Y is bored.\nFor all X, if person X is tall and person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if object X is clean, then object X is big.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if object X is wet, then object X is red.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is hungry and person X is sad, then person X is excited.\nFor all X, if object X is wet and object X is wet, then object X is heavy.\nFor all X, if person X is excited, then person X is funny.\n\nAnd the following facts:\neve is angry.\ndave is a sibling of bob.\nbook is heavy.\nbob is a sibling of eve.\nalice is a friend of frank.\nfrank is a friend of bob.\nfrank dislikes pencil.\nfrank owns car.\nbook is wet.\ncarol is weak.\nbob is a parent of george.\ndave is an enemy of frank.\nalice is a parent of frank.\ngeorge is tired.\ngeorge is weak.\neve is an enemy of frank.\nalice dislikes pencil.\nbook is hard.\nfrank is an enemy of bob.\nbob is brave.\n\nQUESTION:\nCould eve is happy explain eve is angry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 906,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(carol).",
    "c": "angry(X) :- happy(X).\nstrong(Y) :- tall(Y), enemy(Y,W), hungry(W).\nfriendly(X) :- excited(X), dislikes(X,V), hard(V).\nsmooth(Y) :- small(Y).\ntall(X) :- strong(X), likes(X,B), hard(B).\nsoft(Z) :- hard(Z).\nheavy(X) :- heavy(X), likes(U,X), clever(U).\nbrave(X) :- brave(X), friend(X,W), clever(W).\nweak(X) :- funny(X), owns(X,W), rough(W).\nbored(Y) :- bored(Y), likes(Y,A), clean(A).\ncurious(X) :- tall(X), funny(X).\nexcited(X) :- curious(X).\nbig(X) :- clean(X).\nsad(X) :- weak(X).\nstrong(X) :- tall(X).\nred(X) :- wet(X).\ncalm(X) :- strong(X).\nexcited(X) :- hungry(X), sad(X).\nheavy(X) :- wet(X), wet(X).\nfunny(X) :- excited(X).\nangry(eve).\nsibling(dave,bob).\nheavy(book).\nsibling(bob,eve).\nfriend(alice,frank).\nfriend(frank,bob).\ndislikes(frank,pencil).\nowns(frank,car).\nwet(book).\nweak(carol).\nparent(bob,george).\nenemy(dave,frank).\nparent(alice,frank).\ntired(george).\nweak(george).\nenemy(eve,frank).\ndislikes(alice,pencil).\nhard(book).\nenemy(frank,bob).\nbrave(bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is angry.\nFor all Y, if there exists W such that person Y is tall and person Y is an enemy of person W and person W is hungry, then person Y is strong.\nFor all X, if there exists V such that person X is excited and person X dislikes object V and object V is hard, then person X is friendly.\nFor all Y, if object Y is small, then object Y is smooth.\nFor all X, if there exists B such that person X is strong and person X likes object B and object B is hard, then person X is tall.\nFor all Z, if object Z is hard, then object Z is soft.\nFor all X, if there exists U such that object X is heavy and person U likes object X and person U is clever, then object X is heavy.\nFor all X, if there exists W such that person X is brave and person X is a friend of person W and person W is clever, then person X is brave.\nFor all X, if there exists W such that person X is funny and person X owns object W and object W is rough, then person X is weak.\nFor all Y, if there exists A such that person Y is bored and person Y likes object A and object A is clean, then person Y is bored.\nFor all X, if person X is tall and person X is funny, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all X, if object X is clean, then object X is big.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if object X is wet, then object X is red.\nFor all X, if person X is strong, then person X is calm.\nFor all X, if person X is hungry and person X is sad, then person X is excited.\nFor all X, if object X is wet and object X is wet, then object X is heavy.\nFor all X, if person X is excited, then person X is funny.\n\nAnd the following facts:\neve is angry.\ndave is a sibling of bob.\nbook is heavy.\nbob is a sibling of eve.\nalice is a friend of frank.\nfrank is a friend of bob.\nfrank dislikes pencil.\nfrank owns car.\nbook is wet.\ncarol is weak.\nbob is a parent of george.\ndave is an enemy of frank.\nalice is a parent of frank.\ngeorge is tired.\ngeorge is weak.\neve is an enemy of frank.\nalice dislikes pencil.\nbook is hard.\nfrank is an enemy of bob.\nbob is brave.\n\nQUESTION:\nCould carol is excited explain eve is angry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 907,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(phone).",
    "c": "heavy(X) :- clean(X).\nnew(Y) :- light(Y).\nsmooth(Z) :- rough(Z), strong(D).\nlight(Z) :- wet(Z), dislikes(V,Z), sad(V).\ndislikes(X,Y) :- small(Y), excited(X), friend(X,V).\nhard(X) :- hard(X), owns(A,X), weak(A).\nsibling(X,Y) :- calm(Y), tall(X), excited(E).\nlikes(X,Z) :- new(Z), tall(X).\nnew(Z) :- rough(Z), dislikes(B,Z), sad(B).\nsmooth(Z) :- new(Z), dislikes(A,Z), tired(A).\ncurious(X) :- angry(X).\nstrong(X) :- tall(X).\nbored(X) :- friendly(X), excited(X).\nsibling(X,Y) :- brave(X), bored(Y).\nweak(X) :- strong(X).\ndirty(X) :- rough(X), big(X).\nsibling(X,Y) :- bored(X), brave(Y), enemy(X,Y).\nrough(X) :- red(X), small(X).\nsad(X) :- strong(X), curious(X).\nexcited(X) :- friendly(X), curious(X).\nclean(phone).\nlikes(george,phone).\ndislikes(eve,phone).\ndirty(book).\nangry(frank).\nsibling(dave,carol).\nenemy(bob,eve).\nsibling(bob,dave).\nbrave(bob).\nfriend(eve,bob).\nhappy(dave).\nold(pencil).\nbored(eve).\nweak(eve).\nred(book).\nowns(carol,phone).\nclever(frank).\nlikes(bob,apple).\nsmall(pencil).\ntall(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is heavy.\nFor all Y, if object Y is light, then object Y is new.\nFor all Z, if there exists D such that object Z is rough and person D is strong, then object Z is smooth.\nFor all Z, if there exists V such that object Z is wet and person V dislikes object Z and person V is sad, then object Z is light.\nFor all X, Y, if there exists V such that object Y is small and person X is excited and person X is a friend of person V, then person X dislikes object Y.\nFor all X, if there exists A such that object X is hard and person A owns object X and person A is weak, then object X is hard.\nFor all X, Y, if there exists E such that person Y is calm and person X is tall and person E is excited, then person X is a sibling of person Y.\nFor all X, Z, if object Z is new and person X is tall, then person X likes object Z.\nFor all Z, if there exists B such that object Z is rough and person B dislikes object Z and person B is sad, then object Z is new.\nFor all Z, if there exists A such that object Z is new and person A dislikes object Z and person A is tired, then object Z is smooth.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is friendly and person X is excited, then person X is bored.\nFor all X, Y, if person X is brave and person Y is bored, then person X is a sibling of person Y.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if object X is rough and object X is big, then object X is dirty.\nFor all X, Y, if person X is bored and person Y is brave and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, if object X is red and object X is small, then object X is rough.\nFor all X, if person X is strong and person X is curious, then person X is sad.\nFor all X, if person X is friendly and person X is curious, then person X is excited.\n\nAnd the following facts:\nphone is clean.\ngeorge likes phone.\neve dislikes phone.\nbook is dirty.\nfrank is angry.\ndave is a sibling of carol.\nbob is an enemy of eve.\nbob is a sibling of dave.\nbob is brave.\neve is a friend of bob.\ndave is happy.\npencil is old.\neve is bored.\neve is weak.\nbook is red.\ncarol owns phone.\nfrank is clever.\nbob likes apple.\npencil is small.\nalice is tall.\n\nQUESTION:\nIs phone is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 908,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "hard(book).",
    "c": "heavy(X) :- clean(X).\nnew(Y) :- light(Y).\nsmooth(Z) :- rough(Z), strong(D).\nlight(Z) :- wet(Z), dislikes(V,Z), sad(V).\ndislikes(X,Y) :- small(Y), excited(X), friend(X,V).\nhard(X) :- hard(X), owns(A,X), weak(A).\nsibling(X,Y) :- calm(Y), tall(X), excited(E).\nlikes(X,Z) :- new(Z), tall(X).\nnew(Z) :- rough(Z), dislikes(B,Z), sad(B).\nsmooth(Z) :- new(Z), dislikes(A,Z), tired(A).\ncurious(X) :- angry(X).\nstrong(X) :- tall(X).\nbored(X) :- friendly(X), excited(X).\nsibling(X,Y) :- brave(X), bored(Y).\nweak(X) :- strong(X).\ndirty(X) :- rough(X), big(X).\nsibling(X,Y) :- bored(X), brave(Y), enemy(X,Y).\nrough(X) :- red(X), small(X).\nsad(X) :- strong(X), curious(X).\nexcited(X) :- friendly(X), curious(X).\nclean(phone).\nlikes(george,phone).\ndislikes(eve,phone).\ndirty(book).\nangry(frank).\nsibling(dave,carol).\nenemy(bob,eve).\nsibling(bob,dave).\nbrave(bob).\nfriend(eve,bob).\nhappy(dave).\nold(pencil).\nbored(eve).\nweak(eve).\nred(book).\nowns(carol,phone).\nclever(frank).\nlikes(bob,apple).\nsmall(pencil).\ntall(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is heavy.\nFor all Y, if object Y is light, then object Y is new.\nFor all Z, if there exists D such that object Z is rough and person D is strong, then object Z is smooth.\nFor all Z, if there exists V such that object Z is wet and person V dislikes object Z and person V is sad, then object Z is light.\nFor all X, Y, if there exists V such that object Y is small and person X is excited and person X is a friend of person V, then person X dislikes object Y.\nFor all X, if there exists A such that object X is hard and person A owns object X and person A is weak, then object X is hard.\nFor all X, Y, if there exists E such that person Y is calm and person X is tall and person E is excited, then person X is a sibling of person Y.\nFor all X, Z, if object Z is new and person X is tall, then person X likes object Z.\nFor all Z, if there exists B such that object Z is rough and person B dislikes object Z and person B is sad, then object Z is new.\nFor all Z, if there exists A such that object Z is new and person A dislikes object Z and person A is tired, then object Z is smooth.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is friendly and person X is excited, then person X is bored.\nFor all X, Y, if person X is brave and person Y is bored, then person X is a sibling of person Y.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if object X is rough and object X is big, then object X is dirty.\nFor all X, Y, if person X is bored and person Y is brave and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, if object X is red and object X is small, then object X is rough.\nFor all X, if person X is strong and person X is curious, then person X is sad.\nFor all X, if person X is friendly and person X is curious, then person X is excited.\n\nAnd the following facts:\nphone is clean.\ngeorge likes phone.\neve dislikes phone.\nbook is dirty.\nfrank is angry.\ndave is a sibling of carol.\nbob is an enemy of eve.\nbob is a sibling of dave.\nbob is brave.\neve is a friend of bob.\ndave is happy.\npencil is old.\neve is bored.\neve is weak.\nbook is red.\ncarol owns phone.\nfrank is clever.\nbob likes apple.\npencil is small.\nalice is tall.\n\nQUESTION:\nIs book is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 909,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(phone).",
    "c": "heavy(X) :- clean(X).\nnew(Y) :- light(Y).\nsmooth(Z) :- rough(Z), strong(D).\nlight(Z) :- wet(Z), dislikes(V,Z), sad(V).\ndislikes(X,Y) :- small(Y), excited(X), friend(X,V).\nhard(X) :- hard(X), owns(A,X), weak(A).\nsibling(X,Y) :- calm(Y), tall(X), excited(E).\nlikes(X,Z) :- new(Z), tall(X).\nnew(Z) :- rough(Z), dislikes(B,Z), sad(B).\nsmooth(Z) :- new(Z), dislikes(A,Z), tired(A).\ncurious(X) :- angry(X).\nstrong(X) :- tall(X).\nbored(X) :- friendly(X), excited(X).\nsibling(X,Y) :- brave(X), bored(Y).\nweak(X) :- strong(X).\ndirty(X) :- rough(X), big(X).\nsibling(X,Y) :- bored(X), brave(Y), enemy(X,Y).\nrough(X) :- red(X), small(X).\nsad(X) :- strong(X), curious(X).\nexcited(X) :- friendly(X), curious(X).\nheavy(phone).\nlikes(george,phone).\ndislikes(eve,phone).\ndirty(book).\nangry(frank).\nsibling(dave,carol).\nenemy(bob,eve).\nsibling(bob,dave).\nbrave(bob).\nfriend(eve,bob).\nhappy(dave).\nold(pencil).\nbored(eve).\nweak(eve).\nred(book).\nowns(carol,phone).\nclever(frank).\nlikes(bob,apple).\nsmall(pencil).\ntall(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is heavy.\nFor all Y, if object Y is light, then object Y is new.\nFor all Z, if there exists D such that object Z is rough and person D is strong, then object Z is smooth.\nFor all Z, if there exists V such that object Z is wet and person V dislikes object Z and person V is sad, then object Z is light.\nFor all X, Y, if there exists V such that object Y is small and person X is excited and person X is a friend of person V, then person X dislikes object Y.\nFor all X, if there exists A such that object X is hard and person A owns object X and person A is weak, then object X is hard.\nFor all X, Y, if there exists E such that person Y is calm and person X is tall and person E is excited, then person X is a sibling of person Y.\nFor all X, Z, if object Z is new and person X is tall, then person X likes object Z.\nFor all Z, if there exists B such that object Z is rough and person B dislikes object Z and person B is sad, then object Z is new.\nFor all Z, if there exists A such that object Z is new and person A dislikes object Z and person A is tired, then object Z is smooth.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is friendly and person X is excited, then person X is bored.\nFor all X, Y, if person X is brave and person Y is bored, then person X is a sibling of person Y.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if object X is rough and object X is big, then object X is dirty.\nFor all X, Y, if person X is bored and person Y is brave and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, if object X is red and object X is small, then object X is rough.\nFor all X, if person X is strong and person X is curious, then person X is sad.\nFor all X, if person X is friendly and person X is curious, then person X is excited.\n\nAnd the following facts:\nphone is heavy.\ngeorge likes phone.\neve dislikes phone.\nbook is dirty.\nfrank is angry.\ndave is a sibling of carol.\nbob is an enemy of eve.\nbob is a sibling of dave.\nbob is brave.\neve is a friend of bob.\ndave is happy.\npencil is old.\neve is bored.\neve is weak.\nbook is red.\ncarol owns phone.\nfrank is clever.\nbob likes apple.\npencil is small.\nalice is tall.\n\nQUESTION:\nCould phone is clean explain phone is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 910,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "heavy(X) :- clean(X).\nnew(Y) :- light(Y).\nsmooth(Z) :- rough(Z), strong(D).\nlight(Z) :- wet(Z), dislikes(V,Z), sad(V).\ndislikes(X,Y) :- small(Y), excited(X), friend(X,V).\nhard(X) :- hard(X), owns(A,X), weak(A).\nsibling(X,Y) :- calm(Y), tall(X), excited(E).\nlikes(X,Z) :- new(Z), tall(X).\nnew(Z) :- rough(Z), dislikes(B,Z), sad(B).\nsmooth(Z) :- new(Z), dislikes(A,Z), tired(A).\ncurious(X) :- angry(X).\nstrong(X) :- tall(X).\nbored(X) :- friendly(X), excited(X).\nsibling(X,Y) :- brave(X), bored(Y).\nweak(X) :- strong(X).\ndirty(X) :- rough(X), big(X).\nsibling(X,Y) :- bored(X), brave(Y), enemy(X,Y).\nrough(X) :- red(X), small(X).\nsad(X) :- strong(X), curious(X).\nexcited(X) :- friendly(X), curious(X).\nheavy(phone).\nlikes(george,phone).\ndislikes(eve,phone).\ndirty(book).\nangry(frank).\nsibling(dave,carol).\nenemy(bob,eve).\nsibling(bob,dave).\nbrave(bob).\nfriend(eve,bob).\nhappy(dave).\nold(pencil).\nbored(eve).\nweak(eve).\nred(book).\nowns(carol,phone).\nclever(frank).\nlikes(bob,apple).\nsmall(pencil).\ntall(alice).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is heavy.\nFor all Y, if object Y is light, then object Y is new.\nFor all Z, if there exists D such that object Z is rough and person D is strong, then object Z is smooth.\nFor all Z, if there exists V such that object Z is wet and person V dislikes object Z and person V is sad, then object Z is light.\nFor all X, Y, if there exists V such that object Y is small and person X is excited and person X is a friend of person V, then person X dislikes object Y.\nFor all X, if there exists A such that object X is hard and person A owns object X and person A is weak, then object X is hard.\nFor all X, Y, if there exists E such that person Y is calm and person X is tall and person E is excited, then person X is a sibling of person Y.\nFor all X, Z, if object Z is new and person X is tall, then person X likes object Z.\nFor all Z, if there exists B such that object Z is rough and person B dislikes object Z and person B is sad, then object Z is new.\nFor all Z, if there exists A such that object Z is new and person A dislikes object Z and person A is tired, then object Z is smooth.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is friendly and person X is excited, then person X is bored.\nFor all X, Y, if person X is brave and person Y is bored, then person X is a sibling of person Y.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if object X is rough and object X is big, then object X is dirty.\nFor all X, Y, if person X is bored and person Y is brave and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, if object X is red and object X is small, then object X is rough.\nFor all X, if person X is strong and person X is curious, then person X is sad.\nFor all X, if person X is friendly and person X is curious, then person X is excited.\n\nAnd the following facts:\nphone is heavy.\ngeorge likes phone.\neve dislikes phone.\nbook is dirty.\nfrank is angry.\ndave is a sibling of carol.\nbob is an enemy of eve.\nbob is a sibling of dave.\nbob is brave.\neve is a friend of bob.\ndave is happy.\npencil is old.\neve is bored.\neve is weak.\nbook is red.\ncarol owns phone.\nfrank is clever.\nbob likes apple.\npencil is small.\nalice is tall.\n\nQUESTION:\nCould car is red explain phone is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 911,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(george).",
    "c": "brave(X) :- funny(X).\ntired(X) :- brave(X).\nexcited(X) :- tired(X).\ncurious(X) :- excited(X).\nexcited(X) :- curious(X).\ntall(Z) :- calm(Z), tall(B).\nfriendly(Y) :- strong(Y).\nold(Z) :- wet(Z), dislikes(U,Z), happy(U).\nclean(Z) :- old(Z), dislikes(A,Z), angry(A).\ndirty(X) :- small(X), likes(W,X), busy(W).\nhard(Y) :- hard(Y), owns(B,Y), tall(B).\nstrong(X) :- sad(X), enemy(X,W), calm(W).\ndirty(X) :- soft(X).\nbig(X) :- small(X).\nhard(X) :- heavy(X).\nclever(X) :- bored(X).\nstrong(X) :- happy(X).\nold(X) :- smooth(X), wet(X).\nclean(X) :- dirty(X).\nclean(X) :- smooth(X), rough(X).\nfunny(george).\nfriend(george,carol).\ndislikes(eve,ball).\ndirty(ball).\nfriend(george,alice).\nbusy(george).\nenemy(alice,george).\nsibling(george,frank).\nwet(book).\nparent(frank,bob).\nenemy(george,frank).\nparent(dave,eve).\nweak(alice).\nfriend(eve,bob).\nnew(car).\nclever(george).\ndislikes(dave,apple).\nrough(pencil).\ndirty(phone).\nsibling(carol,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all Z, if there exists B such that person Z is calm and person B is tall, then person Z is tall.\nFor all Y, if person Y is strong, then person Y is friendly.\nFor all Z, if there exists U such that object Z is wet and person U dislikes object Z and person U is happy, then object Z is old.\nFor all Z, if there exists A such that object Z is old and person A dislikes object Z and person A is angry, then object Z is clean.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is busy, then object X is dirty.\nFor all Y, if there exists B such that object Y is hard and person B owns object Y and person B is tall, then object Y is hard.\nFor all X, if there exists W such that person X is sad and person X is an enemy of person W and person W is calm, then person X is strong.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if object X is smooth and object X is wet, then object X is old.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is smooth and object X is rough, then object X is clean.\n\nAnd the following facts:\ngeorge is funny.\ngeorge is a friend of carol.\neve dislikes ball.\nball is dirty.\ngeorge is a friend of alice.\ngeorge is busy.\nalice is an enemy of george.\ngeorge is a sibling of frank.\nbook is wet.\nfrank is a parent of bob.\ngeorge is an enemy of frank.\ndave is a parent of eve.\nalice is weak.\neve is a friend of bob.\ncar is new.\ngeorge is clever.\ndave dislikes apple.\npencil is rough.\nphone is dirty.\ncarol is a sibling of frank.\n\nQUESTION:\nIs george is excited true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 912,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(phone).",
    "c": "brave(X) :- funny(X).\ntired(X) :- brave(X).\nexcited(X) :- tired(X).\ncurious(X) :- excited(X).\nexcited(X) :- curious(X).\ntall(Z) :- calm(Z), tall(B).\nfriendly(Y) :- strong(Y).\nold(Z) :- wet(Z), dislikes(U,Z), happy(U).\nclean(Z) :- old(Z), dislikes(A,Z), angry(A).\ndirty(X) :- small(X), likes(W,X), busy(W).\nhard(Y) :- hard(Y), owns(B,Y), tall(B).\nstrong(X) :- sad(X), enemy(X,W), calm(W).\ndirty(X) :- soft(X).\nbig(X) :- small(X).\nhard(X) :- heavy(X).\nclever(X) :- bored(X).\nstrong(X) :- happy(X).\nold(X) :- smooth(X), wet(X).\nclean(X) :- dirty(X).\nclean(X) :- smooth(X), rough(X).\nfunny(george).\nfriend(george,carol).\ndislikes(eve,ball).\ndirty(ball).\nfriend(george,alice).\nbusy(george).\nenemy(alice,george).\nsibling(george,frank).\nwet(book).\nparent(frank,bob).\nenemy(george,frank).\nparent(dave,eve).\nweak(alice).\nfriend(eve,bob).\nnew(car).\nclever(george).\ndislikes(dave,apple).\nrough(pencil).\ndirty(phone).\nsibling(carol,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all Z, if there exists B such that person Z is calm and person B is tall, then person Z is tall.\nFor all Y, if person Y is strong, then person Y is friendly.\nFor all Z, if there exists U such that object Z is wet and person U dislikes object Z and person U is happy, then object Z is old.\nFor all Z, if there exists A such that object Z is old and person A dislikes object Z and person A is angry, then object Z is clean.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is busy, then object X is dirty.\nFor all Y, if there exists B such that object Y is hard and person B owns object Y and person B is tall, then object Y is hard.\nFor all X, if there exists W such that person X is sad and person X is an enemy of person W and person W is calm, then person X is strong.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if object X is smooth and object X is wet, then object X is old.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is smooth and object X is rough, then object X is clean.\n\nAnd the following facts:\ngeorge is funny.\ngeorge is a friend of carol.\neve dislikes ball.\nball is dirty.\ngeorge is a friend of alice.\ngeorge is busy.\nalice is an enemy of george.\ngeorge is a sibling of frank.\nbook is wet.\nfrank is a parent of bob.\ngeorge is an enemy of frank.\ndave is a parent of eve.\nalice is weak.\neve is a friend of bob.\ncar is new.\ngeorge is clever.\ndave dislikes apple.\npencil is rough.\nphone is dirty.\ncarol is a sibling of frank.\n\nQUESTION:\nIs phone is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 913,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(george).",
    "c": "brave(X) :- funny(X).\ntired(X) :- brave(X).\nexcited(X) :- tired(X).\ncurious(X) :- excited(X).\nexcited(X) :- curious(X).\ntall(Z) :- calm(Z), tall(B).\nfriendly(Y) :- strong(Y).\nold(Z) :- wet(Z), dislikes(U,Z), happy(U).\nclean(Z) :- old(Z), dislikes(A,Z), angry(A).\ndirty(X) :- small(X), likes(W,X), busy(W).\nhard(Y) :- hard(Y), owns(B,Y), tall(B).\nstrong(X) :- sad(X), enemy(X,W), calm(W).\ndirty(X) :- soft(X).\nbig(X) :- small(X).\nhard(X) :- heavy(X).\nclever(X) :- bored(X).\nstrong(X) :- happy(X).\nold(X) :- smooth(X), wet(X).\nclean(X) :- dirty(X).\nclean(X) :- smooth(X), rough(X).\nexcited(george).\nfriend(george,carol).\ndislikes(eve,ball).\ndirty(ball).\nfriend(george,alice).\nbusy(george).\nenemy(alice,george).\nsibling(george,frank).\nwet(book).\nparent(frank,bob).\nenemy(george,frank).\nparent(dave,eve).\nweak(alice).\nfriend(eve,bob).\nnew(car).\nclever(george).\ndislikes(dave,apple).\nrough(pencil).\ndirty(phone).\nsibling(carol,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all Z, if there exists B such that person Z is calm and person B is tall, then person Z is tall.\nFor all Y, if person Y is strong, then person Y is friendly.\nFor all Z, if there exists U such that object Z is wet and person U dislikes object Z and person U is happy, then object Z is old.\nFor all Z, if there exists A such that object Z is old and person A dislikes object Z and person A is angry, then object Z is clean.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is busy, then object X is dirty.\nFor all Y, if there exists B such that object Y is hard and person B owns object Y and person B is tall, then object Y is hard.\nFor all X, if there exists W such that person X is sad and person X is an enemy of person W and person W is calm, then person X is strong.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if object X is smooth and object X is wet, then object X is old.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is smooth and object X is rough, then object X is clean.\n\nAnd the following facts:\ngeorge is excited.\ngeorge is a friend of carol.\neve dislikes ball.\nball is dirty.\ngeorge is a friend of alice.\ngeorge is busy.\nalice is an enemy of george.\ngeorge is a sibling of frank.\nbook is wet.\nfrank is a parent of bob.\ngeorge is an enemy of frank.\ndave is a parent of eve.\nalice is weak.\neve is a friend of bob.\ncar is new.\ngeorge is clever.\ndave dislikes apple.\npencil is rough.\nphone is dirty.\ncarol is a sibling of frank.\n\nQUESTION:\nCould george is funny explain george is excited?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 914,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(bob).",
    "c": "brave(X) :- funny(X).\ntired(X) :- brave(X).\nexcited(X) :- tired(X).\ncurious(X) :- excited(X).\nexcited(X) :- curious(X).\ntall(Z) :- calm(Z), tall(B).\nfriendly(Y) :- strong(Y).\nold(Z) :- wet(Z), dislikes(U,Z), happy(U).\nclean(Z) :- old(Z), dislikes(A,Z), angry(A).\ndirty(X) :- small(X), likes(W,X), busy(W).\nhard(Y) :- hard(Y), owns(B,Y), tall(B).\nstrong(X) :- sad(X), enemy(X,W), calm(W).\ndirty(X) :- soft(X).\nbig(X) :- small(X).\nhard(X) :- heavy(X).\nclever(X) :- bored(X).\nstrong(X) :- happy(X).\nold(X) :- smooth(X), wet(X).\nclean(X) :- dirty(X).\nclean(X) :- smooth(X), rough(X).\nexcited(george).\nfriend(george,carol).\ndislikes(eve,ball).\ndirty(ball).\nfriend(george,alice).\nbusy(george).\nenemy(alice,george).\nsibling(george,frank).\nwet(book).\nparent(frank,bob).\nenemy(george,frank).\nparent(dave,eve).\nweak(alice).\nfriend(eve,bob).\nnew(car).\nclever(george).\ndislikes(dave,apple).\nrough(pencil).\ndirty(phone).\nsibling(carol,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is excited.\nFor all Z, if there exists B such that person Z is calm and person B is tall, then person Z is tall.\nFor all Y, if person Y is strong, then person Y is friendly.\nFor all Z, if there exists U such that object Z is wet and person U dislikes object Z and person U is happy, then object Z is old.\nFor all Z, if there exists A such that object Z is old and person A dislikes object Z and person A is angry, then object Z is clean.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is busy, then object X is dirty.\nFor all Y, if there exists B such that object Y is hard and person B owns object Y and person B is tall, then object Y is hard.\nFor all X, if there exists W such that person X is sad and person X is an enemy of person W and person W is calm, then person X is strong.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if person X is bored, then person X is clever.\nFor all X, if person X is happy, then person X is strong.\nFor all X, if object X is smooth and object X is wet, then object X is old.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is smooth and object X is rough, then object X is clean.\n\nAnd the following facts:\ngeorge is excited.\ngeorge is a friend of carol.\neve dislikes ball.\nball is dirty.\ngeorge is a friend of alice.\ngeorge is busy.\nalice is an enemy of george.\ngeorge is a sibling of frank.\nbook is wet.\nfrank is a parent of bob.\ngeorge is an enemy of frank.\ndave is a parent of eve.\nalice is weak.\neve is a friend of bob.\ncar is new.\ngeorge is clever.\ndave dislikes apple.\npencil is rough.\nphone is dirty.\ncarol is a sibling of frank.\n\nQUESTION:\nCould bob is weak explain george is excited?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 915,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(ball).",
    "c": "heavy(X) :- clean(X).\nsmall(X) :- heavy(X).\nsoft(X) :- small(X).\nsmooth(X) :- soft(X).\ndirty(X) :- smooth(X).\nlight(X) :- light(X), calm(D).\nfriendly(X) :- excited(X).\nstrong(Z) :- friendly(Z), sibling(Z,A), funny(A).\nbusy(X) :- friendly(X), parent(X,V), excited(V).\ntired(Z) :- friendly(Z).\nweak(Z) :- tall(Z), enemy(Z,W), calm(W).\nparent(X,Z) :- angry(Z), bored(X), enemy(Z,V).\ntired(Y) :- tall(Y).\ncalm(Y) :- tall(Y).\nred(X) :- red(X).\nangry(Y) :- tall(Y), likes(Y,W), light(W).\nexcited(X) :- happy(X).\nstrong(X) :- busy(X), funny(X).\nwet(X) :- light(X).\nangry(X) :- bored(X).\nclean(ball).\nparent(frank,eve).\nstrong(george).\nowns(frank,book).\nparent(bob,dave).\nangry(alice).\nhard(phone).\nbig(book).\nenemy(alice,eve).\nowns(carol,ball).\nfriend(dave,george).\nexcited(carol).\nbrave(carol).\nowns(bob,book).\ncold.\nenemy(carol,alice).\nfriend(carol,dave).\ndislikes(bob,phone).\nrough(ball).\nbusy(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if there exists D such that object X is light and person D is calm, then object X is light.\nFor all X, if person X is excited, then person X is friendly.\nFor all Z, if there exists A such that person Z is friendly and person Z is a sibling of person A and person A is funny, then person Z is strong.\nFor all X, if there exists V such that person X is friendly and person X is a parent of person V and person V is excited, then person X is busy.\nFor all Z, if person Z is friendly, then person Z is tired.\nFor all Z, if there exists W such that person Z is tall and person Z is an enemy of person W and person W is calm, then person Z is weak.\nFor all X, Z, if there exists V such that person Z is angry and person X is bored and person Z is an enemy of person V, then person X is a parent of person Z.\nFor all Y, if person Y is tall, then person Y is tired.\nFor all Y, if person Y is tall, then person Y is calm.\nFor all X, if object X is red, then object X is red.\nFor all Y, if there exists W such that person Y is tall and person Y likes object W and object W is light, then person Y is angry.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is busy and person X is funny, then person X is strong.\nFor all X, if object X is light, then object X is wet.\nFor all X, if person X is bored, then person X is angry.\n\nAnd the following facts:\nball is clean.\nfrank is a parent of eve.\ngeorge is strong.\nfrank owns book.\nbob is a parent of dave.\nalice is angry.\nphone is hard.\nbook is big.\nalice is an enemy of eve.\ncarol owns ball.\ndave is a friend of george.\ncarol is excited.\ncarol is brave.\nbob owns book.\nit is cold.\ncarol is an enemy of alice.\ncarol is a friend of dave.\nbob dislikes phone.\nball is rough.\nbob is busy.\n\nQUESTION:\nIs ball is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 916,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(carol).",
    "c": "heavy(X) :- clean(X).\nsmall(X) :- heavy(X).\nsoft(X) :- small(X).\nsmooth(X) :- soft(X).\ndirty(X) :- smooth(X).\nlight(X) :- light(X), calm(D).\nfriendly(X) :- excited(X).\nstrong(Z) :- friendly(Z), sibling(Z,A), funny(A).\nbusy(X) :- friendly(X), parent(X,V), excited(V).\ntired(Z) :- friendly(Z).\nweak(Z) :- tall(Z), enemy(Z,W), calm(W).\nparent(X,Z) :- angry(Z), bored(X), enemy(Z,V).\ntired(Y) :- tall(Y).\ncalm(Y) :- tall(Y).\nred(X) :- red(X).\nangry(Y) :- tall(Y), likes(Y,W), light(W).\nexcited(X) :- happy(X).\nstrong(X) :- busy(X), funny(X).\nwet(X) :- light(X).\nangry(X) :- bored(X).\nclean(ball).\nparent(frank,eve).\nstrong(george).\nowns(frank,book).\nparent(bob,dave).\nangry(alice).\nhard(phone).\nbig(book).\nenemy(alice,eve).\nowns(carol,ball).\nfriend(dave,george).\nexcited(carol).\nbrave(carol).\nowns(bob,book).\ncold.\nenemy(carol,alice).\nfriend(carol,dave).\ndislikes(bob,phone).\nrough(ball).\nbusy(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if there exists D such that object X is light and person D is calm, then object X is light.\nFor all X, if person X is excited, then person X is friendly.\nFor all Z, if there exists A such that person Z is friendly and person Z is a sibling of person A and person A is funny, then person Z is strong.\nFor all X, if there exists V such that person X is friendly and person X is a parent of person V and person V is excited, then person X is busy.\nFor all Z, if person Z is friendly, then person Z is tired.\nFor all Z, if there exists W such that person Z is tall and person Z is an enemy of person W and person W is calm, then person Z is weak.\nFor all X, Z, if there exists V such that person Z is angry and person X is bored and person Z is an enemy of person V, then person X is a parent of person Z.\nFor all Y, if person Y is tall, then person Y is tired.\nFor all Y, if person Y is tall, then person Y is calm.\nFor all X, if object X is red, then object X is red.\nFor all Y, if there exists W such that person Y is tall and person Y likes object W and object W is light, then person Y is angry.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is busy and person X is funny, then person X is strong.\nFor all X, if object X is light, then object X is wet.\nFor all X, if person X is bored, then person X is angry.\n\nAnd the following facts:\nball is clean.\nfrank is a parent of eve.\ngeorge is strong.\nfrank owns book.\nbob is a parent of dave.\nalice is angry.\nphone is hard.\nbook is big.\nalice is an enemy of eve.\ncarol owns ball.\ndave is a friend of george.\ncarol is excited.\ncarol is brave.\nbob owns book.\nit is cold.\ncarol is an enemy of alice.\ncarol is a friend of dave.\nbob dislikes phone.\nball is rough.\nbob is busy.\n\nQUESTION:\nIs carol is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 917,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "heavy(X) :- clean(X).\nsmall(X) :- heavy(X).\nsoft(X) :- small(X).\nsmooth(X) :- soft(X).\ndirty(X) :- smooth(X).\nlight(X) :- light(X), calm(D).\nfriendly(X) :- excited(X).\nstrong(Z) :- friendly(Z), sibling(Z,A), funny(A).\nbusy(X) :- friendly(X), parent(X,V), excited(V).\ntired(Z) :- friendly(Z).\nweak(Z) :- tall(Z), enemy(Z,W), calm(W).\nparent(X,Z) :- angry(Z), bored(X), enemy(Z,V).\ntired(Y) :- tall(Y).\ncalm(Y) :- tall(Y).\nred(X) :- red(X).\nangry(Y) :- tall(Y), likes(Y,W), light(W).\nexcited(X) :- happy(X).\nstrong(X) :- busy(X), funny(X).\nwet(X) :- light(X).\nangry(X) :- bored(X).\ndirty(ball).\nparent(frank,eve).\nstrong(george).\nowns(frank,book).\nparent(bob,dave).\nangry(alice).\nhard(phone).\nbig(book).\nenemy(alice,eve).\nowns(carol,ball).\nfriend(dave,george).\nexcited(carol).\nbrave(carol).\nowns(bob,book).\ncold.\nenemy(carol,alice).\nfriend(carol,dave).\ndislikes(bob,phone).\nrough(ball).\nbusy(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if there exists D such that object X is light and person D is calm, then object X is light.\nFor all X, if person X is excited, then person X is friendly.\nFor all Z, if there exists A such that person Z is friendly and person Z is a sibling of person A and person A is funny, then person Z is strong.\nFor all X, if there exists V such that person X is friendly and person X is a parent of person V and person V is excited, then person X is busy.\nFor all Z, if person Z is friendly, then person Z is tired.\nFor all Z, if there exists W such that person Z is tall and person Z is an enemy of person W and person W is calm, then person Z is weak.\nFor all X, Z, if there exists V such that person Z is angry and person X is bored and person Z is an enemy of person V, then person X is a parent of person Z.\nFor all Y, if person Y is tall, then person Y is tired.\nFor all Y, if person Y is tall, then person Y is calm.\nFor all X, if object X is red, then object X is red.\nFor all Y, if there exists W such that person Y is tall and person Y likes object W and object W is light, then person Y is angry.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is busy and person X is funny, then person X is strong.\nFor all X, if object X is light, then object X is wet.\nFor all X, if person X is bored, then person X is angry.\n\nAnd the following facts:\nball is dirty.\nfrank is a parent of eve.\ngeorge is strong.\nfrank owns book.\nbob is a parent of dave.\nalice is angry.\nphone is hard.\nbook is big.\nalice is an enemy of eve.\ncarol owns ball.\ndave is a friend of george.\ncarol is excited.\ncarol is brave.\nbob owns book.\nit is cold.\ncarol is an enemy of alice.\ncarol is a friend of dave.\nbob dislikes phone.\nball is rough.\nbob is busy.\n\nQUESTION:\nCould ball is clean explain ball is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 918,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(alice).",
    "c": "heavy(X) :- clean(X).\nsmall(X) :- heavy(X).\nsoft(X) :- small(X).\nsmooth(X) :- soft(X).\ndirty(X) :- smooth(X).\nlight(X) :- light(X), calm(D).\nfriendly(X) :- excited(X).\nstrong(Z) :- friendly(Z), sibling(Z,A), funny(A).\nbusy(X) :- friendly(X), parent(X,V), excited(V).\ntired(Z) :- friendly(Z).\nweak(Z) :- tall(Z), enemy(Z,W), calm(W).\nparent(X,Z) :- angry(Z), bored(X), enemy(Z,V).\ntired(Y) :- tall(Y).\ncalm(Y) :- tall(Y).\nred(X) :- red(X).\nangry(Y) :- tall(Y), likes(Y,W), light(W).\nexcited(X) :- happy(X).\nstrong(X) :- busy(X), funny(X).\nwet(X) :- light(X).\nangry(X) :- bored(X).\ndirty(ball).\nparent(frank,eve).\nstrong(george).\nowns(frank,book).\nparent(bob,dave).\nangry(alice).\nhard(phone).\nbig(book).\nenemy(alice,eve).\nowns(carol,ball).\nfriend(dave,george).\nexcited(carol).\nbrave(carol).\nowns(bob,book).\ncold.\nenemy(carol,alice).\nfriend(carol,dave).\ndislikes(bob,phone).\nrough(ball).\nbusy(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if there exists D such that object X is light and person D is calm, then object X is light.\nFor all X, if person X is excited, then person X is friendly.\nFor all Z, if there exists A such that person Z is friendly and person Z is a sibling of person A and person A is funny, then person Z is strong.\nFor all X, if there exists V such that person X is friendly and person X is a parent of person V and person V is excited, then person X is busy.\nFor all Z, if person Z is friendly, then person Z is tired.\nFor all Z, if there exists W such that person Z is tall and person Z is an enemy of person W and person W is calm, then person Z is weak.\nFor all X, Z, if there exists V such that person Z is angry and person X is bored and person Z is an enemy of person V, then person X is a parent of person Z.\nFor all Y, if person Y is tall, then person Y is tired.\nFor all Y, if person Y is tall, then person Y is calm.\nFor all X, if object X is red, then object X is red.\nFor all Y, if there exists W such that person Y is tall and person Y likes object W and object W is light, then person Y is angry.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is busy and person X is funny, then person X is strong.\nFor all X, if object X is light, then object X is wet.\nFor all X, if person X is bored, then person X is angry.\n\nAnd the following facts:\nball is dirty.\nfrank is a parent of eve.\ngeorge is strong.\nfrank owns book.\nbob is a parent of dave.\nalice is angry.\nphone is hard.\nbook is big.\nalice is an enemy of eve.\ncarol owns ball.\ndave is a friend of george.\ncarol is excited.\ncarol is brave.\nbob owns book.\nit is cold.\ncarol is an enemy of alice.\ncarol is a friend of dave.\nbob dislikes phone.\nball is rough.\nbob is busy.\n\nQUESTION:\nCould alice is excited explain ball is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 919,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(pencil).",
    "c": "clean(X) :- smooth(X).\nsoft(X) :- clean(X).\nbig(X) :- soft(X).\nold(X) :- big(X).\nnew(X) :- old(X).\nbusy(X) :- happy(X), friend(X,A), curious(A).\nwet(Z) :- red(Z), weak(D).\nfunny(X) :- excited(X).\nowns(Y,X) :- brave(Y), hard(X).\nlight(Y) :- light(Y), hard(B).\nrough(Z) :- wet(Z), owns(A,Z), curious(A).\nheavy(X) :- dirty(X).\nsad(Y) :- funny(Y), likes(Y,V), hard(V).\nexcited(Y) :- sad(Y), parent(Y,B), curious(B).\nweak(X) :- hungry(X), hungry(X).\nangry(X) :- busy(X).\nlikes(X,Y) :- strong(X), small(Y).\nparent(X,Y) :- busy(X), curious(Y).\nclever(X) :- tired(X).\nfriend(X,Y) :- tall(X), bored(Y).\nsmooth(pencil).\nbored(george).\nparent(george,carol).\nlikes(dave,apple).\nhappy(bob).\nbusy(bob).\nexcited(dave).\ndislikes(alice,apple).\nenemy(alice,frank).\nowns(frank,book).\nlikes(dave,book).\nfriend(bob,george).\nfriend(frank,eve).\nbored(dave).\nenemy(dave,carol).\nclever(frank).\nstrong(george).\nparent(dave,frank).\nlikes(frank,car).\ntall(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if there exists A such that person X is happy and person X is a friend of person A and person A is curious, then person X is busy.\nFor all Z, if there exists D such that object Z is red and person D is weak, then object Z is wet.\nFor all X, if person X is excited, then person X is funny.\nFor all X, Y, if person Y is brave and object X is hard, then person Y owns object X.\nFor all Y, if there exists B such that object Y is light and object B is hard, then object Y is light.\nFor all Z, if there exists A such that object Z is wet and person A owns object Z and person A is curious, then object Z is rough.\nFor all X, if object X is dirty, then object X is heavy.\nFor all Y, if there exists V such that person Y is funny and person Y likes object V and object V is hard, then person Y is sad.\nFor all Y, if there exists B such that person Y is sad and person Y is a parent of person B and person B is curious, then person Y is excited.\nFor all X, if person X is hungry and person X is hungry, then person X is weak.\nFor all X, if person X is busy, then person X is angry.\nFor all X, Y, if person X is strong and object Y is small, then person X likes object Y.\nFor all X, Y, if person X is busy and person Y is curious, then person X is a parent of person Y.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is tall and person Y is bored, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is smooth.\ngeorge is bored.\ngeorge is a parent of carol.\ndave likes apple.\nbob is happy.\nbob is busy.\ndave is excited.\nalice dislikes apple.\nalice is an enemy of frank.\nfrank owns book.\ndave likes book.\nbob is a friend of george.\nfrank is a friend of eve.\ndave is bored.\ndave is an enemy of carol.\nfrank is clever.\ngeorge is strong.\ndave is a parent of frank.\nfrank likes car.\ngeorge is tall.\n\nQUESTION:\nIs pencil is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 920,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(george).",
    "c": "clean(X) :- smooth(X).\nsoft(X) :- clean(X).\nbig(X) :- soft(X).\nold(X) :- big(X).\nnew(X) :- old(X).\nbusy(X) :- happy(X), friend(X,A), curious(A).\nwet(Z) :- red(Z), weak(D).\nfunny(X) :- excited(X).\nowns(Y,X) :- brave(Y), hard(X).\nlight(Y) :- light(Y), hard(B).\nrough(Z) :- wet(Z), owns(A,Z), curious(A).\nheavy(X) :- dirty(X).\nsad(Y) :- funny(Y), likes(Y,V), hard(V).\nexcited(Y) :- sad(Y), parent(Y,B), curious(B).\nweak(X) :- hungry(X), hungry(X).\nangry(X) :- busy(X).\nlikes(X,Y) :- strong(X), small(Y).\nparent(X,Y) :- busy(X), curious(Y).\nclever(X) :- tired(X).\nfriend(X,Y) :- tall(X), bored(Y).\nsmooth(pencil).\nbored(george).\nparent(george,carol).\nlikes(dave,apple).\nhappy(bob).\nbusy(bob).\nexcited(dave).\ndislikes(alice,apple).\nenemy(alice,frank).\nowns(frank,book).\nlikes(dave,book).\nfriend(bob,george).\nfriend(frank,eve).\nbored(dave).\nenemy(dave,carol).\nclever(frank).\nstrong(george).\nparent(dave,frank).\nlikes(frank,car).\ntall(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if there exists A such that person X is happy and person X is a friend of person A and person A is curious, then person X is busy.\nFor all Z, if there exists D such that object Z is red and person D is weak, then object Z is wet.\nFor all X, if person X is excited, then person X is funny.\nFor all X, Y, if person Y is brave and object X is hard, then person Y owns object X.\nFor all Y, if there exists B such that object Y is light and object B is hard, then object Y is light.\nFor all Z, if there exists A such that object Z is wet and person A owns object Z and person A is curious, then object Z is rough.\nFor all X, if object X is dirty, then object X is heavy.\nFor all Y, if there exists V such that person Y is funny and person Y likes object V and object V is hard, then person Y is sad.\nFor all Y, if there exists B such that person Y is sad and person Y is a parent of person B and person B is curious, then person Y is excited.\nFor all X, if person X is hungry and person X is hungry, then person X is weak.\nFor all X, if person X is busy, then person X is angry.\nFor all X, Y, if person X is strong and object Y is small, then person X likes object Y.\nFor all X, Y, if person X is busy and person Y is curious, then person X is a parent of person Y.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is tall and person Y is bored, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is smooth.\ngeorge is bored.\ngeorge is a parent of carol.\ndave likes apple.\nbob is happy.\nbob is busy.\ndave is excited.\nalice dislikes apple.\nalice is an enemy of frank.\nfrank owns book.\ndave likes book.\nbob is a friend of george.\nfrank is a friend of eve.\ndave is bored.\ndave is an enemy of carol.\nfrank is clever.\ngeorge is strong.\ndave is a parent of frank.\nfrank likes car.\ngeorge is tall.\n\nQUESTION:\nIs george is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 921,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(pencil).",
    "c": "clean(X) :- smooth(X).\nsoft(X) :- clean(X).\nbig(X) :- soft(X).\nold(X) :- big(X).\nnew(X) :- old(X).\nbusy(X) :- happy(X), friend(X,A), curious(A).\nwet(Z) :- red(Z), weak(D).\nfunny(X) :- excited(X).\nowns(Y,X) :- brave(Y), hard(X).\nlight(Y) :- light(Y), hard(B).\nrough(Z) :- wet(Z), owns(A,Z), curious(A).\nheavy(X) :- dirty(X).\nsad(Y) :- funny(Y), likes(Y,V), hard(V).\nexcited(Y) :- sad(Y), parent(Y,B), curious(B).\nweak(X) :- hungry(X), hungry(X).\nangry(X) :- busy(X).\nlikes(X,Y) :- strong(X), small(Y).\nparent(X,Y) :- busy(X), curious(Y).\nclever(X) :- tired(X).\nfriend(X,Y) :- tall(X), bored(Y).\nnew(pencil).\nbored(george).\nparent(george,carol).\nlikes(dave,apple).\nhappy(bob).\nbusy(bob).\nexcited(dave).\ndislikes(alice,apple).\nenemy(alice,frank).\nowns(frank,book).\nlikes(dave,book).\nfriend(bob,george).\nfriend(frank,eve).\nbored(dave).\nenemy(dave,carol).\nclever(frank).\nstrong(george).\nparent(dave,frank).\nlikes(frank,car).\ntall(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if there exists A such that person X is happy and person X is a friend of person A and person A is curious, then person X is busy.\nFor all Z, if there exists D such that object Z is red and person D is weak, then object Z is wet.\nFor all X, if person X is excited, then person X is funny.\nFor all X, Y, if person Y is brave and object X is hard, then person Y owns object X.\nFor all Y, if there exists B such that object Y is light and object B is hard, then object Y is light.\nFor all Z, if there exists A such that object Z is wet and person A owns object Z and person A is curious, then object Z is rough.\nFor all X, if object X is dirty, then object X is heavy.\nFor all Y, if there exists V such that person Y is funny and person Y likes object V and object V is hard, then person Y is sad.\nFor all Y, if there exists B such that person Y is sad and person Y is a parent of person B and person B is curious, then person Y is excited.\nFor all X, if person X is hungry and person X is hungry, then person X is weak.\nFor all X, if person X is busy, then person X is angry.\nFor all X, Y, if person X is strong and object Y is small, then person X likes object Y.\nFor all X, Y, if person X is busy and person Y is curious, then person X is a parent of person Y.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is tall and person Y is bored, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is new.\ngeorge is bored.\ngeorge is a parent of carol.\ndave likes apple.\nbob is happy.\nbob is busy.\ndave is excited.\nalice dislikes apple.\nalice is an enemy of frank.\nfrank owns book.\ndave likes book.\nbob is a friend of george.\nfrank is a friend of eve.\ndave is bored.\ndave is an enemy of carol.\nfrank is clever.\ngeorge is strong.\ndave is a parent of frank.\nfrank likes car.\ngeorge is tall.\n\nQUESTION:\nCould pencil is smooth explain pencil is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 922,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(alice).",
    "c": "clean(X) :- smooth(X).\nsoft(X) :- clean(X).\nbig(X) :- soft(X).\nold(X) :- big(X).\nnew(X) :- old(X).\nbusy(X) :- happy(X), friend(X,A), curious(A).\nwet(Z) :- red(Z), weak(D).\nfunny(X) :- excited(X).\nowns(Y,X) :- brave(Y), hard(X).\nlight(Y) :- light(Y), hard(B).\nrough(Z) :- wet(Z), owns(A,Z), curious(A).\nheavy(X) :- dirty(X).\nsad(Y) :- funny(Y), likes(Y,V), hard(V).\nexcited(Y) :- sad(Y), parent(Y,B), curious(B).\nweak(X) :- hungry(X), hungry(X).\nangry(X) :- busy(X).\nlikes(X,Y) :- strong(X), small(Y).\nparent(X,Y) :- busy(X), curious(Y).\nclever(X) :- tired(X).\nfriend(X,Y) :- tall(X), bored(Y).\nnew(pencil).\nbored(george).\nparent(george,carol).\nlikes(dave,apple).\nhappy(bob).\nbusy(bob).\nexcited(dave).\ndislikes(alice,apple).\nenemy(alice,frank).\nowns(frank,book).\nlikes(dave,book).\nfriend(bob,george).\nfriend(frank,eve).\nbored(dave).\nenemy(dave,carol).\nclever(frank).\nstrong(george).\nparent(dave,frank).\nlikes(frank,car).\ntall(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if there exists A such that person X is happy and person X is a friend of person A and person A is curious, then person X is busy.\nFor all Z, if there exists D such that object Z is red and person D is weak, then object Z is wet.\nFor all X, if person X is excited, then person X is funny.\nFor all X, Y, if person Y is brave and object X is hard, then person Y owns object X.\nFor all Y, if there exists B such that object Y is light and object B is hard, then object Y is light.\nFor all Z, if there exists A such that object Z is wet and person A owns object Z and person A is curious, then object Z is rough.\nFor all X, if object X is dirty, then object X is heavy.\nFor all Y, if there exists V such that person Y is funny and person Y likes object V and object V is hard, then person Y is sad.\nFor all Y, if there exists B such that person Y is sad and person Y is a parent of person B and person B is curious, then person Y is excited.\nFor all X, if person X is hungry and person X is hungry, then person X is weak.\nFor all X, if person X is busy, then person X is angry.\nFor all X, Y, if person X is strong and object Y is small, then person X likes object Y.\nFor all X, Y, if person X is busy and person Y is curious, then person X is a parent of person Y.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is tall and person Y is bored, then person X is a friend of person Y.\n\nAnd the following facts:\npencil is new.\ngeorge is bored.\ngeorge is a parent of carol.\ndave likes apple.\nbob is happy.\nbob is busy.\ndave is excited.\nalice dislikes apple.\nalice is an enemy of frank.\nfrank owns book.\ndave likes book.\nbob is a friend of george.\nfrank is a friend of eve.\ndave is bored.\ndave is an enemy of carol.\nfrank is clever.\ngeorge is strong.\ndave is a parent of frank.\nfrank likes car.\ngeorge is tall.\n\nQUESTION:\nCould alice is sad explain pencil is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 923,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(ball).",
    "c": "red(X) :- old(X).\nnew(X) :- red(X).\nlight(X) :- new(X).\nhard(X) :- light(X).\nsmooth(X) :- hard(X).\ndislikes(Z,Y) :- heavy(Y), angry(Z), dislikes(A,Y).\ndirty(Z) :- small(Z), owns(U,Z), funny(U).\nbig(Z) :- rough(Z).\ndislikes(Z,Y) :- heavy(Y), tired(Z), likes(Z,W).\nsoft(X) :- soft(X), owns(B,X), happy(B).\ncurious(Z) :- funny(Z), dislikes(Z,U), heavy(U).\nparent(Y,X) :- tall(Y), tired(X), friend(Y,V).\nclean(X) :- dirty(X).\nheavy(X) :- wet(X).\ncalm(X) :- hungry(X).\nhappy(X) :- strong(X).\nclean(X) :- small(X).\nstrong(X) :- sad(X), brave(X).\ndislikes(X,Y) :- calm(X), clean(Y), likes(X,Y).\nowns(X,Y) :- busy(X), rough(Y).\nold(ball).\ndislikes(eve,pencil).\ndislikes(carol,pencil).\nparent(alice,bob).\nowns(carol,ball).\nlikes(bob,pencil).\ntired(eve).\nsibling(alice,frank).\nhot.\nexcited(george).\nsibling(carol,dave).\nlikes(dave,pencil).\nowns(alice,car).\nbrave(bob).\nlikes(dave,apple).\nsibling(carol,eve).\nclean(book).\nweak(dave).\nangry(alice).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is smooth.\nFor all Y, Z, if there exists A such that object Y is heavy and person Z is angry and person A dislikes object Y, then person Z dislikes object Y.\nFor all Z, if there exists U such that object Z is small and person U owns object Z and person U is funny, then object Z is dirty.\nFor all Z, if object Z is rough, then object Z is big.\nFor all Y, Z, if there exists W such that object Y is heavy and person Z is tired and person Z likes object W, then person Z dislikes object Y.\nFor all X, if there exists B such that object X is soft and person B owns object X and person B is happy, then object X is soft.\nFor all Z, if there exists U such that person Z is funny and person Z dislikes object U and object U is heavy, then person Z is curious.\nFor all X, Y, if there exists V such that person Y is tall and person X is tired and person Y is a friend of person V, then person Y is a parent of person X.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if object X is small, then object X is clean.\nFor all X, if person X is sad and person X is brave, then person X is strong.\nFor all X, Y, if person X is calm and object Y is clean and person X likes object Y, then person X dislikes object Y.\nFor all X, Y, if person X is busy and object Y is rough, then person X owns object Y.\n\nAnd the following facts:\nball is old.\neve dislikes pencil.\ncarol dislikes pencil.\nalice is a parent of bob.\ncarol owns ball.\nbob likes pencil.\neve is tired.\nalice is a sibling of frank.\nit is hot.\ngeorge is excited.\ncarol is a sibling of dave.\ndave likes pencil.\nalice owns car.\nbob is brave.\ndave likes apple.\ncarol is a sibling of eve.\nbook is clean.\ndave is weak.\nalice is angry.\ndave is a parent of eve.\n\nQUESTION:\nIs ball is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 924,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(book).",
    "c": "red(X) :- old(X).\nnew(X) :- red(X).\nlight(X) :- new(X).\nhard(X) :- light(X).\nsmooth(X) :- hard(X).\ndislikes(Z,Y) :- heavy(Y), angry(Z), dislikes(A,Y).\ndirty(Z) :- small(Z), owns(U,Z), funny(U).\nbig(Z) :- rough(Z).\ndislikes(Z,Y) :- heavy(Y), tired(Z), likes(Z,W).\nsoft(X) :- soft(X), owns(B,X), happy(B).\ncurious(Z) :- funny(Z), dislikes(Z,U), heavy(U).\nparent(Y,X) :- tall(Y), tired(X), friend(Y,V).\nclean(X) :- dirty(X).\nheavy(X) :- wet(X).\ncalm(X) :- hungry(X).\nhappy(X) :- strong(X).\nclean(X) :- small(X).\nstrong(X) :- sad(X), brave(X).\ndislikes(X,Y) :- calm(X), clean(Y), likes(X,Y).\nowns(X,Y) :- busy(X), rough(Y).\nold(ball).\ndislikes(eve,pencil).\ndislikes(carol,pencil).\nparent(alice,bob).\nowns(carol,ball).\nlikes(bob,pencil).\ntired(eve).\nsibling(alice,frank).\nhot.\nexcited(george).\nsibling(carol,dave).\nlikes(dave,pencil).\nowns(alice,car).\nbrave(bob).\nlikes(dave,apple).\nsibling(carol,eve).\nclean(book).\nweak(dave).\nangry(alice).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is smooth.\nFor all Y, Z, if there exists A such that object Y is heavy and person Z is angry and person A dislikes object Y, then person Z dislikes object Y.\nFor all Z, if there exists U such that object Z is small and person U owns object Z and person U is funny, then object Z is dirty.\nFor all Z, if object Z is rough, then object Z is big.\nFor all Y, Z, if there exists W such that object Y is heavy and person Z is tired and person Z likes object W, then person Z dislikes object Y.\nFor all X, if there exists B such that object X is soft and person B owns object X and person B is happy, then object X is soft.\nFor all Z, if there exists U such that person Z is funny and person Z dislikes object U and object U is heavy, then person Z is curious.\nFor all X, Y, if there exists V such that person Y is tall and person X is tired and person Y is a friend of person V, then person Y is a parent of person X.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if object X is small, then object X is clean.\nFor all X, if person X is sad and person X is brave, then person X is strong.\nFor all X, Y, if person X is calm and object Y is clean and person X likes object Y, then person X dislikes object Y.\nFor all X, Y, if person X is busy and object Y is rough, then person X owns object Y.\n\nAnd the following facts:\nball is old.\neve dislikes pencil.\ncarol dislikes pencil.\nalice is a parent of bob.\ncarol owns ball.\nbob likes pencil.\neve is tired.\nalice is a sibling of frank.\nit is hot.\ngeorge is excited.\ncarol is a sibling of dave.\ndave likes pencil.\nalice owns car.\nbob is brave.\ndave likes apple.\ncarol is a sibling of eve.\nbook is clean.\ndave is weak.\nalice is angry.\ndave is a parent of eve.\n\nQUESTION:\nIs book is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 925,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(ball).",
    "c": "red(X) :- old(X).\nnew(X) :- red(X).\nlight(X) :- new(X).\nhard(X) :- light(X).\nsmooth(X) :- hard(X).\ndislikes(Z,Y) :- heavy(Y), angry(Z), dislikes(A,Y).\ndirty(Z) :- small(Z), owns(U,Z), funny(U).\nbig(Z) :- rough(Z).\ndislikes(Z,Y) :- heavy(Y), tired(Z), likes(Z,W).\nsoft(X) :- soft(X), owns(B,X), happy(B).\ncurious(Z) :- funny(Z), dislikes(Z,U), heavy(U).\nparent(Y,X) :- tall(Y), tired(X), friend(Y,V).\nclean(X) :- dirty(X).\nheavy(X) :- wet(X).\ncalm(X) :- hungry(X).\nhappy(X) :- strong(X).\nclean(X) :- small(X).\nstrong(X) :- sad(X), brave(X).\ndislikes(X,Y) :- calm(X), clean(Y), likes(X,Y).\nowns(X,Y) :- busy(X), rough(Y).\nsmooth(ball).\ndislikes(eve,pencil).\ndislikes(carol,pencil).\nparent(alice,bob).\nowns(carol,ball).\nlikes(bob,pencil).\ntired(eve).\nsibling(alice,frank).\nhot.\nexcited(george).\nsibling(carol,dave).\nlikes(dave,pencil).\nowns(alice,car).\nbrave(bob).\nlikes(dave,apple).\nsibling(carol,eve).\nclean(book).\nweak(dave).\nangry(alice).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is smooth.\nFor all Y, Z, if there exists A such that object Y is heavy and person Z is angry and person A dislikes object Y, then person Z dislikes object Y.\nFor all Z, if there exists U such that object Z is small and person U owns object Z and person U is funny, then object Z is dirty.\nFor all Z, if object Z is rough, then object Z is big.\nFor all Y, Z, if there exists W such that object Y is heavy and person Z is tired and person Z likes object W, then person Z dislikes object Y.\nFor all X, if there exists B such that object X is soft and person B owns object X and person B is happy, then object X is soft.\nFor all Z, if there exists U such that person Z is funny and person Z dislikes object U and object U is heavy, then person Z is curious.\nFor all X, Y, if there exists V such that person Y is tall and person X is tired and person Y is a friend of person V, then person Y is a parent of person X.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if object X is small, then object X is clean.\nFor all X, if person X is sad and person X is brave, then person X is strong.\nFor all X, Y, if person X is calm and object Y is clean and person X likes object Y, then person X dislikes object Y.\nFor all X, Y, if person X is busy and object Y is rough, then person X owns object Y.\n\nAnd the following facts:\nball is smooth.\neve dislikes pencil.\ncarol dislikes pencil.\nalice is a parent of bob.\ncarol owns ball.\nbob likes pencil.\neve is tired.\nalice is a sibling of frank.\nit is hot.\ngeorge is excited.\ncarol is a sibling of dave.\ndave likes pencil.\nalice owns car.\nbob is brave.\ndave likes apple.\ncarol is a sibling of eve.\nbook is clean.\ndave is weak.\nalice is angry.\ndave is a parent of eve.\n\nQUESTION:\nCould ball is old explain ball is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 926,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(ball).",
    "c": "red(X) :- old(X).\nnew(X) :- red(X).\nlight(X) :- new(X).\nhard(X) :- light(X).\nsmooth(X) :- hard(X).\ndislikes(Z,Y) :- heavy(Y), angry(Z), dislikes(A,Y).\ndirty(Z) :- small(Z), owns(U,Z), funny(U).\nbig(Z) :- rough(Z).\ndislikes(Z,Y) :- heavy(Y), tired(Z), likes(Z,W).\nsoft(X) :- soft(X), owns(B,X), happy(B).\ncurious(Z) :- funny(Z), dislikes(Z,U), heavy(U).\nparent(Y,X) :- tall(Y), tired(X), friend(Y,V).\nclean(X) :- dirty(X).\nheavy(X) :- wet(X).\ncalm(X) :- hungry(X).\nhappy(X) :- strong(X).\nclean(X) :- small(X).\nstrong(X) :- sad(X), brave(X).\ndislikes(X,Y) :- calm(X), clean(Y), likes(X,Y).\nowns(X,Y) :- busy(X), rough(Y).\nsmooth(ball).\ndislikes(eve,pencil).\ndislikes(carol,pencil).\nparent(alice,bob).\nowns(carol,ball).\nlikes(bob,pencil).\ntired(eve).\nsibling(alice,frank).\nhot.\nexcited(george).\nsibling(carol,dave).\nlikes(dave,pencil).\nowns(alice,car).\nbrave(bob).\nlikes(dave,apple).\nsibling(carol,eve).\nclean(book).\nweak(dave).\nangry(alice).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is smooth.\nFor all Y, Z, if there exists A such that object Y is heavy and person Z is angry and person A dislikes object Y, then person Z dislikes object Y.\nFor all Z, if there exists U such that object Z is small and person U owns object Z and person U is funny, then object Z is dirty.\nFor all Z, if object Z is rough, then object Z is big.\nFor all Y, Z, if there exists W such that object Y is heavy and person Z is tired and person Z likes object W, then person Z dislikes object Y.\nFor all X, if there exists B such that object X is soft and person B owns object X and person B is happy, then object X is soft.\nFor all Z, if there exists U such that person Z is funny and person Z dislikes object U and object U is heavy, then person Z is curious.\nFor all X, Y, if there exists V such that person Y is tall and person X is tired and person Y is a friend of person V, then person Y is a parent of person X.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if object X is small, then object X is clean.\nFor all X, if person X is sad and person X is brave, then person X is strong.\nFor all X, Y, if person X is calm and object Y is clean and person X likes object Y, then person X dislikes object Y.\nFor all X, Y, if person X is busy and object Y is rough, then person X owns object Y.\n\nAnd the following facts:\nball is smooth.\neve dislikes pencil.\ncarol dislikes pencil.\nalice is a parent of bob.\ncarol owns ball.\nbob likes pencil.\neve is tired.\nalice is a sibling of frank.\nit is hot.\ngeorge is excited.\ncarol is a sibling of dave.\ndave likes pencil.\nalice owns car.\nbob is brave.\ndave likes apple.\ncarol is a sibling of eve.\nbook is clean.\ndave is weak.\nalice is angry.\ndave is a parent of eve.\n\nQUESTION:\nCould ball is dirty explain ball is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 927,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(ball).",
    "c": "red(X) :- wet(X).\nsoft(X) :- red(X).\nhard(X) :- soft(X).\nsoft(X) :- hard(X).\nclean(X) :- soft(X).\nrough(X) :- clean(X).\ndirty(X) :- rough(X).\nnew(X) :- dirty(X).\nsoft(X) :- new(X).\nold(X) :- soft(X).\nsmall(Z) :- small(Z), calm(E).\nlikes(Y,Z) :- brave(Y), big(Z), friend(Y,W).\nbrave(X) :- brave(X), owns(X,B), big(B).\nhungry(X) :- busy(X), dislikes(X,U), small(U).\nsmall(X) :- big(X).\nexcited(X) :- brave(X).\nheavy(X) :- big(X), small(X).\nstrong(X) :- busy(X), excited(X).\nsmooth(X) :- light(X).\nlight(X) :- small(X), smooth(X).\nwet(ball).\nparent(dave,eve).\ndislikes(carol,apple).\nparent(frank,george).\nclever(bob).\nenemy(eve,dave).\nlikes(george,apple).\nhungry(bob).\ndislikes(dave,book).\nenemy(alice,bob).\nowns(carol,apple).\nsibling(frank,alice).\nparent(george,bob).\nsibling(bob,alice).\nangry(bob).\nlikes(bob,pencil).\nsibling(dave,carol).\nlikes(dave,phone).\nlikes(george,ball).\ntired(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all Z, if there exists E such that object Z is small and person E is calm, then object Z is small.\nFor all Y, Z, if there exists W such that person Y is brave and object Z is big and person Y is a friend of person W, then person Y likes object Z.\nFor all X, if there exists B such that person X is brave and person X owns object B and object B is big, then person X is brave.\nFor all X, if there exists U such that person X is busy and person X dislikes object U and object U is small, then person X is hungry.\nFor all X, if object X is big, then object X is small.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if object X is big and object X is small, then object X is heavy.\nFor all X, if person X is busy and person X is excited, then person X is strong.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is small and object X is smooth, then object X is light.\n\nAnd the following facts:\nball is wet.\ndave is a parent of eve.\ncarol dislikes apple.\nfrank is a parent of george.\nbob is clever.\neve is an enemy of dave.\ngeorge likes apple.\nbob is hungry.\ndave dislikes book.\nalice is an enemy of bob.\ncarol owns apple.\nfrank is a sibling of alice.\ngeorge is a parent of bob.\nbob is a sibling of alice.\nbob is angry.\nbob likes pencil.\ndave is a sibling of carol.\ndave likes phone.\ngeorge likes ball.\nfrank is tired.\n\nQUESTION:\nIs ball is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 928,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(bob).",
    "c": "red(X) :- wet(X).\nsoft(X) :- red(X).\nhard(X) :- soft(X).\nsoft(X) :- hard(X).\nclean(X) :- soft(X).\nrough(X) :- clean(X).\ndirty(X) :- rough(X).\nnew(X) :- dirty(X).\nsoft(X) :- new(X).\nold(X) :- soft(X).\nsmall(Z) :- small(Z), calm(E).\nlikes(Y,Z) :- brave(Y), big(Z), friend(Y,W).\nbrave(X) :- brave(X), owns(X,B), big(B).\nhungry(X) :- busy(X), dislikes(X,U), small(U).\nsmall(X) :- big(X).\nexcited(X) :- brave(X).\nheavy(X) :- big(X), small(X).\nstrong(X) :- busy(X), excited(X).\nsmooth(X) :- light(X).\nlight(X) :- small(X), smooth(X).\nwet(ball).\nparent(dave,eve).\ndislikes(carol,apple).\nparent(frank,george).\nclever(bob).\nenemy(eve,dave).\nlikes(george,apple).\nhungry(bob).\ndislikes(dave,book).\nenemy(alice,bob).\nowns(carol,apple).\nsibling(frank,alice).\nparent(george,bob).\nsibling(bob,alice).\nangry(bob).\nlikes(bob,pencil).\nsibling(dave,carol).\nlikes(dave,phone).\nlikes(george,ball).\ntired(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all Z, if there exists E such that object Z is small and person E is calm, then object Z is small.\nFor all Y, Z, if there exists W such that person Y is brave and object Z is big and person Y is a friend of person W, then person Y likes object Z.\nFor all X, if there exists B such that person X is brave and person X owns object B and object B is big, then person X is brave.\nFor all X, if there exists U such that person X is busy and person X dislikes object U and object U is small, then person X is hungry.\nFor all X, if object X is big, then object X is small.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if object X is big and object X is small, then object X is heavy.\nFor all X, if person X is busy and person X is excited, then person X is strong.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is small and object X is smooth, then object X is light.\n\nAnd the following facts:\nball is wet.\ndave is a parent of eve.\ncarol dislikes apple.\nfrank is a parent of george.\nbob is clever.\neve is an enemy of dave.\ngeorge likes apple.\nbob is hungry.\ndave dislikes book.\nalice is an enemy of bob.\ncarol owns apple.\nfrank is a sibling of alice.\ngeorge is a parent of bob.\nbob is a sibling of alice.\nbob is angry.\nbob likes pencil.\ndave is a sibling of carol.\ndave likes phone.\ngeorge likes ball.\nfrank is tired.\n\nQUESTION:\nIs bob is excited true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 929,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(ball).",
    "c": "red(X) :- wet(X).\nsoft(X) :- red(X).\nhard(X) :- soft(X).\nsoft(X) :- hard(X).\nclean(X) :- soft(X).\nrough(X) :- clean(X).\ndirty(X) :- rough(X).\nnew(X) :- dirty(X).\nsoft(X) :- new(X).\nold(X) :- soft(X).\nsmall(Z) :- small(Z), calm(E).\nlikes(Y,Z) :- brave(Y), big(Z), friend(Y,W).\nbrave(X) :- brave(X), owns(X,B), big(B).\nhungry(X) :- busy(X), dislikes(X,U), small(U).\nsmall(X) :- big(X).\nexcited(X) :- brave(X).\nheavy(X) :- big(X), small(X).\nstrong(X) :- busy(X), excited(X).\nsmooth(X) :- light(X).\nlight(X) :- small(X), smooth(X).\nold(ball).\nparent(dave,eve).\ndislikes(carol,apple).\nparent(frank,george).\nclever(bob).\nenemy(eve,dave).\nlikes(george,apple).\nhungry(bob).\ndislikes(dave,book).\nenemy(alice,bob).\nowns(carol,apple).\nsibling(frank,alice).\nparent(george,bob).\nsibling(bob,alice).\nangry(bob).\nlikes(bob,pencil).\nsibling(dave,carol).\nlikes(dave,phone).\nlikes(george,ball).\ntired(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all Z, if there exists E such that object Z is small and person E is calm, then object Z is small.\nFor all Y, Z, if there exists W such that person Y is brave and object Z is big and person Y is a friend of person W, then person Y likes object Z.\nFor all X, if there exists B such that person X is brave and person X owns object B and object B is big, then person X is brave.\nFor all X, if there exists U such that person X is busy and person X dislikes object U and object U is small, then person X is hungry.\nFor all X, if object X is big, then object X is small.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if object X is big and object X is small, then object X is heavy.\nFor all X, if person X is busy and person X is excited, then person X is strong.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is small and object X is smooth, then object X is light.\n\nAnd the following facts:\nball is old.\ndave is a parent of eve.\ncarol dislikes apple.\nfrank is a parent of george.\nbob is clever.\neve is an enemy of dave.\ngeorge likes apple.\nbob is hungry.\ndave dislikes book.\nalice is an enemy of bob.\ncarol owns apple.\nfrank is a sibling of alice.\ngeorge is a parent of bob.\nbob is a sibling of alice.\nbob is angry.\nbob likes pencil.\ndave is a sibling of carol.\ndave likes phone.\ngeorge likes ball.\nfrank is tired.\n\nQUESTION:\nCould ball is wet explain ball is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 930,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(frank).",
    "c": "red(X) :- wet(X).\nsoft(X) :- red(X).\nhard(X) :- soft(X).\nsoft(X) :- hard(X).\nclean(X) :- soft(X).\nrough(X) :- clean(X).\ndirty(X) :- rough(X).\nnew(X) :- dirty(X).\nsoft(X) :- new(X).\nold(X) :- soft(X).\nsmall(Z) :- small(Z), calm(E).\nlikes(Y,Z) :- brave(Y), big(Z), friend(Y,W).\nbrave(X) :- brave(X), owns(X,B), big(B).\nhungry(X) :- busy(X), dislikes(X,U), small(U).\nsmall(X) :- big(X).\nexcited(X) :- brave(X).\nheavy(X) :- big(X), small(X).\nstrong(X) :- busy(X), excited(X).\nsmooth(X) :- light(X).\nlight(X) :- small(X), smooth(X).\nold(ball).\nparent(dave,eve).\ndislikes(carol,apple).\nparent(frank,george).\nclever(bob).\nenemy(eve,dave).\nlikes(george,apple).\nhungry(bob).\ndislikes(dave,book).\nenemy(alice,bob).\nowns(carol,apple).\nsibling(frank,alice).\nparent(george,bob).\nsibling(bob,alice).\nangry(bob).\nlikes(bob,pencil).\nsibling(dave,carol).\nlikes(dave,phone).\nlikes(george,ball).\ntired(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all Z, if there exists E such that object Z is small and person E is calm, then object Z is small.\nFor all Y, Z, if there exists W such that person Y is brave and object Z is big and person Y is a friend of person W, then person Y likes object Z.\nFor all X, if there exists B such that person X is brave and person X owns object B and object B is big, then person X is brave.\nFor all X, if there exists U such that person X is busy and person X dislikes object U and object U is small, then person X is hungry.\nFor all X, if object X is big, then object X is small.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if object X is big and object X is small, then object X is heavy.\nFor all X, if person X is busy and person X is excited, then person X is strong.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is small and object X is smooth, then object X is light.\n\nAnd the following facts:\nball is old.\ndave is a parent of eve.\ncarol dislikes apple.\nfrank is a parent of george.\nbob is clever.\neve is an enemy of dave.\ngeorge likes apple.\nbob is hungry.\ndave dislikes book.\nalice is an enemy of bob.\ncarol owns apple.\nfrank is a sibling of alice.\ngeorge is a parent of bob.\nbob is a sibling of alice.\nbob is angry.\nbob likes pencil.\ndave is a sibling of carol.\ndave likes phone.\ngeorge likes ball.\nfrank is tired.\n\nQUESTION:\nCould frank is bored explain ball is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 931,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(apple).",
    "c": "hard(X) :- dirty(X).\nnew(X) :- hard(X).\nsoft(X) :- new(X).\nnew(X) :- soft(X).\nheavy(X) :- new(X).\nclean(X) :- heavy(X).\nlight(X) :- clean(X).\nred(X) :- light(X).\nheavy(X) :- red(X).\nnew(X) :- heavy(X).\nsibling(Z,Y) :- clever(Y), calm(Z), sibling(Z,V).\ntall(Y) :- sad(Y), owns(Y,W), big(W).\nsmooth(Y) :- old(Y), old(E).\nexcited(Y) :- tired(Y), friend(Y,U), busy(U).\nbrave(X) :- bored(X).\ndislikes(X,Y) :- funny(X), old(Y).\nfriendly(X) :- weak(X).\nclever(X) :- happy(X).\nparent(X,Y) :- busy(X), friendly(Y).\ntall(X) :- excited(X).\ndirty(apple).\nenemy(bob,frank).\nhungry(frank).\nfriend(alice,bob).\nold(car).\nhappy(alice).\nenemy(frank,carol).\nfriend(alice,carol).\nold(pencil).\ndislikes(carol,ball).\nparent(frank,george).\ncalm(george).\nsmooth(car).\ncalm(eve).\nhungry(george).\nlikes(eve,ball).\nparent(eve,frank).\nwet(phone).\nlikes(alice,phone).\nbored(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all Y, Z, if there exists V such that person Y is clever and person Z is calm and person Z is a sibling of person V, then person Z is a sibling of person Y.\nFor all Y, if there exists W such that person Y is sad and person Y owns object W and object W is big, then person Y is tall.\nFor all Y, if there exists E such that object Y is old and object E is old, then object Y is smooth.\nFor all Y, if there exists U such that person Y is tired and person Y is a friend of person U and person U is busy, then person Y is excited.\nFor all X, if person X is bored, then person X is brave.\nFor all X, Y, if person X is funny and object Y is old, then person X dislikes object Y.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is happy, then person X is clever.\nFor all X, Y, if person X is busy and person Y is friendly, then person X is a parent of person Y.\nFor all X, if person X is excited, then person X is tall.\n\nAnd the following facts:\napple is dirty.\nbob is an enemy of frank.\nfrank is hungry.\nalice is a friend of bob.\ncar is old.\nalice is happy.\nfrank is an enemy of carol.\nalice is a friend of carol.\npencil is old.\ncarol dislikes ball.\nfrank is a parent of george.\ngeorge is calm.\ncar is smooth.\neve is calm.\ngeorge is hungry.\neve likes ball.\neve is a parent of frank.\nphone is wet.\nalice likes phone.\ndave is bored.\n\nQUESTION:\nIs apple is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 932,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(dave).",
    "c": "hard(X) :- dirty(X).\nnew(X) :- hard(X).\nsoft(X) :- new(X).\nnew(X) :- soft(X).\nheavy(X) :- new(X).\nclean(X) :- heavy(X).\nlight(X) :- clean(X).\nred(X) :- light(X).\nheavy(X) :- red(X).\nnew(X) :- heavy(X).\nsibling(Z,Y) :- clever(Y), calm(Z), sibling(Z,V).\ntall(Y) :- sad(Y), owns(Y,W), big(W).\nsmooth(Y) :- old(Y), old(E).\nexcited(Y) :- tired(Y), friend(Y,U), busy(U).\nbrave(X) :- bored(X).\ndislikes(X,Y) :- funny(X), old(Y).\nfriendly(X) :- weak(X).\nclever(X) :- happy(X).\nparent(X,Y) :- busy(X), friendly(Y).\ntall(X) :- excited(X).\ndirty(apple).\nenemy(bob,frank).\nhungry(frank).\nfriend(alice,bob).\nold(car).\nhappy(alice).\nenemy(frank,carol).\nfriend(alice,carol).\nold(pencil).\ndislikes(carol,ball).\nparent(frank,george).\ncalm(george).\nsmooth(car).\ncalm(eve).\nhungry(george).\nlikes(eve,ball).\nparent(eve,frank).\nwet(phone).\nlikes(alice,phone).\nbored(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all Y, Z, if there exists V such that person Y is clever and person Z is calm and person Z is a sibling of person V, then person Z is a sibling of person Y.\nFor all Y, if there exists W such that person Y is sad and person Y owns object W and object W is big, then person Y is tall.\nFor all Y, if there exists E such that object Y is old and object E is old, then object Y is smooth.\nFor all Y, if there exists U such that person Y is tired and person Y is a friend of person U and person U is busy, then person Y is excited.\nFor all X, if person X is bored, then person X is brave.\nFor all X, Y, if person X is funny and object Y is old, then person X dislikes object Y.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is happy, then person X is clever.\nFor all X, Y, if person X is busy and person Y is friendly, then person X is a parent of person Y.\nFor all X, if person X is excited, then person X is tall.\n\nAnd the following facts:\napple is dirty.\nbob is an enemy of frank.\nfrank is hungry.\nalice is a friend of bob.\ncar is old.\nalice is happy.\nfrank is an enemy of carol.\nalice is a friend of carol.\npencil is old.\ncarol dislikes ball.\nfrank is a parent of george.\ngeorge is calm.\ncar is smooth.\neve is calm.\ngeorge is hungry.\neve likes ball.\neve is a parent of frank.\nphone is wet.\nalice likes phone.\ndave is bored.\n\nQUESTION:\nIs dave is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 933,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(apple).",
    "c": "hard(X) :- dirty(X).\nnew(X) :- hard(X).\nsoft(X) :- new(X).\nnew(X) :- soft(X).\nheavy(X) :- new(X).\nclean(X) :- heavy(X).\nlight(X) :- clean(X).\nred(X) :- light(X).\nheavy(X) :- red(X).\nnew(X) :- heavy(X).\nsibling(Z,Y) :- clever(Y), calm(Z), sibling(Z,V).\ntall(Y) :- sad(Y), owns(Y,W), big(W).\nsmooth(Y) :- old(Y), old(E).\nexcited(Y) :- tired(Y), friend(Y,U), busy(U).\nbrave(X) :- bored(X).\ndislikes(X,Y) :- funny(X), old(Y).\nfriendly(X) :- weak(X).\nclever(X) :- happy(X).\nparent(X,Y) :- busy(X), friendly(Y).\ntall(X) :- excited(X).\nnew(apple).\nenemy(bob,frank).\nhungry(frank).\nfriend(alice,bob).\nold(car).\nhappy(alice).\nenemy(frank,carol).\nfriend(alice,carol).\nold(pencil).\ndislikes(carol,ball).\nparent(frank,george).\ncalm(george).\nsmooth(car).\ncalm(eve).\nhungry(george).\nlikes(eve,ball).\nparent(eve,frank).\nwet(phone).\nlikes(alice,phone).\nbored(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all Y, Z, if there exists V such that person Y is clever and person Z is calm and person Z is a sibling of person V, then person Z is a sibling of person Y.\nFor all Y, if there exists W such that person Y is sad and person Y owns object W and object W is big, then person Y is tall.\nFor all Y, if there exists E such that object Y is old and object E is old, then object Y is smooth.\nFor all Y, if there exists U such that person Y is tired and person Y is a friend of person U and person U is busy, then person Y is excited.\nFor all X, if person X is bored, then person X is brave.\nFor all X, Y, if person X is funny and object Y is old, then person X dislikes object Y.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is happy, then person X is clever.\nFor all X, Y, if person X is busy and person Y is friendly, then person X is a parent of person Y.\nFor all X, if person X is excited, then person X is tall.\n\nAnd the following facts:\napple is new.\nbob is an enemy of frank.\nfrank is hungry.\nalice is a friend of bob.\ncar is old.\nalice is happy.\nfrank is an enemy of carol.\nalice is a friend of carol.\npencil is old.\ncarol dislikes ball.\nfrank is a parent of george.\ngeorge is calm.\ncar is smooth.\neve is calm.\ngeorge is hungry.\neve likes ball.\neve is a parent of frank.\nphone is wet.\nalice likes phone.\ndave is bored.\n\nQUESTION:\nCould apple is dirty explain apple is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 934,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "hard(X) :- dirty(X).\nnew(X) :- hard(X).\nsoft(X) :- new(X).\nnew(X) :- soft(X).\nheavy(X) :- new(X).\nclean(X) :- heavy(X).\nlight(X) :- clean(X).\nred(X) :- light(X).\nheavy(X) :- red(X).\nnew(X) :- heavy(X).\nsibling(Z,Y) :- clever(Y), calm(Z), sibling(Z,V).\ntall(Y) :- sad(Y), owns(Y,W), big(W).\nsmooth(Y) :- old(Y), old(E).\nexcited(Y) :- tired(Y), friend(Y,U), busy(U).\nbrave(X) :- bored(X).\ndislikes(X,Y) :- funny(X), old(Y).\nfriendly(X) :- weak(X).\nclever(X) :- happy(X).\nparent(X,Y) :- busy(X), friendly(Y).\ntall(X) :- excited(X).\nnew(apple).\nenemy(bob,frank).\nhungry(frank).\nfriend(alice,bob).\nold(car).\nhappy(alice).\nenemy(frank,carol).\nfriend(alice,carol).\nold(pencil).\ndislikes(carol,ball).\nparent(frank,george).\ncalm(george).\nsmooth(car).\ncalm(eve).\nhungry(george).\nlikes(eve,ball).\nparent(eve,frank).\nwet(phone).\nlikes(alice,phone).\nbored(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all Y, Z, if there exists V such that person Y is clever and person Z is calm and person Z is a sibling of person V, then person Z is a sibling of person Y.\nFor all Y, if there exists W such that person Y is sad and person Y owns object W and object W is big, then person Y is tall.\nFor all Y, if there exists E such that object Y is old and object E is old, then object Y is smooth.\nFor all Y, if there exists U such that person Y is tired and person Y is a friend of person U and person U is busy, then person Y is excited.\nFor all X, if person X is bored, then person X is brave.\nFor all X, Y, if person X is funny and object Y is old, then person X dislikes object Y.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is happy, then person X is clever.\nFor all X, Y, if person X is busy and person Y is friendly, then person X is a parent of person Y.\nFor all X, if person X is excited, then person X is tall.\n\nAnd the following facts:\napple is new.\nbob is an enemy of frank.\nfrank is hungry.\nalice is a friend of bob.\ncar is old.\nalice is happy.\nfrank is an enemy of carol.\nalice is a friend of carol.\npencil is old.\ncarol dislikes ball.\nfrank is a parent of george.\ngeorge is calm.\ncar is smooth.\neve is calm.\ngeorge is hungry.\neve likes ball.\neve is a parent of frank.\nphone is wet.\nalice likes phone.\ndave is bored.\n\nQUESTION:\nCould pencil is clean explain apple is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 935,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(apple).",
    "c": "soft(X) :- clean(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nsmooth(X) :- new(X).\nlight(X) :- smooth(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\ndirty(X) :- heavy(X).\nold(X) :- dirty(X).\nhard(X) :- old(X).\ncalm(Y) :- funny(Y), friend(Y,V), weak(V).\nfunny(Z) :- brave(Z).\ncalm(Y) :- angry(Y).\nsmall(Z) :- rough(Z), funny(C).\nsad(Z) :- tall(Z), dislikes(Z,U), rough(U).\ncurious(Y) :- brave(Y), funny(E).\nbored(X) :- strong(X).\nowns(X,Y) :- busy(X), rough(Y).\ncalm(X) :- tall(X), angry(X).\nfriend(X,Y) :- tall(X), clever(Y), parent(X,Y).\nclean(apple).\nenemy(alice,george).\nfriend(bob,dave).\nsibling(frank,bob).\nrough(pencil).\nfriend(eve,george).\ncalm(george).\nsibling(carol,dave).\nparent(frank,bob).\ndislikes(frank,car).\nexcited(carol).\nfriend(dave,carol).\nbusy(dave).\nsmall(car).\ncurious(carol).\nsad(carol).\nfunny(george).\nenemy(carol,bob).\nhappy(carol).\nowns(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is hard.\nFor all Y, if there exists V such that person Y is funny and person Y is a friend of person V and person V is weak, then person Y is calm.\nFor all Z, if person Z is brave, then person Z is funny.\nFor all Y, if person Y is angry, then person Y is calm.\nFor all Z, if there exists C such that object Z is rough and person C is funny, then object Z is small.\nFor all Z, if there exists U such that person Z is tall and person Z dislikes object U and object U is rough, then person Z is sad.\nFor all Y, if there exists E such that person Y is brave and person E is funny, then person Y is curious.\nFor all X, if person X is strong, then person X is bored.\nFor all X, Y, if person X is busy and object Y is rough, then person X owns object Y.\nFor all X, if person X is tall and person X is angry, then person X is calm.\nFor all X, Y, if person X is tall and person Y is clever and person X is a parent of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\napple is clean.\nalice is an enemy of george.\nbob is a friend of dave.\nfrank is a sibling of bob.\npencil is rough.\neve is a friend of george.\ngeorge is calm.\ncarol is a sibling of dave.\nfrank is a parent of bob.\nfrank dislikes car.\ncarol is excited.\ndave is a friend of carol.\ndave is busy.\ncar is small.\ncarol is curious.\ncarol is sad.\ngeorge is funny.\ncarol is an enemy of bob.\ncarol is happy.\nfrank owns book.\n\nQUESTION:\nIs apple is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 936,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(bob).",
    "c": "soft(X) :- clean(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nsmooth(X) :- new(X).\nlight(X) :- smooth(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\ndirty(X) :- heavy(X).\nold(X) :- dirty(X).\nhard(X) :- old(X).\ncalm(Y) :- funny(Y), friend(Y,V), weak(V).\nfunny(Z) :- brave(Z).\ncalm(Y) :- angry(Y).\nsmall(Z) :- rough(Z), funny(C).\nsad(Z) :- tall(Z), dislikes(Z,U), rough(U).\ncurious(Y) :- brave(Y), funny(E).\nbored(X) :- strong(X).\nowns(X,Y) :- busy(X), rough(Y).\ncalm(X) :- tall(X), angry(X).\nfriend(X,Y) :- tall(X), clever(Y), parent(X,Y).\nclean(apple).\nenemy(alice,george).\nfriend(bob,dave).\nsibling(frank,bob).\nrough(pencil).\nfriend(eve,george).\ncalm(george).\nsibling(carol,dave).\nparent(frank,bob).\ndislikes(frank,car).\nexcited(carol).\nfriend(dave,carol).\nbusy(dave).\nsmall(car).\ncurious(carol).\nsad(carol).\nfunny(george).\nenemy(carol,bob).\nhappy(carol).\nowns(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is hard.\nFor all Y, if there exists V such that person Y is funny and person Y is a friend of person V and person V is weak, then person Y is calm.\nFor all Z, if person Z is brave, then person Z is funny.\nFor all Y, if person Y is angry, then person Y is calm.\nFor all Z, if there exists C such that object Z is rough and person C is funny, then object Z is small.\nFor all Z, if there exists U such that person Z is tall and person Z dislikes object U and object U is rough, then person Z is sad.\nFor all Y, if there exists E such that person Y is brave and person E is funny, then person Y is curious.\nFor all X, if person X is strong, then person X is bored.\nFor all X, Y, if person X is busy and object Y is rough, then person X owns object Y.\nFor all X, if person X is tall and person X is angry, then person X is calm.\nFor all X, Y, if person X is tall and person Y is clever and person X is a parent of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\napple is clean.\nalice is an enemy of george.\nbob is a friend of dave.\nfrank is a sibling of bob.\npencil is rough.\neve is a friend of george.\ngeorge is calm.\ncarol is a sibling of dave.\nfrank is a parent of bob.\nfrank dislikes car.\ncarol is excited.\ndave is a friend of carol.\ndave is busy.\ncar is small.\ncarol is curious.\ncarol is sad.\ngeorge is funny.\ncarol is an enemy of bob.\ncarol is happy.\nfrank owns book.\n\nQUESTION:\nIs bob is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 937,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(apple).",
    "c": "soft(X) :- clean(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nsmooth(X) :- new(X).\nlight(X) :- smooth(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\ndirty(X) :- heavy(X).\nold(X) :- dirty(X).\nhard(X) :- old(X).\ncalm(Y) :- funny(Y), friend(Y,V), weak(V).\nfunny(Z) :- brave(Z).\ncalm(Y) :- angry(Y).\nsmall(Z) :- rough(Z), funny(C).\nsad(Z) :- tall(Z), dislikes(Z,U), rough(U).\ncurious(Y) :- brave(Y), funny(E).\nbored(X) :- strong(X).\nowns(X,Y) :- busy(X), rough(Y).\ncalm(X) :- tall(X), angry(X).\nfriend(X,Y) :- tall(X), clever(Y), parent(X,Y).\nhard(apple).\nenemy(alice,george).\nfriend(bob,dave).\nsibling(frank,bob).\nrough(pencil).\nfriend(eve,george).\ncalm(george).\nsibling(carol,dave).\nparent(frank,bob).\ndislikes(frank,car).\nexcited(carol).\nfriend(dave,carol).\nbusy(dave).\nsmall(car).\ncurious(carol).\nsad(carol).\nfunny(george).\nenemy(carol,bob).\nhappy(carol).\nowns(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is hard.\nFor all Y, if there exists V such that person Y is funny and person Y is a friend of person V and person V is weak, then person Y is calm.\nFor all Z, if person Z is brave, then person Z is funny.\nFor all Y, if person Y is angry, then person Y is calm.\nFor all Z, if there exists C such that object Z is rough and person C is funny, then object Z is small.\nFor all Z, if there exists U such that person Z is tall and person Z dislikes object U and object U is rough, then person Z is sad.\nFor all Y, if there exists E such that person Y is brave and person E is funny, then person Y is curious.\nFor all X, if person X is strong, then person X is bored.\nFor all X, Y, if person X is busy and object Y is rough, then person X owns object Y.\nFor all X, if person X is tall and person X is angry, then person X is calm.\nFor all X, Y, if person X is tall and person Y is clever and person X is a parent of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\napple is hard.\nalice is an enemy of george.\nbob is a friend of dave.\nfrank is a sibling of bob.\npencil is rough.\neve is a friend of george.\ngeorge is calm.\ncarol is a sibling of dave.\nfrank is a parent of bob.\nfrank dislikes car.\ncarol is excited.\ndave is a friend of carol.\ndave is busy.\ncar is small.\ncarol is curious.\ncarol is sad.\ngeorge is funny.\ncarol is an enemy of bob.\ncarol is happy.\nfrank owns book.\n\nQUESTION:\nCould apple is clean explain apple is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 938,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(ball).",
    "c": "soft(X) :- clean(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nsmooth(X) :- new(X).\nlight(X) :- smooth(X).\nbig(X) :- light(X).\nheavy(X) :- big(X).\ndirty(X) :- heavy(X).\nold(X) :- dirty(X).\nhard(X) :- old(X).\ncalm(Y) :- funny(Y), friend(Y,V), weak(V).\nfunny(Z) :- brave(Z).\ncalm(Y) :- angry(Y).\nsmall(Z) :- rough(Z), funny(C).\nsad(Z) :- tall(Z), dislikes(Z,U), rough(U).\ncurious(Y) :- brave(Y), funny(E).\nbored(X) :- strong(X).\nowns(X,Y) :- busy(X), rough(Y).\ncalm(X) :- tall(X), angry(X).\nfriend(X,Y) :- tall(X), clever(Y), parent(X,Y).\nhard(apple).\nenemy(alice,george).\nfriend(bob,dave).\nsibling(frank,bob).\nrough(pencil).\nfriend(eve,george).\ncalm(george).\nsibling(carol,dave).\nparent(frank,bob).\ndislikes(frank,car).\nexcited(carol).\nfriend(dave,carol).\nbusy(dave).\nsmall(car).\ncurious(carol).\nsad(carol).\nfunny(george).\nenemy(carol,bob).\nhappy(carol).\nowns(frank,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is dirty, then object X is old.\nFor all X, if object X is old, then object X is hard.\nFor all Y, if there exists V such that person Y is funny and person Y is a friend of person V and person V is weak, then person Y is calm.\nFor all Z, if person Z is brave, then person Z is funny.\nFor all Y, if person Y is angry, then person Y is calm.\nFor all Z, if there exists C such that object Z is rough and person C is funny, then object Z is small.\nFor all Z, if there exists U such that person Z is tall and person Z dislikes object U and object U is rough, then person Z is sad.\nFor all Y, if there exists E such that person Y is brave and person E is funny, then person Y is curious.\nFor all X, if person X is strong, then person X is bored.\nFor all X, Y, if person X is busy and object Y is rough, then person X owns object Y.\nFor all X, if person X is tall and person X is angry, then person X is calm.\nFor all X, Y, if person X is tall and person Y is clever and person X is a parent of person Y, then person X is a friend of person Y.\n\nAnd the following facts:\napple is hard.\nalice is an enemy of george.\nbob is a friend of dave.\nfrank is a sibling of bob.\npencil is rough.\neve is a friend of george.\ngeorge is calm.\ncarol is a sibling of dave.\nfrank is a parent of bob.\nfrank dislikes car.\ncarol is excited.\ndave is a friend of carol.\ndave is busy.\ncar is small.\ncarol is curious.\ncarol is sad.\ngeorge is funny.\ncarol is an enemy of bob.\ncarol is happy.\nfrank owns book.\n\nQUESTION:\nCould ball is rough explain apple is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 939,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(book).",
    "c": "rough(X) :- new(X).\nold(X) :- rough(X).\nbig(X) :- old(X).\ndirty(X) :- big(X).\nhard(X) :- dirty(X).\nsmall(X) :- hard(X).\nred(X) :- small(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nsad(X) :- tall(X), tall(D).\nclean(X) :- wet(X).\ncurious(Y) :- hungry(Y).\nclean(Y) :- light(Y).\nlight(Z) :- clean(Z), dislikes(U,Z), tired(U).\nbrave(X) :- weak(X), owns(X,U), light(U).\nhungry(X) :- curious(X), parent(X,W), weak(W).\nangry(X) :- sad(X).\nhappy(X) :- angry(X).\ncurious(X) :- tall(X), tired(X).\nnew(book).\nenemy(dave,alice).\nbusy(bob).\nowns(frank,pencil).\ntired(george).\nbored(alice).\nowns(dave,ball).\nfriend(alice,eve).\ndislikes(dave,book).\ntired(alice).\nlight(car).\nfriend(alice,frank).\nfriend(carol,eve).\nowns(bob,car).\nlikes(george,pencil).\nlikes(alice,phone).\nlikes(george,apple).\nparent(bob,alice).\nfriend(frank,alice).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if there exists D such that person X is tall and person D is tall, then person X is sad.\nFor all X, if object X is wet, then object X is clean.\nFor all Y, if person Y is hungry, then person Y is curious.\nFor all Y, if object Y is light, then object Y is clean.\nFor all Z, if there exists U such that object Z is clean and person U dislikes object Z and person U is tired, then object Z is light.\nFor all X, if there exists U such that person X is weak and person X owns object U and object U is light, then person X is brave.\nFor all X, if there exists W such that person X is curious and person X is a parent of person W and person W is weak, then person X is hungry.\nFor all X, if person X is sad, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all X, if person X is tall and person X is tired, then person X is curious.\n\nAnd the following facts:\nbook is new.\ndave is an enemy of alice.\nbob is busy.\nfrank owns pencil.\ngeorge is tired.\nalice is bored.\ndave owns ball.\nalice is a friend of eve.\ndave dislikes book.\nalice is tired.\ncar is light.\nalice is a friend of frank.\ncarol is a friend of eve.\nbob owns car.\ngeorge likes pencil.\nalice likes phone.\ngeorge likes apple.\nbob is a parent of alice.\nfrank is a friend of alice.\nbob is an enemy of frank.\n\nQUESTION:\nIs book is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 940,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(alice).",
    "c": "rough(X) :- new(X).\nold(X) :- rough(X).\nbig(X) :- old(X).\ndirty(X) :- big(X).\nhard(X) :- dirty(X).\nsmall(X) :- hard(X).\nred(X) :- small(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nsad(X) :- tall(X), tall(D).\nclean(X) :- wet(X).\ncurious(Y) :- hungry(Y).\nclean(Y) :- light(Y).\nlight(Z) :- clean(Z), dislikes(U,Z), tired(U).\nbrave(X) :- weak(X), owns(X,U), light(U).\nhungry(X) :- curious(X), parent(X,W), weak(W).\nangry(X) :- sad(X).\nhappy(X) :- angry(X).\ncurious(X) :- tall(X), tired(X).\nnew(book).\nenemy(dave,alice).\nbusy(bob).\nowns(frank,pencil).\ntired(george).\nbored(alice).\nowns(dave,ball).\nfriend(alice,eve).\ndislikes(dave,book).\ntired(alice).\nlight(car).\nfriend(alice,frank).\nfriend(carol,eve).\nowns(bob,car).\nlikes(george,pencil).\nlikes(alice,phone).\nlikes(george,apple).\nparent(bob,alice).\nfriend(frank,alice).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if there exists D such that person X is tall and person D is tall, then person X is sad.\nFor all X, if object X is wet, then object X is clean.\nFor all Y, if person Y is hungry, then person Y is curious.\nFor all Y, if object Y is light, then object Y is clean.\nFor all Z, if there exists U such that object Z is clean and person U dislikes object Z and person U is tired, then object Z is light.\nFor all X, if there exists U such that person X is weak and person X owns object U and object U is light, then person X is brave.\nFor all X, if there exists W such that person X is curious and person X is a parent of person W and person W is weak, then person X is hungry.\nFor all X, if person X is sad, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all X, if person X is tall and person X is tired, then person X is curious.\n\nAnd the following facts:\nbook is new.\ndave is an enemy of alice.\nbob is busy.\nfrank owns pencil.\ngeorge is tired.\nalice is bored.\ndave owns ball.\nalice is a friend of eve.\ndave dislikes book.\nalice is tired.\ncar is light.\nalice is a friend of frank.\ncarol is a friend of eve.\nbob owns car.\ngeorge likes pencil.\nalice likes phone.\ngeorge likes apple.\nbob is a parent of alice.\nfrank is a friend of alice.\nbob is an enemy of frank.\n\nQUESTION:\nIs alice is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 941,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(book).",
    "c": "rough(X) :- new(X).\nold(X) :- rough(X).\nbig(X) :- old(X).\ndirty(X) :- big(X).\nhard(X) :- dirty(X).\nsmall(X) :- hard(X).\nred(X) :- small(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nsad(X) :- tall(X), tall(D).\nclean(X) :- wet(X).\ncurious(Y) :- hungry(Y).\nclean(Y) :- light(Y).\nlight(Z) :- clean(Z), dislikes(U,Z), tired(U).\nbrave(X) :- weak(X), owns(X,U), light(U).\nhungry(X) :- curious(X), parent(X,W), weak(W).\nangry(X) :- sad(X).\nhappy(X) :- angry(X).\ncurious(X) :- tall(X), tired(X).\nsoft(book).\nenemy(dave,alice).\nbusy(bob).\nowns(frank,pencil).\ntired(george).\nbored(alice).\nowns(dave,ball).\nfriend(alice,eve).\ndislikes(dave,book).\ntired(alice).\nlight(car).\nfriend(alice,frank).\nfriend(carol,eve).\nowns(bob,car).\nlikes(george,pencil).\nlikes(alice,phone).\nlikes(george,apple).\nparent(bob,alice).\nfriend(frank,alice).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if there exists D such that person X is tall and person D is tall, then person X is sad.\nFor all X, if object X is wet, then object X is clean.\nFor all Y, if person Y is hungry, then person Y is curious.\nFor all Y, if object Y is light, then object Y is clean.\nFor all Z, if there exists U such that object Z is clean and person U dislikes object Z and person U is tired, then object Z is light.\nFor all X, if there exists U such that person X is weak and person X owns object U and object U is light, then person X is brave.\nFor all X, if there exists W such that person X is curious and person X is a parent of person W and person W is weak, then person X is hungry.\nFor all X, if person X is sad, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all X, if person X is tall and person X is tired, then person X is curious.\n\nAnd the following facts:\nbook is soft.\ndave is an enemy of alice.\nbob is busy.\nfrank owns pencil.\ngeorge is tired.\nalice is bored.\ndave owns ball.\nalice is a friend of eve.\ndave dislikes book.\nalice is tired.\ncar is light.\nalice is a friend of frank.\ncarol is a friend of eve.\nbob owns car.\ngeorge likes pencil.\nalice likes phone.\ngeorge likes apple.\nbob is a parent of alice.\nfrank is a friend of alice.\nbob is an enemy of frank.\n\nQUESTION:\nCould book is new explain book is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 942,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(dave).",
    "c": "rough(X) :- new(X).\nold(X) :- rough(X).\nbig(X) :- old(X).\ndirty(X) :- big(X).\nhard(X) :- dirty(X).\nsmall(X) :- hard(X).\nred(X) :- small(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nsad(X) :- tall(X), tall(D).\nclean(X) :- wet(X).\ncurious(Y) :- hungry(Y).\nclean(Y) :- light(Y).\nlight(Z) :- clean(Z), dislikes(U,Z), tired(U).\nbrave(X) :- weak(X), owns(X,U), light(U).\nhungry(X) :- curious(X), parent(X,W), weak(W).\nangry(X) :- sad(X).\nhappy(X) :- angry(X).\ncurious(X) :- tall(X), tired(X).\nsoft(book).\nenemy(dave,alice).\nbusy(bob).\nowns(frank,pencil).\ntired(george).\nbored(alice).\nowns(dave,ball).\nfriend(alice,eve).\ndislikes(dave,book).\ntired(alice).\nlight(car).\nfriend(alice,frank).\nfriend(carol,eve).\nowns(bob,car).\nlikes(george,pencil).\nlikes(alice,phone).\nlikes(george,apple).\nparent(bob,alice).\nfriend(frank,alice).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if there exists D such that person X is tall and person D is tall, then person X is sad.\nFor all X, if object X is wet, then object X is clean.\nFor all Y, if person Y is hungry, then person Y is curious.\nFor all Y, if object Y is light, then object Y is clean.\nFor all Z, if there exists U such that object Z is clean and person U dislikes object Z and person U is tired, then object Z is light.\nFor all X, if there exists U such that person X is weak and person X owns object U and object U is light, then person X is brave.\nFor all X, if there exists W such that person X is curious and person X is a parent of person W and person W is weak, then person X is hungry.\nFor all X, if person X is sad, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all X, if person X is tall and person X is tired, then person X is curious.\n\nAnd the following facts:\nbook is soft.\ndave is an enemy of alice.\nbob is busy.\nfrank owns pencil.\ngeorge is tired.\nalice is bored.\ndave owns ball.\nalice is a friend of eve.\ndave dislikes book.\nalice is tired.\ncar is light.\nalice is a friend of frank.\ncarol is a friend of eve.\nbob owns car.\ngeorge likes pencil.\nalice likes phone.\ngeorge likes apple.\nbob is a parent of alice.\nfrank is a friend of alice.\nbob is an enemy of frank.\n\nQUESTION:\nCould dave is funny explain book is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 943,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(pencil).",
    "c": "clean(X) :- red(X).\nred(X) :- clean(X).\nsoft(X) :- red(X).\nnew(X) :- soft(X).\nold(X) :- new(X).\nsoft(X) :- old(X).\nred(X) :- soft(X).\nlight(X) :- red(X).\nnew(X) :- light(X).\nheavy(X) :- new(X).\nsoft(X) :- heavy(X).\nred(X) :- soft(X).\nclean(X) :- red(X).\nheavy(X) :- clean(X).\nnew(X) :- heavy(X).\nsmooth(X) :- new(X).\nnew(X) :- smooth(X).\nsmooth(X) :- new(X).\nwet(X) :- smooth(X).\nrough(X) :- wet(X).\nred(pencil).\nenemy(alice,bob).\nparent(george,frank).\nbusy(frank).\nfriend(dave,eve).\nenemy(dave,frank).\ntall(carol).\nsibling(dave,eve).\nbrave(carol).\ndislikes(dave,ball).\ndislikes(alice,car).\nfriend(dave,alice).\nangry(frank).\nparent(eve,alice).\nenemy(frank,alice).\nparent(dave,george).\nweak(bob).\nbrave(alice).\ndislikes(eve,book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\n\nAnd the following facts:\npencil is red.\nalice is an enemy of bob.\ngeorge is a parent of frank.\nfrank is busy.\ndave is a friend of eve.\ndave is an enemy of frank.\ncarol is tall.\ndave is a sibling of eve.\ncarol is brave.\ndave dislikes ball.\nalice dislikes car.\ndave is a friend of alice.\nfrank is angry.\neve is a parent of alice.\nfrank is an enemy of alice.\ndave is a parent of george.\nbob is weak.\nalice is brave.\neve dislikes book.\ndave owns phone.\n\nQUESTION:\nIs pencil is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 944,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(carol).",
    "c": "clean(X) :- red(X).\nred(X) :- clean(X).\nsoft(X) :- red(X).\nnew(X) :- soft(X).\nold(X) :- new(X).\nsoft(X) :- old(X).\nred(X) :- soft(X).\nlight(X) :- red(X).\nnew(X) :- light(X).\nheavy(X) :- new(X).\nsoft(X) :- heavy(X).\nred(X) :- soft(X).\nclean(X) :- red(X).\nheavy(X) :- clean(X).\nnew(X) :- heavy(X).\nsmooth(X) :- new(X).\nnew(X) :- smooth(X).\nsmooth(X) :- new(X).\nwet(X) :- smooth(X).\nrough(X) :- wet(X).\nred(pencil).\nenemy(alice,bob).\nparent(george,frank).\nbusy(frank).\nfriend(dave,eve).\nenemy(dave,frank).\ntall(carol).\nsibling(dave,eve).\nbrave(carol).\ndislikes(dave,ball).\ndislikes(alice,car).\nfriend(dave,alice).\nangry(frank).\nparent(eve,alice).\nenemy(frank,alice).\nparent(dave,george).\nweak(bob).\nbrave(alice).\ndislikes(eve,book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\n\nAnd the following facts:\npencil is red.\nalice is an enemy of bob.\ngeorge is a parent of frank.\nfrank is busy.\ndave is a friend of eve.\ndave is an enemy of frank.\ncarol is tall.\ndave is a sibling of eve.\ncarol is brave.\ndave dislikes ball.\nalice dislikes car.\ndave is a friend of alice.\nfrank is angry.\neve is a parent of alice.\nfrank is an enemy of alice.\ndave is a parent of george.\nbob is weak.\nalice is brave.\neve dislikes book.\ndave owns phone.\n\nQUESTION:\nIs carol is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 945,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(pencil).",
    "c": "clean(X) :- red(X).\nred(X) :- clean(X).\nsoft(X) :- red(X).\nnew(X) :- soft(X).\nold(X) :- new(X).\nsoft(X) :- old(X).\nred(X) :- soft(X).\nlight(X) :- red(X).\nnew(X) :- light(X).\nheavy(X) :- new(X).\nsoft(X) :- heavy(X).\nred(X) :- soft(X).\nclean(X) :- red(X).\nheavy(X) :- clean(X).\nnew(X) :- heavy(X).\nsmooth(X) :- new(X).\nnew(X) :- smooth(X).\nsmooth(X) :- new(X).\nwet(X) :- smooth(X).\nrough(X) :- wet(X).\nrough(pencil).\nenemy(alice,bob).\nparent(george,frank).\nbusy(frank).\nfriend(dave,eve).\nenemy(dave,frank).\ntall(carol).\nsibling(dave,eve).\nbrave(carol).\ndislikes(dave,ball).\ndislikes(alice,car).\nfriend(dave,alice).\nangry(frank).\nparent(eve,alice).\nenemy(frank,alice).\nparent(dave,george).\nweak(bob).\nbrave(alice).\ndislikes(eve,book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\n\nAnd the following facts:\npencil is rough.\nalice is an enemy of bob.\ngeorge is a parent of frank.\nfrank is busy.\ndave is a friend of eve.\ndave is an enemy of frank.\ncarol is tall.\ndave is a sibling of eve.\ncarol is brave.\ndave dislikes ball.\nalice dislikes car.\ndave is a friend of alice.\nfrank is angry.\neve is a parent of alice.\nfrank is an enemy of alice.\ndave is a parent of george.\nbob is weak.\nalice is brave.\neve dislikes book.\ndave owns phone.\n\nQUESTION:\nCould pencil is red explain pencil is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 946,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(frank).",
    "c": "clean(X) :- red(X).\nred(X) :- clean(X).\nsoft(X) :- red(X).\nnew(X) :- soft(X).\nold(X) :- new(X).\nsoft(X) :- old(X).\nred(X) :- soft(X).\nlight(X) :- red(X).\nnew(X) :- light(X).\nheavy(X) :- new(X).\nsoft(X) :- heavy(X).\nred(X) :- soft(X).\nclean(X) :- red(X).\nheavy(X) :- clean(X).\nnew(X) :- heavy(X).\nsmooth(X) :- new(X).\nnew(X) :- smooth(X).\nsmooth(X) :- new(X).\nwet(X) :- smooth(X).\nrough(X) :- wet(X).\nrough(pencil).\nenemy(alice,bob).\nparent(george,frank).\nbusy(frank).\nfriend(dave,eve).\nenemy(dave,frank).\ntall(carol).\nsibling(dave,eve).\nbrave(carol).\ndislikes(dave,ball).\ndislikes(alice,car).\nfriend(dave,alice).\nangry(frank).\nparent(eve,alice).\nenemy(frank,alice).\nparent(dave,george).\nweak(bob).\nbrave(alice).\ndislikes(eve,book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\n\nAnd the following facts:\npencil is rough.\nalice is an enemy of bob.\ngeorge is a parent of frank.\nfrank is busy.\ndave is a friend of eve.\ndave is an enemy of frank.\ncarol is tall.\ndave is a sibling of eve.\ncarol is brave.\ndave dislikes ball.\nalice dislikes car.\ndave is a friend of alice.\nfrank is angry.\neve is a parent of alice.\nfrank is an enemy of alice.\ndave is a parent of george.\nbob is weak.\nalice is brave.\neve dislikes book.\ndave owns phone.\n\nQUESTION:\nCould frank is calm explain pencil is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 947,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(carol).",
    "c": "tall(X) :- weak(X).\nbored(X) :- tall(X).\nhungry(X) :- bored(X).\ncurious(X) :- hungry(X).\nclever(X) :- curious(X).\nfriendly(X) :- clever(X).\nangry(X) :- friendly(X).\ncurious(X) :- angry(X).\nsad(X) :- curious(X).\nstrong(X) :- sad(X).\nbusy(X) :- strong(X).\nfriendly(X) :- busy(X).\nsad(X) :- friendly(X).\nbrave(X) :- sad(X).\nbored(X) :- brave(X).\nsad(X) :- bored(X).\nfunny(X) :- sad(X).\ncalm(X) :- funny(X).\nhappy(X) :- calm(X).\nclever(X) :- happy(X).\nweak(carol).\nsmooth(book).\nsibling(eve,bob).\nowns(alice,pencil).\nenemy(carol,alice).\ndislikes(alice,book).\nenemy(eve,george).\nfriend(alice,bob).\nheavy(phone).\ndislikes(frank,apple).\nlikes(george,phone).\nowns(bob,car).\ndislikes(bob,apple).\nfriend(bob,dave).\nrough(car).\nfriend(frank,george).\nhard(car).\nowns(alice,ball).\nparent(carol,dave).\nlikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\n\nAnd the following facts:\ncarol is weak.\nbook is smooth.\neve is a sibling of bob.\nalice owns pencil.\ncarol is an enemy of alice.\nalice dislikes book.\neve is an enemy of george.\nalice is a friend of bob.\nphone is heavy.\nfrank dislikes apple.\ngeorge likes phone.\nbob owns car.\nbob dislikes apple.\nbob is a friend of dave.\ncar is rough.\nfrank is a friend of george.\ncar is hard.\nalice owns ball.\ncarol is a parent of dave.\nalice likes pencil.\n\nQUESTION:\nIs carol is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 948,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(george).",
    "c": "tall(X) :- weak(X).\nbored(X) :- tall(X).\nhungry(X) :- bored(X).\ncurious(X) :- hungry(X).\nclever(X) :- curious(X).\nfriendly(X) :- clever(X).\nangry(X) :- friendly(X).\ncurious(X) :- angry(X).\nsad(X) :- curious(X).\nstrong(X) :- sad(X).\nbusy(X) :- strong(X).\nfriendly(X) :- busy(X).\nsad(X) :- friendly(X).\nbrave(X) :- sad(X).\nbored(X) :- brave(X).\nsad(X) :- bored(X).\nfunny(X) :- sad(X).\ncalm(X) :- funny(X).\nhappy(X) :- calm(X).\nclever(X) :- happy(X).\nweak(carol).\nsmooth(book).\nsibling(eve,bob).\nowns(alice,pencil).\nenemy(carol,alice).\ndislikes(alice,book).\nenemy(eve,george).\nfriend(alice,bob).\nheavy(phone).\ndislikes(frank,apple).\nlikes(george,phone).\nowns(bob,car).\ndislikes(bob,apple).\nfriend(bob,dave).\nrough(car).\nfriend(frank,george).\nhard(car).\nowns(alice,ball).\nparent(carol,dave).\nlikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\n\nAnd the following facts:\ncarol is weak.\nbook is smooth.\neve is a sibling of bob.\nalice owns pencil.\ncarol is an enemy of alice.\nalice dislikes book.\neve is an enemy of george.\nalice is a friend of bob.\nphone is heavy.\nfrank dislikes apple.\ngeorge likes phone.\nbob owns car.\nbob dislikes apple.\nbob is a friend of dave.\ncar is rough.\nfrank is a friend of george.\ncar is hard.\nalice owns ball.\ncarol is a parent of dave.\nalice likes pencil.\n\nQUESTION:\nIs george is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 949,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(carol).",
    "c": "tall(X) :- weak(X).\nbored(X) :- tall(X).\nhungry(X) :- bored(X).\ncurious(X) :- hungry(X).\nclever(X) :- curious(X).\nfriendly(X) :- clever(X).\nangry(X) :- friendly(X).\ncurious(X) :- angry(X).\nsad(X) :- curious(X).\nstrong(X) :- sad(X).\nbusy(X) :- strong(X).\nfriendly(X) :- busy(X).\nsad(X) :- friendly(X).\nbrave(X) :- sad(X).\nbored(X) :- brave(X).\nsad(X) :- bored(X).\nfunny(X) :- sad(X).\ncalm(X) :- funny(X).\nhappy(X) :- calm(X).\nclever(X) :- happy(X).\nclever(carol).\nsmooth(book).\nsibling(eve,bob).\nowns(alice,pencil).\nenemy(carol,alice).\ndislikes(alice,book).\nenemy(eve,george).\nfriend(alice,bob).\nheavy(phone).\ndislikes(frank,apple).\nlikes(george,phone).\nowns(bob,car).\ndislikes(bob,apple).\nfriend(bob,dave).\nrough(car).\nfriend(frank,george).\nhard(car).\nowns(alice,ball).\nparent(carol,dave).\nlikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\n\nAnd the following facts:\ncarol is clever.\nbook is smooth.\neve is a sibling of bob.\nalice owns pencil.\ncarol is an enemy of alice.\nalice dislikes book.\neve is an enemy of george.\nalice is a friend of bob.\nphone is heavy.\nfrank dislikes apple.\ngeorge likes phone.\nbob owns car.\nbob dislikes apple.\nbob is a friend of dave.\ncar is rough.\nfrank is a friend of george.\ncar is hard.\nalice owns ball.\ncarol is a parent of dave.\nalice likes pencil.\n\nQUESTION:\nCould carol is weak explain carol is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 950,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(pencil).",
    "c": "tall(X) :- weak(X).\nbored(X) :- tall(X).\nhungry(X) :- bored(X).\ncurious(X) :- hungry(X).\nclever(X) :- curious(X).\nfriendly(X) :- clever(X).\nangry(X) :- friendly(X).\ncurious(X) :- angry(X).\nsad(X) :- curious(X).\nstrong(X) :- sad(X).\nbusy(X) :- strong(X).\nfriendly(X) :- busy(X).\nsad(X) :- friendly(X).\nbrave(X) :- sad(X).\nbored(X) :- brave(X).\nsad(X) :- bored(X).\nfunny(X) :- sad(X).\ncalm(X) :- funny(X).\nhappy(X) :- calm(X).\nclever(X) :- happy(X).\nclever(carol).\nsmooth(book).\nsibling(eve,bob).\nowns(alice,pencil).\nenemy(carol,alice).\ndislikes(alice,book).\nenemy(eve,george).\nfriend(alice,bob).\nheavy(phone).\ndislikes(frank,apple).\nlikes(george,phone).\nowns(bob,car).\ndislikes(bob,apple).\nfriend(bob,dave).\nrough(car).\nfriend(frank,george).\nhard(car).\nowns(alice,ball).\nparent(carol,dave).\nlikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\n\nAnd the following facts:\ncarol is clever.\nbook is smooth.\neve is a sibling of bob.\nalice owns pencil.\ncarol is an enemy of alice.\nalice dislikes book.\neve is an enemy of george.\nalice is a friend of bob.\nphone is heavy.\nfrank dislikes apple.\ngeorge likes phone.\nbob owns car.\nbob dislikes apple.\nbob is a friend of dave.\ncar is rough.\nfrank is a friend of george.\ncar is hard.\nalice owns ball.\ncarol is a parent of dave.\nalice likes pencil.\n\nQUESTION:\nCould pencil is rough explain carol is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 951,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "wet(X) :- rough(X).\nhard(X) :- wet(X).\nold(X) :- hard(X).\nred(X) :- old(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nclean(X) :- soft(X).\nlight(X) :- clean(X).\nbig(X) :- light(X).\nsmall(X) :- big(X).\ndirty(X) :- small(X).\nnew(X) :- dirty(X).\nwet(X) :- new(X).\nsmooth(X) :- wet(X).\nrough(X) :- smooth(X).\nred(X) :- rough(X).\nheavy(X) :- red(X).\nlight(X) :- heavy(X).\nlight(X) :- light(X).\nrough(ball).\nsibling(frank,alice).\nfriend(dave,alice).\nparent(bob,alice).\nstrong(george).\nfriend(eve,carol).\nparent(eve,dave).\nfriend(george,frank).\nenemy(frank,george).\nowns(bob,pencil).\nlikes(alice,apple).\nenemy(frank,dave).\nlikes(bob,apple).\nsibling(bob,dave).\ncold.\nweak(dave).\nbored(eve).\nlikes(bob,phone).\nsibling(carol,dave).\nparent(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is light.\n\nAnd the following facts:\nball is rough.\nfrank is a sibling of alice.\ndave is a friend of alice.\nbob is a parent of alice.\ngeorge is strong.\neve is a friend of carol.\neve is a parent of dave.\ngeorge is a friend of frank.\nfrank is an enemy of george.\nbob owns pencil.\nalice likes apple.\nfrank is an enemy of dave.\nbob likes apple.\nbob is a sibling of dave.\nit is cold.\ndave is weak.\neve is bored.\nbob likes phone.\ncarol is a sibling of dave.\nalice is a parent of carol.\n\nQUESTION:\nIs ball is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 952,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(bob).",
    "c": "wet(X) :- rough(X).\nhard(X) :- wet(X).\nold(X) :- hard(X).\nred(X) :- old(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nclean(X) :- soft(X).\nlight(X) :- clean(X).\nbig(X) :- light(X).\nsmall(X) :- big(X).\ndirty(X) :- small(X).\nnew(X) :- dirty(X).\nwet(X) :- new(X).\nsmooth(X) :- wet(X).\nrough(X) :- smooth(X).\nred(X) :- rough(X).\nheavy(X) :- red(X).\nlight(X) :- heavy(X).\nlight(X) :- light(X).\nrough(ball).\nsibling(frank,alice).\nfriend(dave,alice).\nparent(bob,alice).\nstrong(george).\nfriend(eve,carol).\nparent(eve,dave).\nfriend(george,frank).\nenemy(frank,george).\nowns(bob,pencil).\nlikes(alice,apple).\nenemy(frank,dave).\nlikes(bob,apple).\nsibling(bob,dave).\ncold.\nweak(dave).\nbored(eve).\nlikes(bob,phone).\nsibling(carol,dave).\nparent(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is light.\n\nAnd the following facts:\nball is rough.\nfrank is a sibling of alice.\ndave is a friend of alice.\nbob is a parent of alice.\ngeorge is strong.\neve is a friend of carol.\neve is a parent of dave.\ngeorge is a friend of frank.\nfrank is an enemy of george.\nbob owns pencil.\nalice likes apple.\nfrank is an enemy of dave.\nbob likes apple.\nbob is a sibling of dave.\nit is cold.\ndave is weak.\neve is bored.\nbob likes phone.\ncarol is a sibling of dave.\nalice is a parent of carol.\n\nQUESTION:\nIs bob is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 953,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(ball).",
    "c": "wet(X) :- rough(X).\nhard(X) :- wet(X).\nold(X) :- hard(X).\nred(X) :- old(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nclean(X) :- soft(X).\nlight(X) :- clean(X).\nbig(X) :- light(X).\nsmall(X) :- big(X).\ndirty(X) :- small(X).\nnew(X) :- dirty(X).\nwet(X) :- new(X).\nsmooth(X) :- wet(X).\nrough(X) :- smooth(X).\nred(X) :- rough(X).\nheavy(X) :- red(X).\nlight(X) :- heavy(X).\nlight(X) :- light(X).\nlight(ball).\nsibling(frank,alice).\nfriend(dave,alice).\nparent(bob,alice).\nstrong(george).\nfriend(eve,carol).\nparent(eve,dave).\nfriend(george,frank).\nenemy(frank,george).\nowns(bob,pencil).\nlikes(alice,apple).\nenemy(frank,dave).\nlikes(bob,apple).\nsibling(bob,dave).\ncold.\nweak(dave).\nbored(eve).\nlikes(bob,phone).\nsibling(carol,dave).\nparent(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is light.\n\nAnd the following facts:\nball is light.\nfrank is a sibling of alice.\ndave is a friend of alice.\nbob is a parent of alice.\ngeorge is strong.\neve is a friend of carol.\neve is a parent of dave.\ngeorge is a friend of frank.\nfrank is an enemy of george.\nbob owns pencil.\nalice likes apple.\nfrank is an enemy of dave.\nbob likes apple.\nbob is a sibling of dave.\nit is cold.\ndave is weak.\neve is bored.\nbob likes phone.\ncarol is a sibling of dave.\nalice is a parent of carol.\n\nQUESTION:\nCould ball is rough explain ball is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 954,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "sad(bob).",
    "c": "wet(X) :- rough(X).\nhard(X) :- wet(X).\nold(X) :- hard(X).\nred(X) :- old(X).\nheavy(X) :- red(X).\nsmooth(X) :- heavy(X).\nsoft(X) :- smooth(X).\nclean(X) :- soft(X).\nlight(X) :- clean(X).\nbig(X) :- light(X).\nsmall(X) :- big(X).\ndirty(X) :- small(X).\nnew(X) :- dirty(X).\nwet(X) :- new(X).\nsmooth(X) :- wet(X).\nrough(X) :- smooth(X).\nred(X) :- rough(X).\nheavy(X) :- red(X).\nlight(X) :- heavy(X).\nlight(X) :- light(X).\nlight(ball).\nsibling(frank,alice).\nfriend(dave,alice).\nparent(bob,alice).\nstrong(george).\nfriend(eve,carol).\nparent(eve,dave).\nfriend(george,frank).\nenemy(frank,george).\nowns(bob,pencil).\nlikes(alice,apple).\nenemy(frank,dave).\nlikes(bob,apple).\nsibling(bob,dave).\ncold.\nweak(dave).\nbored(eve).\nlikes(bob,phone).\nsibling(carol,dave).\nparent(alice,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is big.\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is wet.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is light.\n\nAnd the following facts:\nball is light.\nfrank is a sibling of alice.\ndave is a friend of alice.\nbob is a parent of alice.\ngeorge is strong.\neve is a friend of carol.\neve is a parent of dave.\ngeorge is a friend of frank.\nfrank is an enemy of george.\nbob owns pencil.\nalice likes apple.\nfrank is an enemy of dave.\nbob likes apple.\nbob is a sibling of dave.\nit is cold.\ndave is weak.\neve is bored.\nbob likes phone.\ncarol is a sibling of dave.\nalice is a parent of carol.\n\nQUESTION:\nCould bob is sad explain ball is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 955,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(alice).",
    "c": "sad(X) :- bored(X).\nstrong(X) :- sad(X).\nbusy(X) :- strong(X).\nweak(X) :- busy(X).\ncalm(X) :- weak(X).\nhungry(X) :- calm(X).\ntall(X) :- hungry(X).\nhappy(X) :- tall(X).\ntired(X) :- happy(X).\nclever(X) :- tired(X).\nfriendly(X) :- clever(X).\nangry(X) :- friendly(X).\nbrave(X) :- angry(X).\nfunny(X) :- brave(X).\nexcited(X) :- funny(X).\ncurious(X) :- excited(X).\nhungry(X) :- curious(X).\nbusy(X) :- hungry(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nbored(alice).\ndislikes(dave,pencil).\nwet(ball).\nlight(apple).\nowns(george,book).\nenemy(alice,carol).\ndislikes(george,book).\nenemy(dave,frank).\nlight(ball).\nparent(eve,frank).\nowns(eve,apple).\nsibling(alice,frank).\nowns(dave,ball).\nparent(eve,bob).\nfriend(carol,dave).\nheavy(ball).\nfriend(frank,carol).\ndislikes(carol,book).\nsmooth(car).\nenemy(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\n\nAnd the following facts:\nalice is bored.\ndave dislikes pencil.\nball is wet.\napple is light.\ngeorge owns book.\nalice is an enemy of carol.\ngeorge dislikes book.\ndave is an enemy of frank.\nball is light.\neve is a parent of frank.\neve owns apple.\nalice is a sibling of frank.\ndave owns ball.\neve is a parent of bob.\ncarol is a friend of dave.\nball is heavy.\nfrank is a friend of carol.\ncarol dislikes book.\ncar is smooth.\ngeorge is an enemy of carol.\n\nQUESTION:\nIs alice is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 956,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(frank).",
    "c": "sad(X) :- bored(X).\nstrong(X) :- sad(X).\nbusy(X) :- strong(X).\nweak(X) :- busy(X).\ncalm(X) :- weak(X).\nhungry(X) :- calm(X).\ntall(X) :- hungry(X).\nhappy(X) :- tall(X).\ntired(X) :- happy(X).\nclever(X) :- tired(X).\nfriendly(X) :- clever(X).\nangry(X) :- friendly(X).\nbrave(X) :- angry(X).\nfunny(X) :- brave(X).\nexcited(X) :- funny(X).\ncurious(X) :- excited(X).\nhungry(X) :- curious(X).\nbusy(X) :- hungry(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nbored(alice).\ndislikes(dave,pencil).\nwet(ball).\nlight(apple).\nowns(george,book).\nenemy(alice,carol).\ndislikes(george,book).\nenemy(dave,frank).\nlight(ball).\nparent(eve,frank).\nowns(eve,apple).\nsibling(alice,frank).\nowns(dave,ball).\nparent(eve,bob).\nfriend(carol,dave).\nheavy(ball).\nfriend(frank,carol).\ndislikes(carol,book).\nsmooth(car).\nenemy(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\n\nAnd the following facts:\nalice is bored.\ndave dislikes pencil.\nball is wet.\napple is light.\ngeorge owns book.\nalice is an enemy of carol.\ngeorge dislikes book.\ndave is an enemy of frank.\nball is light.\neve is a parent of frank.\neve owns apple.\nalice is a sibling of frank.\ndave owns ball.\neve is a parent of bob.\ncarol is a friend of dave.\nball is heavy.\nfrank is a friend of carol.\ncarol dislikes book.\ncar is smooth.\ngeorge is an enemy of carol.\n\nQUESTION:\nIs frank is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 957,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(alice).",
    "c": "sad(X) :- bored(X).\nstrong(X) :- sad(X).\nbusy(X) :- strong(X).\nweak(X) :- busy(X).\ncalm(X) :- weak(X).\nhungry(X) :- calm(X).\ntall(X) :- hungry(X).\nhappy(X) :- tall(X).\ntired(X) :- happy(X).\nclever(X) :- tired(X).\nfriendly(X) :- clever(X).\nangry(X) :- friendly(X).\nbrave(X) :- angry(X).\nfunny(X) :- brave(X).\nexcited(X) :- funny(X).\ncurious(X) :- excited(X).\nhungry(X) :- curious(X).\nbusy(X) :- hungry(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nbrave(alice).\ndislikes(dave,pencil).\nwet(ball).\nlight(apple).\nowns(george,book).\nenemy(alice,carol).\ndislikes(george,book).\nenemy(dave,frank).\nlight(ball).\nparent(eve,frank).\nowns(eve,apple).\nsibling(alice,frank).\nowns(dave,ball).\nparent(eve,bob).\nfriend(carol,dave).\nheavy(ball).\nfriend(frank,carol).\ndislikes(carol,book).\nsmooth(car).\nenemy(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\n\nAnd the following facts:\nalice is brave.\ndave dislikes pencil.\nball is wet.\napple is light.\ngeorge owns book.\nalice is an enemy of carol.\ngeorge dislikes book.\ndave is an enemy of frank.\nball is light.\neve is a parent of frank.\neve owns apple.\nalice is a sibling of frank.\ndave owns ball.\neve is a parent of bob.\ncarol is a friend of dave.\nball is heavy.\nfrank is a friend of carol.\ncarol dislikes book.\ncar is smooth.\ngeorge is an enemy of carol.\n\nQUESTION:\nCould alice is bored explain alice is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 958,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(george).",
    "c": "sad(X) :- bored(X).\nstrong(X) :- sad(X).\nbusy(X) :- strong(X).\nweak(X) :- busy(X).\ncalm(X) :- weak(X).\nhungry(X) :- calm(X).\ntall(X) :- hungry(X).\nhappy(X) :- tall(X).\ntired(X) :- happy(X).\nclever(X) :- tired(X).\nfriendly(X) :- clever(X).\nangry(X) :- friendly(X).\nbrave(X) :- angry(X).\nfunny(X) :- brave(X).\nexcited(X) :- funny(X).\ncurious(X) :- excited(X).\nhungry(X) :- curious(X).\nbusy(X) :- hungry(X).\nhungry(X) :- busy(X).\nbrave(X) :- hungry(X).\nbrave(alice).\ndislikes(dave,pencil).\nwet(ball).\nlight(apple).\nowns(george,book).\nenemy(alice,carol).\ndislikes(george,book).\nenemy(dave,frank).\nlight(ball).\nparent(eve,frank).\nowns(eve,apple).\nsibling(alice,frank).\nowns(dave,ball).\nparent(eve,bob).\nfriend(carol,dave).\nheavy(ball).\nfriend(frank,carol).\ndislikes(carol,book).\nsmooth(car).\nenemy(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is friendly.\nFor all X, if person X is friendly, then person X is angry.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\n\nAnd the following facts:\nalice is brave.\ndave dislikes pencil.\nball is wet.\napple is light.\ngeorge owns book.\nalice is an enemy of carol.\ngeorge dislikes book.\ndave is an enemy of frank.\nball is light.\neve is a parent of frank.\neve owns apple.\nalice is a sibling of frank.\ndave owns ball.\neve is a parent of bob.\ncarol is a friend of dave.\nball is heavy.\nfrank is a friend of carol.\ncarol dislikes book.\ncar is smooth.\ngeorge is an enemy of carol.\n\nQUESTION:\nCould george is tired explain alice is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 959,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(alice).",
    "c": "weak(X) :- happy(X).\nangry(Z) :- friendly(Z).\nheavy(Z) :- small(Z).\nbig(Z) :- heavy(Z).\ncalm(Y) :- sad(Y), sibling(Y,V), brave(V).\nclever(Z) :- busy(Z).\nbored(Z) :- friendly(Z), owns(Z,B), soft(B).\nrough(Y) :- heavy(Y), owns(A,Y), excited(A).\nheavy(Z) :- hard(Z), likes(A,Z), clever(A).\ntired(X) :- bored(X), likes(X,A), small(A).\nheavy(X) :- rough(X).\nfriend(X,Z) :- bored(Z), tall(X), friend(X,B).\ntall(Y) :- angry(Y), calm(C).\nsmooth(X) :- smooth(X), owns(B,X), excited(B).\ncalm(Z) :- tired(Z), sibling(Z,V), tired(V).\ndirty(X) :- old(X), old(X).\nsibling(X,Y) :- hungry(X), tired(Y).\nparent(X,Y) :- friendly(X), strong(Y), sibling(X,Y).\ncalm(X) :- excited(X), sad(X).\ndirty(X) :- soft(X).\nbusy(X) :- sad(X), friendly(X).\nhard(X) :- soft(X).\nred(X) :- heavy(X).\ncalm(X) :- sad(X).\nred(X) :- heavy(X), smooth(X).\nhappy(alice).\nbusy(dave).\nbusy(alice).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is weak.\nFor all Z, if person Z is friendly, then person Z is angry.\nFor all Z, if object Z is small, then object Z is heavy.\nFor all Z, if object Z is heavy, then object Z is big.\nFor all Y, if there exists V such that person Y is sad and person Y is a sibling of person V and person V is brave, then person Y is calm.\nFor all Z, if person Z is busy, then person Z is clever.\nFor all Z, if there exists B such that person Z is friendly and person Z owns object B and object B is soft, then person Z is bored.\nFor all Y, if there exists A such that object Y is heavy and person A owns object Y and person A is excited, then object Y is rough.\nFor all Z, if there exists A such that object Z is hard and person A likes object Z and person A is clever, then object Z is heavy.\nFor all X, if there exists A such that person X is bored and person X likes object A and object A is small, then person X is tired.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, Z, if there exists B such that person Z is bored and person X is tall and person X is a friend of person B, then person X is a friend of person Z.\nFor all Y, if there exists C such that person Y is angry and person C is calm, then person Y is tall.\nFor all X, if there exists B such that object X is smooth and person B owns object X and person B is excited, then object X is smooth.\nFor all Z, if there exists V such that person Z is tired and person Z is a sibling of person V and person V is tired, then person Z is calm.\nFor all X, if object X is old and object X is old, then object X is dirty.\nFor all X, Y, if person X is hungry and person Y is tired, then person X is a sibling of person Y.\nFor all X, Y, if person X is friendly and person Y is strong and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, if person X is excited and person X is sad, then person X is calm.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if person X is sad and person X is friendly, then person X is busy.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if object X is heavy and object X is smooth, then object X is red.\n\nAnd the following facts:\nalice is happy.\ndave is busy.\nalice is busy.\nalice is a friend of dave.\n\nQUESTION:\nIs alice is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 960,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "big(book).",
    "c": "weak(X) :- happy(X).\nangry(Z) :- friendly(Z).\nheavy(Z) :- small(Z).\nbig(Z) :- heavy(Z).\ncalm(Y) :- sad(Y), sibling(Y,V), brave(V).\nclever(Z) :- busy(Z).\nbored(Z) :- friendly(Z), owns(Z,B), soft(B).\nrough(Y) :- heavy(Y), owns(A,Y), excited(A).\nheavy(Z) :- hard(Z), likes(A,Z), clever(A).\ntired(X) :- bored(X), likes(X,A), small(A).\nheavy(X) :- rough(X).\nfriend(X,Z) :- bored(Z), tall(X), friend(X,B).\ntall(Y) :- angry(Y), calm(C).\nsmooth(X) :- smooth(X), owns(B,X), excited(B).\ncalm(Z) :- tired(Z), sibling(Z,V), tired(V).\ndirty(X) :- old(X), old(X).\nsibling(X,Y) :- hungry(X), tired(Y).\nparent(X,Y) :- friendly(X), strong(Y), sibling(X,Y).\ncalm(X) :- excited(X), sad(X).\ndirty(X) :- soft(X).\nbusy(X) :- sad(X), friendly(X).\nhard(X) :- soft(X).\nred(X) :- heavy(X).\ncalm(X) :- sad(X).\nred(X) :- heavy(X), smooth(X).\nhappy(alice).\nbusy(dave).\nbusy(alice).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is weak.\nFor all Z, if person Z is friendly, then person Z is angry.\nFor all Z, if object Z is small, then object Z is heavy.\nFor all Z, if object Z is heavy, then object Z is big.\nFor all Y, if there exists V such that person Y is sad and person Y is a sibling of person V and person V is brave, then person Y is calm.\nFor all Z, if person Z is busy, then person Z is clever.\nFor all Z, if there exists B such that person Z is friendly and person Z owns object B and object B is soft, then person Z is bored.\nFor all Y, if there exists A such that object Y is heavy and person A owns object Y and person A is excited, then object Y is rough.\nFor all Z, if there exists A such that object Z is hard and person A likes object Z and person A is clever, then object Z is heavy.\nFor all X, if there exists A such that person X is bored and person X likes object A and object A is small, then person X is tired.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, Z, if there exists B such that person Z is bored and person X is tall and person X is a friend of person B, then person X is a friend of person Z.\nFor all Y, if there exists C such that person Y is angry and person C is calm, then person Y is tall.\nFor all X, if there exists B such that object X is smooth and person B owns object X and person B is excited, then object X is smooth.\nFor all Z, if there exists V such that person Z is tired and person Z is a sibling of person V and person V is tired, then person Z is calm.\nFor all X, if object X is old and object X is old, then object X is dirty.\nFor all X, Y, if person X is hungry and person Y is tired, then person X is a sibling of person Y.\nFor all X, Y, if person X is friendly and person Y is strong and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, if person X is excited and person X is sad, then person X is calm.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if person X is sad and person X is friendly, then person X is busy.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if object X is heavy and object X is smooth, then object X is red.\n\nAnd the following facts:\nalice is happy.\ndave is busy.\nalice is busy.\nalice is a friend of dave.\n\nQUESTION:\nIs book is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 961,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(alice).",
    "c": "weak(X) :- happy(X).\nangry(Z) :- friendly(Z).\nheavy(Z) :- small(Z).\nbig(Z) :- heavy(Z).\ncalm(Y) :- sad(Y), sibling(Y,V), brave(V).\nclever(Z) :- busy(Z).\nbored(Z) :- friendly(Z), owns(Z,B), soft(B).\nrough(Y) :- heavy(Y), owns(A,Y), excited(A).\nheavy(Z) :- hard(Z), likes(A,Z), clever(A).\ntired(X) :- bored(X), likes(X,A), small(A).\nheavy(X) :- rough(X).\nfriend(X,Z) :- bored(Z), tall(X), friend(X,B).\ntall(Y) :- angry(Y), calm(C).\nsmooth(X) :- smooth(X), owns(B,X), excited(B).\ncalm(Z) :- tired(Z), sibling(Z,V), tired(V).\ndirty(X) :- old(X), old(X).\nsibling(X,Y) :- hungry(X), tired(Y).\nparent(X,Y) :- friendly(X), strong(Y), sibling(X,Y).\ncalm(X) :- excited(X), sad(X).\ndirty(X) :- soft(X).\nbusy(X) :- sad(X), friendly(X).\nhard(X) :- soft(X).\nred(X) :- heavy(X).\ncalm(X) :- sad(X).\nred(X) :- heavy(X), smooth(X).\nweak(alice).\nbusy(dave).\nbusy(alice).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is weak.\nFor all Z, if person Z is friendly, then person Z is angry.\nFor all Z, if object Z is small, then object Z is heavy.\nFor all Z, if object Z is heavy, then object Z is big.\nFor all Y, if there exists V such that person Y is sad and person Y is a sibling of person V and person V is brave, then person Y is calm.\nFor all Z, if person Z is busy, then person Z is clever.\nFor all Z, if there exists B such that person Z is friendly and person Z owns object B and object B is soft, then person Z is bored.\nFor all Y, if there exists A such that object Y is heavy and person A owns object Y and person A is excited, then object Y is rough.\nFor all Z, if there exists A such that object Z is hard and person A likes object Z and person A is clever, then object Z is heavy.\nFor all X, if there exists A such that person X is bored and person X likes object A and object A is small, then person X is tired.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, Z, if there exists B such that person Z is bored and person X is tall and person X is a friend of person B, then person X is a friend of person Z.\nFor all Y, if there exists C such that person Y is angry and person C is calm, then person Y is tall.\nFor all X, if there exists B such that object X is smooth and person B owns object X and person B is excited, then object X is smooth.\nFor all Z, if there exists V such that person Z is tired and person Z is a sibling of person V and person V is tired, then person Z is calm.\nFor all X, if object X is old and object X is old, then object X is dirty.\nFor all X, Y, if person X is hungry and person Y is tired, then person X is a sibling of person Y.\nFor all X, Y, if person X is friendly and person Y is strong and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, if person X is excited and person X is sad, then person X is calm.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if person X is sad and person X is friendly, then person X is busy.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if object X is heavy and object X is smooth, then object X is red.\n\nAnd the following facts:\nalice is weak.\ndave is busy.\nalice is busy.\nalice is a friend of dave.\n\nQUESTION:\nCould alice is happy explain alice is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 962,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(book).",
    "c": "weak(X) :- happy(X).\nangry(Z) :- friendly(Z).\nheavy(Z) :- small(Z).\nbig(Z) :- heavy(Z).\ncalm(Y) :- sad(Y), sibling(Y,V), brave(V).\nclever(Z) :- busy(Z).\nbored(Z) :- friendly(Z), owns(Z,B), soft(B).\nrough(Y) :- heavy(Y), owns(A,Y), excited(A).\nheavy(Z) :- hard(Z), likes(A,Z), clever(A).\ntired(X) :- bored(X), likes(X,A), small(A).\nheavy(X) :- rough(X).\nfriend(X,Z) :- bored(Z), tall(X), friend(X,B).\ntall(Y) :- angry(Y), calm(C).\nsmooth(X) :- smooth(X), owns(B,X), excited(B).\ncalm(Z) :- tired(Z), sibling(Z,V), tired(V).\ndirty(X) :- old(X), old(X).\nsibling(X,Y) :- hungry(X), tired(Y).\nparent(X,Y) :- friendly(X), strong(Y), sibling(X,Y).\ncalm(X) :- excited(X), sad(X).\ndirty(X) :- soft(X).\nbusy(X) :- sad(X), friendly(X).\nhard(X) :- soft(X).\nred(X) :- heavy(X).\ncalm(X) :- sad(X).\nred(X) :- heavy(X), smooth(X).\nweak(alice).\nbusy(dave).\nbusy(alice).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is weak.\nFor all Z, if person Z is friendly, then person Z is angry.\nFor all Z, if object Z is small, then object Z is heavy.\nFor all Z, if object Z is heavy, then object Z is big.\nFor all Y, if there exists V such that person Y is sad and person Y is a sibling of person V and person V is brave, then person Y is calm.\nFor all Z, if person Z is busy, then person Z is clever.\nFor all Z, if there exists B such that person Z is friendly and person Z owns object B and object B is soft, then person Z is bored.\nFor all Y, if there exists A such that object Y is heavy and person A owns object Y and person A is excited, then object Y is rough.\nFor all Z, if there exists A such that object Z is hard and person A likes object Z and person A is clever, then object Z is heavy.\nFor all X, if there exists A such that person X is bored and person X likes object A and object A is small, then person X is tired.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, Z, if there exists B such that person Z is bored and person X is tall and person X is a friend of person B, then person X is a friend of person Z.\nFor all Y, if there exists C such that person Y is angry and person C is calm, then person Y is tall.\nFor all X, if there exists B such that object X is smooth and person B owns object X and person B is excited, then object X is smooth.\nFor all Z, if there exists V such that person Z is tired and person Z is a sibling of person V and person V is tired, then person Z is calm.\nFor all X, if object X is old and object X is old, then object X is dirty.\nFor all X, Y, if person X is hungry and person Y is tired, then person X is a sibling of person Y.\nFor all X, Y, if person X is friendly and person Y is strong and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, if person X is excited and person X is sad, then person X is calm.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if person X is sad and person X is friendly, then person X is busy.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if object X is heavy and object X is smooth, then object X is red.\n\nAnd the following facts:\nalice is weak.\ndave is busy.\nalice is busy.\nalice is a friend of dave.\n\nQUESTION:\nCould book is clean explain alice is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 963,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(alice).",
    "c": "curious(X) :- hungry(X).\nnew(Y) :- clean(Y), likes(B,Y), clever(B).\nangry(Y) :- tall(Y), friend(Y,V), tired(V).\nhard(Z) :- wet(Z), owns(B,Z), strong(B).\nhappy(X) :- funny(X), sibling(X,W), calm(W).\nfriendly(Z) :- friendly(Z).\nenemy(Y,X) :- strong(Y), tall(X), friend(Y,W).\nenemy(Y,X) :- angry(Y), clever(X), enemy(X,W).\ncalm(Z) :- excited(Z), friend(Z,A), bored(A).\nparent(Y,Z) :- funny(Y), angry(Z).\nsad(Y) :- sad(Y), likes(Y,B), small(B).\nsibling(X,Z) :- clever(Z), excited(X).\nsmooth(X) :- wet(X), owns(A,X), busy(A).\nsoft(X) :- light(X), new(X).\nexcited(X) :- bored(X).\nwet(X) :- smooth(X).\nlikes(X,Y) :- calm(X), heavy(Y).\ntall(X) :- weak(X), friendly(X).\nheavy(X) :- clean(X).\ntired(X) :- happy(X).\nwet(X) :- hard(X).\ncalm(X) :- excited(X), angry(X).\nbored(X) :- tall(X).\ncalm(X) :- brave(X), bored(X).\nred(X) :- rough(X), small(X).\nhungry(alice).\nfriend(bob,dave).\nbig(pencil).\nbusy(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is curious.\nFor all Y, if there exists B such that object Y is clean and person B likes object Y and person B is clever, then object Y is new.\nFor all Y, if there exists V such that person Y is tall and person Y is a friend of person V and person V is tired, then person Y is angry.\nFor all Z, if there exists B such that object Z is wet and person B owns object Z and person B is strong, then object Z is hard.\nFor all X, if there exists W such that person X is funny and person X is a sibling of person W and person W is calm, then person X is happy.\nFor all Z, if person Z is friendly, then person Z is friendly.\nFor all X, Y, if there exists W such that person Y is strong and person X is tall and person Y is a friend of person W, then person Y is an enemy of person X.\nFor all X, Y, if there exists W such that person Y is angry and person X is clever and person X is an enemy of person W, then person Y is an enemy of person X.\nFor all Z, if there exists A such that person Z is excited and person Z is a friend of person A and person A is bored, then person Z is calm.\nFor all Y, Z, if person Y is funny and person Z is angry, then person Y is a parent of person Z.\nFor all Y, if there exists B such that person Y is sad and person Y likes object B and object B is small, then person Y is sad.\nFor all X, Z, if person Z is clever and person X is excited, then person X is a sibling of person Z.\nFor all X, if there exists A such that object X is wet and person A owns object X and person A is busy, then object X is smooth.\nFor all X, if object X is light and object X is new, then object X is soft.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, Y, if person X is calm and object Y is heavy, then person X likes object Y.\nFor all X, if person X is weak and person X is friendly, then person X is tall.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if person X is excited and person X is angry, then person X is calm.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is brave and person X is bored, then person X is calm.\nFor all X, if object X is rough and object X is small, then object X is red.\n\nAnd the following facts:\nalice is hungry.\nbob is a friend of dave.\npencil is big.\neve is busy.\n\nQUESTION:\nIs alice is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 964,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "curious(X) :- hungry(X).\nnew(Y) :- clean(Y), likes(B,Y), clever(B).\nangry(Y) :- tall(Y), friend(Y,V), tired(V).\nhard(Z) :- wet(Z), owns(B,Z), strong(B).\nhappy(X) :- funny(X), sibling(X,W), calm(W).\nfriendly(Z) :- friendly(Z).\nenemy(Y,X) :- strong(Y), tall(X), friend(Y,W).\nenemy(Y,X) :- angry(Y), clever(X), enemy(X,W).\ncalm(Z) :- excited(Z), friend(Z,A), bored(A).\nparent(Y,Z) :- funny(Y), angry(Z).\nsad(Y) :- sad(Y), likes(Y,B), small(B).\nsibling(X,Z) :- clever(Z), excited(X).\nsmooth(X) :- wet(X), owns(A,X), busy(A).\nsoft(X) :- light(X), new(X).\nexcited(X) :- bored(X).\nwet(X) :- smooth(X).\nlikes(X,Y) :- calm(X), heavy(Y).\ntall(X) :- weak(X), friendly(X).\nheavy(X) :- clean(X).\ntired(X) :- happy(X).\nwet(X) :- hard(X).\ncalm(X) :- excited(X), angry(X).\nbored(X) :- tall(X).\ncalm(X) :- brave(X), bored(X).\nred(X) :- rough(X), small(X).\nhungry(alice).\nfriend(bob,dave).\nbig(pencil).\nbusy(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is curious.\nFor all Y, if there exists B such that object Y is clean and person B likes object Y and person B is clever, then object Y is new.\nFor all Y, if there exists V such that person Y is tall and person Y is a friend of person V and person V is tired, then person Y is angry.\nFor all Z, if there exists B such that object Z is wet and person B owns object Z and person B is strong, then object Z is hard.\nFor all X, if there exists W such that person X is funny and person X is a sibling of person W and person W is calm, then person X is happy.\nFor all Z, if person Z is friendly, then person Z is friendly.\nFor all X, Y, if there exists W such that person Y is strong and person X is tall and person Y is a friend of person W, then person Y is an enemy of person X.\nFor all X, Y, if there exists W such that person Y is angry and person X is clever and person X is an enemy of person W, then person Y is an enemy of person X.\nFor all Z, if there exists A such that person Z is excited and person Z is a friend of person A and person A is bored, then person Z is calm.\nFor all Y, Z, if person Y is funny and person Z is angry, then person Y is a parent of person Z.\nFor all Y, if there exists B such that person Y is sad and person Y likes object B and object B is small, then person Y is sad.\nFor all X, Z, if person Z is clever and person X is excited, then person X is a sibling of person Z.\nFor all X, if there exists A such that object X is wet and person A owns object X and person A is busy, then object X is smooth.\nFor all X, if object X is light and object X is new, then object X is soft.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, Y, if person X is calm and object Y is heavy, then person X likes object Y.\nFor all X, if person X is weak and person X is friendly, then person X is tall.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if person X is excited and person X is angry, then person X is calm.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is brave and person X is bored, then person X is calm.\nFor all X, if object X is rough and object X is small, then object X is red.\n\nAnd the following facts:\nalice is hungry.\nbob is a friend of dave.\npencil is big.\neve is busy.\n\nQUESTION:\nIs dave is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 965,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(alice).",
    "c": "curious(X) :- hungry(X).\nnew(Y) :- clean(Y), likes(B,Y), clever(B).\nangry(Y) :- tall(Y), friend(Y,V), tired(V).\nhard(Z) :- wet(Z), owns(B,Z), strong(B).\nhappy(X) :- funny(X), sibling(X,W), calm(W).\nfriendly(Z) :- friendly(Z).\nenemy(Y,X) :- strong(Y), tall(X), friend(Y,W).\nenemy(Y,X) :- angry(Y), clever(X), enemy(X,W).\ncalm(Z) :- excited(Z), friend(Z,A), bored(A).\nparent(Y,Z) :- funny(Y), angry(Z).\nsad(Y) :- sad(Y), likes(Y,B), small(B).\nsibling(X,Z) :- clever(Z), excited(X).\nsmooth(X) :- wet(X), owns(A,X), busy(A).\nsoft(X) :- light(X), new(X).\nexcited(X) :- bored(X).\nwet(X) :- smooth(X).\nlikes(X,Y) :- calm(X), heavy(Y).\ntall(X) :- weak(X), friendly(X).\nheavy(X) :- clean(X).\ntired(X) :- happy(X).\nwet(X) :- hard(X).\ncalm(X) :- excited(X), angry(X).\nbored(X) :- tall(X).\ncalm(X) :- brave(X), bored(X).\nred(X) :- rough(X), small(X).\ncurious(alice).\nfriend(bob,dave).\nbig(pencil).\nbusy(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is curious.\nFor all Y, if there exists B such that object Y is clean and person B likes object Y and person B is clever, then object Y is new.\nFor all Y, if there exists V such that person Y is tall and person Y is a friend of person V and person V is tired, then person Y is angry.\nFor all Z, if there exists B such that object Z is wet and person B owns object Z and person B is strong, then object Z is hard.\nFor all X, if there exists W such that person X is funny and person X is a sibling of person W and person W is calm, then person X is happy.\nFor all Z, if person Z is friendly, then person Z is friendly.\nFor all X, Y, if there exists W such that person Y is strong and person X is tall and person Y is a friend of person W, then person Y is an enemy of person X.\nFor all X, Y, if there exists W such that person Y is angry and person X is clever and person X is an enemy of person W, then person Y is an enemy of person X.\nFor all Z, if there exists A such that person Z is excited and person Z is a friend of person A and person A is bored, then person Z is calm.\nFor all Y, Z, if person Y is funny and person Z is angry, then person Y is a parent of person Z.\nFor all Y, if there exists B such that person Y is sad and person Y likes object B and object B is small, then person Y is sad.\nFor all X, Z, if person Z is clever and person X is excited, then person X is a sibling of person Z.\nFor all X, if there exists A such that object X is wet and person A owns object X and person A is busy, then object X is smooth.\nFor all X, if object X is light and object X is new, then object X is soft.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, Y, if person X is calm and object Y is heavy, then person X likes object Y.\nFor all X, if person X is weak and person X is friendly, then person X is tall.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if person X is excited and person X is angry, then person X is calm.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is brave and person X is bored, then person X is calm.\nFor all X, if object X is rough and object X is small, then object X is red.\n\nAnd the following facts:\nalice is curious.\nbob is a friend of dave.\npencil is big.\neve is busy.\n\nQUESTION:\nCould alice is hungry explain alice is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 966,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(pencil).",
    "c": "curious(X) :- hungry(X).\nnew(Y) :- clean(Y), likes(B,Y), clever(B).\nangry(Y) :- tall(Y), friend(Y,V), tired(V).\nhard(Z) :- wet(Z), owns(B,Z), strong(B).\nhappy(X) :- funny(X), sibling(X,W), calm(W).\nfriendly(Z) :- friendly(Z).\nenemy(Y,X) :- strong(Y), tall(X), friend(Y,W).\nenemy(Y,X) :- angry(Y), clever(X), enemy(X,W).\ncalm(Z) :- excited(Z), friend(Z,A), bored(A).\nparent(Y,Z) :- funny(Y), angry(Z).\nsad(Y) :- sad(Y), likes(Y,B), small(B).\nsibling(X,Z) :- clever(Z), excited(X).\nsmooth(X) :- wet(X), owns(A,X), busy(A).\nsoft(X) :- light(X), new(X).\nexcited(X) :- bored(X).\nwet(X) :- smooth(X).\nlikes(X,Y) :- calm(X), heavy(Y).\ntall(X) :- weak(X), friendly(X).\nheavy(X) :- clean(X).\ntired(X) :- happy(X).\nwet(X) :- hard(X).\ncalm(X) :- excited(X), angry(X).\nbored(X) :- tall(X).\ncalm(X) :- brave(X), bored(X).\nred(X) :- rough(X), small(X).\ncurious(alice).\nfriend(bob,dave).\nbig(pencil).\nbusy(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is curious.\nFor all Y, if there exists B such that object Y is clean and person B likes object Y and person B is clever, then object Y is new.\nFor all Y, if there exists V such that person Y is tall and person Y is a friend of person V and person V is tired, then person Y is angry.\nFor all Z, if there exists B such that object Z is wet and person B owns object Z and person B is strong, then object Z is hard.\nFor all X, if there exists W such that person X is funny and person X is a sibling of person W and person W is calm, then person X is happy.\nFor all Z, if person Z is friendly, then person Z is friendly.\nFor all X, Y, if there exists W such that person Y is strong and person X is tall and person Y is a friend of person W, then person Y is an enemy of person X.\nFor all X, Y, if there exists W such that person Y is angry and person X is clever and person X is an enemy of person W, then person Y is an enemy of person X.\nFor all Z, if there exists A such that person Z is excited and person Z is a friend of person A and person A is bored, then person Z is calm.\nFor all Y, Z, if person Y is funny and person Z is angry, then person Y is a parent of person Z.\nFor all Y, if there exists B such that person Y is sad and person Y likes object B and object B is small, then person Y is sad.\nFor all X, Z, if person Z is clever and person X is excited, then person X is a sibling of person Z.\nFor all X, if there exists A such that object X is wet and person A owns object X and person A is busy, then object X is smooth.\nFor all X, if object X is light and object X is new, then object X is soft.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, Y, if person X is calm and object Y is heavy, then person X likes object Y.\nFor all X, if person X is weak and person X is friendly, then person X is tall.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if person X is excited and person X is angry, then person X is calm.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is brave and person X is bored, then person X is calm.\nFor all X, if object X is rough and object X is small, then object X is red.\n\nAnd the following facts:\nalice is curious.\nbob is a friend of dave.\npencil is big.\neve is busy.\n\nQUESTION:\nCould pencil is light explain alice is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 967,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(book).",
    "c": "rough(X) :- small(X).\nwet(Z) :- light(Z), owns(B,Z), hungry(B).\ndislikes(Z,X) :- angry(Z), new(X).\nsibling(Z,X) :- calm(Z), tired(X).\nweak(Y) :- sad(Y).\nbusy(X) :- friendly(X), dislikes(X,A), hard(A).\nbig(X) :- hard(X).\nred(Y) :- big(Y).\ncalm(Z) :- happy(Z), owns(Z,B), wet(B).\nhappy(X) :- funny(X), enemy(X,U), funny(U).\nlikes(Z,X) :- tall(Z), clean(X), owns(W,X).\nenemy(Z,Y) :- weak(Y), happy(Z), friend(Z,A).\nwet(X) :- light(X), new(D).\nfriendly(X) :- strong(X).\nfriendly(Z) :- busy(Z).\ndirty(Y) :- heavy(Y), owns(V,Y), friendly(V).\nbusy(X) :- bored(X), hard(C).\nbig(X) :- clean(X).\nparent(X,Y) :- busy(X), busy(Y), friend(X,Y).\ntall(X) :- hungry(X).\nfunny(X) :- hungry(X).\nparent(X,Y) :- hungry(X), friendly(Y), sibling(X,Y).\nparent(X,Y) :- weak(X), brave(Y).\nbig(X) :- heavy(X), red(X).\nold(X) :- red(X).\nsmall(book).\nlikes(eve,book).\ndislikes(alice,apple).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is rough.\nFor all Z, if there exists B such that object Z is light and person B owns object Z and person B is hungry, then object Z is wet.\nFor all X, Z, if person Z is angry and object X is new, then person Z dislikes object X.\nFor all X, Z, if person Z is calm and person X is tired, then person Z is a sibling of person X.\nFor all Y, if person Y is sad, then person Y is weak.\nFor all X, if there exists A such that person X is friendly and person X dislikes object A and object A is hard, then person X is busy.\nFor all X, if object X is hard, then object X is big.\nFor all Y, if object Y is big, then object Y is red.\nFor all Z, if there exists B such that person Z is happy and person Z owns object B and object B is wet, then person Z is calm.\nFor all X, if there exists U such that person X is funny and person X is an enemy of person U and person U is funny, then person X is happy.\nFor all X, Z, if there exists W such that person Z is tall and object X is clean and person W owns object X, then person Z likes object X.\nFor all Y, Z, if there exists A such that person Y is weak and person Z is happy and person Z is a friend of person A, then person Z is an enemy of person Y.\nFor all X, if there exists D such that object X is light and object D is new, then object X is wet.\nFor all X, if person X is strong, then person X is friendly.\nFor all Z, if person Z is busy, then person Z is friendly.\nFor all Y, if there exists V such that object Y is heavy and person V owns object Y and person V is friendly, then object Y is dirty.\nFor all X, if there exists C such that person X is bored and object C is hard, then person X is busy.\nFor all X, if object X is clean, then object X is big.\nFor all X, Y, if person X is busy and person Y is busy and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, Y, if person X is hungry and person Y is friendly and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is weak and person Y is brave, then person X is a parent of person Y.\nFor all X, if object X is heavy and object X is red, then object X is big.\nFor all X, if object X is red, then object X is old.\n\nAnd the following facts:\nbook is small.\neve likes book.\nalice dislikes apple.\nfrank is sad.\n\nQUESTION:\nIs book is rough true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 968,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(phone).",
    "c": "rough(X) :- small(X).\nwet(Z) :- light(Z), owns(B,Z), hungry(B).\ndislikes(Z,X) :- angry(Z), new(X).\nsibling(Z,X) :- calm(Z), tired(X).\nweak(Y) :- sad(Y).\nbusy(X) :- friendly(X), dislikes(X,A), hard(A).\nbig(X) :- hard(X).\nred(Y) :- big(Y).\ncalm(Z) :- happy(Z), owns(Z,B), wet(B).\nhappy(X) :- funny(X), enemy(X,U), funny(U).\nlikes(Z,X) :- tall(Z), clean(X), owns(W,X).\nenemy(Z,Y) :- weak(Y), happy(Z), friend(Z,A).\nwet(X) :- light(X), new(D).\nfriendly(X) :- strong(X).\nfriendly(Z) :- busy(Z).\ndirty(Y) :- heavy(Y), owns(V,Y), friendly(V).\nbusy(X) :- bored(X), hard(C).\nbig(X) :- clean(X).\nparent(X,Y) :- busy(X), busy(Y), friend(X,Y).\ntall(X) :- hungry(X).\nfunny(X) :- hungry(X).\nparent(X,Y) :- hungry(X), friendly(Y), sibling(X,Y).\nparent(X,Y) :- weak(X), brave(Y).\nbig(X) :- heavy(X), red(X).\nold(X) :- red(X).\nsmall(book).\nlikes(eve,book).\ndislikes(alice,apple).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is rough.\nFor all Z, if there exists B such that object Z is light and person B owns object Z and person B is hungry, then object Z is wet.\nFor all X, Z, if person Z is angry and object X is new, then person Z dislikes object X.\nFor all X, Z, if person Z is calm and person X is tired, then person Z is a sibling of person X.\nFor all Y, if person Y is sad, then person Y is weak.\nFor all X, if there exists A such that person X is friendly and person X dislikes object A and object A is hard, then person X is busy.\nFor all X, if object X is hard, then object X is big.\nFor all Y, if object Y is big, then object Y is red.\nFor all Z, if there exists B such that person Z is happy and person Z owns object B and object B is wet, then person Z is calm.\nFor all X, if there exists U such that person X is funny and person X is an enemy of person U and person U is funny, then person X is happy.\nFor all X, Z, if there exists W such that person Z is tall and object X is clean and person W owns object X, then person Z likes object X.\nFor all Y, Z, if there exists A such that person Y is weak and person Z is happy and person Z is a friend of person A, then person Z is an enemy of person Y.\nFor all X, if there exists D such that object X is light and object D is new, then object X is wet.\nFor all X, if person X is strong, then person X is friendly.\nFor all Z, if person Z is busy, then person Z is friendly.\nFor all Y, if there exists V such that object Y is heavy and person V owns object Y and person V is friendly, then object Y is dirty.\nFor all X, if there exists C such that person X is bored and object C is hard, then person X is busy.\nFor all X, if object X is clean, then object X is big.\nFor all X, Y, if person X is busy and person Y is busy and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, Y, if person X is hungry and person Y is friendly and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is weak and person Y is brave, then person X is a parent of person Y.\nFor all X, if object X is heavy and object X is red, then object X is big.\nFor all X, if object X is red, then object X is old.\n\nAnd the following facts:\nbook is small.\neve likes book.\nalice dislikes apple.\nfrank is sad.\n\nQUESTION:\nIs phone is smooth true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 969,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "rough(X) :- small(X).\nwet(Z) :- light(Z), owns(B,Z), hungry(B).\ndislikes(Z,X) :- angry(Z), new(X).\nsibling(Z,X) :- calm(Z), tired(X).\nweak(Y) :- sad(Y).\nbusy(X) :- friendly(X), dislikes(X,A), hard(A).\nbig(X) :- hard(X).\nred(Y) :- big(Y).\ncalm(Z) :- happy(Z), owns(Z,B), wet(B).\nhappy(X) :- funny(X), enemy(X,U), funny(U).\nlikes(Z,X) :- tall(Z), clean(X), owns(W,X).\nenemy(Z,Y) :- weak(Y), happy(Z), friend(Z,A).\nwet(X) :- light(X), new(D).\nfriendly(X) :- strong(X).\nfriendly(Z) :- busy(Z).\ndirty(Y) :- heavy(Y), owns(V,Y), friendly(V).\nbusy(X) :- bored(X), hard(C).\nbig(X) :- clean(X).\nparent(X,Y) :- busy(X), busy(Y), friend(X,Y).\ntall(X) :- hungry(X).\nfunny(X) :- hungry(X).\nparent(X,Y) :- hungry(X), friendly(Y), sibling(X,Y).\nparent(X,Y) :- weak(X), brave(Y).\nbig(X) :- heavy(X), red(X).\nold(X) :- red(X).\nrough(book).\nlikes(eve,book).\ndislikes(alice,apple).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is rough.\nFor all Z, if there exists B such that object Z is light and person B owns object Z and person B is hungry, then object Z is wet.\nFor all X, Z, if person Z is angry and object X is new, then person Z dislikes object X.\nFor all X, Z, if person Z is calm and person X is tired, then person Z is a sibling of person X.\nFor all Y, if person Y is sad, then person Y is weak.\nFor all X, if there exists A such that person X is friendly and person X dislikes object A and object A is hard, then person X is busy.\nFor all X, if object X is hard, then object X is big.\nFor all Y, if object Y is big, then object Y is red.\nFor all Z, if there exists B such that person Z is happy and person Z owns object B and object B is wet, then person Z is calm.\nFor all X, if there exists U such that person X is funny and person X is an enemy of person U and person U is funny, then person X is happy.\nFor all X, Z, if there exists W such that person Z is tall and object X is clean and person W owns object X, then person Z likes object X.\nFor all Y, Z, if there exists A such that person Y is weak and person Z is happy and person Z is a friend of person A, then person Z is an enemy of person Y.\nFor all X, if there exists D such that object X is light and object D is new, then object X is wet.\nFor all X, if person X is strong, then person X is friendly.\nFor all Z, if person Z is busy, then person Z is friendly.\nFor all Y, if there exists V such that object Y is heavy and person V owns object Y and person V is friendly, then object Y is dirty.\nFor all X, if there exists C such that person X is bored and object C is hard, then person X is busy.\nFor all X, if object X is clean, then object X is big.\nFor all X, Y, if person X is busy and person Y is busy and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, Y, if person X is hungry and person Y is friendly and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is weak and person Y is brave, then person X is a parent of person Y.\nFor all X, if object X is heavy and object X is red, then object X is big.\nFor all X, if object X is red, then object X is old.\n\nAnd the following facts:\nbook is rough.\neve likes book.\nalice dislikes apple.\nfrank is sad.\n\nQUESTION:\nCould book is small explain book is rough?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 970,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "rough(X) :- small(X).\nwet(Z) :- light(Z), owns(B,Z), hungry(B).\ndislikes(Z,X) :- angry(Z), new(X).\nsibling(Z,X) :- calm(Z), tired(X).\nweak(Y) :- sad(Y).\nbusy(X) :- friendly(X), dislikes(X,A), hard(A).\nbig(X) :- hard(X).\nred(Y) :- big(Y).\ncalm(Z) :- happy(Z), owns(Z,B), wet(B).\nhappy(X) :- funny(X), enemy(X,U), funny(U).\nlikes(Z,X) :- tall(Z), clean(X), owns(W,X).\nenemy(Z,Y) :- weak(Y), happy(Z), friend(Z,A).\nwet(X) :- light(X), new(D).\nfriendly(X) :- strong(X).\nfriendly(Z) :- busy(Z).\ndirty(Y) :- heavy(Y), owns(V,Y), friendly(V).\nbusy(X) :- bored(X), hard(C).\nbig(X) :- clean(X).\nparent(X,Y) :- busy(X), busy(Y), friend(X,Y).\ntall(X) :- hungry(X).\nfunny(X) :- hungry(X).\nparent(X,Y) :- hungry(X), friendly(Y), sibling(X,Y).\nparent(X,Y) :- weak(X), brave(Y).\nbig(X) :- heavy(X), red(X).\nold(X) :- red(X).\nrough(book).\nlikes(eve,book).\ndislikes(alice,apple).\nsad(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is rough.\nFor all Z, if there exists B such that object Z is light and person B owns object Z and person B is hungry, then object Z is wet.\nFor all X, Z, if person Z is angry and object X is new, then person Z dislikes object X.\nFor all X, Z, if person Z is calm and person X is tired, then person Z is a sibling of person X.\nFor all Y, if person Y is sad, then person Y is weak.\nFor all X, if there exists A such that person X is friendly and person X dislikes object A and object A is hard, then person X is busy.\nFor all X, if object X is hard, then object X is big.\nFor all Y, if object Y is big, then object Y is red.\nFor all Z, if there exists B such that person Z is happy and person Z owns object B and object B is wet, then person Z is calm.\nFor all X, if there exists U such that person X is funny and person X is an enemy of person U and person U is funny, then person X is happy.\nFor all X, Z, if there exists W such that person Z is tall and object X is clean and person W owns object X, then person Z likes object X.\nFor all Y, Z, if there exists A such that person Y is weak and person Z is happy and person Z is a friend of person A, then person Z is an enemy of person Y.\nFor all X, if there exists D such that object X is light and object D is new, then object X is wet.\nFor all X, if person X is strong, then person X is friendly.\nFor all Z, if person Z is busy, then person Z is friendly.\nFor all Y, if there exists V such that object Y is heavy and person V owns object Y and person V is friendly, then object Y is dirty.\nFor all X, if there exists C such that person X is bored and object C is hard, then person X is busy.\nFor all X, if object X is clean, then object X is big.\nFor all X, Y, if person X is busy and person Y is busy and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, Y, if person X is hungry and person Y is friendly and person X is a sibling of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is weak and person Y is brave, then person X is a parent of person Y.\nFor all X, if object X is heavy and object X is red, then object X is big.\nFor all X, if object X is red, then object X is old.\n\nAnd the following facts:\nbook is rough.\neve likes book.\nalice dislikes apple.\nfrank is sad.\n\nQUESTION:\nCould ball is clean explain book is rough?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 971,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "curious(X) :- excited(X).\nbored(X) :- clever(X), sibling(X,V), hungry(V).\nenemy(Y,Z) :- tall(Y), hungry(Z), red(B).\ndirty(Y) :- hard(Y).\nhappy(X) :- bored(X), parent(X,U), happy(U).\nlikes(Y,X) :- strong(Y), clean(X), dislikes(A,X).\nhappy(Y) :- brave(Y).\ntired(Z) :- busy(Z).\nangry(X) :- angry(X).\nsmooth(Y) :- rough(Y), owns(W,Y), hungry(W).\nparent(X,Y) :- tired(Y), funny(X).\nsibling(X,Z) :- tired(Z), funny(X).\ndislikes(Z,X) :- clever(Z), small(X), likes(B,X).\nsoft(Y) :- small(Y), dislikes(A,Y), strong(A).\ntired(Z) :- funny(Z), owns(Z,B), clean(B).\nsmall(X) :- small(X), likes(B,X), funny(B).\nlight(X) :- new(X).\nfunny(X) :- clever(X), weak(X).\nsoft(X) :- small(X), clean(X).\nsad(X) :- clever(X).\nsmooth(X) :- new(X), big(X).\nhard(X) :- red(X).\nfunny(X) :- happy(X), clever(X).\nwet(X) :- heavy(X), light(X).\nbored(X) :- brave(X).\nexcited(dave).\nenemy(dave,george).\nenemy(eve,frank).\nred(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is curious.\nFor all X, if there exists V such that person X is clever and person X is a sibling of person V and person V is hungry, then person X is bored.\nFor all Y, Z, if there exists B such that person Y is tall and person Z is hungry and object B is red, then person Y is an enemy of person Z.\nFor all Y, if object Y is hard, then object Y is dirty.\nFor all X, if there exists U such that person X is bored and person X is a parent of person U and person U is happy, then person X is happy.\nFor all X, Y, if there exists A such that person Y is strong and object X is clean and person A dislikes object X, then person Y likes object X.\nFor all Y, if person Y is brave, then person Y is happy.\nFor all Z, if person Z is busy, then person Z is tired.\nFor all X, if person X is angry, then person X is angry.\nFor all Y, if there exists W such that object Y is rough and person W owns object Y and person W is hungry, then object Y is smooth.\nFor all X, Y, if person Y is tired and person X is funny, then person X is a parent of person Y.\nFor all X, Z, if person Z is tired and person X is funny, then person X is a sibling of person Z.\nFor all X, Z, if there exists B such that person Z is clever and object X is small and person B likes object X, then person Z dislikes object X.\nFor all Y, if there exists A such that object Y is small and person A dislikes object Y and person A is strong, then object Y is soft.\nFor all Z, if there exists B such that person Z is funny and person Z owns object B and object B is clean, then person Z is tired.\nFor all X, if there exists B such that object X is small and person B likes object X and person B is funny, then object X is small.\nFor all X, if object X is new, then object X is light.\nFor all X, if person X is clever and person X is weak, then person X is funny.\nFor all X, if object X is small and object X is clean, then object X is soft.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if object X is new and object X is big, then object X is smooth.\nFor all X, if object X is red, then object X is hard.\nFor all X, if person X is happy and person X is clever, then person X is funny.\nFor all X, if object X is heavy and object X is light, then object X is wet.\nFor all X, if person X is brave, then person X is bored.\n\nAnd the following facts:\ndave is excited.\ndave is an enemy of george.\neve is an enemy of frank.\napple is red.\n\nQUESTION:\nIs dave is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 972,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(phone).",
    "c": "curious(X) :- excited(X).\nbored(X) :- clever(X), sibling(X,V), hungry(V).\nenemy(Y,Z) :- tall(Y), hungry(Z), red(B).\ndirty(Y) :- hard(Y).\nhappy(X) :- bored(X), parent(X,U), happy(U).\nlikes(Y,X) :- strong(Y), clean(X), dislikes(A,X).\nhappy(Y) :- brave(Y).\ntired(Z) :- busy(Z).\nangry(X) :- angry(X).\nsmooth(Y) :- rough(Y), owns(W,Y), hungry(W).\nparent(X,Y) :- tired(Y), funny(X).\nsibling(X,Z) :- tired(Z), funny(X).\ndislikes(Z,X) :- clever(Z), small(X), likes(B,X).\nsoft(Y) :- small(Y), dislikes(A,Y), strong(A).\ntired(Z) :- funny(Z), owns(Z,B), clean(B).\nsmall(X) :- small(X), likes(B,X), funny(B).\nlight(X) :- new(X).\nfunny(X) :- clever(X), weak(X).\nsoft(X) :- small(X), clean(X).\nsad(X) :- clever(X).\nsmooth(X) :- new(X), big(X).\nhard(X) :- red(X).\nfunny(X) :- happy(X), clever(X).\nwet(X) :- heavy(X), light(X).\nbored(X) :- brave(X).\nexcited(dave).\nenemy(dave,george).\nenemy(eve,frank).\nred(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is curious.\nFor all X, if there exists V such that person X is clever and person X is a sibling of person V and person V is hungry, then person X is bored.\nFor all Y, Z, if there exists B such that person Y is tall and person Z is hungry and object B is red, then person Y is an enemy of person Z.\nFor all Y, if object Y is hard, then object Y is dirty.\nFor all X, if there exists U such that person X is bored and person X is a parent of person U and person U is happy, then person X is happy.\nFor all X, Y, if there exists A such that person Y is strong and object X is clean and person A dislikes object X, then person Y likes object X.\nFor all Y, if person Y is brave, then person Y is happy.\nFor all Z, if person Z is busy, then person Z is tired.\nFor all X, if person X is angry, then person X is angry.\nFor all Y, if there exists W such that object Y is rough and person W owns object Y and person W is hungry, then object Y is smooth.\nFor all X, Y, if person Y is tired and person X is funny, then person X is a parent of person Y.\nFor all X, Z, if person Z is tired and person X is funny, then person X is a sibling of person Z.\nFor all X, Z, if there exists B such that person Z is clever and object X is small and person B likes object X, then person Z dislikes object X.\nFor all Y, if there exists A such that object Y is small and person A dislikes object Y and person A is strong, then object Y is soft.\nFor all Z, if there exists B such that person Z is funny and person Z owns object B and object B is clean, then person Z is tired.\nFor all X, if there exists B such that object X is small and person B likes object X and person B is funny, then object X is small.\nFor all X, if object X is new, then object X is light.\nFor all X, if person X is clever and person X is weak, then person X is funny.\nFor all X, if object X is small and object X is clean, then object X is soft.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if object X is new and object X is big, then object X is smooth.\nFor all X, if object X is red, then object X is hard.\nFor all X, if person X is happy and person X is clever, then person X is funny.\nFor all X, if object X is heavy and object X is light, then object X is wet.\nFor all X, if person X is brave, then person X is bored.\n\nAnd the following facts:\ndave is excited.\ndave is an enemy of george.\neve is an enemy of frank.\napple is red.\n\nQUESTION:\nIs phone is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 973,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(dave).",
    "c": "curious(X) :- excited(X).\nbored(X) :- clever(X), sibling(X,V), hungry(V).\nenemy(Y,Z) :- tall(Y), hungry(Z), red(B).\ndirty(Y) :- hard(Y).\nhappy(X) :- bored(X), parent(X,U), happy(U).\nlikes(Y,X) :- strong(Y), clean(X), dislikes(A,X).\nhappy(Y) :- brave(Y).\ntired(Z) :- busy(Z).\nangry(X) :- angry(X).\nsmooth(Y) :- rough(Y), owns(W,Y), hungry(W).\nparent(X,Y) :- tired(Y), funny(X).\nsibling(X,Z) :- tired(Z), funny(X).\ndislikes(Z,X) :- clever(Z), small(X), likes(B,X).\nsoft(Y) :- small(Y), dislikes(A,Y), strong(A).\ntired(Z) :- funny(Z), owns(Z,B), clean(B).\nsmall(X) :- small(X), likes(B,X), funny(B).\nlight(X) :- new(X).\nfunny(X) :- clever(X), weak(X).\nsoft(X) :- small(X), clean(X).\nsad(X) :- clever(X).\nsmooth(X) :- new(X), big(X).\nhard(X) :- red(X).\nfunny(X) :- happy(X), clever(X).\nwet(X) :- heavy(X), light(X).\nbored(X) :- brave(X).\ncurious(dave).\nenemy(dave,george).\nenemy(eve,frank).\nred(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is curious.\nFor all X, if there exists V such that person X is clever and person X is a sibling of person V and person V is hungry, then person X is bored.\nFor all Y, Z, if there exists B such that person Y is tall and person Z is hungry and object B is red, then person Y is an enemy of person Z.\nFor all Y, if object Y is hard, then object Y is dirty.\nFor all X, if there exists U such that person X is bored and person X is a parent of person U and person U is happy, then person X is happy.\nFor all X, Y, if there exists A such that person Y is strong and object X is clean and person A dislikes object X, then person Y likes object X.\nFor all Y, if person Y is brave, then person Y is happy.\nFor all Z, if person Z is busy, then person Z is tired.\nFor all X, if person X is angry, then person X is angry.\nFor all Y, if there exists W such that object Y is rough and person W owns object Y and person W is hungry, then object Y is smooth.\nFor all X, Y, if person Y is tired and person X is funny, then person X is a parent of person Y.\nFor all X, Z, if person Z is tired and person X is funny, then person X is a sibling of person Z.\nFor all X, Z, if there exists B such that person Z is clever and object X is small and person B likes object X, then person Z dislikes object X.\nFor all Y, if there exists A such that object Y is small and person A dislikes object Y and person A is strong, then object Y is soft.\nFor all Z, if there exists B such that person Z is funny and person Z owns object B and object B is clean, then person Z is tired.\nFor all X, if there exists B such that object X is small and person B likes object X and person B is funny, then object X is small.\nFor all X, if object X is new, then object X is light.\nFor all X, if person X is clever and person X is weak, then person X is funny.\nFor all X, if object X is small and object X is clean, then object X is soft.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if object X is new and object X is big, then object X is smooth.\nFor all X, if object X is red, then object X is hard.\nFor all X, if person X is happy and person X is clever, then person X is funny.\nFor all X, if object X is heavy and object X is light, then object X is wet.\nFor all X, if person X is brave, then person X is bored.\n\nAnd the following facts:\ndave is curious.\ndave is an enemy of george.\neve is an enemy of frank.\napple is red.\n\nQUESTION:\nCould dave is excited explain dave is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 974,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(bob).",
    "c": "curious(X) :- excited(X).\nbored(X) :- clever(X), sibling(X,V), hungry(V).\nenemy(Y,Z) :- tall(Y), hungry(Z), red(B).\ndirty(Y) :- hard(Y).\nhappy(X) :- bored(X), parent(X,U), happy(U).\nlikes(Y,X) :- strong(Y), clean(X), dislikes(A,X).\nhappy(Y) :- brave(Y).\ntired(Z) :- busy(Z).\nangry(X) :- angry(X).\nsmooth(Y) :- rough(Y), owns(W,Y), hungry(W).\nparent(X,Y) :- tired(Y), funny(X).\nsibling(X,Z) :- tired(Z), funny(X).\ndislikes(Z,X) :- clever(Z), small(X), likes(B,X).\nsoft(Y) :- small(Y), dislikes(A,Y), strong(A).\ntired(Z) :- funny(Z), owns(Z,B), clean(B).\nsmall(X) :- small(X), likes(B,X), funny(B).\nlight(X) :- new(X).\nfunny(X) :- clever(X), weak(X).\nsoft(X) :- small(X), clean(X).\nsad(X) :- clever(X).\nsmooth(X) :- new(X), big(X).\nhard(X) :- red(X).\nfunny(X) :- happy(X), clever(X).\nwet(X) :- heavy(X), light(X).\nbored(X) :- brave(X).\ncurious(dave).\nenemy(dave,george).\nenemy(eve,frank).\nred(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is curious.\nFor all X, if there exists V such that person X is clever and person X is a sibling of person V and person V is hungry, then person X is bored.\nFor all Y, Z, if there exists B such that person Y is tall and person Z is hungry and object B is red, then person Y is an enemy of person Z.\nFor all Y, if object Y is hard, then object Y is dirty.\nFor all X, if there exists U such that person X is bored and person X is a parent of person U and person U is happy, then person X is happy.\nFor all X, Y, if there exists A such that person Y is strong and object X is clean and person A dislikes object X, then person Y likes object X.\nFor all Y, if person Y is brave, then person Y is happy.\nFor all Z, if person Z is busy, then person Z is tired.\nFor all X, if person X is angry, then person X is angry.\nFor all Y, if there exists W such that object Y is rough and person W owns object Y and person W is hungry, then object Y is smooth.\nFor all X, Y, if person Y is tired and person X is funny, then person X is a parent of person Y.\nFor all X, Z, if person Z is tired and person X is funny, then person X is a sibling of person Z.\nFor all X, Z, if there exists B such that person Z is clever and object X is small and person B likes object X, then person Z dislikes object X.\nFor all Y, if there exists A such that object Y is small and person A dislikes object Y and person A is strong, then object Y is soft.\nFor all Z, if there exists B such that person Z is funny and person Z owns object B and object B is clean, then person Z is tired.\nFor all X, if there exists B such that object X is small and person B likes object X and person B is funny, then object X is small.\nFor all X, if object X is new, then object X is light.\nFor all X, if person X is clever and person X is weak, then person X is funny.\nFor all X, if object X is small and object X is clean, then object X is soft.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if object X is new and object X is big, then object X is smooth.\nFor all X, if object X is red, then object X is hard.\nFor all X, if person X is happy and person X is clever, then person X is funny.\nFor all X, if object X is heavy and object X is light, then object X is wet.\nFor all X, if person X is brave, then person X is bored.\n\nAnd the following facts:\ndave is curious.\ndave is an enemy of george.\neve is an enemy of frank.\napple is red.\n\nQUESTION:\nCould bob is busy explain dave is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 975,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "big(X) :- heavy(X).\nred(X) :- big(X).\nsmooth(X) :- red(X).\nlight(X) :- smooth(X).\nsoft(X) :- light(X).\nnew(Z) :- small(Z), dislikes(U,Z), friendly(U).\nstrong(Z) :- funny(Z), bored(F).\ndirty(Z) :- new(Z).\nenemy(Y,Z) :- angry(Y), clever(Z).\nbusy(Z) :- happy(Z), weak(B).\nenemy(Z,X) :- angry(Z), bored(X), enemy(Z,V).\nclever(Z) :- calm(Z).\nhappy(X) :- funny(X).\nbusy(X) :- angry(X), dislikes(X,V), small(V).\nwet(Z) :- old(Z).\ncalm(Z) :- clever(Z), sibling(Z,V), angry(V).\nparent(Z,X) :- excited(Z), friendly(X).\nexcited(X) :- sad(X).\nnew(X) :- small(X), old(A).\nwet(X) :- old(X), owns(W,X), hungry(W).\nangry(X) :- busy(X).\nhappy(X) :- busy(X).\nhappy(X) :- funny(X).\nnew(X) :- hard(X).\nhard(X) :- clean(X), old(X).\nheavy(phone).\nsmall(pencil).\nhappy(eve).\ndislikes(frank,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all Z, if there exists U such that object Z is small and person U dislikes object Z and person U is friendly, then object Z is new.\nFor all Z, if there exists F such that person Z is funny and person F is bored, then person Z is strong.\nFor all Z, if object Z is new, then object Z is dirty.\nFor all Y, Z, if person Y is angry and person Z is clever, then person Y is an enemy of person Z.\nFor all Z, if there exists B such that person Z is happy and person B is weak, then person Z is busy.\nFor all X, Z, if there exists V such that person Z is angry and person X is bored and person Z is an enemy of person V, then person Z is an enemy of person X.\nFor all Z, if person Z is calm, then person Z is clever.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if there exists V such that person X is angry and person X dislikes object V and object V is small, then person X is busy.\nFor all Z, if object Z is old, then object Z is wet.\nFor all Z, if there exists V such that person Z is clever and person Z is a sibling of person V and person V is angry, then person Z is calm.\nFor all X, Z, if person Z is excited and person X is friendly, then person Z is a parent of person X.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if there exists A such that object X is small and object A is old, then object X is new.\nFor all X, if there exists W such that object X is old and person W owns object X and person W is hungry, then object X is wet.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is busy, then person X is happy.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is clean and object X is old, then object X is hard.\n\nAnd the following facts:\nphone is heavy.\npencil is small.\neve is happy.\nfrank dislikes phone.\n\nQUESTION:\nIs phone is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 976,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(eve).",
    "c": "big(X) :- heavy(X).\nred(X) :- big(X).\nsmooth(X) :- red(X).\nlight(X) :- smooth(X).\nsoft(X) :- light(X).\nnew(Z) :- small(Z), dislikes(U,Z), friendly(U).\nstrong(Z) :- funny(Z), bored(F).\ndirty(Z) :- new(Z).\nenemy(Y,Z) :- angry(Y), clever(Z).\nbusy(Z) :- happy(Z), weak(B).\nenemy(Z,X) :- angry(Z), bored(X), enemy(Z,V).\nclever(Z) :- calm(Z).\nhappy(X) :- funny(X).\nbusy(X) :- angry(X), dislikes(X,V), small(V).\nwet(Z) :- old(Z).\ncalm(Z) :- clever(Z), sibling(Z,V), angry(V).\nparent(Z,X) :- excited(Z), friendly(X).\nexcited(X) :- sad(X).\nnew(X) :- small(X), old(A).\nwet(X) :- old(X), owns(W,X), hungry(W).\nangry(X) :- busy(X).\nhappy(X) :- busy(X).\nhappy(X) :- funny(X).\nnew(X) :- hard(X).\nhard(X) :- clean(X), old(X).\nheavy(phone).\nsmall(pencil).\nhappy(eve).\ndislikes(frank,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all Z, if there exists U such that object Z is small and person U dislikes object Z and person U is friendly, then object Z is new.\nFor all Z, if there exists F such that person Z is funny and person F is bored, then person Z is strong.\nFor all Z, if object Z is new, then object Z is dirty.\nFor all Y, Z, if person Y is angry and person Z is clever, then person Y is an enemy of person Z.\nFor all Z, if there exists B such that person Z is happy and person B is weak, then person Z is busy.\nFor all X, Z, if there exists V such that person Z is angry and person X is bored and person Z is an enemy of person V, then person Z is an enemy of person X.\nFor all Z, if person Z is calm, then person Z is clever.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if there exists V such that person X is angry and person X dislikes object V and object V is small, then person X is busy.\nFor all Z, if object Z is old, then object Z is wet.\nFor all Z, if there exists V such that person Z is clever and person Z is a sibling of person V and person V is angry, then person Z is calm.\nFor all X, Z, if person Z is excited and person X is friendly, then person Z is a parent of person X.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if there exists A such that object X is small and object A is old, then object X is new.\nFor all X, if there exists W such that object X is old and person W owns object X and person W is hungry, then object X is wet.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is busy, then person X is happy.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is clean and object X is old, then object X is hard.\n\nAnd the following facts:\nphone is heavy.\npencil is small.\neve is happy.\nfrank dislikes phone.\n\nQUESTION:\nIs eve is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 977,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(phone).",
    "c": "big(X) :- heavy(X).\nred(X) :- big(X).\nsmooth(X) :- red(X).\nlight(X) :- smooth(X).\nsoft(X) :- light(X).\nnew(Z) :- small(Z), dislikes(U,Z), friendly(U).\nstrong(Z) :- funny(Z), bored(F).\ndirty(Z) :- new(Z).\nenemy(Y,Z) :- angry(Y), clever(Z).\nbusy(Z) :- happy(Z), weak(B).\nenemy(Z,X) :- angry(Z), bored(X), enemy(Z,V).\nclever(Z) :- calm(Z).\nhappy(X) :- funny(X).\nbusy(X) :- angry(X), dislikes(X,V), small(V).\nwet(Z) :- old(Z).\ncalm(Z) :- clever(Z), sibling(Z,V), angry(V).\nparent(Z,X) :- excited(Z), friendly(X).\nexcited(X) :- sad(X).\nnew(X) :- small(X), old(A).\nwet(X) :- old(X), owns(W,X), hungry(W).\nangry(X) :- busy(X).\nhappy(X) :- busy(X).\nhappy(X) :- funny(X).\nnew(X) :- hard(X).\nhard(X) :- clean(X), old(X).\nsoft(phone).\nsmall(pencil).\nhappy(eve).\ndislikes(frank,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all Z, if there exists U such that object Z is small and person U dislikes object Z and person U is friendly, then object Z is new.\nFor all Z, if there exists F such that person Z is funny and person F is bored, then person Z is strong.\nFor all Z, if object Z is new, then object Z is dirty.\nFor all Y, Z, if person Y is angry and person Z is clever, then person Y is an enemy of person Z.\nFor all Z, if there exists B such that person Z is happy and person B is weak, then person Z is busy.\nFor all X, Z, if there exists V such that person Z is angry and person X is bored and person Z is an enemy of person V, then person Z is an enemy of person X.\nFor all Z, if person Z is calm, then person Z is clever.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if there exists V such that person X is angry and person X dislikes object V and object V is small, then person X is busy.\nFor all Z, if object Z is old, then object Z is wet.\nFor all Z, if there exists V such that person Z is clever and person Z is a sibling of person V and person V is angry, then person Z is calm.\nFor all X, Z, if person Z is excited and person X is friendly, then person Z is a parent of person X.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if there exists A such that object X is small and object A is old, then object X is new.\nFor all X, if there exists W such that object X is old and person W owns object X and person W is hungry, then object X is wet.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is busy, then person X is happy.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is clean and object X is old, then object X is hard.\n\nAnd the following facts:\nphone is soft.\npencil is small.\neve is happy.\nfrank dislikes phone.\n\nQUESTION:\nCould phone is heavy explain phone is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 978,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(apple).",
    "c": "big(X) :- heavy(X).\nred(X) :- big(X).\nsmooth(X) :- red(X).\nlight(X) :- smooth(X).\nsoft(X) :- light(X).\nnew(Z) :- small(Z), dislikes(U,Z), friendly(U).\nstrong(Z) :- funny(Z), bored(F).\ndirty(Z) :- new(Z).\nenemy(Y,Z) :- angry(Y), clever(Z).\nbusy(Z) :- happy(Z), weak(B).\nenemy(Z,X) :- angry(Z), bored(X), enemy(Z,V).\nclever(Z) :- calm(Z).\nhappy(X) :- funny(X).\nbusy(X) :- angry(X), dislikes(X,V), small(V).\nwet(Z) :- old(Z).\ncalm(Z) :- clever(Z), sibling(Z,V), angry(V).\nparent(Z,X) :- excited(Z), friendly(X).\nexcited(X) :- sad(X).\nnew(X) :- small(X), old(A).\nwet(X) :- old(X), owns(W,X), hungry(W).\nangry(X) :- busy(X).\nhappy(X) :- busy(X).\nhappy(X) :- funny(X).\nnew(X) :- hard(X).\nhard(X) :- clean(X), old(X).\nsoft(phone).\nsmall(pencil).\nhappy(eve).\ndislikes(frank,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all Z, if there exists U such that object Z is small and person U dislikes object Z and person U is friendly, then object Z is new.\nFor all Z, if there exists F such that person Z is funny and person F is bored, then person Z is strong.\nFor all Z, if object Z is new, then object Z is dirty.\nFor all Y, Z, if person Y is angry and person Z is clever, then person Y is an enemy of person Z.\nFor all Z, if there exists B such that person Z is happy and person B is weak, then person Z is busy.\nFor all X, Z, if there exists V such that person Z is angry and person X is bored and person Z is an enemy of person V, then person Z is an enemy of person X.\nFor all Z, if person Z is calm, then person Z is clever.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if there exists V such that person X is angry and person X dislikes object V and object V is small, then person X is busy.\nFor all Z, if object Z is old, then object Z is wet.\nFor all Z, if there exists V such that person Z is clever and person Z is a sibling of person V and person V is angry, then person Z is calm.\nFor all X, Z, if person Z is excited and person X is friendly, then person Z is a parent of person X.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if there exists A such that object X is small and object A is old, then object X is new.\nFor all X, if there exists W such that object X is old and person W owns object X and person W is hungry, then object X is wet.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is busy, then person X is happy.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is clean and object X is old, then object X is hard.\n\nAnd the following facts:\nphone is soft.\npencil is small.\neve is happy.\nfrank dislikes phone.\n\nQUESTION:\nCould apple is soft explain phone is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 979,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(apple).",
    "c": "small(X) :- big(X).\nbig(X) :- small(X).\nred(X) :- big(X).\nheavy(X) :- red(X).\nsmall(X) :- heavy(X).\nhappy(Y) :- tall(Y), parent(Y,B), tall(B).\nweak(X) :- bored(X), parent(X,U), angry(U).\nparent(Z,X) :- friendly(Z), friendly(X), friend(X,W).\nhungry(Y) :- bored(Y), parent(Y,W), friendly(W).\nweak(Y) :- sad(Y), new(B).\nlight(Z) :- light(Z), owns(U,Z), happy(U).\nfriend(X,Y) :- tired(Y), sad(X), angry(D).\ntall(Y) :- brave(Y).\ndirty(Z) :- smooth(Z).\ntired(Y) :- strong(Y), friend(Y,W), busy(W).\ndislikes(X,Y) :- clever(X), wet(Y).\nnew(X) :- smooth(X).\nfunny(X) :- weak(X).\nclever(X) :- weak(X).\nfriendly(X) :- angry(X).\nclever(X) :- strong(X), tall(X).\nnew(X) :- hard(X).\nsmooth(X) :- hard(X).\nfunny(X) :- excited(X).\nfriend(X,Y) :- excited(X), brave(Y).\nbig(apple).\ndislikes(dave,car).\nenemy(dave,frank).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all Y, if there exists B such that person Y is tall and person Y is a parent of person B and person B is tall, then person Y is happy.\nFor all X, if there exists U such that person X is bored and person X is a parent of person U and person U is angry, then person X is weak.\nFor all X, Z, if there exists W such that person Z is friendly and person X is friendly and person X is a friend of person W, then person Z is a parent of person X.\nFor all Y, if there exists W such that person Y is bored and person Y is a parent of person W and person W is friendly, then person Y is hungry.\nFor all Y, if there exists B such that person Y is sad and object B is new, then person Y is weak.\nFor all Z, if there exists U such that object Z is light and person U owns object Z and person U is happy, then object Z is light.\nFor all X, Y, if there exists D such that person Y is tired and person X is sad and person D is angry, then person X is a friend of person Y.\nFor all Y, if person Y is brave, then person Y is tall.\nFor all Z, if object Z is smooth, then object Z is dirty.\nFor all Y, if there exists W such that person Y is strong and person Y is a friend of person W and person W is busy, then person Y is tired.\nFor all X, Y, if person X is clever and object Y is wet, then person X dislikes object Y.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is strong and person X is tall, then person X is clever.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if person X is excited, then person X is funny.\nFor all X, Y, if person X is excited and person Y is brave, then person X is a friend of person Y.\n\nAnd the following facts:\napple is big.\ndave dislikes car.\ndave is an enemy of frank.\nalice is a parent of frank.\n\nQUESTION:\nIs apple is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 980,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(phone).",
    "c": "small(X) :- big(X).\nbig(X) :- small(X).\nred(X) :- big(X).\nheavy(X) :- red(X).\nsmall(X) :- heavy(X).\nhappy(Y) :- tall(Y), parent(Y,B), tall(B).\nweak(X) :- bored(X), parent(X,U), angry(U).\nparent(Z,X) :- friendly(Z), friendly(X), friend(X,W).\nhungry(Y) :- bored(Y), parent(Y,W), friendly(W).\nweak(Y) :- sad(Y), new(B).\nlight(Z) :- light(Z), owns(U,Z), happy(U).\nfriend(X,Y) :- tired(Y), sad(X), angry(D).\ntall(Y) :- brave(Y).\ndirty(Z) :- smooth(Z).\ntired(Y) :- strong(Y), friend(Y,W), busy(W).\ndislikes(X,Y) :- clever(X), wet(Y).\nnew(X) :- smooth(X).\nfunny(X) :- weak(X).\nclever(X) :- weak(X).\nfriendly(X) :- angry(X).\nclever(X) :- strong(X), tall(X).\nnew(X) :- hard(X).\nsmooth(X) :- hard(X).\nfunny(X) :- excited(X).\nfriend(X,Y) :- excited(X), brave(Y).\nbig(apple).\ndislikes(dave,car).\nenemy(dave,frank).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all Y, if there exists B such that person Y is tall and person Y is a parent of person B and person B is tall, then person Y is happy.\nFor all X, if there exists U such that person X is bored and person X is a parent of person U and person U is angry, then person X is weak.\nFor all X, Z, if there exists W such that person Z is friendly and person X is friendly and person X is a friend of person W, then person Z is a parent of person X.\nFor all Y, if there exists W such that person Y is bored and person Y is a parent of person W and person W is friendly, then person Y is hungry.\nFor all Y, if there exists B such that person Y is sad and object B is new, then person Y is weak.\nFor all Z, if there exists U such that object Z is light and person U owns object Z and person U is happy, then object Z is light.\nFor all X, Y, if there exists D such that person Y is tired and person X is sad and person D is angry, then person X is a friend of person Y.\nFor all Y, if person Y is brave, then person Y is tall.\nFor all Z, if object Z is smooth, then object Z is dirty.\nFor all Y, if there exists W such that person Y is strong and person Y is a friend of person W and person W is busy, then person Y is tired.\nFor all X, Y, if person X is clever and object Y is wet, then person X dislikes object Y.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is strong and person X is tall, then person X is clever.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if person X is excited, then person X is funny.\nFor all X, Y, if person X is excited and person Y is brave, then person X is a friend of person Y.\n\nAnd the following facts:\napple is big.\ndave dislikes car.\ndave is an enemy of frank.\nalice is a parent of frank.\n\nQUESTION:\nIs phone is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 981,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(apple).",
    "c": "small(X) :- big(X).\nbig(X) :- small(X).\nred(X) :- big(X).\nheavy(X) :- red(X).\nsmall(X) :- heavy(X).\nhappy(Y) :- tall(Y), parent(Y,B), tall(B).\nweak(X) :- bored(X), parent(X,U), angry(U).\nparent(Z,X) :- friendly(Z), friendly(X), friend(X,W).\nhungry(Y) :- bored(Y), parent(Y,W), friendly(W).\nweak(Y) :- sad(Y), new(B).\nlight(Z) :- light(Z), owns(U,Z), happy(U).\nfriend(X,Y) :- tired(Y), sad(X), angry(D).\ntall(Y) :- brave(Y).\ndirty(Z) :- smooth(Z).\ntired(Y) :- strong(Y), friend(Y,W), busy(W).\ndislikes(X,Y) :- clever(X), wet(Y).\nnew(X) :- smooth(X).\nfunny(X) :- weak(X).\nclever(X) :- weak(X).\nfriendly(X) :- angry(X).\nclever(X) :- strong(X), tall(X).\nnew(X) :- hard(X).\nsmooth(X) :- hard(X).\nfunny(X) :- excited(X).\nfriend(X,Y) :- excited(X), brave(Y).\nsmall(apple).\ndislikes(dave,car).\nenemy(dave,frank).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all Y, if there exists B such that person Y is tall and person Y is a parent of person B and person B is tall, then person Y is happy.\nFor all X, if there exists U such that person X is bored and person X is a parent of person U and person U is angry, then person X is weak.\nFor all X, Z, if there exists W such that person Z is friendly and person X is friendly and person X is a friend of person W, then person Z is a parent of person X.\nFor all Y, if there exists W such that person Y is bored and person Y is a parent of person W and person W is friendly, then person Y is hungry.\nFor all Y, if there exists B such that person Y is sad and object B is new, then person Y is weak.\nFor all Z, if there exists U such that object Z is light and person U owns object Z and person U is happy, then object Z is light.\nFor all X, Y, if there exists D such that person Y is tired and person X is sad and person D is angry, then person X is a friend of person Y.\nFor all Y, if person Y is brave, then person Y is tall.\nFor all Z, if object Z is smooth, then object Z is dirty.\nFor all Y, if there exists W such that person Y is strong and person Y is a friend of person W and person W is busy, then person Y is tired.\nFor all X, Y, if person X is clever and object Y is wet, then person X dislikes object Y.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is strong and person X is tall, then person X is clever.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if person X is excited, then person X is funny.\nFor all X, Y, if person X is excited and person Y is brave, then person X is a friend of person Y.\n\nAnd the following facts:\napple is small.\ndave dislikes car.\ndave is an enemy of frank.\nalice is a parent of frank.\n\nQUESTION:\nCould apple is big explain apple is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 982,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(frank).",
    "c": "small(X) :- big(X).\nbig(X) :- small(X).\nred(X) :- big(X).\nheavy(X) :- red(X).\nsmall(X) :- heavy(X).\nhappy(Y) :- tall(Y), parent(Y,B), tall(B).\nweak(X) :- bored(X), parent(X,U), angry(U).\nparent(Z,X) :- friendly(Z), friendly(X), friend(X,W).\nhungry(Y) :- bored(Y), parent(Y,W), friendly(W).\nweak(Y) :- sad(Y), new(B).\nlight(Z) :- light(Z), owns(U,Z), happy(U).\nfriend(X,Y) :- tired(Y), sad(X), angry(D).\ntall(Y) :- brave(Y).\ndirty(Z) :- smooth(Z).\ntired(Y) :- strong(Y), friend(Y,W), busy(W).\ndislikes(X,Y) :- clever(X), wet(Y).\nnew(X) :- smooth(X).\nfunny(X) :- weak(X).\nclever(X) :- weak(X).\nfriendly(X) :- angry(X).\nclever(X) :- strong(X), tall(X).\nnew(X) :- hard(X).\nsmooth(X) :- hard(X).\nfunny(X) :- excited(X).\nfriend(X,Y) :- excited(X), brave(Y).\nsmall(apple).\ndislikes(dave,car).\nenemy(dave,frank).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all Y, if there exists B such that person Y is tall and person Y is a parent of person B and person B is tall, then person Y is happy.\nFor all X, if there exists U such that person X is bored and person X is a parent of person U and person U is angry, then person X is weak.\nFor all X, Z, if there exists W such that person Z is friendly and person X is friendly and person X is a friend of person W, then person Z is a parent of person X.\nFor all Y, if there exists W such that person Y is bored and person Y is a parent of person W and person W is friendly, then person Y is hungry.\nFor all Y, if there exists B such that person Y is sad and object B is new, then person Y is weak.\nFor all Z, if there exists U such that object Z is light and person U owns object Z and person U is happy, then object Z is light.\nFor all X, Y, if there exists D such that person Y is tired and person X is sad and person D is angry, then person X is a friend of person Y.\nFor all Y, if person Y is brave, then person Y is tall.\nFor all Z, if object Z is smooth, then object Z is dirty.\nFor all Y, if there exists W such that person Y is strong and person Y is a friend of person W and person W is busy, then person Y is tired.\nFor all X, Y, if person X is clever and object Y is wet, then person X dislikes object Y.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is angry, then person X is friendly.\nFor all X, if person X is strong and person X is tall, then person X is clever.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is hard, then object X is smooth.\nFor all X, if person X is excited, then person X is funny.\nFor all X, Y, if person X is excited and person Y is brave, then person X is a friend of person Y.\n\nAnd the following facts:\napple is small.\ndave dislikes car.\ndave is an enemy of frank.\nalice is a parent of frank.\n\nQUESTION:\nCould frank is tired explain apple is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 983,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hard(car).",
    "c": "rough(X) :- light(X).\nwet(X) :- rough(X).\nold(X) :- wet(X).\nred(X) :- old(X).\nhard(X) :- red(X).\ntired(Z) :- tired(Z), parent(Z,B), funny(B).\nexcited(X) :- curious(X), likes(X,W), smooth(W).\nclean(Y) :- clean(Y).\nsmooth(X) :- small(X), likes(V,X), weak(V).\nclean(Z) :- big(Z), dislikes(B,Z), hungry(B).\nparent(Z,Y) :- busy(Y), hungry(Z).\nfriend(X,Z) :- weak(Z), happy(X), heavy(C).\nsad(Y) :- friendly(Y).\nbored(Y) :- excited(Y).\nclean(Z) :- small(Z).\nsoft(Z) :- heavy(Z), owns(W,Z), tall(W).\nangry(Y) :- brave(Y), enemy(Y,V), hungry(V).\nlikes(Y,X) :- calm(Y), smooth(X).\ntall(X) :- sad(X), dislikes(X,A), big(A).\nfriendly(X) :- bored(X), excited(X).\ntall(X) :- curious(X).\nsmall(X) :- dirty(X).\nsoft(X) :- clean(X).\nsoft(X) :- clean(X), clean(X).\ndislikes(X,Y) :- bored(X), clean(Y).\nlight(car).\ndirty(ball).\ndislikes(carol,apple).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all Z, if there exists B such that person Z is tired and person Z is a parent of person B and person B is funny, then person Z is tired.\nFor all X, if there exists W such that person X is curious and person X likes object W and object W is smooth, then person X is excited.\nFor all Y, if object Y is clean, then object Y is clean.\nFor all X, if there exists V such that object X is small and person V likes object X and person V is weak, then object X is smooth.\nFor all Z, if there exists B such that object Z is big and person B dislikes object Z and person B is hungry, then object Z is clean.\nFor all Y, Z, if person Y is busy and person Z is hungry, then person Z is a parent of person Y.\nFor all X, Z, if there exists C such that person Z is weak and person X is happy and object C is heavy, then person X is a friend of person Z.\nFor all Y, if person Y is friendly, then person Y is sad.\nFor all Y, if person Y is excited, then person Y is bored.\nFor all Z, if object Z is small, then object Z is clean.\nFor all Z, if there exists W such that object Z is heavy and person W owns object Z and person W is tall, then object Z is soft.\nFor all Y, if there exists V such that person Y is brave and person Y is an enemy of person V and person V is hungry, then person Y is angry.\nFor all X, Y, if person Y is calm and object X is smooth, then person Y likes object X.\nFor all X, if there exists A such that person X is sad and person X dislikes object A and object A is big, then person X is tall.\nFor all X, if person X is bored and person X is excited, then person X is friendly.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is clean and object X is clean, then object X is soft.\nFor all X, Y, if person X is bored and object Y is clean, then person X dislikes object Y.\n\nAnd the following facts:\ncar is light.\nball is dirty.\ncarol dislikes apple.\ncarol is a friend of eve.\n\nQUESTION:\nIs car is hard true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 984,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(apple).",
    "c": "rough(X) :- light(X).\nwet(X) :- rough(X).\nold(X) :- wet(X).\nred(X) :- old(X).\nhard(X) :- red(X).\ntired(Z) :- tired(Z), parent(Z,B), funny(B).\nexcited(X) :- curious(X), likes(X,W), smooth(W).\nclean(Y) :- clean(Y).\nsmooth(X) :- small(X), likes(V,X), weak(V).\nclean(Z) :- big(Z), dislikes(B,Z), hungry(B).\nparent(Z,Y) :- busy(Y), hungry(Z).\nfriend(X,Z) :- weak(Z), happy(X), heavy(C).\nsad(Y) :- friendly(Y).\nbored(Y) :- excited(Y).\nclean(Z) :- small(Z).\nsoft(Z) :- heavy(Z), owns(W,Z), tall(W).\nangry(Y) :- brave(Y), enemy(Y,V), hungry(V).\nlikes(Y,X) :- calm(Y), smooth(X).\ntall(X) :- sad(X), dislikes(X,A), big(A).\nfriendly(X) :- bored(X), excited(X).\ntall(X) :- curious(X).\nsmall(X) :- dirty(X).\nsoft(X) :- clean(X).\nsoft(X) :- clean(X), clean(X).\ndislikes(X,Y) :- bored(X), clean(Y).\nlight(car).\ndirty(ball).\ndislikes(carol,apple).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all Z, if there exists B such that person Z is tired and person Z is a parent of person B and person B is funny, then person Z is tired.\nFor all X, if there exists W such that person X is curious and person X likes object W and object W is smooth, then person X is excited.\nFor all Y, if object Y is clean, then object Y is clean.\nFor all X, if there exists V such that object X is small and person V likes object X and person V is weak, then object X is smooth.\nFor all Z, if there exists B such that object Z is big and person B dislikes object Z and person B is hungry, then object Z is clean.\nFor all Y, Z, if person Y is busy and person Z is hungry, then person Z is a parent of person Y.\nFor all X, Z, if there exists C such that person Z is weak and person X is happy and object C is heavy, then person X is a friend of person Z.\nFor all Y, if person Y is friendly, then person Y is sad.\nFor all Y, if person Y is excited, then person Y is bored.\nFor all Z, if object Z is small, then object Z is clean.\nFor all Z, if there exists W such that object Z is heavy and person W owns object Z and person W is tall, then object Z is soft.\nFor all Y, if there exists V such that person Y is brave and person Y is an enemy of person V and person V is hungry, then person Y is angry.\nFor all X, Y, if person Y is calm and object X is smooth, then person Y likes object X.\nFor all X, if there exists A such that person X is sad and person X dislikes object A and object A is big, then person X is tall.\nFor all X, if person X is bored and person X is excited, then person X is friendly.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is clean and object X is clean, then object X is soft.\nFor all X, Y, if person X is bored and object Y is clean, then person X dislikes object Y.\n\nAnd the following facts:\ncar is light.\nball is dirty.\ncarol dislikes apple.\ncarol is a friend of eve.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 985,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "rough(X) :- light(X).\nwet(X) :- rough(X).\nold(X) :- wet(X).\nred(X) :- old(X).\nhard(X) :- red(X).\ntired(Z) :- tired(Z), parent(Z,B), funny(B).\nexcited(X) :- curious(X), likes(X,W), smooth(W).\nclean(Y) :- clean(Y).\nsmooth(X) :- small(X), likes(V,X), weak(V).\nclean(Z) :- big(Z), dislikes(B,Z), hungry(B).\nparent(Z,Y) :- busy(Y), hungry(Z).\nfriend(X,Z) :- weak(Z), happy(X), heavy(C).\nsad(Y) :- friendly(Y).\nbored(Y) :- excited(Y).\nclean(Z) :- small(Z).\nsoft(Z) :- heavy(Z), owns(W,Z), tall(W).\nangry(Y) :- brave(Y), enemy(Y,V), hungry(V).\nlikes(Y,X) :- calm(Y), smooth(X).\ntall(X) :- sad(X), dislikes(X,A), big(A).\nfriendly(X) :- bored(X), excited(X).\ntall(X) :- curious(X).\nsmall(X) :- dirty(X).\nsoft(X) :- clean(X).\nsoft(X) :- clean(X), clean(X).\ndislikes(X,Y) :- bored(X), clean(Y).\nhard(car).\ndirty(ball).\ndislikes(carol,apple).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all Z, if there exists B such that person Z is tired and person Z is a parent of person B and person B is funny, then person Z is tired.\nFor all X, if there exists W such that person X is curious and person X likes object W and object W is smooth, then person X is excited.\nFor all Y, if object Y is clean, then object Y is clean.\nFor all X, if there exists V such that object X is small and person V likes object X and person V is weak, then object X is smooth.\nFor all Z, if there exists B such that object Z is big and person B dislikes object Z and person B is hungry, then object Z is clean.\nFor all Y, Z, if person Y is busy and person Z is hungry, then person Z is a parent of person Y.\nFor all X, Z, if there exists C such that person Z is weak and person X is happy and object C is heavy, then person X is a friend of person Z.\nFor all Y, if person Y is friendly, then person Y is sad.\nFor all Y, if person Y is excited, then person Y is bored.\nFor all Z, if object Z is small, then object Z is clean.\nFor all Z, if there exists W such that object Z is heavy and person W owns object Z and person W is tall, then object Z is soft.\nFor all Y, if there exists V such that person Y is brave and person Y is an enemy of person V and person V is hungry, then person Y is angry.\nFor all X, Y, if person Y is calm and object X is smooth, then person Y likes object X.\nFor all X, if there exists A such that person X is sad and person X dislikes object A and object A is big, then person X is tall.\nFor all X, if person X is bored and person X is excited, then person X is friendly.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is clean and object X is clean, then object X is soft.\nFor all X, Y, if person X is bored and object Y is clean, then person X dislikes object Y.\n\nAnd the following facts:\ncar is hard.\nball is dirty.\ncarol dislikes apple.\ncarol is a friend of eve.\n\nQUESTION:\nCould car is light explain car is hard?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 986,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(dave).",
    "c": "rough(X) :- light(X).\nwet(X) :- rough(X).\nold(X) :- wet(X).\nred(X) :- old(X).\nhard(X) :- red(X).\ntired(Z) :- tired(Z), parent(Z,B), funny(B).\nexcited(X) :- curious(X), likes(X,W), smooth(W).\nclean(Y) :- clean(Y).\nsmooth(X) :- small(X), likes(V,X), weak(V).\nclean(Z) :- big(Z), dislikes(B,Z), hungry(B).\nparent(Z,Y) :- busy(Y), hungry(Z).\nfriend(X,Z) :- weak(Z), happy(X), heavy(C).\nsad(Y) :- friendly(Y).\nbored(Y) :- excited(Y).\nclean(Z) :- small(Z).\nsoft(Z) :- heavy(Z), owns(W,Z), tall(W).\nangry(Y) :- brave(Y), enemy(Y,V), hungry(V).\nlikes(Y,X) :- calm(Y), smooth(X).\ntall(X) :- sad(X), dislikes(X,A), big(A).\nfriendly(X) :- bored(X), excited(X).\ntall(X) :- curious(X).\nsmall(X) :- dirty(X).\nsoft(X) :- clean(X).\nsoft(X) :- clean(X), clean(X).\ndislikes(X,Y) :- bored(X), clean(Y).\nhard(car).\ndirty(ball).\ndislikes(carol,apple).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all Z, if there exists B such that person Z is tired and person Z is a parent of person B and person B is funny, then person Z is tired.\nFor all X, if there exists W such that person X is curious and person X likes object W and object W is smooth, then person X is excited.\nFor all Y, if object Y is clean, then object Y is clean.\nFor all X, if there exists V such that object X is small and person V likes object X and person V is weak, then object X is smooth.\nFor all Z, if there exists B such that object Z is big and person B dislikes object Z and person B is hungry, then object Z is clean.\nFor all Y, Z, if person Y is busy and person Z is hungry, then person Z is a parent of person Y.\nFor all X, Z, if there exists C such that person Z is weak and person X is happy and object C is heavy, then person X is a friend of person Z.\nFor all Y, if person Y is friendly, then person Y is sad.\nFor all Y, if person Y is excited, then person Y is bored.\nFor all Z, if object Z is small, then object Z is clean.\nFor all Z, if there exists W such that object Z is heavy and person W owns object Z and person W is tall, then object Z is soft.\nFor all Y, if there exists V such that person Y is brave and person Y is an enemy of person V and person V is hungry, then person Y is angry.\nFor all X, Y, if person Y is calm and object X is smooth, then person Y likes object X.\nFor all X, if there exists A such that person X is sad and person X dislikes object A and object A is big, then person X is tall.\nFor all X, if person X is bored and person X is excited, then person X is friendly.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is clean and object X is clean, then object X is soft.\nFor all X, Y, if person X is bored and object Y is clean, then person X dislikes object Y.\n\nAnd the following facts:\ncar is hard.\nball is dirty.\ncarol dislikes apple.\ncarol is a friend of eve.\n\nQUESTION:\nCould dave is busy explain car is hard?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 987,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(carol).",
    "c": "busy(X) :- angry(X).\nweak(X) :- busy(X).\nclever(X) :- weak(X).\ncalm(X) :- clever(X).\nbored(X) :- calm(X).\ntall(X) :- curious(X), parent(X,B), tired(B).\nrough(X) :- smooth(X), dislikes(B,X), hungry(B).\nbrave(Z) :- hungry(Z), friend(Z,A), sad(A).\nstrong(Z) :- tall(Z), parent(Z,B), hungry(B).\nred(Z) :- soft(Z), likes(A,Z), friendly(A).\ncurious(X) :- hungry(X), enemy(X,U), tall(U).\ntired(X) :- friendly(X), likes(X,W), dirty(W).\ndislikes(Z,Y) :- wet(Y), strong(Z), likes(A,Y).\nred(X) :- light(X).\nlikes(X,Y) :- tired(X), clean(Y).\nheavy(X) :- wet(X).\nfriendly(X) :- strong(X).\nwet(X) :- light(X).\ndirty(X) :- rough(X), light(X).\nfunny(X) :- brave(X).\nlight(X) :- rough(X).\nfriendly(X) :- funny(X), tired(X).\nowns(X,Y) :- happy(X), small(Y).\nsad(X) :- tired(X), brave(X).\ndirty(X) :- heavy(X), new(X).\nangry(carol).\nsibling(alice,bob).\nstrong(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if there exists B such that person X is curious and person X is a parent of person B and person B is tired, then person X is tall.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is hungry, then object X is rough.\nFor all Z, if there exists A such that person Z is hungry and person Z is a friend of person A and person A is sad, then person Z is brave.\nFor all Z, if there exists B such that person Z is tall and person Z is a parent of person B and person B is hungry, then person Z is strong.\nFor all Z, if there exists A such that object Z is soft and person A likes object Z and person A is friendly, then object Z is red.\nFor all X, if there exists U such that person X is hungry and person X is an enemy of person U and person U is tall, then person X is curious.\nFor all X, if there exists W such that person X is friendly and person X likes object W and object W is dirty, then person X is tired.\nFor all Y, Z, if there exists A such that object Y is wet and person Z is strong and person A likes object Y, then person Z dislikes object Y.\nFor all X, if object X is light, then object X is red.\nFor all X, Y, if person X is tired and object Y is clean, then person X likes object Y.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is rough and object X is light, then object X is dirty.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if object X is rough, then object X is light.\nFor all X, if person X is funny and person X is tired, then person X is friendly.\nFor all X, Y, if person X is happy and object Y is small, then person X owns object Y.\nFor all X, if person X is tired and person X is brave, then person X is sad.\nFor all X, if object X is heavy and object X is new, then object X is dirty.\n\nAnd the following facts:\ncarol is angry.\nalice is a sibling of bob.\ndave is strong.\ncarol is a parent of eve.\n\nQUESTION:\nIs carol is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 988,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(alice).",
    "c": "busy(X) :- angry(X).\nweak(X) :- busy(X).\nclever(X) :- weak(X).\ncalm(X) :- clever(X).\nbored(X) :- calm(X).\ntall(X) :- curious(X), parent(X,B), tired(B).\nrough(X) :- smooth(X), dislikes(B,X), hungry(B).\nbrave(Z) :- hungry(Z), friend(Z,A), sad(A).\nstrong(Z) :- tall(Z), parent(Z,B), hungry(B).\nred(Z) :- soft(Z), likes(A,Z), friendly(A).\ncurious(X) :- hungry(X), enemy(X,U), tall(U).\ntired(X) :- friendly(X), likes(X,W), dirty(W).\ndislikes(Z,Y) :- wet(Y), strong(Z), likes(A,Y).\nred(X) :- light(X).\nlikes(X,Y) :- tired(X), clean(Y).\nheavy(X) :- wet(X).\nfriendly(X) :- strong(X).\nwet(X) :- light(X).\ndirty(X) :- rough(X), light(X).\nfunny(X) :- brave(X).\nlight(X) :- rough(X).\nfriendly(X) :- funny(X), tired(X).\nowns(X,Y) :- happy(X), small(Y).\nsad(X) :- tired(X), brave(X).\ndirty(X) :- heavy(X), new(X).\nangry(carol).\nsibling(alice,bob).\nstrong(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if there exists B such that person X is curious and person X is a parent of person B and person B is tired, then person X is tall.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is hungry, then object X is rough.\nFor all Z, if there exists A such that person Z is hungry and person Z is a friend of person A and person A is sad, then person Z is brave.\nFor all Z, if there exists B such that person Z is tall and person Z is a parent of person B and person B is hungry, then person Z is strong.\nFor all Z, if there exists A such that object Z is soft and person A likes object Z and person A is friendly, then object Z is red.\nFor all X, if there exists U such that person X is hungry and person X is an enemy of person U and person U is tall, then person X is curious.\nFor all X, if there exists W such that person X is friendly and person X likes object W and object W is dirty, then person X is tired.\nFor all Y, Z, if there exists A such that object Y is wet and person Z is strong and person A likes object Y, then person Z dislikes object Y.\nFor all X, if object X is light, then object X is red.\nFor all X, Y, if person X is tired and object Y is clean, then person X likes object Y.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is rough and object X is light, then object X is dirty.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if object X is rough, then object X is light.\nFor all X, if person X is funny and person X is tired, then person X is friendly.\nFor all X, Y, if person X is happy and object Y is small, then person X owns object Y.\nFor all X, if person X is tired and person X is brave, then person X is sad.\nFor all X, if object X is heavy and object X is new, then object X is dirty.\n\nAnd the following facts:\ncarol is angry.\nalice is a sibling of bob.\ndave is strong.\ncarol is a parent of eve.\n\nQUESTION:\nIs alice is excited true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 989,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(carol).",
    "c": "busy(X) :- angry(X).\nweak(X) :- busy(X).\nclever(X) :- weak(X).\ncalm(X) :- clever(X).\nbored(X) :- calm(X).\ntall(X) :- curious(X), parent(X,B), tired(B).\nrough(X) :- smooth(X), dislikes(B,X), hungry(B).\nbrave(Z) :- hungry(Z), friend(Z,A), sad(A).\nstrong(Z) :- tall(Z), parent(Z,B), hungry(B).\nred(Z) :- soft(Z), likes(A,Z), friendly(A).\ncurious(X) :- hungry(X), enemy(X,U), tall(U).\ntired(X) :- friendly(X), likes(X,W), dirty(W).\ndislikes(Z,Y) :- wet(Y), strong(Z), likes(A,Y).\nred(X) :- light(X).\nlikes(X,Y) :- tired(X), clean(Y).\nheavy(X) :- wet(X).\nfriendly(X) :- strong(X).\nwet(X) :- light(X).\ndirty(X) :- rough(X), light(X).\nfunny(X) :- brave(X).\nlight(X) :- rough(X).\nfriendly(X) :- funny(X), tired(X).\nowns(X,Y) :- happy(X), small(Y).\nsad(X) :- tired(X), brave(X).\ndirty(X) :- heavy(X), new(X).\nbored(carol).\nsibling(alice,bob).\nstrong(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if there exists B such that person X is curious and person X is a parent of person B and person B is tired, then person X is tall.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is hungry, then object X is rough.\nFor all Z, if there exists A such that person Z is hungry and person Z is a friend of person A and person A is sad, then person Z is brave.\nFor all Z, if there exists B such that person Z is tall and person Z is a parent of person B and person B is hungry, then person Z is strong.\nFor all Z, if there exists A such that object Z is soft and person A likes object Z and person A is friendly, then object Z is red.\nFor all X, if there exists U such that person X is hungry and person X is an enemy of person U and person U is tall, then person X is curious.\nFor all X, if there exists W such that person X is friendly and person X likes object W and object W is dirty, then person X is tired.\nFor all Y, Z, if there exists A such that object Y is wet and person Z is strong and person A likes object Y, then person Z dislikes object Y.\nFor all X, if object X is light, then object X is red.\nFor all X, Y, if person X is tired and object Y is clean, then person X likes object Y.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is rough and object X is light, then object X is dirty.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if object X is rough, then object X is light.\nFor all X, if person X is funny and person X is tired, then person X is friendly.\nFor all X, Y, if person X is happy and object Y is small, then person X owns object Y.\nFor all X, if person X is tired and person X is brave, then person X is sad.\nFor all X, if object X is heavy and object X is new, then object X is dirty.\n\nAnd the following facts:\ncarol is bored.\nalice is a sibling of bob.\ndave is strong.\ncarol is a parent of eve.\n\nQUESTION:\nCould carol is angry explain carol is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 990,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(george).",
    "c": "busy(X) :- angry(X).\nweak(X) :- busy(X).\nclever(X) :- weak(X).\ncalm(X) :- clever(X).\nbored(X) :- calm(X).\ntall(X) :- curious(X), parent(X,B), tired(B).\nrough(X) :- smooth(X), dislikes(B,X), hungry(B).\nbrave(Z) :- hungry(Z), friend(Z,A), sad(A).\nstrong(Z) :- tall(Z), parent(Z,B), hungry(B).\nred(Z) :- soft(Z), likes(A,Z), friendly(A).\ncurious(X) :- hungry(X), enemy(X,U), tall(U).\ntired(X) :- friendly(X), likes(X,W), dirty(W).\ndislikes(Z,Y) :- wet(Y), strong(Z), likes(A,Y).\nred(X) :- light(X).\nlikes(X,Y) :- tired(X), clean(Y).\nheavy(X) :- wet(X).\nfriendly(X) :- strong(X).\nwet(X) :- light(X).\ndirty(X) :- rough(X), light(X).\nfunny(X) :- brave(X).\nlight(X) :- rough(X).\nfriendly(X) :- funny(X), tired(X).\nowns(X,Y) :- happy(X), small(Y).\nsad(X) :- tired(X), brave(X).\ndirty(X) :- heavy(X), new(X).\nbored(carol).\nsibling(alice,bob).\nstrong(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if there exists B such that person X is curious and person X is a parent of person B and person B is tired, then person X is tall.\nFor all X, if there exists B such that object X is smooth and person B dislikes object X and person B is hungry, then object X is rough.\nFor all Z, if there exists A such that person Z is hungry and person Z is a friend of person A and person A is sad, then person Z is brave.\nFor all Z, if there exists B such that person Z is tall and person Z is a parent of person B and person B is hungry, then person Z is strong.\nFor all Z, if there exists A such that object Z is soft and person A likes object Z and person A is friendly, then object Z is red.\nFor all X, if there exists U such that person X is hungry and person X is an enemy of person U and person U is tall, then person X is curious.\nFor all X, if there exists W such that person X is friendly and person X likes object W and object W is dirty, then person X is tired.\nFor all Y, Z, if there exists A such that object Y is wet and person Z is strong and person A likes object Y, then person Z dislikes object Y.\nFor all X, if object X is light, then object X is red.\nFor all X, Y, if person X is tired and object Y is clean, then person X likes object Y.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is rough and object X is light, then object X is dirty.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if object X is rough, then object X is light.\nFor all X, if person X is funny and person X is tired, then person X is friendly.\nFor all X, Y, if person X is happy and object Y is small, then person X owns object Y.\nFor all X, if person X is tired and person X is brave, then person X is sad.\nFor all X, if object X is heavy and object X is new, then object X is dirty.\n\nAnd the following facts:\ncarol is bored.\nalice is a sibling of bob.\ndave is strong.\ncarol is a parent of eve.\n\nQUESTION:\nCould george is angry explain carol is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 991,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "curious(X) :- strong(X).\nbrave(X) :- curious(X).\nfunny(X) :- brave(X).\nstrong(X) :- funny(X).\nclever(X) :- strong(X).\nangry(X) :- clever(X).\nexcited(X) :- angry(X).\ntall(X) :- excited(X).\nbusy(X) :- tall(X).\ncurious(X) :- busy(X).\nsoft(Z) :- red(Z), likes(W,Z), tired(W).\ndislikes(X,Y) :- old(Y), bored(X).\nlikes(X,Z) :- soft(Z), calm(X).\nold(Z) :- wet(Z), dislikes(V,Z), weak(V).\nlight(Y) :- red(Y), owns(A,Y), bored(A).\nsoft(Z) :- new(Z).\nnew(Y) :- heavy(Y), owns(A,Y), calm(A).\nsmooth(Y) :- clean(Y), likes(W,Y), bored(W).\nparent(Z,Y) :- weak(Y), weak(Z), sibling(Z,A).\nsad(X) :- friendly(X), friendly(X).\nold(X) :- soft(X).\nfriend(X,Y) :- happy(X), bored(Y).\nnew(X) :- rough(X), light(X).\nhard(X) :- dirty(X), light(X).\nparent(X,Y) :- happy(X), hungry(Y).\nstrong(dave).\nbig(phone).\nfriend(bob,dave).\nfriend(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all Z, if there exists W such that object Z is red and person W likes object Z and person W is tired, then object Z is soft.\nFor all X, Y, if object Y is old and person X is bored, then person X dislikes object Y.\nFor all X, Z, if object Z is soft and person X is calm, then person X likes object Z.\nFor all Z, if there exists V such that object Z is wet and person V dislikes object Z and person V is weak, then object Z is old.\nFor all Y, if there exists A such that object Y is red and person A owns object Y and person A is bored, then object Y is light.\nFor all Z, if object Z is new, then object Z is soft.\nFor all Y, if there exists A such that object Y is heavy and person A owns object Y and person A is calm, then object Y is new.\nFor all Y, if there exists W such that object Y is clean and person W likes object Y and person W is bored, then object Y is smooth.\nFor all Y, Z, if there exists A such that person Y is weak and person Z is weak and person Z is a sibling of person A, then person Z is a parent of person Y.\nFor all X, if person X is friendly and person X is friendly, then person X is sad.\nFor all X, if object X is soft, then object X is old.\nFor all X, Y, if person X is happy and person Y is bored, then person X is a friend of person Y.\nFor all X, if object X is rough and object X is light, then object X is new.\nFor all X, if object X is dirty and object X is light, then object X is hard.\nFor all X, Y, if person X is happy and person Y is hungry, then person X is a parent of person Y.\n\nAnd the following facts:\ndave is strong.\nphone is big.\nbob is a friend of dave.\ngeorge is a friend of bob.\n\nQUESTION:\nIs dave is curious true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 992,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(george).",
    "c": "curious(X) :- strong(X).\nbrave(X) :- curious(X).\nfunny(X) :- brave(X).\nstrong(X) :- funny(X).\nclever(X) :- strong(X).\nangry(X) :- clever(X).\nexcited(X) :- angry(X).\ntall(X) :- excited(X).\nbusy(X) :- tall(X).\ncurious(X) :- busy(X).\nsoft(Z) :- red(Z), likes(W,Z), tired(W).\ndislikes(X,Y) :- old(Y), bored(X).\nlikes(X,Z) :- soft(Z), calm(X).\nold(Z) :- wet(Z), dislikes(V,Z), weak(V).\nlight(Y) :- red(Y), owns(A,Y), bored(A).\nsoft(Z) :- new(Z).\nnew(Y) :- heavy(Y), owns(A,Y), calm(A).\nsmooth(Y) :- clean(Y), likes(W,Y), bored(W).\nparent(Z,Y) :- weak(Y), weak(Z), sibling(Z,A).\nsad(X) :- friendly(X), friendly(X).\nold(X) :- soft(X).\nfriend(X,Y) :- happy(X), bored(Y).\nnew(X) :- rough(X), light(X).\nhard(X) :- dirty(X), light(X).\nparent(X,Y) :- happy(X), hungry(Y).\nstrong(dave).\nbig(phone).\nfriend(bob,dave).\nfriend(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all Z, if there exists W such that object Z is red and person W likes object Z and person W is tired, then object Z is soft.\nFor all X, Y, if object Y is old and person X is bored, then person X dislikes object Y.\nFor all X, Z, if object Z is soft and person X is calm, then person X likes object Z.\nFor all Z, if there exists V such that object Z is wet and person V dislikes object Z and person V is weak, then object Z is old.\nFor all Y, if there exists A such that object Y is red and person A owns object Y and person A is bored, then object Y is light.\nFor all Z, if object Z is new, then object Z is soft.\nFor all Y, if there exists A such that object Y is heavy and person A owns object Y and person A is calm, then object Y is new.\nFor all Y, if there exists W such that object Y is clean and person W likes object Y and person W is bored, then object Y is smooth.\nFor all Y, Z, if there exists A such that person Y is weak and person Z is weak and person Z is a sibling of person A, then person Z is a parent of person Y.\nFor all X, if person X is friendly and person X is friendly, then person X is sad.\nFor all X, if object X is soft, then object X is old.\nFor all X, Y, if person X is happy and person Y is bored, then person X is a friend of person Y.\nFor all X, if object X is rough and object X is light, then object X is new.\nFor all X, if object X is dirty and object X is light, then object X is hard.\nFor all X, Y, if person X is happy and person Y is hungry, then person X is a parent of person Y.\n\nAnd the following facts:\ndave is strong.\nphone is big.\nbob is a friend of dave.\ngeorge is a friend of bob.\n\nQUESTION:\nIs george is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 993,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(dave).",
    "c": "curious(X) :- strong(X).\nbrave(X) :- curious(X).\nfunny(X) :- brave(X).\nstrong(X) :- funny(X).\nclever(X) :- strong(X).\nangry(X) :- clever(X).\nexcited(X) :- angry(X).\ntall(X) :- excited(X).\nbusy(X) :- tall(X).\ncurious(X) :- busy(X).\nsoft(Z) :- red(Z), likes(W,Z), tired(W).\ndislikes(X,Y) :- old(Y), bored(X).\nlikes(X,Z) :- soft(Z), calm(X).\nold(Z) :- wet(Z), dislikes(V,Z), weak(V).\nlight(Y) :- red(Y), owns(A,Y), bored(A).\nsoft(Z) :- new(Z).\nnew(Y) :- heavy(Y), owns(A,Y), calm(A).\nsmooth(Y) :- clean(Y), likes(W,Y), bored(W).\nparent(Z,Y) :- weak(Y), weak(Z), sibling(Z,A).\nsad(X) :- friendly(X), friendly(X).\nold(X) :- soft(X).\nfriend(X,Y) :- happy(X), bored(Y).\nnew(X) :- rough(X), light(X).\nhard(X) :- dirty(X), light(X).\nparent(X,Y) :- happy(X), hungry(Y).\ncurious(dave).\nbig(phone).\nfriend(bob,dave).\nfriend(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all Z, if there exists W such that object Z is red and person W likes object Z and person W is tired, then object Z is soft.\nFor all X, Y, if object Y is old and person X is bored, then person X dislikes object Y.\nFor all X, Z, if object Z is soft and person X is calm, then person X likes object Z.\nFor all Z, if there exists V such that object Z is wet and person V dislikes object Z and person V is weak, then object Z is old.\nFor all Y, if there exists A such that object Y is red and person A owns object Y and person A is bored, then object Y is light.\nFor all Z, if object Z is new, then object Z is soft.\nFor all Y, if there exists A such that object Y is heavy and person A owns object Y and person A is calm, then object Y is new.\nFor all Y, if there exists W such that object Y is clean and person W likes object Y and person W is bored, then object Y is smooth.\nFor all Y, Z, if there exists A such that person Y is weak and person Z is weak and person Z is a sibling of person A, then person Z is a parent of person Y.\nFor all X, if person X is friendly and person X is friendly, then person X is sad.\nFor all X, if object X is soft, then object X is old.\nFor all X, Y, if person X is happy and person Y is bored, then person X is a friend of person Y.\nFor all X, if object X is rough and object X is light, then object X is new.\nFor all X, if object X is dirty and object X is light, then object X is hard.\nFor all X, Y, if person X is happy and person Y is hungry, then person X is a parent of person Y.\n\nAnd the following facts:\ndave is curious.\nphone is big.\nbob is a friend of dave.\ngeorge is a friend of bob.\n\nQUESTION:\nCould dave is strong explain dave is curious?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 994,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "curious(X) :- strong(X).\nbrave(X) :- curious(X).\nfunny(X) :- brave(X).\nstrong(X) :- funny(X).\nclever(X) :- strong(X).\nangry(X) :- clever(X).\nexcited(X) :- angry(X).\ntall(X) :- excited(X).\nbusy(X) :- tall(X).\ncurious(X) :- busy(X).\nsoft(Z) :- red(Z), likes(W,Z), tired(W).\ndislikes(X,Y) :- old(Y), bored(X).\nlikes(X,Z) :- soft(Z), calm(X).\nold(Z) :- wet(Z), dislikes(V,Z), weak(V).\nlight(Y) :- red(Y), owns(A,Y), bored(A).\nsoft(Z) :- new(Z).\nnew(Y) :- heavy(Y), owns(A,Y), calm(A).\nsmooth(Y) :- clean(Y), likes(W,Y), bored(W).\nparent(Z,Y) :- weak(Y), weak(Z), sibling(Z,A).\nsad(X) :- friendly(X), friendly(X).\nold(X) :- soft(X).\nfriend(X,Y) :- happy(X), bored(Y).\nnew(X) :- rough(X), light(X).\nhard(X) :- dirty(X), light(X).\nparent(X,Y) :- happy(X), hungry(Y).\ncurious(dave).\nbig(phone).\nfriend(bob,dave).\nfriend(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all Z, if there exists W such that object Z is red and person W likes object Z and person W is tired, then object Z is soft.\nFor all X, Y, if object Y is old and person X is bored, then person X dislikes object Y.\nFor all X, Z, if object Z is soft and person X is calm, then person X likes object Z.\nFor all Z, if there exists V such that object Z is wet and person V dislikes object Z and person V is weak, then object Z is old.\nFor all Y, if there exists A such that object Y is red and person A owns object Y and person A is bored, then object Y is light.\nFor all Z, if object Z is new, then object Z is soft.\nFor all Y, if there exists A such that object Y is heavy and person A owns object Y and person A is calm, then object Y is new.\nFor all Y, if there exists W such that object Y is clean and person W likes object Y and person W is bored, then object Y is smooth.\nFor all Y, Z, if there exists A such that person Y is weak and person Z is weak and person Z is a sibling of person A, then person Z is a parent of person Y.\nFor all X, if person X is friendly and person X is friendly, then person X is sad.\nFor all X, if object X is soft, then object X is old.\nFor all X, Y, if person X is happy and person Y is bored, then person X is a friend of person Y.\nFor all X, if object X is rough and object X is light, then object X is new.\nFor all X, if object X is dirty and object X is light, then object X is hard.\nFor all X, Y, if person X is happy and person Y is hungry, then person X is a parent of person Y.\n\nAnd the following facts:\ndave is curious.\nphone is big.\nbob is a friend of dave.\ngeorge is a friend of bob.\n\nQUESTION:\nCould pencil is clean explain dave is curious?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 995,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(alice).",
    "c": "weak(X) :- excited(X).\nbusy(X) :- weak(X).\nbored(X) :- busy(X).\nsad(X) :- bored(X).\nweak(X) :- sad(X).\nangry(X) :- weak(X).\nexcited(X) :- angry(X).\nbored(X) :- excited(X).\nfriendly(X) :- bored(X).\nweak(X) :- friendly(X).\nbrave(Y) :- strong(Y), friend(Y,V), tired(V).\nhungry(Y) :- happy(Y), friend(Y,A), brave(A).\nstrong(Y) :- happy(Y), enemy(Y,A), calm(A).\nred(X) :- big(X), happy(B).\nsmooth(X) :- rough(X).\nlight(Y) :- small(Y), strong(C).\nrough(Y) :- dirty(Y), small(C).\nstrong(X) :- hungry(X).\nowns(X,Y) :- calm(X), small(Y).\nlight(X) :- old(X).\nclean(X) :- heavy(X), soft(X).\nowns(X,Y) :- calm(X), rough(Y).\nsmall(X) :- dirty(X), red(X).\nred(X) :- big(X).\nfunny(X) :- tall(X).\nexcited(alice).\nenemy(eve,frank).\nlikes(carol,pencil).\nred(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all Y, if there exists V such that person Y is strong and person Y is a friend of person V and person V is tired, then person Y is brave.\nFor all Y, if there exists A such that person Y is happy and person Y is a friend of person A and person A is brave, then person Y is hungry.\nFor all Y, if there exists A such that person Y is happy and person Y is an enemy of person A and person A is calm, then person Y is strong.\nFor all X, if there exists B such that object X is big and person B is happy, then object X is red.\nFor all X, if object X is rough, then object X is smooth.\nFor all Y, if there exists C such that object Y is small and person C is strong, then object Y is light.\nFor all Y, if there exists C such that object Y is dirty and object C is small, then object Y is rough.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, Y, if person X is calm and object Y is small, then person X owns object Y.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is heavy and object X is soft, then object X is clean.\nFor all X, Y, if person X is calm and object Y is rough, then person X owns object Y.\nFor all X, if object X is dirty and object X is red, then object X is small.\nFor all X, if object X is big, then object X is red.\nFor all X, if person X is tall, then person X is funny.\n\nAnd the following facts:\nalice is excited.\neve is an enemy of frank.\ncarol likes pencil.\npencil is red.\n\nQUESTION:\nIs alice is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 996,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(carol).",
    "c": "weak(X) :- excited(X).\nbusy(X) :- weak(X).\nbored(X) :- busy(X).\nsad(X) :- bored(X).\nweak(X) :- sad(X).\nangry(X) :- weak(X).\nexcited(X) :- angry(X).\nbored(X) :- excited(X).\nfriendly(X) :- bored(X).\nweak(X) :- friendly(X).\nbrave(Y) :- strong(Y), friend(Y,V), tired(V).\nhungry(Y) :- happy(Y), friend(Y,A), brave(A).\nstrong(Y) :- happy(Y), enemy(Y,A), calm(A).\nred(X) :- big(X), happy(B).\nsmooth(X) :- rough(X).\nlight(Y) :- small(Y), strong(C).\nrough(Y) :- dirty(Y), small(C).\nstrong(X) :- hungry(X).\nowns(X,Y) :- calm(X), small(Y).\nlight(X) :- old(X).\nclean(X) :- heavy(X), soft(X).\nowns(X,Y) :- calm(X), rough(Y).\nsmall(X) :- dirty(X), red(X).\nred(X) :- big(X).\nfunny(X) :- tall(X).\nexcited(alice).\nenemy(eve,frank).\nlikes(carol,pencil).\nred(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all Y, if there exists V such that person Y is strong and person Y is a friend of person V and person V is tired, then person Y is brave.\nFor all Y, if there exists A such that person Y is happy and person Y is a friend of person A and person A is brave, then person Y is hungry.\nFor all Y, if there exists A such that person Y is happy and person Y is an enemy of person A and person A is calm, then person Y is strong.\nFor all X, if there exists B such that object X is big and person B is happy, then object X is red.\nFor all X, if object X is rough, then object X is smooth.\nFor all Y, if there exists C such that object Y is small and person C is strong, then object Y is light.\nFor all Y, if there exists C such that object Y is dirty and object C is small, then object Y is rough.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, Y, if person X is calm and object Y is small, then person X owns object Y.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is heavy and object X is soft, then object X is clean.\nFor all X, Y, if person X is calm and object Y is rough, then person X owns object Y.\nFor all X, if object X is dirty and object X is red, then object X is small.\nFor all X, if object X is big, then object X is red.\nFor all X, if person X is tall, then person X is funny.\n\nAnd the following facts:\nalice is excited.\neve is an enemy of frank.\ncarol likes pencil.\npencil is red.\n\nQUESTION:\nIs carol is brave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 997,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(alice).",
    "c": "weak(X) :- excited(X).\nbusy(X) :- weak(X).\nbored(X) :- busy(X).\nsad(X) :- bored(X).\nweak(X) :- sad(X).\nangry(X) :- weak(X).\nexcited(X) :- angry(X).\nbored(X) :- excited(X).\nfriendly(X) :- bored(X).\nweak(X) :- friendly(X).\nbrave(Y) :- strong(Y), friend(Y,V), tired(V).\nhungry(Y) :- happy(Y), friend(Y,A), brave(A).\nstrong(Y) :- happy(Y), enemy(Y,A), calm(A).\nred(X) :- big(X), happy(B).\nsmooth(X) :- rough(X).\nlight(Y) :- small(Y), strong(C).\nrough(Y) :- dirty(Y), small(C).\nstrong(X) :- hungry(X).\nowns(X,Y) :- calm(X), small(Y).\nlight(X) :- old(X).\nclean(X) :- heavy(X), soft(X).\nowns(X,Y) :- calm(X), rough(Y).\nsmall(X) :- dirty(X), red(X).\nred(X) :- big(X).\nfunny(X) :- tall(X).\nweak(alice).\nenemy(eve,frank).\nlikes(carol,pencil).\nred(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all Y, if there exists V such that person Y is strong and person Y is a friend of person V and person V is tired, then person Y is brave.\nFor all Y, if there exists A such that person Y is happy and person Y is a friend of person A and person A is brave, then person Y is hungry.\nFor all Y, if there exists A such that person Y is happy and person Y is an enemy of person A and person A is calm, then person Y is strong.\nFor all X, if there exists B such that object X is big and person B is happy, then object X is red.\nFor all X, if object X is rough, then object X is smooth.\nFor all Y, if there exists C such that object Y is small and person C is strong, then object Y is light.\nFor all Y, if there exists C such that object Y is dirty and object C is small, then object Y is rough.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, Y, if person X is calm and object Y is small, then person X owns object Y.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is heavy and object X is soft, then object X is clean.\nFor all X, Y, if person X is calm and object Y is rough, then person X owns object Y.\nFor all X, if object X is dirty and object X is red, then object X is small.\nFor all X, if object X is big, then object X is red.\nFor all X, if person X is tall, then person X is funny.\n\nAnd the following facts:\nalice is weak.\neve is an enemy of frank.\ncarol likes pencil.\npencil is red.\n\nQUESTION:\nCould alice is excited explain alice is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 998,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(eve).",
    "c": "weak(X) :- excited(X).\nbusy(X) :- weak(X).\nbored(X) :- busy(X).\nsad(X) :- bored(X).\nweak(X) :- sad(X).\nangry(X) :- weak(X).\nexcited(X) :- angry(X).\nbored(X) :- excited(X).\nfriendly(X) :- bored(X).\nweak(X) :- friendly(X).\nbrave(Y) :- strong(Y), friend(Y,V), tired(V).\nhungry(Y) :- happy(Y), friend(Y,A), brave(A).\nstrong(Y) :- happy(Y), enemy(Y,A), calm(A).\nred(X) :- big(X), happy(B).\nsmooth(X) :- rough(X).\nlight(Y) :- small(Y), strong(C).\nrough(Y) :- dirty(Y), small(C).\nstrong(X) :- hungry(X).\nowns(X,Y) :- calm(X), small(Y).\nlight(X) :- old(X).\nclean(X) :- heavy(X), soft(X).\nowns(X,Y) :- calm(X), rough(Y).\nsmall(X) :- dirty(X), red(X).\nred(X) :- big(X).\nfunny(X) :- tall(X).\nweak(alice).\nenemy(eve,frank).\nlikes(carol,pencil).\nred(pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is weak.\nFor all X, if person X is weak, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all Y, if there exists V such that person Y is strong and person Y is a friend of person V and person V is tired, then person Y is brave.\nFor all Y, if there exists A such that person Y is happy and person Y is a friend of person A and person A is brave, then person Y is hungry.\nFor all Y, if there exists A such that person Y is happy and person Y is an enemy of person A and person A is calm, then person Y is strong.\nFor all X, if there exists B such that object X is big and person B is happy, then object X is red.\nFor all X, if object X is rough, then object X is smooth.\nFor all Y, if there exists C such that object Y is small and person C is strong, then object Y is light.\nFor all Y, if there exists C such that object Y is dirty and object C is small, then object Y is rough.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, Y, if person X is calm and object Y is small, then person X owns object Y.\nFor all X, if object X is old, then object X is light.\nFor all X, if object X is heavy and object X is soft, then object X is clean.\nFor all X, Y, if person X is calm and object Y is rough, then person X owns object Y.\nFor all X, if object X is dirty and object X is red, then object X is small.\nFor all X, if object X is big, then object X is red.\nFor all X, if person X is tall, then person X is funny.\n\nAnd the following facts:\nalice is weak.\neve is an enemy of frank.\ncarol likes pencil.\npencil is red.\n\nQUESTION:\nCould eve is angry explain alice is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 999,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(carol).",
    "c": "brave(X) :- hungry(X).\nbusy(X) :- brave(X).\nbored(X) :- busy(X).\nhappy(X) :- bored(X).\nangry(X) :- happy(X).\nstrong(X) :- angry(X).\nweak(X) :- strong(X).\nexcited(X) :- weak(X).\ntired(X) :- excited(X).\nclever(X) :- tired(X).\ncalm(X) :- tall(X), friend(X,W), sad(W).\nsmooth(Z) :- red(Z), likes(W,Z), sad(W).\nwet(Y) :- heavy(Y), likes(W,Y), friendly(W).\nowns(Y,Z) :- sad(Y), small(Z), parent(Y,U).\nparent(Y,Z) :- tall(Y), friendly(Z).\ndislikes(Y,X) :- friendly(Y), big(X).\ncurious(Z) :- tall(Z), enemy(Z,U), funny(U).\nred(Y) :- soft(Y).\nparent(X,Z) :- sad(Z), friendly(X).\nowns(Y,X) :- curious(Y), soft(X), likes(A,X).\nfunny(X) :- sad(X), tall(X).\nwet(X) :- hard(X).\nfunny(X) :- curious(X).\nsoft(X) :- big(X).\nsoft(X) :- rough(X), red(X).\nhungry(carol).\nlikes(eve,apple).\nlikes(alice,book).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if there exists W such that person X is tall and person X is a friend of person W and person W is sad, then person X is calm.\nFor all Z, if there exists W such that object Z is red and person W likes object Z and person W is sad, then object Z is smooth.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is friendly, then object Y is wet.\nFor all Y, Z, if there exists U such that person Y is sad and object Z is small and person Y is a parent of person U, then person Y owns object Z.\nFor all Y, Z, if person Y is tall and person Z is friendly, then person Y is a parent of person Z.\nFor all X, Y, if person Y is friendly and object X is big, then person Y dislikes object X.\nFor all Z, if there exists U such that person Z is tall and person Z is an enemy of person U and person U is funny, then person Z is curious.\nFor all Y, if object Y is soft, then object Y is red.\nFor all X, Z, if person Z is sad and person X is friendly, then person X is a parent of person Z.\nFor all X, Y, if there exists A such that person Y is curious and object X is soft and person A likes object X, then person Y owns object X.\nFor all X, if person X is sad and person X is tall, then person X is funny.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is rough and object X is red, then object X is soft.\n\nAnd the following facts:\ncarol is hungry.\neve likes apple.\nalice likes book.\nfrank is a parent of bob.\n\nQUESTION:\nIs carol is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1000,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(george).",
    "c": "brave(X) :- hungry(X).\nbusy(X) :- brave(X).\nbored(X) :- busy(X).\nhappy(X) :- bored(X).\nangry(X) :- happy(X).\nstrong(X) :- angry(X).\nweak(X) :- strong(X).\nexcited(X) :- weak(X).\ntired(X) :- excited(X).\nclever(X) :- tired(X).\ncalm(X) :- tall(X), friend(X,W), sad(W).\nsmooth(Z) :- red(Z), likes(W,Z), sad(W).\nwet(Y) :- heavy(Y), likes(W,Y), friendly(W).\nowns(Y,Z) :- sad(Y), small(Z), parent(Y,U).\nparent(Y,Z) :- tall(Y), friendly(Z).\ndislikes(Y,X) :- friendly(Y), big(X).\ncurious(Z) :- tall(Z), enemy(Z,U), funny(U).\nred(Y) :- soft(Y).\nparent(X,Z) :- sad(Z), friendly(X).\nowns(Y,X) :- curious(Y), soft(X), likes(A,X).\nfunny(X) :- sad(X), tall(X).\nwet(X) :- hard(X).\nfunny(X) :- curious(X).\nsoft(X) :- big(X).\nsoft(X) :- rough(X), red(X).\nhungry(carol).\nlikes(eve,apple).\nlikes(alice,book).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if there exists W such that person X is tall and person X is a friend of person W and person W is sad, then person X is calm.\nFor all Z, if there exists W such that object Z is red and person W likes object Z and person W is sad, then object Z is smooth.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is friendly, then object Y is wet.\nFor all Y, Z, if there exists U such that person Y is sad and object Z is small and person Y is a parent of person U, then person Y owns object Z.\nFor all Y, Z, if person Y is tall and person Z is friendly, then person Y is a parent of person Z.\nFor all X, Y, if person Y is friendly and object X is big, then person Y dislikes object X.\nFor all Z, if there exists U such that person Z is tall and person Z is an enemy of person U and person U is funny, then person Z is curious.\nFor all Y, if object Y is soft, then object Y is red.\nFor all X, Z, if person Z is sad and person X is friendly, then person X is a parent of person Z.\nFor all X, Y, if there exists A such that person Y is curious and object X is soft and person A likes object X, then person Y owns object X.\nFor all X, if person X is sad and person X is tall, then person X is funny.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is rough and object X is red, then object X is soft.\n\nAnd the following facts:\ncarol is hungry.\neve likes apple.\nalice likes book.\nfrank is a parent of bob.\n\nQUESTION:\nIs george is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1001,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(carol).",
    "c": "brave(X) :- hungry(X).\nbusy(X) :- brave(X).\nbored(X) :- busy(X).\nhappy(X) :- bored(X).\nangry(X) :- happy(X).\nstrong(X) :- angry(X).\nweak(X) :- strong(X).\nexcited(X) :- weak(X).\ntired(X) :- excited(X).\nclever(X) :- tired(X).\ncalm(X) :- tall(X), friend(X,W), sad(W).\nsmooth(Z) :- red(Z), likes(W,Z), sad(W).\nwet(Y) :- heavy(Y), likes(W,Y), friendly(W).\nowns(Y,Z) :- sad(Y), small(Z), parent(Y,U).\nparent(Y,Z) :- tall(Y), friendly(Z).\ndislikes(Y,X) :- friendly(Y), big(X).\ncurious(Z) :- tall(Z), enemy(Z,U), funny(U).\nred(Y) :- soft(Y).\nparent(X,Z) :- sad(Z), friendly(X).\nowns(Y,X) :- curious(Y), soft(X), likes(A,X).\nfunny(X) :- sad(X), tall(X).\nwet(X) :- hard(X).\nfunny(X) :- curious(X).\nsoft(X) :- big(X).\nsoft(X) :- rough(X), red(X).\nclever(carol).\nlikes(eve,apple).\nlikes(alice,book).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if there exists W such that person X is tall and person X is a friend of person W and person W is sad, then person X is calm.\nFor all Z, if there exists W such that object Z is red and person W likes object Z and person W is sad, then object Z is smooth.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is friendly, then object Y is wet.\nFor all Y, Z, if there exists U such that person Y is sad and object Z is small and person Y is a parent of person U, then person Y owns object Z.\nFor all Y, Z, if person Y is tall and person Z is friendly, then person Y is a parent of person Z.\nFor all X, Y, if person Y is friendly and object X is big, then person Y dislikes object X.\nFor all Z, if there exists U such that person Z is tall and person Z is an enemy of person U and person U is funny, then person Z is curious.\nFor all Y, if object Y is soft, then object Y is red.\nFor all X, Z, if person Z is sad and person X is friendly, then person X is a parent of person Z.\nFor all X, Y, if there exists A such that person Y is curious and object X is soft and person A likes object X, then person Y owns object X.\nFor all X, if person X is sad and person X is tall, then person X is funny.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is rough and object X is red, then object X is soft.\n\nAnd the following facts:\ncarol is clever.\neve likes apple.\nalice likes book.\nfrank is a parent of bob.\n\nQUESTION:\nCould carol is hungry explain carol is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1002,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(pencil).",
    "c": "brave(X) :- hungry(X).\nbusy(X) :- brave(X).\nbored(X) :- busy(X).\nhappy(X) :- bored(X).\nangry(X) :- happy(X).\nstrong(X) :- angry(X).\nweak(X) :- strong(X).\nexcited(X) :- weak(X).\ntired(X) :- excited(X).\nclever(X) :- tired(X).\ncalm(X) :- tall(X), friend(X,W), sad(W).\nsmooth(Z) :- red(Z), likes(W,Z), sad(W).\nwet(Y) :- heavy(Y), likes(W,Y), friendly(W).\nowns(Y,Z) :- sad(Y), small(Z), parent(Y,U).\nparent(Y,Z) :- tall(Y), friendly(Z).\ndislikes(Y,X) :- friendly(Y), big(X).\ncurious(Z) :- tall(Z), enemy(Z,U), funny(U).\nred(Y) :- soft(Y).\nparent(X,Z) :- sad(Z), friendly(X).\nowns(Y,X) :- curious(Y), soft(X), likes(A,X).\nfunny(X) :- sad(X), tall(X).\nwet(X) :- hard(X).\nfunny(X) :- curious(X).\nsoft(X) :- big(X).\nsoft(X) :- rough(X), red(X).\nclever(carol).\nlikes(eve,apple).\nlikes(alice,book).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if there exists W such that person X is tall and person X is a friend of person W and person W is sad, then person X is calm.\nFor all Z, if there exists W such that object Z is red and person W likes object Z and person W is sad, then object Z is smooth.\nFor all Y, if there exists W such that object Y is heavy and person W likes object Y and person W is friendly, then object Y is wet.\nFor all Y, Z, if there exists U such that person Y is sad and object Z is small and person Y is a parent of person U, then person Y owns object Z.\nFor all Y, Z, if person Y is tall and person Z is friendly, then person Y is a parent of person Z.\nFor all X, Y, if person Y is friendly and object X is big, then person Y dislikes object X.\nFor all Z, if there exists U such that person Z is tall and person Z is an enemy of person U and person U is funny, then person Z is curious.\nFor all Y, if object Y is soft, then object Y is red.\nFor all X, Z, if person Z is sad and person X is friendly, then person X is a parent of person Z.\nFor all X, Y, if there exists A such that person Y is curious and object X is soft and person A likes object X, then person Y owns object X.\nFor all X, if person X is sad and person X is tall, then person X is funny.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is rough and object X is red, then object X is soft.\n\nAnd the following facts:\ncarol is clever.\neve likes apple.\nalice likes book.\nfrank is a parent of bob.\n\nQUESTION:\nCould pencil is red explain carol is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1003,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "rough(X) :- wet(X).\ndirty(X) :- rough(X).\nsoft(X) :- dirty(X).\nsmooth(X) :- soft(X).\nheavy(X) :- smooth(X).\nlight(X) :- heavy(X).\nsmall(X) :- light(X).\nnew(X) :- small(X).\nhard(X) :- new(X).\nred(X) :- hard(X).\nhappy(Y) :- busy(Y), owns(Y,U), old(U).\nstrong(X) :- calm(X), owns(X,U), big(U).\nfriendly(Y) :- calm(Y), enemy(Y,A), excited(A).\nbusy(Z) :- happy(Z), enemy(Z,B), clever(B).\nowns(Z,X) :- tired(Z), old(X), friend(Z,U).\nclever(Y) :- weak(Y).\nparent(X,Z) :- angry(Z), weak(X), likes(X,B).\nbig(X) :- clean(X).\ntall(X) :- funny(X), clever(X).\nenemy(X,Y) :- excited(X), calm(Y).\nexcited(X) :- happy(X).\ntired(X) :- happy(X).\ntired(X) :- funny(X).\nsibling(X,Y) :- hungry(X), happy(Y).\nold(X) :- clean(X).\nwet(car).\nstrong(eve).\nowns(bob,ball).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all Y, if there exists U such that person Y is busy and person Y owns object U and object U is old, then person Y is happy.\nFor all X, if there exists U such that person X is calm and person X owns object U and object U is big, then person X is strong.\nFor all Y, if there exists A such that person Y is calm and person Y is an enemy of person A and person A is excited, then person Y is friendly.\nFor all Z, if there exists B such that person Z is happy and person Z is an enemy of person B and person B is clever, then person Z is busy.\nFor all X, Z, if there exists U such that person Z is tired and object X is old and person Z is a friend of person U, then person Z owns object X.\nFor all Y, if person Y is weak, then person Y is clever.\nFor all X, Z, if there exists B such that person Z is angry and person X is weak and person X likes object B, then person X is a parent of person Z.\nFor all X, if object X is clean, then object X is big.\nFor all X, if person X is funny and person X is clever, then person X is tall.\nFor all X, Y, if person X is excited and person Y is calm, then person X is an enemy of person Y.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is funny, then person X is tired.\nFor all X, Y, if person X is hungry and person Y is happy, then person X is a sibling of person Y.\nFor all X, if object X is clean, then object X is old.\n\nAnd the following facts:\ncar is wet.\neve is strong.\nbob owns ball.\nalice is a parent of dave.\n\nQUESTION:\nIs car is red true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1004,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(dave).",
    "c": "rough(X) :- wet(X).\ndirty(X) :- rough(X).\nsoft(X) :- dirty(X).\nsmooth(X) :- soft(X).\nheavy(X) :- smooth(X).\nlight(X) :- heavy(X).\nsmall(X) :- light(X).\nnew(X) :- small(X).\nhard(X) :- new(X).\nred(X) :- hard(X).\nhappy(Y) :- busy(Y), owns(Y,U), old(U).\nstrong(X) :- calm(X), owns(X,U), big(U).\nfriendly(Y) :- calm(Y), enemy(Y,A), excited(A).\nbusy(Z) :- happy(Z), enemy(Z,B), clever(B).\nowns(Z,X) :- tired(Z), old(X), friend(Z,U).\nclever(Y) :- weak(Y).\nparent(X,Z) :- angry(Z), weak(X), likes(X,B).\nbig(X) :- clean(X).\ntall(X) :- funny(X), clever(X).\nenemy(X,Y) :- excited(X), calm(Y).\nexcited(X) :- happy(X).\ntired(X) :- happy(X).\ntired(X) :- funny(X).\nsibling(X,Y) :- hungry(X), happy(Y).\nold(X) :- clean(X).\nwet(car).\nstrong(eve).\nowns(bob,ball).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all Y, if there exists U such that person Y is busy and person Y owns object U and object U is old, then person Y is happy.\nFor all X, if there exists U such that person X is calm and person X owns object U and object U is big, then person X is strong.\nFor all Y, if there exists A such that person Y is calm and person Y is an enemy of person A and person A is excited, then person Y is friendly.\nFor all Z, if there exists B such that person Z is happy and person Z is an enemy of person B and person B is clever, then person Z is busy.\nFor all X, Z, if there exists U such that person Z is tired and object X is old and person Z is a friend of person U, then person Z owns object X.\nFor all Y, if person Y is weak, then person Y is clever.\nFor all X, Z, if there exists B such that person Z is angry and person X is weak and person X likes object B, then person X is a parent of person Z.\nFor all X, if object X is clean, then object X is big.\nFor all X, if person X is funny and person X is clever, then person X is tall.\nFor all X, Y, if person X is excited and person Y is calm, then person X is an enemy of person Y.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is funny, then person X is tired.\nFor all X, Y, if person X is hungry and person Y is happy, then person X is a sibling of person Y.\nFor all X, if object X is clean, then object X is old.\n\nAnd the following facts:\ncar is wet.\neve is strong.\nbob owns ball.\nalice is a parent of dave.\n\nQUESTION:\nIs dave is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1005,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(car).",
    "c": "rough(X) :- wet(X).\ndirty(X) :- rough(X).\nsoft(X) :- dirty(X).\nsmooth(X) :- soft(X).\nheavy(X) :- smooth(X).\nlight(X) :- heavy(X).\nsmall(X) :- light(X).\nnew(X) :- small(X).\nhard(X) :- new(X).\nred(X) :- hard(X).\nhappy(Y) :- busy(Y), owns(Y,U), old(U).\nstrong(X) :- calm(X), owns(X,U), big(U).\nfriendly(Y) :- calm(Y), enemy(Y,A), excited(A).\nbusy(Z) :- happy(Z), enemy(Z,B), clever(B).\nowns(Z,X) :- tired(Z), old(X), friend(Z,U).\nclever(Y) :- weak(Y).\nparent(X,Z) :- angry(Z), weak(X), likes(X,B).\nbig(X) :- clean(X).\ntall(X) :- funny(X), clever(X).\nenemy(X,Y) :- excited(X), calm(Y).\nexcited(X) :- happy(X).\ntired(X) :- happy(X).\ntired(X) :- funny(X).\nsibling(X,Y) :- hungry(X), happy(Y).\nold(X) :- clean(X).\nred(car).\nstrong(eve).\nowns(bob,ball).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all Y, if there exists U such that person Y is busy and person Y owns object U and object U is old, then person Y is happy.\nFor all X, if there exists U such that person X is calm and person X owns object U and object U is big, then person X is strong.\nFor all Y, if there exists A such that person Y is calm and person Y is an enemy of person A and person A is excited, then person Y is friendly.\nFor all Z, if there exists B such that person Z is happy and person Z is an enemy of person B and person B is clever, then person Z is busy.\nFor all X, Z, if there exists U such that person Z is tired and object X is old and person Z is a friend of person U, then person Z owns object X.\nFor all Y, if person Y is weak, then person Y is clever.\nFor all X, Z, if there exists B such that person Z is angry and person X is weak and person X likes object B, then person X is a parent of person Z.\nFor all X, if object X is clean, then object X is big.\nFor all X, if person X is funny and person X is clever, then person X is tall.\nFor all X, Y, if person X is excited and person Y is calm, then person X is an enemy of person Y.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is funny, then person X is tired.\nFor all X, Y, if person X is hungry and person Y is happy, then person X is a sibling of person Y.\nFor all X, if object X is clean, then object X is old.\n\nAnd the following facts:\ncar is red.\neve is strong.\nbob owns ball.\nalice is a parent of dave.\n\nQUESTION:\nCould car is wet explain car is red?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1006,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(apple).",
    "c": "rough(X) :- wet(X).\ndirty(X) :- rough(X).\nsoft(X) :- dirty(X).\nsmooth(X) :- soft(X).\nheavy(X) :- smooth(X).\nlight(X) :- heavy(X).\nsmall(X) :- light(X).\nnew(X) :- small(X).\nhard(X) :- new(X).\nred(X) :- hard(X).\nhappy(Y) :- busy(Y), owns(Y,U), old(U).\nstrong(X) :- calm(X), owns(X,U), big(U).\nfriendly(Y) :- calm(Y), enemy(Y,A), excited(A).\nbusy(Z) :- happy(Z), enemy(Z,B), clever(B).\nowns(Z,X) :- tired(Z), old(X), friend(Z,U).\nclever(Y) :- weak(Y).\nparent(X,Z) :- angry(Z), weak(X), likes(X,B).\nbig(X) :- clean(X).\ntall(X) :- funny(X), clever(X).\nenemy(X,Y) :- excited(X), calm(Y).\nexcited(X) :- happy(X).\ntired(X) :- happy(X).\ntired(X) :- funny(X).\nsibling(X,Y) :- hungry(X), happy(Y).\nold(X) :- clean(X).\nred(car).\nstrong(eve).\nowns(bob,ball).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is heavy, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all Y, if there exists U such that person Y is busy and person Y owns object U and object U is old, then person Y is happy.\nFor all X, if there exists U such that person X is calm and person X owns object U and object U is big, then person X is strong.\nFor all Y, if there exists A such that person Y is calm and person Y is an enemy of person A and person A is excited, then person Y is friendly.\nFor all Z, if there exists B such that person Z is happy and person Z is an enemy of person B and person B is clever, then person Z is busy.\nFor all X, Z, if there exists U such that person Z is tired and object X is old and person Z is a friend of person U, then person Z owns object X.\nFor all Y, if person Y is weak, then person Y is clever.\nFor all X, Z, if there exists B such that person Z is angry and person X is weak and person X likes object B, then person X is a parent of person Z.\nFor all X, if object X is clean, then object X is big.\nFor all X, if person X is funny and person X is clever, then person X is tall.\nFor all X, Y, if person X is excited and person Y is calm, then person X is an enemy of person Y.\nFor all X, if person X is happy, then person X is excited.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is funny, then person X is tired.\nFor all X, Y, if person X is hungry and person Y is happy, then person X is a sibling of person Y.\nFor all X, if object X is clean, then object X is old.\n\nAnd the following facts:\ncar is red.\neve is strong.\nbob owns ball.\nalice is a parent of dave.\n\nQUESTION:\nCould apple is rough explain car is red?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1007,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(bob).",
    "c": "bored(X) :- calm(X).\nbusy(X) :- bored(X).\nfunny(X) :- busy(X).\nbrave(X) :- funny(X).\nsad(X) :- brave(X).\ntall(X) :- sad(X).\ncalm(X) :- tall(X).\nfunny(X) :- calm(X).\nhungry(X) :- funny(X).\nsad(X) :- hungry(X).\nfriendly(X) :- sad(X).\ntall(X) :- friendly(X).\nfunny(X) :- tall(X).\nsad(X) :- funny(X).\nhappy(X) :- sad(X).\ntired(X) :- happy(X).\nstrong(X) :- tired(X).\ntall(X) :- strong(X).\nhungry(X) :- tall(X).\ntired(X) :- hungry(X).\ndislikes(X,Y) :- wet(Y), clever(X), owns(U,Y).\nrough(Y) :- smooth(Y).\nwet(Z) :- smooth(Z), likes(U,Z), angry(U).\nweak(X) :- clever(X), excited(X).\nsmooth(X) :- old(X), soft(X).\ncalm(bob).\nsibling(eve,bob).\ncurious(carol).\nlikes(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is funny, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, Y, if there exists U such that object Y is wet and person X is clever and person U owns object Y, then person X dislikes object Y.\nFor all Y, if object Y is smooth, then object Y is rough.\nFor all Z, if there exists U such that object Z is smooth and person U likes object Z and person U is angry, then object Z is wet.\nFor all X, if person X is clever and person X is excited, then person X is weak.\nFor all X, if object X is old and object X is soft, then object X is smooth.\n\nAnd the following facts:\nbob is calm.\neve is a sibling of bob.\ncarol is curious.\ndave likes book.\n\nQUESTION:\nIs bob is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1008,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(eve).",
    "c": "bored(X) :- calm(X).\nbusy(X) :- bored(X).\nfunny(X) :- busy(X).\nbrave(X) :- funny(X).\nsad(X) :- brave(X).\ntall(X) :- sad(X).\ncalm(X) :- tall(X).\nfunny(X) :- calm(X).\nhungry(X) :- funny(X).\nsad(X) :- hungry(X).\nfriendly(X) :- sad(X).\ntall(X) :- friendly(X).\nfunny(X) :- tall(X).\nsad(X) :- funny(X).\nhappy(X) :- sad(X).\ntired(X) :- happy(X).\nstrong(X) :- tired(X).\ntall(X) :- strong(X).\nhungry(X) :- tall(X).\ntired(X) :- hungry(X).\ndislikes(X,Y) :- wet(Y), clever(X), owns(U,Y).\nrough(Y) :- smooth(Y).\nwet(Z) :- smooth(Z), likes(U,Z), angry(U).\nweak(X) :- clever(X), excited(X).\nsmooth(X) :- old(X), soft(X).\ncalm(bob).\nsibling(eve,bob).\ncurious(carol).\nlikes(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is funny, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, Y, if there exists U such that object Y is wet and person X is clever and person U owns object Y, then person X dislikes object Y.\nFor all Y, if object Y is smooth, then object Y is rough.\nFor all Z, if there exists U such that object Z is smooth and person U likes object Z and person U is angry, then object Z is wet.\nFor all X, if person X is clever and person X is excited, then person X is weak.\nFor all X, if object X is old and object X is soft, then object X is smooth.\n\nAnd the following facts:\nbob is calm.\neve is a sibling of bob.\ncarol is curious.\ndave likes book.\n\nQUESTION:\nIs eve is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1009,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(bob).",
    "c": "bored(X) :- calm(X).\nbusy(X) :- bored(X).\nfunny(X) :- busy(X).\nbrave(X) :- funny(X).\nsad(X) :- brave(X).\ntall(X) :- sad(X).\ncalm(X) :- tall(X).\nfunny(X) :- calm(X).\nhungry(X) :- funny(X).\nsad(X) :- hungry(X).\nfriendly(X) :- sad(X).\ntall(X) :- friendly(X).\nfunny(X) :- tall(X).\nsad(X) :- funny(X).\nhappy(X) :- sad(X).\ntired(X) :- happy(X).\nstrong(X) :- tired(X).\ntall(X) :- strong(X).\nhungry(X) :- tall(X).\ntired(X) :- hungry(X).\ndislikes(X,Y) :- wet(Y), clever(X), owns(U,Y).\nrough(Y) :- smooth(Y).\nwet(Z) :- smooth(Z), likes(U,Z), angry(U).\nweak(X) :- clever(X), excited(X).\nsmooth(X) :- old(X), soft(X).\ntired(bob).\nsibling(eve,bob).\ncurious(carol).\nlikes(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is funny, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, Y, if there exists U such that object Y is wet and person X is clever and person U owns object Y, then person X dislikes object Y.\nFor all Y, if object Y is smooth, then object Y is rough.\nFor all Z, if there exists U such that object Z is smooth and person U likes object Z and person U is angry, then object Z is wet.\nFor all X, if person X is clever and person X is excited, then person X is weak.\nFor all X, if object X is old and object X is soft, then object X is smooth.\n\nAnd the following facts:\nbob is tired.\neve is a sibling of bob.\ncarol is curious.\ndave likes book.\n\nQUESTION:\nCould bob is calm explain bob is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1010,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(bob).",
    "c": "bored(X) :- calm(X).\nbusy(X) :- bored(X).\nfunny(X) :- busy(X).\nbrave(X) :- funny(X).\nsad(X) :- brave(X).\ntall(X) :- sad(X).\ncalm(X) :- tall(X).\nfunny(X) :- calm(X).\nhungry(X) :- funny(X).\nsad(X) :- hungry(X).\nfriendly(X) :- sad(X).\ntall(X) :- friendly(X).\nfunny(X) :- tall(X).\nsad(X) :- funny(X).\nhappy(X) :- sad(X).\ntired(X) :- happy(X).\nstrong(X) :- tired(X).\ntall(X) :- strong(X).\nhungry(X) :- tall(X).\ntired(X) :- hungry(X).\ndislikes(X,Y) :- wet(Y), clever(X), owns(U,Y).\nrough(Y) :- smooth(Y).\nwet(Z) :- smooth(Z), likes(U,Z), angry(U).\nweak(X) :- clever(X), excited(X).\nsmooth(X) :- old(X), soft(X).\ntired(bob).\nsibling(eve,bob).\ncurious(carol).\nlikes(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is funny, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, Y, if there exists U such that object Y is wet and person X is clever and person U owns object Y, then person X dislikes object Y.\nFor all Y, if object Y is smooth, then object Y is rough.\nFor all Z, if there exists U such that object Z is smooth and person U likes object Z and person U is angry, then object Z is wet.\nFor all X, if person X is clever and person X is excited, then person X is weak.\nFor all X, if object X is old and object X is soft, then object X is smooth.\n\nAnd the following facts:\nbob is tired.\neve is a sibling of bob.\ncarol is curious.\ndave likes book.\n\nQUESTION:\nCould bob is busy explain bob is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1011,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(carol).",
    "c": "hungry(X) :- weak(X).\ntired(X) :- hungry(X).\nfriendly(X) :- tired(X).\nbusy(X) :- friendly(X).\nstrong(X) :- busy(X).\ncurious(X) :- strong(X).\nsad(X) :- curious(X).\nexcited(X) :- sad(X).\nbrave(X) :- excited(X).\nstrong(X) :- brave(X).\nclever(X) :- strong(X).\nbrave(X) :- clever(X).\nbored(X) :- brave(X).\nexcited(X) :- bored(X).\nstrong(X) :- excited(X).\ncurious(X) :- strong(X).\nbusy(X) :- curious(X).\nweak(X) :- busy(X).\ntall(X) :- weak(X).\nfriendly(X) :- tall(X).\nangry(X) :- calm(X), likes(X,B), soft(B).\nrough(Z) :- heavy(Z).\nclean(Y) :- hard(Y), owns(A,Y), funny(A).\nrough(X) :- new(X).\ndislikes(X,Y) :- happy(X), hard(Y).\nweak(carol).\nsmall(car).\nfriend(bob,frank).\nsibling(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if there exists B such that person X is calm and person X likes object B and object B is soft, then person X is angry.\nFor all Z, if object Z is heavy, then object Z is rough.\nFor all Y, if there exists A such that object Y is hard and person A owns object Y and person A is funny, then object Y is clean.\nFor all X, if object X is new, then object X is rough.\nFor all X, Y, if person X is happy and object Y is hard, then person X dislikes object Y.\n\nAnd the following facts:\ncarol is weak.\ncar is small.\nbob is a friend of frank.\ndave is a sibling of carol.\n\nQUESTION:\nIs carol is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1012,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(ball).",
    "c": "hungry(X) :- weak(X).\ntired(X) :- hungry(X).\nfriendly(X) :- tired(X).\nbusy(X) :- friendly(X).\nstrong(X) :- busy(X).\ncurious(X) :- strong(X).\nsad(X) :- curious(X).\nexcited(X) :- sad(X).\nbrave(X) :- excited(X).\nstrong(X) :- brave(X).\nclever(X) :- strong(X).\nbrave(X) :- clever(X).\nbored(X) :- brave(X).\nexcited(X) :- bored(X).\nstrong(X) :- excited(X).\ncurious(X) :- strong(X).\nbusy(X) :- curious(X).\nweak(X) :- busy(X).\ntall(X) :- weak(X).\nfriendly(X) :- tall(X).\nangry(X) :- calm(X), likes(X,B), soft(B).\nrough(Z) :- heavy(Z).\nclean(Y) :- hard(Y), owns(A,Y), funny(A).\nrough(X) :- new(X).\ndislikes(X,Y) :- happy(X), hard(Y).\nweak(carol).\nsmall(car).\nfriend(bob,frank).\nsibling(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if there exists B such that person X is calm and person X likes object B and object B is soft, then person X is angry.\nFor all Z, if object Z is heavy, then object Z is rough.\nFor all Y, if there exists A such that object Y is hard and person A owns object Y and person A is funny, then object Y is clean.\nFor all X, if object X is new, then object X is rough.\nFor all X, Y, if person X is happy and object Y is hard, then person X dislikes object Y.\n\nAnd the following facts:\ncarol is weak.\ncar is small.\nbob is a friend of frank.\ndave is a sibling of carol.\n\nQUESTION:\nIs ball is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1013,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(carol).",
    "c": "hungry(X) :- weak(X).\ntired(X) :- hungry(X).\nfriendly(X) :- tired(X).\nbusy(X) :- friendly(X).\nstrong(X) :- busy(X).\ncurious(X) :- strong(X).\nsad(X) :- curious(X).\nexcited(X) :- sad(X).\nbrave(X) :- excited(X).\nstrong(X) :- brave(X).\nclever(X) :- strong(X).\nbrave(X) :- clever(X).\nbored(X) :- brave(X).\nexcited(X) :- bored(X).\nstrong(X) :- excited(X).\ncurious(X) :- strong(X).\nbusy(X) :- curious(X).\nweak(X) :- busy(X).\ntall(X) :- weak(X).\nfriendly(X) :- tall(X).\nangry(X) :- calm(X), likes(X,B), soft(B).\nrough(Z) :- heavy(Z).\nclean(Y) :- hard(Y), owns(A,Y), funny(A).\nrough(X) :- new(X).\ndislikes(X,Y) :- happy(X), hard(Y).\nfriendly(carol).\nsmall(car).\nfriend(bob,frank).\nsibling(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if there exists B such that person X is calm and person X likes object B and object B is soft, then person X is angry.\nFor all Z, if object Z is heavy, then object Z is rough.\nFor all Y, if there exists A such that object Y is hard and person A owns object Y and person A is funny, then object Y is clean.\nFor all X, if object X is new, then object X is rough.\nFor all X, Y, if person X is happy and object Y is hard, then person X dislikes object Y.\n\nAnd the following facts:\ncarol is friendly.\ncar is small.\nbob is a friend of frank.\ndave is a sibling of carol.\n\nQUESTION:\nCould carol is weak explain carol is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1014,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "hungry(dave).",
    "c": "hungry(X) :- weak(X).\ntired(X) :- hungry(X).\nfriendly(X) :- tired(X).\nbusy(X) :- friendly(X).\nstrong(X) :- busy(X).\ncurious(X) :- strong(X).\nsad(X) :- curious(X).\nexcited(X) :- sad(X).\nbrave(X) :- excited(X).\nstrong(X) :- brave(X).\nclever(X) :- strong(X).\nbrave(X) :- clever(X).\nbored(X) :- brave(X).\nexcited(X) :- bored(X).\nstrong(X) :- excited(X).\ncurious(X) :- strong(X).\nbusy(X) :- curious(X).\nweak(X) :- busy(X).\ntall(X) :- weak(X).\nfriendly(X) :- tall(X).\nangry(X) :- calm(X), likes(X,B), soft(B).\nrough(Z) :- heavy(Z).\nclean(Y) :- hard(Y), owns(A,Y), funny(A).\nrough(X) :- new(X).\ndislikes(X,Y) :- happy(X), hard(Y).\nfriendly(carol).\nsmall(car).\nfriend(bob,frank).\nsibling(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is busy.\nFor all X, if person X is busy, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is bored, then person X is excited.\nFor all X, if person X is excited, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is friendly.\nFor all X, if there exists B such that person X is calm and person X likes object B and object B is soft, then person X is angry.\nFor all Z, if object Z is heavy, then object Z is rough.\nFor all Y, if there exists A such that object Y is hard and person A owns object Y and person A is funny, then object Y is clean.\nFor all X, if object X is new, then object X is rough.\nFor all X, Y, if person X is happy and object Y is hard, then person X dislikes object Y.\n\nAnd the following facts:\ncarol is friendly.\ncar is small.\nbob is a friend of frank.\ndave is a sibling of carol.\n\nQUESTION:\nCould dave is hungry explain carol is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1015,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tall(dave).",
    "c": "brave(X) :- angry(X).\ntired(X) :- brave(X).\nweak(X) :- tired(X).\nfriendly(X) :- weak(X).\nbored(X) :- friendly(X).\ntall(X) :- bored(X).\nstrong(X) :- tall(X).\nhappy(X) :- strong(X).\nclever(X) :- happy(X).\ncurious(X) :- clever(X).\nhungry(X) :- curious(X).\nfunny(X) :- hungry(X).\nbusy(X) :- funny(X).\nexcited(X) :- busy(X).\nsad(X) :- excited(X).\ncalm(X) :- sad(X).\nfunny(X) :- calm(X).\nclever(X) :- funny(X).\ncalm(X) :- clever(X).\ntall(X) :- calm(X).\nhard(Y) :- red(Y).\nold(Y) :- clean(Y), dislikes(A,Y).\nsmooth(X) :- red(X), likes(W,X).\nheavy(X) :- wet(X).\nlight(X) :- old(X), hard(X).\nangry(dave).\nwet(ball).\nsibling(george,alice).\nlikes(alice,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all Y, if object Y is red, then object Y is hard.\nFor all Y, if there exists A such that object Y is clean and person A dislikes object Y, then object Y is old.\nFor all X, if there exists W such that object X is red and person W likes object X, then object X is smooth.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is old and object X is hard, then object X is light.\n\nAnd the following facts:\ndave is angry.\nball is wet.\ngeorge is a sibling of alice.\nalice likes phone.\n\nQUESTION:\nIs dave is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1016,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "brave(X) :- angry(X).\ntired(X) :- brave(X).\nweak(X) :- tired(X).\nfriendly(X) :- weak(X).\nbored(X) :- friendly(X).\ntall(X) :- bored(X).\nstrong(X) :- tall(X).\nhappy(X) :- strong(X).\nclever(X) :- happy(X).\ncurious(X) :- clever(X).\nhungry(X) :- curious(X).\nfunny(X) :- hungry(X).\nbusy(X) :- funny(X).\nexcited(X) :- busy(X).\nsad(X) :- excited(X).\ncalm(X) :- sad(X).\nfunny(X) :- calm(X).\nclever(X) :- funny(X).\ncalm(X) :- clever(X).\ntall(X) :- calm(X).\nhard(Y) :- red(Y).\nold(Y) :- clean(Y), dislikes(A,Y).\nsmooth(X) :- red(X), likes(W,X).\nheavy(X) :- wet(X).\nlight(X) :- old(X), hard(X).\nangry(dave).\nwet(ball).\nsibling(george,alice).\nlikes(alice,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all Y, if object Y is red, then object Y is hard.\nFor all Y, if there exists A such that object Y is clean and person A dislikes object Y, then object Y is old.\nFor all X, if there exists W such that object X is red and person W likes object X, then object X is smooth.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is old and object X is hard, then object X is light.\n\nAnd the following facts:\ndave is angry.\nball is wet.\ngeorge is a sibling of alice.\nalice likes phone.\n\nQUESTION:\nIs phone is rough true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1017,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(dave).",
    "c": "brave(X) :- angry(X).\ntired(X) :- brave(X).\nweak(X) :- tired(X).\nfriendly(X) :- weak(X).\nbored(X) :- friendly(X).\ntall(X) :- bored(X).\nstrong(X) :- tall(X).\nhappy(X) :- strong(X).\nclever(X) :- happy(X).\ncurious(X) :- clever(X).\nhungry(X) :- curious(X).\nfunny(X) :- hungry(X).\nbusy(X) :- funny(X).\nexcited(X) :- busy(X).\nsad(X) :- excited(X).\ncalm(X) :- sad(X).\nfunny(X) :- calm(X).\nclever(X) :- funny(X).\ncalm(X) :- clever(X).\ntall(X) :- calm(X).\nhard(Y) :- red(Y).\nold(Y) :- clean(Y), dislikes(A,Y).\nsmooth(X) :- red(X), likes(W,X).\nheavy(X) :- wet(X).\nlight(X) :- old(X), hard(X).\ntall(dave).\nwet(ball).\nsibling(george,alice).\nlikes(alice,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all Y, if object Y is red, then object Y is hard.\nFor all Y, if there exists A such that object Y is clean and person A dislikes object Y, then object Y is old.\nFor all X, if there exists W such that object X is red and person W likes object X, then object X is smooth.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is old and object X is hard, then object X is light.\n\nAnd the following facts:\ndave is tall.\nball is wet.\ngeorge is a sibling of alice.\nalice likes phone.\n\nQUESTION:\nCould dave is angry explain dave is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1018,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "new(apple).",
    "c": "brave(X) :- angry(X).\ntired(X) :- brave(X).\nweak(X) :- tired(X).\nfriendly(X) :- weak(X).\nbored(X) :- friendly(X).\ntall(X) :- bored(X).\nstrong(X) :- tall(X).\nhappy(X) :- strong(X).\nclever(X) :- happy(X).\ncurious(X) :- clever(X).\nhungry(X) :- curious(X).\nfunny(X) :- hungry(X).\nbusy(X) :- funny(X).\nexcited(X) :- busy(X).\nsad(X) :- excited(X).\ncalm(X) :- sad(X).\nfunny(X) :- calm(X).\nclever(X) :- funny(X).\ncalm(X) :- clever(X).\ntall(X) :- calm(X).\nhard(Y) :- red(Y).\nold(Y) :- clean(Y), dislikes(A,Y).\nsmooth(X) :- red(X), likes(W,X).\nheavy(X) :- wet(X).\nlight(X) :- old(X), hard(X).\ntall(dave).\nwet(ball).\nsibling(george,alice).\nlikes(alice,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is hungry.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is funny.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all Y, if object Y is red, then object Y is hard.\nFor all Y, if there exists A such that object Y is clean and person A dislikes object Y, then object Y is old.\nFor all X, if there exists W such that object X is red and person W likes object X, then object X is smooth.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if object X is old and object X is hard, then object X is light.\n\nAnd the following facts:\ndave is tall.\nball is wet.\ngeorge is a sibling of alice.\nalice likes phone.\n\nQUESTION:\nCould apple is new explain dave is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1019,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "new(book).",
    "c": "red(X) :- small(X).\nbig(X) :- red(X).\nsmooth(X) :- big(X).\nnew(X) :- smooth(X).\ndirty(X) :- new(X).\nheavy(X) :- dirty(X).\nhard(X) :- heavy(X).\nclean(X) :- hard(X).\nrough(X) :- clean(X).\nwet(X) :- rough(X).\nold(X) :- wet(X).\nsoft(X) :- old(X).\nlight(X) :- soft(X).\nclean(X) :- light(X).\nhard(X) :- clean(X).\nred(X) :- hard(X).\nnew(X) :- red(X).\nbig(X) :- new(X).\nbig(X) :- big(X).\nnew(X) :- big(X).\nsibling(Y,Z) :- funny(Y), clever(Z), curious(B).\nfriendly(Y) :- hungry(Y), sibling(Y,V), weak(V).\nsad(X) :- weak(X).\nowns(X,Y) :- tired(X), dislikes(X,Y).\ncurious(X) :- angry(X), strong(X).\nsmall(book).\nangry(dave).\nenemy(alice,carol).\ndislikes(alice,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all Y, Z, if there exists B such that person Y is funny and person Z is clever and person B is curious, then person Y is a sibling of person Z.\nFor all Y, if there exists V such that person Y is hungry and person Y is a sibling of person V and person V is weak, then person Y is friendly.\nFor all X, if person X is weak, then person X is sad.\nFor all X, Y, if person X is tired and person X dislikes object Y, then person X owns object Y.\nFor all X, if person X is angry and person X is strong, then person X is curious.\n\nAnd the following facts:\nbook is small.\ndave is angry.\nalice is an enemy of carol.\nalice dislikes phone.\n\nQUESTION:\nIs book is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1020,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(phone).",
    "c": "red(X) :- small(X).\nbig(X) :- red(X).\nsmooth(X) :- big(X).\nnew(X) :- smooth(X).\ndirty(X) :- new(X).\nheavy(X) :- dirty(X).\nhard(X) :- heavy(X).\nclean(X) :- hard(X).\nrough(X) :- clean(X).\nwet(X) :- rough(X).\nold(X) :- wet(X).\nsoft(X) :- old(X).\nlight(X) :- soft(X).\nclean(X) :- light(X).\nhard(X) :- clean(X).\nred(X) :- hard(X).\nnew(X) :- red(X).\nbig(X) :- new(X).\nbig(X) :- big(X).\nnew(X) :- big(X).\nsibling(Y,Z) :- funny(Y), clever(Z), curious(B).\nfriendly(Y) :- hungry(Y), sibling(Y,V), weak(V).\nsad(X) :- weak(X).\nowns(X,Y) :- tired(X), dislikes(X,Y).\ncurious(X) :- angry(X), strong(X).\nsmall(book).\nangry(dave).\nenemy(alice,carol).\ndislikes(alice,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all Y, Z, if there exists B such that person Y is funny and person Z is clever and person B is curious, then person Y is a sibling of person Z.\nFor all Y, if there exists V such that person Y is hungry and person Y is a sibling of person V and person V is weak, then person Y is friendly.\nFor all X, if person X is weak, then person X is sad.\nFor all X, Y, if person X is tired and person X dislikes object Y, then person X owns object Y.\nFor all X, if person X is angry and person X is strong, then person X is curious.\n\nAnd the following facts:\nbook is small.\ndave is angry.\nalice is an enemy of carol.\nalice dislikes phone.\n\nQUESTION:\nIs phone is red true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1021,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "red(X) :- small(X).\nbig(X) :- red(X).\nsmooth(X) :- big(X).\nnew(X) :- smooth(X).\ndirty(X) :- new(X).\nheavy(X) :- dirty(X).\nhard(X) :- heavy(X).\nclean(X) :- hard(X).\nrough(X) :- clean(X).\nwet(X) :- rough(X).\nold(X) :- wet(X).\nsoft(X) :- old(X).\nlight(X) :- soft(X).\nclean(X) :- light(X).\nhard(X) :- clean(X).\nred(X) :- hard(X).\nnew(X) :- red(X).\nbig(X) :- new(X).\nbig(X) :- big(X).\nnew(X) :- big(X).\nsibling(Y,Z) :- funny(Y), clever(Z), curious(B).\nfriendly(Y) :- hungry(Y), sibling(Y,V), weak(V).\nsad(X) :- weak(X).\nowns(X,Y) :- tired(X), dislikes(X,Y).\ncurious(X) :- angry(X), strong(X).\nnew(book).\nangry(dave).\nenemy(alice,carol).\ndislikes(alice,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all Y, Z, if there exists B such that person Y is funny and person Z is clever and person B is curious, then person Y is a sibling of person Z.\nFor all Y, if there exists V such that person Y is hungry and person Y is a sibling of person V and person V is weak, then person Y is friendly.\nFor all X, if person X is weak, then person X is sad.\nFor all X, Y, if person X is tired and person X dislikes object Y, then person X owns object Y.\nFor all X, if person X is angry and person X is strong, then person X is curious.\n\nAnd the following facts:\nbook is new.\ndave is angry.\nalice is an enemy of carol.\nalice dislikes phone.\n\nQUESTION:\nCould book is small explain book is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1022,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "sad(frank).",
    "c": "red(X) :- small(X).\nbig(X) :- red(X).\nsmooth(X) :- big(X).\nnew(X) :- smooth(X).\ndirty(X) :- new(X).\nheavy(X) :- dirty(X).\nhard(X) :- heavy(X).\nclean(X) :- hard(X).\nrough(X) :- clean(X).\nwet(X) :- rough(X).\nold(X) :- wet(X).\nsoft(X) :- old(X).\nlight(X) :- soft(X).\nclean(X) :- light(X).\nhard(X) :- clean(X).\nred(X) :- hard(X).\nnew(X) :- red(X).\nbig(X) :- new(X).\nbig(X) :- big(X).\nnew(X) :- big(X).\nsibling(Y,Z) :- funny(Y), clever(Z), curious(B).\nfriendly(Y) :- hungry(Y), sibling(Y,V), weak(V).\nsad(X) :- weak(X).\nowns(X,Y) :- tired(X), dislikes(X,Y).\ncurious(X) :- angry(X), strong(X).\nnew(book).\nangry(dave).\nenemy(alice,carol).\ndislikes(alice,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is new.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is big.\nFor all X, if object X is big, then object X is new.\nFor all Y, Z, if there exists B such that person Y is funny and person Z is clever and person B is curious, then person Y is a sibling of person Z.\nFor all Y, if there exists V such that person Y is hungry and person Y is a sibling of person V and person V is weak, then person Y is friendly.\nFor all X, if person X is weak, then person X is sad.\nFor all X, Y, if person X is tired and person X dislikes object Y, then person X owns object Y.\nFor all X, if person X is angry and person X is strong, then person X is curious.\n\nAnd the following facts:\nbook is new.\ndave is angry.\nalice is an enemy of carol.\nalice dislikes phone.\n\nQUESTION:\nCould frank is sad explain book is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1023,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "brave(george).",
    "c": "brave(X) :- excited(X).\nfriendly(X) :- tall(X), sibling(X,W), happy(W).\nhungry(X) :- sad(X), dislikes(X,A), soft(A).\nnew(Y) :- dirty(Y), likes(U,Y), tall(U).\nfunny(Y) :- weak(Y), parent(Y,W), curious(W).\nsmall(Y) :- new(Y), likes(V,Y), sad(V).\nhungry(Z) :- funny(Z), owns(Z,U), smooth(U).\ntall(X) :- calm(X), enemy(X,B), bored(B).\nhard(Z) :- new(Z), dislikes(B,Z), bored(B).\nfriendly(Y) :- funny(Y), owns(Y,A), clean(A).\nhard(X) :- soft(X), old(X).\nsmooth(X) :- clean(X).\ncalm(X) :- friendly(X).\nhard(X) :- new(X), dirty(X).\nhappy(X) :- funny(X), calm(X).\nheavy(X) :- clean(X), wet(X).\nsibling(X,Y) :- bored(X), strong(Y).\ndislikes(X,Y) :- tall(X), dirty(Y), owns(X,Y).\nparent(X,Y) :- funny(X), bored(Y).\nheavy(X) :- new(X).\ndirty(X) :- clean(X), light(X).\ncalm(X) :- curious(X).\nsmooth(X) :- red(X), soft(X).\nparent(X,Y) :- tired(X), clever(Y).\nsoft(X) :- hard(X), dirty(X).\nexcited(george).\ndirty(pencil).\nnew(book).\nbig(apple).\nlikes(dave,ball).\ndislikes(frank,phone).\nenemy(eve,carol).\nred(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is brave.\nFor all X, if there exists W such that person X is tall and person X is a sibling of person W and person W is happy, then person X is friendly.\nFor all X, if there exists A such that person X is sad and person X dislikes object A and object A is soft, then person X is hungry.\nFor all Y, if there exists U such that object Y is dirty and person U likes object Y and person U is tall, then object Y is new.\nFor all Y, if there exists W such that person Y is weak and person Y is a parent of person W and person W is curious, then person Y is funny.\nFor all Y, if there exists V such that object Y is new and person V likes object Y and person V is sad, then object Y is small.\nFor all Z, if there exists U such that person Z is funny and person Z owns object U and object U is smooth, then person Z is hungry.\nFor all X, if there exists B such that person X is calm and person X is an enemy of person B and person B is bored, then person X is tall.\nFor all Z, if there exists B such that object Z is new and person B dislikes object Z and person B is bored, then object Z is hard.\nFor all Y, if there exists A such that person Y is funny and person Y owns object A and object A is clean, then person Y is friendly.\nFor all X, if object X is soft and object X is old, then object X is hard.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if object X is new and object X is dirty, then object X is hard.\nFor all X, if person X is funny and person X is calm, then person X is happy.\nFor all X, if object X is clean and object X is wet, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is strong, then person X is a sibling of person Y.\nFor all X, Y, if person X is tall and object Y is dirty and person X owns object Y, then person X dislikes object Y.\nFor all X, Y, if person X is funny and person Y is bored, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is clean and object X is light, then object X is dirty.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if object X is red and object X is soft, then object X is smooth.\nFor all X, Y, if person X is tired and person Y is clever, then person X is a parent of person Y.\nFor all X, if object X is hard and object X is dirty, then object X is soft.\n\nAnd the following facts:\ngeorge is excited.\npencil is dirty.\nbook is new.\napple is big.\ndave likes ball.\nfrank dislikes phone.\neve is an enemy of carol.\nball is red.\n\nQUESTION:\nIs george is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1024,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "excited(frank).",
    "c": "brave(X) :- excited(X).\nfriendly(X) :- tall(X), sibling(X,W), happy(W).\nhungry(X) :- sad(X), dislikes(X,A), soft(A).\nnew(Y) :- dirty(Y), likes(U,Y), tall(U).\nfunny(Y) :- weak(Y), parent(Y,W), curious(W).\nsmall(Y) :- new(Y), likes(V,Y), sad(V).\nhungry(Z) :- funny(Z), owns(Z,U), smooth(U).\ntall(X) :- calm(X), enemy(X,B), bored(B).\nhard(Z) :- new(Z), dislikes(B,Z), bored(B).\nfriendly(Y) :- funny(Y), owns(Y,A), clean(A).\nhard(X) :- soft(X), old(X).\nsmooth(X) :- clean(X).\ncalm(X) :- friendly(X).\nhard(X) :- new(X), dirty(X).\nhappy(X) :- funny(X), calm(X).\nheavy(X) :- clean(X), wet(X).\nsibling(X,Y) :- bored(X), strong(Y).\ndislikes(X,Y) :- tall(X), dirty(Y), owns(X,Y).\nparent(X,Y) :- funny(X), bored(Y).\nheavy(X) :- new(X).\ndirty(X) :- clean(X), light(X).\ncalm(X) :- curious(X).\nsmooth(X) :- red(X), soft(X).\nparent(X,Y) :- tired(X), clever(Y).\nsoft(X) :- hard(X), dirty(X).\nexcited(george).\ndirty(pencil).\nnew(book).\nbig(apple).\nlikes(dave,ball).\ndislikes(frank,phone).\nenemy(eve,carol).\nred(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is brave.\nFor all X, if there exists W such that person X is tall and person X is a sibling of person W and person W is happy, then person X is friendly.\nFor all X, if there exists A such that person X is sad and person X dislikes object A and object A is soft, then person X is hungry.\nFor all Y, if there exists U such that object Y is dirty and person U likes object Y and person U is tall, then object Y is new.\nFor all Y, if there exists W such that person Y is weak and person Y is a parent of person W and person W is curious, then person Y is funny.\nFor all Y, if there exists V such that object Y is new and person V likes object Y and person V is sad, then object Y is small.\nFor all Z, if there exists U such that person Z is funny and person Z owns object U and object U is smooth, then person Z is hungry.\nFor all X, if there exists B such that person X is calm and person X is an enemy of person B and person B is bored, then person X is tall.\nFor all Z, if there exists B such that object Z is new and person B dislikes object Z and person B is bored, then object Z is hard.\nFor all Y, if there exists A such that person Y is funny and person Y owns object A and object A is clean, then person Y is friendly.\nFor all X, if object X is soft and object X is old, then object X is hard.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if object X is new and object X is dirty, then object X is hard.\nFor all X, if person X is funny and person X is calm, then person X is happy.\nFor all X, if object X is clean and object X is wet, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is strong, then person X is a sibling of person Y.\nFor all X, Y, if person X is tall and object Y is dirty and person X owns object Y, then person X dislikes object Y.\nFor all X, Y, if person X is funny and person Y is bored, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is clean and object X is light, then object X is dirty.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if object X is red and object X is soft, then object X is smooth.\nFor all X, Y, if person X is tired and person Y is clever, then person X is a parent of person Y.\nFor all X, if object X is hard and object X is dirty, then object X is soft.\n\nAnd the following facts:\ngeorge is excited.\npencil is dirty.\nbook is new.\napple is big.\ndave likes ball.\nfrank dislikes phone.\neve is an enemy of carol.\nball is red.\n\nQUESTION:\nIs frank is excited true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1025,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(george).",
    "c": "brave(X) :- excited(X).\nfriendly(X) :- tall(X), sibling(X,W), happy(W).\nhungry(X) :- sad(X), dislikes(X,A), soft(A).\nnew(Y) :- dirty(Y), likes(U,Y), tall(U).\nfunny(Y) :- weak(Y), parent(Y,W), curious(W).\nsmall(Y) :- new(Y), likes(V,Y), sad(V).\nhungry(Z) :- funny(Z), owns(Z,U), smooth(U).\ntall(X) :- calm(X), enemy(X,B), bored(B).\nhard(Z) :- new(Z), dislikes(B,Z), bored(B).\nfriendly(Y) :- funny(Y), owns(Y,A), clean(A).\nhard(X) :- soft(X), old(X).\nsmooth(X) :- clean(X).\ncalm(X) :- friendly(X).\nhard(X) :- new(X), dirty(X).\nhappy(X) :- funny(X), calm(X).\nheavy(X) :- clean(X), wet(X).\nsibling(X,Y) :- bored(X), strong(Y).\ndislikes(X,Y) :- tall(X), dirty(Y), owns(X,Y).\nparent(X,Y) :- funny(X), bored(Y).\nheavy(X) :- new(X).\ndirty(X) :- clean(X), light(X).\ncalm(X) :- curious(X).\nsmooth(X) :- red(X), soft(X).\nparent(X,Y) :- tired(X), clever(Y).\nsoft(X) :- hard(X), dirty(X).\nbrave(george).\ndirty(pencil).\nnew(book).\nbig(apple).\nlikes(dave,ball).\ndislikes(frank,phone).\nenemy(eve,carol).\nred(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is brave.\nFor all X, if there exists W such that person X is tall and person X is a sibling of person W and person W is happy, then person X is friendly.\nFor all X, if there exists A such that person X is sad and person X dislikes object A and object A is soft, then person X is hungry.\nFor all Y, if there exists U such that object Y is dirty and person U likes object Y and person U is tall, then object Y is new.\nFor all Y, if there exists W such that person Y is weak and person Y is a parent of person W and person W is curious, then person Y is funny.\nFor all Y, if there exists V such that object Y is new and person V likes object Y and person V is sad, then object Y is small.\nFor all Z, if there exists U such that person Z is funny and person Z owns object U and object U is smooth, then person Z is hungry.\nFor all X, if there exists B such that person X is calm and person X is an enemy of person B and person B is bored, then person X is tall.\nFor all Z, if there exists B such that object Z is new and person B dislikes object Z and person B is bored, then object Z is hard.\nFor all Y, if there exists A such that person Y is funny and person Y owns object A and object A is clean, then person Y is friendly.\nFor all X, if object X is soft and object X is old, then object X is hard.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if object X is new and object X is dirty, then object X is hard.\nFor all X, if person X is funny and person X is calm, then person X is happy.\nFor all X, if object X is clean and object X is wet, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is strong, then person X is a sibling of person Y.\nFor all X, Y, if person X is tall and object Y is dirty and person X owns object Y, then person X dislikes object Y.\nFor all X, Y, if person X is funny and person Y is bored, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is clean and object X is light, then object X is dirty.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if object X is red and object X is soft, then object X is smooth.\nFor all X, Y, if person X is tired and person Y is clever, then person X is a parent of person Y.\nFor all X, if object X is hard and object X is dirty, then object X is soft.\n\nAnd the following facts:\ngeorge is brave.\npencil is dirty.\nbook is new.\napple is big.\ndave likes ball.\nfrank dislikes phone.\neve is an enemy of carol.\nball is red.\n\nQUESTION:\nCould george is excited explain george is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1026,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(frank).",
    "c": "brave(X) :- excited(X).\nfriendly(X) :- tall(X), sibling(X,W), happy(W).\nhungry(X) :- sad(X), dislikes(X,A), soft(A).\nnew(Y) :- dirty(Y), likes(U,Y), tall(U).\nfunny(Y) :- weak(Y), parent(Y,W), curious(W).\nsmall(Y) :- new(Y), likes(V,Y), sad(V).\nhungry(Z) :- funny(Z), owns(Z,U), smooth(U).\ntall(X) :- calm(X), enemy(X,B), bored(B).\nhard(Z) :- new(Z), dislikes(B,Z), bored(B).\nfriendly(Y) :- funny(Y), owns(Y,A), clean(A).\nhard(X) :- soft(X), old(X).\nsmooth(X) :- clean(X).\ncalm(X) :- friendly(X).\nhard(X) :- new(X), dirty(X).\nhappy(X) :- funny(X), calm(X).\nheavy(X) :- clean(X), wet(X).\nsibling(X,Y) :- bored(X), strong(Y).\ndislikes(X,Y) :- tall(X), dirty(Y), owns(X,Y).\nparent(X,Y) :- funny(X), bored(Y).\nheavy(X) :- new(X).\ndirty(X) :- clean(X), light(X).\ncalm(X) :- curious(X).\nsmooth(X) :- red(X), soft(X).\nparent(X,Y) :- tired(X), clever(Y).\nsoft(X) :- hard(X), dirty(X).\nbrave(george).\ndirty(pencil).\nnew(book).\nbig(apple).\nlikes(dave,ball).\ndislikes(frank,phone).\nenemy(eve,carol).\nred(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is excited, then person X is brave.\nFor all X, if there exists W such that person X is tall and person X is a sibling of person W and person W is happy, then person X is friendly.\nFor all X, if there exists A such that person X is sad and person X dislikes object A and object A is soft, then person X is hungry.\nFor all Y, if there exists U such that object Y is dirty and person U likes object Y and person U is tall, then object Y is new.\nFor all Y, if there exists W such that person Y is weak and person Y is a parent of person W and person W is curious, then person Y is funny.\nFor all Y, if there exists V such that object Y is new and person V likes object Y and person V is sad, then object Y is small.\nFor all Z, if there exists U such that person Z is funny and person Z owns object U and object U is smooth, then person Z is hungry.\nFor all X, if there exists B such that person X is calm and person X is an enemy of person B and person B is bored, then person X is tall.\nFor all Z, if there exists B such that object Z is new and person B dislikes object Z and person B is bored, then object Z is hard.\nFor all Y, if there exists A such that person Y is funny and person Y owns object A and object A is clean, then person Y is friendly.\nFor all X, if object X is soft and object X is old, then object X is hard.\nFor all X, if object X is clean, then object X is smooth.\nFor all X, if person X is friendly, then person X is calm.\nFor all X, if object X is new and object X is dirty, then object X is hard.\nFor all X, if person X is funny and person X is calm, then person X is happy.\nFor all X, if object X is clean and object X is wet, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is strong, then person X is a sibling of person Y.\nFor all X, Y, if person X is tall and object Y is dirty and person X owns object Y, then person X dislikes object Y.\nFor all X, Y, if person X is funny and person Y is bored, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is clean and object X is light, then object X is dirty.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if object X is red and object X is soft, then object X is smooth.\nFor all X, Y, if person X is tired and person Y is clever, then person X is a parent of person Y.\nFor all X, if object X is hard and object X is dirty, then object X is soft.\n\nAnd the following facts:\ngeorge is brave.\npencil is dirty.\nbook is new.\napple is big.\ndave likes ball.\nfrank dislikes phone.\neve is an enemy of carol.\nball is red.\n\nQUESTION:\nCould frank is clever explain george is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1027,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(carol).",
    "c": "happy(X) :- curious(X).\ntired(Z) :- sad(Z).\nbored(X) :- sad(X), enemy(X,V), calm(V).\nlikes(X,Z) :- smooth(Z), angry(X), dislikes(X,V).\ntired(Z) :- excited(Z), likes(Z,W), old(W).\nfriendly(Z) :- brave(Z), parent(Z,B), tired(B).\nfriend(X,Z) :- funny(Z), tall(X).\nstrong(X) :- angry(X), enemy(X,U), strong(U).\nweak(Y) :- bored(Y), friend(Y,B), excited(B).\nbusy(Y) :- clever(Y), friendly(D).\nheavy(X) :- rough(X).\nenemy(Z,X) :- angry(Z), angry(X), tall(E).\ntired(Y) :- angry(Y), friend(Y,B), clever(B).\nfriend(X,Y) :- bored(X), weak(Y).\nbusy(X) :- clever(X), excited(X).\nparent(X,Y) :- strong(X), funny(Y), friend(X,Y).\nbig(X) :- red(X), new(X).\ncalm(X) :- tall(X).\nhungry(X) :- sad(X).\nhard(X) :- wet(X), red(X).\nlight(X) :- smooth(X).\nlikes(X,Y) :- funny(X), rough(Y).\nowns(X,Y) :- sad(X), old(Y), likes(X,Y).\nstrong(X) :- weak(X).\nhungry(X) :- funny(X).\ncurious(carol).\nsibling(bob,carol).\ntired(alice).\ntired(frank).\nexcited(dave).\nsibling(alice,dave).\ndislikes(eve,ball).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is happy.\nFor all Z, if person Z is sad, then person Z is tired.\nFor all X, if there exists V such that person X is sad and person X is an enemy of person V and person V is calm, then person X is bored.\nFor all X, Z, if there exists V such that object Z is smooth and person X is angry and person X dislikes object V, then person X likes object Z.\nFor all Z, if there exists W such that person Z is excited and person Z likes object W and object W is old, then person Z is tired.\nFor all Z, if there exists B such that person Z is brave and person Z is a parent of person B and person B is tired, then person Z is friendly.\nFor all X, Z, if person Z is funny and person X is tall, then person X is a friend of person Z.\nFor all X, if there exists U such that person X is angry and person X is an enemy of person U and person U is strong, then person X is strong.\nFor all Y, if there exists B such that person Y is bored and person Y is a friend of person B and person B is excited, then person Y is weak.\nFor all Y, if there exists D such that person Y is clever and person D is friendly, then person Y is busy.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, Z, if there exists E such that person Z is angry and person X is angry and person E is tall, then person Z is an enemy of person X.\nFor all Y, if there exists B such that person Y is angry and person Y is a friend of person B and person B is clever, then person Y is tired.\nFor all X, Y, if person X is bored and person Y is weak, then person X is a friend of person Y.\nFor all X, if person X is clever and person X is excited, then person X is busy.\nFor all X, Y, if person X is strong and person Y is funny and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if object X is red and object X is new, then object X is big.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if object X is wet and object X is red, then object X is hard.\nFor all X, if object X is smooth, then object X is light.\nFor all X, Y, if person X is funny and object Y is rough, then person X likes object Y.\nFor all X, Y, if person X is sad and object Y is old and person X likes object Y, then person X owns object Y.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\ncarol is curious.\nbob is a sibling of carol.\nalice is tired.\nfrank is tired.\ndave is excited.\nalice is a sibling of dave.\neve dislikes ball.\ndave is a friend of carol.\n\nQUESTION:\nIs carol is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1028,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(carol).",
    "c": "happy(X) :- curious(X).\ntired(Z) :- sad(Z).\nbored(X) :- sad(X), enemy(X,V), calm(V).\nlikes(X,Z) :- smooth(Z), angry(X), dislikes(X,V).\ntired(Z) :- excited(Z), likes(Z,W), old(W).\nfriendly(Z) :- brave(Z), parent(Z,B), tired(B).\nfriend(X,Z) :- funny(Z), tall(X).\nstrong(X) :- angry(X), enemy(X,U), strong(U).\nweak(Y) :- bored(Y), friend(Y,B), excited(B).\nbusy(Y) :- clever(Y), friendly(D).\nheavy(X) :- rough(X).\nenemy(Z,X) :- angry(Z), angry(X), tall(E).\ntired(Y) :- angry(Y), friend(Y,B), clever(B).\nfriend(X,Y) :- bored(X), weak(Y).\nbusy(X) :- clever(X), excited(X).\nparent(X,Y) :- strong(X), funny(Y), friend(X,Y).\nbig(X) :- red(X), new(X).\ncalm(X) :- tall(X).\nhungry(X) :- sad(X).\nhard(X) :- wet(X), red(X).\nlight(X) :- smooth(X).\nlikes(X,Y) :- funny(X), rough(Y).\nowns(X,Y) :- sad(X), old(Y), likes(X,Y).\nstrong(X) :- weak(X).\nhungry(X) :- funny(X).\ncurious(carol).\nsibling(bob,carol).\ntired(alice).\ntired(frank).\nexcited(dave).\nsibling(alice,dave).\ndislikes(eve,ball).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is happy.\nFor all Z, if person Z is sad, then person Z is tired.\nFor all X, if there exists V such that person X is sad and person X is an enemy of person V and person V is calm, then person X is bored.\nFor all X, Z, if there exists V such that object Z is smooth and person X is angry and person X dislikes object V, then person X likes object Z.\nFor all Z, if there exists W such that person Z is excited and person Z likes object W and object W is old, then person Z is tired.\nFor all Z, if there exists B such that person Z is brave and person Z is a parent of person B and person B is tired, then person Z is friendly.\nFor all X, Z, if person Z is funny and person X is tall, then person X is a friend of person Z.\nFor all X, if there exists U such that person X is angry and person X is an enemy of person U and person U is strong, then person X is strong.\nFor all Y, if there exists B such that person Y is bored and person Y is a friend of person B and person B is excited, then person Y is weak.\nFor all Y, if there exists D such that person Y is clever and person D is friendly, then person Y is busy.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, Z, if there exists E such that person Z is angry and person X is angry and person E is tall, then person Z is an enemy of person X.\nFor all Y, if there exists B such that person Y is angry and person Y is a friend of person B and person B is clever, then person Y is tired.\nFor all X, Y, if person X is bored and person Y is weak, then person X is a friend of person Y.\nFor all X, if person X is clever and person X is excited, then person X is busy.\nFor all X, Y, if person X is strong and person Y is funny and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if object X is red and object X is new, then object X is big.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if object X is wet and object X is red, then object X is hard.\nFor all X, if object X is smooth, then object X is light.\nFor all X, Y, if person X is funny and object Y is rough, then person X likes object Y.\nFor all X, Y, if person X is sad and object Y is old and person X likes object Y, then person X owns object Y.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\ncarol is curious.\nbob is a sibling of carol.\nalice is tired.\nfrank is tired.\ndave is excited.\nalice is a sibling of dave.\neve dislikes ball.\ndave is a friend of carol.\n\nQUESTION:\nIs carol is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1029,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(carol).",
    "c": "happy(X) :- curious(X).\ntired(Z) :- sad(Z).\nbored(X) :- sad(X), enemy(X,V), calm(V).\nlikes(X,Z) :- smooth(Z), angry(X), dislikes(X,V).\ntired(Z) :- excited(Z), likes(Z,W), old(W).\nfriendly(Z) :- brave(Z), parent(Z,B), tired(B).\nfriend(X,Z) :- funny(Z), tall(X).\nstrong(X) :- angry(X), enemy(X,U), strong(U).\nweak(Y) :- bored(Y), friend(Y,B), excited(B).\nbusy(Y) :- clever(Y), friendly(D).\nheavy(X) :- rough(X).\nenemy(Z,X) :- angry(Z), angry(X), tall(E).\ntired(Y) :- angry(Y), friend(Y,B), clever(B).\nfriend(X,Y) :- bored(X), weak(Y).\nbusy(X) :- clever(X), excited(X).\nparent(X,Y) :- strong(X), funny(Y), friend(X,Y).\nbig(X) :- red(X), new(X).\ncalm(X) :- tall(X).\nhungry(X) :- sad(X).\nhard(X) :- wet(X), red(X).\nlight(X) :- smooth(X).\nlikes(X,Y) :- funny(X), rough(Y).\nowns(X,Y) :- sad(X), old(Y), likes(X,Y).\nstrong(X) :- weak(X).\nhungry(X) :- funny(X).\nhappy(carol).\nsibling(bob,carol).\ntired(alice).\ntired(frank).\nexcited(dave).\nsibling(alice,dave).\ndislikes(eve,ball).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is happy.\nFor all Z, if person Z is sad, then person Z is tired.\nFor all X, if there exists V such that person X is sad and person X is an enemy of person V and person V is calm, then person X is bored.\nFor all X, Z, if there exists V such that object Z is smooth and person X is angry and person X dislikes object V, then person X likes object Z.\nFor all Z, if there exists W such that person Z is excited and person Z likes object W and object W is old, then person Z is tired.\nFor all Z, if there exists B such that person Z is brave and person Z is a parent of person B and person B is tired, then person Z is friendly.\nFor all X, Z, if person Z is funny and person X is tall, then person X is a friend of person Z.\nFor all X, if there exists U such that person X is angry and person X is an enemy of person U and person U is strong, then person X is strong.\nFor all Y, if there exists B such that person Y is bored and person Y is a friend of person B and person B is excited, then person Y is weak.\nFor all Y, if there exists D such that person Y is clever and person D is friendly, then person Y is busy.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, Z, if there exists E such that person Z is angry and person X is angry and person E is tall, then person Z is an enemy of person X.\nFor all Y, if there exists B such that person Y is angry and person Y is a friend of person B and person B is clever, then person Y is tired.\nFor all X, Y, if person X is bored and person Y is weak, then person X is a friend of person Y.\nFor all X, if person X is clever and person X is excited, then person X is busy.\nFor all X, Y, if person X is strong and person Y is funny and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if object X is red and object X is new, then object X is big.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if object X is wet and object X is red, then object X is hard.\nFor all X, if object X is smooth, then object X is light.\nFor all X, Y, if person X is funny and object Y is rough, then person X likes object Y.\nFor all X, Y, if person X is sad and object Y is old and person X likes object Y, then person X owns object Y.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\ncarol is happy.\nbob is a sibling of carol.\nalice is tired.\nfrank is tired.\ndave is excited.\nalice is a sibling of dave.\neve dislikes ball.\ndave is a friend of carol.\n\nQUESTION:\nCould carol is curious explain carol is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1030,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "soft(phone).",
    "c": "happy(X) :- curious(X).\ntired(Z) :- sad(Z).\nbored(X) :- sad(X), enemy(X,V), calm(V).\nlikes(X,Z) :- smooth(Z), angry(X), dislikes(X,V).\ntired(Z) :- excited(Z), likes(Z,W), old(W).\nfriendly(Z) :- brave(Z), parent(Z,B), tired(B).\nfriend(X,Z) :- funny(Z), tall(X).\nstrong(X) :- angry(X), enemy(X,U), strong(U).\nweak(Y) :- bored(Y), friend(Y,B), excited(B).\nbusy(Y) :- clever(Y), friendly(D).\nheavy(X) :- rough(X).\nenemy(Z,X) :- angry(Z), angry(X), tall(E).\ntired(Y) :- angry(Y), friend(Y,B), clever(B).\nfriend(X,Y) :- bored(X), weak(Y).\nbusy(X) :- clever(X), excited(X).\nparent(X,Y) :- strong(X), funny(Y), friend(X,Y).\nbig(X) :- red(X), new(X).\ncalm(X) :- tall(X).\nhungry(X) :- sad(X).\nhard(X) :- wet(X), red(X).\nlight(X) :- smooth(X).\nlikes(X,Y) :- funny(X), rough(Y).\nowns(X,Y) :- sad(X), old(Y), likes(X,Y).\nstrong(X) :- weak(X).\nhungry(X) :- funny(X).\nhappy(carol).\nsibling(bob,carol).\ntired(alice).\ntired(frank).\nexcited(dave).\nsibling(alice,dave).\ndislikes(eve,ball).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is happy.\nFor all Z, if person Z is sad, then person Z is tired.\nFor all X, if there exists V such that person X is sad and person X is an enemy of person V and person V is calm, then person X is bored.\nFor all X, Z, if there exists V such that object Z is smooth and person X is angry and person X dislikes object V, then person X likes object Z.\nFor all Z, if there exists W such that person Z is excited and person Z likes object W and object W is old, then person Z is tired.\nFor all Z, if there exists B such that person Z is brave and person Z is a parent of person B and person B is tired, then person Z is friendly.\nFor all X, Z, if person Z is funny and person X is tall, then person X is a friend of person Z.\nFor all X, if there exists U such that person X is angry and person X is an enemy of person U and person U is strong, then person X is strong.\nFor all Y, if there exists B such that person Y is bored and person Y is a friend of person B and person B is excited, then person Y is weak.\nFor all Y, if there exists D such that person Y is clever and person D is friendly, then person Y is busy.\nFor all X, if object X is rough, then object X is heavy.\nFor all X, Z, if there exists E such that person Z is angry and person X is angry and person E is tall, then person Z is an enemy of person X.\nFor all Y, if there exists B such that person Y is angry and person Y is a friend of person B and person B is clever, then person Y is tired.\nFor all X, Y, if person X is bored and person Y is weak, then person X is a friend of person Y.\nFor all X, if person X is clever and person X is excited, then person X is busy.\nFor all X, Y, if person X is strong and person Y is funny and person X is a friend of person Y, then person X is a parent of person Y.\nFor all X, if object X is red and object X is new, then object X is big.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if object X is wet and object X is red, then object X is hard.\nFor all X, if object X is smooth, then object X is light.\nFor all X, Y, if person X is funny and object Y is rough, then person X likes object Y.\nFor all X, Y, if person X is sad and object Y is old and person X likes object Y, then person X owns object Y.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\ncarol is happy.\nbob is a sibling of carol.\nalice is tired.\nfrank is tired.\ndave is excited.\nalice is a sibling of dave.\neve dislikes ball.\ndave is a friend of carol.\n\nQUESTION:\nCould phone is soft explain carol is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1031,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(frank).",
    "c": "strong(X) :- clever(X).\nlight(Y) :- heavy(Y), dislikes(A,Y), hungry(A).\nsmall(Z) :- smooth(Z), likes(W,Z), brave(W).\nwet(Y) :- small(Y), red(A).\nweak(Z) :- bored(Z), friend(Z,U), curious(U).\nrough(X) :- hard(X).\nsibling(X,Y) :- friendly(Y), busy(X), sibling(X,V).\nheavy(X) :- wet(X), brave(A).\nred(Y) :- old(Y).\nbrave(X) :- curious(X), light(C).\nhard(Y) :- clean(Y), likes(B,Y), hungry(B).\nowns(Y,X) :- funny(Y), dirty(X), parent(Y,A).\nfunny(X) :- weak(X).\nfunny(X) :- brave(X), sad(X).\nexcited(X) :- friendly(X).\nlight(X) :- dirty(X), clean(X).\nsad(X) :- hungry(X), happy(X).\ndislikes(X,Y) :- curious(X), new(Y), likes(X,Y).\nsmall(X) :- soft(X).\ncurious(X) :- angry(X).\nrough(X) :- new(X).\nnew(X) :- big(X), big(X).\nold(X) :- big(X).\ntired(X) :- happy(X).\nfriend(X,Y) :- tired(X), friendly(Y).\nclever(frank).\nexcited(dave).\nfriend(frank,eve).\nlikes(bob,ball).\nsibling(bob,frank).\nenemy(eve,alice).\nfriend(frank,george).\nhappy(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is strong.\nFor all Y, if there exists A such that object Y is heavy and person A dislikes object Y and person A is hungry, then object Y is light.\nFor all Z, if there exists W such that object Z is smooth and person W likes object Z and person W is brave, then object Z is small.\nFor all Y, if there exists A such that object Y is small and object A is red, then object Y is wet.\nFor all Z, if there exists U such that person Z is bored and person Z is a friend of person U and person U is curious, then person Z is weak.\nFor all X, if object X is hard, then object X is rough.\nFor all X, Y, if there exists V such that person Y is friendly and person X is busy and person X is a sibling of person V, then person X is a sibling of person Y.\nFor all X, if there exists A such that object X is wet and person A is brave, then object X is heavy.\nFor all Y, if object Y is old, then object Y is red.\nFor all X, if there exists C such that person X is curious and object C is light, then person X is brave.\nFor all Y, if there exists B such that object Y is clean and person B likes object Y and person B is hungry, then object Y is hard.\nFor all X, Y, if there exists A such that person Y is funny and object X is dirty and person Y is a parent of person A, then person Y owns object X.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is brave and person X is sad, then person X is funny.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is dirty and object X is clean, then object X is light.\nFor all X, if person X is hungry and person X is happy, then person X is sad.\nFor all X, Y, if person X is curious and object Y is new and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is soft, then object X is small.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is big and object X is big, then object X is new.\nFor all X, if object X is big, then object X is old.\nFor all X, if person X is happy, then person X is tired.\nFor all X, Y, if person X is tired and person Y is friendly, then person X is a friend of person Y.\n\nAnd the following facts:\nfrank is clever.\ndave is excited.\nfrank is a friend of eve.\nbob likes ball.\nbob is a sibling of frank.\neve is an enemy of alice.\nfrank is a friend of george.\neve is happy.\n\nQUESTION:\nIs frank is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1032,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(carol).",
    "c": "strong(X) :- clever(X).\nlight(Y) :- heavy(Y), dislikes(A,Y), hungry(A).\nsmall(Z) :- smooth(Z), likes(W,Z), brave(W).\nwet(Y) :- small(Y), red(A).\nweak(Z) :- bored(Z), friend(Z,U), curious(U).\nrough(X) :- hard(X).\nsibling(X,Y) :- friendly(Y), busy(X), sibling(X,V).\nheavy(X) :- wet(X), brave(A).\nred(Y) :- old(Y).\nbrave(X) :- curious(X), light(C).\nhard(Y) :- clean(Y), likes(B,Y), hungry(B).\nowns(Y,X) :- funny(Y), dirty(X), parent(Y,A).\nfunny(X) :- weak(X).\nfunny(X) :- brave(X), sad(X).\nexcited(X) :- friendly(X).\nlight(X) :- dirty(X), clean(X).\nsad(X) :- hungry(X), happy(X).\ndislikes(X,Y) :- curious(X), new(Y), likes(X,Y).\nsmall(X) :- soft(X).\ncurious(X) :- angry(X).\nrough(X) :- new(X).\nnew(X) :- big(X), big(X).\nold(X) :- big(X).\ntired(X) :- happy(X).\nfriend(X,Y) :- tired(X), friendly(Y).\nclever(frank).\nexcited(dave).\nfriend(frank,eve).\nlikes(bob,ball).\nsibling(bob,frank).\nenemy(eve,alice).\nfriend(frank,george).\nhappy(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is strong.\nFor all Y, if there exists A such that object Y is heavy and person A dislikes object Y and person A is hungry, then object Y is light.\nFor all Z, if there exists W such that object Z is smooth and person W likes object Z and person W is brave, then object Z is small.\nFor all Y, if there exists A such that object Y is small and object A is red, then object Y is wet.\nFor all Z, if there exists U such that person Z is bored and person Z is a friend of person U and person U is curious, then person Z is weak.\nFor all X, if object X is hard, then object X is rough.\nFor all X, Y, if there exists V such that person Y is friendly and person X is busy and person X is a sibling of person V, then person X is a sibling of person Y.\nFor all X, if there exists A such that object X is wet and person A is brave, then object X is heavy.\nFor all Y, if object Y is old, then object Y is red.\nFor all X, if there exists C such that person X is curious and object C is light, then person X is brave.\nFor all Y, if there exists B such that object Y is clean and person B likes object Y and person B is hungry, then object Y is hard.\nFor all X, Y, if there exists A such that person Y is funny and object X is dirty and person Y is a parent of person A, then person Y owns object X.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is brave and person X is sad, then person X is funny.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is dirty and object X is clean, then object X is light.\nFor all X, if person X is hungry and person X is happy, then person X is sad.\nFor all X, Y, if person X is curious and object Y is new and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is soft, then object X is small.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is big and object X is big, then object X is new.\nFor all X, if object X is big, then object X is old.\nFor all X, if person X is happy, then person X is tired.\nFor all X, Y, if person X is tired and person Y is friendly, then person X is a friend of person Y.\n\nAnd the following facts:\nfrank is clever.\ndave is excited.\nfrank is a friend of eve.\nbob likes ball.\nbob is a sibling of frank.\neve is an enemy of alice.\nfrank is a friend of george.\neve is happy.\n\nQUESTION:\nIs carol is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1033,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(frank).",
    "c": "strong(X) :- clever(X).\nlight(Y) :- heavy(Y), dislikes(A,Y), hungry(A).\nsmall(Z) :- smooth(Z), likes(W,Z), brave(W).\nwet(Y) :- small(Y), red(A).\nweak(Z) :- bored(Z), friend(Z,U), curious(U).\nrough(X) :- hard(X).\nsibling(X,Y) :- friendly(Y), busy(X), sibling(X,V).\nheavy(X) :- wet(X), brave(A).\nred(Y) :- old(Y).\nbrave(X) :- curious(X), light(C).\nhard(Y) :- clean(Y), likes(B,Y), hungry(B).\nowns(Y,X) :- funny(Y), dirty(X), parent(Y,A).\nfunny(X) :- weak(X).\nfunny(X) :- brave(X), sad(X).\nexcited(X) :- friendly(X).\nlight(X) :- dirty(X), clean(X).\nsad(X) :- hungry(X), happy(X).\ndislikes(X,Y) :- curious(X), new(Y), likes(X,Y).\nsmall(X) :- soft(X).\ncurious(X) :- angry(X).\nrough(X) :- new(X).\nnew(X) :- big(X), big(X).\nold(X) :- big(X).\ntired(X) :- happy(X).\nfriend(X,Y) :- tired(X), friendly(Y).\nstrong(frank).\nexcited(dave).\nfriend(frank,eve).\nlikes(bob,ball).\nsibling(bob,frank).\nenemy(eve,alice).\nfriend(frank,george).\nhappy(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is strong.\nFor all Y, if there exists A such that object Y is heavy and person A dislikes object Y and person A is hungry, then object Y is light.\nFor all Z, if there exists W such that object Z is smooth and person W likes object Z and person W is brave, then object Z is small.\nFor all Y, if there exists A such that object Y is small and object A is red, then object Y is wet.\nFor all Z, if there exists U such that person Z is bored and person Z is a friend of person U and person U is curious, then person Z is weak.\nFor all X, if object X is hard, then object X is rough.\nFor all X, Y, if there exists V such that person Y is friendly and person X is busy and person X is a sibling of person V, then person X is a sibling of person Y.\nFor all X, if there exists A such that object X is wet and person A is brave, then object X is heavy.\nFor all Y, if object Y is old, then object Y is red.\nFor all X, if there exists C such that person X is curious and object C is light, then person X is brave.\nFor all Y, if there exists B such that object Y is clean and person B likes object Y and person B is hungry, then object Y is hard.\nFor all X, Y, if there exists A such that person Y is funny and object X is dirty and person Y is a parent of person A, then person Y owns object X.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is brave and person X is sad, then person X is funny.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is dirty and object X is clean, then object X is light.\nFor all X, if person X is hungry and person X is happy, then person X is sad.\nFor all X, Y, if person X is curious and object Y is new and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is soft, then object X is small.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is big and object X is big, then object X is new.\nFor all X, if object X is big, then object X is old.\nFor all X, if person X is happy, then person X is tired.\nFor all X, Y, if person X is tired and person Y is friendly, then person X is a friend of person Y.\n\nAnd the following facts:\nfrank is strong.\ndave is excited.\nfrank is a friend of eve.\nbob likes ball.\nbob is a sibling of frank.\neve is an enemy of alice.\nfrank is a friend of george.\neve is happy.\n\nQUESTION:\nCould frank is clever explain frank is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1034,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(carol).",
    "c": "strong(X) :- clever(X).\nlight(Y) :- heavy(Y), dislikes(A,Y), hungry(A).\nsmall(Z) :- smooth(Z), likes(W,Z), brave(W).\nwet(Y) :- small(Y), red(A).\nweak(Z) :- bored(Z), friend(Z,U), curious(U).\nrough(X) :- hard(X).\nsibling(X,Y) :- friendly(Y), busy(X), sibling(X,V).\nheavy(X) :- wet(X), brave(A).\nred(Y) :- old(Y).\nbrave(X) :- curious(X), light(C).\nhard(Y) :- clean(Y), likes(B,Y), hungry(B).\nowns(Y,X) :- funny(Y), dirty(X), parent(Y,A).\nfunny(X) :- weak(X).\nfunny(X) :- brave(X), sad(X).\nexcited(X) :- friendly(X).\nlight(X) :- dirty(X), clean(X).\nsad(X) :- hungry(X), happy(X).\ndislikes(X,Y) :- curious(X), new(Y), likes(X,Y).\nsmall(X) :- soft(X).\ncurious(X) :- angry(X).\nrough(X) :- new(X).\nnew(X) :- big(X), big(X).\nold(X) :- big(X).\ntired(X) :- happy(X).\nfriend(X,Y) :- tired(X), friendly(Y).\nstrong(frank).\nexcited(dave).\nfriend(frank,eve).\nlikes(bob,ball).\nsibling(bob,frank).\nenemy(eve,alice).\nfriend(frank,george).\nhappy(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is strong.\nFor all Y, if there exists A such that object Y is heavy and person A dislikes object Y and person A is hungry, then object Y is light.\nFor all Z, if there exists W such that object Z is smooth and person W likes object Z and person W is brave, then object Z is small.\nFor all Y, if there exists A such that object Y is small and object A is red, then object Y is wet.\nFor all Z, if there exists U such that person Z is bored and person Z is a friend of person U and person U is curious, then person Z is weak.\nFor all X, if object X is hard, then object X is rough.\nFor all X, Y, if there exists V such that person Y is friendly and person X is busy and person X is a sibling of person V, then person X is a sibling of person Y.\nFor all X, if there exists A such that object X is wet and person A is brave, then object X is heavy.\nFor all Y, if object Y is old, then object Y is red.\nFor all X, if there exists C such that person X is curious and object C is light, then person X is brave.\nFor all Y, if there exists B such that object Y is clean and person B likes object Y and person B is hungry, then object Y is hard.\nFor all X, Y, if there exists A such that person Y is funny and object X is dirty and person Y is a parent of person A, then person Y owns object X.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is brave and person X is sad, then person X is funny.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is dirty and object X is clean, then object X is light.\nFor all X, if person X is hungry and person X is happy, then person X is sad.\nFor all X, Y, if person X is curious and object Y is new and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is soft, then object X is small.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if object X is new, then object X is rough.\nFor all X, if object X is big and object X is big, then object X is new.\nFor all X, if object X is big, then object X is old.\nFor all X, if person X is happy, then person X is tired.\nFor all X, Y, if person X is tired and person Y is friendly, then person X is a friend of person Y.\n\nAnd the following facts:\nfrank is strong.\ndave is excited.\nfrank is a friend of eve.\nbob likes ball.\nbob is a sibling of frank.\neve is an enemy of alice.\nfrank is a friend of george.\neve is happy.\n\nQUESTION:\nCould carol is tall explain frank is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1035,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(bob).",
    "c": "strong(X) :- tired(X).\nclean(Z) :- smooth(Z), dislikes(A,Z), curious(A).\nhappy(Y) :- friendly(Y), owns(Y,V), dirty(V).\nred(X) :- red(X), owns(V,X), sad(V).\nred(Y) :- dirty(Y), happy(C).\nsmooth(Y) :- red(Y), likes(B,Y), busy(B).\nnew(Y) :- wet(Y), likes(A,Y), clever(A).\nheavy(Z) :- new(Z).\nsad(Y) :- curious(Y).\nold(Y) :- red(Y).\nfunny(Z) :- bored(Z), clean(C).\nclever(Z) :- clever(Z), sibling(Z,A), weak(A).\nnew(X) :- rough(X), happy(E).\ncalm(X) :- friendly(X), excited(X).\nhungry(X) :- busy(X), clever(X).\ncurious(X) :- weak(X), busy(X).\nclever(X) :- busy(X).\nowns(X,Y) :- brave(X), wet(Y), likes(X,Y).\ncalm(X) :- friendly(X), hungry(X).\ndirty(X) :- big(X).\nwet(X) :- heavy(X), light(X).\ntall(X) :- weak(X).\ndirty(X) :- big(X).\nheavy(X) :- small(X), new(X).\nlikes(X,Y) :- sad(X), soft(Y).\ntired(bob).\nsibling(george,dave).\nsmall(ball).\nangry(alice).\nhungry(frank).\nparent(george,bob).\nfriend(frank,george).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all Z, if there exists A such that object Z is smooth and person A dislikes object Z and person A is curious, then object Z is clean.\nFor all Y, if there exists V such that person Y is friendly and person Y owns object V and object V is dirty, then person Y is happy.\nFor all X, if there exists V such that object X is red and person V owns object X and person V is sad, then object X is red.\nFor all Y, if there exists C such that object Y is dirty and person C is happy, then object Y is red.\nFor all Y, if there exists B such that object Y is red and person B likes object Y and person B is busy, then object Y is smooth.\nFor all Y, if there exists A such that object Y is wet and person A likes object Y and person A is clever, then object Y is new.\nFor all Z, if object Z is new, then object Z is heavy.\nFor all Y, if person Y is curious, then person Y is sad.\nFor all Y, if object Y is red, then object Y is old.\nFor all Z, if there exists C such that person Z is bored and object C is clean, then person Z is funny.\nFor all Z, if there exists A such that person Z is clever and person Z is a sibling of person A and person A is weak, then person Z is clever.\nFor all X, if there exists E such that object X is rough and person E is happy, then object X is new.\nFor all X, if person X is friendly and person X is excited, then person X is calm.\nFor all X, if person X is busy and person X is clever, then person X is hungry.\nFor all X, if person X is weak and person X is busy, then person X is curious.\nFor all X, if person X is busy, then person X is clever.\nFor all X, Y, if person X is brave and object Y is wet and person X likes object Y, then person X owns object Y.\nFor all X, if person X is friendly and person X is hungry, then person X is calm.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is heavy and object X is light, then object X is wet.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is small and object X is new, then object X is heavy.\nFor all X, Y, if person X is sad and object Y is soft, then person X likes object Y.\n\nAnd the following facts:\nbob is tired.\ngeorge is a sibling of dave.\nball is small.\nalice is angry.\nfrank is hungry.\ngeorge is a parent of bob.\nfrank is a friend of george.\neve is tall.\n\nQUESTION:\nIs bob is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1036,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(phone).",
    "c": "strong(X) :- tired(X).\nclean(Z) :- smooth(Z), dislikes(A,Z), curious(A).\nhappy(Y) :- friendly(Y), owns(Y,V), dirty(V).\nred(X) :- red(X), owns(V,X), sad(V).\nred(Y) :- dirty(Y), happy(C).\nsmooth(Y) :- red(Y), likes(B,Y), busy(B).\nnew(Y) :- wet(Y), likes(A,Y), clever(A).\nheavy(Z) :- new(Z).\nsad(Y) :- curious(Y).\nold(Y) :- red(Y).\nfunny(Z) :- bored(Z), clean(C).\nclever(Z) :- clever(Z), sibling(Z,A), weak(A).\nnew(X) :- rough(X), happy(E).\ncalm(X) :- friendly(X), excited(X).\nhungry(X) :- busy(X), clever(X).\ncurious(X) :- weak(X), busy(X).\nclever(X) :- busy(X).\nowns(X,Y) :- brave(X), wet(Y), likes(X,Y).\ncalm(X) :- friendly(X), hungry(X).\ndirty(X) :- big(X).\nwet(X) :- heavy(X), light(X).\ntall(X) :- weak(X).\ndirty(X) :- big(X).\nheavy(X) :- small(X), new(X).\nlikes(X,Y) :- sad(X), soft(Y).\ntired(bob).\nsibling(george,dave).\nsmall(ball).\nangry(alice).\nhungry(frank).\nparent(george,bob).\nfriend(frank,george).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all Z, if there exists A such that object Z is smooth and person A dislikes object Z and person A is curious, then object Z is clean.\nFor all Y, if there exists V such that person Y is friendly and person Y owns object V and object V is dirty, then person Y is happy.\nFor all X, if there exists V such that object X is red and person V owns object X and person V is sad, then object X is red.\nFor all Y, if there exists C such that object Y is dirty and person C is happy, then object Y is red.\nFor all Y, if there exists B such that object Y is red and person B likes object Y and person B is busy, then object Y is smooth.\nFor all Y, if there exists A such that object Y is wet and person A likes object Y and person A is clever, then object Y is new.\nFor all Z, if object Z is new, then object Z is heavy.\nFor all Y, if person Y is curious, then person Y is sad.\nFor all Y, if object Y is red, then object Y is old.\nFor all Z, if there exists C such that person Z is bored and object C is clean, then person Z is funny.\nFor all Z, if there exists A such that person Z is clever and person Z is a sibling of person A and person A is weak, then person Z is clever.\nFor all X, if there exists E such that object X is rough and person E is happy, then object X is new.\nFor all X, if person X is friendly and person X is excited, then person X is calm.\nFor all X, if person X is busy and person X is clever, then person X is hungry.\nFor all X, if person X is weak and person X is busy, then person X is curious.\nFor all X, if person X is busy, then person X is clever.\nFor all X, Y, if person X is brave and object Y is wet and person X likes object Y, then person X owns object Y.\nFor all X, if person X is friendly and person X is hungry, then person X is calm.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is heavy and object X is light, then object X is wet.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is small and object X is new, then object X is heavy.\nFor all X, Y, if person X is sad and object Y is soft, then person X likes object Y.\n\nAnd the following facts:\nbob is tired.\ngeorge is a sibling of dave.\nball is small.\nalice is angry.\nfrank is hungry.\ngeorge is a parent of bob.\nfrank is a friend of george.\neve is tall.\n\nQUESTION:\nIs phone is smooth true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1037,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(bob).",
    "c": "strong(X) :- tired(X).\nclean(Z) :- smooth(Z), dislikes(A,Z), curious(A).\nhappy(Y) :- friendly(Y), owns(Y,V), dirty(V).\nred(X) :- red(X), owns(V,X), sad(V).\nred(Y) :- dirty(Y), happy(C).\nsmooth(Y) :- red(Y), likes(B,Y), busy(B).\nnew(Y) :- wet(Y), likes(A,Y), clever(A).\nheavy(Z) :- new(Z).\nsad(Y) :- curious(Y).\nold(Y) :- red(Y).\nfunny(Z) :- bored(Z), clean(C).\nclever(Z) :- clever(Z), sibling(Z,A), weak(A).\nnew(X) :- rough(X), happy(E).\ncalm(X) :- friendly(X), excited(X).\nhungry(X) :- busy(X), clever(X).\ncurious(X) :- weak(X), busy(X).\nclever(X) :- busy(X).\nowns(X,Y) :- brave(X), wet(Y), likes(X,Y).\ncalm(X) :- friendly(X), hungry(X).\ndirty(X) :- big(X).\nwet(X) :- heavy(X), light(X).\ntall(X) :- weak(X).\ndirty(X) :- big(X).\nheavy(X) :- small(X), new(X).\nlikes(X,Y) :- sad(X), soft(Y).\nstrong(bob).\nsibling(george,dave).\nsmall(ball).\nangry(alice).\nhungry(frank).\nparent(george,bob).\nfriend(frank,george).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all Z, if there exists A such that object Z is smooth and person A dislikes object Z and person A is curious, then object Z is clean.\nFor all Y, if there exists V such that person Y is friendly and person Y owns object V and object V is dirty, then person Y is happy.\nFor all X, if there exists V such that object X is red and person V owns object X and person V is sad, then object X is red.\nFor all Y, if there exists C such that object Y is dirty and person C is happy, then object Y is red.\nFor all Y, if there exists B such that object Y is red and person B likes object Y and person B is busy, then object Y is smooth.\nFor all Y, if there exists A such that object Y is wet and person A likes object Y and person A is clever, then object Y is new.\nFor all Z, if object Z is new, then object Z is heavy.\nFor all Y, if person Y is curious, then person Y is sad.\nFor all Y, if object Y is red, then object Y is old.\nFor all Z, if there exists C such that person Z is bored and object C is clean, then person Z is funny.\nFor all Z, if there exists A such that person Z is clever and person Z is a sibling of person A and person A is weak, then person Z is clever.\nFor all X, if there exists E such that object X is rough and person E is happy, then object X is new.\nFor all X, if person X is friendly and person X is excited, then person X is calm.\nFor all X, if person X is busy and person X is clever, then person X is hungry.\nFor all X, if person X is weak and person X is busy, then person X is curious.\nFor all X, if person X is busy, then person X is clever.\nFor all X, Y, if person X is brave and object Y is wet and person X likes object Y, then person X owns object Y.\nFor all X, if person X is friendly and person X is hungry, then person X is calm.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is heavy and object X is light, then object X is wet.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is small and object X is new, then object X is heavy.\nFor all X, Y, if person X is sad and object Y is soft, then person X likes object Y.\n\nAnd the following facts:\nbob is strong.\ngeorge is a sibling of dave.\nball is small.\nalice is angry.\nfrank is hungry.\ngeorge is a parent of bob.\nfrank is a friend of george.\neve is tall.\n\nQUESTION:\nCould bob is tired explain bob is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1038,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(carol).",
    "c": "strong(X) :- tired(X).\nclean(Z) :- smooth(Z), dislikes(A,Z), curious(A).\nhappy(Y) :- friendly(Y), owns(Y,V), dirty(V).\nred(X) :- red(X), owns(V,X), sad(V).\nred(Y) :- dirty(Y), happy(C).\nsmooth(Y) :- red(Y), likes(B,Y), busy(B).\nnew(Y) :- wet(Y), likes(A,Y), clever(A).\nheavy(Z) :- new(Z).\nsad(Y) :- curious(Y).\nold(Y) :- red(Y).\nfunny(Z) :- bored(Z), clean(C).\nclever(Z) :- clever(Z), sibling(Z,A), weak(A).\nnew(X) :- rough(X), happy(E).\ncalm(X) :- friendly(X), excited(X).\nhungry(X) :- busy(X), clever(X).\ncurious(X) :- weak(X), busy(X).\nclever(X) :- busy(X).\nowns(X,Y) :- brave(X), wet(Y), likes(X,Y).\ncalm(X) :- friendly(X), hungry(X).\ndirty(X) :- big(X).\nwet(X) :- heavy(X), light(X).\ntall(X) :- weak(X).\ndirty(X) :- big(X).\nheavy(X) :- small(X), new(X).\nlikes(X,Y) :- sad(X), soft(Y).\nstrong(bob).\nsibling(george,dave).\nsmall(ball).\nangry(alice).\nhungry(frank).\nparent(george,bob).\nfriend(frank,george).\ntall(eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all Z, if there exists A such that object Z is smooth and person A dislikes object Z and person A is curious, then object Z is clean.\nFor all Y, if there exists V such that person Y is friendly and person Y owns object V and object V is dirty, then person Y is happy.\nFor all X, if there exists V such that object X is red and person V owns object X and person V is sad, then object X is red.\nFor all Y, if there exists C such that object Y is dirty and person C is happy, then object Y is red.\nFor all Y, if there exists B such that object Y is red and person B likes object Y and person B is busy, then object Y is smooth.\nFor all Y, if there exists A such that object Y is wet and person A likes object Y and person A is clever, then object Y is new.\nFor all Z, if object Z is new, then object Z is heavy.\nFor all Y, if person Y is curious, then person Y is sad.\nFor all Y, if object Y is red, then object Y is old.\nFor all Z, if there exists C such that person Z is bored and object C is clean, then person Z is funny.\nFor all Z, if there exists A such that person Z is clever and person Z is a sibling of person A and person A is weak, then person Z is clever.\nFor all X, if there exists E such that object X is rough and person E is happy, then object X is new.\nFor all X, if person X is friendly and person X is excited, then person X is calm.\nFor all X, if person X is busy and person X is clever, then person X is hungry.\nFor all X, if person X is weak and person X is busy, then person X is curious.\nFor all X, if person X is busy, then person X is clever.\nFor all X, Y, if person X is brave and object Y is wet and person X likes object Y, then person X owns object Y.\nFor all X, if person X is friendly and person X is hungry, then person X is calm.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is heavy and object X is light, then object X is wet.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is small and object X is new, then object X is heavy.\nFor all X, Y, if person X is sad and object Y is soft, then person X likes object Y.\n\nAnd the following facts:\nbob is strong.\ngeorge is a sibling of dave.\nball is small.\nalice is angry.\nfrank is hungry.\ngeorge is a parent of bob.\nfrank is a friend of george.\neve is tall.\n\nQUESTION:\nCould carol is angry explain bob is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1039,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(eve).",
    "c": "clever(X) :- sad(X).\nfunny(X) :- clever(X).\nbored(X) :- funny(X).\nfunny(X) :- bored(X).\nbusy(X) :- funny(X).\nnew(X) :- new(X), owns(V,X), strong(V).\nold(Z) :- soft(Z), likes(V,Z), tall(V).\nfriendly(Z) :- excited(Z), enemy(Z,U), hungry(U).\nrough(X) :- wet(X), likes(V,X), happy(V).\nangry(Z) :- tired(Z), owns(Z,A), new(A).\nold(X) :- hard(X).\nclean(Y) :- dirty(Y), dislikes(A,Y), hungry(A).\nowns(Y,Z) :- friendly(Y), hard(Z), dislikes(V,Z).\nhungry(X) :- hungry(X), friend(X,V), hungry(V).\nsmall(X) :- heavy(X), hard(X).\nenemy(X,Y) :- brave(X), strong(Y), parent(X,Y).\nfriendly(X) :- tired(X).\ndirty(X) :- light(X), small(X).\nheavy(X) :- dirty(X), rough(X).\nwet(X) :- small(X), dirty(X).\ntall(X) :- friendly(X), angry(X).\nnew(X) :- smooth(X), heavy(X).\nbig(X) :- new(X).\ncalm(X) :- hungry(X).\nred(X) :- light(X).\nsad(eve).\ndislikes(carol,phone).\nsibling(alice,frank).\nsibling(eve,dave).\nenemy(eve,bob).\nfriend(george,carol).\nrough(apple).\nangry(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if there exists V such that object X is new and person V owns object X and person V is strong, then object X is new.\nFor all Z, if there exists V such that object Z is soft and person V likes object Z and person V is tall, then object Z is old.\nFor all Z, if there exists U such that person Z is excited and person Z is an enemy of person U and person U is hungry, then person Z is friendly.\nFor all X, if there exists V such that object X is wet and person V likes object X and person V is happy, then object X is rough.\nFor all Z, if there exists A such that person Z is tired and person Z owns object A and object A is new, then person Z is angry.\nFor all X, if object X is hard, then object X is old.\nFor all Y, if there exists A such that object Y is dirty and person A dislikes object Y and person A is hungry, then object Y is clean.\nFor all Y, Z, if there exists V such that person Y is friendly and object Z is hard and person V dislikes object Z, then person Y owns object Z.\nFor all X, if there exists V such that person X is hungry and person X is a friend of person V and person V is hungry, then person X is hungry.\nFor all X, if object X is heavy and object X is hard, then object X is small.\nFor all X, Y, if person X is brave and person Y is strong and person X is a parent of person Y, then person X is an enemy of person Y.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if object X is light and object X is small, then object X is dirty.\nFor all X, if object X is dirty and object X is rough, then object X is heavy.\nFor all X, if object X is small and object X is dirty, then object X is wet.\nFor all X, if person X is friendly and person X is angry, then person X is tall.\nFor all X, if object X is smooth and object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if object X is light, then object X is red.\n\nAnd the following facts:\neve is sad.\ncarol dislikes phone.\nalice is a sibling of frank.\neve is a sibling of dave.\neve is an enemy of bob.\ngeorge is a friend of carol.\napple is rough.\ndave is angry.\n\nQUESTION:\nIs eve is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1040,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "clever(X) :- sad(X).\nfunny(X) :- clever(X).\nbored(X) :- funny(X).\nfunny(X) :- bored(X).\nbusy(X) :- funny(X).\nnew(X) :- new(X), owns(V,X), strong(V).\nold(Z) :- soft(Z), likes(V,Z), tall(V).\nfriendly(Z) :- excited(Z), enemy(Z,U), hungry(U).\nrough(X) :- wet(X), likes(V,X), happy(V).\nangry(Z) :- tired(Z), owns(Z,A), new(A).\nold(X) :- hard(X).\nclean(Y) :- dirty(Y), dislikes(A,Y), hungry(A).\nowns(Y,Z) :- friendly(Y), hard(Z), dislikes(V,Z).\nhungry(X) :- hungry(X), friend(X,V), hungry(V).\nsmall(X) :- heavy(X), hard(X).\nenemy(X,Y) :- brave(X), strong(Y), parent(X,Y).\nfriendly(X) :- tired(X).\ndirty(X) :- light(X), small(X).\nheavy(X) :- dirty(X), rough(X).\nwet(X) :- small(X), dirty(X).\ntall(X) :- friendly(X), angry(X).\nnew(X) :- smooth(X), heavy(X).\nbig(X) :- new(X).\ncalm(X) :- hungry(X).\nred(X) :- light(X).\nsad(eve).\ndislikes(carol,phone).\nsibling(alice,frank).\nsibling(eve,dave).\nenemy(eve,bob).\nfriend(george,carol).\nrough(apple).\nangry(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if there exists V such that object X is new and person V owns object X and person V is strong, then object X is new.\nFor all Z, if there exists V such that object Z is soft and person V likes object Z and person V is tall, then object Z is old.\nFor all Z, if there exists U such that person Z is excited and person Z is an enemy of person U and person U is hungry, then person Z is friendly.\nFor all X, if there exists V such that object X is wet and person V likes object X and person V is happy, then object X is rough.\nFor all Z, if there exists A such that person Z is tired and person Z owns object A and object A is new, then person Z is angry.\nFor all X, if object X is hard, then object X is old.\nFor all Y, if there exists A such that object Y is dirty and person A dislikes object Y and person A is hungry, then object Y is clean.\nFor all Y, Z, if there exists V such that person Y is friendly and object Z is hard and person V dislikes object Z, then person Y owns object Z.\nFor all X, if there exists V such that person X is hungry and person X is a friend of person V and person V is hungry, then person X is hungry.\nFor all X, if object X is heavy and object X is hard, then object X is small.\nFor all X, Y, if person X is brave and person Y is strong and person X is a parent of person Y, then person X is an enemy of person Y.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if object X is light and object X is small, then object X is dirty.\nFor all X, if object X is dirty and object X is rough, then object X is heavy.\nFor all X, if object X is small and object X is dirty, then object X is wet.\nFor all X, if person X is friendly and person X is angry, then person X is tall.\nFor all X, if object X is smooth and object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if object X is light, then object X is red.\n\nAnd the following facts:\neve is sad.\ncarol dislikes phone.\nalice is a sibling of frank.\neve is a sibling of dave.\neve is an enemy of bob.\ngeorge is a friend of carol.\napple is rough.\ndave is angry.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1041,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(eve).",
    "c": "clever(X) :- sad(X).\nfunny(X) :- clever(X).\nbored(X) :- funny(X).\nfunny(X) :- bored(X).\nbusy(X) :- funny(X).\nnew(X) :- new(X), owns(V,X), strong(V).\nold(Z) :- soft(Z), likes(V,Z), tall(V).\nfriendly(Z) :- excited(Z), enemy(Z,U), hungry(U).\nrough(X) :- wet(X), likes(V,X), happy(V).\nangry(Z) :- tired(Z), owns(Z,A), new(A).\nold(X) :- hard(X).\nclean(Y) :- dirty(Y), dislikes(A,Y), hungry(A).\nowns(Y,Z) :- friendly(Y), hard(Z), dislikes(V,Z).\nhungry(X) :- hungry(X), friend(X,V), hungry(V).\nsmall(X) :- heavy(X), hard(X).\nenemy(X,Y) :- brave(X), strong(Y), parent(X,Y).\nfriendly(X) :- tired(X).\ndirty(X) :- light(X), small(X).\nheavy(X) :- dirty(X), rough(X).\nwet(X) :- small(X), dirty(X).\ntall(X) :- friendly(X), angry(X).\nnew(X) :- smooth(X), heavy(X).\nbig(X) :- new(X).\ncalm(X) :- hungry(X).\nred(X) :- light(X).\nbusy(eve).\ndislikes(carol,phone).\nsibling(alice,frank).\nsibling(eve,dave).\nenemy(eve,bob).\nfriend(george,carol).\nrough(apple).\nangry(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if there exists V such that object X is new and person V owns object X and person V is strong, then object X is new.\nFor all Z, if there exists V such that object Z is soft and person V likes object Z and person V is tall, then object Z is old.\nFor all Z, if there exists U such that person Z is excited and person Z is an enemy of person U and person U is hungry, then person Z is friendly.\nFor all X, if there exists V such that object X is wet and person V likes object X and person V is happy, then object X is rough.\nFor all Z, if there exists A such that person Z is tired and person Z owns object A and object A is new, then person Z is angry.\nFor all X, if object X is hard, then object X is old.\nFor all Y, if there exists A such that object Y is dirty and person A dislikes object Y and person A is hungry, then object Y is clean.\nFor all Y, Z, if there exists V such that person Y is friendly and object Z is hard and person V dislikes object Z, then person Y owns object Z.\nFor all X, if there exists V such that person X is hungry and person X is a friend of person V and person V is hungry, then person X is hungry.\nFor all X, if object X is heavy and object X is hard, then object X is small.\nFor all X, Y, if person X is brave and person Y is strong and person X is a parent of person Y, then person X is an enemy of person Y.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if object X is light and object X is small, then object X is dirty.\nFor all X, if object X is dirty and object X is rough, then object X is heavy.\nFor all X, if object X is small and object X is dirty, then object X is wet.\nFor all X, if person X is friendly and person X is angry, then person X is tall.\nFor all X, if object X is smooth and object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if object X is light, then object X is red.\n\nAnd the following facts:\neve is busy.\ncarol dislikes phone.\nalice is a sibling of frank.\neve is a sibling of dave.\neve is an enemy of bob.\ngeorge is a friend of carol.\napple is rough.\ndave is angry.\n\nQUESTION:\nCould eve is sad explain eve is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1042,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(book).",
    "c": "clever(X) :- sad(X).\nfunny(X) :- clever(X).\nbored(X) :- funny(X).\nfunny(X) :- bored(X).\nbusy(X) :- funny(X).\nnew(X) :- new(X), owns(V,X), strong(V).\nold(Z) :- soft(Z), likes(V,Z), tall(V).\nfriendly(Z) :- excited(Z), enemy(Z,U), hungry(U).\nrough(X) :- wet(X), likes(V,X), happy(V).\nangry(Z) :- tired(Z), owns(Z,A), new(A).\nold(X) :- hard(X).\nclean(Y) :- dirty(Y), dislikes(A,Y), hungry(A).\nowns(Y,Z) :- friendly(Y), hard(Z), dislikes(V,Z).\nhungry(X) :- hungry(X), friend(X,V), hungry(V).\nsmall(X) :- heavy(X), hard(X).\nenemy(X,Y) :- brave(X), strong(Y), parent(X,Y).\nfriendly(X) :- tired(X).\ndirty(X) :- light(X), small(X).\nheavy(X) :- dirty(X), rough(X).\nwet(X) :- small(X), dirty(X).\ntall(X) :- friendly(X), angry(X).\nnew(X) :- smooth(X), heavy(X).\nbig(X) :- new(X).\ncalm(X) :- hungry(X).\nred(X) :- light(X).\nbusy(eve).\ndislikes(carol,phone).\nsibling(alice,frank).\nsibling(eve,dave).\nenemy(eve,bob).\nfriend(george,carol).\nrough(apple).\nangry(dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if there exists V such that object X is new and person V owns object X and person V is strong, then object X is new.\nFor all Z, if there exists V such that object Z is soft and person V likes object Z and person V is tall, then object Z is old.\nFor all Z, if there exists U such that person Z is excited and person Z is an enemy of person U and person U is hungry, then person Z is friendly.\nFor all X, if there exists V such that object X is wet and person V likes object X and person V is happy, then object X is rough.\nFor all Z, if there exists A such that person Z is tired and person Z owns object A and object A is new, then person Z is angry.\nFor all X, if object X is hard, then object X is old.\nFor all Y, if there exists A such that object Y is dirty and person A dislikes object Y and person A is hungry, then object Y is clean.\nFor all Y, Z, if there exists V such that person Y is friendly and object Z is hard and person V dislikes object Z, then person Y owns object Z.\nFor all X, if there exists V such that person X is hungry and person X is a friend of person V and person V is hungry, then person X is hungry.\nFor all X, if object X is heavy and object X is hard, then object X is small.\nFor all X, Y, if person X is brave and person Y is strong and person X is a parent of person Y, then person X is an enemy of person Y.\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if object X is light and object X is small, then object X is dirty.\nFor all X, if object X is dirty and object X is rough, then object X is heavy.\nFor all X, if object X is small and object X is dirty, then object X is wet.\nFor all X, if person X is friendly and person X is angry, then person X is tall.\nFor all X, if object X is smooth and object X is heavy, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if object X is light, then object X is red.\n\nAnd the following facts:\neve is busy.\ncarol dislikes phone.\nalice is a sibling of frank.\neve is a sibling of dave.\neve is an enemy of bob.\ngeorge is a friend of carol.\napple is rough.\ndave is angry.\n\nQUESTION:\nCould book is clean explain eve is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1043,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "old(X) :- wet(X).\ndirty(X) :- old(X).\nnew(X) :- dirty(X).\nsoft(X) :- new(X).\nheavy(X) :- soft(X).\nbrave(X) :- calm(X).\nlight(X) :- small(X), owns(V,X), brave(V).\ncurious(Y) :- tired(Y), friend(Y,A), bored(A).\nparent(Z,Y) :- friendly(Y), angry(Z), friend(Z,V).\nfriendly(Y) :- hungry(Y).\nhard(Y) :- light(Y), owns(B,Y), bored(B).\nsmall(Y) :- rough(Y), red(E).\nsad(Z) :- angry(Z), dislikes(Z,W), red(W).\nhard(Y) :- rough(Y), dislikes(B,Y), calm(B).\nenemy(X,Z) :- angry(Z), sad(X), sibling(Z,A).\nhappy(X) :- clever(X).\nrough(X) :- red(X).\nrough(X) :- small(X).\ncurious(X) :- bored(X), strong(X).\nclever(X) :- tall(X).\nsmall(X) :- red(X).\nbored(X) :- tired(X), angry(X).\ntall(X) :- strong(X), brave(X).\ncurious(X) :- friendly(X), tall(X).\nsmooth(X) :- hard(X).\nwet(ball).\nfriendly(dave).\nlikes(eve,car).\nclever(george).\nbig(pencil).\nparent(bob,alice).\nbrave(bob).\nenemy(bob,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if there exists V such that object X is small and person V owns object X and person V is brave, then object X is light.\nFor all Y, if there exists A such that person Y is tired and person Y is a friend of person A and person A is bored, then person Y is curious.\nFor all Y, Z, if there exists V such that person Y is friendly and person Z is angry and person Z is a friend of person V, then person Z is a parent of person Y.\nFor all Y, if person Y is hungry, then person Y is friendly.\nFor all Y, if there exists B such that object Y is light and person B owns object Y and person B is bored, then object Y is hard.\nFor all Y, if there exists E such that object Y is rough and object E is red, then object Y is small.\nFor all Z, if there exists W such that person Z is angry and person Z dislikes object W and object W is red, then person Z is sad.\nFor all Y, if there exists B such that object Y is rough and person B dislikes object Y and person B is calm, then object Y is hard.\nFor all X, Z, if there exists A such that person Z is angry and person X is sad and person Z is a sibling of person A, then person X is an enemy of person Z.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is small, then object X is rough.\nFor all X, if person X is bored and person X is strong, then person X is curious.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is tired and person X is angry, then person X is bored.\nFor all X, if person X is strong and person X is brave, then person X is tall.\nFor all X, if person X is friendly and person X is tall, then person X is curious.\nFor all X, if object X is hard, then object X is smooth.\n\nAnd the following facts:\nball is wet.\ndave is friendly.\neve likes car.\ngeorge is clever.\npencil is big.\nbob is a parent of alice.\nbob is brave.\nbob is an enemy of carol.\n\nQUESTION:\nIs ball is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1044,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(book).",
    "c": "old(X) :- wet(X).\ndirty(X) :- old(X).\nnew(X) :- dirty(X).\nsoft(X) :- new(X).\nheavy(X) :- soft(X).\nbrave(X) :- calm(X).\nlight(X) :- small(X), owns(V,X), brave(V).\ncurious(Y) :- tired(Y), friend(Y,A), bored(A).\nparent(Z,Y) :- friendly(Y), angry(Z), friend(Z,V).\nfriendly(Y) :- hungry(Y).\nhard(Y) :- light(Y), owns(B,Y), bored(B).\nsmall(Y) :- rough(Y), red(E).\nsad(Z) :- angry(Z), dislikes(Z,W), red(W).\nhard(Y) :- rough(Y), dislikes(B,Y), calm(B).\nenemy(X,Z) :- angry(Z), sad(X), sibling(Z,A).\nhappy(X) :- clever(X).\nrough(X) :- red(X).\nrough(X) :- small(X).\ncurious(X) :- bored(X), strong(X).\nclever(X) :- tall(X).\nsmall(X) :- red(X).\nbored(X) :- tired(X), angry(X).\ntall(X) :- strong(X), brave(X).\ncurious(X) :- friendly(X), tall(X).\nsmooth(X) :- hard(X).\nwet(ball).\nfriendly(dave).\nlikes(eve,car).\nclever(george).\nbig(pencil).\nparent(bob,alice).\nbrave(bob).\nenemy(bob,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if there exists V such that object X is small and person V owns object X and person V is brave, then object X is light.\nFor all Y, if there exists A such that person Y is tired and person Y is a friend of person A and person A is bored, then person Y is curious.\nFor all Y, Z, if there exists V such that person Y is friendly and person Z is angry and person Z is a friend of person V, then person Z is a parent of person Y.\nFor all Y, if person Y is hungry, then person Y is friendly.\nFor all Y, if there exists B such that object Y is light and person B owns object Y and person B is bored, then object Y is hard.\nFor all Y, if there exists E such that object Y is rough and object E is red, then object Y is small.\nFor all Z, if there exists W such that person Z is angry and person Z dislikes object W and object W is red, then person Z is sad.\nFor all Y, if there exists B such that object Y is rough and person B dislikes object Y and person B is calm, then object Y is hard.\nFor all X, Z, if there exists A such that person Z is angry and person X is sad and person Z is a sibling of person A, then person X is an enemy of person Z.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is small, then object X is rough.\nFor all X, if person X is bored and person X is strong, then person X is curious.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is tired and person X is angry, then person X is bored.\nFor all X, if person X is strong and person X is brave, then person X is tall.\nFor all X, if person X is friendly and person X is tall, then person X is curious.\nFor all X, if object X is hard, then object X is smooth.\n\nAnd the following facts:\nball is wet.\ndave is friendly.\neve likes car.\ngeorge is clever.\npencil is big.\nbob is a parent of alice.\nbob is brave.\nbob is an enemy of carol.\n\nQUESTION:\nIs book is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1045,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(ball).",
    "c": "old(X) :- wet(X).\ndirty(X) :- old(X).\nnew(X) :- dirty(X).\nsoft(X) :- new(X).\nheavy(X) :- soft(X).\nbrave(X) :- calm(X).\nlight(X) :- small(X), owns(V,X), brave(V).\ncurious(Y) :- tired(Y), friend(Y,A), bored(A).\nparent(Z,Y) :- friendly(Y), angry(Z), friend(Z,V).\nfriendly(Y) :- hungry(Y).\nhard(Y) :- light(Y), owns(B,Y), bored(B).\nsmall(Y) :- rough(Y), red(E).\nsad(Z) :- angry(Z), dislikes(Z,W), red(W).\nhard(Y) :- rough(Y), dislikes(B,Y), calm(B).\nenemy(X,Z) :- angry(Z), sad(X), sibling(Z,A).\nhappy(X) :- clever(X).\nrough(X) :- red(X).\nrough(X) :- small(X).\ncurious(X) :- bored(X), strong(X).\nclever(X) :- tall(X).\nsmall(X) :- red(X).\nbored(X) :- tired(X), angry(X).\ntall(X) :- strong(X), brave(X).\ncurious(X) :- friendly(X), tall(X).\nsmooth(X) :- hard(X).\nheavy(ball).\nfriendly(dave).\nlikes(eve,car).\nclever(george).\nbig(pencil).\nparent(bob,alice).\nbrave(bob).\nenemy(bob,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if there exists V such that object X is small and person V owns object X and person V is brave, then object X is light.\nFor all Y, if there exists A such that person Y is tired and person Y is a friend of person A and person A is bored, then person Y is curious.\nFor all Y, Z, if there exists V such that person Y is friendly and person Z is angry and person Z is a friend of person V, then person Z is a parent of person Y.\nFor all Y, if person Y is hungry, then person Y is friendly.\nFor all Y, if there exists B such that object Y is light and person B owns object Y and person B is bored, then object Y is hard.\nFor all Y, if there exists E such that object Y is rough and object E is red, then object Y is small.\nFor all Z, if there exists W such that person Z is angry and person Z dislikes object W and object W is red, then person Z is sad.\nFor all Y, if there exists B such that object Y is rough and person B dislikes object Y and person B is calm, then object Y is hard.\nFor all X, Z, if there exists A such that person Z is angry and person X is sad and person Z is a sibling of person A, then person X is an enemy of person Z.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is small, then object X is rough.\nFor all X, if person X is bored and person X is strong, then person X is curious.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is tired and person X is angry, then person X is bored.\nFor all X, if person X is strong and person X is brave, then person X is tall.\nFor all X, if person X is friendly and person X is tall, then person X is curious.\nFor all X, if object X is hard, then object X is smooth.\n\nAnd the following facts:\nball is heavy.\ndave is friendly.\neve likes car.\ngeorge is clever.\npencil is big.\nbob is a parent of alice.\nbob is brave.\nbob is an enemy of carol.\n\nQUESTION:\nCould ball is wet explain ball is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1046,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(carol).",
    "c": "old(X) :- wet(X).\ndirty(X) :- old(X).\nnew(X) :- dirty(X).\nsoft(X) :- new(X).\nheavy(X) :- soft(X).\nbrave(X) :- calm(X).\nlight(X) :- small(X), owns(V,X), brave(V).\ncurious(Y) :- tired(Y), friend(Y,A), bored(A).\nparent(Z,Y) :- friendly(Y), angry(Z), friend(Z,V).\nfriendly(Y) :- hungry(Y).\nhard(Y) :- light(Y), owns(B,Y), bored(B).\nsmall(Y) :- rough(Y), red(E).\nsad(Z) :- angry(Z), dislikes(Z,W), red(W).\nhard(Y) :- rough(Y), dislikes(B,Y), calm(B).\nenemy(X,Z) :- angry(Z), sad(X), sibling(Z,A).\nhappy(X) :- clever(X).\nrough(X) :- red(X).\nrough(X) :- small(X).\ncurious(X) :- bored(X), strong(X).\nclever(X) :- tall(X).\nsmall(X) :- red(X).\nbored(X) :- tired(X), angry(X).\ntall(X) :- strong(X), brave(X).\ncurious(X) :- friendly(X), tall(X).\nsmooth(X) :- hard(X).\nheavy(ball).\nfriendly(dave).\nlikes(eve,car).\nclever(george).\nbig(pencil).\nparent(bob,alice).\nbrave(bob).\nenemy(bob,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if there exists V such that object X is small and person V owns object X and person V is brave, then object X is light.\nFor all Y, if there exists A such that person Y is tired and person Y is a friend of person A and person A is bored, then person Y is curious.\nFor all Y, Z, if there exists V such that person Y is friendly and person Z is angry and person Z is a friend of person V, then person Z is a parent of person Y.\nFor all Y, if person Y is hungry, then person Y is friendly.\nFor all Y, if there exists B such that object Y is light and person B owns object Y and person B is bored, then object Y is hard.\nFor all Y, if there exists E such that object Y is rough and object E is red, then object Y is small.\nFor all Z, if there exists W such that person Z is angry and person Z dislikes object W and object W is red, then person Z is sad.\nFor all Y, if there exists B such that object Y is rough and person B dislikes object Y and person B is calm, then object Y is hard.\nFor all X, Z, if there exists A such that person Z is angry and person X is sad and person Z is a sibling of person A, then person X is an enemy of person Z.\nFor all X, if person X is clever, then person X is happy.\nFor all X, if object X is red, then object X is rough.\nFor all X, if object X is small, then object X is rough.\nFor all X, if person X is bored and person X is strong, then person X is curious.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is tired and person X is angry, then person X is bored.\nFor all X, if person X is strong and person X is brave, then person X is tall.\nFor all X, if person X is friendly and person X is tall, then person X is curious.\nFor all X, if object X is hard, then object X is smooth.\n\nAnd the following facts:\nball is heavy.\ndave is friendly.\neve likes car.\ngeorge is clever.\npencil is big.\nbob is a parent of alice.\nbob is brave.\nbob is an enemy of carol.\n\nQUESTION:\nCould carol is tired explain ball is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1047,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "friendly(bob).",
    "c": "strong(X) :- tired(X).\nbusy(X) :- strong(X).\ncurious(X) :- busy(X).\nangry(X) :- curious(X).\nfriendly(X) :- angry(X).\nhungry(Y) :- weak(Y).\nold(X) :- hard(X), dislikes(V,X), clever(V).\nclean(Y) :- rough(Y), new(E).\nclever(Y) :- clever(Y), sibling(Y,A), calm(A).\nheavy(X) :- clean(X), happy(C).\nfriend(Y,Z) :- brave(Y), calm(Z).\nenemy(Z,X) :- excited(Z), sad(X).\nclean(Z) :- soft(Z), owns(V,Z), funny(V).\nparent(X,Z) :- excited(Z), bored(X).\nexcited(Z) :- tall(Z).\nclean(Y) :- light(Y), heavy(E).\nred(Z) :- smooth(Z), smooth(B).\nsmall(Z) :- hard(Z), smooth(A).\nlight(X) :- wet(X), red(X).\nold(X) :- small(X).\ndislikes(X,Y) :- bored(X), light(Y).\nheavy(X) :- new(X), big(X).\nfriend(X,Y) :- bored(X), calm(Y), sibling(X,Y).\nsmall(X) :- hard(X), dirty(X).\nsibling(X,Y) :- brave(X), weak(Y).\ntired(bob).\nsibling(george,frank).\nhard(car).\nparent(frank,carol).\ncalm(eve).\ndislikes(carol,pencil).\nlight(phone).\nfriend(alice,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all Y, if person Y is weak, then person Y is hungry.\nFor all X, if there exists V such that object X is hard and person V dislikes object X and person V is clever, then object X is old.\nFor all Y, if there exists E such that object Y is rough and object E is new, then object Y is clean.\nFor all Y, if there exists A such that person Y is clever and person Y is a sibling of person A and person A is calm, then person Y is clever.\nFor all X, if there exists C such that object X is clean and person C is happy, then object X is heavy.\nFor all Y, Z, if person Y is brave and person Z is calm, then person Y is a friend of person Z.\nFor all X, Z, if person Z is excited and person X is sad, then person Z is an enemy of person X.\nFor all Z, if there exists V such that object Z is soft and person V owns object Z and person V is funny, then object Z is clean.\nFor all X, Z, if person Z is excited and person X is bored, then person X is a parent of person Z.\nFor all Z, if person Z is tall, then person Z is excited.\nFor all Y, if there exists E such that object Y is light and object E is heavy, then object Y is clean.\nFor all Z, if there exists B such that object Z is smooth and object B is smooth, then object Z is red.\nFor all Z, if there exists A such that object Z is hard and object A is smooth, then object Z is small.\nFor all X, if object X is wet and object X is red, then object X is light.\nFor all X, if object X is small, then object X is old.\nFor all X, Y, if person X is bored and object Y is light, then person X dislikes object Y.\nFor all X, if object X is new and object X is big, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is calm and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is hard and object X is dirty, then object X is small.\nFor all X, Y, if person X is brave and person Y is weak, then person X is a sibling of person Y.\n\nAnd the following facts:\nbob is tired.\ngeorge is a sibling of frank.\ncar is hard.\nfrank is a parent of carol.\neve is calm.\ncarol dislikes pencil.\nphone is light.\nalice is a friend of george.\n\nQUESTION:\nIs bob is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1048,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(george).",
    "c": "strong(X) :- tired(X).\nbusy(X) :- strong(X).\ncurious(X) :- busy(X).\nangry(X) :- curious(X).\nfriendly(X) :- angry(X).\nhungry(Y) :- weak(Y).\nold(X) :- hard(X), dislikes(V,X), clever(V).\nclean(Y) :- rough(Y), new(E).\nclever(Y) :- clever(Y), sibling(Y,A), calm(A).\nheavy(X) :- clean(X), happy(C).\nfriend(Y,Z) :- brave(Y), calm(Z).\nenemy(Z,X) :- excited(Z), sad(X).\nclean(Z) :- soft(Z), owns(V,Z), funny(V).\nparent(X,Z) :- excited(Z), bored(X).\nexcited(Z) :- tall(Z).\nclean(Y) :- light(Y), heavy(E).\nred(Z) :- smooth(Z), smooth(B).\nsmall(Z) :- hard(Z), smooth(A).\nlight(X) :- wet(X), red(X).\nold(X) :- small(X).\ndislikes(X,Y) :- bored(X), light(Y).\nheavy(X) :- new(X), big(X).\nfriend(X,Y) :- bored(X), calm(Y), sibling(X,Y).\nsmall(X) :- hard(X), dirty(X).\nsibling(X,Y) :- brave(X), weak(Y).\ntired(bob).\nsibling(george,frank).\nhard(car).\nparent(frank,carol).\ncalm(eve).\ndislikes(carol,pencil).\nlight(phone).\nfriend(alice,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all Y, if person Y is weak, then person Y is hungry.\nFor all X, if there exists V such that object X is hard and person V dislikes object X and person V is clever, then object X is old.\nFor all Y, if there exists E such that object Y is rough and object E is new, then object Y is clean.\nFor all Y, if there exists A such that person Y is clever and person Y is a sibling of person A and person A is calm, then person Y is clever.\nFor all X, if there exists C such that object X is clean and person C is happy, then object X is heavy.\nFor all Y, Z, if person Y is brave and person Z is calm, then person Y is a friend of person Z.\nFor all X, Z, if person Z is excited and person X is sad, then person Z is an enemy of person X.\nFor all Z, if there exists V such that object Z is soft and person V owns object Z and person V is funny, then object Z is clean.\nFor all X, Z, if person Z is excited and person X is bored, then person X is a parent of person Z.\nFor all Z, if person Z is tall, then person Z is excited.\nFor all Y, if there exists E such that object Y is light and object E is heavy, then object Y is clean.\nFor all Z, if there exists B such that object Z is smooth and object B is smooth, then object Z is red.\nFor all Z, if there exists A such that object Z is hard and object A is smooth, then object Z is small.\nFor all X, if object X is wet and object X is red, then object X is light.\nFor all X, if object X is small, then object X is old.\nFor all X, Y, if person X is bored and object Y is light, then person X dislikes object Y.\nFor all X, if object X is new and object X is big, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is calm and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is hard and object X is dirty, then object X is small.\nFor all X, Y, if person X is brave and person Y is weak, then person X is a sibling of person Y.\n\nAnd the following facts:\nbob is tired.\ngeorge is a sibling of frank.\ncar is hard.\nfrank is a parent of carol.\neve is calm.\ncarol dislikes pencil.\nphone is light.\nalice is a friend of george.\n\nQUESTION:\nIs george is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1049,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(bob).",
    "c": "strong(X) :- tired(X).\nbusy(X) :- strong(X).\ncurious(X) :- busy(X).\nangry(X) :- curious(X).\nfriendly(X) :- angry(X).\nhungry(Y) :- weak(Y).\nold(X) :- hard(X), dislikes(V,X), clever(V).\nclean(Y) :- rough(Y), new(E).\nclever(Y) :- clever(Y), sibling(Y,A), calm(A).\nheavy(X) :- clean(X), happy(C).\nfriend(Y,Z) :- brave(Y), calm(Z).\nenemy(Z,X) :- excited(Z), sad(X).\nclean(Z) :- soft(Z), owns(V,Z), funny(V).\nparent(X,Z) :- excited(Z), bored(X).\nexcited(Z) :- tall(Z).\nclean(Y) :- light(Y), heavy(E).\nred(Z) :- smooth(Z), smooth(B).\nsmall(Z) :- hard(Z), smooth(A).\nlight(X) :- wet(X), red(X).\nold(X) :- small(X).\ndislikes(X,Y) :- bored(X), light(Y).\nheavy(X) :- new(X), big(X).\nfriend(X,Y) :- bored(X), calm(Y), sibling(X,Y).\nsmall(X) :- hard(X), dirty(X).\nsibling(X,Y) :- brave(X), weak(Y).\nfriendly(bob).\nsibling(george,frank).\nhard(car).\nparent(frank,carol).\ncalm(eve).\ndislikes(carol,pencil).\nlight(phone).\nfriend(alice,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all Y, if person Y is weak, then person Y is hungry.\nFor all X, if there exists V such that object X is hard and person V dislikes object X and person V is clever, then object X is old.\nFor all Y, if there exists E such that object Y is rough and object E is new, then object Y is clean.\nFor all Y, if there exists A such that person Y is clever and person Y is a sibling of person A and person A is calm, then person Y is clever.\nFor all X, if there exists C such that object X is clean and person C is happy, then object X is heavy.\nFor all Y, Z, if person Y is brave and person Z is calm, then person Y is a friend of person Z.\nFor all X, Z, if person Z is excited and person X is sad, then person Z is an enemy of person X.\nFor all Z, if there exists V such that object Z is soft and person V owns object Z and person V is funny, then object Z is clean.\nFor all X, Z, if person Z is excited and person X is bored, then person X is a parent of person Z.\nFor all Z, if person Z is tall, then person Z is excited.\nFor all Y, if there exists E such that object Y is light and object E is heavy, then object Y is clean.\nFor all Z, if there exists B such that object Z is smooth and object B is smooth, then object Z is red.\nFor all Z, if there exists A such that object Z is hard and object A is smooth, then object Z is small.\nFor all X, if object X is wet and object X is red, then object X is light.\nFor all X, if object X is small, then object X is old.\nFor all X, Y, if person X is bored and object Y is light, then person X dislikes object Y.\nFor all X, if object X is new and object X is big, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is calm and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is hard and object X is dirty, then object X is small.\nFor all X, Y, if person X is brave and person Y is weak, then person X is a sibling of person Y.\n\nAnd the following facts:\nbob is friendly.\ngeorge is a sibling of frank.\ncar is hard.\nfrank is a parent of carol.\neve is calm.\ncarol dislikes pencil.\nphone is light.\nalice is a friend of george.\n\nQUESTION:\nCould bob is tired explain bob is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1050,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(carol).",
    "c": "strong(X) :- tired(X).\nbusy(X) :- strong(X).\ncurious(X) :- busy(X).\nangry(X) :- curious(X).\nfriendly(X) :- angry(X).\nhungry(Y) :- weak(Y).\nold(X) :- hard(X), dislikes(V,X), clever(V).\nclean(Y) :- rough(Y), new(E).\nclever(Y) :- clever(Y), sibling(Y,A), calm(A).\nheavy(X) :- clean(X), happy(C).\nfriend(Y,Z) :- brave(Y), calm(Z).\nenemy(Z,X) :- excited(Z), sad(X).\nclean(Z) :- soft(Z), owns(V,Z), funny(V).\nparent(X,Z) :- excited(Z), bored(X).\nexcited(Z) :- tall(Z).\nclean(Y) :- light(Y), heavy(E).\nred(Z) :- smooth(Z), smooth(B).\nsmall(Z) :- hard(Z), smooth(A).\nlight(X) :- wet(X), red(X).\nold(X) :- small(X).\ndislikes(X,Y) :- bored(X), light(Y).\nheavy(X) :- new(X), big(X).\nfriend(X,Y) :- bored(X), calm(Y), sibling(X,Y).\nsmall(X) :- hard(X), dirty(X).\nsibling(X,Y) :- brave(X), weak(Y).\nfriendly(bob).\nsibling(george,frank).\nhard(car).\nparent(frank,carol).\ncalm(eve).\ndislikes(carol,pencil).\nlight(phone).\nfriend(alice,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is strong.\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is friendly.\nFor all Y, if person Y is weak, then person Y is hungry.\nFor all X, if there exists V such that object X is hard and person V dislikes object X and person V is clever, then object X is old.\nFor all Y, if there exists E such that object Y is rough and object E is new, then object Y is clean.\nFor all Y, if there exists A such that person Y is clever and person Y is a sibling of person A and person A is calm, then person Y is clever.\nFor all X, if there exists C such that object X is clean and person C is happy, then object X is heavy.\nFor all Y, Z, if person Y is brave and person Z is calm, then person Y is a friend of person Z.\nFor all X, Z, if person Z is excited and person X is sad, then person Z is an enemy of person X.\nFor all Z, if there exists V such that object Z is soft and person V owns object Z and person V is funny, then object Z is clean.\nFor all X, Z, if person Z is excited and person X is bored, then person X is a parent of person Z.\nFor all Z, if person Z is tall, then person Z is excited.\nFor all Y, if there exists E such that object Y is light and object E is heavy, then object Y is clean.\nFor all Z, if there exists B such that object Z is smooth and object B is smooth, then object Z is red.\nFor all Z, if there exists A such that object Z is hard and object A is smooth, then object Z is small.\nFor all X, if object X is wet and object X is red, then object X is light.\nFor all X, if object X is small, then object X is old.\nFor all X, Y, if person X is bored and object Y is light, then person X dislikes object Y.\nFor all X, if object X is new and object X is big, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is calm and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is hard and object X is dirty, then object X is small.\nFor all X, Y, if person X is brave and person Y is weak, then person X is a sibling of person Y.\n\nAnd the following facts:\nbob is friendly.\ngeorge is a sibling of frank.\ncar is hard.\nfrank is a parent of carol.\neve is calm.\ncarol dislikes pencil.\nphone is light.\nalice is a friend of george.\n\nQUESTION:\nCould carol is funny explain bob is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1051,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(bob).",
    "c": "tall(X) :- hungry(X).\nbored(X) :- tall(X).\ncalm(X) :- bored(X).\nbrave(X) :- calm(X).\nfunny(X) :- brave(X).\nhappy(Y) :- tired(Y), friend(Y,B), friendly(B).\nowns(X,Y) :- smooth(Y), curious(X), red(E).\nsad(Y) :- curious(Y), dislikes(Y,B), dirty(B).\nold(Y) :- light(Y).\ndislikes(Y,X) :- happy(Y), small(X), owns(Y,W).\nsoft(Z) :- big(Z), happy(C).\nsad(X) :- curious(X), dislikes(X,B), soft(B).\nangry(Z) :- happy(Z).\nhappy(Y) :- tired(Y), sibling(Y,B), friendly(B).\nhappy(Y) :- friendly(Y), parent(Y,A), clever(A).\nold(X) :- red(X).\nclean(X) :- soft(X).\nsoft(X) :- wet(X).\nred(X) :- heavy(X).\nfriendly(X) :- weak(X).\nlight(X) :- smooth(X).\nowns(X,Y) :- tired(X), dirty(Y), dislikes(X,Y).\nhard(X) :- heavy(X).\nsmooth(X) :- heavy(X).\nenemy(X,Y) :- strong(X), weak(Y), friend(X,Y).\nhungry(bob).\nsibling(eve,bob).\nowns(bob,car).\nbusy(frank).\nsmall(apple).\ndislikes(alice,phone).\nenemy(dave,frank).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all Y, if there exists B such that person Y is tired and person Y is a friend of person B and person B is friendly, then person Y is happy.\nFor all X, Y, if there exists E such that object Y is smooth and person X is curious and object E is red, then person X owns object Y.\nFor all Y, if there exists B such that person Y is curious and person Y dislikes object B and object B is dirty, then person Y is sad.\nFor all Y, if object Y is light, then object Y is old.\nFor all X, Y, if there exists W such that person Y is happy and object X is small and person Y owns object W, then person Y dislikes object X.\nFor all Z, if there exists C such that object Z is big and person C is happy, then object Z is soft.\nFor all X, if there exists B such that person X is curious and person X dislikes object B and object B is soft, then person X is sad.\nFor all Z, if person Z is happy, then person Z is angry.\nFor all Y, if there exists B such that person Y is tired and person Y is a sibling of person B and person B is friendly, then person Y is happy.\nFor all Y, if there exists A such that person Y is friendly and person Y is a parent of person A and person A is clever, then person Y is happy.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if object X is smooth, then object X is light.\nFor all X, Y, if person X is tired and object Y is dirty and person X dislikes object Y, then person X owns object Y.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, Y, if person X is strong and person Y is weak and person X is a friend of person Y, then person X is an enemy of person Y.\n\nAnd the following facts:\nbob is hungry.\neve is a sibling of bob.\nbob owns car.\nfrank is busy.\napple is small.\nalice dislikes phone.\ndave is an enemy of frank.\ngeorge likes phone.\n\nQUESTION:\nIs bob is funny true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1052,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(phone).",
    "c": "tall(X) :- hungry(X).\nbored(X) :- tall(X).\ncalm(X) :- bored(X).\nbrave(X) :- calm(X).\nfunny(X) :- brave(X).\nhappy(Y) :- tired(Y), friend(Y,B), friendly(B).\nowns(X,Y) :- smooth(Y), curious(X), red(E).\nsad(Y) :- curious(Y), dislikes(Y,B), dirty(B).\nold(Y) :- light(Y).\ndislikes(Y,X) :- happy(Y), small(X), owns(Y,W).\nsoft(Z) :- big(Z), happy(C).\nsad(X) :- curious(X), dislikes(X,B), soft(B).\nangry(Z) :- happy(Z).\nhappy(Y) :- tired(Y), sibling(Y,B), friendly(B).\nhappy(Y) :- friendly(Y), parent(Y,A), clever(A).\nold(X) :- red(X).\nclean(X) :- soft(X).\nsoft(X) :- wet(X).\nred(X) :- heavy(X).\nfriendly(X) :- weak(X).\nlight(X) :- smooth(X).\nowns(X,Y) :- tired(X), dirty(Y), dislikes(X,Y).\nhard(X) :- heavy(X).\nsmooth(X) :- heavy(X).\nenemy(X,Y) :- strong(X), weak(Y), friend(X,Y).\nhungry(bob).\nsibling(eve,bob).\nowns(bob,car).\nbusy(frank).\nsmall(apple).\ndislikes(alice,phone).\nenemy(dave,frank).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all Y, if there exists B such that person Y is tired and person Y is a friend of person B and person B is friendly, then person Y is happy.\nFor all X, Y, if there exists E such that object Y is smooth and person X is curious and object E is red, then person X owns object Y.\nFor all Y, if there exists B such that person Y is curious and person Y dislikes object B and object B is dirty, then person Y is sad.\nFor all Y, if object Y is light, then object Y is old.\nFor all X, Y, if there exists W such that person Y is happy and object X is small and person Y owns object W, then person Y dislikes object X.\nFor all Z, if there exists C such that object Z is big and person C is happy, then object Z is soft.\nFor all X, if there exists B such that person X is curious and person X dislikes object B and object B is soft, then person X is sad.\nFor all Z, if person Z is happy, then person Z is angry.\nFor all Y, if there exists B such that person Y is tired and person Y is a sibling of person B and person B is friendly, then person Y is happy.\nFor all Y, if there exists A such that person Y is friendly and person Y is a parent of person A and person A is clever, then person Y is happy.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if object X is smooth, then object X is light.\nFor all X, Y, if person X is tired and object Y is dirty and person X dislikes object Y, then person X owns object Y.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, Y, if person X is strong and person Y is weak and person X is a friend of person Y, then person X is an enemy of person Y.\n\nAnd the following facts:\nbob is hungry.\neve is a sibling of bob.\nbob owns car.\nfrank is busy.\napple is small.\nalice dislikes phone.\ndave is an enemy of frank.\ngeorge likes phone.\n\nQUESTION:\nIs phone is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1053,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "tall(X) :- hungry(X).\nbored(X) :- tall(X).\ncalm(X) :- bored(X).\nbrave(X) :- calm(X).\nfunny(X) :- brave(X).\nhappy(Y) :- tired(Y), friend(Y,B), friendly(B).\nowns(X,Y) :- smooth(Y), curious(X), red(E).\nsad(Y) :- curious(Y), dislikes(Y,B), dirty(B).\nold(Y) :- light(Y).\ndislikes(Y,X) :- happy(Y), small(X), owns(Y,W).\nsoft(Z) :- big(Z), happy(C).\nsad(X) :- curious(X), dislikes(X,B), soft(B).\nangry(Z) :- happy(Z).\nhappy(Y) :- tired(Y), sibling(Y,B), friendly(B).\nhappy(Y) :- friendly(Y), parent(Y,A), clever(A).\nold(X) :- red(X).\nclean(X) :- soft(X).\nsoft(X) :- wet(X).\nred(X) :- heavy(X).\nfriendly(X) :- weak(X).\nlight(X) :- smooth(X).\nowns(X,Y) :- tired(X), dirty(Y), dislikes(X,Y).\nhard(X) :- heavy(X).\nsmooth(X) :- heavy(X).\nenemy(X,Y) :- strong(X), weak(Y), friend(X,Y).\nfunny(bob).\nsibling(eve,bob).\nowns(bob,car).\nbusy(frank).\nsmall(apple).\ndislikes(alice,phone).\nenemy(dave,frank).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all Y, if there exists B such that person Y is tired and person Y is a friend of person B and person B is friendly, then person Y is happy.\nFor all X, Y, if there exists E such that object Y is smooth and person X is curious and object E is red, then person X owns object Y.\nFor all Y, if there exists B such that person Y is curious and person Y dislikes object B and object B is dirty, then person Y is sad.\nFor all Y, if object Y is light, then object Y is old.\nFor all X, Y, if there exists W such that person Y is happy and object X is small and person Y owns object W, then person Y dislikes object X.\nFor all Z, if there exists C such that object Z is big and person C is happy, then object Z is soft.\nFor all X, if there exists B such that person X is curious and person X dislikes object B and object B is soft, then person X is sad.\nFor all Z, if person Z is happy, then person Z is angry.\nFor all Y, if there exists B such that person Y is tired and person Y is a sibling of person B and person B is friendly, then person Y is happy.\nFor all Y, if there exists A such that person Y is friendly and person Y is a parent of person A and person A is clever, then person Y is happy.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if object X is smooth, then object X is light.\nFor all X, Y, if person X is tired and object Y is dirty and person X dislikes object Y, then person X owns object Y.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, Y, if person X is strong and person Y is weak and person X is a friend of person Y, then person X is an enemy of person Y.\n\nAnd the following facts:\nbob is funny.\neve is a sibling of bob.\nbob owns car.\nfrank is busy.\napple is small.\nalice dislikes phone.\ndave is an enemy of frank.\ngeorge likes phone.\n\nQUESTION:\nCould bob is hungry explain bob is funny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1054,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "brave(bob).",
    "c": "tall(X) :- hungry(X).\nbored(X) :- tall(X).\ncalm(X) :- bored(X).\nbrave(X) :- calm(X).\nfunny(X) :- brave(X).\nhappy(Y) :- tired(Y), friend(Y,B), friendly(B).\nowns(X,Y) :- smooth(Y), curious(X), red(E).\nsad(Y) :- curious(Y), dislikes(Y,B), dirty(B).\nold(Y) :- light(Y).\ndislikes(Y,X) :- happy(Y), small(X), owns(Y,W).\nsoft(Z) :- big(Z), happy(C).\nsad(X) :- curious(X), dislikes(X,B), soft(B).\nangry(Z) :- happy(Z).\nhappy(Y) :- tired(Y), sibling(Y,B), friendly(B).\nhappy(Y) :- friendly(Y), parent(Y,A), clever(A).\nold(X) :- red(X).\nclean(X) :- soft(X).\nsoft(X) :- wet(X).\nred(X) :- heavy(X).\nfriendly(X) :- weak(X).\nlight(X) :- smooth(X).\nowns(X,Y) :- tired(X), dirty(Y), dislikes(X,Y).\nhard(X) :- heavy(X).\nsmooth(X) :- heavy(X).\nenemy(X,Y) :- strong(X), weak(Y), friend(X,Y).\nfunny(bob).\nsibling(eve,bob).\nowns(bob,car).\nbusy(frank).\nsmall(apple).\ndislikes(alice,phone).\nenemy(dave,frank).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all Y, if there exists B such that person Y is tired and person Y is a friend of person B and person B is friendly, then person Y is happy.\nFor all X, Y, if there exists E such that object Y is smooth and person X is curious and object E is red, then person X owns object Y.\nFor all Y, if there exists B such that person Y is curious and person Y dislikes object B and object B is dirty, then person Y is sad.\nFor all Y, if object Y is light, then object Y is old.\nFor all X, Y, if there exists W such that person Y is happy and object X is small and person Y owns object W, then person Y dislikes object X.\nFor all Z, if there exists C such that object Z is big and person C is happy, then object Z is soft.\nFor all X, if there exists B such that person X is curious and person X dislikes object B and object B is soft, then person X is sad.\nFor all Z, if person Z is happy, then person Z is angry.\nFor all Y, if there exists B such that person Y is tired and person Y is a sibling of person B and person B is friendly, then person Y is happy.\nFor all Y, if there exists A such that person Y is friendly and person Y is a parent of person A and person A is clever, then person Y is happy.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is heavy, then object X is red.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if object X is smooth, then object X is light.\nFor all X, Y, if person X is tired and object Y is dirty and person X dislikes object Y, then person X owns object Y.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, Y, if person X is strong and person Y is weak and person X is a friend of person Y, then person X is an enemy of person Y.\n\nAnd the following facts:\nbob is funny.\neve is a sibling of bob.\nbob owns car.\nfrank is busy.\napple is small.\nalice dislikes phone.\ndave is an enemy of frank.\ngeorge likes phone.\n\nQUESTION:\nCould bob is brave explain bob is funny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1055,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(bob).",
    "c": "weak(X) :- curious(X).\nclever(X) :- weak(X).\ntall(X) :- clever(X).\nhungry(X) :- tall(X).\nbrave(X) :- hungry(X).\nangry(X) :- brave(X).\nexcited(X) :- angry(X).\nbored(X) :- excited(X).\nbrave(X) :- bored(X).\nstrong(X) :- brave(X).\nlikes(Y,Z) :- funny(Y), clean(Z).\nwet(X) :- hard(X), owns(W,X), happy(W).\nfriendly(Z) :- busy(Z), parent(Z,A), funny(A).\ntired(Z) :- friendly(Z).\nparent(Y,Z) :- happy(Y), calm(Z).\nbusy(X) :- calm(X).\nowns(Y,X) :- sad(Y), heavy(X), dislikes(B,X).\nsmooth(Z) :- light(Z), likes(B,Z), friendly(B).\ndislikes(X,Y) :- heavy(Y), calm(X), owns(W,Y).\nhard(Y) :- red(Y), owns(V,Y), sad(V).\nrough(X) :- big(X).\nrough(X) :- wet(X), clean(X).\nfriendly(X) :- happy(X), happy(X).\nold(X) :- big(X).\nbusy(X) :- tired(X).\ncurious(bob).\ndirty(apple).\ndislikes(george,pencil).\ntired(bob).\nenemy(george,alice).\nsoft(ball).\nlikes(bob,ball).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is bored.\nFor all X, if person X is bored, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all Y, Z, if person Y is funny and object Z is clean, then person Y likes object Z.\nFor all X, if there exists W such that object X is hard and person W owns object X and person W is happy, then object X is wet.\nFor all Z, if there exists A such that person Z is busy and person Z is a parent of person A and person A is funny, then person Z is friendly.\nFor all Z, if person Z is friendly, then person Z is tired.\nFor all Y, Z, if person Y is happy and person Z is calm, then person Y is a parent of person Z.\nFor all X, if person X is calm, then person X is busy.\nFor all X, Y, if there exists B such that person Y is sad and object X is heavy and person B dislikes object X, then person Y owns object X.\nFor all Z, if there exists B such that object Z is light and person B likes object Z and person B is friendly, then object Z is smooth.\nFor all X, Y, if there exists W such that object Y is heavy and person X is calm and person W owns object Y, then person X dislikes object Y.\nFor all Y, if there exists V such that object Y is red and person V owns object Y and person V is sad, then object Y is hard.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is wet and object X is clean, then object X is rough.\nFor all X, if person X is happy and person X is happy, then person X is friendly.\nFor all X, if object X is big, then object X is old.\nFor all X, if person X is tired, then person X is busy.\n\nAnd the following facts:\nbob is curious.\napple is dirty.\ngeorge dislikes pencil.\nbob is tired.\ngeorge is an enemy of alice.\nball is soft.\nbob likes ball.\ncarol is a friend of eve.\n\nQUESTION:\nIs bob is strong true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1056,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "weak(X) :- curious(X).\nclever(X) :- weak(X).\ntall(X) :- clever(X).\nhungry(X) :- tall(X).\nbrave(X) :- hungry(X).\nangry(X) :- brave(X).\nexcited(X) :- angry(X).\nbored(X) :- excited(X).\nbrave(X) :- bored(X).\nstrong(X) :- brave(X).\nlikes(Y,Z) :- funny(Y), clean(Z).\nwet(X) :- hard(X), owns(W,X), happy(W).\nfriendly(Z) :- busy(Z), parent(Z,A), funny(A).\ntired(Z) :- friendly(Z).\nparent(Y,Z) :- happy(Y), calm(Z).\nbusy(X) :- calm(X).\nowns(Y,X) :- sad(Y), heavy(X), dislikes(B,X).\nsmooth(Z) :- light(Z), likes(B,Z), friendly(B).\ndislikes(X,Y) :- heavy(Y), calm(X), owns(W,Y).\nhard(Y) :- red(Y), owns(V,Y), sad(V).\nrough(X) :- big(X).\nrough(X) :- wet(X), clean(X).\nfriendly(X) :- happy(X), happy(X).\nold(X) :- big(X).\nbusy(X) :- tired(X).\ncurious(bob).\ndirty(apple).\ndislikes(george,pencil).\ntired(bob).\nenemy(george,alice).\nsoft(ball).\nlikes(bob,ball).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is bored.\nFor all X, if person X is bored, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all Y, Z, if person Y is funny and object Z is clean, then person Y likes object Z.\nFor all X, if there exists W such that object X is hard and person W owns object X and person W is happy, then object X is wet.\nFor all Z, if there exists A such that person Z is busy and person Z is a parent of person A and person A is funny, then person Z is friendly.\nFor all Z, if person Z is friendly, then person Z is tired.\nFor all Y, Z, if person Y is happy and person Z is calm, then person Y is a parent of person Z.\nFor all X, if person X is calm, then person X is busy.\nFor all X, Y, if there exists B such that person Y is sad and object X is heavy and person B dislikes object X, then person Y owns object X.\nFor all Z, if there exists B such that object Z is light and person B likes object Z and person B is friendly, then object Z is smooth.\nFor all X, Y, if there exists W such that object Y is heavy and person X is calm and person W owns object Y, then person X dislikes object Y.\nFor all Y, if there exists V such that object Y is red and person V owns object Y and person V is sad, then object Y is hard.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is wet and object X is clean, then object X is rough.\nFor all X, if person X is happy and person X is happy, then person X is friendly.\nFor all X, if object X is big, then object X is old.\nFor all X, if person X is tired, then person X is busy.\n\nAnd the following facts:\nbob is curious.\napple is dirty.\ngeorge dislikes pencil.\nbob is tired.\ngeorge is an enemy of alice.\nball is soft.\nbob likes ball.\ncarol is a friend of eve.\n\nQUESTION:\nIs phone is rough true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1057,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(bob).",
    "c": "weak(X) :- curious(X).\nclever(X) :- weak(X).\ntall(X) :- clever(X).\nhungry(X) :- tall(X).\nbrave(X) :- hungry(X).\nangry(X) :- brave(X).\nexcited(X) :- angry(X).\nbored(X) :- excited(X).\nbrave(X) :- bored(X).\nstrong(X) :- brave(X).\nlikes(Y,Z) :- funny(Y), clean(Z).\nwet(X) :- hard(X), owns(W,X), happy(W).\nfriendly(Z) :- busy(Z), parent(Z,A), funny(A).\ntired(Z) :- friendly(Z).\nparent(Y,Z) :- happy(Y), calm(Z).\nbusy(X) :- calm(X).\nowns(Y,X) :- sad(Y), heavy(X), dislikes(B,X).\nsmooth(Z) :- light(Z), likes(B,Z), friendly(B).\ndislikes(X,Y) :- heavy(Y), calm(X), owns(W,Y).\nhard(Y) :- red(Y), owns(V,Y), sad(V).\nrough(X) :- big(X).\nrough(X) :- wet(X), clean(X).\nfriendly(X) :- happy(X), happy(X).\nold(X) :- big(X).\nbusy(X) :- tired(X).\nstrong(bob).\ndirty(apple).\ndislikes(george,pencil).\ntired(bob).\nenemy(george,alice).\nsoft(ball).\nlikes(bob,ball).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is bored.\nFor all X, if person X is bored, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all Y, Z, if person Y is funny and object Z is clean, then person Y likes object Z.\nFor all X, if there exists W such that object X is hard and person W owns object X and person W is happy, then object X is wet.\nFor all Z, if there exists A such that person Z is busy and person Z is a parent of person A and person A is funny, then person Z is friendly.\nFor all Z, if person Z is friendly, then person Z is tired.\nFor all Y, Z, if person Y is happy and person Z is calm, then person Y is a parent of person Z.\nFor all X, if person X is calm, then person X is busy.\nFor all X, Y, if there exists B such that person Y is sad and object X is heavy and person B dislikes object X, then person Y owns object X.\nFor all Z, if there exists B such that object Z is light and person B likes object Z and person B is friendly, then object Z is smooth.\nFor all X, Y, if there exists W such that object Y is heavy and person X is calm and person W owns object Y, then person X dislikes object Y.\nFor all Y, if there exists V such that object Y is red and person V owns object Y and person V is sad, then object Y is hard.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is wet and object X is clean, then object X is rough.\nFor all X, if person X is happy and person X is happy, then person X is friendly.\nFor all X, if object X is big, then object X is old.\nFor all X, if person X is tired, then person X is busy.\n\nAnd the following facts:\nbob is strong.\napple is dirty.\ngeorge dislikes pencil.\nbob is tired.\ngeorge is an enemy of alice.\nball is soft.\nbob likes ball.\ncarol is a friend of eve.\n\nQUESTION:\nCould bob is curious explain bob is strong?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1058,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(car).",
    "c": "weak(X) :- curious(X).\nclever(X) :- weak(X).\ntall(X) :- clever(X).\nhungry(X) :- tall(X).\nbrave(X) :- hungry(X).\nangry(X) :- brave(X).\nexcited(X) :- angry(X).\nbored(X) :- excited(X).\nbrave(X) :- bored(X).\nstrong(X) :- brave(X).\nlikes(Y,Z) :- funny(Y), clean(Z).\nwet(X) :- hard(X), owns(W,X), happy(W).\nfriendly(Z) :- busy(Z), parent(Z,A), funny(A).\ntired(Z) :- friendly(Z).\nparent(Y,Z) :- happy(Y), calm(Z).\nbusy(X) :- calm(X).\nowns(Y,X) :- sad(Y), heavy(X), dislikes(B,X).\nsmooth(Z) :- light(Z), likes(B,Z), friendly(B).\ndislikes(X,Y) :- heavy(Y), calm(X), owns(W,Y).\nhard(Y) :- red(Y), owns(V,Y), sad(V).\nrough(X) :- big(X).\nrough(X) :- wet(X), clean(X).\nfriendly(X) :- happy(X), happy(X).\nold(X) :- big(X).\nbusy(X) :- tired(X).\nstrong(bob).\ndirty(apple).\ndislikes(george,pencil).\ntired(bob).\nenemy(george,alice).\nsoft(ball).\nlikes(bob,ball).\nfriend(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if person X is tall, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is bored.\nFor all X, if person X is bored, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all Y, Z, if person Y is funny and object Z is clean, then person Y likes object Z.\nFor all X, if there exists W such that object X is hard and person W owns object X and person W is happy, then object X is wet.\nFor all Z, if there exists A such that person Z is busy and person Z is a parent of person A and person A is funny, then person Z is friendly.\nFor all Z, if person Z is friendly, then person Z is tired.\nFor all Y, Z, if person Y is happy and person Z is calm, then person Y is a parent of person Z.\nFor all X, if person X is calm, then person X is busy.\nFor all X, Y, if there exists B such that person Y is sad and object X is heavy and person B dislikes object X, then person Y owns object X.\nFor all Z, if there exists B such that object Z is light and person B likes object Z and person B is friendly, then object Z is smooth.\nFor all X, Y, if there exists W such that object Y is heavy and person X is calm and person W owns object Y, then person X dislikes object Y.\nFor all Y, if there exists V such that object Y is red and person V owns object Y and person V is sad, then object Y is hard.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is wet and object X is clean, then object X is rough.\nFor all X, if person X is happy and person X is happy, then person X is friendly.\nFor all X, if object X is big, then object X is old.\nFor all X, if person X is tired, then person X is busy.\n\nAnd the following facts:\nbob is strong.\napple is dirty.\ngeorge dislikes pencil.\nbob is tired.\ngeorge is an enemy of alice.\nball is soft.\nbob likes ball.\ncarol is a friend of eve.\n\nQUESTION:\nCould car is rough explain bob is strong?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1059,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(car).",
    "c": "heavy(X) :- red(X).\nbig(X) :- heavy(X).\ndirty(X) :- big(X).\nwet(X) :- dirty(X).\ndirty(X) :- wet(X).\nsoft(X) :- dirty(X).\nsmooth(X) :- soft(X).\nsoft(X) :- smooth(X).\nsmall(X) :- soft(X).\nold(X) :- small(X).\nowns(X,Z) :- rough(Z), clever(X), dislikes(X,V).\nexcited(Z) :- tired(Z), friend(Z,V), curious(V).\nlight(Z) :- rough(Z).\nowns(Z,X) :- excited(Z), rough(X), parent(Z,U).\nlight(X) :- light(X).\nrough(X) :- hard(X), clean(E).\ntall(X) :- hungry(X), enemy(X,B), strong(B).\nexcited(Z) :- funny(Z), calm(E).\nowns(X,Y) :- curious(X), clean(Y), likes(X,Y).\nbrave(X) :- weak(X), angry(X).\nfriendly(X) :- clever(X), busy(X).\nangry(X) :- brave(X).\nfunny(X) :- happy(X).\nnew(X) :- rough(X), clean(X).\nclean(X) :- rough(X).\nred(car).\nfriendly(alice).\nenemy(george,dave).\nfriend(carol,dave).\nsibling(eve,bob).\nhappy(eve).\nowns(frank,phone).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, Z, if there exists V such that object Z is rough and person X is clever and person X dislikes object V, then person X owns object Z.\nFor all Z, if there exists V such that person Z is tired and person Z is a friend of person V and person V is curious, then person Z is excited.\nFor all Z, if object Z is rough, then object Z is light.\nFor all X, Z, if there exists U such that person Z is excited and object X is rough and person Z is a parent of person U, then person Z owns object X.\nFor all X, if object X is light, then object X is light.\nFor all X, if there exists E such that object X is hard and object E is clean, then object X is rough.\nFor all X, if there exists B such that person X is hungry and person X is an enemy of person B and person B is strong, then person X is tall.\nFor all Z, if there exists E such that person Z is funny and person E is calm, then person Z is excited.\nFor all X, Y, if person X is curious and object Y is clean and person X likes object Y, then person X owns object Y.\nFor all X, if person X is weak and person X is angry, then person X is brave.\nFor all X, if person X is clever and person X is busy, then person X is friendly.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if object X is rough and object X is clean, then object X is new.\nFor all X, if object X is rough, then object X is clean.\n\nAnd the following facts:\ncar is red.\nalice is friendly.\ngeorge is an enemy of dave.\ncarol is a friend of dave.\neve is a sibling of bob.\neve is happy.\nfrank owns phone.\neve is an enemy of frank.\n\nQUESTION:\nIs car is old true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1060,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(eve).",
    "c": "heavy(X) :- red(X).\nbig(X) :- heavy(X).\ndirty(X) :- big(X).\nwet(X) :- dirty(X).\ndirty(X) :- wet(X).\nsoft(X) :- dirty(X).\nsmooth(X) :- soft(X).\nsoft(X) :- smooth(X).\nsmall(X) :- soft(X).\nold(X) :- small(X).\nowns(X,Z) :- rough(Z), clever(X), dislikes(X,V).\nexcited(Z) :- tired(Z), friend(Z,V), curious(V).\nlight(Z) :- rough(Z).\nowns(Z,X) :- excited(Z), rough(X), parent(Z,U).\nlight(X) :- light(X).\nrough(X) :- hard(X), clean(E).\ntall(X) :- hungry(X), enemy(X,B), strong(B).\nexcited(Z) :- funny(Z), calm(E).\nowns(X,Y) :- curious(X), clean(Y), likes(X,Y).\nbrave(X) :- weak(X), angry(X).\nfriendly(X) :- clever(X), busy(X).\nangry(X) :- brave(X).\nfunny(X) :- happy(X).\nnew(X) :- rough(X), clean(X).\nclean(X) :- rough(X).\nred(car).\nfriendly(alice).\nenemy(george,dave).\nfriend(carol,dave).\nsibling(eve,bob).\nhappy(eve).\nowns(frank,phone).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, Z, if there exists V such that object Z is rough and person X is clever and person X dislikes object V, then person X owns object Z.\nFor all Z, if there exists V such that person Z is tired and person Z is a friend of person V and person V is curious, then person Z is excited.\nFor all Z, if object Z is rough, then object Z is light.\nFor all X, Z, if there exists U such that person Z is excited and object X is rough and person Z is a parent of person U, then person Z owns object X.\nFor all X, if object X is light, then object X is light.\nFor all X, if there exists E such that object X is hard and object E is clean, then object X is rough.\nFor all X, if there exists B such that person X is hungry and person X is an enemy of person B and person B is strong, then person X is tall.\nFor all Z, if there exists E such that person Z is funny and person E is calm, then person Z is excited.\nFor all X, Y, if person X is curious and object Y is clean and person X likes object Y, then person X owns object Y.\nFor all X, if person X is weak and person X is angry, then person X is brave.\nFor all X, if person X is clever and person X is busy, then person X is friendly.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if object X is rough and object X is clean, then object X is new.\nFor all X, if object X is rough, then object X is clean.\n\nAnd the following facts:\ncar is red.\nalice is friendly.\ngeorge is an enemy of dave.\ncarol is a friend of dave.\neve is a sibling of bob.\neve is happy.\nfrank owns phone.\neve is an enemy of frank.\n\nQUESTION:\nIs eve is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1061,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "heavy(X) :- red(X).\nbig(X) :- heavy(X).\ndirty(X) :- big(X).\nwet(X) :- dirty(X).\ndirty(X) :- wet(X).\nsoft(X) :- dirty(X).\nsmooth(X) :- soft(X).\nsoft(X) :- smooth(X).\nsmall(X) :- soft(X).\nold(X) :- small(X).\nowns(X,Z) :- rough(Z), clever(X), dislikes(X,V).\nexcited(Z) :- tired(Z), friend(Z,V), curious(V).\nlight(Z) :- rough(Z).\nowns(Z,X) :- excited(Z), rough(X), parent(Z,U).\nlight(X) :- light(X).\nrough(X) :- hard(X), clean(E).\ntall(X) :- hungry(X), enemy(X,B), strong(B).\nexcited(Z) :- funny(Z), calm(E).\nowns(X,Y) :- curious(X), clean(Y), likes(X,Y).\nbrave(X) :- weak(X), angry(X).\nfriendly(X) :- clever(X), busy(X).\nangry(X) :- brave(X).\nfunny(X) :- happy(X).\nnew(X) :- rough(X), clean(X).\nclean(X) :- rough(X).\nold(car).\nfriendly(alice).\nenemy(george,dave).\nfriend(carol,dave).\nsibling(eve,bob).\nhappy(eve).\nowns(frank,phone).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, Z, if there exists V such that object Z is rough and person X is clever and person X dislikes object V, then person X owns object Z.\nFor all Z, if there exists V such that person Z is tired and person Z is a friend of person V and person V is curious, then person Z is excited.\nFor all Z, if object Z is rough, then object Z is light.\nFor all X, Z, if there exists U such that person Z is excited and object X is rough and person Z is a parent of person U, then person Z owns object X.\nFor all X, if object X is light, then object X is light.\nFor all X, if there exists E such that object X is hard and object E is clean, then object X is rough.\nFor all X, if there exists B such that person X is hungry and person X is an enemy of person B and person B is strong, then person X is tall.\nFor all Z, if there exists E such that person Z is funny and person E is calm, then person Z is excited.\nFor all X, Y, if person X is curious and object Y is clean and person X likes object Y, then person X owns object Y.\nFor all X, if person X is weak and person X is angry, then person X is brave.\nFor all X, if person X is clever and person X is busy, then person X is friendly.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if object X is rough and object X is clean, then object X is new.\nFor all X, if object X is rough, then object X is clean.\n\nAnd the following facts:\ncar is old.\nalice is friendly.\ngeorge is an enemy of dave.\ncarol is a friend of dave.\neve is a sibling of bob.\neve is happy.\nfrank owns phone.\neve is an enemy of frank.\n\nQUESTION:\nCould car is red explain car is old?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1062,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(eve).",
    "c": "heavy(X) :- red(X).\nbig(X) :- heavy(X).\ndirty(X) :- big(X).\nwet(X) :- dirty(X).\ndirty(X) :- wet(X).\nsoft(X) :- dirty(X).\nsmooth(X) :- soft(X).\nsoft(X) :- smooth(X).\nsmall(X) :- soft(X).\nold(X) :- small(X).\nowns(X,Z) :- rough(Z), clever(X), dislikes(X,V).\nexcited(Z) :- tired(Z), friend(Z,V), curious(V).\nlight(Z) :- rough(Z).\nowns(Z,X) :- excited(Z), rough(X), parent(Z,U).\nlight(X) :- light(X).\nrough(X) :- hard(X), clean(E).\ntall(X) :- hungry(X), enemy(X,B), strong(B).\nexcited(Z) :- funny(Z), calm(E).\nowns(X,Y) :- curious(X), clean(Y), likes(X,Y).\nbrave(X) :- weak(X), angry(X).\nfriendly(X) :- clever(X), busy(X).\nangry(X) :- brave(X).\nfunny(X) :- happy(X).\nnew(X) :- rough(X), clean(X).\nclean(X) :- rough(X).\nold(car).\nfriendly(alice).\nenemy(george,dave).\nfriend(carol,dave).\nsibling(eve,bob).\nhappy(eve).\nowns(frank,phone).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is dirty.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all X, if object X is small, then object X is old.\nFor all X, Z, if there exists V such that object Z is rough and person X is clever and person X dislikes object V, then person X owns object Z.\nFor all Z, if there exists V such that person Z is tired and person Z is a friend of person V and person V is curious, then person Z is excited.\nFor all Z, if object Z is rough, then object Z is light.\nFor all X, Z, if there exists U such that person Z is excited and object X is rough and person Z is a parent of person U, then person Z owns object X.\nFor all X, if object X is light, then object X is light.\nFor all X, if there exists E such that object X is hard and object E is clean, then object X is rough.\nFor all X, if there exists B such that person X is hungry and person X is an enemy of person B and person B is strong, then person X is tall.\nFor all Z, if there exists E such that person Z is funny and person E is calm, then person Z is excited.\nFor all X, Y, if person X is curious and object Y is clean and person X likes object Y, then person X owns object Y.\nFor all X, if person X is weak and person X is angry, then person X is brave.\nFor all X, if person X is clever and person X is busy, then person X is friendly.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if object X is rough and object X is clean, then object X is new.\nFor all X, if object X is rough, then object X is clean.\n\nAnd the following facts:\ncar is old.\nalice is friendly.\ngeorge is an enemy of dave.\ncarol is a friend of dave.\neve is a sibling of bob.\neve is happy.\nfrank owns phone.\neve is an enemy of frank.\n\nQUESTION:\nCould eve is hungry explain car is old?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1063,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(phone).",
    "c": "old(X) :- big(X).\ndirty(X) :- old(X).\nsmooth(X) :- dirty(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nclean(X) :- soft(X).\nwet(X) :- clean(X).\nlight(X) :- wet(X).\nhard(X) :- light(X).\nred(X) :- hard(X).\nheavy(X) :- new(X).\nsibling(X,Y) :- angry(Y), happy(X), friend(Y,V).\nfunny(Z) :- strong(Z).\nweak(Y) :- calm(Y), rough(F).\nbrave(Z) :- sad(Z), curious(C).\nangry(Y) :- sad(Y).\nbusy(Z) :- clever(Z), parent(Z,W), excited(W).\nbored(Z) :- happy(Z), likes(Z,A), heavy(A).\ntall(X) :- sad(X), dislikes(X,W), new(W).\nfriend(X,Y) :- busy(X), brave(Y).\nnew(X) :- rough(X), heavy(X).\nexcited(X) :- sad(X).\nangry(X) :- tall(X).\nhungry(X) :- friendly(X).\nbored(X) :- tall(X).\nbig(phone).\nhappy(eve).\nlikes(alice,ball).\nclever(eve).\nowns(dave,ball).\nsibling(carol,frank).\nfriend(alice,bob).\nsibling(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is new, then object X is heavy.\nFor all X, Y, if there exists V such that person Y is angry and person X is happy and person Y is a friend of person V, then person X is a sibling of person Y.\nFor all Z, if person Z is strong, then person Z is funny.\nFor all Y, if there exists F such that person Y is calm and object F is rough, then person Y is weak.\nFor all Z, if there exists C such that person Z is sad and person C is curious, then person Z is brave.\nFor all Y, if person Y is sad, then person Y is angry.\nFor all Z, if there exists W such that person Z is clever and person Z is a parent of person W and person W is excited, then person Z is busy.\nFor all Z, if there exists A such that person Z is happy and person Z likes object A and object A is heavy, then person Z is bored.\nFor all X, if there exists W such that person X is sad and person X dislikes object W and object W is new, then person X is tall.\nFor all X, Y, if person X is busy and person Y is brave, then person X is a friend of person Y.\nFor all X, if object X is rough and object X is heavy, then object X is new.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is friendly, then person X is hungry.\nFor all X, if person X is tall, then person X is bored.\n\nAnd the following facts:\nphone is big.\neve is happy.\nalice likes ball.\neve is clever.\ndave owns ball.\ncarol is a sibling of frank.\nalice is a friend of bob.\ngeorge is a sibling of frank.\n\nQUESTION:\nIs phone is red true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1064,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(phone).",
    "c": "old(X) :- big(X).\ndirty(X) :- old(X).\nsmooth(X) :- dirty(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nclean(X) :- soft(X).\nwet(X) :- clean(X).\nlight(X) :- wet(X).\nhard(X) :- light(X).\nred(X) :- hard(X).\nheavy(X) :- new(X).\nsibling(X,Y) :- angry(Y), happy(X), friend(Y,V).\nfunny(Z) :- strong(Z).\nweak(Y) :- calm(Y), rough(F).\nbrave(Z) :- sad(Z), curious(C).\nangry(Y) :- sad(Y).\nbusy(Z) :- clever(Z), parent(Z,W), excited(W).\nbored(Z) :- happy(Z), likes(Z,A), heavy(A).\ntall(X) :- sad(X), dislikes(X,W), new(W).\nfriend(X,Y) :- busy(X), brave(Y).\nnew(X) :- rough(X), heavy(X).\nexcited(X) :- sad(X).\nangry(X) :- tall(X).\nhungry(X) :- friendly(X).\nbored(X) :- tall(X).\nbig(phone).\nhappy(eve).\nlikes(alice,ball).\nclever(eve).\nowns(dave,ball).\nsibling(carol,frank).\nfriend(alice,bob).\nsibling(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is new, then object X is heavy.\nFor all X, Y, if there exists V such that person Y is angry and person X is happy and person Y is a friend of person V, then person X is a sibling of person Y.\nFor all Z, if person Z is strong, then person Z is funny.\nFor all Y, if there exists F such that person Y is calm and object F is rough, then person Y is weak.\nFor all Z, if there exists C such that person Z is sad and person C is curious, then person Z is brave.\nFor all Y, if person Y is sad, then person Y is angry.\nFor all Z, if there exists W such that person Z is clever and person Z is a parent of person W and person W is excited, then person Z is busy.\nFor all Z, if there exists A such that person Z is happy and person Z likes object A and object A is heavy, then person Z is bored.\nFor all X, if there exists W such that person X is sad and person X dislikes object W and object W is new, then person X is tall.\nFor all X, Y, if person X is busy and person Y is brave, then person X is a friend of person Y.\nFor all X, if object X is rough and object X is heavy, then object X is new.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is friendly, then person X is hungry.\nFor all X, if person X is tall, then person X is bored.\n\nAnd the following facts:\nphone is big.\neve is happy.\nalice likes ball.\neve is clever.\ndave owns ball.\ncarol is a sibling of frank.\nalice is a friend of bob.\ngeorge is a sibling of frank.\n\nQUESTION:\nIs phone is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1065,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(phone).",
    "c": "old(X) :- big(X).\ndirty(X) :- old(X).\nsmooth(X) :- dirty(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nclean(X) :- soft(X).\nwet(X) :- clean(X).\nlight(X) :- wet(X).\nhard(X) :- light(X).\nred(X) :- hard(X).\nheavy(X) :- new(X).\nsibling(X,Y) :- angry(Y), happy(X), friend(Y,V).\nfunny(Z) :- strong(Z).\nweak(Y) :- calm(Y), rough(F).\nbrave(Z) :- sad(Z), curious(C).\nangry(Y) :- sad(Y).\nbusy(Z) :- clever(Z), parent(Z,W), excited(W).\nbored(Z) :- happy(Z), likes(Z,A), heavy(A).\ntall(X) :- sad(X), dislikes(X,W), new(W).\nfriend(X,Y) :- busy(X), brave(Y).\nnew(X) :- rough(X), heavy(X).\nexcited(X) :- sad(X).\nangry(X) :- tall(X).\nhungry(X) :- friendly(X).\nbored(X) :- tall(X).\nred(phone).\nhappy(eve).\nlikes(alice,ball).\nclever(eve).\nowns(dave,ball).\nsibling(carol,frank).\nfriend(alice,bob).\nsibling(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is new, then object X is heavy.\nFor all X, Y, if there exists V such that person Y is angry and person X is happy and person Y is a friend of person V, then person X is a sibling of person Y.\nFor all Z, if person Z is strong, then person Z is funny.\nFor all Y, if there exists F such that person Y is calm and object F is rough, then person Y is weak.\nFor all Z, if there exists C such that person Z is sad and person C is curious, then person Z is brave.\nFor all Y, if person Y is sad, then person Y is angry.\nFor all Z, if there exists W such that person Z is clever and person Z is a parent of person W and person W is excited, then person Z is busy.\nFor all Z, if there exists A such that person Z is happy and person Z likes object A and object A is heavy, then person Z is bored.\nFor all X, if there exists W such that person X is sad and person X dislikes object W and object W is new, then person X is tall.\nFor all X, Y, if person X is busy and person Y is brave, then person X is a friend of person Y.\nFor all X, if object X is rough and object X is heavy, then object X is new.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is friendly, then person X is hungry.\nFor all X, if person X is tall, then person X is bored.\n\nAnd the following facts:\nphone is red.\neve is happy.\nalice likes ball.\neve is clever.\ndave owns ball.\ncarol is a sibling of frank.\nalice is a friend of bob.\ngeorge is a sibling of frank.\n\nQUESTION:\nCould phone is big explain phone is red?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1066,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(alice).",
    "c": "old(X) :- big(X).\ndirty(X) :- old(X).\nsmooth(X) :- dirty(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nclean(X) :- soft(X).\nwet(X) :- clean(X).\nlight(X) :- wet(X).\nhard(X) :- light(X).\nred(X) :- hard(X).\nheavy(X) :- new(X).\nsibling(X,Y) :- angry(Y), happy(X), friend(Y,V).\nfunny(Z) :- strong(Z).\nweak(Y) :- calm(Y), rough(F).\nbrave(Z) :- sad(Z), curious(C).\nangry(Y) :- sad(Y).\nbusy(Z) :- clever(Z), parent(Z,W), excited(W).\nbored(Z) :- happy(Z), likes(Z,A), heavy(A).\ntall(X) :- sad(X), dislikes(X,W), new(W).\nfriend(X,Y) :- busy(X), brave(Y).\nnew(X) :- rough(X), heavy(X).\nexcited(X) :- sad(X).\nangry(X) :- tall(X).\nhungry(X) :- friendly(X).\nbored(X) :- tall(X).\nred(phone).\nhappy(eve).\nlikes(alice,ball).\nclever(eve).\nowns(dave,ball).\nsibling(carol,frank).\nfriend(alice,bob).\nsibling(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is new, then object X is heavy.\nFor all X, Y, if there exists V such that person Y is angry and person X is happy and person Y is a friend of person V, then person X is a sibling of person Y.\nFor all Z, if person Z is strong, then person Z is funny.\nFor all Y, if there exists F such that person Y is calm and object F is rough, then person Y is weak.\nFor all Z, if there exists C such that person Z is sad and person C is curious, then person Z is brave.\nFor all Y, if person Y is sad, then person Y is angry.\nFor all Z, if there exists W such that person Z is clever and person Z is a parent of person W and person W is excited, then person Z is busy.\nFor all Z, if there exists A such that person Z is happy and person Z likes object A and object A is heavy, then person Z is bored.\nFor all X, if there exists W such that person X is sad and person X dislikes object W and object W is new, then person X is tall.\nFor all X, Y, if person X is busy and person Y is brave, then person X is a friend of person Y.\nFor all X, if object X is rough and object X is heavy, then object X is new.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is tall, then person X is angry.\nFor all X, if person X is friendly, then person X is hungry.\nFor all X, if person X is tall, then person X is bored.\n\nAnd the following facts:\nphone is red.\neve is happy.\nalice likes ball.\neve is clever.\ndave owns ball.\ncarol is a sibling of frank.\nalice is a friend of bob.\ngeorge is a sibling of frank.\n\nQUESTION:\nCould alice is excited explain phone is red?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1067,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(car).",
    "c": "rough(X) :- light(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nhard(X) :- clean(X).\nheavy(X) :- hard(X).\nsoft(X) :- heavy(X).\nwet(X) :- soft(X).\nred(X) :- wet(X).\nnew(X) :- red(X).\nsmooth(X) :- new(X).\nsibling(Y,X) :- sad(Y), bored(X), owns(Y,U).\nfunny(Y) :- bored(Y), owns(Y,V), big(V).\nowns(Y,Z) :- tired(Y), big(Z), friend(Y,W).\nweak(Z) :- brave(Z).\nhungry(Y) :- angry(Y), friend(Y,U), brave(U).\ncalm(Z) :- excited(Z).\nhappy(X) :- tall(X), owns(X,A), small(A).\nsad(Z) :- happy(Z), friend(Z,W), friendly(W).\nenemy(X,Y) :- busy(X), funny(Y).\nsad(X) :- strong(X).\nsad(X) :- bored(X), excited(X).\nbored(X) :- clever(X), funny(X).\nfriend(X,Y) :- friendly(X), curious(Y).\nenemy(X,Y) :- angry(X), hungry(Y).\ndislikes(X,Y) :- tired(X), dirty(Y).\nlight(car).\nlikes(dave,ball).\ndirty(pencil).\nowns(alice,pencil).\nfunny(george).\nbrave(eve).\ntired(dave).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, Y, if there exists U such that person Y is sad and person X is bored and person Y owns object U, then person Y is a sibling of person X.\nFor all Y, if there exists V such that person Y is bored and person Y owns object V and object V is big, then person Y is funny.\nFor all Y, Z, if there exists W such that person Y is tired and object Z is big and person Y is a friend of person W, then person Y owns object Z.\nFor all Z, if person Z is brave, then person Z is weak.\nFor all Y, if there exists U such that person Y is angry and person Y is a friend of person U and person U is brave, then person Y is hungry.\nFor all Z, if person Z is excited, then person Z is calm.\nFor all X, if there exists A such that person X is tall and person X owns object A and object A is small, then person X is happy.\nFor all Z, if there exists W such that person Z is happy and person Z is a friend of person W and person W is friendly, then person Z is sad.\nFor all X, Y, if person X is busy and person Y is funny, then person X is an enemy of person Y.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is bored and person X is excited, then person X is sad.\nFor all X, if person X is clever and person X is funny, then person X is bored.\nFor all X, Y, if person X is friendly and person Y is curious, then person X is a friend of person Y.\nFor all X, Y, if person X is angry and person Y is hungry, then person X is an enemy of person Y.\nFor all X, Y, if person X is tired and object Y is dirty, then person X dislikes object Y.\n\nAnd the following facts:\ncar is light.\ndave likes ball.\npencil is dirty.\nalice owns pencil.\ngeorge is funny.\neve is brave.\ndave is tired.\nfrank likes car.\n\nQUESTION:\nIs car is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1068,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(book).",
    "c": "rough(X) :- light(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nhard(X) :- clean(X).\nheavy(X) :- hard(X).\nsoft(X) :- heavy(X).\nwet(X) :- soft(X).\nred(X) :- wet(X).\nnew(X) :- red(X).\nsmooth(X) :- new(X).\nsibling(Y,X) :- sad(Y), bored(X), owns(Y,U).\nfunny(Y) :- bored(Y), owns(Y,V), big(V).\nowns(Y,Z) :- tired(Y), big(Z), friend(Y,W).\nweak(Z) :- brave(Z).\nhungry(Y) :- angry(Y), friend(Y,U), brave(U).\ncalm(Z) :- excited(Z).\nhappy(X) :- tall(X), owns(X,A), small(A).\nsad(Z) :- happy(Z), friend(Z,W), friendly(W).\nenemy(X,Y) :- busy(X), funny(Y).\nsad(X) :- strong(X).\nsad(X) :- bored(X), excited(X).\nbored(X) :- clever(X), funny(X).\nfriend(X,Y) :- friendly(X), curious(Y).\nenemy(X,Y) :- angry(X), hungry(Y).\ndislikes(X,Y) :- tired(X), dirty(Y).\nlight(car).\nlikes(dave,ball).\ndirty(pencil).\nowns(alice,pencil).\nfunny(george).\nbrave(eve).\ntired(dave).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, Y, if there exists U such that person Y is sad and person X is bored and person Y owns object U, then person Y is a sibling of person X.\nFor all Y, if there exists V such that person Y is bored and person Y owns object V and object V is big, then person Y is funny.\nFor all Y, Z, if there exists W such that person Y is tired and object Z is big and person Y is a friend of person W, then person Y owns object Z.\nFor all Z, if person Z is brave, then person Z is weak.\nFor all Y, if there exists U such that person Y is angry and person Y is a friend of person U and person U is brave, then person Y is hungry.\nFor all Z, if person Z is excited, then person Z is calm.\nFor all X, if there exists A such that person X is tall and person X owns object A and object A is small, then person X is happy.\nFor all Z, if there exists W such that person Z is happy and person Z is a friend of person W and person W is friendly, then person Z is sad.\nFor all X, Y, if person X is busy and person Y is funny, then person X is an enemy of person Y.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is bored and person X is excited, then person X is sad.\nFor all X, if person X is clever and person X is funny, then person X is bored.\nFor all X, Y, if person X is friendly and person Y is curious, then person X is a friend of person Y.\nFor all X, Y, if person X is angry and person Y is hungry, then person X is an enemy of person Y.\nFor all X, Y, if person X is tired and object Y is dirty, then person X dislikes object Y.\n\nAnd the following facts:\ncar is light.\ndave likes ball.\npencil is dirty.\nalice owns pencil.\ngeorge is funny.\neve is brave.\ndave is tired.\nfrank likes car.\n\nQUESTION:\nIs book is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1069,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "rough(X) :- light(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nhard(X) :- clean(X).\nheavy(X) :- hard(X).\nsoft(X) :- heavy(X).\nwet(X) :- soft(X).\nred(X) :- wet(X).\nnew(X) :- red(X).\nsmooth(X) :- new(X).\nsibling(Y,X) :- sad(Y), bored(X), owns(Y,U).\nfunny(Y) :- bored(Y), owns(Y,V), big(V).\nowns(Y,Z) :- tired(Y), big(Z), friend(Y,W).\nweak(Z) :- brave(Z).\nhungry(Y) :- angry(Y), friend(Y,U), brave(U).\ncalm(Z) :- excited(Z).\nhappy(X) :- tall(X), owns(X,A), small(A).\nsad(Z) :- happy(Z), friend(Z,W), friendly(W).\nenemy(X,Y) :- busy(X), funny(Y).\nsad(X) :- strong(X).\nsad(X) :- bored(X), excited(X).\nbored(X) :- clever(X), funny(X).\nfriend(X,Y) :- friendly(X), curious(Y).\nenemy(X,Y) :- angry(X), hungry(Y).\ndislikes(X,Y) :- tired(X), dirty(Y).\nsmooth(car).\nlikes(dave,ball).\ndirty(pencil).\nowns(alice,pencil).\nfunny(george).\nbrave(eve).\ntired(dave).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, Y, if there exists U such that person Y is sad and person X is bored and person Y owns object U, then person Y is a sibling of person X.\nFor all Y, if there exists V such that person Y is bored and person Y owns object V and object V is big, then person Y is funny.\nFor all Y, Z, if there exists W such that person Y is tired and object Z is big and person Y is a friend of person W, then person Y owns object Z.\nFor all Z, if person Z is brave, then person Z is weak.\nFor all Y, if there exists U such that person Y is angry and person Y is a friend of person U and person U is brave, then person Y is hungry.\nFor all Z, if person Z is excited, then person Z is calm.\nFor all X, if there exists A such that person X is tall and person X owns object A and object A is small, then person X is happy.\nFor all Z, if there exists W such that person Z is happy and person Z is a friend of person W and person W is friendly, then person Z is sad.\nFor all X, Y, if person X is busy and person Y is funny, then person X is an enemy of person Y.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is bored and person X is excited, then person X is sad.\nFor all X, if person X is clever and person X is funny, then person X is bored.\nFor all X, Y, if person X is friendly and person Y is curious, then person X is a friend of person Y.\nFor all X, Y, if person X is angry and person Y is hungry, then person X is an enemy of person Y.\nFor all X, Y, if person X is tired and object Y is dirty, then person X dislikes object Y.\n\nAnd the following facts:\ncar is smooth.\ndave likes ball.\npencil is dirty.\nalice owns pencil.\ngeorge is funny.\neve is brave.\ndave is tired.\nfrank likes car.\n\nQUESTION:\nCould car is light explain car is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1070,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "rough(X) :- light(X).\nold(X) :- rough(X).\nclean(X) :- old(X).\nhard(X) :- clean(X).\nheavy(X) :- hard(X).\nsoft(X) :- heavy(X).\nwet(X) :- soft(X).\nred(X) :- wet(X).\nnew(X) :- red(X).\nsmooth(X) :- new(X).\nsibling(Y,X) :- sad(Y), bored(X), owns(Y,U).\nfunny(Y) :- bored(Y), owns(Y,V), big(V).\nowns(Y,Z) :- tired(Y), big(Z), friend(Y,W).\nweak(Z) :- brave(Z).\nhungry(Y) :- angry(Y), friend(Y,U), brave(U).\ncalm(Z) :- excited(Z).\nhappy(X) :- tall(X), owns(X,A), small(A).\nsad(Z) :- happy(Z), friend(Z,W), friendly(W).\nenemy(X,Y) :- busy(X), funny(Y).\nsad(X) :- strong(X).\nsad(X) :- bored(X), excited(X).\nbored(X) :- clever(X), funny(X).\nfriend(X,Y) :- friendly(X), curious(Y).\nenemy(X,Y) :- angry(X), hungry(Y).\ndislikes(X,Y) :- tired(X), dirty(Y).\nsmooth(car).\nlikes(dave,ball).\ndirty(pencil).\nowns(alice,pencil).\nfunny(george).\nbrave(eve).\ntired(dave).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is smooth.\nFor all X, Y, if there exists U such that person Y is sad and person X is bored and person Y owns object U, then person Y is a sibling of person X.\nFor all Y, if there exists V such that person Y is bored and person Y owns object V and object V is big, then person Y is funny.\nFor all Y, Z, if there exists W such that person Y is tired and object Z is big and person Y is a friend of person W, then person Y owns object Z.\nFor all Z, if person Z is brave, then person Z is weak.\nFor all Y, if there exists U such that person Y is angry and person Y is a friend of person U and person U is brave, then person Y is hungry.\nFor all Z, if person Z is excited, then person Z is calm.\nFor all X, if there exists A such that person X is tall and person X owns object A and object A is small, then person X is happy.\nFor all Z, if there exists W such that person Z is happy and person Z is a friend of person W and person W is friendly, then person Z is sad.\nFor all X, Y, if person X is busy and person Y is funny, then person X is an enemy of person Y.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is bored and person X is excited, then person X is sad.\nFor all X, if person X is clever and person X is funny, then person X is bored.\nFor all X, Y, if person X is friendly and person Y is curious, then person X is a friend of person Y.\nFor all X, Y, if person X is angry and person Y is hungry, then person X is an enemy of person Y.\nFor all X, Y, if person X is tired and object Y is dirty, then person X dislikes object Y.\n\nAnd the following facts:\ncar is smooth.\ndave likes ball.\npencil is dirty.\nalice owns pencil.\ngeorge is funny.\neve is brave.\ndave is tired.\nfrank likes car.\n\nQUESTION:\nCould bob is hungry explain car is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1071,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(phone).",
    "c": "red(X) :- rough(X).\nhard(X) :- red(X).\nred(X) :- hard(X).\nheavy(X) :- red(X).\nsoft(X) :- heavy(X).\nlight(X) :- soft(X).\nhard(X) :- light(X).\ndirty(X) :- hard(X).\nsoft(X) :- dirty(X).\nold(X) :- soft(X).\nred(X) :- old(X).\nnew(X) :- red(X).\nclean(X) :- new(X).\nhard(X) :- clean(X).\nsoft(X) :- hard(X).\nnew(X) :- soft(X).\nclean(X) :- new(X).\nbig(X) :- clean(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nclever(X) :- happy(X), small(A).\nclever(Y) :- sad(Y), owns(Y,A), wet(A).\nparent(X,Y) :- sad(X), hungry(Y), enemy(X,Y).\ntired(X) :- busy(X).\nfunny(X) :- tired(X).\nrough(phone).\nparent(alice,carol).\nowns(bob,ball).\nenemy(eve,bob).\nenemy(bob,george).\nenemy(alice,bob).\nfriend(george,carol).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists A such that person X is happy and object A is small, then person X is clever.\nFor all Y, if there exists A such that person Y is sad and person Y owns object A and object A is wet, then person Y is clever.\nFor all X, Y, if person X is sad and person Y is hungry and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\n\nAnd the following facts:\nphone is rough.\nalice is a parent of carol.\nbob owns ball.\neve is an enemy of bob.\nbob is an enemy of george.\nalice is an enemy of bob.\ngeorge is a friend of carol.\nfrank is bored.\n\nQUESTION:\nIs phone is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1072,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(ball).",
    "c": "red(X) :- rough(X).\nhard(X) :- red(X).\nred(X) :- hard(X).\nheavy(X) :- red(X).\nsoft(X) :- heavy(X).\nlight(X) :- soft(X).\nhard(X) :- light(X).\ndirty(X) :- hard(X).\nsoft(X) :- dirty(X).\nold(X) :- soft(X).\nred(X) :- old(X).\nnew(X) :- red(X).\nclean(X) :- new(X).\nhard(X) :- clean(X).\nsoft(X) :- hard(X).\nnew(X) :- soft(X).\nclean(X) :- new(X).\nbig(X) :- clean(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nclever(X) :- happy(X), small(A).\nclever(Y) :- sad(Y), owns(Y,A), wet(A).\nparent(X,Y) :- sad(X), hungry(Y), enemy(X,Y).\ntired(X) :- busy(X).\nfunny(X) :- tired(X).\nrough(phone).\nparent(alice,carol).\nowns(bob,ball).\nenemy(eve,bob).\nenemy(bob,george).\nenemy(alice,bob).\nfriend(george,carol).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists A such that person X is happy and object A is small, then person X is clever.\nFor all Y, if there exists A such that person Y is sad and person Y owns object A and object A is wet, then person Y is clever.\nFor all X, Y, if person X is sad and person Y is hungry and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\n\nAnd the following facts:\nphone is rough.\nalice is a parent of carol.\nbob owns ball.\neve is an enemy of bob.\nbob is an enemy of george.\nalice is an enemy of bob.\ngeorge is a friend of carol.\nfrank is bored.\n\nQUESTION:\nIs ball is hard true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1073,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "red(X) :- rough(X).\nhard(X) :- red(X).\nred(X) :- hard(X).\nheavy(X) :- red(X).\nsoft(X) :- heavy(X).\nlight(X) :- soft(X).\nhard(X) :- light(X).\ndirty(X) :- hard(X).\nsoft(X) :- dirty(X).\nold(X) :- soft(X).\nred(X) :- old(X).\nnew(X) :- red(X).\nclean(X) :- new(X).\nhard(X) :- clean(X).\nsoft(X) :- hard(X).\nnew(X) :- soft(X).\nclean(X) :- new(X).\nbig(X) :- clean(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nclever(X) :- happy(X), small(A).\nclever(Y) :- sad(Y), owns(Y,A), wet(A).\nparent(X,Y) :- sad(X), hungry(Y), enemy(X,Y).\ntired(X) :- busy(X).\nfunny(X) :- tired(X).\nsmooth(phone).\nparent(alice,carol).\nowns(bob,ball).\nenemy(eve,bob).\nenemy(bob,george).\nenemy(alice,bob).\nfriend(george,carol).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists A such that person X is happy and object A is small, then person X is clever.\nFor all Y, if there exists A such that person Y is sad and person Y owns object A and object A is wet, then person Y is clever.\nFor all X, Y, if person X is sad and person Y is hungry and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\n\nAnd the following facts:\nphone is smooth.\nalice is a parent of carol.\nbob owns ball.\neve is an enemy of bob.\nbob is an enemy of george.\nalice is an enemy of bob.\ngeorge is a friend of carol.\nfrank is bored.\n\nQUESTION:\nCould phone is rough explain phone is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1074,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "weak(frank).",
    "c": "red(X) :- rough(X).\nhard(X) :- red(X).\nred(X) :- hard(X).\nheavy(X) :- red(X).\nsoft(X) :- heavy(X).\nlight(X) :- soft(X).\nhard(X) :- light(X).\ndirty(X) :- hard(X).\nsoft(X) :- dirty(X).\nold(X) :- soft(X).\nred(X) :- old(X).\nnew(X) :- red(X).\nclean(X) :- new(X).\nhard(X) :- clean(X).\nsoft(X) :- hard(X).\nnew(X) :- soft(X).\nclean(X) :- new(X).\nbig(X) :- clean(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nclever(X) :- happy(X), small(A).\nclever(Y) :- sad(Y), owns(Y,A), wet(A).\nparent(X,Y) :- sad(X), hungry(Y), enemy(X,Y).\ntired(X) :- busy(X).\nfunny(X) :- tired(X).\nsmooth(phone).\nparent(alice,carol).\nowns(bob,ball).\nenemy(eve,bob).\nenemy(bob,george).\nenemy(alice,bob).\nfriend(george,carol).\nbored(frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is heavy, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is old.\nFor all X, if object X is old, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is hard, then object X is soft.\nFor all X, if object X is soft, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists A such that person X is happy and object A is small, then person X is clever.\nFor all Y, if there exists A such that person Y is sad and person Y owns object A and object A is wet, then person Y is clever.\nFor all X, Y, if person X is sad and person Y is hungry and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is funny.\n\nAnd the following facts:\nphone is smooth.\nalice is a parent of carol.\nbob owns ball.\neve is an enemy of bob.\nbob is an enemy of george.\nalice is an enemy of bob.\ngeorge is a friend of carol.\nfrank is bored.\n\nQUESTION:\nCould frank is weak explain phone is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1075,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "tired(carol).",
    "c": "excited(X) :- busy(X).\nbrave(X) :- excited(X).\nhappy(X) :- brave(X).\nbusy(X) :- happy(X).\nhungry(X) :- busy(X).\ntall(X) :- hungry(X).\nhappy(X) :- tall(X).\nfriendly(X) :- happy(X).\ncurious(X) :- friendly(X).\ntired(X) :- curious(X).\nhungry(X) :- tired(X).\nstrong(X) :- hungry(X).\ncurious(X) :- strong(X).\nfunny(X) :- curious(X).\nfriendly(X) :- funny(X).\nweak(X) :- friendly(X).\nexcited(X) :- weak(X).\nclever(X) :- excited(X).\nweak(X) :- clever(X).\ntired(X) :- weak(X).\nenemy(Y,X) :- calm(Y), calm(X), enemy(Y,A).\ncalm(Y) :- calm(Y).\nsmooth(Z) :- dirty(Z), dislikes(A,Z), calm(A).\nsmall(X) :- new(X), hard(X).\nhard(X) :- soft(X).\nbusy(carol).\nparent(bob,frank).\ndislikes(dave,pencil).\ndislikes(dave,book).\nhard(phone).\nwet(book).\nfriend(george,bob).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is tired.\nFor all X, Y, if there exists A such that person Y is calm and person X is calm and person Y is an enemy of person A, then person Y is an enemy of person X.\nFor all Y, if person Y is calm, then person Y is calm.\nFor all Z, if there exists A such that object Z is dirty and person A dislikes object Z and person A is calm, then object Z is smooth.\nFor all X, if object X is new and object X is hard, then object X is small.\nFor all X, if object X is soft, then object X is hard.\n\nAnd the following facts:\ncarol is busy.\nbob is a parent of frank.\ndave dislikes pencil.\ndave dislikes book.\nphone is hard.\nbook is wet.\ngeorge is a friend of bob.\nbob is a parent of eve.\n\nQUESTION:\nIs carol is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1076,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(phone).",
    "c": "excited(X) :- busy(X).\nbrave(X) :- excited(X).\nhappy(X) :- brave(X).\nbusy(X) :- happy(X).\nhungry(X) :- busy(X).\ntall(X) :- hungry(X).\nhappy(X) :- tall(X).\nfriendly(X) :- happy(X).\ncurious(X) :- friendly(X).\ntired(X) :- curious(X).\nhungry(X) :- tired(X).\nstrong(X) :- hungry(X).\ncurious(X) :- strong(X).\nfunny(X) :- curious(X).\nfriendly(X) :- funny(X).\nweak(X) :- friendly(X).\nexcited(X) :- weak(X).\nclever(X) :- excited(X).\nweak(X) :- clever(X).\ntired(X) :- weak(X).\nenemy(Y,X) :- calm(Y), calm(X), enemy(Y,A).\ncalm(Y) :- calm(Y).\nsmooth(Z) :- dirty(Z), dislikes(A,Z), calm(A).\nsmall(X) :- new(X), hard(X).\nhard(X) :- soft(X).\nbusy(carol).\nparent(bob,frank).\ndislikes(dave,pencil).\ndislikes(dave,book).\nhard(phone).\nwet(book).\nfriend(george,bob).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is tired.\nFor all X, Y, if there exists A such that person Y is calm and person X is calm and person Y is an enemy of person A, then person Y is an enemy of person X.\nFor all Y, if person Y is calm, then person Y is calm.\nFor all Z, if there exists A such that object Z is dirty and person A dislikes object Z and person A is calm, then object Z is smooth.\nFor all X, if object X is new and object X is hard, then object X is small.\nFor all X, if object X is soft, then object X is hard.\n\nAnd the following facts:\ncarol is busy.\nbob is a parent of frank.\ndave dislikes pencil.\ndave dislikes book.\nphone is hard.\nbook is wet.\ngeorge is a friend of bob.\nbob is a parent of eve.\n\nQUESTION:\nIs phone is red true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1077,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(carol).",
    "c": "excited(X) :- busy(X).\nbrave(X) :- excited(X).\nhappy(X) :- brave(X).\nbusy(X) :- happy(X).\nhungry(X) :- busy(X).\ntall(X) :- hungry(X).\nhappy(X) :- tall(X).\nfriendly(X) :- happy(X).\ncurious(X) :- friendly(X).\ntired(X) :- curious(X).\nhungry(X) :- tired(X).\nstrong(X) :- hungry(X).\ncurious(X) :- strong(X).\nfunny(X) :- curious(X).\nfriendly(X) :- funny(X).\nweak(X) :- friendly(X).\nexcited(X) :- weak(X).\nclever(X) :- excited(X).\nweak(X) :- clever(X).\ntired(X) :- weak(X).\nenemy(Y,X) :- calm(Y), calm(X), enemy(Y,A).\ncalm(Y) :- calm(Y).\nsmooth(Z) :- dirty(Z), dislikes(A,Z), calm(A).\nsmall(X) :- new(X), hard(X).\nhard(X) :- soft(X).\ntired(carol).\nparent(bob,frank).\ndislikes(dave,pencil).\ndislikes(dave,book).\nhard(phone).\nwet(book).\nfriend(george,bob).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is tired.\nFor all X, Y, if there exists A such that person Y is calm and person X is calm and person Y is an enemy of person A, then person Y is an enemy of person X.\nFor all Y, if person Y is calm, then person Y is calm.\nFor all Z, if there exists A such that object Z is dirty and person A dislikes object Z and person A is calm, then object Z is smooth.\nFor all X, if object X is new and object X is hard, then object X is small.\nFor all X, if object X is soft, then object X is hard.\n\nAnd the following facts:\ncarol is tired.\nbob is a parent of frank.\ndave dislikes pencil.\ndave dislikes book.\nphone is hard.\nbook is wet.\ngeorge is a friend of bob.\nbob is a parent of eve.\n\nQUESTION:\nCould carol is busy explain carol is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1078,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "rough(phone).",
    "c": "excited(X) :- busy(X).\nbrave(X) :- excited(X).\nhappy(X) :- brave(X).\nbusy(X) :- happy(X).\nhungry(X) :- busy(X).\ntall(X) :- hungry(X).\nhappy(X) :- tall(X).\nfriendly(X) :- happy(X).\ncurious(X) :- friendly(X).\ntired(X) :- curious(X).\nhungry(X) :- tired(X).\nstrong(X) :- hungry(X).\ncurious(X) :- strong(X).\nfunny(X) :- curious(X).\nfriendly(X) :- funny(X).\nweak(X) :- friendly(X).\nexcited(X) :- weak(X).\nclever(X) :- excited(X).\nweak(X) :- clever(X).\ntired(X) :- weak(X).\nenemy(Y,X) :- calm(Y), calm(X), enemy(Y,A).\ncalm(Y) :- calm(Y).\nsmooth(Z) :- dirty(Z), dislikes(A,Z), calm(A).\nsmall(X) :- new(X), hard(X).\nhard(X) :- soft(X).\ntired(carol).\nparent(bob,frank).\ndislikes(dave,pencil).\ndislikes(dave,book).\nhard(phone).\nwet(book).\nfriend(george,bob).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is curious, then person X is tired.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is weak.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is tired.\nFor all X, Y, if there exists A such that person Y is calm and person X is calm and person Y is an enemy of person A, then person Y is an enemy of person X.\nFor all Y, if person Y is calm, then person Y is calm.\nFor all Z, if there exists A such that object Z is dirty and person A dislikes object Z and person A is calm, then object Z is smooth.\nFor all X, if object X is new and object X is hard, then object X is small.\nFor all X, if object X is soft, then object X is hard.\n\nAnd the following facts:\ncarol is tired.\nbob is a parent of frank.\ndave dislikes pencil.\ndave dislikes book.\nphone is hard.\nbook is wet.\ngeorge is a friend of bob.\nbob is a parent of eve.\n\nQUESTION:\nCould phone is rough explain carol is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1079,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "happy(george).",
    "c": "brave(X) :- weak(X).\nstrong(X) :- brave(X).\ntired(X) :- strong(X).\nhappy(X) :- tired(X).\nclever(X) :- happy(X).\nangry(X) :- clever(X).\nhungry(X) :- angry(X).\nexcited(X) :- hungry(X).\ncurious(X) :- excited(X).\nbusy(X) :- curious(X).\nfunny(X) :- busy(X).\ncalm(X) :- funny(X).\nbored(X) :- calm(X).\nsad(X) :- bored(X).\nfriendly(X) :- sad(X).\ntall(X) :- friendly(X).\nhappy(X) :- tall(X).\nhungry(X) :- happy(X).\nangry(X) :- hungry(X).\nhappy(X) :- angry(X).\nwet(Z) :- light(Z).\nbig(Y) :- old(Y), dislikes(W,Y), rough(C).\nsoft(X) :- hard(X), dislikes(A,X).\nbig(X) :- small(X).\nowns(X,Y) :- rough(Y).\nweak(george).\nsibling(bob,carol).\ndislikes(eve,pencil).\nsunny.\nowns(bob,car).\nenemy(dave,alice).\nfriend(dave,frank).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all Z, if object Z is light, then object Z is wet.\nFor all Y, if there exist C, W such that object Y is old and person W dislikes object Y and object C is rough, then object Y is big.\nFor all X, if there exists A such that object X is hard and person A dislikes object X, then object X is soft.\nFor all X, if object X is small, then object X is big.\nFor all X, Y, if object Y is rough, then person X owns object Y.\n\nAnd the following facts:\ngeorge is weak.\nbob is a sibling of carol.\neve dislikes pencil.\nit is sunny.\nbob owns car.\ndave is an enemy of alice.\ndave is a friend of frank.\napple is old.\n\nQUESTION:\nIs george is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1080,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(phone).",
    "c": "brave(X) :- weak(X).\nstrong(X) :- brave(X).\ntired(X) :- strong(X).\nhappy(X) :- tired(X).\nclever(X) :- happy(X).\nangry(X) :- clever(X).\nhungry(X) :- angry(X).\nexcited(X) :- hungry(X).\ncurious(X) :- excited(X).\nbusy(X) :- curious(X).\nfunny(X) :- busy(X).\ncalm(X) :- funny(X).\nbored(X) :- calm(X).\nsad(X) :- bored(X).\nfriendly(X) :- sad(X).\ntall(X) :- friendly(X).\nhappy(X) :- tall(X).\nhungry(X) :- happy(X).\nangry(X) :- hungry(X).\nhappy(X) :- angry(X).\nwet(Z) :- light(Z).\nbig(Y) :- old(Y), dislikes(W,Y), rough(C).\nsoft(X) :- hard(X), dislikes(A,X).\nbig(X) :- small(X).\nowns(X,Y) :- rough(Y).\nweak(george).\nsibling(bob,carol).\ndislikes(eve,pencil).\nsunny.\nowns(bob,car).\nenemy(dave,alice).\nfriend(dave,frank).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all Z, if object Z is light, then object Z is wet.\nFor all Y, if there exist C, W such that object Y is old and person W dislikes object Y and object C is rough, then object Y is big.\nFor all X, if there exists A such that object X is hard and person A dislikes object X, then object X is soft.\nFor all X, if object X is small, then object X is big.\nFor all X, Y, if object Y is rough, then person X owns object Y.\n\nAnd the following facts:\ngeorge is weak.\nbob is a sibling of carol.\neve dislikes pencil.\nit is sunny.\nbob owns car.\ndave is an enemy of alice.\ndave is a friend of frank.\napple is old.\n\nQUESTION:\nIs phone is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1081,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(george).",
    "c": "brave(X) :- weak(X).\nstrong(X) :- brave(X).\ntired(X) :- strong(X).\nhappy(X) :- tired(X).\nclever(X) :- happy(X).\nangry(X) :- clever(X).\nhungry(X) :- angry(X).\nexcited(X) :- hungry(X).\ncurious(X) :- excited(X).\nbusy(X) :- curious(X).\nfunny(X) :- busy(X).\ncalm(X) :- funny(X).\nbored(X) :- calm(X).\nsad(X) :- bored(X).\nfriendly(X) :- sad(X).\ntall(X) :- friendly(X).\nhappy(X) :- tall(X).\nhungry(X) :- happy(X).\nangry(X) :- hungry(X).\nhappy(X) :- angry(X).\nwet(Z) :- light(Z).\nbig(Y) :- old(Y), dislikes(W,Y), rough(C).\nsoft(X) :- hard(X), dislikes(A,X).\nbig(X) :- small(X).\nowns(X,Y) :- rough(Y).\nhappy(george).\nsibling(bob,carol).\ndislikes(eve,pencil).\nsunny.\nowns(bob,car).\nenemy(dave,alice).\nfriend(dave,frank).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all Z, if object Z is light, then object Z is wet.\nFor all Y, if there exist C, W such that object Y is old and person W dislikes object Y and object C is rough, then object Y is big.\nFor all X, if there exists A such that object X is hard and person A dislikes object X, then object X is soft.\nFor all X, if object X is small, then object X is big.\nFor all X, Y, if object Y is rough, then person X owns object Y.\n\nAnd the following facts:\ngeorge is happy.\nbob is a sibling of carol.\neve dislikes pencil.\nit is sunny.\nbob owns car.\ndave is an enemy of alice.\ndave is a friend of frank.\napple is old.\n\nQUESTION:\nCould george is weak explain george is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1082,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(apple).",
    "c": "brave(X) :- weak(X).\nstrong(X) :- brave(X).\ntired(X) :- strong(X).\nhappy(X) :- tired(X).\nclever(X) :- happy(X).\nangry(X) :- clever(X).\nhungry(X) :- angry(X).\nexcited(X) :- hungry(X).\ncurious(X) :- excited(X).\nbusy(X) :- curious(X).\nfunny(X) :- busy(X).\ncalm(X) :- funny(X).\nbored(X) :- calm(X).\nsad(X) :- bored(X).\nfriendly(X) :- sad(X).\ntall(X) :- friendly(X).\nhappy(X) :- tall(X).\nhungry(X) :- happy(X).\nangry(X) :- hungry(X).\nhappy(X) :- angry(X).\nwet(Z) :- light(Z).\nbig(Y) :- old(Y), dislikes(W,Y), rough(C).\nsoft(X) :- hard(X), dislikes(A,X).\nbig(X) :- small(X).\nowns(X,Y) :- rough(Y).\nhappy(george).\nsibling(bob,carol).\ndislikes(eve,pencil).\nsunny.\nowns(bob,car).\nenemy(dave,alice).\nfriend(dave,frank).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is happy.\nFor all Z, if object Z is light, then object Z is wet.\nFor all Y, if there exist C, W such that object Y is old and person W dislikes object Y and object C is rough, then object Y is big.\nFor all X, if there exists A such that object X is hard and person A dislikes object X, then object X is soft.\nFor all X, if object X is small, then object X is big.\nFor all X, Y, if object Y is rough, then person X owns object Y.\n\nAnd the following facts:\ngeorge is happy.\nbob is a sibling of carol.\neve dislikes pencil.\nit is sunny.\nbob owns car.\ndave is an enemy of alice.\ndave is a friend of frank.\napple is old.\n\nQUESTION:\nCould apple is hard explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1083,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "red(X) :- rough(X).\nclean(X) :- red(X).\ndirty(X) :- clean(X).\nheavy(X) :- dirty(X).\nold(X) :- heavy(X).\nwet(X) :- old(X).\nlight(X) :- wet(X).\nsmooth(X) :- light(X).\nsmall(X) :- smooth(X).\nnew(X) :- small(X).\nhard(X) :- new(X).\nbig(X) :- hard(X).\nsoft(X) :- big(X).\nsoft(X) :- soft(X).\nhard(X) :- soft(X).\nrough(X) :- hard(X).\nrough(X) :- rough(X).\nbig(X) :- rough(X).\nlight(X) :- big(X).\nsmall(X) :- light(X).\nbusy(Y) :- tall(Y), enemy(Y,W), brave(W).\nweak(Y) :- tall(Y), dislikes(Y,U), busy(D).\nparent(X,Y) :- friendly(X), sad(Y).\nfunny(X) :- hungry(X), calm(X).\nangry(X) :- friendly(X), bored(X).\nrough(phone).\nexcited(eve).\nenemy(george,dave).\nlikes(carol,pencil).\nbored(eve).\nowns(frank,book).\nexcited(frank).\nowns(carol,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all Y, if there exists W such that person Y is tall and person Y is an enemy of person W and person W is brave, then person Y is busy.\nFor all Y, if there exist D, U such that person Y is tall and person Y dislikes object U and person D is busy, then person Y is weak.\nFor all X, Y, if person X is friendly and person Y is sad, then person X is a parent of person Y.\nFor all X, if person X is hungry and person X is calm, then person X is funny.\nFor all X, if person X is friendly and person X is bored, then person X is angry.\n\nAnd the following facts:\nphone is rough.\neve is excited.\ngeorge is an enemy of dave.\ncarol likes pencil.\neve is bored.\nfrank owns book.\nfrank is excited.\ncarol owns apple.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1084,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(bob).",
    "c": "red(X) :- rough(X).\nclean(X) :- red(X).\ndirty(X) :- clean(X).\nheavy(X) :- dirty(X).\nold(X) :- heavy(X).\nwet(X) :- old(X).\nlight(X) :- wet(X).\nsmooth(X) :- light(X).\nsmall(X) :- smooth(X).\nnew(X) :- small(X).\nhard(X) :- new(X).\nbig(X) :- hard(X).\nsoft(X) :- big(X).\nsoft(X) :- soft(X).\nhard(X) :- soft(X).\nrough(X) :- hard(X).\nrough(X) :- rough(X).\nbig(X) :- rough(X).\nlight(X) :- big(X).\nsmall(X) :- light(X).\nbusy(Y) :- tall(Y), enemy(Y,W), brave(W).\nweak(Y) :- tall(Y), dislikes(Y,U), busy(D).\nparent(X,Y) :- friendly(X), sad(Y).\nfunny(X) :- hungry(X), calm(X).\nangry(X) :- friendly(X), bored(X).\nrough(phone).\nexcited(eve).\nenemy(george,dave).\nlikes(carol,pencil).\nbored(eve).\nowns(frank,book).\nexcited(frank).\nowns(carol,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all Y, if there exists W such that person Y is tall and person Y is an enemy of person W and person W is brave, then person Y is busy.\nFor all Y, if there exist D, U such that person Y is tall and person Y dislikes object U and person D is busy, then person Y is weak.\nFor all X, Y, if person X is friendly and person Y is sad, then person X is a parent of person Y.\nFor all X, if person X is hungry and person X is calm, then person X is funny.\nFor all X, if person X is friendly and person X is bored, then person X is angry.\n\nAnd the following facts:\nphone is rough.\neve is excited.\ngeorge is an enemy of dave.\ncarol likes pencil.\neve is bored.\nfrank owns book.\nfrank is excited.\ncarol owns apple.\n\nQUESTION:\nIs bob is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1085,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(phone).",
    "c": "red(X) :- rough(X).\nclean(X) :- red(X).\ndirty(X) :- clean(X).\nheavy(X) :- dirty(X).\nold(X) :- heavy(X).\nwet(X) :- old(X).\nlight(X) :- wet(X).\nsmooth(X) :- light(X).\nsmall(X) :- smooth(X).\nnew(X) :- small(X).\nhard(X) :- new(X).\nbig(X) :- hard(X).\nsoft(X) :- big(X).\nsoft(X) :- soft(X).\nhard(X) :- soft(X).\nrough(X) :- hard(X).\nrough(X) :- rough(X).\nbig(X) :- rough(X).\nlight(X) :- big(X).\nsmall(X) :- light(X).\nbusy(Y) :- tall(Y), enemy(Y,W), brave(W).\nweak(Y) :- tall(Y), dislikes(Y,U), busy(D).\nparent(X,Y) :- friendly(X), sad(Y).\nfunny(X) :- hungry(X), calm(X).\nangry(X) :- friendly(X), bored(X).\nsmall(phone).\nexcited(eve).\nenemy(george,dave).\nlikes(carol,pencil).\nbored(eve).\nowns(frank,book).\nexcited(frank).\nowns(carol,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all Y, if there exists W such that person Y is tall and person Y is an enemy of person W and person W is brave, then person Y is busy.\nFor all Y, if there exist D, U such that person Y is tall and person Y dislikes object U and person D is busy, then person Y is weak.\nFor all X, Y, if person X is friendly and person Y is sad, then person X is a parent of person Y.\nFor all X, if person X is hungry and person X is calm, then person X is funny.\nFor all X, if person X is friendly and person X is bored, then person X is angry.\n\nAnd the following facts:\nphone is small.\neve is excited.\ngeorge is an enemy of dave.\ncarol likes pencil.\neve is bored.\nfrank owns book.\nfrank is excited.\ncarol owns apple.\n\nQUESTION:\nCould phone is rough explain phone is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1086,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(george).",
    "c": "red(X) :- rough(X).\nclean(X) :- red(X).\ndirty(X) :- clean(X).\nheavy(X) :- dirty(X).\nold(X) :- heavy(X).\nwet(X) :- old(X).\nlight(X) :- wet(X).\nsmooth(X) :- light(X).\nsmall(X) :- smooth(X).\nnew(X) :- small(X).\nhard(X) :- new(X).\nbig(X) :- hard(X).\nsoft(X) :- big(X).\nsoft(X) :- soft(X).\nhard(X) :- soft(X).\nrough(X) :- hard(X).\nrough(X) :- rough(X).\nbig(X) :- rough(X).\nlight(X) :- big(X).\nsmall(X) :- light(X).\nbusy(Y) :- tall(Y), enemy(Y,W), brave(W).\nweak(Y) :- tall(Y), dislikes(Y,U), busy(D).\nparent(X,Y) :- friendly(X), sad(Y).\nfunny(X) :- hungry(X), calm(X).\nangry(X) :- friendly(X), bored(X).\nsmall(phone).\nexcited(eve).\nenemy(george,dave).\nlikes(carol,pencil).\nbored(eve).\nowns(frank,book).\nexcited(frank).\nowns(carol,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is dirty, then object X is heavy.\nFor all X, if object X is heavy, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is new.\nFor all X, if object X is new, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is rough.\nFor all X, if object X is rough, then object X is rough.\nFor all X, if object X is rough, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all Y, if there exists W such that person Y is tall and person Y is an enemy of person W and person W is brave, then person Y is busy.\nFor all Y, if there exist D, U such that person Y is tall and person Y dislikes object U and person D is busy, then person Y is weak.\nFor all X, Y, if person X is friendly and person Y is sad, then person X is a parent of person Y.\nFor all X, if person X is hungry and person X is calm, then person X is funny.\nFor all X, if person X is friendly and person X is bored, then person X is angry.\n\nAnd the following facts:\nphone is small.\neve is excited.\ngeorge is an enemy of dave.\ncarol likes pencil.\neve is bored.\nfrank owns book.\nfrank is excited.\ncarol owns apple.\n\nQUESTION:\nCould george is happy explain phone is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1087,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(eve).",
    "c": "bored(X) :- clever(X).\nhungry(Z) :- weak(Z), friend(Z,A), friendly(A).\nbrave(Z) :- calm(Z).\nowns(Z,Y) :- clean(Y), curious(Z).\nfriendly(Z) :- calm(Z), hard(E).\ntall(Z) :- calm(Z), owns(Z,B), big(B).\nheavy(X) :- old(X), owns(U,X), funny(U).\ncurious(Z) :- tall(Z), friend(Z,U), curious(U).\nnew(Z) :- smooth(Z), dislikes(U,Z), excited(U).\nsibling(X,Y) :- hungry(Y), tired(X), enemy(Y,U).\nweak(Z) :- friendly(Z), likes(Z,U), soft(U).\nrough(X) :- dirty(X), likes(V,X), excited(V).\nhappy(X) :- weak(X), sad(X).\nsmall(X) :- smooth(X), hard(X).\nlight(X) :- rough(X).\nheavy(X) :- smooth(X).\nsmooth(X) :- red(X), old(X).\ndislikes(X,Y) :- brave(X), wet(Y), likes(X,Y).\nsmall(X) :- red(X).\ntall(X) :- hungry(X).\nfriend(X,Y) :- angry(X), angry(Y), parent(X,Y).\nold(X) :- hard(X), new(X).\nsad(X) :- weak(X), tall(X).\nsmall(X) :- hard(X), old(X).\ntall(X) :- happy(X), calm(X).\nclever(eve).\nexcited(dave).\nsibling(carol,bob).\nenemy(alice,frank).\nowns(george,apple).\nweak(alice).\nenemy(george,carol).\nhungry(dave).\nfunny(dave).\nfriend(bob,dave).\nstrong(frank).\ndirty(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is bored.\nFor all Z, if there exists A such that person Z is weak and person Z is a friend of person A and person A is friendly, then person Z is hungry.\nFor all Z, if person Z is calm, then person Z is brave.\nFor all Y, Z, if object Y is clean and person Z is curious, then person Z owns object Y.\nFor all Z, if there exists E such that person Z is calm and object E is hard, then person Z is friendly.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is big, then person Z is tall.\nFor all X, if there exists U such that object X is old and person U owns object X and person U is funny, then object X is heavy.\nFor all Z, if there exists U such that person Z is tall and person Z is a friend of person U and person U is curious, then person Z is curious.\nFor all Z, if there exists U such that object Z is smooth and person U dislikes object Z and person U is excited, then object Z is new.\nFor all X, Y, if there exists U such that person Y is hungry and person X is tired and person Y is an enemy of person U, then person X is a sibling of person Y.\nFor all Z, if there exists U such that person Z is friendly and person Z likes object U and object U is soft, then person Z is weak.\nFor all X, if there exists V such that object X is dirty and person V likes object X and person V is excited, then object X is rough.\nFor all X, if person X is weak and person X is sad, then person X is happy.\nFor all X, if object X is smooth and object X is hard, then object X is small.\nFor all X, if object X is rough, then object X is light.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is red and object X is old, then object X is smooth.\nFor all X, Y, if person X is brave and object Y is wet and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, Y, if person X is angry and person Y is angry and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if object X is hard and object X is new, then object X is old.\nFor all X, if person X is weak and person X is tall, then person X is sad.\nFor all X, if object X is hard and object X is old, then object X is small.\nFor all X, if person X is happy and person X is calm, then person X is tall.\n\nAnd the following facts:\neve is clever.\ndave is excited.\ncarol is a sibling of bob.\nalice is an enemy of frank.\ngeorge owns apple.\nalice is weak.\ngeorge is an enemy of carol.\ndave is hungry.\ndave is funny.\nbob is a friend of dave.\nfrank is strong.\nbook is dirty.\n\nQUESTION:\nIs eve is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1088,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "bored(X) :- clever(X).\nhungry(Z) :- weak(Z), friend(Z,A), friendly(A).\nbrave(Z) :- calm(Z).\nowns(Z,Y) :- clean(Y), curious(Z).\nfriendly(Z) :- calm(Z), hard(E).\ntall(Z) :- calm(Z), owns(Z,B), big(B).\nheavy(X) :- old(X), owns(U,X), funny(U).\ncurious(Z) :- tall(Z), friend(Z,U), curious(U).\nnew(Z) :- smooth(Z), dislikes(U,Z), excited(U).\nsibling(X,Y) :- hungry(Y), tired(X), enemy(Y,U).\nweak(Z) :- friendly(Z), likes(Z,U), soft(U).\nrough(X) :- dirty(X), likes(V,X), excited(V).\nhappy(X) :- weak(X), sad(X).\nsmall(X) :- smooth(X), hard(X).\nlight(X) :- rough(X).\nheavy(X) :- smooth(X).\nsmooth(X) :- red(X), old(X).\ndislikes(X,Y) :- brave(X), wet(Y), likes(X,Y).\nsmall(X) :- red(X).\ntall(X) :- hungry(X).\nfriend(X,Y) :- angry(X), angry(Y), parent(X,Y).\nold(X) :- hard(X), new(X).\nsad(X) :- weak(X), tall(X).\nsmall(X) :- hard(X), old(X).\ntall(X) :- happy(X), calm(X).\nclever(eve).\nexcited(dave).\nsibling(carol,bob).\nenemy(alice,frank).\nowns(george,apple).\nweak(alice).\nenemy(george,carol).\nhungry(dave).\nfunny(dave).\nfriend(bob,dave).\nstrong(frank).\ndirty(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is bored.\nFor all Z, if there exists A such that person Z is weak and person Z is a friend of person A and person A is friendly, then person Z is hungry.\nFor all Z, if person Z is calm, then person Z is brave.\nFor all Y, Z, if object Y is clean and person Z is curious, then person Z owns object Y.\nFor all Z, if there exists E such that person Z is calm and object E is hard, then person Z is friendly.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is big, then person Z is tall.\nFor all X, if there exists U such that object X is old and person U owns object X and person U is funny, then object X is heavy.\nFor all Z, if there exists U such that person Z is tall and person Z is a friend of person U and person U is curious, then person Z is curious.\nFor all Z, if there exists U such that object Z is smooth and person U dislikes object Z and person U is excited, then object Z is new.\nFor all X, Y, if there exists U such that person Y is hungry and person X is tired and person Y is an enemy of person U, then person X is a sibling of person Y.\nFor all Z, if there exists U such that person Z is friendly and person Z likes object U and object U is soft, then person Z is weak.\nFor all X, if there exists V such that object X is dirty and person V likes object X and person V is excited, then object X is rough.\nFor all X, if person X is weak and person X is sad, then person X is happy.\nFor all X, if object X is smooth and object X is hard, then object X is small.\nFor all X, if object X is rough, then object X is light.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is red and object X is old, then object X is smooth.\nFor all X, Y, if person X is brave and object Y is wet and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, Y, if person X is angry and person Y is angry and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if object X is hard and object X is new, then object X is old.\nFor all X, if person X is weak and person X is tall, then person X is sad.\nFor all X, if object X is hard and object X is old, then object X is small.\nFor all X, if person X is happy and person X is calm, then person X is tall.\n\nAnd the following facts:\neve is clever.\ndave is excited.\ncarol is a sibling of bob.\nalice is an enemy of frank.\ngeorge owns apple.\nalice is weak.\ngeorge is an enemy of carol.\ndave is hungry.\ndave is funny.\nbob is a friend of dave.\nfrank is strong.\nbook is dirty.\n\nQUESTION:\nIs dave is weak true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1089,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(eve).",
    "c": "bored(X) :- clever(X).\nhungry(Z) :- weak(Z), friend(Z,A), friendly(A).\nbrave(Z) :- calm(Z).\nowns(Z,Y) :- clean(Y), curious(Z).\nfriendly(Z) :- calm(Z), hard(E).\ntall(Z) :- calm(Z), owns(Z,B), big(B).\nheavy(X) :- old(X), owns(U,X), funny(U).\ncurious(Z) :- tall(Z), friend(Z,U), curious(U).\nnew(Z) :- smooth(Z), dislikes(U,Z), excited(U).\nsibling(X,Y) :- hungry(Y), tired(X), enemy(Y,U).\nweak(Z) :- friendly(Z), likes(Z,U), soft(U).\nrough(X) :- dirty(X), likes(V,X), excited(V).\nhappy(X) :- weak(X), sad(X).\nsmall(X) :- smooth(X), hard(X).\nlight(X) :- rough(X).\nheavy(X) :- smooth(X).\nsmooth(X) :- red(X), old(X).\ndislikes(X,Y) :- brave(X), wet(Y), likes(X,Y).\nsmall(X) :- red(X).\ntall(X) :- hungry(X).\nfriend(X,Y) :- angry(X), angry(Y), parent(X,Y).\nold(X) :- hard(X), new(X).\nsad(X) :- weak(X), tall(X).\nsmall(X) :- hard(X), old(X).\ntall(X) :- happy(X), calm(X).\nbored(eve).\nexcited(dave).\nsibling(carol,bob).\nenemy(alice,frank).\nowns(george,apple).\nweak(alice).\nenemy(george,carol).\nhungry(dave).\nfunny(dave).\nfriend(bob,dave).\nstrong(frank).\ndirty(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is bored.\nFor all Z, if there exists A such that person Z is weak and person Z is a friend of person A and person A is friendly, then person Z is hungry.\nFor all Z, if person Z is calm, then person Z is brave.\nFor all Y, Z, if object Y is clean and person Z is curious, then person Z owns object Y.\nFor all Z, if there exists E such that person Z is calm and object E is hard, then person Z is friendly.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is big, then person Z is tall.\nFor all X, if there exists U such that object X is old and person U owns object X and person U is funny, then object X is heavy.\nFor all Z, if there exists U such that person Z is tall and person Z is a friend of person U and person U is curious, then person Z is curious.\nFor all Z, if there exists U such that object Z is smooth and person U dislikes object Z and person U is excited, then object Z is new.\nFor all X, Y, if there exists U such that person Y is hungry and person X is tired and person Y is an enemy of person U, then person X is a sibling of person Y.\nFor all Z, if there exists U such that person Z is friendly and person Z likes object U and object U is soft, then person Z is weak.\nFor all X, if there exists V such that object X is dirty and person V likes object X and person V is excited, then object X is rough.\nFor all X, if person X is weak and person X is sad, then person X is happy.\nFor all X, if object X is smooth and object X is hard, then object X is small.\nFor all X, if object X is rough, then object X is light.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is red and object X is old, then object X is smooth.\nFor all X, Y, if person X is brave and object Y is wet and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, Y, if person X is angry and person Y is angry and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if object X is hard and object X is new, then object X is old.\nFor all X, if person X is weak and person X is tall, then person X is sad.\nFor all X, if object X is hard and object X is old, then object X is small.\nFor all X, if person X is happy and person X is calm, then person X is tall.\n\nAnd the following facts:\neve is bored.\ndave is excited.\ncarol is a sibling of bob.\nalice is an enemy of frank.\ngeorge owns apple.\nalice is weak.\ngeorge is an enemy of carol.\ndave is hungry.\ndave is funny.\nbob is a friend of dave.\nfrank is strong.\nbook is dirty.\n\nQUESTION:\nCould eve is clever explain eve is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1090,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(eve).",
    "c": "bored(X) :- clever(X).\nhungry(Z) :- weak(Z), friend(Z,A), friendly(A).\nbrave(Z) :- calm(Z).\nowns(Z,Y) :- clean(Y), curious(Z).\nfriendly(Z) :- calm(Z), hard(E).\ntall(Z) :- calm(Z), owns(Z,B), big(B).\nheavy(X) :- old(X), owns(U,X), funny(U).\ncurious(Z) :- tall(Z), friend(Z,U), curious(U).\nnew(Z) :- smooth(Z), dislikes(U,Z), excited(U).\nsibling(X,Y) :- hungry(Y), tired(X), enemy(Y,U).\nweak(Z) :- friendly(Z), likes(Z,U), soft(U).\nrough(X) :- dirty(X), likes(V,X), excited(V).\nhappy(X) :- weak(X), sad(X).\nsmall(X) :- smooth(X), hard(X).\nlight(X) :- rough(X).\nheavy(X) :- smooth(X).\nsmooth(X) :- red(X), old(X).\ndislikes(X,Y) :- brave(X), wet(Y), likes(X,Y).\nsmall(X) :- red(X).\ntall(X) :- hungry(X).\nfriend(X,Y) :- angry(X), angry(Y), parent(X,Y).\nold(X) :- hard(X), new(X).\nsad(X) :- weak(X), tall(X).\nsmall(X) :- hard(X), old(X).\ntall(X) :- happy(X), calm(X).\nbored(eve).\nexcited(dave).\nsibling(carol,bob).\nenemy(alice,frank).\nowns(george,apple).\nweak(alice).\nenemy(george,carol).\nhungry(dave).\nfunny(dave).\nfriend(bob,dave).\nstrong(frank).\ndirty(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is clever, then person X is bored.\nFor all Z, if there exists A such that person Z is weak and person Z is a friend of person A and person A is friendly, then person Z is hungry.\nFor all Z, if person Z is calm, then person Z is brave.\nFor all Y, Z, if object Y is clean and person Z is curious, then person Z owns object Y.\nFor all Z, if there exists E such that person Z is calm and object E is hard, then person Z is friendly.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is big, then person Z is tall.\nFor all X, if there exists U such that object X is old and person U owns object X and person U is funny, then object X is heavy.\nFor all Z, if there exists U such that person Z is tall and person Z is a friend of person U and person U is curious, then person Z is curious.\nFor all Z, if there exists U such that object Z is smooth and person U dislikes object Z and person U is excited, then object Z is new.\nFor all X, Y, if there exists U such that person Y is hungry and person X is tired and person Y is an enemy of person U, then person X is a sibling of person Y.\nFor all Z, if there exists U such that person Z is friendly and person Z likes object U and object U is soft, then person Z is weak.\nFor all X, if there exists V such that object X is dirty and person V likes object X and person V is excited, then object X is rough.\nFor all X, if person X is weak and person X is sad, then person X is happy.\nFor all X, if object X is smooth and object X is hard, then object X is small.\nFor all X, if object X is rough, then object X is light.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if object X is red and object X is old, then object X is smooth.\nFor all X, Y, if person X is brave and object Y is wet and person X likes object Y, then person X dislikes object Y.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is hungry, then person X is tall.\nFor all X, Y, if person X is angry and person Y is angry and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if object X is hard and object X is new, then object X is old.\nFor all X, if person X is weak and person X is tall, then person X is sad.\nFor all X, if object X is hard and object X is old, then object X is small.\nFor all X, if person X is happy and person X is calm, then person X is tall.\n\nAnd the following facts:\neve is bored.\ndave is excited.\ncarol is a sibling of bob.\nalice is an enemy of frank.\ngeorge owns apple.\nalice is weak.\ngeorge is an enemy of carol.\ndave is hungry.\ndave is funny.\nbob is a friend of dave.\nfrank is strong.\nbook is dirty.\n\nQUESTION:\nCould eve is calm explain eve is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1091,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(dave).",
    "c": "calm(X) :- tall(X).\nrough(X) :- dirty(X), owns(W,X), bored(W).\nclever(X) :- weak(X), enemy(X,A), hungry(A).\nred(X) :- red(X), dislikes(U,X), friendly(U).\nfriend(X,Z) :- clever(Z), friendly(X), likes(Z,V).\nstrong(Y) :- sad(Y), parent(Y,V), hungry(V).\nfriendly(Y) :- curious(Y), likes(Y,V), big(V).\nbig(X) :- small(X).\nlikes(Z,Y) :- old(Y), curious(Z), likes(V,Y).\ncurious(Z) :- strong(Z), owns(Z,A), clean(A).\ndirty(X) :- dirty(X), owns(B,X), hungry(B).\nsad(X) :- bored(X), clever(X).\nfriend(X,Y) :- tired(X), sad(Y).\nrough(X) :- old(X).\nparent(X,Y) :- weak(X), weak(Y).\nhungry(X) :- angry(X).\nfunny(X) :- tired(X).\nangry(X) :- busy(X), busy(X).\nenemy(X,Y) :- funny(X), weak(Y).\nbored(X) :- brave(X).\nbored(X) :- clever(X).\nsmall(X) :- hard(X).\nhard(X) :- big(X), rough(X).\nlight(X) :- small(X), red(X).\nwet(X) :- small(X).\ntall(dave).\nstrong(frank).\ndislikes(carol,phone).\nhard(book).\ndirty(book).\nparent(alice,george).\nsibling(bob,dave).\nfriend(dave,george).\nbored(carol).\nfriendly(bob).\nwet(car).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is calm.\nFor all X, if there exists W such that object X is dirty and person W owns object X and person W is bored, then object X is rough.\nFor all X, if there exists A such that person X is weak and person X is an enemy of person A and person A is hungry, then person X is clever.\nFor all X, if there exists U such that object X is red and person U dislikes object X and person U is friendly, then object X is red.\nFor all X, Z, if there exists V such that person Z is clever and person X is friendly and person Z likes object V, then person X is a friend of person Z.\nFor all Y, if there exists V such that person Y is sad and person Y is a parent of person V and person V is hungry, then person Y is strong.\nFor all Y, if there exists V such that person Y is curious and person Y likes object V and object V is big, then person Y is friendly.\nFor all X, if object X is small, then object X is big.\nFor all Y, Z, if there exists V such that object Y is old and person Z is curious and person V likes object Y, then person Z likes object Y.\nFor all Z, if there exists A such that person Z is strong and person Z owns object A and object A is clean, then person Z is curious.\nFor all X, if there exists B such that object X is dirty and person B owns object X and person B is hungry, then object X is dirty.\nFor all X, if person X is bored and person X is clever, then person X is sad.\nFor all X, Y, if person X is tired and person Y is sad, then person X is a friend of person Y.\nFor all X, if object X is old, then object X is rough.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is busy and person X is busy, then person X is angry.\nFor all X, Y, if person X is funny and person Y is weak, then person X is an enemy of person Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is big and object X is rough, then object X is hard.\nFor all X, if object X is small and object X is red, then object X is light.\nFor all X, if object X is small, then object X is wet.\n\nAnd the following facts:\ndave is tall.\nfrank is strong.\ncarol dislikes phone.\nbook is hard.\nbook is dirty.\nalice is a parent of george.\nbob is a sibling of dave.\ndave is a friend of george.\ncarol is bored.\nbob is friendly.\ncar is wet.\ngeorge is a sibling of bob.\n\nQUESTION:\nIs dave is calm true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1092,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(alice).",
    "c": "calm(X) :- tall(X).\nrough(X) :- dirty(X), owns(W,X), bored(W).\nclever(X) :- weak(X), enemy(X,A), hungry(A).\nred(X) :- red(X), dislikes(U,X), friendly(U).\nfriend(X,Z) :- clever(Z), friendly(X), likes(Z,V).\nstrong(Y) :- sad(Y), parent(Y,V), hungry(V).\nfriendly(Y) :- curious(Y), likes(Y,V), big(V).\nbig(X) :- small(X).\nlikes(Z,Y) :- old(Y), curious(Z), likes(V,Y).\ncurious(Z) :- strong(Z), owns(Z,A), clean(A).\ndirty(X) :- dirty(X), owns(B,X), hungry(B).\nsad(X) :- bored(X), clever(X).\nfriend(X,Y) :- tired(X), sad(Y).\nrough(X) :- old(X).\nparent(X,Y) :- weak(X), weak(Y).\nhungry(X) :- angry(X).\nfunny(X) :- tired(X).\nangry(X) :- busy(X), busy(X).\nenemy(X,Y) :- funny(X), weak(Y).\nbored(X) :- brave(X).\nbored(X) :- clever(X).\nsmall(X) :- hard(X).\nhard(X) :- big(X), rough(X).\nlight(X) :- small(X), red(X).\nwet(X) :- small(X).\ntall(dave).\nstrong(frank).\ndislikes(carol,phone).\nhard(book).\ndirty(book).\nparent(alice,george).\nsibling(bob,dave).\nfriend(dave,george).\nbored(carol).\nfriendly(bob).\nwet(car).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is calm.\nFor all X, if there exists W such that object X is dirty and person W owns object X and person W is bored, then object X is rough.\nFor all X, if there exists A such that person X is weak and person X is an enemy of person A and person A is hungry, then person X is clever.\nFor all X, if there exists U such that object X is red and person U dislikes object X and person U is friendly, then object X is red.\nFor all X, Z, if there exists V such that person Z is clever and person X is friendly and person Z likes object V, then person X is a friend of person Z.\nFor all Y, if there exists V such that person Y is sad and person Y is a parent of person V and person V is hungry, then person Y is strong.\nFor all Y, if there exists V such that person Y is curious and person Y likes object V and object V is big, then person Y is friendly.\nFor all X, if object X is small, then object X is big.\nFor all Y, Z, if there exists V such that object Y is old and person Z is curious and person V likes object Y, then person Z likes object Y.\nFor all Z, if there exists A such that person Z is strong and person Z owns object A and object A is clean, then person Z is curious.\nFor all X, if there exists B such that object X is dirty and person B owns object X and person B is hungry, then object X is dirty.\nFor all X, if person X is bored and person X is clever, then person X is sad.\nFor all X, Y, if person X is tired and person Y is sad, then person X is a friend of person Y.\nFor all X, if object X is old, then object X is rough.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is busy and person X is busy, then person X is angry.\nFor all X, Y, if person X is funny and person Y is weak, then person X is an enemy of person Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is big and object X is rough, then object X is hard.\nFor all X, if object X is small and object X is red, then object X is light.\nFor all X, if object X is small, then object X is wet.\n\nAnd the following facts:\ndave is tall.\nfrank is strong.\ncarol dislikes phone.\nbook is hard.\nbook is dirty.\nalice is a parent of george.\nbob is a sibling of dave.\ndave is a friend of george.\ncarol is bored.\nbob is friendly.\ncar is wet.\ngeorge is a sibling of bob.\n\nQUESTION:\nIs alice is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1093,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(dave).",
    "c": "calm(X) :- tall(X).\nrough(X) :- dirty(X), owns(W,X), bored(W).\nclever(X) :- weak(X), enemy(X,A), hungry(A).\nred(X) :- red(X), dislikes(U,X), friendly(U).\nfriend(X,Z) :- clever(Z), friendly(X), likes(Z,V).\nstrong(Y) :- sad(Y), parent(Y,V), hungry(V).\nfriendly(Y) :- curious(Y), likes(Y,V), big(V).\nbig(X) :- small(X).\nlikes(Z,Y) :- old(Y), curious(Z), likes(V,Y).\ncurious(Z) :- strong(Z), owns(Z,A), clean(A).\ndirty(X) :- dirty(X), owns(B,X), hungry(B).\nsad(X) :- bored(X), clever(X).\nfriend(X,Y) :- tired(X), sad(Y).\nrough(X) :- old(X).\nparent(X,Y) :- weak(X), weak(Y).\nhungry(X) :- angry(X).\nfunny(X) :- tired(X).\nangry(X) :- busy(X), busy(X).\nenemy(X,Y) :- funny(X), weak(Y).\nbored(X) :- brave(X).\nbored(X) :- clever(X).\nsmall(X) :- hard(X).\nhard(X) :- big(X), rough(X).\nlight(X) :- small(X), red(X).\nwet(X) :- small(X).\ncalm(dave).\nstrong(frank).\ndislikes(carol,phone).\nhard(book).\ndirty(book).\nparent(alice,george).\nsibling(bob,dave).\nfriend(dave,george).\nbored(carol).\nfriendly(bob).\nwet(car).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is calm.\nFor all X, if there exists W such that object X is dirty and person W owns object X and person W is bored, then object X is rough.\nFor all X, if there exists A such that person X is weak and person X is an enemy of person A and person A is hungry, then person X is clever.\nFor all X, if there exists U such that object X is red and person U dislikes object X and person U is friendly, then object X is red.\nFor all X, Z, if there exists V such that person Z is clever and person X is friendly and person Z likes object V, then person X is a friend of person Z.\nFor all Y, if there exists V such that person Y is sad and person Y is a parent of person V and person V is hungry, then person Y is strong.\nFor all Y, if there exists V such that person Y is curious and person Y likes object V and object V is big, then person Y is friendly.\nFor all X, if object X is small, then object X is big.\nFor all Y, Z, if there exists V such that object Y is old and person Z is curious and person V likes object Y, then person Z likes object Y.\nFor all Z, if there exists A such that person Z is strong and person Z owns object A and object A is clean, then person Z is curious.\nFor all X, if there exists B such that object X is dirty and person B owns object X and person B is hungry, then object X is dirty.\nFor all X, if person X is bored and person X is clever, then person X is sad.\nFor all X, Y, if person X is tired and person Y is sad, then person X is a friend of person Y.\nFor all X, if object X is old, then object X is rough.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is busy and person X is busy, then person X is angry.\nFor all X, Y, if person X is funny and person Y is weak, then person X is an enemy of person Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is big and object X is rough, then object X is hard.\nFor all X, if object X is small and object X is red, then object X is light.\nFor all X, if object X is small, then object X is wet.\n\nAnd the following facts:\ndave is calm.\nfrank is strong.\ncarol dislikes phone.\nbook is hard.\nbook is dirty.\nalice is a parent of george.\nbob is a sibling of dave.\ndave is a friend of george.\ncarol is bored.\nbob is friendly.\ncar is wet.\ngeorge is a sibling of bob.\n\nQUESTION:\nCould dave is tall explain dave is calm?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1094,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(ball).",
    "c": "calm(X) :- tall(X).\nrough(X) :- dirty(X), owns(W,X), bored(W).\nclever(X) :- weak(X), enemy(X,A), hungry(A).\nred(X) :- red(X), dislikes(U,X), friendly(U).\nfriend(X,Z) :- clever(Z), friendly(X), likes(Z,V).\nstrong(Y) :- sad(Y), parent(Y,V), hungry(V).\nfriendly(Y) :- curious(Y), likes(Y,V), big(V).\nbig(X) :- small(X).\nlikes(Z,Y) :- old(Y), curious(Z), likes(V,Y).\ncurious(Z) :- strong(Z), owns(Z,A), clean(A).\ndirty(X) :- dirty(X), owns(B,X), hungry(B).\nsad(X) :- bored(X), clever(X).\nfriend(X,Y) :- tired(X), sad(Y).\nrough(X) :- old(X).\nparent(X,Y) :- weak(X), weak(Y).\nhungry(X) :- angry(X).\nfunny(X) :- tired(X).\nangry(X) :- busy(X), busy(X).\nenemy(X,Y) :- funny(X), weak(Y).\nbored(X) :- brave(X).\nbored(X) :- clever(X).\nsmall(X) :- hard(X).\nhard(X) :- big(X), rough(X).\nlight(X) :- small(X), red(X).\nwet(X) :- small(X).\ncalm(dave).\nstrong(frank).\ndislikes(carol,phone).\nhard(book).\ndirty(book).\nparent(alice,george).\nsibling(bob,dave).\nfriend(dave,george).\nbored(carol).\nfriendly(bob).\nwet(car).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is calm.\nFor all X, if there exists W such that object X is dirty and person W owns object X and person W is bored, then object X is rough.\nFor all X, if there exists A such that person X is weak and person X is an enemy of person A and person A is hungry, then person X is clever.\nFor all X, if there exists U such that object X is red and person U dislikes object X and person U is friendly, then object X is red.\nFor all X, Z, if there exists V such that person Z is clever and person X is friendly and person Z likes object V, then person X is a friend of person Z.\nFor all Y, if there exists V such that person Y is sad and person Y is a parent of person V and person V is hungry, then person Y is strong.\nFor all Y, if there exists V such that person Y is curious and person Y likes object V and object V is big, then person Y is friendly.\nFor all X, if object X is small, then object X is big.\nFor all Y, Z, if there exists V such that object Y is old and person Z is curious and person V likes object Y, then person Z likes object Y.\nFor all Z, if there exists A such that person Z is strong and person Z owns object A and object A is clean, then person Z is curious.\nFor all X, if there exists B such that object X is dirty and person B owns object X and person B is hungry, then object X is dirty.\nFor all X, if person X is bored and person X is clever, then person X is sad.\nFor all X, Y, if person X is tired and person Y is sad, then person X is a friend of person Y.\nFor all X, if object X is old, then object X is rough.\nFor all X, Y, if person X is weak and person Y is weak, then person X is a parent of person Y.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is busy and person X is busy, then person X is angry.\nFor all X, Y, if person X is funny and person Y is weak, then person X is an enemy of person Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is clever, then person X is bored.\nFor all X, if object X is hard, then object X is small.\nFor all X, if object X is big and object X is rough, then object X is hard.\nFor all X, if object X is small and object X is red, then object X is light.\nFor all X, if object X is small, then object X is wet.\n\nAnd the following facts:\ndave is calm.\nfrank is strong.\ncarol dislikes phone.\nbook is hard.\nbook is dirty.\nalice is a parent of george.\nbob is a sibling of dave.\ndave is a friend of george.\ncarol is bored.\nbob is friendly.\ncar is wet.\ngeorge is a sibling of bob.\n\nQUESTION:\nCould ball is big explain dave is calm?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1095,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "light(X) :- small(X).\nweak(X) :- curious(X), owns(X,U), soft(U).\nbored(Z) :- tired(Z), friend(Z,B), brave(B).\nbrave(X) :- curious(X).\nbrave(X) :- weak(X), likes(X,W), red(W).\nsoft(X) :- big(X), likes(U,X), friendly(U).\nclean(X) :- new(X), happy(F).\nparent(X,Z) :- curious(Z), busy(X).\nrough(X) :- big(X), likes(V,X), angry(V).\nrough(Y) :- dirty(Y).\nlikes(Z,Y) :- clean(Y), weak(Z).\ncalm(Z) :- tall(Z), sibling(Z,B), curious(B).\ncurious(Y) :- angry(Y).\nenemy(Z,X) :- happy(Z), weak(X), owns(X,V).\nold(Y) :- wet(Y).\nhungry(Y) :- clever(Y), strong(E).\nfriend(X,Y) :- hungry(X), hungry(Y).\nclever(X) :- busy(X).\nsoft(X) :- dirty(X), rough(X).\nred(X) :- soft(X).\nsibling(X,Y) :- brave(X), calm(Y).\nlikes(X,Y) :- strong(X), smooth(Y), dislikes(X,Y).\ntall(X) :- funny(X), hungry(X).\ncurious(X) :- busy(X), angry(X).\nfriendly(X) :- tired(X).\nsmall(car).\nenemy(bob,frank).\nenemy(eve,frank).\nsibling(carol,eve).\nnew(book).\nfunny(carol).\nfriend(george,frank).\nwet(pencil).\nlikes(bob,car).\nenemy(dave,alice).\nparent(frank,dave).\nfunny(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if there exists U such that person X is curious and person X owns object U and object U is soft, then person X is weak.\nFor all Z, if there exists B such that person Z is tired and person Z is a friend of person B and person B is brave, then person Z is bored.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if there exists W such that person X is weak and person X likes object W and object W is red, then person X is brave.\nFor all X, if there exists U such that object X is big and person U likes object X and person U is friendly, then object X is soft.\nFor all X, if there exists F such that object X is new and person F is happy, then object X is clean.\nFor all X, Z, if person Z is curious and person X is busy, then person X is a parent of person Z.\nFor all X, if there exists V such that object X is big and person V likes object X and person V is angry, then object X is rough.\nFor all Y, if object Y is dirty, then object Y is rough.\nFor all Y, Z, if object Y is clean and person Z is weak, then person Z likes object Y.\nFor all Z, if there exists B such that person Z is tall and person Z is a sibling of person B and person B is curious, then person Z is calm.\nFor all Y, if person Y is angry, then person Y is curious.\nFor all X, Z, if there exists V such that person Z is happy and person X is weak and person X owns object V, then person Z is an enemy of person X.\nFor all Y, if object Y is wet, then object Y is old.\nFor all Y, if there exists E such that person Y is clever and person E is strong, then person Y is hungry.\nFor all X, Y, if person X is hungry and person Y is hungry, then person X is a friend of person Y.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if object X is dirty and object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, Y, if person X is brave and person Y is calm, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is smooth and person X dislikes object Y, then person X likes object Y.\nFor all X, if person X is funny and person X is hungry, then person X is tall.\nFor all X, if person X is busy and person X is angry, then person X is curious.\nFor all X, if person X is tired, then person X is friendly.\n\nAnd the following facts:\ncar is small.\nbob is an enemy of frank.\neve is an enemy of frank.\ncarol is a sibling of eve.\nbook is new.\ncarol is funny.\ngeorge is a friend of frank.\npencil is wet.\nbob likes car.\ndave is an enemy of alice.\nfrank is a parent of dave.\ndave is funny.\n\nQUESTION:\nIs car is light true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1096,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "angry(carol).",
    "c": "light(X) :- small(X).\nweak(X) :- curious(X), owns(X,U), soft(U).\nbored(Z) :- tired(Z), friend(Z,B), brave(B).\nbrave(X) :- curious(X).\nbrave(X) :- weak(X), likes(X,W), red(W).\nsoft(X) :- big(X), likes(U,X), friendly(U).\nclean(X) :- new(X), happy(F).\nparent(X,Z) :- curious(Z), busy(X).\nrough(X) :- big(X), likes(V,X), angry(V).\nrough(Y) :- dirty(Y).\nlikes(Z,Y) :- clean(Y), weak(Z).\ncalm(Z) :- tall(Z), sibling(Z,B), curious(B).\ncurious(Y) :- angry(Y).\nenemy(Z,X) :- happy(Z), weak(X), owns(X,V).\nold(Y) :- wet(Y).\nhungry(Y) :- clever(Y), strong(E).\nfriend(X,Y) :- hungry(X), hungry(Y).\nclever(X) :- busy(X).\nsoft(X) :- dirty(X), rough(X).\nred(X) :- soft(X).\nsibling(X,Y) :- brave(X), calm(Y).\nlikes(X,Y) :- strong(X), smooth(Y), dislikes(X,Y).\ntall(X) :- funny(X), hungry(X).\ncurious(X) :- busy(X), angry(X).\nfriendly(X) :- tired(X).\nsmall(car).\nenemy(bob,frank).\nenemy(eve,frank).\nsibling(carol,eve).\nnew(book).\nfunny(carol).\nfriend(george,frank).\nwet(pencil).\nlikes(bob,car).\nenemy(dave,alice).\nparent(frank,dave).\nfunny(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if there exists U such that person X is curious and person X owns object U and object U is soft, then person X is weak.\nFor all Z, if there exists B such that person Z is tired and person Z is a friend of person B and person B is brave, then person Z is bored.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if there exists W such that person X is weak and person X likes object W and object W is red, then person X is brave.\nFor all X, if there exists U such that object X is big and person U likes object X and person U is friendly, then object X is soft.\nFor all X, if there exists F such that object X is new and person F is happy, then object X is clean.\nFor all X, Z, if person Z is curious and person X is busy, then person X is a parent of person Z.\nFor all X, if there exists V such that object X is big and person V likes object X and person V is angry, then object X is rough.\nFor all Y, if object Y is dirty, then object Y is rough.\nFor all Y, Z, if object Y is clean and person Z is weak, then person Z likes object Y.\nFor all Z, if there exists B such that person Z is tall and person Z is a sibling of person B and person B is curious, then person Z is calm.\nFor all Y, if person Y is angry, then person Y is curious.\nFor all X, Z, if there exists V such that person Z is happy and person X is weak and person X owns object V, then person Z is an enemy of person X.\nFor all Y, if object Y is wet, then object Y is old.\nFor all Y, if there exists E such that person Y is clever and person E is strong, then person Y is hungry.\nFor all X, Y, if person X is hungry and person Y is hungry, then person X is a friend of person Y.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if object X is dirty and object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, Y, if person X is brave and person Y is calm, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is smooth and person X dislikes object Y, then person X likes object Y.\nFor all X, if person X is funny and person X is hungry, then person X is tall.\nFor all X, if person X is busy and person X is angry, then person X is curious.\nFor all X, if person X is tired, then person X is friendly.\n\nAnd the following facts:\ncar is small.\nbob is an enemy of frank.\neve is an enemy of frank.\ncarol is a sibling of eve.\nbook is new.\ncarol is funny.\ngeorge is a friend of frank.\npencil is wet.\nbob likes car.\ndave is an enemy of alice.\nfrank is a parent of dave.\ndave is funny.\n\nQUESTION:\nIs carol is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1097,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(car).",
    "c": "light(X) :- small(X).\nweak(X) :- curious(X), owns(X,U), soft(U).\nbored(Z) :- tired(Z), friend(Z,B), brave(B).\nbrave(X) :- curious(X).\nbrave(X) :- weak(X), likes(X,W), red(W).\nsoft(X) :- big(X), likes(U,X), friendly(U).\nclean(X) :- new(X), happy(F).\nparent(X,Z) :- curious(Z), busy(X).\nrough(X) :- big(X), likes(V,X), angry(V).\nrough(Y) :- dirty(Y).\nlikes(Z,Y) :- clean(Y), weak(Z).\ncalm(Z) :- tall(Z), sibling(Z,B), curious(B).\ncurious(Y) :- angry(Y).\nenemy(Z,X) :- happy(Z), weak(X), owns(X,V).\nold(Y) :- wet(Y).\nhungry(Y) :- clever(Y), strong(E).\nfriend(X,Y) :- hungry(X), hungry(Y).\nclever(X) :- busy(X).\nsoft(X) :- dirty(X), rough(X).\nred(X) :- soft(X).\nsibling(X,Y) :- brave(X), calm(Y).\nlikes(X,Y) :- strong(X), smooth(Y), dislikes(X,Y).\ntall(X) :- funny(X), hungry(X).\ncurious(X) :- busy(X), angry(X).\nfriendly(X) :- tired(X).\nlight(car).\nenemy(bob,frank).\nenemy(eve,frank).\nsibling(carol,eve).\nnew(book).\nfunny(carol).\nfriend(george,frank).\nwet(pencil).\nlikes(bob,car).\nenemy(dave,alice).\nparent(frank,dave).\nfunny(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if there exists U such that person X is curious and person X owns object U and object U is soft, then person X is weak.\nFor all Z, if there exists B such that person Z is tired and person Z is a friend of person B and person B is brave, then person Z is bored.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if there exists W such that person X is weak and person X likes object W and object W is red, then person X is brave.\nFor all X, if there exists U such that object X is big and person U likes object X and person U is friendly, then object X is soft.\nFor all X, if there exists F such that object X is new and person F is happy, then object X is clean.\nFor all X, Z, if person Z is curious and person X is busy, then person X is a parent of person Z.\nFor all X, if there exists V such that object X is big and person V likes object X and person V is angry, then object X is rough.\nFor all Y, if object Y is dirty, then object Y is rough.\nFor all Y, Z, if object Y is clean and person Z is weak, then person Z likes object Y.\nFor all Z, if there exists B such that person Z is tall and person Z is a sibling of person B and person B is curious, then person Z is calm.\nFor all Y, if person Y is angry, then person Y is curious.\nFor all X, Z, if there exists V such that person Z is happy and person X is weak and person X owns object V, then person Z is an enemy of person X.\nFor all Y, if object Y is wet, then object Y is old.\nFor all Y, if there exists E such that person Y is clever and person E is strong, then person Y is hungry.\nFor all X, Y, if person X is hungry and person Y is hungry, then person X is a friend of person Y.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if object X is dirty and object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, Y, if person X is brave and person Y is calm, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is smooth and person X dislikes object Y, then person X likes object Y.\nFor all X, if person X is funny and person X is hungry, then person X is tall.\nFor all X, if person X is busy and person X is angry, then person X is curious.\nFor all X, if person X is tired, then person X is friendly.\n\nAnd the following facts:\ncar is light.\nbob is an enemy of frank.\neve is an enemy of frank.\ncarol is a sibling of eve.\nbook is new.\ncarol is funny.\ngeorge is a friend of frank.\npencil is wet.\nbob likes car.\ndave is an enemy of alice.\nfrank is a parent of dave.\ndave is funny.\n\nQUESTION:\nCould car is small explain car is light?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1098,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(bob).",
    "c": "light(X) :- small(X).\nweak(X) :- curious(X), owns(X,U), soft(U).\nbored(Z) :- tired(Z), friend(Z,B), brave(B).\nbrave(X) :- curious(X).\nbrave(X) :- weak(X), likes(X,W), red(W).\nsoft(X) :- big(X), likes(U,X), friendly(U).\nclean(X) :- new(X), happy(F).\nparent(X,Z) :- curious(Z), busy(X).\nrough(X) :- big(X), likes(V,X), angry(V).\nrough(Y) :- dirty(Y).\nlikes(Z,Y) :- clean(Y), weak(Z).\ncalm(Z) :- tall(Z), sibling(Z,B), curious(B).\ncurious(Y) :- angry(Y).\nenemy(Z,X) :- happy(Z), weak(X), owns(X,V).\nold(Y) :- wet(Y).\nhungry(Y) :- clever(Y), strong(E).\nfriend(X,Y) :- hungry(X), hungry(Y).\nclever(X) :- busy(X).\nsoft(X) :- dirty(X), rough(X).\nred(X) :- soft(X).\nsibling(X,Y) :- brave(X), calm(Y).\nlikes(X,Y) :- strong(X), smooth(Y), dislikes(X,Y).\ntall(X) :- funny(X), hungry(X).\ncurious(X) :- busy(X), angry(X).\nfriendly(X) :- tired(X).\nlight(car).\nenemy(bob,frank).\nenemy(eve,frank).\nsibling(carol,eve).\nnew(book).\nfunny(carol).\nfriend(george,frank).\nwet(pencil).\nlikes(bob,car).\nenemy(dave,alice).\nparent(frank,dave).\nfunny(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is small, then object X is light.\nFor all X, if there exists U such that person X is curious and person X owns object U and object U is soft, then person X is weak.\nFor all Z, if there exists B such that person Z is tired and person Z is a friend of person B and person B is brave, then person Z is bored.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if there exists W such that person X is weak and person X likes object W and object W is red, then person X is brave.\nFor all X, if there exists U such that object X is big and person U likes object X and person U is friendly, then object X is soft.\nFor all X, if there exists F such that object X is new and person F is happy, then object X is clean.\nFor all X, Z, if person Z is curious and person X is busy, then person X is a parent of person Z.\nFor all X, if there exists V such that object X is big and person V likes object X and person V is angry, then object X is rough.\nFor all Y, if object Y is dirty, then object Y is rough.\nFor all Y, Z, if object Y is clean and person Z is weak, then person Z likes object Y.\nFor all Z, if there exists B such that person Z is tall and person Z is a sibling of person B and person B is curious, then person Z is calm.\nFor all Y, if person Y is angry, then person Y is curious.\nFor all X, Z, if there exists V such that person Z is happy and person X is weak and person X owns object V, then person Z is an enemy of person X.\nFor all Y, if object Y is wet, then object Y is old.\nFor all Y, if there exists E such that person Y is clever and person E is strong, then person Y is hungry.\nFor all X, Y, if person X is hungry and person Y is hungry, then person X is a friend of person Y.\nFor all X, if person X is busy, then person X is clever.\nFor all X, if object X is dirty and object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, Y, if person X is brave and person Y is calm, then person X is a sibling of person Y.\nFor all X, Y, if person X is strong and object Y is smooth and person X dislikes object Y, then person X likes object Y.\nFor all X, if person X is funny and person X is hungry, then person X is tall.\nFor all X, if person X is busy and person X is angry, then person X is curious.\nFor all X, if person X is tired, then person X is friendly.\n\nAnd the following facts:\ncar is light.\nbob is an enemy of frank.\neve is an enemy of frank.\ncarol is a sibling of eve.\nbook is new.\ncarol is funny.\ngeorge is a friend of frank.\npencil is wet.\nbob likes car.\ndave is an enemy of alice.\nfrank is a parent of dave.\ndave is funny.\n\nQUESTION:\nCould bob is bored explain car is light?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1099,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(bob).",
    "c": "bored(X) :- busy(X).\nbig(Y) :- clean(Y), owns(B,Y), excited(B).\nsibling(X,Y) :- strong(Y), hungry(X), sibling(X,V).\nold(X) :- soft(X).\nparent(Z,X) :- excited(Z), strong(X), likes(Z,U).\nexcited(X) :- brave(X).\ndislikes(Z,X) :- strong(Z), wet(X), dislikes(Z,W).\nsibling(Y,Z) :- excited(Y), strong(Z), friend(Y,B).\nlikes(X,Z) :- old(Z), happy(X), parent(X,U).\nsmall(Z) :- red(Z), heavy(E).\nweak(Z) :- sad(Z), parent(Z,B), clever(B).\nwet(X) :- big(X).\nfunny(Y) :- brave(Y).\nnew(Z) :- red(Z), likes(V,Z), hungry(V).\nsoft(X) :- big(X), heavy(X).\nfriendly(X) :- excited(X).\nhungry(X) :- sad(X).\nbrave(X) :- curious(X).\nclean(X) :- new(X), old(X).\ncurious(X) :- strong(X), clever(X).\nsmooth(X) :- light(X).\ncalm(X) :- strong(X), hungry(X).\nsoft(X) :- dirty(X), old(X).\nsmooth(X) :- light(X).\ntired(X) :- excited(X), friendly(X).\nbusy(bob).\nsmall(ball).\nhungry(bob).\nlikes(dave,pencil).\nfriendly(george).\nsunny.\nrough(phone).\nowns(george,pencil).\nenemy(alice,bob).\nfriend(eve,carol).\nheavy(car).\nangry(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is bored.\nFor all Y, if there exists B such that object Y is clean and person B owns object Y and person B is excited, then object Y is big.\nFor all X, Y, if there exists V such that person Y is strong and person X is hungry and person X is a sibling of person V, then person X is a sibling of person Y.\nFor all X, if object X is soft, then object X is old.\nFor all X, Z, if there exists U such that person Z is excited and person X is strong and person Z likes object U, then person Z is a parent of person X.\nFor all X, if person X is brave, then person X is excited.\nFor all X, Z, if there exists W such that person Z is strong and object X is wet and person Z dislikes object W, then person Z dislikes object X.\nFor all Y, Z, if there exists B such that person Y is excited and person Z is strong and person Y is a friend of person B, then person Y is a sibling of person Z.\nFor all X, Z, if there exists U such that object Z is old and person X is happy and person X is a parent of person U, then person X likes object Z.\nFor all Z, if there exists E such that object Z is red and object E is heavy, then object Z is small.\nFor all Z, if there exists B such that person Z is sad and person Z is a parent of person B and person B is clever, then person Z is weak.\nFor all X, if object X is big, then object X is wet.\nFor all Y, if person Y is brave, then person Y is funny.\nFor all Z, if there exists V such that object Z is red and person V likes object Z and person V is hungry, then object Z is new.\nFor all X, if object X is big and object X is heavy, then object X is soft.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if object X is new and object X is old, then object X is clean.\nFor all X, if person X is strong and person X is clever, then person X is curious.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if person X is strong and person X is hungry, then person X is calm.\nFor all X, if object X is dirty and object X is old, then object X is soft.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if person X is excited and person X is friendly, then person X is tired.\n\nAnd the following facts:\nbob is busy.\nball is small.\nbob is hungry.\ndave likes pencil.\ngeorge is friendly.\nit is sunny.\nphone is rough.\ngeorge owns pencil.\nalice is an enemy of bob.\neve is a friend of carol.\ncar is heavy.\nfrank is angry.\n\nQUESTION:\nIs bob is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1100,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "sad(carol).",
    "c": "bored(X) :- busy(X).\nbig(Y) :- clean(Y), owns(B,Y), excited(B).\nsibling(X,Y) :- strong(Y), hungry(X), sibling(X,V).\nold(X) :- soft(X).\nparent(Z,X) :- excited(Z), strong(X), likes(Z,U).\nexcited(X) :- brave(X).\ndislikes(Z,X) :- strong(Z), wet(X), dislikes(Z,W).\nsibling(Y,Z) :- excited(Y), strong(Z), friend(Y,B).\nlikes(X,Z) :- old(Z), happy(X), parent(X,U).\nsmall(Z) :- red(Z), heavy(E).\nweak(Z) :- sad(Z), parent(Z,B), clever(B).\nwet(X) :- big(X).\nfunny(Y) :- brave(Y).\nnew(Z) :- red(Z), likes(V,Z), hungry(V).\nsoft(X) :- big(X), heavy(X).\nfriendly(X) :- excited(X).\nhungry(X) :- sad(X).\nbrave(X) :- curious(X).\nclean(X) :- new(X), old(X).\ncurious(X) :- strong(X), clever(X).\nsmooth(X) :- light(X).\ncalm(X) :- strong(X), hungry(X).\nsoft(X) :- dirty(X), old(X).\nsmooth(X) :- light(X).\ntired(X) :- excited(X), friendly(X).\nbusy(bob).\nsmall(ball).\nhungry(bob).\nlikes(dave,pencil).\nfriendly(george).\nsunny.\nrough(phone).\nowns(george,pencil).\nenemy(alice,bob).\nfriend(eve,carol).\nheavy(car).\nangry(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is bored.\nFor all Y, if there exists B such that object Y is clean and person B owns object Y and person B is excited, then object Y is big.\nFor all X, Y, if there exists V such that person Y is strong and person X is hungry and person X is a sibling of person V, then person X is a sibling of person Y.\nFor all X, if object X is soft, then object X is old.\nFor all X, Z, if there exists U such that person Z is excited and person X is strong and person Z likes object U, then person Z is a parent of person X.\nFor all X, if person X is brave, then person X is excited.\nFor all X, Z, if there exists W such that person Z is strong and object X is wet and person Z dislikes object W, then person Z dislikes object X.\nFor all Y, Z, if there exists B such that person Y is excited and person Z is strong and person Y is a friend of person B, then person Y is a sibling of person Z.\nFor all X, Z, if there exists U such that object Z is old and person X is happy and person X is a parent of person U, then person X likes object Z.\nFor all Z, if there exists E such that object Z is red and object E is heavy, then object Z is small.\nFor all Z, if there exists B such that person Z is sad and person Z is a parent of person B and person B is clever, then person Z is weak.\nFor all X, if object X is big, then object X is wet.\nFor all Y, if person Y is brave, then person Y is funny.\nFor all Z, if there exists V such that object Z is red and person V likes object Z and person V is hungry, then object Z is new.\nFor all X, if object X is big and object X is heavy, then object X is soft.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if object X is new and object X is old, then object X is clean.\nFor all X, if person X is strong and person X is clever, then person X is curious.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if person X is strong and person X is hungry, then person X is calm.\nFor all X, if object X is dirty and object X is old, then object X is soft.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if person X is excited and person X is friendly, then person X is tired.\n\nAnd the following facts:\nbob is busy.\nball is small.\nbob is hungry.\ndave likes pencil.\ngeorge is friendly.\nit is sunny.\nphone is rough.\ngeorge owns pencil.\nalice is an enemy of bob.\neve is a friend of carol.\ncar is heavy.\nfrank is angry.\n\nQUESTION:\nIs carol is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1101,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(bob).",
    "c": "bored(X) :- busy(X).\nbig(Y) :- clean(Y), owns(B,Y), excited(B).\nsibling(X,Y) :- strong(Y), hungry(X), sibling(X,V).\nold(X) :- soft(X).\nparent(Z,X) :- excited(Z), strong(X), likes(Z,U).\nexcited(X) :- brave(X).\ndislikes(Z,X) :- strong(Z), wet(X), dislikes(Z,W).\nsibling(Y,Z) :- excited(Y), strong(Z), friend(Y,B).\nlikes(X,Z) :- old(Z), happy(X), parent(X,U).\nsmall(Z) :- red(Z), heavy(E).\nweak(Z) :- sad(Z), parent(Z,B), clever(B).\nwet(X) :- big(X).\nfunny(Y) :- brave(Y).\nnew(Z) :- red(Z), likes(V,Z), hungry(V).\nsoft(X) :- big(X), heavy(X).\nfriendly(X) :- excited(X).\nhungry(X) :- sad(X).\nbrave(X) :- curious(X).\nclean(X) :- new(X), old(X).\ncurious(X) :- strong(X), clever(X).\nsmooth(X) :- light(X).\ncalm(X) :- strong(X), hungry(X).\nsoft(X) :- dirty(X), old(X).\nsmooth(X) :- light(X).\ntired(X) :- excited(X), friendly(X).\nbored(bob).\nsmall(ball).\nhungry(bob).\nlikes(dave,pencil).\nfriendly(george).\nsunny.\nrough(phone).\nowns(george,pencil).\nenemy(alice,bob).\nfriend(eve,carol).\nheavy(car).\nangry(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is bored.\nFor all Y, if there exists B such that object Y is clean and person B owns object Y and person B is excited, then object Y is big.\nFor all X, Y, if there exists V such that person Y is strong and person X is hungry and person X is a sibling of person V, then person X is a sibling of person Y.\nFor all X, if object X is soft, then object X is old.\nFor all X, Z, if there exists U such that person Z is excited and person X is strong and person Z likes object U, then person Z is a parent of person X.\nFor all X, if person X is brave, then person X is excited.\nFor all X, Z, if there exists W such that person Z is strong and object X is wet and person Z dislikes object W, then person Z dislikes object X.\nFor all Y, Z, if there exists B such that person Y is excited and person Z is strong and person Y is a friend of person B, then person Y is a sibling of person Z.\nFor all X, Z, if there exists U such that object Z is old and person X is happy and person X is a parent of person U, then person X likes object Z.\nFor all Z, if there exists E such that object Z is red and object E is heavy, then object Z is small.\nFor all Z, if there exists B such that person Z is sad and person Z is a parent of person B and person B is clever, then person Z is weak.\nFor all X, if object X is big, then object X is wet.\nFor all Y, if person Y is brave, then person Y is funny.\nFor all Z, if there exists V such that object Z is red and person V likes object Z and person V is hungry, then object Z is new.\nFor all X, if object X is big and object X is heavy, then object X is soft.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if object X is new and object X is old, then object X is clean.\nFor all X, if person X is strong and person X is clever, then person X is curious.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if person X is strong and person X is hungry, then person X is calm.\nFor all X, if object X is dirty and object X is old, then object X is soft.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if person X is excited and person X is friendly, then person X is tired.\n\nAnd the following facts:\nbob is bored.\nball is small.\nbob is hungry.\ndave likes pencil.\ngeorge is friendly.\nit is sunny.\nphone is rough.\ngeorge owns pencil.\nalice is an enemy of bob.\neve is a friend of carol.\ncar is heavy.\nfrank is angry.\n\nQUESTION:\nCould bob is busy explain bob is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1102,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(ball).",
    "c": "bored(X) :- busy(X).\nbig(Y) :- clean(Y), owns(B,Y), excited(B).\nsibling(X,Y) :- strong(Y), hungry(X), sibling(X,V).\nold(X) :- soft(X).\nparent(Z,X) :- excited(Z), strong(X), likes(Z,U).\nexcited(X) :- brave(X).\ndislikes(Z,X) :- strong(Z), wet(X), dislikes(Z,W).\nsibling(Y,Z) :- excited(Y), strong(Z), friend(Y,B).\nlikes(X,Z) :- old(Z), happy(X), parent(X,U).\nsmall(Z) :- red(Z), heavy(E).\nweak(Z) :- sad(Z), parent(Z,B), clever(B).\nwet(X) :- big(X).\nfunny(Y) :- brave(Y).\nnew(Z) :- red(Z), likes(V,Z), hungry(V).\nsoft(X) :- big(X), heavy(X).\nfriendly(X) :- excited(X).\nhungry(X) :- sad(X).\nbrave(X) :- curious(X).\nclean(X) :- new(X), old(X).\ncurious(X) :- strong(X), clever(X).\nsmooth(X) :- light(X).\ncalm(X) :- strong(X), hungry(X).\nsoft(X) :- dirty(X), old(X).\nsmooth(X) :- light(X).\ntired(X) :- excited(X), friendly(X).\nbored(bob).\nsmall(ball).\nhungry(bob).\nlikes(dave,pencil).\nfriendly(george).\nsunny.\nrough(phone).\nowns(george,pencil).\nenemy(alice,bob).\nfriend(eve,carol).\nheavy(car).\nangry(frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is bored.\nFor all Y, if there exists B such that object Y is clean and person B owns object Y and person B is excited, then object Y is big.\nFor all X, Y, if there exists V such that person Y is strong and person X is hungry and person X is a sibling of person V, then person X is a sibling of person Y.\nFor all X, if object X is soft, then object X is old.\nFor all X, Z, if there exists U such that person Z is excited and person X is strong and person Z likes object U, then person Z is a parent of person X.\nFor all X, if person X is brave, then person X is excited.\nFor all X, Z, if there exists W such that person Z is strong and object X is wet and person Z dislikes object W, then person Z dislikes object X.\nFor all Y, Z, if there exists B such that person Y is excited and person Z is strong and person Y is a friend of person B, then person Y is a sibling of person Z.\nFor all X, Z, if there exists U such that object Z is old and person X is happy and person X is a parent of person U, then person X likes object Z.\nFor all Z, if there exists E such that object Z is red and object E is heavy, then object Z is small.\nFor all Z, if there exists B such that person Z is sad and person Z is a parent of person B and person B is clever, then person Z is weak.\nFor all X, if object X is big, then object X is wet.\nFor all Y, if person Y is brave, then person Y is funny.\nFor all Z, if there exists V such that object Z is red and person V likes object Z and person V is hungry, then object Z is new.\nFor all X, if object X is big and object X is heavy, then object X is soft.\nFor all X, if person X is excited, then person X is friendly.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if person X is curious, then person X is brave.\nFor all X, if object X is new and object X is old, then object X is clean.\nFor all X, if person X is strong and person X is clever, then person X is curious.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if person X is strong and person X is hungry, then person X is calm.\nFor all X, if object X is dirty and object X is old, then object X is soft.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if person X is excited and person X is friendly, then person X is tired.\n\nAnd the following facts:\nbob is bored.\nball is small.\nbob is hungry.\ndave likes pencil.\ngeorge is friendly.\nit is sunny.\nphone is rough.\ngeorge owns pencil.\nalice is an enemy of bob.\neve is a friend of carol.\ncar is heavy.\nfrank is angry.\n\nQUESTION:\nCould ball is smooth explain bob is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1103,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(apple).",
    "c": "light(X) :- dirty(X).\nhard(X) :- light(X).\nclean(X) :- hard(X).\nred(X) :- clean(X).\nheavy(X) :- red(X).\nsmooth(X) :- small(X).\nparent(Y,Z) :- sad(Y), happy(Z).\nowns(X,Z) :- smooth(Z), friendly(X), owns(X,B).\nclever(Z) :- angry(Z), tall(B).\nparent(Y,X) :- sad(Y), angry(X), owns(X,W).\nangry(Z) :- excited(Z).\nexcited(Z) :- bored(Z), rough(E).\nsad(X) :- hungry(X), likes(X,A), smooth(A).\ncurious(X) :- busy(X), sibling(X,V), angry(V).\nsibling(Z,Y) :- brave(Y), sad(Z), likes(Y,V).\nexcited(X) :- hungry(X).\ntall(X) :- curious(X), likes(X,A), smooth(A).\nsoft(X) :- rough(X).\nsibling(X,Y) :- bored(X), tired(Y).\nwet(X) :- new(X), soft(X).\ntired(X) :- funny(X), calm(X).\ncalm(X) :- funny(X).\nparent(X,Y) :- brave(X), strong(Y).\nparent(X,Y) :- hungry(X), excited(Y).\ntall(X) :- curious(X).\ndirty(apple).\nclever(dave).\ndislikes(carol,pencil).\nlikes(bob,apple).\nenemy(dave,frank).\nlikes(eve,book).\ndislikes(frank,book).\nowns(carol,apple).\nfriend(alice,frank).\nparent(bob,frank).\nowns(alice,phone).\nparent(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is small, then object X is smooth.\nFor all Y, Z, if person Y is sad and person Z is happy, then person Y is a parent of person Z.\nFor all X, Z, if there exists B such that object Z is smooth and person X is friendly and person X owns object B, then person X owns object Z.\nFor all Z, if there exists B such that person Z is angry and person B is tall, then person Z is clever.\nFor all X, Y, if there exists W such that person Y is sad and person X is angry and person X owns object W, then person Y is a parent of person X.\nFor all Z, if person Z is excited, then person Z is angry.\nFor all Z, if there exists E such that person Z is bored and object E is rough, then person Z is excited.\nFor all X, if there exists A such that person X is hungry and person X likes object A and object A is smooth, then person X is sad.\nFor all X, if there exists V such that person X is busy and person X is a sibling of person V and person V is angry, then person X is curious.\nFor all Y, Z, if there exists V such that person Y is brave and person Z is sad and person Y likes object V, then person Z is a sibling of person Y.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if there exists A such that person X is curious and person X likes object A and object A is smooth, then person X is tall.\nFor all X, if object X is rough, then object X is soft.\nFor all X, Y, if person X is bored and person Y is tired, then person X is a sibling of person Y.\nFor all X, if object X is new and object X is soft, then object X is wet.\nFor all X, if person X is funny and person X is calm, then person X is tired.\nFor all X, if person X is funny, then person X is calm.\nFor all X, Y, if person X is brave and person Y is strong, then person X is a parent of person Y.\nFor all X, Y, if person X is hungry and person Y is excited, then person X is a parent of person Y.\nFor all X, if person X is curious, then person X is tall.\n\nAnd the following facts:\napple is dirty.\ndave is clever.\ncarol dislikes pencil.\nbob likes apple.\ndave is an enemy of frank.\neve likes book.\nfrank dislikes book.\ncarol owns apple.\nalice is a friend of frank.\nbob is a parent of frank.\nalice owns phone.\ngeorge is a parent of carol.\n\nQUESTION:\nIs apple is heavy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1104,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(apple).",
    "c": "light(X) :- dirty(X).\nhard(X) :- light(X).\nclean(X) :- hard(X).\nred(X) :- clean(X).\nheavy(X) :- red(X).\nsmooth(X) :- small(X).\nparent(Y,Z) :- sad(Y), happy(Z).\nowns(X,Z) :- smooth(Z), friendly(X), owns(X,B).\nclever(Z) :- angry(Z), tall(B).\nparent(Y,X) :- sad(Y), angry(X), owns(X,W).\nangry(Z) :- excited(Z).\nexcited(Z) :- bored(Z), rough(E).\nsad(X) :- hungry(X), likes(X,A), smooth(A).\ncurious(X) :- busy(X), sibling(X,V), angry(V).\nsibling(Z,Y) :- brave(Y), sad(Z), likes(Y,V).\nexcited(X) :- hungry(X).\ntall(X) :- curious(X), likes(X,A), smooth(A).\nsoft(X) :- rough(X).\nsibling(X,Y) :- bored(X), tired(Y).\nwet(X) :- new(X), soft(X).\ntired(X) :- funny(X), calm(X).\ncalm(X) :- funny(X).\nparent(X,Y) :- brave(X), strong(Y).\nparent(X,Y) :- hungry(X), excited(Y).\ntall(X) :- curious(X).\ndirty(apple).\nclever(dave).\ndislikes(carol,pencil).\nlikes(bob,apple).\nenemy(dave,frank).\nlikes(eve,book).\ndislikes(frank,book).\nowns(carol,apple).\nfriend(alice,frank).\nparent(bob,frank).\nowns(alice,phone).\nparent(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is small, then object X is smooth.\nFor all Y, Z, if person Y is sad and person Z is happy, then person Y is a parent of person Z.\nFor all X, Z, if there exists B such that object Z is smooth and person X is friendly and person X owns object B, then person X owns object Z.\nFor all Z, if there exists B such that person Z is angry and person B is tall, then person Z is clever.\nFor all X, Y, if there exists W such that person Y is sad and person X is angry and person X owns object W, then person Y is a parent of person X.\nFor all Z, if person Z is excited, then person Z is angry.\nFor all Z, if there exists E such that person Z is bored and object E is rough, then person Z is excited.\nFor all X, if there exists A such that person X is hungry and person X likes object A and object A is smooth, then person X is sad.\nFor all X, if there exists V such that person X is busy and person X is a sibling of person V and person V is angry, then person X is curious.\nFor all Y, Z, if there exists V such that person Y is brave and person Z is sad and person Y likes object V, then person Z is a sibling of person Y.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if there exists A such that person X is curious and person X likes object A and object A is smooth, then person X is tall.\nFor all X, if object X is rough, then object X is soft.\nFor all X, Y, if person X is bored and person Y is tired, then person X is a sibling of person Y.\nFor all X, if object X is new and object X is soft, then object X is wet.\nFor all X, if person X is funny and person X is calm, then person X is tired.\nFor all X, if person X is funny, then person X is calm.\nFor all X, Y, if person X is brave and person Y is strong, then person X is a parent of person Y.\nFor all X, Y, if person X is hungry and person Y is excited, then person X is a parent of person Y.\nFor all X, if person X is curious, then person X is tall.\n\nAnd the following facts:\napple is dirty.\ndave is clever.\ncarol dislikes pencil.\nbob likes apple.\ndave is an enemy of frank.\neve likes book.\nfrank dislikes book.\ncarol owns apple.\nalice is a friend of frank.\nbob is a parent of frank.\nalice owns phone.\ngeorge is a parent of carol.\n\nQUESTION:\nIs apple is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1105,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(apple).",
    "c": "light(X) :- dirty(X).\nhard(X) :- light(X).\nclean(X) :- hard(X).\nred(X) :- clean(X).\nheavy(X) :- red(X).\nsmooth(X) :- small(X).\nparent(Y,Z) :- sad(Y), happy(Z).\nowns(X,Z) :- smooth(Z), friendly(X), owns(X,B).\nclever(Z) :- angry(Z), tall(B).\nparent(Y,X) :- sad(Y), angry(X), owns(X,W).\nangry(Z) :- excited(Z).\nexcited(Z) :- bored(Z), rough(E).\nsad(X) :- hungry(X), likes(X,A), smooth(A).\ncurious(X) :- busy(X), sibling(X,V), angry(V).\nsibling(Z,Y) :- brave(Y), sad(Z), likes(Y,V).\nexcited(X) :- hungry(X).\ntall(X) :- curious(X), likes(X,A), smooth(A).\nsoft(X) :- rough(X).\nsibling(X,Y) :- bored(X), tired(Y).\nwet(X) :- new(X), soft(X).\ntired(X) :- funny(X), calm(X).\ncalm(X) :- funny(X).\nparent(X,Y) :- brave(X), strong(Y).\nparent(X,Y) :- hungry(X), excited(Y).\ntall(X) :- curious(X).\nheavy(apple).\nclever(dave).\ndislikes(carol,pencil).\nlikes(bob,apple).\nenemy(dave,frank).\nlikes(eve,book).\ndislikes(frank,book).\nowns(carol,apple).\nfriend(alice,frank).\nparent(bob,frank).\nowns(alice,phone).\nparent(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is small, then object X is smooth.\nFor all Y, Z, if person Y is sad and person Z is happy, then person Y is a parent of person Z.\nFor all X, Z, if there exists B such that object Z is smooth and person X is friendly and person X owns object B, then person X owns object Z.\nFor all Z, if there exists B such that person Z is angry and person B is tall, then person Z is clever.\nFor all X, Y, if there exists W such that person Y is sad and person X is angry and person X owns object W, then person Y is a parent of person X.\nFor all Z, if person Z is excited, then person Z is angry.\nFor all Z, if there exists E such that person Z is bored and object E is rough, then person Z is excited.\nFor all X, if there exists A such that person X is hungry and person X likes object A and object A is smooth, then person X is sad.\nFor all X, if there exists V such that person X is busy and person X is a sibling of person V and person V is angry, then person X is curious.\nFor all Y, Z, if there exists V such that person Y is brave and person Z is sad and person Y likes object V, then person Z is a sibling of person Y.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if there exists A such that person X is curious and person X likes object A and object A is smooth, then person X is tall.\nFor all X, if object X is rough, then object X is soft.\nFor all X, Y, if person X is bored and person Y is tired, then person X is a sibling of person Y.\nFor all X, if object X is new and object X is soft, then object X is wet.\nFor all X, if person X is funny and person X is calm, then person X is tired.\nFor all X, if person X is funny, then person X is calm.\nFor all X, Y, if person X is brave and person Y is strong, then person X is a parent of person Y.\nFor all X, Y, if person X is hungry and person Y is excited, then person X is a parent of person Y.\nFor all X, if person X is curious, then person X is tall.\n\nAnd the following facts:\napple is heavy.\ndave is clever.\ncarol dislikes pencil.\nbob likes apple.\ndave is an enemy of frank.\neve likes book.\nfrank dislikes book.\ncarol owns apple.\nalice is a friend of frank.\nbob is a parent of frank.\nalice owns phone.\ngeorge is a parent of carol.\n\nQUESTION:\nCould apple is dirty explain apple is heavy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1106,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(george).",
    "c": "light(X) :- dirty(X).\nhard(X) :- light(X).\nclean(X) :- hard(X).\nred(X) :- clean(X).\nheavy(X) :- red(X).\nsmooth(X) :- small(X).\nparent(Y,Z) :- sad(Y), happy(Z).\nowns(X,Z) :- smooth(Z), friendly(X), owns(X,B).\nclever(Z) :- angry(Z), tall(B).\nparent(Y,X) :- sad(Y), angry(X), owns(X,W).\nangry(Z) :- excited(Z).\nexcited(Z) :- bored(Z), rough(E).\nsad(X) :- hungry(X), likes(X,A), smooth(A).\ncurious(X) :- busy(X), sibling(X,V), angry(V).\nsibling(Z,Y) :- brave(Y), sad(Z), likes(Y,V).\nexcited(X) :- hungry(X).\ntall(X) :- curious(X), likes(X,A), smooth(A).\nsoft(X) :- rough(X).\nsibling(X,Y) :- bored(X), tired(Y).\nwet(X) :- new(X), soft(X).\ntired(X) :- funny(X), calm(X).\ncalm(X) :- funny(X).\nparent(X,Y) :- brave(X), strong(Y).\nparent(X,Y) :- hungry(X), excited(Y).\ntall(X) :- curious(X).\nheavy(apple).\nclever(dave).\ndislikes(carol,pencil).\nlikes(bob,apple).\nenemy(dave,frank).\nlikes(eve,book).\ndislikes(frank,book).\nowns(carol,apple).\nfriend(alice,frank).\nparent(bob,frank).\nowns(alice,phone).\nparent(george,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is small, then object X is smooth.\nFor all Y, Z, if person Y is sad and person Z is happy, then person Y is a parent of person Z.\nFor all X, Z, if there exists B such that object Z is smooth and person X is friendly and person X owns object B, then person X owns object Z.\nFor all Z, if there exists B such that person Z is angry and person B is tall, then person Z is clever.\nFor all X, Y, if there exists W such that person Y is sad and person X is angry and person X owns object W, then person Y is a parent of person X.\nFor all Z, if person Z is excited, then person Z is angry.\nFor all Z, if there exists E such that person Z is bored and object E is rough, then person Z is excited.\nFor all X, if there exists A such that person X is hungry and person X likes object A and object A is smooth, then person X is sad.\nFor all X, if there exists V such that person X is busy and person X is a sibling of person V and person V is angry, then person X is curious.\nFor all Y, Z, if there exists V such that person Y is brave and person Z is sad and person Y likes object V, then person Z is a sibling of person Y.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if there exists A such that person X is curious and person X likes object A and object A is smooth, then person X is tall.\nFor all X, if object X is rough, then object X is soft.\nFor all X, Y, if person X is bored and person Y is tired, then person X is a sibling of person Y.\nFor all X, if object X is new and object X is soft, then object X is wet.\nFor all X, if person X is funny and person X is calm, then person X is tired.\nFor all X, if person X is funny, then person X is calm.\nFor all X, Y, if person X is brave and person Y is strong, then person X is a parent of person Y.\nFor all X, Y, if person X is hungry and person Y is excited, then person X is a parent of person Y.\nFor all X, if person X is curious, then person X is tall.\n\nAnd the following facts:\napple is heavy.\ndave is clever.\ncarol dislikes pencil.\nbob likes apple.\ndave is an enemy of frank.\neve likes book.\nfrank dislikes book.\ncarol owns apple.\nalice is a friend of frank.\nbob is a parent of frank.\nalice owns phone.\ngeorge is a parent of carol.\n\nQUESTION:\nCould george is hungry explain apple is heavy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1107,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(carol).",
    "c": "curious(X) :- weak(X).\nbusy(X) :- curious(X).\ntall(X) :- busy(X).\nstrong(X) :- tall(X).\nsad(X) :- strong(X).\nhappy(Z) :- friendly(Z), parent(Z,V), angry(V).\nsoft(Y) :- smooth(Y), likes(A,Y), happy(A).\nlight(X) :- soft(X).\nclean(Y) :- soft(Y).\nfunny(X) :- brave(X), friend(X,U), hungry(U).\nlikes(X,Z) :- clean(Z), clever(X), owns(W,Z).\nangry(X) :- happy(X), owns(X,W), old(W).\nbrave(Z) :- brave(Z), likes(Z,B), old(B).\nfunny(Z) :- calm(Z), owns(Z,B), small(B).\nlight(Y) :- small(Y), wet(A).\nheavy(X) :- light(X), new(X).\nheavy(X) :- red(X), old(X).\ncalm(X) :- funny(X), friendly(X).\nwet(X) :- small(X), heavy(X).\nred(X) :- rough(X).\nclever(X) :- excited(X), hungry(X).\nexcited(X) :- friendly(X).\nclean(X) :- heavy(X).\nold(X) :- dirty(X).\nparent(X,Y) :- friendly(X), clever(Y).\nweak(carol).\nowns(bob,book).\nowns(frank,ball).\nsibling(george,frank).\nrough(book).\nsoft(apple).\nfriend(frank,dave).\nenemy(alice,frank).\nbrave(bob).\nhappy(carol).\nlikes(alice,ball).\nfriendly(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all Z, if there exists V such that person Z is friendly and person Z is a parent of person V and person V is angry, then person Z is happy.\nFor all Y, if there exists A such that object Y is smooth and person A likes object Y and person A is happy, then object Y is soft.\nFor all X, if object X is soft, then object X is light.\nFor all Y, if object Y is soft, then object Y is clean.\nFor all X, if there exists U such that person X is brave and person X is a friend of person U and person U is hungry, then person X is funny.\nFor all X, Z, if there exists W such that object Z is clean and person X is clever and person W owns object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is happy and person X owns object W and object W is old, then person X is angry.\nFor all Z, if there exists B such that person Z is brave and person Z likes object B and object B is old, then person Z is brave.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is small, then person Z is funny.\nFor all Y, if there exists A such that object Y is small and object A is wet, then object Y is light.\nFor all X, if object X is light and object X is new, then object X is heavy.\nFor all X, if object X is red and object X is old, then object X is heavy.\nFor all X, if person X is funny and person X is friendly, then person X is calm.\nFor all X, if object X is small and object X is heavy, then object X is wet.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is excited and person X is hungry, then person X is clever.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is heavy, then object X is clean.\nFor all X, if object X is dirty, then object X is old.\nFor all X, Y, if person X is friendly and person Y is clever, then person X is a parent of person Y.\n\nAnd the following facts:\ncarol is weak.\nbob owns book.\nfrank owns ball.\ngeorge is a sibling of frank.\nbook is rough.\napple is soft.\nfrank is a friend of dave.\nalice is an enemy of frank.\nbob is brave.\ncarol is happy.\nalice likes ball.\nalice is friendly.\n\nQUESTION:\nIs carol is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1108,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(eve).",
    "c": "curious(X) :- weak(X).\nbusy(X) :- curious(X).\ntall(X) :- busy(X).\nstrong(X) :- tall(X).\nsad(X) :- strong(X).\nhappy(Z) :- friendly(Z), parent(Z,V), angry(V).\nsoft(Y) :- smooth(Y), likes(A,Y), happy(A).\nlight(X) :- soft(X).\nclean(Y) :- soft(Y).\nfunny(X) :- brave(X), friend(X,U), hungry(U).\nlikes(X,Z) :- clean(Z), clever(X), owns(W,Z).\nangry(X) :- happy(X), owns(X,W), old(W).\nbrave(Z) :- brave(Z), likes(Z,B), old(B).\nfunny(Z) :- calm(Z), owns(Z,B), small(B).\nlight(Y) :- small(Y), wet(A).\nheavy(X) :- light(X), new(X).\nheavy(X) :- red(X), old(X).\ncalm(X) :- funny(X), friendly(X).\nwet(X) :- small(X), heavy(X).\nred(X) :- rough(X).\nclever(X) :- excited(X), hungry(X).\nexcited(X) :- friendly(X).\nclean(X) :- heavy(X).\nold(X) :- dirty(X).\nparent(X,Y) :- friendly(X), clever(Y).\nweak(carol).\nowns(bob,book).\nowns(frank,ball).\nsibling(george,frank).\nrough(book).\nsoft(apple).\nfriend(frank,dave).\nenemy(alice,frank).\nbrave(bob).\nhappy(carol).\nlikes(alice,ball).\nfriendly(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all Z, if there exists V such that person Z is friendly and person Z is a parent of person V and person V is angry, then person Z is happy.\nFor all Y, if there exists A such that object Y is smooth and person A likes object Y and person A is happy, then object Y is soft.\nFor all X, if object X is soft, then object X is light.\nFor all Y, if object Y is soft, then object Y is clean.\nFor all X, if there exists U such that person X is brave and person X is a friend of person U and person U is hungry, then person X is funny.\nFor all X, Z, if there exists W such that object Z is clean and person X is clever and person W owns object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is happy and person X owns object W and object W is old, then person X is angry.\nFor all Z, if there exists B such that person Z is brave and person Z likes object B and object B is old, then person Z is brave.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is small, then person Z is funny.\nFor all Y, if there exists A such that object Y is small and object A is wet, then object Y is light.\nFor all X, if object X is light and object X is new, then object X is heavy.\nFor all X, if object X is red and object X is old, then object X is heavy.\nFor all X, if person X is funny and person X is friendly, then person X is calm.\nFor all X, if object X is small and object X is heavy, then object X is wet.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is excited and person X is hungry, then person X is clever.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is heavy, then object X is clean.\nFor all X, if object X is dirty, then object X is old.\nFor all X, Y, if person X is friendly and person Y is clever, then person X is a parent of person Y.\n\nAnd the following facts:\ncarol is weak.\nbob owns book.\nfrank owns ball.\ngeorge is a sibling of frank.\nbook is rough.\napple is soft.\nfrank is a friend of dave.\nalice is an enemy of frank.\nbob is brave.\ncarol is happy.\nalice likes ball.\nalice is friendly.\n\nQUESTION:\nIs eve is strong true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1109,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(carol).",
    "c": "curious(X) :- weak(X).\nbusy(X) :- curious(X).\ntall(X) :- busy(X).\nstrong(X) :- tall(X).\nsad(X) :- strong(X).\nhappy(Z) :- friendly(Z), parent(Z,V), angry(V).\nsoft(Y) :- smooth(Y), likes(A,Y), happy(A).\nlight(X) :- soft(X).\nclean(Y) :- soft(Y).\nfunny(X) :- brave(X), friend(X,U), hungry(U).\nlikes(X,Z) :- clean(Z), clever(X), owns(W,Z).\nangry(X) :- happy(X), owns(X,W), old(W).\nbrave(Z) :- brave(Z), likes(Z,B), old(B).\nfunny(Z) :- calm(Z), owns(Z,B), small(B).\nlight(Y) :- small(Y), wet(A).\nheavy(X) :- light(X), new(X).\nheavy(X) :- red(X), old(X).\ncalm(X) :- funny(X), friendly(X).\nwet(X) :- small(X), heavy(X).\nred(X) :- rough(X).\nclever(X) :- excited(X), hungry(X).\nexcited(X) :- friendly(X).\nclean(X) :- heavy(X).\nold(X) :- dirty(X).\nparent(X,Y) :- friendly(X), clever(Y).\nsad(carol).\nowns(bob,book).\nowns(frank,ball).\nsibling(george,frank).\nrough(book).\nsoft(apple).\nfriend(frank,dave).\nenemy(alice,frank).\nbrave(bob).\nhappy(carol).\nlikes(alice,ball).\nfriendly(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all Z, if there exists V such that person Z is friendly and person Z is a parent of person V and person V is angry, then person Z is happy.\nFor all Y, if there exists A such that object Y is smooth and person A likes object Y and person A is happy, then object Y is soft.\nFor all X, if object X is soft, then object X is light.\nFor all Y, if object Y is soft, then object Y is clean.\nFor all X, if there exists U such that person X is brave and person X is a friend of person U and person U is hungry, then person X is funny.\nFor all X, Z, if there exists W such that object Z is clean and person X is clever and person W owns object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is happy and person X owns object W and object W is old, then person X is angry.\nFor all Z, if there exists B such that person Z is brave and person Z likes object B and object B is old, then person Z is brave.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is small, then person Z is funny.\nFor all Y, if there exists A such that object Y is small and object A is wet, then object Y is light.\nFor all X, if object X is light and object X is new, then object X is heavy.\nFor all X, if object X is red and object X is old, then object X is heavy.\nFor all X, if person X is funny and person X is friendly, then person X is calm.\nFor all X, if object X is small and object X is heavy, then object X is wet.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is excited and person X is hungry, then person X is clever.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is heavy, then object X is clean.\nFor all X, if object X is dirty, then object X is old.\nFor all X, Y, if person X is friendly and person Y is clever, then person X is a parent of person Y.\n\nAnd the following facts:\ncarol is sad.\nbob owns book.\nfrank owns ball.\ngeorge is a sibling of frank.\nbook is rough.\napple is soft.\nfrank is a friend of dave.\nalice is an enemy of frank.\nbob is brave.\ncarol is happy.\nalice likes ball.\nalice is friendly.\n\nQUESTION:\nCould carol is weak explain carol is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1110,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(book).",
    "c": "curious(X) :- weak(X).\nbusy(X) :- curious(X).\ntall(X) :- busy(X).\nstrong(X) :- tall(X).\nsad(X) :- strong(X).\nhappy(Z) :- friendly(Z), parent(Z,V), angry(V).\nsoft(Y) :- smooth(Y), likes(A,Y), happy(A).\nlight(X) :- soft(X).\nclean(Y) :- soft(Y).\nfunny(X) :- brave(X), friend(X,U), hungry(U).\nlikes(X,Z) :- clean(Z), clever(X), owns(W,Z).\nangry(X) :- happy(X), owns(X,W), old(W).\nbrave(Z) :- brave(Z), likes(Z,B), old(B).\nfunny(Z) :- calm(Z), owns(Z,B), small(B).\nlight(Y) :- small(Y), wet(A).\nheavy(X) :- light(X), new(X).\nheavy(X) :- red(X), old(X).\ncalm(X) :- funny(X), friendly(X).\nwet(X) :- small(X), heavy(X).\nred(X) :- rough(X).\nclever(X) :- excited(X), hungry(X).\nexcited(X) :- friendly(X).\nclean(X) :- heavy(X).\nold(X) :- dirty(X).\nparent(X,Y) :- friendly(X), clever(Y).\nsad(carol).\nowns(bob,book).\nowns(frank,ball).\nsibling(george,frank).\nrough(book).\nsoft(apple).\nfriend(frank,dave).\nenemy(alice,frank).\nbrave(bob).\nhappy(carol).\nlikes(alice,ball).\nfriendly(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is tall.\nFor all X, if person X is tall, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all Z, if there exists V such that person Z is friendly and person Z is a parent of person V and person V is angry, then person Z is happy.\nFor all Y, if there exists A such that object Y is smooth and person A likes object Y and person A is happy, then object Y is soft.\nFor all X, if object X is soft, then object X is light.\nFor all Y, if object Y is soft, then object Y is clean.\nFor all X, if there exists U such that person X is brave and person X is a friend of person U and person U is hungry, then person X is funny.\nFor all X, Z, if there exists W such that object Z is clean and person X is clever and person W owns object Z, then person X likes object Z.\nFor all X, if there exists W such that person X is happy and person X owns object W and object W is old, then person X is angry.\nFor all Z, if there exists B such that person Z is brave and person Z likes object B and object B is old, then person Z is brave.\nFor all Z, if there exists B such that person Z is calm and person Z owns object B and object B is small, then person Z is funny.\nFor all Y, if there exists A such that object Y is small and object A is wet, then object Y is light.\nFor all X, if object X is light and object X is new, then object X is heavy.\nFor all X, if object X is red and object X is old, then object X is heavy.\nFor all X, if person X is funny and person X is friendly, then person X is calm.\nFor all X, if object X is small and object X is heavy, then object X is wet.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is excited and person X is hungry, then person X is clever.\nFor all X, if person X is friendly, then person X is excited.\nFor all X, if object X is heavy, then object X is clean.\nFor all X, if object X is dirty, then object X is old.\nFor all X, Y, if person X is friendly and person Y is clever, then person X is a parent of person Y.\n\nAnd the following facts:\ncarol is sad.\nbob owns book.\nfrank owns ball.\ngeorge is a sibling of frank.\nbook is rough.\napple is soft.\nfrank is a friend of dave.\nalice is an enemy of frank.\nbob is brave.\ncarol is happy.\nalice likes ball.\nalice is friendly.\n\nQUESTION:\nCould book is soft explain carol is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1111,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(book).",
    "c": "small(X) :- light(X).\nbig(X) :- small(X).\nsoft(X) :- big(X).\nhard(X) :- soft(X).\nnew(X) :- hard(X).\nsibling(Y,Z) :- tall(Y), weak(Z), sibling(Z,W).\nred(X) :- dirty(X).\nlikes(Y,X) :- busy(Y), wet(X), likes(U,X).\nstrong(X) :- calm(X).\nexcited(Y) :- curious(Y), sibling(Y,A), clever(A).\nfunny(Z) :- sad(Z), likes(Z,U), wet(U).\nsmooth(X) :- old(X), owns(B,X), weak(B).\nsad(Y) :- friendly(Y), likes(Y,W), heavy(W).\nheavy(X) :- heavy(X).\nred(Z) :- dirty(Z), owns(A,Z), bored(A).\nangry(Y) :- weak(Y), dislikes(Y,V), heavy(V).\nheavy(X) :- smooth(X).\nfriendly(X) :- angry(X), sad(X).\nbored(X) :- happy(X).\nbored(X) :- angry(X).\nfunny(X) :- hungry(X), excited(X).\ndirty(X) :- heavy(X).\nclever(X) :- happy(X).\nsibling(X,Y) :- curious(X), weak(Y).\nangry(X) :- happy(X), funny(X).\nlight(book).\nowns(dave,phone).\nparent(frank,george).\nlikes(george,ball).\ncurious(bob).\ndislikes(dave,apple).\nsibling(dave,bob).\nstrong(dave).\nfriend(alice,bob).\ndirty(book).\nangry(bob).\nsad(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all Y, Z, if there exists W such that person Y is tall and person Z is weak and person Z is a sibling of person W, then person Y is a sibling of person Z.\nFor all X, if object X is dirty, then object X is red.\nFor all X, Y, if there exists U such that person Y is busy and object X is wet and person U likes object X, then person Y likes object X.\nFor all X, if person X is calm, then person X is strong.\nFor all Y, if there exists A such that person Y is curious and person Y is a sibling of person A and person A is clever, then person Y is excited.\nFor all Z, if there exists U such that person Z is sad and person Z likes object U and object U is wet, then person Z is funny.\nFor all X, if there exists B such that object X is old and person B owns object X and person B is weak, then object X is smooth.\nFor all Y, if there exists W such that person Y is friendly and person Y likes object W and object W is heavy, then person Y is sad.\nFor all X, if object X is heavy, then object X is heavy.\nFor all Z, if there exists A such that object Z is dirty and person A owns object Z and person A is bored, then object Z is red.\nFor all Y, if there exists V such that person Y is weak and person Y dislikes object V and object V is heavy, then person Y is angry.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if person X is angry and person X is sad, then person X is friendly.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is hungry and person X is excited, then person X is funny.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if person X is happy, then person X is clever.\nFor all X, Y, if person X is curious and person Y is weak, then person X is a sibling of person Y.\nFor all X, if person X is happy and person X is funny, then person X is angry.\n\nAnd the following facts:\nbook is light.\ndave owns phone.\nfrank is a parent of george.\ngeorge likes ball.\nbob is curious.\ndave dislikes apple.\ndave is a sibling of bob.\ndave is strong.\nalice is a friend of bob.\nbook is dirty.\nbob is angry.\ndave is sad.\n\nQUESTION:\nIs book is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1112,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(phone).",
    "c": "small(X) :- light(X).\nbig(X) :- small(X).\nsoft(X) :- big(X).\nhard(X) :- soft(X).\nnew(X) :- hard(X).\nsibling(Y,Z) :- tall(Y), weak(Z), sibling(Z,W).\nred(X) :- dirty(X).\nlikes(Y,X) :- busy(Y), wet(X), likes(U,X).\nstrong(X) :- calm(X).\nexcited(Y) :- curious(Y), sibling(Y,A), clever(A).\nfunny(Z) :- sad(Z), likes(Z,U), wet(U).\nsmooth(X) :- old(X), owns(B,X), weak(B).\nsad(Y) :- friendly(Y), likes(Y,W), heavy(W).\nheavy(X) :- heavy(X).\nred(Z) :- dirty(Z), owns(A,Z), bored(A).\nangry(Y) :- weak(Y), dislikes(Y,V), heavy(V).\nheavy(X) :- smooth(X).\nfriendly(X) :- angry(X), sad(X).\nbored(X) :- happy(X).\nbored(X) :- angry(X).\nfunny(X) :- hungry(X), excited(X).\ndirty(X) :- heavy(X).\nclever(X) :- happy(X).\nsibling(X,Y) :- curious(X), weak(Y).\nangry(X) :- happy(X), funny(X).\nlight(book).\nowns(dave,phone).\nparent(frank,george).\nlikes(george,ball).\ncurious(bob).\ndislikes(dave,apple).\nsibling(dave,bob).\nstrong(dave).\nfriend(alice,bob).\ndirty(book).\nangry(bob).\nsad(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all Y, Z, if there exists W such that person Y is tall and person Z is weak and person Z is a sibling of person W, then person Y is a sibling of person Z.\nFor all X, if object X is dirty, then object X is red.\nFor all X, Y, if there exists U such that person Y is busy and object X is wet and person U likes object X, then person Y likes object X.\nFor all X, if person X is calm, then person X is strong.\nFor all Y, if there exists A such that person Y is curious and person Y is a sibling of person A and person A is clever, then person Y is excited.\nFor all Z, if there exists U such that person Z is sad and person Z likes object U and object U is wet, then person Z is funny.\nFor all X, if there exists B such that object X is old and person B owns object X and person B is weak, then object X is smooth.\nFor all Y, if there exists W such that person Y is friendly and person Y likes object W and object W is heavy, then person Y is sad.\nFor all X, if object X is heavy, then object X is heavy.\nFor all Z, if there exists A such that object Z is dirty and person A owns object Z and person A is bored, then object Z is red.\nFor all Y, if there exists V such that person Y is weak and person Y dislikes object V and object V is heavy, then person Y is angry.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if person X is angry and person X is sad, then person X is friendly.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is hungry and person X is excited, then person X is funny.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if person X is happy, then person X is clever.\nFor all X, Y, if person X is curious and person Y is weak, then person X is a sibling of person Y.\nFor all X, if person X is happy and person X is funny, then person X is angry.\n\nAnd the following facts:\nbook is light.\ndave owns phone.\nfrank is a parent of george.\ngeorge likes ball.\nbob is curious.\ndave dislikes apple.\ndave is a sibling of bob.\ndave is strong.\nalice is a friend of bob.\nbook is dirty.\nbob is angry.\ndave is sad.\n\nQUESTION:\nIs phone is heavy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1113,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(book).",
    "c": "small(X) :- light(X).\nbig(X) :- small(X).\nsoft(X) :- big(X).\nhard(X) :- soft(X).\nnew(X) :- hard(X).\nsibling(Y,Z) :- tall(Y), weak(Z), sibling(Z,W).\nred(X) :- dirty(X).\nlikes(Y,X) :- busy(Y), wet(X), likes(U,X).\nstrong(X) :- calm(X).\nexcited(Y) :- curious(Y), sibling(Y,A), clever(A).\nfunny(Z) :- sad(Z), likes(Z,U), wet(U).\nsmooth(X) :- old(X), owns(B,X), weak(B).\nsad(Y) :- friendly(Y), likes(Y,W), heavy(W).\nheavy(X) :- heavy(X).\nred(Z) :- dirty(Z), owns(A,Z), bored(A).\nangry(Y) :- weak(Y), dislikes(Y,V), heavy(V).\nheavy(X) :- smooth(X).\nfriendly(X) :- angry(X), sad(X).\nbored(X) :- happy(X).\nbored(X) :- angry(X).\nfunny(X) :- hungry(X), excited(X).\ndirty(X) :- heavy(X).\nclever(X) :- happy(X).\nsibling(X,Y) :- curious(X), weak(Y).\nangry(X) :- happy(X), funny(X).\nnew(book).\nowns(dave,phone).\nparent(frank,george).\nlikes(george,ball).\ncurious(bob).\ndislikes(dave,apple).\nsibling(dave,bob).\nstrong(dave).\nfriend(alice,bob).\ndirty(book).\nangry(bob).\nsad(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all Y, Z, if there exists W such that person Y is tall and person Z is weak and person Z is a sibling of person W, then person Y is a sibling of person Z.\nFor all X, if object X is dirty, then object X is red.\nFor all X, Y, if there exists U such that person Y is busy and object X is wet and person U likes object X, then person Y likes object X.\nFor all X, if person X is calm, then person X is strong.\nFor all Y, if there exists A such that person Y is curious and person Y is a sibling of person A and person A is clever, then person Y is excited.\nFor all Z, if there exists U such that person Z is sad and person Z likes object U and object U is wet, then person Z is funny.\nFor all X, if there exists B such that object X is old and person B owns object X and person B is weak, then object X is smooth.\nFor all Y, if there exists W such that person Y is friendly and person Y likes object W and object W is heavy, then person Y is sad.\nFor all X, if object X is heavy, then object X is heavy.\nFor all Z, if there exists A such that object Z is dirty and person A owns object Z and person A is bored, then object Z is red.\nFor all Y, if there exists V such that person Y is weak and person Y dislikes object V and object V is heavy, then person Y is angry.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if person X is angry and person X is sad, then person X is friendly.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is hungry and person X is excited, then person X is funny.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if person X is happy, then person X is clever.\nFor all X, Y, if person X is curious and person Y is weak, then person X is a sibling of person Y.\nFor all X, if person X is happy and person X is funny, then person X is angry.\n\nAnd the following facts:\nbook is new.\ndave owns phone.\nfrank is a parent of george.\ngeorge likes ball.\nbob is curious.\ndave dislikes apple.\ndave is a sibling of bob.\ndave is strong.\nalice is a friend of bob.\nbook is dirty.\nbob is angry.\ndave is sad.\n\nQUESTION:\nCould book is light explain book is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1114,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(george).",
    "c": "small(X) :- light(X).\nbig(X) :- small(X).\nsoft(X) :- big(X).\nhard(X) :- soft(X).\nnew(X) :- hard(X).\nsibling(Y,Z) :- tall(Y), weak(Z), sibling(Z,W).\nred(X) :- dirty(X).\nlikes(Y,X) :- busy(Y), wet(X), likes(U,X).\nstrong(X) :- calm(X).\nexcited(Y) :- curious(Y), sibling(Y,A), clever(A).\nfunny(Z) :- sad(Z), likes(Z,U), wet(U).\nsmooth(X) :- old(X), owns(B,X), weak(B).\nsad(Y) :- friendly(Y), likes(Y,W), heavy(W).\nheavy(X) :- heavy(X).\nred(Z) :- dirty(Z), owns(A,Z), bored(A).\nangry(Y) :- weak(Y), dislikes(Y,V), heavy(V).\nheavy(X) :- smooth(X).\nfriendly(X) :- angry(X), sad(X).\nbored(X) :- happy(X).\nbored(X) :- angry(X).\nfunny(X) :- hungry(X), excited(X).\ndirty(X) :- heavy(X).\nclever(X) :- happy(X).\nsibling(X,Y) :- curious(X), weak(Y).\nangry(X) :- happy(X), funny(X).\nnew(book).\nowns(dave,phone).\nparent(frank,george).\nlikes(george,ball).\ncurious(bob).\ndislikes(dave,apple).\nsibling(dave,bob).\nstrong(dave).\nfriend(alice,bob).\ndirty(book).\nangry(bob).\nsad(dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all Y, Z, if there exists W such that person Y is tall and person Z is weak and person Z is a sibling of person W, then person Y is a sibling of person Z.\nFor all X, if object X is dirty, then object X is red.\nFor all X, Y, if there exists U such that person Y is busy and object X is wet and person U likes object X, then person Y likes object X.\nFor all X, if person X is calm, then person X is strong.\nFor all Y, if there exists A such that person Y is curious and person Y is a sibling of person A and person A is clever, then person Y is excited.\nFor all Z, if there exists U such that person Z is sad and person Z likes object U and object U is wet, then person Z is funny.\nFor all X, if there exists B such that object X is old and person B owns object X and person B is weak, then object X is smooth.\nFor all Y, if there exists W such that person Y is friendly and person Y likes object W and object W is heavy, then person Y is sad.\nFor all X, if object X is heavy, then object X is heavy.\nFor all Z, if there exists A such that object Z is dirty and person A owns object Z and person A is bored, then object Z is red.\nFor all Y, if there exists V such that person Y is weak and person Y dislikes object V and object V is heavy, then person Y is angry.\nFor all X, if object X is smooth, then object X is heavy.\nFor all X, if person X is angry and person X is sad, then person X is friendly.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is angry, then person X is bored.\nFor all X, if person X is hungry and person X is excited, then person X is funny.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if person X is happy, then person X is clever.\nFor all X, Y, if person X is curious and person Y is weak, then person X is a sibling of person Y.\nFor all X, if person X is happy and person X is funny, then person X is angry.\n\nAnd the following facts:\nbook is new.\ndave owns phone.\nfrank is a parent of george.\ngeorge likes ball.\nbob is curious.\ndave dislikes apple.\ndave is a sibling of bob.\ndave is strong.\nalice is a friend of bob.\nbook is dirty.\nbob is angry.\ndave is sad.\n\nQUESTION:\nCould george is bored explain book is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1115,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(pencil).",
    "c": "soft(X) :- rough(X).\nlight(X) :- soft(X).\nsmall(X) :- light(X).\nhard(X) :- small(X).\nbig(X) :- hard(X).\nnew(X) :- red(X), hungry(D).\nbrave(Z) :- weak(Z), dislikes(Z,U), dirty(U).\ndirty(Y) :- smooth(Y), likes(W,Y), happy(W).\nenemy(X,Y) :- friendly(Y), strong(X), friend(X,A).\nbusy(Y) :- brave(Y).\nsibling(Z,Y) :- clever(Y), busy(Z), dislikes(Z,W).\nclean(Z) :- red(Z), dislikes(B,Z), hungry(B).\nheavy(X) :- clean(X), likes(A,X), friendly(A).\nsmooth(Z) :- old(Z), likes(A,Z), tall(A).\nhappy(X) :- curious(X).\ndirty(X) :- clean(X).\nold(X) :- clean(X), wet(X).\nsibling(X,Y) :- tired(X), funny(Y).\nfriendly(X) :- calm(X).\nred(X) :- smooth(X).\nenemy(X,Y) :- brave(X), weak(Y), parent(X,Y).\nhungry(X) :- calm(X).\nnew(X) :- old(X).\ncalm(X) :- busy(X), tall(X).\nlikes(X,Y) :- bored(X), new(Y).\nrough(pencil).\nold(pencil).\ndislikes(bob,book).\nsad(eve).\nowns(carol,car).\nfriend(dave,carol).\nfriend(eve,dave).\nred(pencil).\nlikes(bob,car).\nparent(carol,eve).\nfriend(alice,george).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if there exists D such that object X is red and person D is hungry, then object X is new.\nFor all Z, if there exists U such that person Z is weak and person Z dislikes object U and object U is dirty, then person Z is brave.\nFor all Y, if there exists W such that object Y is smooth and person W likes object Y and person W is happy, then object Y is dirty.\nFor all X, Y, if there exists A such that person Y is friendly and person X is strong and person X is a friend of person A, then person X is an enemy of person Y.\nFor all Y, if person Y is brave, then person Y is busy.\nFor all Y, Z, if there exists W such that person Y is clever and person Z is busy and person Z dislikes object W, then person Z is a sibling of person Y.\nFor all Z, if there exists B such that object Z is red and person B dislikes object Z and person B is hungry, then object Z is clean.\nFor all X, if there exists A such that object X is clean and person A likes object X and person A is friendly, then object X is heavy.\nFor all Z, if there exists A such that object Z is old and person A likes object Z and person A is tall, then object Z is smooth.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is clean and object X is wet, then object X is old.\nFor all X, Y, if person X is tired and person Y is funny, then person X is a sibling of person Y.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if object X is smooth, then object X is red.\nFor all X, Y, if person X is brave and person Y is weak and person X is a parent of person Y, then person X is an enemy of person Y.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if object X is old, then object X is new.\nFor all X, if person X is busy and person X is tall, then person X is calm.\nFor all X, Y, if person X is bored and object Y is new, then person X likes object Y.\n\nAnd the following facts:\npencil is rough.\npencil is old.\nbob dislikes book.\neve is sad.\ncarol owns car.\ndave is a friend of carol.\neve is a friend of dave.\npencil is red.\nbob likes car.\ncarol is a parent of eve.\nalice is a friend of george.\nbob is a parent of carol.\n\nQUESTION:\nIs pencil is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1116,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(frank).",
    "c": "soft(X) :- rough(X).\nlight(X) :- soft(X).\nsmall(X) :- light(X).\nhard(X) :- small(X).\nbig(X) :- hard(X).\nnew(X) :- red(X), hungry(D).\nbrave(Z) :- weak(Z), dislikes(Z,U), dirty(U).\ndirty(Y) :- smooth(Y), likes(W,Y), happy(W).\nenemy(X,Y) :- friendly(Y), strong(X), friend(X,A).\nbusy(Y) :- brave(Y).\nsibling(Z,Y) :- clever(Y), busy(Z), dislikes(Z,W).\nclean(Z) :- red(Z), dislikes(B,Z), hungry(B).\nheavy(X) :- clean(X), likes(A,X), friendly(A).\nsmooth(Z) :- old(Z), likes(A,Z), tall(A).\nhappy(X) :- curious(X).\ndirty(X) :- clean(X).\nold(X) :- clean(X), wet(X).\nsibling(X,Y) :- tired(X), funny(Y).\nfriendly(X) :- calm(X).\nred(X) :- smooth(X).\nenemy(X,Y) :- brave(X), weak(Y), parent(X,Y).\nhungry(X) :- calm(X).\nnew(X) :- old(X).\ncalm(X) :- busy(X), tall(X).\nlikes(X,Y) :- bored(X), new(Y).\nrough(pencil).\nold(pencil).\ndislikes(bob,book).\nsad(eve).\nowns(carol,car).\nfriend(dave,carol).\nfriend(eve,dave).\nred(pencil).\nlikes(bob,car).\nparent(carol,eve).\nfriend(alice,george).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if there exists D such that object X is red and person D is hungry, then object X is new.\nFor all Z, if there exists U such that person Z is weak and person Z dislikes object U and object U is dirty, then person Z is brave.\nFor all Y, if there exists W such that object Y is smooth and person W likes object Y and person W is happy, then object Y is dirty.\nFor all X, Y, if there exists A such that person Y is friendly and person X is strong and person X is a friend of person A, then person X is an enemy of person Y.\nFor all Y, if person Y is brave, then person Y is busy.\nFor all Y, Z, if there exists W such that person Y is clever and person Z is busy and person Z dislikes object W, then person Z is a sibling of person Y.\nFor all Z, if there exists B such that object Z is red and person B dislikes object Z and person B is hungry, then object Z is clean.\nFor all X, if there exists A such that object X is clean and person A likes object X and person A is friendly, then object X is heavy.\nFor all Z, if there exists A such that object Z is old and person A likes object Z and person A is tall, then object Z is smooth.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is clean and object X is wet, then object X is old.\nFor all X, Y, if person X is tired and person Y is funny, then person X is a sibling of person Y.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if object X is smooth, then object X is red.\nFor all X, Y, if person X is brave and person Y is weak and person X is a parent of person Y, then person X is an enemy of person Y.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if object X is old, then object X is new.\nFor all X, if person X is busy and person X is tall, then person X is calm.\nFor all X, Y, if person X is bored and object Y is new, then person X likes object Y.\n\nAnd the following facts:\npencil is rough.\npencil is old.\nbob dislikes book.\neve is sad.\ncarol owns car.\ndave is a friend of carol.\neve is a friend of dave.\npencil is red.\nbob likes car.\ncarol is a parent of eve.\nalice is a friend of george.\nbob is a parent of carol.\n\nQUESTION:\nIs frank is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1117,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(pencil).",
    "c": "soft(X) :- rough(X).\nlight(X) :- soft(X).\nsmall(X) :- light(X).\nhard(X) :- small(X).\nbig(X) :- hard(X).\nnew(X) :- red(X), hungry(D).\nbrave(Z) :- weak(Z), dislikes(Z,U), dirty(U).\ndirty(Y) :- smooth(Y), likes(W,Y), happy(W).\nenemy(X,Y) :- friendly(Y), strong(X), friend(X,A).\nbusy(Y) :- brave(Y).\nsibling(Z,Y) :- clever(Y), busy(Z), dislikes(Z,W).\nclean(Z) :- red(Z), dislikes(B,Z), hungry(B).\nheavy(X) :- clean(X), likes(A,X), friendly(A).\nsmooth(Z) :- old(Z), likes(A,Z), tall(A).\nhappy(X) :- curious(X).\ndirty(X) :- clean(X).\nold(X) :- clean(X), wet(X).\nsibling(X,Y) :- tired(X), funny(Y).\nfriendly(X) :- calm(X).\nred(X) :- smooth(X).\nenemy(X,Y) :- brave(X), weak(Y), parent(X,Y).\nhungry(X) :- calm(X).\nnew(X) :- old(X).\ncalm(X) :- busy(X), tall(X).\nlikes(X,Y) :- bored(X), new(Y).\nbig(pencil).\nold(pencil).\ndislikes(bob,book).\nsad(eve).\nowns(carol,car).\nfriend(dave,carol).\nfriend(eve,dave).\nred(pencil).\nlikes(bob,car).\nparent(carol,eve).\nfriend(alice,george).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if there exists D such that object X is red and person D is hungry, then object X is new.\nFor all Z, if there exists U such that person Z is weak and person Z dislikes object U and object U is dirty, then person Z is brave.\nFor all Y, if there exists W such that object Y is smooth and person W likes object Y and person W is happy, then object Y is dirty.\nFor all X, Y, if there exists A such that person Y is friendly and person X is strong and person X is a friend of person A, then person X is an enemy of person Y.\nFor all Y, if person Y is brave, then person Y is busy.\nFor all Y, Z, if there exists W such that person Y is clever and person Z is busy and person Z dislikes object W, then person Z is a sibling of person Y.\nFor all Z, if there exists B such that object Z is red and person B dislikes object Z and person B is hungry, then object Z is clean.\nFor all X, if there exists A such that object X is clean and person A likes object X and person A is friendly, then object X is heavy.\nFor all Z, if there exists A such that object Z is old and person A likes object Z and person A is tall, then object Z is smooth.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is clean and object X is wet, then object X is old.\nFor all X, Y, if person X is tired and person Y is funny, then person X is a sibling of person Y.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if object X is smooth, then object X is red.\nFor all X, Y, if person X is brave and person Y is weak and person X is a parent of person Y, then person X is an enemy of person Y.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if object X is old, then object X is new.\nFor all X, if person X is busy and person X is tall, then person X is calm.\nFor all X, Y, if person X is bored and object Y is new, then person X likes object Y.\n\nAnd the following facts:\npencil is big.\npencil is old.\nbob dislikes book.\neve is sad.\ncarol owns car.\ndave is a friend of carol.\neve is a friend of dave.\npencil is red.\nbob likes car.\ncarol is a parent of eve.\nalice is a friend of george.\nbob is a parent of carol.\n\nQUESTION:\nCould pencil is rough explain pencil is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1118,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(dave).",
    "c": "soft(X) :- rough(X).\nlight(X) :- soft(X).\nsmall(X) :- light(X).\nhard(X) :- small(X).\nbig(X) :- hard(X).\nnew(X) :- red(X), hungry(D).\nbrave(Z) :- weak(Z), dislikes(Z,U), dirty(U).\ndirty(Y) :- smooth(Y), likes(W,Y), happy(W).\nenemy(X,Y) :- friendly(Y), strong(X), friend(X,A).\nbusy(Y) :- brave(Y).\nsibling(Z,Y) :- clever(Y), busy(Z), dislikes(Z,W).\nclean(Z) :- red(Z), dislikes(B,Z), hungry(B).\nheavy(X) :- clean(X), likes(A,X), friendly(A).\nsmooth(Z) :- old(Z), likes(A,Z), tall(A).\nhappy(X) :- curious(X).\ndirty(X) :- clean(X).\nold(X) :- clean(X), wet(X).\nsibling(X,Y) :- tired(X), funny(Y).\nfriendly(X) :- calm(X).\nred(X) :- smooth(X).\nenemy(X,Y) :- brave(X), weak(Y), parent(X,Y).\nhungry(X) :- calm(X).\nnew(X) :- old(X).\ncalm(X) :- busy(X), tall(X).\nlikes(X,Y) :- bored(X), new(Y).\nbig(pencil).\nold(pencil).\ndislikes(bob,book).\nsad(eve).\nowns(carol,car).\nfriend(dave,carol).\nfriend(eve,dave).\nred(pencil).\nlikes(bob,car).\nparent(carol,eve).\nfriend(alice,george).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is light.\nFor all X, if object X is light, then object X is small.\nFor all X, if object X is small, then object X is hard.\nFor all X, if object X is hard, then object X is big.\nFor all X, if there exists D such that object X is red and person D is hungry, then object X is new.\nFor all Z, if there exists U such that person Z is weak and person Z dislikes object U and object U is dirty, then person Z is brave.\nFor all Y, if there exists W such that object Y is smooth and person W likes object Y and person W is happy, then object Y is dirty.\nFor all X, Y, if there exists A such that person Y is friendly and person X is strong and person X is a friend of person A, then person X is an enemy of person Y.\nFor all Y, if person Y is brave, then person Y is busy.\nFor all Y, Z, if there exists W such that person Y is clever and person Z is busy and person Z dislikes object W, then person Z is a sibling of person Y.\nFor all Z, if there exists B such that object Z is red and person B dislikes object Z and person B is hungry, then object Z is clean.\nFor all X, if there exists A such that object X is clean and person A likes object X and person A is friendly, then object X is heavy.\nFor all Z, if there exists A such that object Z is old and person A likes object Z and person A is tall, then object Z is smooth.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if object X is clean, then object X is dirty.\nFor all X, if object X is clean and object X is wet, then object X is old.\nFor all X, Y, if person X is tired and person Y is funny, then person X is a sibling of person Y.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if object X is smooth, then object X is red.\nFor all X, Y, if person X is brave and person Y is weak and person X is a parent of person Y, then person X is an enemy of person Y.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if object X is old, then object X is new.\nFor all X, if person X is busy and person X is tall, then person X is calm.\nFor all X, Y, if person X is bored and object Y is new, then person X likes object Y.\n\nAnd the following facts:\npencil is big.\npencil is old.\nbob dislikes book.\neve is sad.\ncarol owns car.\ndave is a friend of carol.\neve is a friend of dave.\npencil is red.\nbob likes car.\ncarol is a parent of eve.\nalice is a friend of george.\nbob is a parent of carol.\n\nQUESTION:\nCould dave is tired explain pencil is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1119,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(carol).",
    "c": "calm(X) :- weak(X).\nhungry(X) :- calm(X).\nexcited(X) :- hungry(X).\ncalm(X) :- excited(X).\ncurious(X) :- calm(X).\nfriendly(X) :- curious(X).\nbored(X) :- friendly(X).\ntall(X) :- bored(X).\nweak(X) :- tall(X).\nfunny(X) :- weak(X).\ndirty(Z) :- small(Z), dislikes(B,Z), angry(B).\nhappy(Z) :- sad(Z), sibling(Z,B), happy(B).\ndislikes(Y,Z) :- strong(Y), dirty(Z).\nenemy(X,Z) :- happy(Z), angry(X), strong(D).\nangry(X) :- tired(X), brave(E).\nlight(Z) :- smooth(Z).\nlikes(Y,X) :- brave(Y), clean(X), tired(A).\nnew(Y) :- hard(Y).\ntired(Y) :- strong(Y), owns(Y,W), new(W).\nsoft(X) :- old(X).\nangry(X) :- busy(X), strong(X).\nsad(X) :- happy(X), happy(X).\ntired(X) :- happy(X), angry(X).\nsad(X) :- tired(X).\nold(X) :- heavy(X).\nweak(carol).\nsmall(ball).\nowns(eve,ball).\nhappy(eve).\nlikes(george,ball).\nowns(carol,pencil).\nparent(dave,george).\nparent(george,frank).\ndislikes(dave,apple).\nred(ball).\nenemy(carol,bob).\ndislikes(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all Z, if there exists B such that object Z is small and person B dislikes object Z and person B is angry, then object Z is dirty.\nFor all Z, if there exists B such that person Z is sad and person Z is a sibling of person B and person B is happy, then person Z is happy.\nFor all Y, Z, if person Y is strong and object Z is dirty, then person Y dislikes object Z.\nFor all X, Z, if there exists D such that person Z is happy and person X is angry and person D is strong, then person X is an enemy of person Z.\nFor all X, if there exists E such that person X is tired and person E is brave, then person X is angry.\nFor all Z, if object Z is smooth, then object Z is light.\nFor all X, Y, if there exists A such that person Y is brave and object X is clean and person A is tired, then person Y likes object X.\nFor all Y, if object Y is hard, then object Y is new.\nFor all Y, if there exists W such that person Y is strong and person Y owns object W and object W is new, then person Y is tired.\nFor all X, if object X is old, then object X is soft.\nFor all X, if person X is busy and person X is strong, then person X is angry.\nFor all X, if person X is happy and person X is happy, then person X is sad.\nFor all X, if person X is happy and person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if object X is heavy, then object X is old.\n\nAnd the following facts:\ncarol is weak.\nball is small.\neve owns ball.\neve is happy.\ngeorge likes ball.\ncarol owns pencil.\ndave is a parent of george.\ngeorge is a parent of frank.\ndave dislikes apple.\nball is red.\ncarol is an enemy of bob.\ndave dislikes book.\n\nQUESTION:\nIs carol is funny true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1120,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(eve).",
    "c": "calm(X) :- weak(X).\nhungry(X) :- calm(X).\nexcited(X) :- hungry(X).\ncalm(X) :- excited(X).\ncurious(X) :- calm(X).\nfriendly(X) :- curious(X).\nbored(X) :- friendly(X).\ntall(X) :- bored(X).\nweak(X) :- tall(X).\nfunny(X) :- weak(X).\ndirty(Z) :- small(Z), dislikes(B,Z), angry(B).\nhappy(Z) :- sad(Z), sibling(Z,B), happy(B).\ndislikes(Y,Z) :- strong(Y), dirty(Z).\nenemy(X,Z) :- happy(Z), angry(X), strong(D).\nangry(X) :- tired(X), brave(E).\nlight(Z) :- smooth(Z).\nlikes(Y,X) :- brave(Y), clean(X), tired(A).\nnew(Y) :- hard(Y).\ntired(Y) :- strong(Y), owns(Y,W), new(W).\nsoft(X) :- old(X).\nangry(X) :- busy(X), strong(X).\nsad(X) :- happy(X), happy(X).\ntired(X) :- happy(X), angry(X).\nsad(X) :- tired(X).\nold(X) :- heavy(X).\nweak(carol).\nsmall(ball).\nowns(eve,ball).\nhappy(eve).\nlikes(george,ball).\nowns(carol,pencil).\nparent(dave,george).\nparent(george,frank).\ndislikes(dave,apple).\nred(ball).\nenemy(carol,bob).\ndislikes(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all Z, if there exists B such that object Z is small and person B dislikes object Z and person B is angry, then object Z is dirty.\nFor all Z, if there exists B such that person Z is sad and person Z is a sibling of person B and person B is happy, then person Z is happy.\nFor all Y, Z, if person Y is strong and object Z is dirty, then person Y dislikes object Z.\nFor all X, Z, if there exists D such that person Z is happy and person X is angry and person D is strong, then person X is an enemy of person Z.\nFor all X, if there exists E such that person X is tired and person E is brave, then person X is angry.\nFor all Z, if object Z is smooth, then object Z is light.\nFor all X, Y, if there exists A such that person Y is brave and object X is clean and person A is tired, then person Y likes object X.\nFor all Y, if object Y is hard, then object Y is new.\nFor all Y, if there exists W such that person Y is strong and person Y owns object W and object W is new, then person Y is tired.\nFor all X, if object X is old, then object X is soft.\nFor all X, if person X is busy and person X is strong, then person X is angry.\nFor all X, if person X is happy and person X is happy, then person X is sad.\nFor all X, if person X is happy and person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if object X is heavy, then object X is old.\n\nAnd the following facts:\ncarol is weak.\nball is small.\neve owns ball.\neve is happy.\ngeorge likes ball.\ncarol owns pencil.\ndave is a parent of george.\ngeorge is a parent of frank.\ndave dislikes apple.\nball is red.\ncarol is an enemy of bob.\ndave dislikes book.\n\nQUESTION:\nIs eve is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1121,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(carol).",
    "c": "calm(X) :- weak(X).\nhungry(X) :- calm(X).\nexcited(X) :- hungry(X).\ncalm(X) :- excited(X).\ncurious(X) :- calm(X).\nfriendly(X) :- curious(X).\nbored(X) :- friendly(X).\ntall(X) :- bored(X).\nweak(X) :- tall(X).\nfunny(X) :- weak(X).\ndirty(Z) :- small(Z), dislikes(B,Z), angry(B).\nhappy(Z) :- sad(Z), sibling(Z,B), happy(B).\ndislikes(Y,Z) :- strong(Y), dirty(Z).\nenemy(X,Z) :- happy(Z), angry(X), strong(D).\nangry(X) :- tired(X), brave(E).\nlight(Z) :- smooth(Z).\nlikes(Y,X) :- brave(Y), clean(X), tired(A).\nnew(Y) :- hard(Y).\ntired(Y) :- strong(Y), owns(Y,W), new(W).\nsoft(X) :- old(X).\nangry(X) :- busy(X), strong(X).\nsad(X) :- happy(X), happy(X).\ntired(X) :- happy(X), angry(X).\nsad(X) :- tired(X).\nold(X) :- heavy(X).\nfunny(carol).\nsmall(ball).\nowns(eve,ball).\nhappy(eve).\nlikes(george,ball).\nowns(carol,pencil).\nparent(dave,george).\nparent(george,frank).\ndislikes(dave,apple).\nred(ball).\nenemy(carol,bob).\ndislikes(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all Z, if there exists B such that object Z is small and person B dislikes object Z and person B is angry, then object Z is dirty.\nFor all Z, if there exists B such that person Z is sad and person Z is a sibling of person B and person B is happy, then person Z is happy.\nFor all Y, Z, if person Y is strong and object Z is dirty, then person Y dislikes object Z.\nFor all X, Z, if there exists D such that person Z is happy and person X is angry and person D is strong, then person X is an enemy of person Z.\nFor all X, if there exists E such that person X is tired and person E is brave, then person X is angry.\nFor all Z, if object Z is smooth, then object Z is light.\nFor all X, Y, if there exists A such that person Y is brave and object X is clean and person A is tired, then person Y likes object X.\nFor all Y, if object Y is hard, then object Y is new.\nFor all Y, if there exists W such that person Y is strong and person Y owns object W and object W is new, then person Y is tired.\nFor all X, if object X is old, then object X is soft.\nFor all X, if person X is busy and person X is strong, then person X is angry.\nFor all X, if person X is happy and person X is happy, then person X is sad.\nFor all X, if person X is happy and person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if object X is heavy, then object X is old.\n\nAnd the following facts:\ncarol is funny.\nball is small.\neve owns ball.\neve is happy.\ngeorge likes ball.\ncarol owns pencil.\ndave is a parent of george.\ngeorge is a parent of frank.\ndave dislikes apple.\nball is red.\ncarol is an enemy of bob.\ndave dislikes book.\n\nQUESTION:\nCould carol is weak explain carol is funny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1122,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(ball).",
    "c": "calm(X) :- weak(X).\nhungry(X) :- calm(X).\nexcited(X) :- hungry(X).\ncalm(X) :- excited(X).\ncurious(X) :- calm(X).\nfriendly(X) :- curious(X).\nbored(X) :- friendly(X).\ntall(X) :- bored(X).\nweak(X) :- tall(X).\nfunny(X) :- weak(X).\ndirty(Z) :- small(Z), dislikes(B,Z), angry(B).\nhappy(Z) :- sad(Z), sibling(Z,B), happy(B).\ndislikes(Y,Z) :- strong(Y), dirty(Z).\nenemy(X,Z) :- happy(Z), angry(X), strong(D).\nangry(X) :- tired(X), brave(E).\nlight(Z) :- smooth(Z).\nlikes(Y,X) :- brave(Y), clean(X), tired(A).\nnew(Y) :- hard(Y).\ntired(Y) :- strong(Y), owns(Y,W), new(W).\nsoft(X) :- old(X).\nangry(X) :- busy(X), strong(X).\nsad(X) :- happy(X), happy(X).\ntired(X) :- happy(X), angry(X).\nsad(X) :- tired(X).\nold(X) :- heavy(X).\nfunny(carol).\nsmall(ball).\nowns(eve,ball).\nhappy(eve).\nlikes(george,ball).\nowns(carol,pencil).\nparent(dave,george).\nparent(george,frank).\ndislikes(dave,apple).\nred(ball).\nenemy(carol,bob).\ndislikes(dave,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all X, if person X is curious, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all Z, if there exists B such that object Z is small and person B dislikes object Z and person B is angry, then object Z is dirty.\nFor all Z, if there exists B such that person Z is sad and person Z is a sibling of person B and person B is happy, then person Z is happy.\nFor all Y, Z, if person Y is strong and object Z is dirty, then person Y dislikes object Z.\nFor all X, Z, if there exists D such that person Z is happy and person X is angry and person D is strong, then person X is an enemy of person Z.\nFor all X, if there exists E such that person X is tired and person E is brave, then person X is angry.\nFor all Z, if object Z is smooth, then object Z is light.\nFor all X, Y, if there exists A such that person Y is brave and object X is clean and person A is tired, then person Y likes object X.\nFor all Y, if object Y is hard, then object Y is new.\nFor all Y, if there exists W such that person Y is strong and person Y owns object W and object W is new, then person Y is tired.\nFor all X, if object X is old, then object X is soft.\nFor all X, if person X is busy and person X is strong, then person X is angry.\nFor all X, if person X is happy and person X is happy, then person X is sad.\nFor all X, if person X is happy and person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if object X is heavy, then object X is old.\n\nAnd the following facts:\ncarol is funny.\nball is small.\neve owns ball.\neve is happy.\ngeorge likes ball.\ncarol owns pencil.\ndave is a parent of george.\ngeorge is a parent of frank.\ndave dislikes apple.\nball is red.\ncarol is an enemy of bob.\ndave dislikes book.\n\nQUESTION:\nCould ball is heavy explain carol is funny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1123,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(george).",
    "c": "curious(X) :- angry(X).\ntall(X) :- curious(X).\nclever(X) :- tall(X).\nhungry(X) :- clever(X).\nstrong(X) :- hungry(X).\nfriendly(X) :- strong(X).\nhappy(X) :- friendly(X).\nbrave(X) :- happy(X).\ntired(X) :- brave(X).\nclever(X) :- tired(X).\nsmooth(Z) :- small(Z), likes(U,Z), excited(U).\nweak(X) :- excited(X), friend(X,U), busy(U).\nclean(Y) :- small(Y).\ndirty(Z) :- smooth(Z), owns(A,Z), funny(A).\nwet(X) :- soft(X), likes(V,X), calm(V).\nsoft(Z) :- wet(Z).\nhard(Y) :- dirty(Y), likes(B,Y), excited(B).\nlight(Y) :- old(Y).\ndislikes(Z,X) :- bored(Z), new(X), dislikes(V,X).\nrough(X) :- soft(X), red(X).\nheavy(X) :- wet(X).\nweak(X) :- excited(X), sad(X).\nclean(X) :- dirty(X).\nexcited(X) :- weak(X).\nsibling(X,Y) :- sad(X), calm(Y), parent(X,Y).\nangry(george).\nbored(bob).\nclean(book).\nsmall(ball).\nfriend(carol,frank).\nlikes(bob,book).\nowns(eve,ball).\nenemy(alice,eve).\nold(phone).\nparent(alice,eve).\nparent(dave,alice).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all Z, if there exists U such that object Z is small and person U likes object Z and person U is excited, then object Z is smooth.\nFor all X, if there exists U such that person X is excited and person X is a friend of person U and person U is busy, then person X is weak.\nFor all Y, if object Y is small, then object Y is clean.\nFor all Z, if there exists A such that object Z is smooth and person A owns object Z and person A is funny, then object Z is dirty.\nFor all X, if there exists V such that object X is soft and person V likes object X and person V is calm, then object X is wet.\nFor all Z, if object Z is wet, then object Z is soft.\nFor all Y, if there exists B such that object Y is dirty and person B likes object Y and person B is excited, then object Y is hard.\nFor all Y, if object Y is old, then object Y is light.\nFor all X, Z, if there exists V such that person Z is bored and object X is new and person V dislikes object X, then person Z dislikes object X.\nFor all X, if object X is soft and object X is red, then object X is rough.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is excited and person X is sad, then person X is weak.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if person X is weak, then person X is excited.\nFor all X, Y, if person X is sad and person Y is calm and person X is a parent of person Y, then person X is a sibling of person Y.\n\nAnd the following facts:\ngeorge is angry.\nbob is bored.\nbook is clean.\nball is small.\ncarol is a friend of frank.\nbob likes book.\neve owns ball.\nalice is an enemy of eve.\nphone is old.\nalice is a parent of eve.\ndave is a parent of alice.\ncarol is a parent of bob.\n\nQUESTION:\nIs george is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1124,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(dave).",
    "c": "curious(X) :- angry(X).\ntall(X) :- curious(X).\nclever(X) :- tall(X).\nhungry(X) :- clever(X).\nstrong(X) :- hungry(X).\nfriendly(X) :- strong(X).\nhappy(X) :- friendly(X).\nbrave(X) :- happy(X).\ntired(X) :- brave(X).\nclever(X) :- tired(X).\nsmooth(Z) :- small(Z), likes(U,Z), excited(U).\nweak(X) :- excited(X), friend(X,U), busy(U).\nclean(Y) :- small(Y).\ndirty(Z) :- smooth(Z), owns(A,Z), funny(A).\nwet(X) :- soft(X), likes(V,X), calm(V).\nsoft(Z) :- wet(Z).\nhard(Y) :- dirty(Y), likes(B,Y), excited(B).\nlight(Y) :- old(Y).\ndislikes(Z,X) :- bored(Z), new(X), dislikes(V,X).\nrough(X) :- soft(X), red(X).\nheavy(X) :- wet(X).\nweak(X) :- excited(X), sad(X).\nclean(X) :- dirty(X).\nexcited(X) :- weak(X).\nsibling(X,Y) :- sad(X), calm(Y), parent(X,Y).\nangry(george).\nbored(bob).\nclean(book).\nsmall(ball).\nfriend(carol,frank).\nlikes(bob,book).\nowns(eve,ball).\nenemy(alice,eve).\nold(phone).\nparent(alice,eve).\nparent(dave,alice).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all Z, if there exists U such that object Z is small and person U likes object Z and person U is excited, then object Z is smooth.\nFor all X, if there exists U such that person X is excited and person X is a friend of person U and person U is busy, then person X is weak.\nFor all Y, if object Y is small, then object Y is clean.\nFor all Z, if there exists A such that object Z is smooth and person A owns object Z and person A is funny, then object Z is dirty.\nFor all X, if there exists V such that object X is soft and person V likes object X and person V is calm, then object X is wet.\nFor all Z, if object Z is wet, then object Z is soft.\nFor all Y, if there exists B such that object Y is dirty and person B likes object Y and person B is excited, then object Y is hard.\nFor all Y, if object Y is old, then object Y is light.\nFor all X, Z, if there exists V such that person Z is bored and object X is new and person V dislikes object X, then person Z dislikes object X.\nFor all X, if object X is soft and object X is red, then object X is rough.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is excited and person X is sad, then person X is weak.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if person X is weak, then person X is excited.\nFor all X, Y, if person X is sad and person Y is calm and person X is a parent of person Y, then person X is a sibling of person Y.\n\nAnd the following facts:\ngeorge is angry.\nbob is bored.\nbook is clean.\nball is small.\ncarol is a friend of frank.\nbob likes book.\neve owns ball.\nalice is an enemy of eve.\nphone is old.\nalice is a parent of eve.\ndave is a parent of alice.\ncarol is a parent of bob.\n\nQUESTION:\nIs dave is brave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1125,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(george).",
    "c": "curious(X) :- angry(X).\ntall(X) :- curious(X).\nclever(X) :- tall(X).\nhungry(X) :- clever(X).\nstrong(X) :- hungry(X).\nfriendly(X) :- strong(X).\nhappy(X) :- friendly(X).\nbrave(X) :- happy(X).\ntired(X) :- brave(X).\nclever(X) :- tired(X).\nsmooth(Z) :- small(Z), likes(U,Z), excited(U).\nweak(X) :- excited(X), friend(X,U), busy(U).\nclean(Y) :- small(Y).\ndirty(Z) :- smooth(Z), owns(A,Z), funny(A).\nwet(X) :- soft(X), likes(V,X), calm(V).\nsoft(Z) :- wet(Z).\nhard(Y) :- dirty(Y), likes(B,Y), excited(B).\nlight(Y) :- old(Y).\ndislikes(Z,X) :- bored(Z), new(X), dislikes(V,X).\nrough(X) :- soft(X), red(X).\nheavy(X) :- wet(X).\nweak(X) :- excited(X), sad(X).\nclean(X) :- dirty(X).\nexcited(X) :- weak(X).\nsibling(X,Y) :- sad(X), calm(Y), parent(X,Y).\nclever(george).\nbored(bob).\nclean(book).\nsmall(ball).\nfriend(carol,frank).\nlikes(bob,book).\nowns(eve,ball).\nenemy(alice,eve).\nold(phone).\nparent(alice,eve).\nparent(dave,alice).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all Z, if there exists U such that object Z is small and person U likes object Z and person U is excited, then object Z is smooth.\nFor all X, if there exists U such that person X is excited and person X is a friend of person U and person U is busy, then person X is weak.\nFor all Y, if object Y is small, then object Y is clean.\nFor all Z, if there exists A such that object Z is smooth and person A owns object Z and person A is funny, then object Z is dirty.\nFor all X, if there exists V such that object X is soft and person V likes object X and person V is calm, then object X is wet.\nFor all Z, if object Z is wet, then object Z is soft.\nFor all Y, if there exists B such that object Y is dirty and person B likes object Y and person B is excited, then object Y is hard.\nFor all Y, if object Y is old, then object Y is light.\nFor all X, Z, if there exists V such that person Z is bored and object X is new and person V dislikes object X, then person Z dislikes object X.\nFor all X, if object X is soft and object X is red, then object X is rough.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is excited and person X is sad, then person X is weak.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if person X is weak, then person X is excited.\nFor all X, Y, if person X is sad and person Y is calm and person X is a parent of person Y, then person X is a sibling of person Y.\n\nAnd the following facts:\ngeorge is clever.\nbob is bored.\nbook is clean.\nball is small.\ncarol is a friend of frank.\nbob likes book.\neve owns ball.\nalice is an enemy of eve.\nphone is old.\nalice is a parent of eve.\ndave is a parent of alice.\ncarol is a parent of bob.\n\nQUESTION:\nCould george is angry explain george is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1126,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(frank).",
    "c": "curious(X) :- angry(X).\ntall(X) :- curious(X).\nclever(X) :- tall(X).\nhungry(X) :- clever(X).\nstrong(X) :- hungry(X).\nfriendly(X) :- strong(X).\nhappy(X) :- friendly(X).\nbrave(X) :- happy(X).\ntired(X) :- brave(X).\nclever(X) :- tired(X).\nsmooth(Z) :- small(Z), likes(U,Z), excited(U).\nweak(X) :- excited(X), friend(X,U), busy(U).\nclean(Y) :- small(Y).\ndirty(Z) :- smooth(Z), owns(A,Z), funny(A).\nwet(X) :- soft(X), likes(V,X), calm(V).\nsoft(Z) :- wet(Z).\nhard(Y) :- dirty(Y), likes(B,Y), excited(B).\nlight(Y) :- old(Y).\ndislikes(Z,X) :- bored(Z), new(X), dislikes(V,X).\nrough(X) :- soft(X), red(X).\nheavy(X) :- wet(X).\nweak(X) :- excited(X), sad(X).\nclean(X) :- dirty(X).\nexcited(X) :- weak(X).\nsibling(X,Y) :- sad(X), calm(Y), parent(X,Y).\nclever(george).\nbored(bob).\nclean(book).\nsmall(ball).\nfriend(carol,frank).\nlikes(bob,book).\nowns(eve,ball).\nenemy(alice,eve).\nold(phone).\nparent(alice,eve).\nparent(dave,alice).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all Z, if there exists U such that object Z is small and person U likes object Z and person U is excited, then object Z is smooth.\nFor all X, if there exists U such that person X is excited and person X is a friend of person U and person U is busy, then person X is weak.\nFor all Y, if object Y is small, then object Y is clean.\nFor all Z, if there exists A such that object Z is smooth and person A owns object Z and person A is funny, then object Z is dirty.\nFor all X, if there exists V such that object X is soft and person V likes object X and person V is calm, then object X is wet.\nFor all Z, if object Z is wet, then object Z is soft.\nFor all Y, if there exists B such that object Y is dirty and person B likes object Y and person B is excited, then object Y is hard.\nFor all Y, if object Y is old, then object Y is light.\nFor all X, Z, if there exists V such that person Z is bored and object X is new and person V dislikes object X, then person Z dislikes object X.\nFor all X, if object X is soft and object X is red, then object X is rough.\nFor all X, if object X is wet, then object X is heavy.\nFor all X, if person X is excited and person X is sad, then person X is weak.\nFor all X, if object X is dirty, then object X is clean.\nFor all X, if person X is weak, then person X is excited.\nFor all X, Y, if person X is sad and person Y is calm and person X is a parent of person Y, then person X is a sibling of person Y.\n\nAnd the following facts:\ngeorge is clever.\nbob is bored.\nbook is clean.\nball is small.\ncarol is a friend of frank.\nbob likes book.\neve owns ball.\nalice is an enemy of eve.\nphone is old.\nalice is a parent of eve.\ndave is a parent of alice.\ncarol is a parent of bob.\n\nQUESTION:\nCould frank is excited explain george is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1127,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(eve).",
    "c": "friendly(X) :- tired(X).\nfunny(X) :- friendly(X).\nstrong(X) :- funny(X).\nweak(X) :- strong(X).\nhappy(X) :- weak(X).\nbusy(X) :- happy(X).\nangry(X) :- busy(X).\nhungry(X) :- angry(X).\ncalm(X) :- hungry(X).\nsad(X) :- calm(X).\nexcited(Y) :- brave(Y).\nexcited(X) :- brave(X), sibling(X,U), clever(U).\nclean(Z) :- old(Z).\ndirty(Z) :- dirty(Z), owns(U,Z), excited(U).\nowns(X,Z) :- red(Z), tall(X), parent(X,W).\nclean(Z) :- smooth(Z), dislikes(B,Z), tall(B).\nparent(Y,X) :- bored(Y), clever(X), enemy(X,V).\nred(X) :- soft(X), dislikes(W,X), bored(W).\nclean(X) :- new(X).\nsmall(X) :- dirty(X).\nwet(X) :- clean(X), clean(X).\ntall(X) :- clever(X).\nold(X) :- red(X).\nbored(X) :- tall(X).\nhard(X) :- heavy(X).\ntired(eve).\nowns(alice,car).\nfriend(carol,alice).\nenemy(george,carol).\nparent(bob,eve).\nlikes(george,book).\nsoft(phone).\nowns(carol,car).\nlikes(alice,book).\nfriend(alice,george).\nclever(frank).\nsmall(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all Y, if person Y is brave, then person Y is excited.\nFor all X, if there exists U such that person X is brave and person X is a sibling of person U and person U is clever, then person X is excited.\nFor all Z, if object Z is old, then object Z is clean.\nFor all Z, if there exists U such that object Z is dirty and person U owns object Z and person U is excited, then object Z is dirty.\nFor all X, Z, if there exists W such that object Z is red and person X is tall and person X is a parent of person W, then person X owns object Z.\nFor all Z, if there exists B such that object Z is smooth and person B dislikes object Z and person B is tall, then object Z is clean.\nFor all X, Y, if there exists V such that person Y is bored and person X is clever and person X is an enemy of person V, then person Y is a parent of person X.\nFor all X, if there exists W such that object X is soft and person W dislikes object X and person W is bored, then object X is red.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is clean and object X is clean, then object X is wet.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if object X is red, then object X is old.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if object X is heavy, then object X is hard.\n\nAnd the following facts:\neve is tired.\nalice owns car.\ncarol is a friend of alice.\ngeorge is an enemy of carol.\nbob is a parent of eve.\ngeorge likes book.\nphone is soft.\ncarol owns car.\nalice likes book.\nalice is a friend of george.\nfrank is clever.\napple is small.\n\nQUESTION:\nIs eve is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1128,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(book).",
    "c": "friendly(X) :- tired(X).\nfunny(X) :- friendly(X).\nstrong(X) :- funny(X).\nweak(X) :- strong(X).\nhappy(X) :- weak(X).\nbusy(X) :- happy(X).\nangry(X) :- busy(X).\nhungry(X) :- angry(X).\ncalm(X) :- hungry(X).\nsad(X) :- calm(X).\nexcited(Y) :- brave(Y).\nexcited(X) :- brave(X), sibling(X,U), clever(U).\nclean(Z) :- old(Z).\ndirty(Z) :- dirty(Z), owns(U,Z), excited(U).\nowns(X,Z) :- red(Z), tall(X), parent(X,W).\nclean(Z) :- smooth(Z), dislikes(B,Z), tall(B).\nparent(Y,X) :- bored(Y), clever(X), enemy(X,V).\nred(X) :- soft(X), dislikes(W,X), bored(W).\nclean(X) :- new(X).\nsmall(X) :- dirty(X).\nwet(X) :- clean(X), clean(X).\ntall(X) :- clever(X).\nold(X) :- red(X).\nbored(X) :- tall(X).\nhard(X) :- heavy(X).\ntired(eve).\nowns(alice,car).\nfriend(carol,alice).\nenemy(george,carol).\nparent(bob,eve).\nlikes(george,book).\nsoft(phone).\nowns(carol,car).\nlikes(alice,book).\nfriend(alice,george).\nclever(frank).\nsmall(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all Y, if person Y is brave, then person Y is excited.\nFor all X, if there exists U such that person X is brave and person X is a sibling of person U and person U is clever, then person X is excited.\nFor all Z, if object Z is old, then object Z is clean.\nFor all Z, if there exists U such that object Z is dirty and person U owns object Z and person U is excited, then object Z is dirty.\nFor all X, Z, if there exists W such that object Z is red and person X is tall and person X is a parent of person W, then person X owns object Z.\nFor all Z, if there exists B such that object Z is smooth and person B dislikes object Z and person B is tall, then object Z is clean.\nFor all X, Y, if there exists V such that person Y is bored and person X is clever and person X is an enemy of person V, then person Y is a parent of person X.\nFor all X, if there exists W such that object X is soft and person W dislikes object X and person W is bored, then object X is red.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is clean and object X is clean, then object X is wet.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if object X is red, then object X is old.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if object X is heavy, then object X is hard.\n\nAnd the following facts:\neve is tired.\nalice owns car.\ncarol is a friend of alice.\ngeorge is an enemy of carol.\nbob is a parent of eve.\ngeorge likes book.\nphone is soft.\ncarol owns car.\nalice likes book.\nalice is a friend of george.\nfrank is clever.\napple is small.\n\nQUESTION:\nIs book is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1129,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(eve).",
    "c": "friendly(X) :- tired(X).\nfunny(X) :- friendly(X).\nstrong(X) :- funny(X).\nweak(X) :- strong(X).\nhappy(X) :- weak(X).\nbusy(X) :- happy(X).\nangry(X) :- busy(X).\nhungry(X) :- angry(X).\ncalm(X) :- hungry(X).\nsad(X) :- calm(X).\nexcited(Y) :- brave(Y).\nexcited(X) :- brave(X), sibling(X,U), clever(U).\nclean(Z) :- old(Z).\ndirty(Z) :- dirty(Z), owns(U,Z), excited(U).\nowns(X,Z) :- red(Z), tall(X), parent(X,W).\nclean(Z) :- smooth(Z), dislikes(B,Z), tall(B).\nparent(Y,X) :- bored(Y), clever(X), enemy(X,V).\nred(X) :- soft(X), dislikes(W,X), bored(W).\nclean(X) :- new(X).\nsmall(X) :- dirty(X).\nwet(X) :- clean(X), clean(X).\ntall(X) :- clever(X).\nold(X) :- red(X).\nbored(X) :- tall(X).\nhard(X) :- heavy(X).\nsad(eve).\nowns(alice,car).\nfriend(carol,alice).\nenemy(george,carol).\nparent(bob,eve).\nlikes(george,book).\nsoft(phone).\nowns(carol,car).\nlikes(alice,book).\nfriend(alice,george).\nclever(frank).\nsmall(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all Y, if person Y is brave, then person Y is excited.\nFor all X, if there exists U such that person X is brave and person X is a sibling of person U and person U is clever, then person X is excited.\nFor all Z, if object Z is old, then object Z is clean.\nFor all Z, if there exists U such that object Z is dirty and person U owns object Z and person U is excited, then object Z is dirty.\nFor all X, Z, if there exists W such that object Z is red and person X is tall and person X is a parent of person W, then person X owns object Z.\nFor all Z, if there exists B such that object Z is smooth and person B dislikes object Z and person B is tall, then object Z is clean.\nFor all X, Y, if there exists V such that person Y is bored and person X is clever and person X is an enemy of person V, then person Y is a parent of person X.\nFor all X, if there exists W such that object X is soft and person W dislikes object X and person W is bored, then object X is red.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is clean and object X is clean, then object X is wet.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if object X is red, then object X is old.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if object X is heavy, then object X is hard.\n\nAnd the following facts:\neve is sad.\nalice owns car.\ncarol is a friend of alice.\ngeorge is an enemy of carol.\nbob is a parent of eve.\ngeorge likes book.\nphone is soft.\ncarol owns car.\nalice likes book.\nalice is a friend of george.\nfrank is clever.\napple is small.\n\nQUESTION:\nCould eve is tired explain eve is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1130,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(car).",
    "c": "friendly(X) :- tired(X).\nfunny(X) :- friendly(X).\nstrong(X) :- funny(X).\nweak(X) :- strong(X).\nhappy(X) :- weak(X).\nbusy(X) :- happy(X).\nangry(X) :- busy(X).\nhungry(X) :- angry(X).\ncalm(X) :- hungry(X).\nsad(X) :- calm(X).\nexcited(Y) :- brave(Y).\nexcited(X) :- brave(X), sibling(X,U), clever(U).\nclean(Z) :- old(Z).\ndirty(Z) :- dirty(Z), owns(U,Z), excited(U).\nowns(X,Z) :- red(Z), tall(X), parent(X,W).\nclean(Z) :- smooth(Z), dislikes(B,Z), tall(B).\nparent(Y,X) :- bored(Y), clever(X), enemy(X,V).\nred(X) :- soft(X), dislikes(W,X), bored(W).\nclean(X) :- new(X).\nsmall(X) :- dirty(X).\nwet(X) :- clean(X), clean(X).\ntall(X) :- clever(X).\nold(X) :- red(X).\nbored(X) :- tall(X).\nhard(X) :- heavy(X).\nsad(eve).\nowns(alice,car).\nfriend(carol,alice).\nenemy(george,carol).\nparent(bob,eve).\nlikes(george,book).\nsoft(phone).\nowns(carol,car).\nlikes(alice,book).\nfriend(alice,george).\nclever(frank).\nsmall(apple).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is strong.\nFor all X, if person X is strong, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all Y, if person Y is brave, then person Y is excited.\nFor all X, if there exists U such that person X is brave and person X is a sibling of person U and person U is clever, then person X is excited.\nFor all Z, if object Z is old, then object Z is clean.\nFor all Z, if there exists U such that object Z is dirty and person U owns object Z and person U is excited, then object Z is dirty.\nFor all X, Z, if there exists W such that object Z is red and person X is tall and person X is a parent of person W, then person X owns object Z.\nFor all Z, if there exists B such that object Z is smooth and person B dislikes object Z and person B is tall, then object Z is clean.\nFor all X, Y, if there exists V such that person Y is bored and person X is clever and person X is an enemy of person V, then person Y is a parent of person X.\nFor all X, if there exists W such that object X is soft and person W dislikes object X and person W is bored, then object X is red.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is clean and object X is clean, then object X is wet.\nFor all X, if person X is clever, then person X is tall.\nFor all X, if object X is red, then object X is old.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if object X is heavy, then object X is hard.\n\nAnd the following facts:\neve is sad.\nalice owns car.\ncarol is a friend of alice.\ngeorge is an enemy of carol.\nbob is a parent of eve.\ngeorge likes book.\nphone is soft.\ncarol owns car.\nalice likes book.\nalice is a friend of george.\nfrank is clever.\napple is small.\n\nQUESTION:\nCould car is big explain eve is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1131,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(eve).",
    "c": "clever(X) :- funny(X).\nhungry(X) :- clever(X).\nfriendly(X) :- hungry(X).\nhappy(X) :- friendly(X).\nangry(X) :- happy(X).\ntall(X) :- angry(X).\nsad(X) :- tall(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nbored(X) :- curious(X).\nnew(X) :- dirty(X), likes(A,X), excited(A).\nrough(Y) :- big(Y), owns(V,Y), tired(V).\nnew(X) :- dirty(X), dislikes(B,X), excited(B).\nrough(Z) :- new(Z), likes(U,Z), weak(U).\nrough(X) :- big(X), dislikes(B,X), weak(B).\ntired(Y) :- weak(Y), owns(Y,A), new(A).\nfriend(X,Y) :- excited(X), excited(Y), sibling(X,Y).\ndirty(X) :- smooth(X).\nrough(X) :- hard(X).\nsibling(X,Y) :- brave(X), excited(Y).\nrough(X) :- wet(X), clean(X).\nbrave(X) :- tired(X).\nbusy(X) :- excited(X), tired(X).\nhard(X) :- clean(X).\nsmall(X) :- rough(X), dirty(X).\nfunny(eve).\nclean(car).\nfriend(eve,alice).\nparent(alice,dave).\nweak(frank).\nsmall(book).\nsmooth(apple).\nowns(george,pencil).\nparent(alice,carol).\nsibling(eve,frank).\nfriend(dave,carol).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is bored.\nFor all X, if there exists A such that object X is dirty and person A likes object X and person A is excited, then object X is new.\nFor all Y, if there exists V such that object Y is big and person V owns object Y and person V is tired, then object Y is rough.\nFor all X, if there exists B such that object X is dirty and person B dislikes object X and person B is excited, then object X is new.\nFor all Z, if there exists U such that object Z is new and person U likes object Z and person U is weak, then object Z is rough.\nFor all X, if there exists B such that object X is big and person B dislikes object X and person B is weak, then object X is rough.\nFor all Y, if there exists A such that person Y is weak and person Y owns object A and object A is new, then person Y is tired.\nFor all X, Y, if person X is excited and person Y is excited and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is hard, then object X is rough.\nFor all X, Y, if person X is brave and person Y is excited, then person X is a sibling of person Y.\nFor all X, if object X is wet and object X is clean, then object X is rough.\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is excited and person X is tired, then person X is busy.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is rough and object X is dirty, then object X is small.\n\nAnd the following facts:\neve is funny.\ncar is clean.\neve is a friend of alice.\nalice is a parent of dave.\nfrank is weak.\nbook is small.\napple is smooth.\ngeorge owns pencil.\nalice is a parent of carol.\neve is a sibling of frank.\ndave is a friend of carol.\nbob dislikes ball.\n\nQUESTION:\nIs eve is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1132,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(frank).",
    "c": "clever(X) :- funny(X).\nhungry(X) :- clever(X).\nfriendly(X) :- hungry(X).\nhappy(X) :- friendly(X).\nangry(X) :- happy(X).\ntall(X) :- angry(X).\nsad(X) :- tall(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nbored(X) :- curious(X).\nnew(X) :- dirty(X), likes(A,X), excited(A).\nrough(Y) :- big(Y), owns(V,Y), tired(V).\nnew(X) :- dirty(X), dislikes(B,X), excited(B).\nrough(Z) :- new(Z), likes(U,Z), weak(U).\nrough(X) :- big(X), dislikes(B,X), weak(B).\ntired(Y) :- weak(Y), owns(Y,A), new(A).\nfriend(X,Y) :- excited(X), excited(Y), sibling(X,Y).\ndirty(X) :- smooth(X).\nrough(X) :- hard(X).\nsibling(X,Y) :- brave(X), excited(Y).\nrough(X) :- wet(X), clean(X).\nbrave(X) :- tired(X).\nbusy(X) :- excited(X), tired(X).\nhard(X) :- clean(X).\nsmall(X) :- rough(X), dirty(X).\nfunny(eve).\nclean(car).\nfriend(eve,alice).\nparent(alice,dave).\nweak(frank).\nsmall(book).\nsmooth(apple).\nowns(george,pencil).\nparent(alice,carol).\nsibling(eve,frank).\nfriend(dave,carol).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is bored.\nFor all X, if there exists A such that object X is dirty and person A likes object X and person A is excited, then object X is new.\nFor all Y, if there exists V such that object Y is big and person V owns object Y and person V is tired, then object Y is rough.\nFor all X, if there exists B such that object X is dirty and person B dislikes object X and person B is excited, then object X is new.\nFor all Z, if there exists U such that object Z is new and person U likes object Z and person U is weak, then object Z is rough.\nFor all X, if there exists B such that object X is big and person B dislikes object X and person B is weak, then object X is rough.\nFor all Y, if there exists A such that person Y is weak and person Y owns object A and object A is new, then person Y is tired.\nFor all X, Y, if person X is excited and person Y is excited and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is hard, then object X is rough.\nFor all X, Y, if person X is brave and person Y is excited, then person X is a sibling of person Y.\nFor all X, if object X is wet and object X is clean, then object X is rough.\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is excited and person X is tired, then person X is busy.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is rough and object X is dirty, then object X is small.\n\nAnd the following facts:\neve is funny.\ncar is clean.\neve is a friend of alice.\nalice is a parent of dave.\nfrank is weak.\nbook is small.\napple is smooth.\ngeorge owns pencil.\nalice is a parent of carol.\neve is a sibling of frank.\ndave is a friend of carol.\nbob dislikes ball.\n\nQUESTION:\nIs frank is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1133,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(eve).",
    "c": "clever(X) :- funny(X).\nhungry(X) :- clever(X).\nfriendly(X) :- hungry(X).\nhappy(X) :- friendly(X).\nangry(X) :- happy(X).\ntall(X) :- angry(X).\nsad(X) :- tall(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nbored(X) :- curious(X).\nnew(X) :- dirty(X), likes(A,X), excited(A).\nrough(Y) :- big(Y), owns(V,Y), tired(V).\nnew(X) :- dirty(X), dislikes(B,X), excited(B).\nrough(Z) :- new(Z), likes(U,Z), weak(U).\nrough(X) :- big(X), dislikes(B,X), weak(B).\ntired(Y) :- weak(Y), owns(Y,A), new(A).\nfriend(X,Y) :- excited(X), excited(Y), sibling(X,Y).\ndirty(X) :- smooth(X).\nrough(X) :- hard(X).\nsibling(X,Y) :- brave(X), excited(Y).\nrough(X) :- wet(X), clean(X).\nbrave(X) :- tired(X).\nbusy(X) :- excited(X), tired(X).\nhard(X) :- clean(X).\nsmall(X) :- rough(X), dirty(X).\nbored(eve).\nclean(car).\nfriend(eve,alice).\nparent(alice,dave).\nweak(frank).\nsmall(book).\nsmooth(apple).\nowns(george,pencil).\nparent(alice,carol).\nsibling(eve,frank).\nfriend(dave,carol).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is bored.\nFor all X, if there exists A such that object X is dirty and person A likes object X and person A is excited, then object X is new.\nFor all Y, if there exists V such that object Y is big and person V owns object Y and person V is tired, then object Y is rough.\nFor all X, if there exists B such that object X is dirty and person B dislikes object X and person B is excited, then object X is new.\nFor all Z, if there exists U such that object Z is new and person U likes object Z and person U is weak, then object Z is rough.\nFor all X, if there exists B such that object X is big and person B dislikes object X and person B is weak, then object X is rough.\nFor all Y, if there exists A such that person Y is weak and person Y owns object A and object A is new, then person Y is tired.\nFor all X, Y, if person X is excited and person Y is excited and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is hard, then object X is rough.\nFor all X, Y, if person X is brave and person Y is excited, then person X is a sibling of person Y.\nFor all X, if object X is wet and object X is clean, then object X is rough.\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is excited and person X is tired, then person X is busy.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is rough and object X is dirty, then object X is small.\n\nAnd the following facts:\neve is bored.\ncar is clean.\neve is a friend of alice.\nalice is a parent of dave.\nfrank is weak.\nbook is small.\napple is smooth.\ngeorge owns pencil.\nalice is a parent of carol.\neve is a sibling of frank.\ndave is a friend of carol.\nbob dislikes ball.\n\nQUESTION:\nCould eve is funny explain eve is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1134,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(carol).",
    "c": "clever(X) :- funny(X).\nhungry(X) :- clever(X).\nfriendly(X) :- hungry(X).\nhappy(X) :- friendly(X).\nangry(X) :- happy(X).\ntall(X) :- angry(X).\nsad(X) :- tall(X).\nstrong(X) :- sad(X).\ncurious(X) :- strong(X).\nbored(X) :- curious(X).\nnew(X) :- dirty(X), likes(A,X), excited(A).\nrough(Y) :- big(Y), owns(V,Y), tired(V).\nnew(X) :- dirty(X), dislikes(B,X), excited(B).\nrough(Z) :- new(Z), likes(U,Z), weak(U).\nrough(X) :- big(X), dislikes(B,X), weak(B).\ntired(Y) :- weak(Y), owns(Y,A), new(A).\nfriend(X,Y) :- excited(X), excited(Y), sibling(X,Y).\ndirty(X) :- smooth(X).\nrough(X) :- hard(X).\nsibling(X,Y) :- brave(X), excited(Y).\nrough(X) :- wet(X), clean(X).\nbrave(X) :- tired(X).\nbusy(X) :- excited(X), tired(X).\nhard(X) :- clean(X).\nsmall(X) :- rough(X), dirty(X).\nbored(eve).\nclean(car).\nfriend(eve,alice).\nparent(alice,dave).\nweak(frank).\nsmall(book).\nsmooth(apple).\nowns(george,pencil).\nparent(alice,carol).\nsibling(eve,frank).\nfriend(dave,carol).\ndislikes(bob,ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is friendly.\nFor all X, if person X is friendly, then person X is happy.\nFor all X, if person X is happy, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is curious.\nFor all X, if person X is curious, then person X is bored.\nFor all X, if there exists A such that object X is dirty and person A likes object X and person A is excited, then object X is new.\nFor all Y, if there exists V such that object Y is big and person V owns object Y and person V is tired, then object Y is rough.\nFor all X, if there exists B such that object X is dirty and person B dislikes object X and person B is excited, then object X is new.\nFor all Z, if there exists U such that object Z is new and person U likes object Z and person U is weak, then object Z is rough.\nFor all X, if there exists B such that object X is big and person B dislikes object X and person B is weak, then object X is rough.\nFor all Y, if there exists A such that person Y is weak and person Y owns object A and object A is new, then person Y is tired.\nFor all X, Y, if person X is excited and person Y is excited and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is hard, then object X is rough.\nFor all X, Y, if person X is brave and person Y is excited, then person X is a sibling of person Y.\nFor all X, if object X is wet and object X is clean, then object X is rough.\nFor all X, if person X is tired, then person X is brave.\nFor all X, if person X is excited and person X is tired, then person X is busy.\nFor all X, if object X is clean, then object X is hard.\nFor all X, if object X is rough and object X is dirty, then object X is small.\n\nAnd the following facts:\neve is bored.\ncar is clean.\neve is a friend of alice.\nalice is a parent of dave.\nfrank is weak.\nbook is small.\napple is smooth.\ngeorge owns pencil.\nalice is a parent of carol.\neve is a sibling of frank.\ndave is a friend of carol.\nbob dislikes ball.\n\nQUESTION:\nCould carol is tall explain eve is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1135,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(frank).",
    "c": "bored(X) :- tall(X).\nsad(X) :- bored(X).\ncalm(X) :- sad(X).\nhappy(X) :- calm(X).\nfriendly(X) :- happy(X).\ntall(X) :- friendly(X).\ncurious(X) :- tall(X).\nfunny(X) :- curious(X).\nfriendly(X) :- funny(X).\ntall(X) :- friendly(X).\ncurious(X) :- tall(X).\nhappy(X) :- curious(X).\nsad(X) :- happy(X).\nangry(X) :- sad(X).\nhungry(X) :- angry(X).\nweak(X) :- hungry(X).\nfunny(X) :- weak(X).\ncalm(X) :- funny(X).\nhappy(X) :- calm(X).\nexcited(X) :- happy(X).\nbrave(Z) :- brave(Z).\nparent(Z,X) :- brave(Z), busy(X), friend(X,W).\nparent(Z,Y) :- clever(Y), brave(Z), parent(Z,A).\nbig(X) :- dirty(X), dirty(X).\nsmooth(X) :- light(X), rough(X).\ntall(frank).\nfriend(carol,frank).\nrough(book).\nlikes(george,phone).\nbusy(george).\nowns(dave,book).\nenemy(alice,george).\nsibling(george,eve).\nsibling(frank,dave).\ndislikes(carol,ball).\nowns(bob,phone).\nenemy(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is excited.\nFor all Z, if person Z is brave, then person Z is brave.\nFor all X, Z, if there exists W such that person Z is brave and person X is busy and person X is a friend of person W, then person Z is a parent of person X.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is brave and person Z is a parent of person A, then person Z is a parent of person Y.\nFor all X, if object X is dirty and object X is dirty, then object X is big.\nFor all X, if object X is light and object X is rough, then object X is smooth.\n\nAnd the following facts:\nfrank is tall.\ncarol is a friend of frank.\nbook is rough.\ngeorge likes phone.\ngeorge is busy.\ndave owns book.\nalice is an enemy of george.\ngeorge is a sibling of eve.\nfrank is a sibling of dave.\ncarol dislikes ball.\nbob owns phone.\ndave is an enemy of frank.\n\nQUESTION:\nIs frank is excited true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1136,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(bob).",
    "c": "bored(X) :- tall(X).\nsad(X) :- bored(X).\ncalm(X) :- sad(X).\nhappy(X) :- calm(X).\nfriendly(X) :- happy(X).\ntall(X) :- friendly(X).\ncurious(X) :- tall(X).\nfunny(X) :- curious(X).\nfriendly(X) :- funny(X).\ntall(X) :- friendly(X).\ncurious(X) :- tall(X).\nhappy(X) :- curious(X).\nsad(X) :- happy(X).\nangry(X) :- sad(X).\nhungry(X) :- angry(X).\nweak(X) :- hungry(X).\nfunny(X) :- weak(X).\ncalm(X) :- funny(X).\nhappy(X) :- calm(X).\nexcited(X) :- happy(X).\nbrave(Z) :- brave(Z).\nparent(Z,X) :- brave(Z), busy(X), friend(X,W).\nparent(Z,Y) :- clever(Y), brave(Z), parent(Z,A).\nbig(X) :- dirty(X), dirty(X).\nsmooth(X) :- light(X), rough(X).\ntall(frank).\nfriend(carol,frank).\nrough(book).\nlikes(george,phone).\nbusy(george).\nowns(dave,book).\nenemy(alice,george).\nsibling(george,eve).\nsibling(frank,dave).\ndislikes(carol,ball).\nowns(bob,phone).\nenemy(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is excited.\nFor all Z, if person Z is brave, then person Z is brave.\nFor all X, Z, if there exists W such that person Z is brave and person X is busy and person X is a friend of person W, then person Z is a parent of person X.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is brave and person Z is a parent of person A, then person Z is a parent of person Y.\nFor all X, if object X is dirty and object X is dirty, then object X is big.\nFor all X, if object X is light and object X is rough, then object X is smooth.\n\nAnd the following facts:\nfrank is tall.\ncarol is a friend of frank.\nbook is rough.\ngeorge likes phone.\ngeorge is busy.\ndave owns book.\nalice is an enemy of george.\ngeorge is a sibling of eve.\nfrank is a sibling of dave.\ncarol dislikes ball.\nbob owns phone.\ndave is an enemy of frank.\n\nQUESTION:\nIs bob is tired true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1137,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(frank).",
    "c": "bored(X) :- tall(X).\nsad(X) :- bored(X).\ncalm(X) :- sad(X).\nhappy(X) :- calm(X).\nfriendly(X) :- happy(X).\ntall(X) :- friendly(X).\ncurious(X) :- tall(X).\nfunny(X) :- curious(X).\nfriendly(X) :- funny(X).\ntall(X) :- friendly(X).\ncurious(X) :- tall(X).\nhappy(X) :- curious(X).\nsad(X) :- happy(X).\nangry(X) :- sad(X).\nhungry(X) :- angry(X).\nweak(X) :- hungry(X).\nfunny(X) :- weak(X).\ncalm(X) :- funny(X).\nhappy(X) :- calm(X).\nexcited(X) :- happy(X).\nbrave(Z) :- brave(Z).\nparent(Z,X) :- brave(Z), busy(X), friend(X,W).\nparent(Z,Y) :- clever(Y), brave(Z), parent(Z,A).\nbig(X) :- dirty(X), dirty(X).\nsmooth(X) :- light(X), rough(X).\nexcited(frank).\nfriend(carol,frank).\nrough(book).\nlikes(george,phone).\nbusy(george).\nowns(dave,book).\nenemy(alice,george).\nsibling(george,eve).\nsibling(frank,dave).\ndislikes(carol,ball).\nowns(bob,phone).\nenemy(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is excited.\nFor all Z, if person Z is brave, then person Z is brave.\nFor all X, Z, if there exists W such that person Z is brave and person X is busy and person X is a friend of person W, then person Z is a parent of person X.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is brave and person Z is a parent of person A, then person Z is a parent of person Y.\nFor all X, if object X is dirty and object X is dirty, then object X is big.\nFor all X, if object X is light and object X is rough, then object X is smooth.\n\nAnd the following facts:\nfrank is excited.\ncarol is a friend of frank.\nbook is rough.\ngeorge likes phone.\ngeorge is busy.\ndave owns book.\nalice is an enemy of george.\ngeorge is a sibling of eve.\nfrank is a sibling of dave.\ncarol dislikes ball.\nbob owns phone.\ndave is an enemy of frank.\n\nQUESTION:\nCould frank is tall explain frank is excited?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1138,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(phone).",
    "c": "bored(X) :- tall(X).\nsad(X) :- bored(X).\ncalm(X) :- sad(X).\nhappy(X) :- calm(X).\nfriendly(X) :- happy(X).\ntall(X) :- friendly(X).\ncurious(X) :- tall(X).\nfunny(X) :- curious(X).\nfriendly(X) :- funny(X).\ntall(X) :- friendly(X).\ncurious(X) :- tall(X).\nhappy(X) :- curious(X).\nsad(X) :- happy(X).\nangry(X) :- sad(X).\nhungry(X) :- angry(X).\nweak(X) :- hungry(X).\nfunny(X) :- weak(X).\ncalm(X) :- funny(X).\nhappy(X) :- calm(X).\nexcited(X) :- happy(X).\nbrave(Z) :- brave(Z).\nparent(Z,X) :- brave(Z), busy(X), friend(X,W).\nparent(Z,Y) :- clever(Y), brave(Z), parent(Z,A).\nbig(X) :- dirty(X), dirty(X).\nsmooth(X) :- light(X), rough(X).\nexcited(frank).\nfriend(carol,frank).\nrough(book).\nlikes(george,phone).\nbusy(george).\nowns(dave,book).\nenemy(alice,george).\nsibling(george,eve).\nsibling(frank,dave).\ndislikes(carol,ball).\nowns(bob,phone).\nenemy(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is funny.\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is tall.\nFor all X, if person X is tall, then person X is curious.\nFor all X, if person X is curious, then person X is happy.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is angry.\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is happy.\nFor all X, if person X is happy, then person X is excited.\nFor all Z, if person Z is brave, then person Z is brave.\nFor all X, Z, if there exists W such that person Z is brave and person X is busy and person X is a friend of person W, then person Z is a parent of person X.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is brave and person Z is a parent of person A, then person Z is a parent of person Y.\nFor all X, if object X is dirty and object X is dirty, then object X is big.\nFor all X, if object X is light and object X is rough, then object X is smooth.\n\nAnd the following facts:\nfrank is excited.\ncarol is a friend of frank.\nbook is rough.\ngeorge likes phone.\ngeorge is busy.\ndave owns book.\nalice is an enemy of george.\ngeorge is a sibling of eve.\nfrank is a sibling of dave.\ncarol dislikes ball.\nbob owns phone.\ndave is an enemy of frank.\n\nQUESTION:\nCould phone is big explain frank is excited?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1139,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(pencil).",
    "c": "rough(X) :- clean(X).\nsoft(X) :- rough(X).\nsmooth(X) :- soft(X).\nrough(X) :- smooth(X).\nnew(X) :- rough(X).\nbig(X) :- new(X).\nrough(X) :- big(X).\nsmooth(X) :- rough(X).\nclean(X) :- smooth(X).\nwet(X) :- clean(X).\nhard(X) :- wet(X).\nnew(X) :- hard(X).\nsmall(X) :- new(X).\nheavy(X) :- small(X).\nbig(X) :- heavy(X).\nold(X) :- big(X).\nnew(X) :- old(X).\nclean(X) :- new(X).\nred(X) :- clean(X).\nsoft(X) :- red(X).\nclever(Y) :- excited(Y), friend(Y,B), friendly(B).\ndislikes(Y,X) :- funny(Y), light(X), likes(B,X).\nbusy(X) :- sad(X).\nstrong(X) :- bored(X), clever(X).\nhungry(X) :- funny(X).\nclean(pencil).\nbored(george).\nparent(alice,george).\nenemy(alice,bob).\nbrave(bob).\nsad(alice).\nparent(carol,george).\nparent(eve,george).\nsibling(eve,dave).\nfriend(george,bob).\ntired(george).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all Y, if there exists B such that person Y is excited and person Y is a friend of person B and person B is friendly, then person Y is clever.\nFor all X, Y, if there exists B such that person Y is funny and object X is light and person B likes object X, then person Y dislikes object X.\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is bored and person X is clever, then person X is strong.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\npencil is clean.\ngeorge is bored.\nalice is a parent of george.\nalice is an enemy of bob.\nbob is brave.\nalice is sad.\ncarol is a parent of george.\neve is a parent of george.\neve is a sibling of dave.\ngeorge is a friend of bob.\ngeorge is tired.\ncarol dislikes ball.\n\nQUESTION:\nIs pencil is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1140,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(apple).",
    "c": "rough(X) :- clean(X).\nsoft(X) :- rough(X).\nsmooth(X) :- soft(X).\nrough(X) :- smooth(X).\nnew(X) :- rough(X).\nbig(X) :- new(X).\nrough(X) :- big(X).\nsmooth(X) :- rough(X).\nclean(X) :- smooth(X).\nwet(X) :- clean(X).\nhard(X) :- wet(X).\nnew(X) :- hard(X).\nsmall(X) :- new(X).\nheavy(X) :- small(X).\nbig(X) :- heavy(X).\nold(X) :- big(X).\nnew(X) :- old(X).\nclean(X) :- new(X).\nred(X) :- clean(X).\nsoft(X) :- red(X).\nclever(Y) :- excited(Y), friend(Y,B), friendly(B).\ndislikes(Y,X) :- funny(Y), light(X), likes(B,X).\nbusy(X) :- sad(X).\nstrong(X) :- bored(X), clever(X).\nhungry(X) :- funny(X).\nclean(pencil).\nbored(george).\nparent(alice,george).\nenemy(alice,bob).\nbrave(bob).\nsad(alice).\nparent(carol,george).\nparent(eve,george).\nsibling(eve,dave).\nfriend(george,bob).\ntired(george).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all Y, if there exists B such that person Y is excited and person Y is a friend of person B and person B is friendly, then person Y is clever.\nFor all X, Y, if there exists B such that person Y is funny and object X is light and person B likes object X, then person Y dislikes object X.\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is bored and person X is clever, then person X is strong.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\npencil is clean.\ngeorge is bored.\nalice is a parent of george.\nalice is an enemy of bob.\nbob is brave.\nalice is sad.\ncarol is a parent of george.\neve is a parent of george.\neve is a sibling of dave.\ngeorge is a friend of bob.\ngeorge is tired.\ncarol dislikes ball.\n\nQUESTION:\nIs apple is old true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1141,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "rough(X) :- clean(X).\nsoft(X) :- rough(X).\nsmooth(X) :- soft(X).\nrough(X) :- smooth(X).\nnew(X) :- rough(X).\nbig(X) :- new(X).\nrough(X) :- big(X).\nsmooth(X) :- rough(X).\nclean(X) :- smooth(X).\nwet(X) :- clean(X).\nhard(X) :- wet(X).\nnew(X) :- hard(X).\nsmall(X) :- new(X).\nheavy(X) :- small(X).\nbig(X) :- heavy(X).\nold(X) :- big(X).\nnew(X) :- old(X).\nclean(X) :- new(X).\nred(X) :- clean(X).\nsoft(X) :- red(X).\nclever(Y) :- excited(Y), friend(Y,B), friendly(B).\ndislikes(Y,X) :- funny(Y), light(X), likes(B,X).\nbusy(X) :- sad(X).\nstrong(X) :- bored(X), clever(X).\nhungry(X) :- funny(X).\nsoft(pencil).\nbored(george).\nparent(alice,george).\nenemy(alice,bob).\nbrave(bob).\nsad(alice).\nparent(carol,george).\nparent(eve,george).\nsibling(eve,dave).\nfriend(george,bob).\ntired(george).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all Y, if there exists B such that person Y is excited and person Y is a friend of person B and person B is friendly, then person Y is clever.\nFor all X, Y, if there exists B such that person Y is funny and object X is light and person B likes object X, then person Y dislikes object X.\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is bored and person X is clever, then person X is strong.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\npencil is soft.\ngeorge is bored.\nalice is a parent of george.\nalice is an enemy of bob.\nbob is brave.\nalice is sad.\ncarol is a parent of george.\neve is a parent of george.\neve is a sibling of dave.\ngeorge is a friend of bob.\ngeorge is tired.\ncarol dislikes ball.\n\nQUESTION:\nCould pencil is clean explain pencil is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1142,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```\\n'}]"
  },
  {
    "q": "excited(eve).",
    "c": "rough(X) :- clean(X).\nsoft(X) :- rough(X).\nsmooth(X) :- soft(X).\nrough(X) :- smooth(X).\nnew(X) :- rough(X).\nbig(X) :- new(X).\nrough(X) :- big(X).\nsmooth(X) :- rough(X).\nclean(X) :- smooth(X).\nwet(X) :- clean(X).\nhard(X) :- wet(X).\nnew(X) :- hard(X).\nsmall(X) :- new(X).\nheavy(X) :- small(X).\nbig(X) :- heavy(X).\nold(X) :- big(X).\nnew(X) :- old(X).\nclean(X) :- new(X).\nred(X) :- clean(X).\nsoft(X) :- red(X).\nclever(Y) :- excited(Y), friend(Y,B), friendly(B).\ndislikes(Y,X) :- funny(Y), light(X), likes(B,X).\nbusy(X) :- sad(X).\nstrong(X) :- bored(X), clever(X).\nhungry(X) :- funny(X).\nsoft(pencil).\nbored(george).\nparent(alice,george).\nenemy(alice,bob).\nbrave(bob).\nsad(alice).\nparent(carol,george).\nparent(eve,george).\nsibling(eve,dave).\nfriend(george,bob).\ntired(george).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is clean, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is rough.\nFor all X, if object X is rough, then object X is new.\nFor all X, if object X is new, then object X is big.\nFor all X, if object X is big, then object X is rough.\nFor all X, if object X is rough, then object X is smooth.\nFor all X, if object X is smooth, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, if object X is wet, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is small.\nFor all X, if object X is small, then object X is heavy.\nFor all X, if object X is heavy, then object X is big.\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is red.\nFor all X, if object X is red, then object X is soft.\nFor all Y, if there exists B such that person Y is excited and person Y is a friend of person B and person B is friendly, then person Y is clever.\nFor all X, Y, if there exists B such that person Y is funny and object X is light and person B likes object X, then person Y dislikes object X.\nFor all X, if person X is sad, then person X is busy.\nFor all X, if person X is bored and person X is clever, then person X is strong.\nFor all X, if person X is funny, then person X is hungry.\n\nAnd the following facts:\npencil is soft.\ngeorge is bored.\nalice is a parent of george.\nalice is an enemy of bob.\nbob is brave.\nalice is sad.\ncarol is a parent of george.\neve is a parent of george.\neve is a sibling of dave.\ngeorge is a friend of bob.\ngeorge is tired.\ncarol dislikes ball.\n\nQUESTION:\nCould eve is excited explain pencil is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1143,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "dirty(X) :- hard(X).\nbig(X) :- dirty(X).\nred(X) :- big(X).\nclean(X) :- red(X).\nlight(X) :- clean(X).\nsoft(X) :- light(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nold(X) :- rough(X).\nsmooth(X) :- old(X).\nsmall(X) :- smooth(X).\nsmall(X) :- small(X).\nred(X) :- small(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nsmall(X) :- old(X).\nsmooth(X) :- small(X).\nsmall(X) :- smooth(X).\nfriend(Y,Z) :- angry(Y), weak(Z), friend(Y,U).\nenemy(X,Y) :- happy(Y), brave(X).\nenemy(X,Z) :- friendly(Z), busy(X).\ntall(Z) :- friendly(Z), enemy(Z,W), clever(W).\nbusy(X) :- excited(X).\nhard(book).\nlikes(frank,pencil).\nhappy(alice).\nowns(dave,pencil).\ntired(carol).\nowns(alice,phone).\nlikes(eve,book).\nowns(dave,book).\nhappy(george).\ndislikes(frank,pencil).\ndislikes(alice,phone).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is small.\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all Y, Z, if there exists U such that person Y is angry and person Z is weak and person Y is a friend of person U, then person Y is a friend of person Z.\nFor all X, Y, if person Y is happy and person X is brave, then person X is an enemy of person Y.\nFor all X, Z, if person Z is friendly and person X is busy, then person X is an enemy of person Z.\nFor all Z, if there exists W such that person Z is friendly and person Z is an enemy of person W and person W is clever, then person Z is tall.\nFor all X, if person X is excited, then person X is busy.\n\nAnd the following facts:\nbook is hard.\nfrank likes pencil.\nalice is happy.\ndave owns pencil.\ncarol is tired.\nalice owns phone.\neve likes book.\ndave owns book.\ngeorge is happy.\nfrank dislikes pencil.\nalice dislikes phone.\ncarol is an enemy of dave.\n\nQUESTION:\nIs book is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1144,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(pencil).",
    "c": "dirty(X) :- hard(X).\nbig(X) :- dirty(X).\nred(X) :- big(X).\nclean(X) :- red(X).\nlight(X) :- clean(X).\nsoft(X) :- light(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nold(X) :- rough(X).\nsmooth(X) :- old(X).\nsmall(X) :- smooth(X).\nsmall(X) :- small(X).\nred(X) :- small(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nsmall(X) :- old(X).\nsmooth(X) :- small(X).\nsmall(X) :- smooth(X).\nfriend(Y,Z) :- angry(Y), weak(Z), friend(Y,U).\nenemy(X,Y) :- happy(Y), brave(X).\nenemy(X,Z) :- friendly(Z), busy(X).\ntall(Z) :- friendly(Z), enemy(Z,W), clever(W).\nbusy(X) :- excited(X).\nhard(book).\nlikes(frank,pencil).\nhappy(alice).\nowns(dave,pencil).\ntired(carol).\nowns(alice,phone).\nlikes(eve,book).\nowns(dave,book).\nhappy(george).\ndislikes(frank,pencil).\ndislikes(alice,phone).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is small.\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all Y, Z, if there exists U such that person Y is angry and person Z is weak and person Y is a friend of person U, then person Y is a friend of person Z.\nFor all X, Y, if person Y is happy and person X is brave, then person X is an enemy of person Y.\nFor all X, Z, if person Z is friendly and person X is busy, then person X is an enemy of person Z.\nFor all Z, if there exists W such that person Z is friendly and person Z is an enemy of person W and person W is clever, then person Z is tall.\nFor all X, if person X is excited, then person X is busy.\n\nAnd the following facts:\nbook is hard.\nfrank likes pencil.\nalice is happy.\ndave owns pencil.\ncarol is tired.\nalice owns phone.\neve likes book.\ndave owns book.\ngeorge is happy.\nfrank dislikes pencil.\nalice dislikes phone.\ncarol is an enemy of dave.\n\nQUESTION:\nIs pencil is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1145,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(book).",
    "c": "dirty(X) :- hard(X).\nbig(X) :- dirty(X).\nred(X) :- big(X).\nclean(X) :- red(X).\nlight(X) :- clean(X).\nsoft(X) :- light(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nold(X) :- rough(X).\nsmooth(X) :- old(X).\nsmall(X) :- smooth(X).\nsmall(X) :- small(X).\nred(X) :- small(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nsmall(X) :- old(X).\nsmooth(X) :- small(X).\nsmall(X) :- smooth(X).\nfriend(Y,Z) :- angry(Y), weak(Z), friend(Y,U).\nenemy(X,Y) :- happy(Y), brave(X).\nenemy(X,Z) :- friendly(Z), busy(X).\ntall(Z) :- friendly(Z), enemy(Z,W), clever(W).\nbusy(X) :- excited(X).\nsmall(book).\nlikes(frank,pencil).\nhappy(alice).\nowns(dave,pencil).\ntired(carol).\nowns(alice,phone).\nlikes(eve,book).\nowns(dave,book).\nhappy(george).\ndislikes(frank,pencil).\ndislikes(alice,phone).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is small.\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all Y, Z, if there exists U such that person Y is angry and person Z is weak and person Y is a friend of person U, then person Y is a friend of person Z.\nFor all X, Y, if person Y is happy and person X is brave, then person X is an enemy of person Y.\nFor all X, Z, if person Z is friendly and person X is busy, then person X is an enemy of person Z.\nFor all Z, if there exists W such that person Z is friendly and person Z is an enemy of person W and person W is clever, then person Z is tall.\nFor all X, if person X is excited, then person X is busy.\n\nAnd the following facts:\nbook is small.\nfrank likes pencil.\nalice is happy.\ndave owns pencil.\ncarol is tired.\nalice owns phone.\neve likes book.\ndave owns book.\ngeorge is happy.\nfrank dislikes pencil.\nalice dislikes phone.\ncarol is an enemy of dave.\n\nQUESTION:\nCould book is hard explain book is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1146,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(frank).",
    "c": "dirty(X) :- hard(X).\nbig(X) :- dirty(X).\nred(X) :- big(X).\nclean(X) :- red(X).\nlight(X) :- clean(X).\nsoft(X) :- light(X).\nwet(X) :- soft(X).\nnew(X) :- wet(X).\nheavy(X) :- new(X).\nrough(X) :- heavy(X).\nold(X) :- rough(X).\nsmooth(X) :- old(X).\nsmall(X) :- smooth(X).\nsmall(X) :- small(X).\nred(X) :- small(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nsmall(X) :- old(X).\nsmooth(X) :- small(X).\nsmall(X) :- smooth(X).\nfriend(Y,Z) :- angry(Y), weak(Z), friend(Y,U).\nenemy(X,Y) :- happy(Y), brave(X).\nenemy(X,Z) :- friendly(Z), busy(X).\ntall(Z) :- friendly(Z), enemy(Z,W), clever(W).\nbusy(X) :- excited(X).\nsmall(book).\nlikes(frank,pencil).\nhappy(alice).\nowns(dave,pencil).\ntired(carol).\nowns(alice,phone).\nlikes(eve,book).\nowns(dave,book).\nhappy(george).\ndislikes(frank,pencil).\ndislikes(alice,phone).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is red.\nFor all X, if object X is red, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, if object X is wet, then object X is new.\nFor all X, if object X is new, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is small.\nFor all X, if object X is small, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all Y, Z, if there exists U such that person Y is angry and person Z is weak and person Y is a friend of person U, then person Y is a friend of person Z.\nFor all X, Y, if person Y is happy and person X is brave, then person X is an enemy of person Y.\nFor all X, Z, if person Z is friendly and person X is busy, then person X is an enemy of person Z.\nFor all Z, if there exists W such that person Z is friendly and person Z is an enemy of person W and person W is clever, then person Z is tall.\nFor all X, if person X is excited, then person X is busy.\n\nAnd the following facts:\nbook is small.\nfrank likes pencil.\nalice is happy.\ndave owns pencil.\ncarol is tired.\nalice owns phone.\neve likes book.\ndave owns book.\ngeorge is happy.\nfrank dislikes pencil.\nalice dislikes phone.\ncarol is an enemy of dave.\n\nQUESTION:\nCould frank is sad explain book is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1147,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(george).",
    "c": "strong(X) :- hungry(X).\ntall(X) :- strong(X).\ntired(X) :- tall(X).\nbored(X) :- tired(X).\nweak(X) :- bored(X).\nfriendly(X) :- weak(X).\nbrave(X) :- friendly(X).\nfunny(X) :- brave(X).\nangry(X) :- funny(X).\nexcited(X) :- angry(X).\nhappy(X) :- excited(X).\nbusy(X) :- happy(X).\nsad(X) :- busy(X).\nclever(X) :- sad(X).\ncurious(X) :- clever(X).\ncalm(X) :- curious(X).\ntall(X) :- calm(X).\nsad(X) :- tall(X).\nstrong(X) :- sad(X).\ntall(X) :- strong(X).\nsoft(X) :- big(X), clean(C).\nred(Z) :- soft(Z), owns(W,Z).\ndirty(X) :- small(X).\nlight(X) :- small(X), big(X).\nsmall(X) :- heavy(X).\nhungry(george).\nparent(george,bob).\nowns(frank,pencil).\nsibling(frank,george).\ndislikes(eve,phone).\nparent(dave,eve).\ndirty(pencil).\ndislikes(alice,ball).\ndislikes(george,pencil).\nold(ball).\nsibling(frank,bob).\nhard(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if there exists C such that object X is big and object C is clean, then object X is soft.\nFor all Z, if there exists W such that object Z is soft and person W owns object Z, then object Z is red.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is small and object X is big, then object X is light.\nFor all X, if object X is heavy, then object X is small.\n\nAnd the following facts:\ngeorge is hungry.\ngeorge is a parent of bob.\nfrank owns pencil.\nfrank is a sibling of george.\neve dislikes phone.\ndave is a parent of eve.\npencil is dirty.\nalice dislikes ball.\ngeorge dislikes pencil.\nball is old.\nfrank is a sibling of bob.\nball is hard.\n\nQUESTION:\nIs george is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1148,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(dave).",
    "c": "strong(X) :- hungry(X).\ntall(X) :- strong(X).\ntired(X) :- tall(X).\nbored(X) :- tired(X).\nweak(X) :- bored(X).\nfriendly(X) :- weak(X).\nbrave(X) :- friendly(X).\nfunny(X) :- brave(X).\nangry(X) :- funny(X).\nexcited(X) :- angry(X).\nhappy(X) :- excited(X).\nbusy(X) :- happy(X).\nsad(X) :- busy(X).\nclever(X) :- sad(X).\ncurious(X) :- clever(X).\ncalm(X) :- curious(X).\ntall(X) :- calm(X).\nsad(X) :- tall(X).\nstrong(X) :- sad(X).\ntall(X) :- strong(X).\nsoft(X) :- big(X), clean(C).\nred(Z) :- soft(Z), owns(W,Z).\ndirty(X) :- small(X).\nlight(X) :- small(X), big(X).\nsmall(X) :- heavy(X).\nhungry(george).\nparent(george,bob).\nowns(frank,pencil).\nsibling(frank,george).\ndislikes(eve,phone).\nparent(dave,eve).\ndirty(pencil).\ndislikes(alice,ball).\ndislikes(george,pencil).\nold(ball).\nsibling(frank,bob).\nhard(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if there exists C such that object X is big and object C is clean, then object X is soft.\nFor all Z, if there exists W such that object Z is soft and person W owns object Z, then object Z is red.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is small and object X is big, then object X is light.\nFor all X, if object X is heavy, then object X is small.\n\nAnd the following facts:\ngeorge is hungry.\ngeorge is a parent of bob.\nfrank owns pencil.\nfrank is a sibling of george.\neve dislikes phone.\ndave is a parent of eve.\npencil is dirty.\nalice dislikes ball.\ngeorge dislikes pencil.\nball is old.\nfrank is a sibling of bob.\nball is hard.\n\nQUESTION:\nIs dave is calm true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1149,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(george).",
    "c": "strong(X) :- hungry(X).\ntall(X) :- strong(X).\ntired(X) :- tall(X).\nbored(X) :- tired(X).\nweak(X) :- bored(X).\nfriendly(X) :- weak(X).\nbrave(X) :- friendly(X).\nfunny(X) :- brave(X).\nangry(X) :- funny(X).\nexcited(X) :- angry(X).\nhappy(X) :- excited(X).\nbusy(X) :- happy(X).\nsad(X) :- busy(X).\nclever(X) :- sad(X).\ncurious(X) :- clever(X).\ncalm(X) :- curious(X).\ntall(X) :- calm(X).\nsad(X) :- tall(X).\nstrong(X) :- sad(X).\ntall(X) :- strong(X).\nsoft(X) :- big(X), clean(C).\nred(Z) :- soft(Z), owns(W,Z).\ndirty(X) :- small(X).\nlight(X) :- small(X), big(X).\nsmall(X) :- heavy(X).\ntall(george).\nparent(george,bob).\nowns(frank,pencil).\nsibling(frank,george).\ndislikes(eve,phone).\nparent(dave,eve).\ndirty(pencil).\ndislikes(alice,ball).\ndislikes(george,pencil).\nold(ball).\nsibling(frank,bob).\nhard(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if there exists C such that object X is big and object C is clean, then object X is soft.\nFor all Z, if there exists W such that object Z is soft and person W owns object Z, then object Z is red.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is small and object X is big, then object X is light.\nFor all X, if object X is heavy, then object X is small.\n\nAnd the following facts:\ngeorge is tall.\ngeorge is a parent of bob.\nfrank owns pencil.\nfrank is a sibling of george.\neve dislikes phone.\ndave is a parent of eve.\npencil is dirty.\nalice dislikes ball.\ngeorge dislikes pencil.\nball is old.\nfrank is a sibling of bob.\nball is hard.\n\nQUESTION:\nCould george is hungry explain george is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1150,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(bob).",
    "c": "strong(X) :- hungry(X).\ntall(X) :- strong(X).\ntired(X) :- tall(X).\nbored(X) :- tired(X).\nweak(X) :- bored(X).\nfriendly(X) :- weak(X).\nbrave(X) :- friendly(X).\nfunny(X) :- brave(X).\nangry(X) :- funny(X).\nexcited(X) :- angry(X).\nhappy(X) :- excited(X).\nbusy(X) :- happy(X).\nsad(X) :- busy(X).\nclever(X) :- sad(X).\ncurious(X) :- clever(X).\ncalm(X) :- curious(X).\ntall(X) :- calm(X).\nsad(X) :- tall(X).\nstrong(X) :- sad(X).\ntall(X) :- strong(X).\nsoft(X) :- big(X), clean(C).\nred(Z) :- soft(Z), owns(W,Z).\ndirty(X) :- small(X).\nlight(X) :- small(X), big(X).\nsmall(X) :- heavy(X).\ntall(george).\nparent(george,bob).\nowns(frank,pencil).\nsibling(frank,george).\ndislikes(eve,phone).\nparent(dave,eve).\ndirty(pencil).\ndislikes(alice,ball).\ndislikes(george,pencil).\nold(ball).\nsibling(frank,bob).\nhard(ball).",
    "natural language": "You are given the following information:\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if person X is tall, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is busy.\nFor all X, if person X is busy, then person X is sad.\nFor all X, if person X is sad, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is sad.\nFor all X, if person X is sad, then person X is strong.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if there exists C such that object X is big and object C is clean, then object X is soft.\nFor all Z, if there exists W such that object Z is soft and person W owns object Z, then object Z is red.\nFor all X, if object X is small, then object X is dirty.\nFor all X, if object X is small and object X is big, then object X is light.\nFor all X, if object X is heavy, then object X is small.\n\nAnd the following facts:\ngeorge is tall.\ngeorge is a parent of bob.\nfrank owns pencil.\nfrank is a sibling of george.\neve dislikes phone.\ndave is a parent of eve.\npencil is dirty.\nalice dislikes ball.\ngeorge dislikes pencil.\nball is old.\nfrank is a sibling of bob.\nball is hard.\n\nQUESTION:\nCould bob is bored explain george is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1151,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "wet(car).",
    "c": "wet(X) :- hard(X).\nhappy(X) :- funny(X), sibling(X,W), excited(W).\nred(Y) :- new(Y), owns(B,Y), bored(B).\nbored(Y) :- angry(Y), light(A).\nstrong(Z) :- clever(Z).\ncurious(Y) :- happy(Y).\nsoft(X) :- small(X), dislikes(W,X), funny(W).\nfunny(Z) :- weak(Z), clever(D).\nlight(Z) :- clean(Z).\nexcited(X) :- clever(X), likes(X,V), rough(V).\ntired(X) :- friendly(X), owns(X,W), rough(W).\nhungry(X) :- calm(X).\nrough(Y) :- heavy(Y), owns(V,Y), excited(V).\nstrong(X) :- bored(X), parent(X,A), busy(A).\nweak(X) :- funny(X).\nowns(X,Y) :- angry(X), dirty(Y).\nbored(X) :- brave(X).\nparent(X,Y) :- angry(X), calm(Y).\nsibling(X,Y) :- excited(X), funny(Y).\ndislikes(X,Y) :- weak(X), soft(Y).\nparent(X,Y) :- funny(X), hungry(Y).\nbored(X) :- brave(X).\ncurious(X) :- weak(X), friendly(X).\nangry(X) :- brave(X), funny(X).\nlight(X) :- heavy(X), heavy(X).\nhard(car).\nsibling(bob,frank).\nred(car).\nangry(carol).\nsad(alice).\nlikes(alice,car).\nheavy(apple).\nsmooth(pencil).\ndislikes(bob,ball).\nowns(frank,book).\ndislikes(alice,book).\nexcited(alice).\nparent(carol,george).\nlikes(bob,phone).\nparent(carol,bob).\nfriend(bob,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is wet.\nFor all X, if there exists W such that person X is funny and person X is a sibling of person W and person W is excited, then person X is happy.\nFor all Y, if there exists B such that object Y is new and person B owns object Y and person B is bored, then object Y is red.\nFor all Y, if there exists A such that person Y is angry and object A is light, then person Y is bored.\nFor all Z, if person Z is clever, then person Z is strong.\nFor all Y, if person Y is happy, then person Y is curious.\nFor all X, if there exists W such that object X is small and person W dislikes object X and person W is funny, then object X is soft.\nFor all Z, if there exists D such that person Z is weak and person D is clever, then person Z is funny.\nFor all Z, if object Z is clean, then object Z is light.\nFor all X, if there exists V such that person X is clever and person X likes object V and object V is rough, then person X is excited.\nFor all X, if there exists W such that person X is friendly and person X owns object W and object W is rough, then person X is tired.\nFor all X, if person X is calm, then person X is hungry.\nFor all Y, if there exists V such that object Y is heavy and person V owns object Y and person V is excited, then object Y is rough.\nFor all X, if there exists A such that person X is bored and person X is a parent of person A and person A is busy, then person X is strong.\nFor all X, if person X is funny, then person X is weak.\nFor all X, Y, if person X is angry and object Y is dirty, then person X owns object Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, Y, if person X is angry and person Y is calm, then person X is a parent of person Y.\nFor all X, Y, if person X is excited and person Y is funny, then person X is a sibling of person Y.\nFor all X, Y, if person X is weak and object Y is soft, then person X dislikes object Y.\nFor all X, Y, if person X is funny and person Y is hungry, then person X is a parent of person Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is weak and person X is friendly, then person X is curious.\nFor all X, if person X is brave and person X is funny, then person X is angry.\nFor all X, if object X is heavy and object X is heavy, then object X is light.\n\nAnd the following facts:\ncar is hard.\nbob is a sibling of frank.\ncar is red.\ncarol is angry.\nalice is sad.\nalice likes car.\napple is heavy.\npencil is smooth.\nbob dislikes ball.\nfrank owns book.\nalice dislikes book.\nalice is excited.\ncarol is a parent of george.\nbob likes phone.\ncarol is a parent of bob.\nbob is a friend of dave.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1152,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(ball).",
    "c": "wet(X) :- hard(X).\nhappy(X) :- funny(X), sibling(X,W), excited(W).\nred(Y) :- new(Y), owns(B,Y), bored(B).\nbored(Y) :- angry(Y), light(A).\nstrong(Z) :- clever(Z).\ncurious(Y) :- happy(Y).\nsoft(X) :- small(X), dislikes(W,X), funny(W).\nfunny(Z) :- weak(Z), clever(D).\nlight(Z) :- clean(Z).\nexcited(X) :- clever(X), likes(X,V), rough(V).\ntired(X) :- friendly(X), owns(X,W), rough(W).\nhungry(X) :- calm(X).\nrough(Y) :- heavy(Y), owns(V,Y), excited(V).\nstrong(X) :- bored(X), parent(X,A), busy(A).\nweak(X) :- funny(X).\nowns(X,Y) :- angry(X), dirty(Y).\nbored(X) :- brave(X).\nparent(X,Y) :- angry(X), calm(Y).\nsibling(X,Y) :- excited(X), funny(Y).\ndislikes(X,Y) :- weak(X), soft(Y).\nparent(X,Y) :- funny(X), hungry(Y).\nbored(X) :- brave(X).\ncurious(X) :- weak(X), friendly(X).\nangry(X) :- brave(X), funny(X).\nlight(X) :- heavy(X), heavy(X).\nhard(car).\nsibling(bob,frank).\nred(car).\nangry(carol).\nsad(alice).\nlikes(alice,car).\nheavy(apple).\nsmooth(pencil).\ndislikes(bob,ball).\nowns(frank,book).\ndislikes(alice,book).\nexcited(alice).\nparent(carol,george).\nlikes(bob,phone).\nparent(carol,bob).\nfriend(bob,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is wet.\nFor all X, if there exists W such that person X is funny and person X is a sibling of person W and person W is excited, then person X is happy.\nFor all Y, if there exists B such that object Y is new and person B owns object Y and person B is bored, then object Y is red.\nFor all Y, if there exists A such that person Y is angry and object A is light, then person Y is bored.\nFor all Z, if person Z is clever, then person Z is strong.\nFor all Y, if person Y is happy, then person Y is curious.\nFor all X, if there exists W such that object X is small and person W dislikes object X and person W is funny, then object X is soft.\nFor all Z, if there exists D such that person Z is weak and person D is clever, then person Z is funny.\nFor all Z, if object Z is clean, then object Z is light.\nFor all X, if there exists V such that person X is clever and person X likes object V and object V is rough, then person X is excited.\nFor all X, if there exists W such that person X is friendly and person X owns object W and object W is rough, then person X is tired.\nFor all X, if person X is calm, then person X is hungry.\nFor all Y, if there exists V such that object Y is heavy and person V owns object Y and person V is excited, then object Y is rough.\nFor all X, if there exists A such that person X is bored and person X is a parent of person A and person A is busy, then person X is strong.\nFor all X, if person X is funny, then person X is weak.\nFor all X, Y, if person X is angry and object Y is dirty, then person X owns object Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, Y, if person X is angry and person Y is calm, then person X is a parent of person Y.\nFor all X, Y, if person X is excited and person Y is funny, then person X is a sibling of person Y.\nFor all X, Y, if person X is weak and object Y is soft, then person X dislikes object Y.\nFor all X, Y, if person X is funny and person Y is hungry, then person X is a parent of person Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is weak and person X is friendly, then person X is curious.\nFor all X, if person X is brave and person X is funny, then person X is angry.\nFor all X, if object X is heavy and object X is heavy, then object X is light.\n\nAnd the following facts:\ncar is hard.\nbob is a sibling of frank.\ncar is red.\ncarol is angry.\nalice is sad.\nalice likes car.\napple is heavy.\npencil is smooth.\nbob dislikes ball.\nfrank owns book.\nalice dislikes book.\nalice is excited.\ncarol is a parent of george.\nbob likes phone.\ncarol is a parent of bob.\nbob is a friend of dave.\n\nQUESTION:\nIs ball is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1153,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hard(car).",
    "c": "wet(X) :- hard(X).\nhappy(X) :- funny(X), sibling(X,W), excited(W).\nred(Y) :- new(Y), owns(B,Y), bored(B).\nbored(Y) :- angry(Y), light(A).\nstrong(Z) :- clever(Z).\ncurious(Y) :- happy(Y).\nsoft(X) :- small(X), dislikes(W,X), funny(W).\nfunny(Z) :- weak(Z), clever(D).\nlight(Z) :- clean(Z).\nexcited(X) :- clever(X), likes(X,V), rough(V).\ntired(X) :- friendly(X), owns(X,W), rough(W).\nhungry(X) :- calm(X).\nrough(Y) :- heavy(Y), owns(V,Y), excited(V).\nstrong(X) :- bored(X), parent(X,A), busy(A).\nweak(X) :- funny(X).\nowns(X,Y) :- angry(X), dirty(Y).\nbored(X) :- brave(X).\nparent(X,Y) :- angry(X), calm(Y).\nsibling(X,Y) :- excited(X), funny(Y).\ndislikes(X,Y) :- weak(X), soft(Y).\nparent(X,Y) :- funny(X), hungry(Y).\nbored(X) :- brave(X).\ncurious(X) :- weak(X), friendly(X).\nangry(X) :- brave(X), funny(X).\nlight(X) :- heavy(X), heavy(X).\nwet(car).\nsibling(bob,frank).\nred(car).\nangry(carol).\nsad(alice).\nlikes(alice,car).\nheavy(apple).\nsmooth(pencil).\ndislikes(bob,ball).\nowns(frank,book).\ndislikes(alice,book).\nexcited(alice).\nparent(carol,george).\nlikes(bob,phone).\nparent(carol,bob).\nfriend(bob,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is wet.\nFor all X, if there exists W such that person X is funny and person X is a sibling of person W and person W is excited, then person X is happy.\nFor all Y, if there exists B such that object Y is new and person B owns object Y and person B is bored, then object Y is red.\nFor all Y, if there exists A such that person Y is angry and object A is light, then person Y is bored.\nFor all Z, if person Z is clever, then person Z is strong.\nFor all Y, if person Y is happy, then person Y is curious.\nFor all X, if there exists W such that object X is small and person W dislikes object X and person W is funny, then object X is soft.\nFor all Z, if there exists D such that person Z is weak and person D is clever, then person Z is funny.\nFor all Z, if object Z is clean, then object Z is light.\nFor all X, if there exists V such that person X is clever and person X likes object V and object V is rough, then person X is excited.\nFor all X, if there exists W such that person X is friendly and person X owns object W and object W is rough, then person X is tired.\nFor all X, if person X is calm, then person X is hungry.\nFor all Y, if there exists V such that object Y is heavy and person V owns object Y and person V is excited, then object Y is rough.\nFor all X, if there exists A such that person X is bored and person X is a parent of person A and person A is busy, then person X is strong.\nFor all X, if person X is funny, then person X is weak.\nFor all X, Y, if person X is angry and object Y is dirty, then person X owns object Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, Y, if person X is angry and person Y is calm, then person X is a parent of person Y.\nFor all X, Y, if person X is excited and person Y is funny, then person X is a sibling of person Y.\nFor all X, Y, if person X is weak and object Y is soft, then person X dislikes object Y.\nFor all X, Y, if person X is funny and person Y is hungry, then person X is a parent of person Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is weak and person X is friendly, then person X is curious.\nFor all X, if person X is brave and person X is funny, then person X is angry.\nFor all X, if object X is heavy and object X is heavy, then object X is light.\n\nAnd the following facts:\ncar is wet.\nbob is a sibling of frank.\ncar is red.\ncarol is angry.\nalice is sad.\nalice likes car.\napple is heavy.\npencil is smooth.\nbob dislikes ball.\nfrank owns book.\nalice dislikes book.\nalice is excited.\ncarol is a parent of george.\nbob likes phone.\ncarol is a parent of bob.\nbob is a friend of dave.\n\nQUESTION:\nCould car is hard explain car is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1154,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(car).",
    "c": "wet(X) :- hard(X).\nhappy(X) :- funny(X), sibling(X,W), excited(W).\nred(Y) :- new(Y), owns(B,Y), bored(B).\nbored(Y) :- angry(Y), light(A).\nstrong(Z) :- clever(Z).\ncurious(Y) :- happy(Y).\nsoft(X) :- small(X), dislikes(W,X), funny(W).\nfunny(Z) :- weak(Z), clever(D).\nlight(Z) :- clean(Z).\nexcited(X) :- clever(X), likes(X,V), rough(V).\ntired(X) :- friendly(X), owns(X,W), rough(W).\nhungry(X) :- calm(X).\nrough(Y) :- heavy(Y), owns(V,Y), excited(V).\nstrong(X) :- bored(X), parent(X,A), busy(A).\nweak(X) :- funny(X).\nowns(X,Y) :- angry(X), dirty(Y).\nbored(X) :- brave(X).\nparent(X,Y) :- angry(X), calm(Y).\nsibling(X,Y) :- excited(X), funny(Y).\ndislikes(X,Y) :- weak(X), soft(Y).\nparent(X,Y) :- funny(X), hungry(Y).\nbored(X) :- brave(X).\ncurious(X) :- weak(X), friendly(X).\nangry(X) :- brave(X), funny(X).\nlight(X) :- heavy(X), heavy(X).\nwet(car).\nsibling(bob,frank).\nred(car).\nangry(carol).\nsad(alice).\nlikes(alice,car).\nheavy(apple).\nsmooth(pencil).\ndislikes(bob,ball).\nowns(frank,book).\ndislikes(alice,book).\nexcited(alice).\nparent(carol,george).\nlikes(bob,phone).\nparent(carol,bob).\nfriend(bob,dave).",
    "natural language": "You are given the following information:\nFor all X, if object X is hard, then object X is wet.\nFor all X, if there exists W such that person X is funny and person X is a sibling of person W and person W is excited, then person X is happy.\nFor all Y, if there exists B such that object Y is new and person B owns object Y and person B is bored, then object Y is red.\nFor all Y, if there exists A such that person Y is angry and object A is light, then person Y is bored.\nFor all Z, if person Z is clever, then person Z is strong.\nFor all Y, if person Y is happy, then person Y is curious.\nFor all X, if there exists W such that object X is small and person W dislikes object X and person W is funny, then object X is soft.\nFor all Z, if there exists D such that person Z is weak and person D is clever, then person Z is funny.\nFor all Z, if object Z is clean, then object Z is light.\nFor all X, if there exists V such that person X is clever and person X likes object V and object V is rough, then person X is excited.\nFor all X, if there exists W such that person X is friendly and person X owns object W and object W is rough, then person X is tired.\nFor all X, if person X is calm, then person X is hungry.\nFor all Y, if there exists V such that object Y is heavy and person V owns object Y and person V is excited, then object Y is rough.\nFor all X, if there exists A such that person X is bored and person X is a parent of person A and person A is busy, then person X is strong.\nFor all X, if person X is funny, then person X is weak.\nFor all X, Y, if person X is angry and object Y is dirty, then person X owns object Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, Y, if person X is angry and person Y is calm, then person X is a parent of person Y.\nFor all X, Y, if person X is excited and person Y is funny, then person X is a sibling of person Y.\nFor all X, Y, if person X is weak and object Y is soft, then person X dislikes object Y.\nFor all X, Y, if person X is funny and person Y is hungry, then person X is a parent of person Y.\nFor all X, if person X is brave, then person X is bored.\nFor all X, if person X is weak and person X is friendly, then person X is curious.\nFor all X, if person X is brave and person X is funny, then person X is angry.\nFor all X, if object X is heavy and object X is heavy, then object X is light.\n\nAnd the following facts:\ncar is wet.\nbob is a sibling of frank.\ncar is red.\ncarol is angry.\nalice is sad.\nalice likes car.\napple is heavy.\npencil is smooth.\nbob dislikes ball.\nfrank owns book.\nalice dislikes book.\nalice is excited.\ncarol is a parent of george.\nbob likes phone.\ncarol is a parent of bob.\nbob is a friend of dave.\n\nQUESTION:\nCould car is light explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1155,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "clean(X) :- old(X).\nwet(X) :- soft(X), likes(W,X), tall(W).\nwet(Y) :- hard(Y), likes(V,Y), angry(V).\nfunny(X) :- hungry(X), parent(X,V), angry(V).\nsoft(Y) :- rough(Y), owns(W,Y), sad(W).\nenemy(X,Z) :- angry(Z), tall(X), parent(Z,V).\nsmall(Z) :- dirty(Z), likes(B,Z), funny(B).\nclever(Y) :- excited(Y).\nsoft(X) :- dirty(X).\nbored(Z) :- calm(Z).\nhappy(X) :- happy(X).\ntall(X) :- strong(X).\nsoft(X) :- small(X), red(F).\nexcited(X) :- tall(X), big(F).\nrough(Z) :- big(Z), hungry(F).\nfriend(X,Y) :- busy(X), tired(Y), sibling(X,Y).\nred(X) :- rough(X).\nred(X) :- dirty(X), small(X).\nlikes(X,Y) :- brave(X), new(Y).\ndirty(X) :- heavy(X).\nwet(X) :- big(X).\nhappy(X) :- clever(X), funny(X).\nsoft(X) :- red(X), heavy(X).\nhungry(X) :- friendly(X), brave(X).\nexcited(X) :- angry(X), strong(X).\nold(pencil).\ndislikes(george,pencil).\nsibling(frank,bob).\nfunny(dave).\nparent(george,eve).\nsmooth(car).\nparent(carol,eve).\nowns(george,ball).\nsibling(alice,bob).\nlight(car).\nfriend(alice,eve).\nstrong(frank).\nowns(bob,apple).\nparent(dave,alice).\nbig(pencil).\nowns(george,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is clean.\nFor all X, if there exists W such that object X is soft and person W likes object X and person W is tall, then object X is wet.\nFor all Y, if there exists V such that object Y is hard and person V likes object Y and person V is angry, then object Y is wet.\nFor all X, if there exists V such that person X is hungry and person X is a parent of person V and person V is angry, then person X is funny.\nFor all Y, if there exists W such that object Y is rough and person W owns object Y and person W is sad, then object Y is soft.\nFor all X, Z, if there exists V such that person Z is angry and person X is tall and person Z is a parent of person V, then person X is an enemy of person Z.\nFor all Z, if there exists B such that object Z is dirty and person B likes object Z and person B is funny, then object Z is small.\nFor all Y, if person Y is excited, then person Y is clever.\nFor all X, if object X is dirty, then object X is soft.\nFor all Z, if person Z is calm, then person Z is bored.\nFor all X, if person X is happy, then person X is happy.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if there exists F such that object X is small and object F is red, then object X is soft.\nFor all X, if there exists F such that person X is tall and object F is big, then person X is excited.\nFor all Z, if there exists F such that object Z is big and person F is hungry, then object Z is rough.\nFor all X, Y, if person X is busy and person Y is tired and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is dirty and object X is small, then object X is red.\nFor all X, Y, if person X is brave and object Y is new, then person X likes object Y.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is big, then object X is wet.\nFor all X, if person X is clever and person X is funny, then person X is happy.\nFor all X, if object X is red and object X is heavy, then object X is soft.\nFor all X, if person X is friendly and person X is brave, then person X is hungry.\nFor all X, if person X is angry and person X is strong, then person X is excited.\n\nAnd the following facts:\npencil is old.\ngeorge dislikes pencil.\nfrank is a sibling of bob.\ndave is funny.\ngeorge is a parent of eve.\ncar is smooth.\ncarol is a parent of eve.\ngeorge owns ball.\nalice is a sibling of bob.\ncar is light.\nalice is a friend of eve.\nfrank is strong.\nbob owns apple.\ndave is a parent of alice.\npencil is big.\ngeorge owns apple.\n\nQUESTION:\nIs pencil is clean true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1156,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(carol).",
    "c": "clean(X) :- old(X).\nwet(X) :- soft(X), likes(W,X), tall(W).\nwet(Y) :- hard(Y), likes(V,Y), angry(V).\nfunny(X) :- hungry(X), parent(X,V), angry(V).\nsoft(Y) :- rough(Y), owns(W,Y), sad(W).\nenemy(X,Z) :- angry(Z), tall(X), parent(Z,V).\nsmall(Z) :- dirty(Z), likes(B,Z), funny(B).\nclever(Y) :- excited(Y).\nsoft(X) :- dirty(X).\nbored(Z) :- calm(Z).\nhappy(X) :- happy(X).\ntall(X) :- strong(X).\nsoft(X) :- small(X), red(F).\nexcited(X) :- tall(X), big(F).\nrough(Z) :- big(Z), hungry(F).\nfriend(X,Y) :- busy(X), tired(Y), sibling(X,Y).\nred(X) :- rough(X).\nred(X) :- dirty(X), small(X).\nlikes(X,Y) :- brave(X), new(Y).\ndirty(X) :- heavy(X).\nwet(X) :- big(X).\nhappy(X) :- clever(X), funny(X).\nsoft(X) :- red(X), heavy(X).\nhungry(X) :- friendly(X), brave(X).\nexcited(X) :- angry(X), strong(X).\nold(pencil).\ndislikes(george,pencil).\nsibling(frank,bob).\nfunny(dave).\nparent(george,eve).\nsmooth(car).\nparent(carol,eve).\nowns(george,ball).\nsibling(alice,bob).\nlight(car).\nfriend(alice,eve).\nstrong(frank).\nowns(bob,apple).\nparent(dave,alice).\nbig(pencil).\nowns(george,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is clean.\nFor all X, if there exists W such that object X is soft and person W likes object X and person W is tall, then object X is wet.\nFor all Y, if there exists V such that object Y is hard and person V likes object Y and person V is angry, then object Y is wet.\nFor all X, if there exists V such that person X is hungry and person X is a parent of person V and person V is angry, then person X is funny.\nFor all Y, if there exists W such that object Y is rough and person W owns object Y and person W is sad, then object Y is soft.\nFor all X, Z, if there exists V such that person Z is angry and person X is tall and person Z is a parent of person V, then person X is an enemy of person Z.\nFor all Z, if there exists B such that object Z is dirty and person B likes object Z and person B is funny, then object Z is small.\nFor all Y, if person Y is excited, then person Y is clever.\nFor all X, if object X is dirty, then object X is soft.\nFor all Z, if person Z is calm, then person Z is bored.\nFor all X, if person X is happy, then person X is happy.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if there exists F such that object X is small and object F is red, then object X is soft.\nFor all X, if there exists F such that person X is tall and object F is big, then person X is excited.\nFor all Z, if there exists F such that object Z is big and person F is hungry, then object Z is rough.\nFor all X, Y, if person X is busy and person Y is tired and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is dirty and object X is small, then object X is red.\nFor all X, Y, if person X is brave and object Y is new, then person X likes object Y.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is big, then object X is wet.\nFor all X, if person X is clever and person X is funny, then person X is happy.\nFor all X, if object X is red and object X is heavy, then object X is soft.\nFor all X, if person X is friendly and person X is brave, then person X is hungry.\nFor all X, if person X is angry and person X is strong, then person X is excited.\n\nAnd the following facts:\npencil is old.\ngeorge dislikes pencil.\nfrank is a sibling of bob.\ndave is funny.\ngeorge is a parent of eve.\ncar is smooth.\ncarol is a parent of eve.\ngeorge owns ball.\nalice is a sibling of bob.\ncar is light.\nalice is a friend of eve.\nfrank is strong.\nbob owns apple.\ndave is a parent of alice.\npencil is big.\ngeorge owns apple.\n\nQUESTION:\nIs carol is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1157,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(pencil).",
    "c": "clean(X) :- old(X).\nwet(X) :- soft(X), likes(W,X), tall(W).\nwet(Y) :- hard(Y), likes(V,Y), angry(V).\nfunny(X) :- hungry(X), parent(X,V), angry(V).\nsoft(Y) :- rough(Y), owns(W,Y), sad(W).\nenemy(X,Z) :- angry(Z), tall(X), parent(Z,V).\nsmall(Z) :- dirty(Z), likes(B,Z), funny(B).\nclever(Y) :- excited(Y).\nsoft(X) :- dirty(X).\nbored(Z) :- calm(Z).\nhappy(X) :- happy(X).\ntall(X) :- strong(X).\nsoft(X) :- small(X), red(F).\nexcited(X) :- tall(X), big(F).\nrough(Z) :- big(Z), hungry(F).\nfriend(X,Y) :- busy(X), tired(Y), sibling(X,Y).\nred(X) :- rough(X).\nred(X) :- dirty(X), small(X).\nlikes(X,Y) :- brave(X), new(Y).\ndirty(X) :- heavy(X).\nwet(X) :- big(X).\nhappy(X) :- clever(X), funny(X).\nsoft(X) :- red(X), heavy(X).\nhungry(X) :- friendly(X), brave(X).\nexcited(X) :- angry(X), strong(X).\nclean(pencil).\ndislikes(george,pencil).\nsibling(frank,bob).\nfunny(dave).\nparent(george,eve).\nsmooth(car).\nparent(carol,eve).\nowns(george,ball).\nsibling(alice,bob).\nlight(car).\nfriend(alice,eve).\nstrong(frank).\nowns(bob,apple).\nparent(dave,alice).\nbig(pencil).\nowns(george,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is clean.\nFor all X, if there exists W such that object X is soft and person W likes object X and person W is tall, then object X is wet.\nFor all Y, if there exists V such that object Y is hard and person V likes object Y and person V is angry, then object Y is wet.\nFor all X, if there exists V such that person X is hungry and person X is a parent of person V and person V is angry, then person X is funny.\nFor all Y, if there exists W such that object Y is rough and person W owns object Y and person W is sad, then object Y is soft.\nFor all X, Z, if there exists V such that person Z is angry and person X is tall and person Z is a parent of person V, then person X is an enemy of person Z.\nFor all Z, if there exists B such that object Z is dirty and person B likes object Z and person B is funny, then object Z is small.\nFor all Y, if person Y is excited, then person Y is clever.\nFor all X, if object X is dirty, then object X is soft.\nFor all Z, if person Z is calm, then person Z is bored.\nFor all X, if person X is happy, then person X is happy.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if there exists F such that object X is small and object F is red, then object X is soft.\nFor all X, if there exists F such that person X is tall and object F is big, then person X is excited.\nFor all Z, if there exists F such that object Z is big and person F is hungry, then object Z is rough.\nFor all X, Y, if person X is busy and person Y is tired and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is dirty and object X is small, then object X is red.\nFor all X, Y, if person X is brave and object Y is new, then person X likes object Y.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is big, then object X is wet.\nFor all X, if person X is clever and person X is funny, then person X is happy.\nFor all X, if object X is red and object X is heavy, then object X is soft.\nFor all X, if person X is friendly and person X is brave, then person X is hungry.\nFor all X, if person X is angry and person X is strong, then person X is excited.\n\nAnd the following facts:\npencil is clean.\ngeorge dislikes pencil.\nfrank is a sibling of bob.\ndave is funny.\ngeorge is a parent of eve.\ncar is smooth.\ncarol is a parent of eve.\ngeorge owns ball.\nalice is a sibling of bob.\ncar is light.\nalice is a friend of eve.\nfrank is strong.\nbob owns apple.\ndave is a parent of alice.\npencil is big.\ngeorge owns apple.\n\nQUESTION:\nCould pencil is old explain pencil is clean?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1158,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(frank).",
    "c": "clean(X) :- old(X).\nwet(X) :- soft(X), likes(W,X), tall(W).\nwet(Y) :- hard(Y), likes(V,Y), angry(V).\nfunny(X) :- hungry(X), parent(X,V), angry(V).\nsoft(Y) :- rough(Y), owns(W,Y), sad(W).\nenemy(X,Z) :- angry(Z), tall(X), parent(Z,V).\nsmall(Z) :- dirty(Z), likes(B,Z), funny(B).\nclever(Y) :- excited(Y).\nsoft(X) :- dirty(X).\nbored(Z) :- calm(Z).\nhappy(X) :- happy(X).\ntall(X) :- strong(X).\nsoft(X) :- small(X), red(F).\nexcited(X) :- tall(X), big(F).\nrough(Z) :- big(Z), hungry(F).\nfriend(X,Y) :- busy(X), tired(Y), sibling(X,Y).\nred(X) :- rough(X).\nred(X) :- dirty(X), small(X).\nlikes(X,Y) :- brave(X), new(Y).\ndirty(X) :- heavy(X).\nwet(X) :- big(X).\nhappy(X) :- clever(X), funny(X).\nsoft(X) :- red(X), heavy(X).\nhungry(X) :- friendly(X), brave(X).\nexcited(X) :- angry(X), strong(X).\nclean(pencil).\ndislikes(george,pencil).\nsibling(frank,bob).\nfunny(dave).\nparent(george,eve).\nsmooth(car).\nparent(carol,eve).\nowns(george,ball).\nsibling(alice,bob).\nlight(car).\nfriend(alice,eve).\nstrong(frank).\nowns(bob,apple).\nparent(dave,alice).\nbig(pencil).\nowns(george,apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is clean.\nFor all X, if there exists W such that object X is soft and person W likes object X and person W is tall, then object X is wet.\nFor all Y, if there exists V such that object Y is hard and person V likes object Y and person V is angry, then object Y is wet.\nFor all X, if there exists V such that person X is hungry and person X is a parent of person V and person V is angry, then person X is funny.\nFor all Y, if there exists W such that object Y is rough and person W owns object Y and person W is sad, then object Y is soft.\nFor all X, Z, if there exists V such that person Z is angry and person X is tall and person Z is a parent of person V, then person X is an enemy of person Z.\nFor all Z, if there exists B such that object Z is dirty and person B likes object Z and person B is funny, then object Z is small.\nFor all Y, if person Y is excited, then person Y is clever.\nFor all X, if object X is dirty, then object X is soft.\nFor all Z, if person Z is calm, then person Z is bored.\nFor all X, if person X is happy, then person X is happy.\nFor all X, if person X is strong, then person X is tall.\nFor all X, if there exists F such that object X is small and object F is red, then object X is soft.\nFor all X, if there exists F such that person X is tall and object F is big, then person X is excited.\nFor all Z, if there exists F such that object Z is big and person F is hungry, then object Z is rough.\nFor all X, Y, if person X is busy and person Y is tired and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is dirty and object X is small, then object X is red.\nFor all X, Y, if person X is brave and object Y is new, then person X likes object Y.\nFor all X, if object X is heavy, then object X is dirty.\nFor all X, if object X is big, then object X is wet.\nFor all X, if person X is clever and person X is funny, then person X is happy.\nFor all X, if object X is red and object X is heavy, then object X is soft.\nFor all X, if person X is friendly and person X is brave, then person X is hungry.\nFor all X, if person X is angry and person X is strong, then person X is excited.\n\nAnd the following facts:\npencil is clean.\ngeorge dislikes pencil.\nfrank is a sibling of bob.\ndave is funny.\ngeorge is a parent of eve.\ncar is smooth.\ncarol is a parent of eve.\ngeorge owns ball.\nalice is a sibling of bob.\ncar is light.\nalice is a friend of eve.\nfrank is strong.\nbob owns apple.\ndave is a parent of alice.\npencil is big.\ngeorge owns apple.\n\nQUESTION:\nCould frank is funny explain pencil is clean?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1159,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(pencil).",
    "c": "new(X) :- soft(X).\ntall(X) :- bored(X), dirty(B).\ntall(Y) :- hungry(Y).\nhard(X) :- small(X).\nold(Y) :- smooth(Y).\nrough(X) :- rough(X), likes(U,X), tired(U).\nbusy(Y) :- sad(Y).\nangry(Y) :- tall(Y), likes(Y,U), red(U).\nparent(X,Y) :- friendly(Y), tired(X), bored(E).\nlikes(Y,Z) :- curious(Y), hard(Z), likes(A,Z).\nsmall(Y) :- red(Y), owns(W,Y), busy(W).\nwet(X) :- clean(X), likes(B,X), bored(B).\nhard(Y) :- wet(Y).\nbored(X) :- hungry(X), likes(X,W), smooth(W).\nangry(Z) :- funny(Z), rough(A).\nhard(X) :- old(X), clean(X).\nfriend(X,Y) :- excited(X), excited(Y).\nenemy(X,Y) :- strong(X), friendly(Y).\nsmall(X) :- old(X).\nrough(X) :- light(X).\nsibling(X,Y) :- angry(X), brave(Y).\nhappy(X) :- sad(X).\nold(X) :- heavy(X), hard(X).\nhappy(X) :- weak(X).\nsad(X) :- weak(X), strong(X).\nsoft(pencil).\nsibling(eve,frank).\nfunny(bob).\nold(car).\nhappy(alice).\nbig(ball).\ncold.\nparent(eve,alice).\nowns(alice,car).\nrough(book).\nhard(apple).\nlikes(george,pencil).\nenemy(dave,bob).\ndislikes(alice,ball).\ndislikes(dave,pencil).\nfriendly(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is new.\nFor all X, if there exists B such that person X is bored and object B is dirty, then person X is tall.\nFor all Y, if person Y is hungry, then person Y is tall.\nFor all X, if object X is small, then object X is hard.\nFor all Y, if object Y is smooth, then object Y is old.\nFor all X, if there exists U such that object X is rough and person U likes object X and person U is tired, then object X is rough.\nFor all Y, if person Y is sad, then person Y is busy.\nFor all Y, if there exists U such that person Y is tall and person Y likes object U and object U is red, then person Y is angry.\nFor all X, Y, if there exists E such that person Y is friendly and person X is tired and person E is bored, then person X is a parent of person Y.\nFor all Y, Z, if there exists A such that person Y is curious and object Z is hard and person A likes object Z, then person Y likes object Z.\nFor all Y, if there exists W such that object Y is red and person W owns object Y and person W is busy, then object Y is small.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is bored, then object X is wet.\nFor all Y, if object Y is wet, then object Y is hard.\nFor all X, if there exists W such that person X is hungry and person X likes object W and object W is smooth, then person X is bored.\nFor all Z, if there exists A such that person Z is funny and object A is rough, then person Z is angry.\nFor all X, if object X is old and object X is clean, then object X is hard.\nFor all X, Y, if person X is excited and person Y is excited, then person X is a friend of person Y.\nFor all X, Y, if person X is strong and person Y is friendly, then person X is an enemy of person Y.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is light, then object X is rough.\nFor all X, Y, if person X is angry and person Y is brave, then person X is a sibling of person Y.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if object X is heavy and object X is hard, then object X is old.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is weak and person X is strong, then person X is sad.\n\nAnd the following facts:\npencil is soft.\neve is a sibling of frank.\nbob is funny.\ncar is old.\nalice is happy.\nball is big.\nit is cold.\neve is a parent of alice.\nalice owns car.\nbook is rough.\napple is hard.\ngeorge likes pencil.\ndave is an enemy of bob.\nalice dislikes ball.\ndave dislikes pencil.\nbob is friendly.\n\nQUESTION:\nIs pencil is new true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1160,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(dave).",
    "c": "new(X) :- soft(X).\ntall(X) :- bored(X), dirty(B).\ntall(Y) :- hungry(Y).\nhard(X) :- small(X).\nold(Y) :- smooth(Y).\nrough(X) :- rough(X), likes(U,X), tired(U).\nbusy(Y) :- sad(Y).\nangry(Y) :- tall(Y), likes(Y,U), red(U).\nparent(X,Y) :- friendly(Y), tired(X), bored(E).\nlikes(Y,Z) :- curious(Y), hard(Z), likes(A,Z).\nsmall(Y) :- red(Y), owns(W,Y), busy(W).\nwet(X) :- clean(X), likes(B,X), bored(B).\nhard(Y) :- wet(Y).\nbored(X) :- hungry(X), likes(X,W), smooth(W).\nangry(Z) :- funny(Z), rough(A).\nhard(X) :- old(X), clean(X).\nfriend(X,Y) :- excited(X), excited(Y).\nenemy(X,Y) :- strong(X), friendly(Y).\nsmall(X) :- old(X).\nrough(X) :- light(X).\nsibling(X,Y) :- angry(X), brave(Y).\nhappy(X) :- sad(X).\nold(X) :- heavy(X), hard(X).\nhappy(X) :- weak(X).\nsad(X) :- weak(X), strong(X).\nsoft(pencil).\nsibling(eve,frank).\nfunny(bob).\nold(car).\nhappy(alice).\nbig(ball).\ncold.\nparent(eve,alice).\nowns(alice,car).\nrough(book).\nhard(apple).\nlikes(george,pencil).\nenemy(dave,bob).\ndislikes(alice,ball).\ndislikes(dave,pencil).\nfriendly(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is new.\nFor all X, if there exists B such that person X is bored and object B is dirty, then person X is tall.\nFor all Y, if person Y is hungry, then person Y is tall.\nFor all X, if object X is small, then object X is hard.\nFor all Y, if object Y is smooth, then object Y is old.\nFor all X, if there exists U such that object X is rough and person U likes object X and person U is tired, then object X is rough.\nFor all Y, if person Y is sad, then person Y is busy.\nFor all Y, if there exists U such that person Y is tall and person Y likes object U and object U is red, then person Y is angry.\nFor all X, Y, if there exists E such that person Y is friendly and person X is tired and person E is bored, then person X is a parent of person Y.\nFor all Y, Z, if there exists A such that person Y is curious and object Z is hard and person A likes object Z, then person Y likes object Z.\nFor all Y, if there exists W such that object Y is red and person W owns object Y and person W is busy, then object Y is small.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is bored, then object X is wet.\nFor all Y, if object Y is wet, then object Y is hard.\nFor all X, if there exists W such that person X is hungry and person X likes object W and object W is smooth, then person X is bored.\nFor all Z, if there exists A such that person Z is funny and object A is rough, then person Z is angry.\nFor all X, if object X is old and object X is clean, then object X is hard.\nFor all X, Y, if person X is excited and person Y is excited, then person X is a friend of person Y.\nFor all X, Y, if person X is strong and person Y is friendly, then person X is an enemy of person Y.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is light, then object X is rough.\nFor all X, Y, if person X is angry and person Y is brave, then person X is a sibling of person Y.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if object X is heavy and object X is hard, then object X is old.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is weak and person X is strong, then person X is sad.\n\nAnd the following facts:\npencil is soft.\neve is a sibling of frank.\nbob is funny.\ncar is old.\nalice is happy.\nball is big.\nit is cold.\neve is a parent of alice.\nalice owns car.\nbook is rough.\napple is hard.\ngeorge likes pencil.\ndave is an enemy of bob.\nalice dislikes ball.\ndave dislikes pencil.\nbob is friendly.\n\nQUESTION:\nIs dave is friendly true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1161,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(pencil).",
    "c": "new(X) :- soft(X).\ntall(X) :- bored(X), dirty(B).\ntall(Y) :- hungry(Y).\nhard(X) :- small(X).\nold(Y) :- smooth(Y).\nrough(X) :- rough(X), likes(U,X), tired(U).\nbusy(Y) :- sad(Y).\nangry(Y) :- tall(Y), likes(Y,U), red(U).\nparent(X,Y) :- friendly(Y), tired(X), bored(E).\nlikes(Y,Z) :- curious(Y), hard(Z), likes(A,Z).\nsmall(Y) :- red(Y), owns(W,Y), busy(W).\nwet(X) :- clean(X), likes(B,X), bored(B).\nhard(Y) :- wet(Y).\nbored(X) :- hungry(X), likes(X,W), smooth(W).\nangry(Z) :- funny(Z), rough(A).\nhard(X) :- old(X), clean(X).\nfriend(X,Y) :- excited(X), excited(Y).\nenemy(X,Y) :- strong(X), friendly(Y).\nsmall(X) :- old(X).\nrough(X) :- light(X).\nsibling(X,Y) :- angry(X), brave(Y).\nhappy(X) :- sad(X).\nold(X) :- heavy(X), hard(X).\nhappy(X) :- weak(X).\nsad(X) :- weak(X), strong(X).\nnew(pencil).\nsibling(eve,frank).\nfunny(bob).\nold(car).\nhappy(alice).\nbig(ball).\ncold.\nparent(eve,alice).\nowns(alice,car).\nrough(book).\nhard(apple).\nlikes(george,pencil).\nenemy(dave,bob).\ndislikes(alice,ball).\ndislikes(dave,pencil).\nfriendly(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is new.\nFor all X, if there exists B such that person X is bored and object B is dirty, then person X is tall.\nFor all Y, if person Y is hungry, then person Y is tall.\nFor all X, if object X is small, then object X is hard.\nFor all Y, if object Y is smooth, then object Y is old.\nFor all X, if there exists U such that object X is rough and person U likes object X and person U is tired, then object X is rough.\nFor all Y, if person Y is sad, then person Y is busy.\nFor all Y, if there exists U such that person Y is tall and person Y likes object U and object U is red, then person Y is angry.\nFor all X, Y, if there exists E such that person Y is friendly and person X is tired and person E is bored, then person X is a parent of person Y.\nFor all Y, Z, if there exists A such that person Y is curious and object Z is hard and person A likes object Z, then person Y likes object Z.\nFor all Y, if there exists W such that object Y is red and person W owns object Y and person W is busy, then object Y is small.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is bored, then object X is wet.\nFor all Y, if object Y is wet, then object Y is hard.\nFor all X, if there exists W such that person X is hungry and person X likes object W and object W is smooth, then person X is bored.\nFor all Z, if there exists A such that person Z is funny and object A is rough, then person Z is angry.\nFor all X, if object X is old and object X is clean, then object X is hard.\nFor all X, Y, if person X is excited and person Y is excited, then person X is a friend of person Y.\nFor all X, Y, if person X is strong and person Y is friendly, then person X is an enemy of person Y.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is light, then object X is rough.\nFor all X, Y, if person X is angry and person Y is brave, then person X is a sibling of person Y.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if object X is heavy and object X is hard, then object X is old.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is weak and person X is strong, then person X is sad.\n\nAnd the following facts:\npencil is new.\neve is a sibling of frank.\nbob is funny.\ncar is old.\nalice is happy.\nball is big.\nit is cold.\neve is a parent of alice.\nalice owns car.\nbook is rough.\napple is hard.\ngeorge likes pencil.\ndave is an enemy of bob.\nalice dislikes ball.\ndave dislikes pencil.\nbob is friendly.\n\nQUESTION:\nCould pencil is soft explain pencil is new?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1162,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(frank).",
    "c": "new(X) :- soft(X).\ntall(X) :- bored(X), dirty(B).\ntall(Y) :- hungry(Y).\nhard(X) :- small(X).\nold(Y) :- smooth(Y).\nrough(X) :- rough(X), likes(U,X), tired(U).\nbusy(Y) :- sad(Y).\nangry(Y) :- tall(Y), likes(Y,U), red(U).\nparent(X,Y) :- friendly(Y), tired(X), bored(E).\nlikes(Y,Z) :- curious(Y), hard(Z), likes(A,Z).\nsmall(Y) :- red(Y), owns(W,Y), busy(W).\nwet(X) :- clean(X), likes(B,X), bored(B).\nhard(Y) :- wet(Y).\nbored(X) :- hungry(X), likes(X,W), smooth(W).\nangry(Z) :- funny(Z), rough(A).\nhard(X) :- old(X), clean(X).\nfriend(X,Y) :- excited(X), excited(Y).\nenemy(X,Y) :- strong(X), friendly(Y).\nsmall(X) :- old(X).\nrough(X) :- light(X).\nsibling(X,Y) :- angry(X), brave(Y).\nhappy(X) :- sad(X).\nold(X) :- heavy(X), hard(X).\nhappy(X) :- weak(X).\nsad(X) :- weak(X), strong(X).\nnew(pencil).\nsibling(eve,frank).\nfunny(bob).\nold(car).\nhappy(alice).\nbig(ball).\ncold.\nparent(eve,alice).\nowns(alice,car).\nrough(book).\nhard(apple).\nlikes(george,pencil).\nenemy(dave,bob).\ndislikes(alice,ball).\ndislikes(dave,pencil).\nfriendly(bob).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is new.\nFor all X, if there exists B such that person X is bored and object B is dirty, then person X is tall.\nFor all Y, if person Y is hungry, then person Y is tall.\nFor all X, if object X is small, then object X is hard.\nFor all Y, if object Y is smooth, then object Y is old.\nFor all X, if there exists U such that object X is rough and person U likes object X and person U is tired, then object X is rough.\nFor all Y, if person Y is sad, then person Y is busy.\nFor all Y, if there exists U such that person Y is tall and person Y likes object U and object U is red, then person Y is angry.\nFor all X, Y, if there exists E such that person Y is friendly and person X is tired and person E is bored, then person X is a parent of person Y.\nFor all Y, Z, if there exists A such that person Y is curious and object Z is hard and person A likes object Z, then person Y likes object Z.\nFor all Y, if there exists W such that object Y is red and person W owns object Y and person W is busy, then object Y is small.\nFor all X, if there exists B such that object X is clean and person B likes object X and person B is bored, then object X is wet.\nFor all Y, if object Y is wet, then object Y is hard.\nFor all X, if there exists W such that person X is hungry and person X likes object W and object W is smooth, then person X is bored.\nFor all Z, if there exists A such that person Z is funny and object A is rough, then person Z is angry.\nFor all X, if object X is old and object X is clean, then object X is hard.\nFor all X, Y, if person X is excited and person Y is excited, then person X is a friend of person Y.\nFor all X, Y, if person X is strong and person Y is friendly, then person X is an enemy of person Y.\nFor all X, if object X is old, then object X is small.\nFor all X, if object X is light, then object X is rough.\nFor all X, Y, if person X is angry and person Y is brave, then person X is a sibling of person Y.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if object X is heavy and object X is hard, then object X is old.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is weak and person X is strong, then person X is sad.\n\nAnd the following facts:\npencil is new.\neve is a sibling of frank.\nbob is funny.\ncar is old.\nalice is happy.\nball is big.\nit is cold.\neve is a parent of alice.\nalice owns car.\nbook is rough.\napple is hard.\ngeorge likes pencil.\ndave is an enemy of bob.\nalice dislikes ball.\ndave dislikes pencil.\nbob is friendly.\n\nQUESTION:\nCould frank is curious explain pencil is new?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1163,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(pencil).",
    "c": "big(X) :- wet(X).\nfunny(Z) :- friendly(Z), sibling(Z,U), clever(U).\nbored(Y) :- weak(Y), owns(Y,B), new(B).\nstrong(Y) :- weak(Y), likes(Y,V), old(V).\nparent(Z,Y) :- calm(Y), weak(Z), light(D).\nweak(X) :- happy(X), enemy(X,B), busy(B).\nclever(X) :- busy(X), parent(X,A), happy(A).\nnew(Y) :- new(Y), dislikes(A,Y), clever(A).\nenemy(Z,Y) :- curious(Y), busy(Z), dislikes(Z,W).\nclean(X) :- rough(X), owns(U,X), curious(U).\nbrave(X) :- sad(X), excited(X).\nhungry(X) :- tired(X).\nparent(X,Y) :- bored(X), calm(Y).\ntired(X) :- hungry(X), strong(X).\nhappy(X) :- brave(X), tired(X).\ncalm(X) :- curious(X), tired(X).\nhappy(X) :- tall(X).\nrough(X) :- clean(X).\nangry(X) :- excited(X).\ntired(X) :- weak(X).\nenemy(X,Y) :- tall(X), weak(Y).\ndirty(X) :- old(X).\nclever(X) :- friendly(X).\ntall(X) :- weak(X).\nclean(X) :- hard(X).\nwet(pencil).\nparent(dave,george).\ndislikes(frank,apple).\nfriend(alice,dave).\nlikes(george,pencil).\nparent(alice,frank).\ndislikes(george,pencil).\ndirty(car).\nlight(car).\nlikes(eve,book).\nlikes(alice,phone).\ndislikes(dave,ball).\nbored(bob).\nangry(frank).\nfriendly(frank).\nbusy(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is big.\nFor all Z, if there exists U such that person Z is friendly and person Z is a sibling of person U and person U is clever, then person Z is funny.\nFor all Y, if there exists B such that person Y is weak and person Y owns object B and object B is new, then person Y is bored.\nFor all Y, if there exists V such that person Y is weak and person Y likes object V and object V is old, then person Y is strong.\nFor all Y, Z, if there exists D such that person Y is calm and person Z is weak and object D is light, then person Z is a parent of person Y.\nFor all X, if there exists B such that person X is happy and person X is an enemy of person B and person B is busy, then person X is weak.\nFor all X, if there exists A such that person X is busy and person X is a parent of person A and person A is happy, then person X is clever.\nFor all Y, if there exists A such that object Y is new and person A dislikes object Y and person A is clever, then object Y is new.\nFor all Y, Z, if there exists W such that person Y is curious and person Z is busy and person Z dislikes object W, then person Z is an enemy of person Y.\nFor all X, if there exists U such that object X is rough and person U owns object X and person U is curious, then object X is clean.\nFor all X, if person X is sad and person X is excited, then person X is brave.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, Y, if person X is bored and person Y is calm, then person X is a parent of person Y.\nFor all X, if person X is hungry and person X is strong, then person X is tired.\nFor all X, if person X is brave and person X is tired, then person X is happy.\nFor all X, if person X is curious and person X is tired, then person X is calm.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is weak, then person X is tired.\nFor all X, Y, if person X is tall and person Y is weak, then person X is an enemy of person Y.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is hard, then object X is clean.\n\nAnd the following facts:\npencil is wet.\ndave is a parent of george.\nfrank dislikes apple.\nalice is a friend of dave.\ngeorge likes pencil.\nalice is a parent of frank.\ngeorge dislikes pencil.\ncar is dirty.\ncar is light.\neve likes book.\nalice likes phone.\ndave dislikes ball.\nbob is bored.\nfrank is angry.\nfrank is friendly.\ngeorge is busy.\n\nQUESTION:\nIs pencil is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1164,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(phone).",
    "c": "big(X) :- wet(X).\nfunny(Z) :- friendly(Z), sibling(Z,U), clever(U).\nbored(Y) :- weak(Y), owns(Y,B), new(B).\nstrong(Y) :- weak(Y), likes(Y,V), old(V).\nparent(Z,Y) :- calm(Y), weak(Z), light(D).\nweak(X) :- happy(X), enemy(X,B), busy(B).\nclever(X) :- busy(X), parent(X,A), happy(A).\nnew(Y) :- new(Y), dislikes(A,Y), clever(A).\nenemy(Z,Y) :- curious(Y), busy(Z), dislikes(Z,W).\nclean(X) :- rough(X), owns(U,X), curious(U).\nbrave(X) :- sad(X), excited(X).\nhungry(X) :- tired(X).\nparent(X,Y) :- bored(X), calm(Y).\ntired(X) :- hungry(X), strong(X).\nhappy(X) :- brave(X), tired(X).\ncalm(X) :- curious(X), tired(X).\nhappy(X) :- tall(X).\nrough(X) :- clean(X).\nangry(X) :- excited(X).\ntired(X) :- weak(X).\nenemy(X,Y) :- tall(X), weak(Y).\ndirty(X) :- old(X).\nclever(X) :- friendly(X).\ntall(X) :- weak(X).\nclean(X) :- hard(X).\nwet(pencil).\nparent(dave,george).\ndislikes(frank,apple).\nfriend(alice,dave).\nlikes(george,pencil).\nparent(alice,frank).\ndislikes(george,pencil).\ndirty(car).\nlight(car).\nlikes(eve,book).\nlikes(alice,phone).\ndislikes(dave,ball).\nbored(bob).\nangry(frank).\nfriendly(frank).\nbusy(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is big.\nFor all Z, if there exists U such that person Z is friendly and person Z is a sibling of person U and person U is clever, then person Z is funny.\nFor all Y, if there exists B such that person Y is weak and person Y owns object B and object B is new, then person Y is bored.\nFor all Y, if there exists V such that person Y is weak and person Y likes object V and object V is old, then person Y is strong.\nFor all Y, Z, if there exists D such that person Y is calm and person Z is weak and object D is light, then person Z is a parent of person Y.\nFor all X, if there exists B such that person X is happy and person X is an enemy of person B and person B is busy, then person X is weak.\nFor all X, if there exists A such that person X is busy and person X is a parent of person A and person A is happy, then person X is clever.\nFor all Y, if there exists A such that object Y is new and person A dislikes object Y and person A is clever, then object Y is new.\nFor all Y, Z, if there exists W such that person Y is curious and person Z is busy and person Z dislikes object W, then person Z is an enemy of person Y.\nFor all X, if there exists U such that object X is rough and person U owns object X and person U is curious, then object X is clean.\nFor all X, if person X is sad and person X is excited, then person X is brave.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, Y, if person X is bored and person Y is calm, then person X is a parent of person Y.\nFor all X, if person X is hungry and person X is strong, then person X is tired.\nFor all X, if person X is brave and person X is tired, then person X is happy.\nFor all X, if person X is curious and person X is tired, then person X is calm.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is weak, then person X is tired.\nFor all X, Y, if person X is tall and person Y is weak, then person X is an enemy of person Y.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is hard, then object X is clean.\n\nAnd the following facts:\npencil is wet.\ndave is a parent of george.\nfrank dislikes apple.\nalice is a friend of dave.\ngeorge likes pencil.\nalice is a parent of frank.\ngeorge dislikes pencil.\ncar is dirty.\ncar is light.\neve likes book.\nalice likes phone.\ndave dislikes ball.\nbob is bored.\nfrank is angry.\nfrank is friendly.\ngeorge is busy.\n\nQUESTION:\nIs phone is dirty true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1165,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(pencil).",
    "c": "big(X) :- wet(X).\nfunny(Z) :- friendly(Z), sibling(Z,U), clever(U).\nbored(Y) :- weak(Y), owns(Y,B), new(B).\nstrong(Y) :- weak(Y), likes(Y,V), old(V).\nparent(Z,Y) :- calm(Y), weak(Z), light(D).\nweak(X) :- happy(X), enemy(X,B), busy(B).\nclever(X) :- busy(X), parent(X,A), happy(A).\nnew(Y) :- new(Y), dislikes(A,Y), clever(A).\nenemy(Z,Y) :- curious(Y), busy(Z), dislikes(Z,W).\nclean(X) :- rough(X), owns(U,X), curious(U).\nbrave(X) :- sad(X), excited(X).\nhungry(X) :- tired(X).\nparent(X,Y) :- bored(X), calm(Y).\ntired(X) :- hungry(X), strong(X).\nhappy(X) :- brave(X), tired(X).\ncalm(X) :- curious(X), tired(X).\nhappy(X) :- tall(X).\nrough(X) :- clean(X).\nangry(X) :- excited(X).\ntired(X) :- weak(X).\nenemy(X,Y) :- tall(X), weak(Y).\ndirty(X) :- old(X).\nclever(X) :- friendly(X).\ntall(X) :- weak(X).\nclean(X) :- hard(X).\nbig(pencil).\nparent(dave,george).\ndislikes(frank,apple).\nfriend(alice,dave).\nlikes(george,pencil).\nparent(alice,frank).\ndislikes(george,pencil).\ndirty(car).\nlight(car).\nlikes(eve,book).\nlikes(alice,phone).\ndislikes(dave,ball).\nbored(bob).\nangry(frank).\nfriendly(frank).\nbusy(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is big.\nFor all Z, if there exists U such that person Z is friendly and person Z is a sibling of person U and person U is clever, then person Z is funny.\nFor all Y, if there exists B such that person Y is weak and person Y owns object B and object B is new, then person Y is bored.\nFor all Y, if there exists V such that person Y is weak and person Y likes object V and object V is old, then person Y is strong.\nFor all Y, Z, if there exists D such that person Y is calm and person Z is weak and object D is light, then person Z is a parent of person Y.\nFor all X, if there exists B such that person X is happy and person X is an enemy of person B and person B is busy, then person X is weak.\nFor all X, if there exists A such that person X is busy and person X is a parent of person A and person A is happy, then person X is clever.\nFor all Y, if there exists A such that object Y is new and person A dislikes object Y and person A is clever, then object Y is new.\nFor all Y, Z, if there exists W such that person Y is curious and person Z is busy and person Z dislikes object W, then person Z is an enemy of person Y.\nFor all X, if there exists U such that object X is rough and person U owns object X and person U is curious, then object X is clean.\nFor all X, if person X is sad and person X is excited, then person X is brave.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, Y, if person X is bored and person Y is calm, then person X is a parent of person Y.\nFor all X, if person X is hungry and person X is strong, then person X is tired.\nFor all X, if person X is brave and person X is tired, then person X is happy.\nFor all X, if person X is curious and person X is tired, then person X is calm.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is weak, then person X is tired.\nFor all X, Y, if person X is tall and person Y is weak, then person X is an enemy of person Y.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is hard, then object X is clean.\n\nAnd the following facts:\npencil is big.\ndave is a parent of george.\nfrank dislikes apple.\nalice is a friend of dave.\ngeorge likes pencil.\nalice is a parent of frank.\ngeorge dislikes pencil.\ncar is dirty.\ncar is light.\neve likes book.\nalice likes phone.\ndave dislikes ball.\nbob is bored.\nfrank is angry.\nfrank is friendly.\ngeorge is busy.\n\nQUESTION:\nCould pencil is wet explain pencil is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1166,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(george).",
    "c": "big(X) :- wet(X).\nfunny(Z) :- friendly(Z), sibling(Z,U), clever(U).\nbored(Y) :- weak(Y), owns(Y,B), new(B).\nstrong(Y) :- weak(Y), likes(Y,V), old(V).\nparent(Z,Y) :- calm(Y), weak(Z), light(D).\nweak(X) :- happy(X), enemy(X,B), busy(B).\nclever(X) :- busy(X), parent(X,A), happy(A).\nnew(Y) :- new(Y), dislikes(A,Y), clever(A).\nenemy(Z,Y) :- curious(Y), busy(Z), dislikes(Z,W).\nclean(X) :- rough(X), owns(U,X), curious(U).\nbrave(X) :- sad(X), excited(X).\nhungry(X) :- tired(X).\nparent(X,Y) :- bored(X), calm(Y).\ntired(X) :- hungry(X), strong(X).\nhappy(X) :- brave(X), tired(X).\ncalm(X) :- curious(X), tired(X).\nhappy(X) :- tall(X).\nrough(X) :- clean(X).\nangry(X) :- excited(X).\ntired(X) :- weak(X).\nenemy(X,Y) :- tall(X), weak(Y).\ndirty(X) :- old(X).\nclever(X) :- friendly(X).\ntall(X) :- weak(X).\nclean(X) :- hard(X).\nbig(pencil).\nparent(dave,george).\ndislikes(frank,apple).\nfriend(alice,dave).\nlikes(george,pencil).\nparent(alice,frank).\ndislikes(george,pencil).\ndirty(car).\nlight(car).\nlikes(eve,book).\nlikes(alice,phone).\ndislikes(dave,ball).\nbored(bob).\nangry(frank).\nfriendly(frank).\nbusy(george).",
    "natural language": "You are given the following information:\nFor all X, if object X is wet, then object X is big.\nFor all Z, if there exists U such that person Z is friendly and person Z is a sibling of person U and person U is clever, then person Z is funny.\nFor all Y, if there exists B such that person Y is weak and person Y owns object B and object B is new, then person Y is bored.\nFor all Y, if there exists V such that person Y is weak and person Y likes object V and object V is old, then person Y is strong.\nFor all Y, Z, if there exists D such that person Y is calm and person Z is weak and object D is light, then person Z is a parent of person Y.\nFor all X, if there exists B such that person X is happy and person X is an enemy of person B and person B is busy, then person X is weak.\nFor all X, if there exists A such that person X is busy and person X is a parent of person A and person A is happy, then person X is clever.\nFor all Y, if there exists A such that object Y is new and person A dislikes object Y and person A is clever, then object Y is new.\nFor all Y, Z, if there exists W such that person Y is curious and person Z is busy and person Z dislikes object W, then person Z is an enemy of person Y.\nFor all X, if there exists U such that object X is rough and person U owns object X and person U is curious, then object X is clean.\nFor all X, if person X is sad and person X is excited, then person X is brave.\nFor all X, if person X is tired, then person X is hungry.\nFor all X, Y, if person X is bored and person Y is calm, then person X is a parent of person Y.\nFor all X, if person X is hungry and person X is strong, then person X is tired.\nFor all X, if person X is brave and person X is tired, then person X is happy.\nFor all X, if person X is curious and person X is tired, then person X is calm.\nFor all X, if person X is tall, then person X is happy.\nFor all X, if object X is clean, then object X is rough.\nFor all X, if person X is excited, then person X is angry.\nFor all X, if person X is weak, then person X is tired.\nFor all X, Y, if person X is tall and person Y is weak, then person X is an enemy of person Y.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if person X is friendly, then person X is clever.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if object X is hard, then object X is clean.\n\nAnd the following facts:\npencil is big.\ndave is a parent of george.\nfrank dislikes apple.\nalice is a friend of dave.\ngeorge likes pencil.\nalice is a parent of frank.\ngeorge dislikes pencil.\ncar is dirty.\ncar is light.\neve likes book.\nalice likes phone.\ndave dislikes ball.\nbob is bored.\nfrank is angry.\nfrank is friendly.\ngeorge is busy.\n\nQUESTION:\nCould george is curious explain pencil is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1167,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "brave(george).",
    "c": "sad(X) :- happy(X).\nhappy(X) :- sad(X).\nclever(X) :- happy(X).\nhungry(X) :- clever(X).\nbrave(X) :- hungry(X).\nfunny(X) :- busy(X), parent(X,B), weak(B).\nfriendly(X) :- strong(X).\nstrong(X) :- weak(X), owns(X,A), dirty(A).\nsoft(X) :- old(X), dislikes(B,X), calm(B).\nred(Z) :- wet(Z).\nclean(Z) :- heavy(Z).\nbusy(Y) :- bored(Y), sibling(Y,V), weak(V).\nlight(Z) :- old(Z).\nangry(Z) :- tall(Z), dislikes(Z,U), light(U).\nsoft(Z) :- big(Z), likes(W,Z), excited(W).\ntall(X) :- weak(X).\nstrong(X) :- excited(X), likes(X,A), red(A).\ncurious(Z) :- funny(Z).\nfriendly(X) :- tired(X).\nfriend(Z,Y) :- excited(Y), strong(Z), rough(B).\nfriendly(X) :- angry(X), strong(X).\nwet(X) :- dirty(X).\nfriend(X,Y) :- strong(X), tall(Y).\nhard(X) :- small(X), heavy(X).\nlight(X) :- dirty(X).\nhappy(george).\ncalm(george).\nenemy(carol,dave).\nlikes(carol,phone).\nrough(phone).\nenemy(bob,dave).\ndislikes(george,apple).\nsibling(eve,dave).\nfunny(george).\nlikes(george,pencil).\nsmooth(pencil).\nsibling(alice,bob).\ntall(alice).\nparent(eve,alice).\nwet(apple).\nsunny.",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if there exists B such that person X is busy and person X is a parent of person B and person B is weak, then person X is funny.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if there exists A such that person X is weak and person X owns object A and object A is dirty, then person X is strong.\nFor all X, if there exists B such that object X is old and person B dislikes object X and person B is calm, then object X is soft.\nFor all Z, if object Z is wet, then object Z is red.\nFor all Z, if object Z is heavy, then object Z is clean.\nFor all Y, if there exists V such that person Y is bored and person Y is a sibling of person V and person V is weak, then person Y is busy.\nFor all Z, if object Z is old, then object Z is light.\nFor all Z, if there exists U such that person Z is tall and person Z dislikes object U and object U is light, then person Z is angry.\nFor all Z, if there exists W such that object Z is big and person W likes object Z and person W is excited, then object Z is soft.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if there exists A such that person X is excited and person X likes object A and object A is red, then person X is strong.\nFor all Z, if person Z is funny, then person Z is curious.\nFor all X, if person X is tired, then person X is friendly.\nFor all Y, Z, if there exists B such that person Y is excited and person Z is strong and object B is rough, then person Z is a friend of person Y.\nFor all X, if person X is angry and person X is strong, then person X is friendly.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, Y, if person X is strong and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is small and object X is heavy, then object X is hard.\nFor all X, if object X is dirty, then object X is light.\n\nAnd the following facts:\ngeorge is happy.\ngeorge is calm.\ncarol is an enemy of dave.\ncarol likes phone.\nphone is rough.\nbob is an enemy of dave.\ngeorge dislikes apple.\neve is a sibling of dave.\ngeorge is funny.\ngeorge likes pencil.\npencil is smooth.\nalice is a sibling of bob.\nalice is tall.\neve is a parent of alice.\napple is wet.\nit is sunny.\n\nQUESTION:\nIs george is brave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1168,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "clever(bob).",
    "c": "sad(X) :- happy(X).\nhappy(X) :- sad(X).\nclever(X) :- happy(X).\nhungry(X) :- clever(X).\nbrave(X) :- hungry(X).\nfunny(X) :- busy(X), parent(X,B), weak(B).\nfriendly(X) :- strong(X).\nstrong(X) :- weak(X), owns(X,A), dirty(A).\nsoft(X) :- old(X), dislikes(B,X), calm(B).\nred(Z) :- wet(Z).\nclean(Z) :- heavy(Z).\nbusy(Y) :- bored(Y), sibling(Y,V), weak(V).\nlight(Z) :- old(Z).\nangry(Z) :- tall(Z), dislikes(Z,U), light(U).\nsoft(Z) :- big(Z), likes(W,Z), excited(W).\ntall(X) :- weak(X).\nstrong(X) :- excited(X), likes(X,A), red(A).\ncurious(Z) :- funny(Z).\nfriendly(X) :- tired(X).\nfriend(Z,Y) :- excited(Y), strong(Z), rough(B).\nfriendly(X) :- angry(X), strong(X).\nwet(X) :- dirty(X).\nfriend(X,Y) :- strong(X), tall(Y).\nhard(X) :- small(X), heavy(X).\nlight(X) :- dirty(X).\nhappy(george).\ncalm(george).\nenemy(carol,dave).\nlikes(carol,phone).\nrough(phone).\nenemy(bob,dave).\ndislikes(george,apple).\nsibling(eve,dave).\nfunny(george).\nlikes(george,pencil).\nsmooth(pencil).\nsibling(alice,bob).\ntall(alice).\nparent(eve,alice).\nwet(apple).\nsunny.",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if there exists B such that person X is busy and person X is a parent of person B and person B is weak, then person X is funny.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if there exists A such that person X is weak and person X owns object A and object A is dirty, then person X is strong.\nFor all X, if there exists B such that object X is old and person B dislikes object X and person B is calm, then object X is soft.\nFor all Z, if object Z is wet, then object Z is red.\nFor all Z, if object Z is heavy, then object Z is clean.\nFor all Y, if there exists V such that person Y is bored and person Y is a sibling of person V and person V is weak, then person Y is busy.\nFor all Z, if object Z is old, then object Z is light.\nFor all Z, if there exists U such that person Z is tall and person Z dislikes object U and object U is light, then person Z is angry.\nFor all Z, if there exists W such that object Z is big and person W likes object Z and person W is excited, then object Z is soft.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if there exists A such that person X is excited and person X likes object A and object A is red, then person X is strong.\nFor all Z, if person Z is funny, then person Z is curious.\nFor all X, if person X is tired, then person X is friendly.\nFor all Y, Z, if there exists B such that person Y is excited and person Z is strong and object B is rough, then person Z is a friend of person Y.\nFor all X, if person X is angry and person X is strong, then person X is friendly.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, Y, if person X is strong and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is small and object X is heavy, then object X is hard.\nFor all X, if object X is dirty, then object X is light.\n\nAnd the following facts:\ngeorge is happy.\ngeorge is calm.\ncarol is an enemy of dave.\ncarol likes phone.\nphone is rough.\nbob is an enemy of dave.\ngeorge dislikes apple.\neve is a sibling of dave.\ngeorge is funny.\ngeorge likes pencil.\npencil is smooth.\nalice is a sibling of bob.\nalice is tall.\neve is a parent of alice.\napple is wet.\nit is sunny.\n\nQUESTION:\nIs bob is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1169,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(george).",
    "c": "sad(X) :- happy(X).\nhappy(X) :- sad(X).\nclever(X) :- happy(X).\nhungry(X) :- clever(X).\nbrave(X) :- hungry(X).\nfunny(X) :- busy(X), parent(X,B), weak(B).\nfriendly(X) :- strong(X).\nstrong(X) :- weak(X), owns(X,A), dirty(A).\nsoft(X) :- old(X), dislikes(B,X), calm(B).\nred(Z) :- wet(Z).\nclean(Z) :- heavy(Z).\nbusy(Y) :- bored(Y), sibling(Y,V), weak(V).\nlight(Z) :- old(Z).\nangry(Z) :- tall(Z), dislikes(Z,U), light(U).\nsoft(Z) :- big(Z), likes(W,Z), excited(W).\ntall(X) :- weak(X).\nstrong(X) :- excited(X), likes(X,A), red(A).\ncurious(Z) :- funny(Z).\nfriendly(X) :- tired(X).\nfriend(Z,Y) :- excited(Y), strong(Z), rough(B).\nfriendly(X) :- angry(X), strong(X).\nwet(X) :- dirty(X).\nfriend(X,Y) :- strong(X), tall(Y).\nhard(X) :- small(X), heavy(X).\nlight(X) :- dirty(X).\nbrave(george).\ncalm(george).\nenemy(carol,dave).\nlikes(carol,phone).\nrough(phone).\nenemy(bob,dave).\ndislikes(george,apple).\nsibling(eve,dave).\nfunny(george).\nlikes(george,pencil).\nsmooth(pencil).\nsibling(alice,bob).\ntall(alice).\nparent(eve,alice).\nwet(apple).\nsunny.",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if there exists B such that person X is busy and person X is a parent of person B and person B is weak, then person X is funny.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if there exists A such that person X is weak and person X owns object A and object A is dirty, then person X is strong.\nFor all X, if there exists B such that object X is old and person B dislikes object X and person B is calm, then object X is soft.\nFor all Z, if object Z is wet, then object Z is red.\nFor all Z, if object Z is heavy, then object Z is clean.\nFor all Y, if there exists V such that person Y is bored and person Y is a sibling of person V and person V is weak, then person Y is busy.\nFor all Z, if object Z is old, then object Z is light.\nFor all Z, if there exists U such that person Z is tall and person Z dislikes object U and object U is light, then person Z is angry.\nFor all Z, if there exists W such that object Z is big and person W likes object Z and person W is excited, then object Z is soft.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if there exists A such that person X is excited and person X likes object A and object A is red, then person X is strong.\nFor all Z, if person Z is funny, then person Z is curious.\nFor all X, if person X is tired, then person X is friendly.\nFor all Y, Z, if there exists B such that person Y is excited and person Z is strong and object B is rough, then person Z is a friend of person Y.\nFor all X, if person X is angry and person X is strong, then person X is friendly.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, Y, if person X is strong and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is small and object X is heavy, then object X is hard.\nFor all X, if object X is dirty, then object X is light.\n\nAnd the following facts:\ngeorge is brave.\ngeorge is calm.\ncarol is an enemy of dave.\ncarol likes phone.\nphone is rough.\nbob is an enemy of dave.\ngeorge dislikes apple.\neve is a sibling of dave.\ngeorge is funny.\ngeorge likes pencil.\npencil is smooth.\nalice is a sibling of bob.\nalice is tall.\neve is a parent of alice.\napple is wet.\nit is sunny.\n\nQUESTION:\nCould george is happy explain george is brave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1170,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(book).",
    "c": "sad(X) :- happy(X).\nhappy(X) :- sad(X).\nclever(X) :- happy(X).\nhungry(X) :- clever(X).\nbrave(X) :- hungry(X).\nfunny(X) :- busy(X), parent(X,B), weak(B).\nfriendly(X) :- strong(X).\nstrong(X) :- weak(X), owns(X,A), dirty(A).\nsoft(X) :- old(X), dislikes(B,X), calm(B).\nred(Z) :- wet(Z).\nclean(Z) :- heavy(Z).\nbusy(Y) :- bored(Y), sibling(Y,V), weak(V).\nlight(Z) :- old(Z).\nangry(Z) :- tall(Z), dislikes(Z,U), light(U).\nsoft(Z) :- big(Z), likes(W,Z), excited(W).\ntall(X) :- weak(X).\nstrong(X) :- excited(X), likes(X,A), red(A).\ncurious(Z) :- funny(Z).\nfriendly(X) :- tired(X).\nfriend(Z,Y) :- excited(Y), strong(Z), rough(B).\nfriendly(X) :- angry(X), strong(X).\nwet(X) :- dirty(X).\nfriend(X,Y) :- strong(X), tall(Y).\nhard(X) :- small(X), heavy(X).\nlight(X) :- dirty(X).\nbrave(george).\ncalm(george).\nenemy(carol,dave).\nlikes(carol,phone).\nrough(phone).\nenemy(bob,dave).\ndislikes(george,apple).\nsibling(eve,dave).\nfunny(george).\nlikes(george,pencil).\nsmooth(pencil).\nsibling(alice,bob).\ntall(alice).\nparent(eve,alice).\nwet(apple).\nsunny.",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if there exists B such that person X is busy and person X is a parent of person B and person B is weak, then person X is funny.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, if there exists A such that person X is weak and person X owns object A and object A is dirty, then person X is strong.\nFor all X, if there exists B such that object X is old and person B dislikes object X and person B is calm, then object X is soft.\nFor all Z, if object Z is wet, then object Z is red.\nFor all Z, if object Z is heavy, then object Z is clean.\nFor all Y, if there exists V such that person Y is bored and person Y is a sibling of person V and person V is weak, then person Y is busy.\nFor all Z, if object Z is old, then object Z is light.\nFor all Z, if there exists U such that person Z is tall and person Z dislikes object U and object U is light, then person Z is angry.\nFor all Z, if there exists W such that object Z is big and person W likes object Z and person W is excited, then object Z is soft.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if there exists A such that person X is excited and person X likes object A and object A is red, then person X is strong.\nFor all Z, if person Z is funny, then person Z is curious.\nFor all X, if person X is tired, then person X is friendly.\nFor all Y, Z, if there exists B such that person Y is excited and person Z is strong and object B is rough, then person Z is a friend of person Y.\nFor all X, if person X is angry and person X is strong, then person X is friendly.\nFor all X, if object X is dirty, then object X is wet.\nFor all X, Y, if person X is strong and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is small and object X is heavy, then object X is hard.\nFor all X, if object X is dirty, then object X is light.\n\nAnd the following facts:\ngeorge is brave.\ngeorge is calm.\ncarol is an enemy of dave.\ncarol likes phone.\nphone is rough.\nbob is an enemy of dave.\ngeorge dislikes apple.\neve is a sibling of dave.\ngeorge is funny.\ngeorge likes pencil.\npencil is smooth.\nalice is a sibling of bob.\nalice is tall.\neve is a parent of alice.\napple is wet.\nit is sunny.\n\nQUESTION:\nCould book is old explain george is brave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1171,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "small(X) :- big(X).\nsmooth(X) :- small(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nsmall(X) :- soft(X).\nlight(Y) :- new(Y), funny(E).\nbrave(Z) :- weak(Z), heavy(B).\nclean(Y) :- hard(Y), likes(U,Y), weak(U).\ncurious(Y) :- strong(Y), friend(Y,A), busy(A).\nfriendly(X) :- weak(X), dislikes(X,W), old(W).\ncurious(X) :- tall(X), owns(X,W), light(W).\nowns(Y,X) :- funny(Y), dirty(X), owns(Y,B).\nlikes(X,Y) :- red(Y), curious(X), dislikes(B,Y).\ntall(X) :- happy(X).\nheavy(X) :- rough(X), light(X).\nclever(X) :- calm(X), calm(X).\nclever(X) :- strong(X).\nnew(X) :- light(X).\nhungry(X) :- calm(X), friendly(X).\nclever(X) :- tired(X), friendly(X).\nclean(X) :- light(X), hard(X).\nheavy(X) :- red(X).\nclean(X) :- red(X), new(X).\nred(X) :- light(X).\nfriendly(X) :- hungry(X).\nbig(phone).\nlikes(frank,book).\nred(pencil).\nbored(carol).\nlikes(eve,book).\nclean(apple).\nsibling(bob,george).\nsad(alice).\nparent(dave,bob).\nlikes(dave,apple).\nparent(alice,carol).\ndislikes(eve,phone).\nowns(alice,phone).\ndislikes(frank,car).\nangry(dave).\nparent(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all Y, if there exists E such that object Y is new and person E is funny, then object Y is light.\nFor all Z, if there exists B such that person Z is weak and object B is heavy, then person Z is brave.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is weak, then object Y is clean.\nFor all Y, if there exists A such that person Y is strong and person Y is a friend of person A and person A is busy, then person Y is curious.\nFor all X, if there exists W such that person X is weak and person X dislikes object W and object W is old, then person X is friendly.\nFor all X, if there exists W such that person X is tall and person X owns object W and object W is light, then person X is curious.\nFor all X, Y, if there exists B such that person Y is funny and object X is dirty and person Y owns object B, then person Y owns object X.\nFor all X, Y, if there exists B such that object Y is red and person X is curious and person B dislikes object Y, then person X likes object Y.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if object X is rough and object X is light, then object X is heavy.\nFor all X, if person X is calm and person X is calm, then person X is clever.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if object X is light, then object X is new.\nFor all X, if person X is calm and person X is friendly, then person X is hungry.\nFor all X, if person X is tired and person X is friendly, then person X is clever.\nFor all X, if object X is light and object X is hard, then object X is clean.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is red and object X is new, then object X is clean.\nFor all X, if object X is light, then object X is red.\nFor all X, if person X is hungry, then person X is friendly.\n\nAnd the following facts:\nphone is big.\nfrank likes book.\npencil is red.\ncarol is bored.\neve likes book.\napple is clean.\nbob is a sibling of george.\nalice is sad.\ndave is a parent of bob.\ndave likes apple.\nalice is a parent of carol.\neve dislikes phone.\nalice owns phone.\nfrank dislikes car.\ndave is angry.\ngeorge is a parent of frank.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1172,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(dave).",
    "c": "small(X) :- big(X).\nsmooth(X) :- small(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nsmall(X) :- soft(X).\nlight(Y) :- new(Y), funny(E).\nbrave(Z) :- weak(Z), heavy(B).\nclean(Y) :- hard(Y), likes(U,Y), weak(U).\ncurious(Y) :- strong(Y), friend(Y,A), busy(A).\nfriendly(X) :- weak(X), dislikes(X,W), old(W).\ncurious(X) :- tall(X), owns(X,W), light(W).\nowns(Y,X) :- funny(Y), dirty(X), owns(Y,B).\nlikes(X,Y) :- red(Y), curious(X), dislikes(B,Y).\ntall(X) :- happy(X).\nheavy(X) :- rough(X), light(X).\nclever(X) :- calm(X), calm(X).\nclever(X) :- strong(X).\nnew(X) :- light(X).\nhungry(X) :- calm(X), friendly(X).\nclever(X) :- tired(X), friendly(X).\nclean(X) :- light(X), hard(X).\nheavy(X) :- red(X).\nclean(X) :- red(X), new(X).\nred(X) :- light(X).\nfriendly(X) :- hungry(X).\nbig(phone).\nlikes(frank,book).\nred(pencil).\nbored(carol).\nlikes(eve,book).\nclean(apple).\nsibling(bob,george).\nsad(alice).\nparent(dave,bob).\nlikes(dave,apple).\nparent(alice,carol).\ndislikes(eve,phone).\nowns(alice,phone).\ndislikes(frank,car).\nangry(dave).\nparent(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all Y, if there exists E such that object Y is new and person E is funny, then object Y is light.\nFor all Z, if there exists B such that person Z is weak and object B is heavy, then person Z is brave.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is weak, then object Y is clean.\nFor all Y, if there exists A such that person Y is strong and person Y is a friend of person A and person A is busy, then person Y is curious.\nFor all X, if there exists W such that person X is weak and person X dislikes object W and object W is old, then person X is friendly.\nFor all X, if there exists W such that person X is tall and person X owns object W and object W is light, then person X is curious.\nFor all X, Y, if there exists B such that person Y is funny and object X is dirty and person Y owns object B, then person Y owns object X.\nFor all X, Y, if there exists B such that object Y is red and person X is curious and person B dislikes object Y, then person X likes object Y.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if object X is rough and object X is light, then object X is heavy.\nFor all X, if person X is calm and person X is calm, then person X is clever.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if object X is light, then object X is new.\nFor all X, if person X is calm and person X is friendly, then person X is hungry.\nFor all X, if person X is tired and person X is friendly, then person X is clever.\nFor all X, if object X is light and object X is hard, then object X is clean.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is red and object X is new, then object X is clean.\nFor all X, if object X is light, then object X is red.\nFor all X, if person X is hungry, then person X is friendly.\n\nAnd the following facts:\nphone is big.\nfrank likes book.\npencil is red.\ncarol is bored.\neve likes book.\napple is clean.\nbob is a sibling of george.\nalice is sad.\ndave is a parent of bob.\ndave likes apple.\nalice is a parent of carol.\neve dislikes phone.\nalice owns phone.\nfrank dislikes car.\ndave is angry.\ngeorge is a parent of frank.\n\nQUESTION:\nIs dave is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1173,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(phone).",
    "c": "small(X) :- big(X).\nsmooth(X) :- small(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nsmall(X) :- soft(X).\nlight(Y) :- new(Y), funny(E).\nbrave(Z) :- weak(Z), heavy(B).\nclean(Y) :- hard(Y), likes(U,Y), weak(U).\ncurious(Y) :- strong(Y), friend(Y,A), busy(A).\nfriendly(X) :- weak(X), dislikes(X,W), old(W).\ncurious(X) :- tall(X), owns(X,W), light(W).\nowns(Y,X) :- funny(Y), dirty(X), owns(Y,B).\nlikes(X,Y) :- red(Y), curious(X), dislikes(B,Y).\ntall(X) :- happy(X).\nheavy(X) :- rough(X), light(X).\nclever(X) :- calm(X), calm(X).\nclever(X) :- strong(X).\nnew(X) :- light(X).\nhungry(X) :- calm(X), friendly(X).\nclever(X) :- tired(X), friendly(X).\nclean(X) :- light(X), hard(X).\nheavy(X) :- red(X).\nclean(X) :- red(X), new(X).\nred(X) :- light(X).\nfriendly(X) :- hungry(X).\nsmall(phone).\nlikes(frank,book).\nred(pencil).\nbored(carol).\nlikes(eve,book).\nclean(apple).\nsibling(bob,george).\nsad(alice).\nparent(dave,bob).\nlikes(dave,apple).\nparent(alice,carol).\ndislikes(eve,phone).\nowns(alice,phone).\ndislikes(frank,car).\nangry(dave).\nparent(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all Y, if there exists E such that object Y is new and person E is funny, then object Y is light.\nFor all Z, if there exists B such that person Z is weak and object B is heavy, then person Z is brave.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is weak, then object Y is clean.\nFor all Y, if there exists A such that person Y is strong and person Y is a friend of person A and person A is busy, then person Y is curious.\nFor all X, if there exists W such that person X is weak and person X dislikes object W and object W is old, then person X is friendly.\nFor all X, if there exists W such that person X is tall and person X owns object W and object W is light, then person X is curious.\nFor all X, Y, if there exists B such that person Y is funny and object X is dirty and person Y owns object B, then person Y owns object X.\nFor all X, Y, if there exists B such that object Y is red and person X is curious and person B dislikes object Y, then person X likes object Y.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if object X is rough and object X is light, then object X is heavy.\nFor all X, if person X is calm and person X is calm, then person X is clever.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if object X is light, then object X is new.\nFor all X, if person X is calm and person X is friendly, then person X is hungry.\nFor all X, if person X is tired and person X is friendly, then person X is clever.\nFor all X, if object X is light and object X is hard, then object X is clean.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is red and object X is new, then object X is clean.\nFor all X, if object X is light, then object X is red.\nFor all X, if person X is hungry, then person X is friendly.\n\nAnd the following facts:\nphone is small.\nfrank likes book.\npencil is red.\ncarol is bored.\neve likes book.\napple is clean.\nbob is a sibling of george.\nalice is sad.\ndave is a parent of bob.\ndave likes apple.\nalice is a parent of carol.\neve dislikes phone.\nalice owns phone.\nfrank dislikes car.\ndave is angry.\ngeorge is a parent of frank.\n\nQUESTION:\nCould phone is big explain phone is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1174,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(eve).",
    "c": "small(X) :- big(X).\nsmooth(X) :- small(X).\nsmall(X) :- smooth(X).\nsoft(X) :- small(X).\nsmall(X) :- soft(X).\nlight(Y) :- new(Y), funny(E).\nbrave(Z) :- weak(Z), heavy(B).\nclean(Y) :- hard(Y), likes(U,Y), weak(U).\ncurious(Y) :- strong(Y), friend(Y,A), busy(A).\nfriendly(X) :- weak(X), dislikes(X,W), old(W).\ncurious(X) :- tall(X), owns(X,W), light(W).\nowns(Y,X) :- funny(Y), dirty(X), owns(Y,B).\nlikes(X,Y) :- red(Y), curious(X), dislikes(B,Y).\ntall(X) :- happy(X).\nheavy(X) :- rough(X), light(X).\nclever(X) :- calm(X), calm(X).\nclever(X) :- strong(X).\nnew(X) :- light(X).\nhungry(X) :- calm(X), friendly(X).\nclever(X) :- tired(X), friendly(X).\nclean(X) :- light(X), hard(X).\nheavy(X) :- red(X).\nclean(X) :- red(X), new(X).\nred(X) :- light(X).\nfriendly(X) :- hungry(X).\nsmall(phone).\nlikes(frank,book).\nred(pencil).\nbored(carol).\nlikes(eve,book).\nclean(apple).\nsibling(bob,george).\nsad(alice).\nparent(dave,bob).\nlikes(dave,apple).\nparent(alice,carol).\ndislikes(eve,phone).\nowns(alice,phone).\ndislikes(frank,car).\nangry(dave).\nparent(george,frank).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is small.\nFor all X, if object X is small, then object X is smooth.\nFor all X, if object X is smooth, then object X is small.\nFor all X, if object X is small, then object X is soft.\nFor all X, if object X is soft, then object X is small.\nFor all Y, if there exists E such that object Y is new and person E is funny, then object Y is light.\nFor all Z, if there exists B such that person Z is weak and object B is heavy, then person Z is brave.\nFor all Y, if there exists U such that object Y is hard and person U likes object Y and person U is weak, then object Y is clean.\nFor all Y, if there exists A such that person Y is strong and person Y is a friend of person A and person A is busy, then person Y is curious.\nFor all X, if there exists W such that person X is weak and person X dislikes object W and object W is old, then person X is friendly.\nFor all X, if there exists W such that person X is tall and person X owns object W and object W is light, then person X is curious.\nFor all X, Y, if there exists B such that person Y is funny and object X is dirty and person Y owns object B, then person Y owns object X.\nFor all X, Y, if there exists B such that object Y is red and person X is curious and person B dislikes object Y, then person X likes object Y.\nFor all X, if person X is happy, then person X is tall.\nFor all X, if object X is rough and object X is light, then object X is heavy.\nFor all X, if person X is calm and person X is calm, then person X is clever.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if object X is light, then object X is new.\nFor all X, if person X is calm and person X is friendly, then person X is hungry.\nFor all X, if person X is tired and person X is friendly, then person X is clever.\nFor all X, if object X is light and object X is hard, then object X is clean.\nFor all X, if object X is red, then object X is heavy.\nFor all X, if object X is red and object X is new, then object X is clean.\nFor all X, if object X is light, then object X is red.\nFor all X, if person X is hungry, then person X is friendly.\n\nAnd the following facts:\nphone is small.\nfrank likes book.\npencil is red.\ncarol is bored.\neve likes book.\napple is clean.\nbob is a sibling of george.\nalice is sad.\ndave is a parent of bob.\ndave likes apple.\nalice is a parent of carol.\neve dislikes phone.\nalice owns phone.\nfrank dislikes car.\ndave is angry.\ngeorge is a parent of frank.\n\nQUESTION:\nCould eve is calm explain phone is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1175,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(frank).",
    "c": "weak(X) :- angry(X).\nhappy(X) :- weak(X).\ntired(X) :- happy(X).\nsad(X) :- tired(X).\nfriendly(X) :- sad(X).\nbrave(X) :- curious(X).\nrough(Y) :- soft(Y), owns(U,Y), funny(U).\nnew(X) :- new(X).\nclean(Z) :- clean(Z).\nhungry(Z) :- bored(Z).\nhard(Y) :- dirty(Y), tall(D).\nbored(Y) :- calm(Y), parent(Y,U), busy(U).\nsoft(X) :- big(X).\nnew(Z) :- dirty(Z), owns(B,Z), calm(B).\nnew(Z) :- big(Z), owns(A,Z), tall(A).\nbrave(Z) :- bored(Z), curious(D).\nrough(X) :- hard(X).\nclean(Y) :- big(Y), likes(U,Y), bored(U).\ntall(Z) :- curious(Z), sibling(Z,W), clever(W).\nexcited(X) :- busy(X), clever(X).\nparent(X,Y) :- clever(X), curious(Y).\ncalm(X) :- brave(X), hungry(X).\nexcited(X) :- curious(X), busy(X).\nclever(X) :- tall(X), calm(X).\nparent(X,Y) :- hungry(X), clever(Y), friend(X,Y).\nangry(frank).\nlikes(alice,ball).\nfriend(george,eve).\nbig(book).\nred(pencil).\nparent(carol,alice).\nrough(apple).\ndislikes(carol,apple).\ncalm(frank).\nbusy(george).\nsibling(dave,frank).\nparent(dave,carol).\nenemy(dave,eve).\nowns(eve,pencil).\nfriend(dave,eve).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is curious, then person X is brave.\nFor all Y, if there exists U such that object Y is soft and person U owns object Y and person U is funny, then object Y is rough.\nFor all X, if object X is new, then object X is new.\nFor all Z, if object Z is clean, then object Z is clean.\nFor all Z, if person Z is bored, then person Z is hungry.\nFor all Y, if there exists D such that object Y is dirty and person D is tall, then object Y is hard.\nFor all Y, if there exists U such that person Y is calm and person Y is a parent of person U and person U is busy, then person Y is bored.\nFor all X, if object X is big, then object X is soft.\nFor all Z, if there exists B such that object Z is dirty and person B owns object Z and person B is calm, then object Z is new.\nFor all Z, if there exists A such that object Z is big and person A owns object Z and person A is tall, then object Z is new.\nFor all Z, if there exists D such that person Z is bored and person D is curious, then person Z is brave.\nFor all X, if object X is hard, then object X is rough.\nFor all Y, if there exists U such that object Y is big and person U likes object Y and person U is bored, then object Y is clean.\nFor all Z, if there exists W such that person Z is curious and person Z is a sibling of person W and person W is clever, then person Z is tall.\nFor all X, if person X is busy and person X is clever, then person X is excited.\nFor all X, Y, if person X is clever and person Y is curious, then person X is a parent of person Y.\nFor all X, if person X is brave and person X is hungry, then person X is calm.\nFor all X, if person X is curious and person X is busy, then person X is excited.\nFor all X, if person X is tall and person X is calm, then person X is clever.\nFor all X, Y, if person X is hungry and person Y is clever and person X is a friend of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\nfrank is angry.\nalice likes ball.\ngeorge is a friend of eve.\nbook is big.\npencil is red.\ncarol is a parent of alice.\napple is rough.\ncarol dislikes apple.\nfrank is calm.\ngeorge is busy.\ndave is a sibling of frank.\ndave is a parent of carol.\ndave is an enemy of eve.\neve owns pencil.\ndave is a friend of eve.\ncarol is a sibling of george.\n\nQUESTION:\nIs frank is friendly true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1176,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(carol).",
    "c": "weak(X) :- angry(X).\nhappy(X) :- weak(X).\ntired(X) :- happy(X).\nsad(X) :- tired(X).\nfriendly(X) :- sad(X).\nbrave(X) :- curious(X).\nrough(Y) :- soft(Y), owns(U,Y), funny(U).\nnew(X) :- new(X).\nclean(Z) :- clean(Z).\nhungry(Z) :- bored(Z).\nhard(Y) :- dirty(Y), tall(D).\nbored(Y) :- calm(Y), parent(Y,U), busy(U).\nsoft(X) :- big(X).\nnew(Z) :- dirty(Z), owns(B,Z), calm(B).\nnew(Z) :- big(Z), owns(A,Z), tall(A).\nbrave(Z) :- bored(Z), curious(D).\nrough(X) :- hard(X).\nclean(Y) :- big(Y), likes(U,Y), bored(U).\ntall(Z) :- curious(Z), sibling(Z,W), clever(W).\nexcited(X) :- busy(X), clever(X).\nparent(X,Y) :- clever(X), curious(Y).\ncalm(X) :- brave(X), hungry(X).\nexcited(X) :- curious(X), busy(X).\nclever(X) :- tall(X), calm(X).\nparent(X,Y) :- hungry(X), clever(Y), friend(X,Y).\nangry(frank).\nlikes(alice,ball).\nfriend(george,eve).\nbig(book).\nred(pencil).\nparent(carol,alice).\nrough(apple).\ndislikes(carol,apple).\ncalm(frank).\nbusy(george).\nsibling(dave,frank).\nparent(dave,carol).\nenemy(dave,eve).\nowns(eve,pencil).\nfriend(dave,eve).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is curious, then person X is brave.\nFor all Y, if there exists U such that object Y is soft and person U owns object Y and person U is funny, then object Y is rough.\nFor all X, if object X is new, then object X is new.\nFor all Z, if object Z is clean, then object Z is clean.\nFor all Z, if person Z is bored, then person Z is hungry.\nFor all Y, if there exists D such that object Y is dirty and person D is tall, then object Y is hard.\nFor all Y, if there exists U such that person Y is calm and person Y is a parent of person U and person U is busy, then person Y is bored.\nFor all X, if object X is big, then object X is soft.\nFor all Z, if there exists B such that object Z is dirty and person B owns object Z and person B is calm, then object Z is new.\nFor all Z, if there exists A such that object Z is big and person A owns object Z and person A is tall, then object Z is new.\nFor all Z, if there exists D such that person Z is bored and person D is curious, then person Z is brave.\nFor all X, if object X is hard, then object X is rough.\nFor all Y, if there exists U such that object Y is big and person U likes object Y and person U is bored, then object Y is clean.\nFor all Z, if there exists W such that person Z is curious and person Z is a sibling of person W and person W is clever, then person Z is tall.\nFor all X, if person X is busy and person X is clever, then person X is excited.\nFor all X, Y, if person X is clever and person Y is curious, then person X is a parent of person Y.\nFor all X, if person X is brave and person X is hungry, then person X is calm.\nFor all X, if person X is curious and person X is busy, then person X is excited.\nFor all X, if person X is tall and person X is calm, then person X is clever.\nFor all X, Y, if person X is hungry and person Y is clever and person X is a friend of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\nfrank is angry.\nalice likes ball.\ngeorge is a friend of eve.\nbook is big.\npencil is red.\ncarol is a parent of alice.\napple is rough.\ncarol dislikes apple.\nfrank is calm.\ngeorge is busy.\ndave is a sibling of frank.\ndave is a parent of carol.\ndave is an enemy of eve.\neve owns pencil.\ndave is a friend of eve.\ncarol is a sibling of george.\n\nQUESTION:\nIs carol is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1177,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(frank).",
    "c": "weak(X) :- angry(X).\nhappy(X) :- weak(X).\ntired(X) :- happy(X).\nsad(X) :- tired(X).\nfriendly(X) :- sad(X).\nbrave(X) :- curious(X).\nrough(Y) :- soft(Y), owns(U,Y), funny(U).\nnew(X) :- new(X).\nclean(Z) :- clean(Z).\nhungry(Z) :- bored(Z).\nhard(Y) :- dirty(Y), tall(D).\nbored(Y) :- calm(Y), parent(Y,U), busy(U).\nsoft(X) :- big(X).\nnew(Z) :- dirty(Z), owns(B,Z), calm(B).\nnew(Z) :- big(Z), owns(A,Z), tall(A).\nbrave(Z) :- bored(Z), curious(D).\nrough(X) :- hard(X).\nclean(Y) :- big(Y), likes(U,Y), bored(U).\ntall(Z) :- curious(Z), sibling(Z,W), clever(W).\nexcited(X) :- busy(X), clever(X).\nparent(X,Y) :- clever(X), curious(Y).\ncalm(X) :- brave(X), hungry(X).\nexcited(X) :- curious(X), busy(X).\nclever(X) :- tall(X), calm(X).\nparent(X,Y) :- hungry(X), clever(Y), friend(X,Y).\nfriendly(frank).\nlikes(alice,ball).\nfriend(george,eve).\nbig(book).\nred(pencil).\nparent(carol,alice).\nrough(apple).\ndislikes(carol,apple).\ncalm(frank).\nbusy(george).\nsibling(dave,frank).\nparent(dave,carol).\nenemy(dave,eve).\nowns(eve,pencil).\nfriend(dave,eve).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is curious, then person X is brave.\nFor all Y, if there exists U such that object Y is soft and person U owns object Y and person U is funny, then object Y is rough.\nFor all X, if object X is new, then object X is new.\nFor all Z, if object Z is clean, then object Z is clean.\nFor all Z, if person Z is bored, then person Z is hungry.\nFor all Y, if there exists D such that object Y is dirty and person D is tall, then object Y is hard.\nFor all Y, if there exists U such that person Y is calm and person Y is a parent of person U and person U is busy, then person Y is bored.\nFor all X, if object X is big, then object X is soft.\nFor all Z, if there exists B such that object Z is dirty and person B owns object Z and person B is calm, then object Z is new.\nFor all Z, if there exists A such that object Z is big and person A owns object Z and person A is tall, then object Z is new.\nFor all Z, if there exists D such that person Z is bored and person D is curious, then person Z is brave.\nFor all X, if object X is hard, then object X is rough.\nFor all Y, if there exists U such that object Y is big and person U likes object Y and person U is bored, then object Y is clean.\nFor all Z, if there exists W such that person Z is curious and person Z is a sibling of person W and person W is clever, then person Z is tall.\nFor all X, if person X is busy and person X is clever, then person X is excited.\nFor all X, Y, if person X is clever and person Y is curious, then person X is a parent of person Y.\nFor all X, if person X is brave and person X is hungry, then person X is calm.\nFor all X, if person X is curious and person X is busy, then person X is excited.\nFor all X, if person X is tall and person X is calm, then person X is clever.\nFor all X, Y, if person X is hungry and person Y is clever and person X is a friend of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\nfrank is friendly.\nalice likes ball.\ngeorge is a friend of eve.\nbook is big.\npencil is red.\ncarol is a parent of alice.\napple is rough.\ncarol dislikes apple.\nfrank is calm.\ngeorge is busy.\ndave is a sibling of frank.\ndave is a parent of carol.\ndave is an enemy of eve.\neve owns pencil.\ndave is a friend of eve.\ncarol is a sibling of george.\n\nQUESTION:\nCould frank is angry explain frank is friendly?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1178,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(pencil).",
    "c": "weak(X) :- angry(X).\nhappy(X) :- weak(X).\ntired(X) :- happy(X).\nsad(X) :- tired(X).\nfriendly(X) :- sad(X).\nbrave(X) :- curious(X).\nrough(Y) :- soft(Y), owns(U,Y), funny(U).\nnew(X) :- new(X).\nclean(Z) :- clean(Z).\nhungry(Z) :- bored(Z).\nhard(Y) :- dirty(Y), tall(D).\nbored(Y) :- calm(Y), parent(Y,U), busy(U).\nsoft(X) :- big(X).\nnew(Z) :- dirty(Z), owns(B,Z), calm(B).\nnew(Z) :- big(Z), owns(A,Z), tall(A).\nbrave(Z) :- bored(Z), curious(D).\nrough(X) :- hard(X).\nclean(Y) :- big(Y), likes(U,Y), bored(U).\ntall(Z) :- curious(Z), sibling(Z,W), clever(W).\nexcited(X) :- busy(X), clever(X).\nparent(X,Y) :- clever(X), curious(Y).\ncalm(X) :- brave(X), hungry(X).\nexcited(X) :- curious(X), busy(X).\nclever(X) :- tall(X), calm(X).\nparent(X,Y) :- hungry(X), clever(Y), friend(X,Y).\nfriendly(frank).\nlikes(alice,ball).\nfriend(george,eve).\nbig(book).\nred(pencil).\nparent(carol,alice).\nrough(apple).\ndislikes(carol,apple).\ncalm(frank).\nbusy(george).\nsibling(dave,frank).\nparent(dave,carol).\nenemy(dave,eve).\nowns(eve,pencil).\nfriend(dave,eve).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is happy.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is friendly.\nFor all X, if person X is curious, then person X is brave.\nFor all Y, if there exists U such that object Y is soft and person U owns object Y and person U is funny, then object Y is rough.\nFor all X, if object X is new, then object X is new.\nFor all Z, if object Z is clean, then object Z is clean.\nFor all Z, if person Z is bored, then person Z is hungry.\nFor all Y, if there exists D such that object Y is dirty and person D is tall, then object Y is hard.\nFor all Y, if there exists U such that person Y is calm and person Y is a parent of person U and person U is busy, then person Y is bored.\nFor all X, if object X is big, then object X is soft.\nFor all Z, if there exists B such that object Z is dirty and person B owns object Z and person B is calm, then object Z is new.\nFor all Z, if there exists A such that object Z is big and person A owns object Z and person A is tall, then object Z is new.\nFor all Z, if there exists D such that person Z is bored and person D is curious, then person Z is brave.\nFor all X, if object X is hard, then object X is rough.\nFor all Y, if there exists U such that object Y is big and person U likes object Y and person U is bored, then object Y is clean.\nFor all Z, if there exists W such that person Z is curious and person Z is a sibling of person W and person W is clever, then person Z is tall.\nFor all X, if person X is busy and person X is clever, then person X is excited.\nFor all X, Y, if person X is clever and person Y is curious, then person X is a parent of person Y.\nFor all X, if person X is brave and person X is hungry, then person X is calm.\nFor all X, if person X is curious and person X is busy, then person X is excited.\nFor all X, if person X is tall and person X is calm, then person X is clever.\nFor all X, Y, if person X is hungry and person Y is clever and person X is a friend of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\nfrank is friendly.\nalice likes ball.\ngeorge is a friend of eve.\nbook is big.\npencil is red.\ncarol is a parent of alice.\napple is rough.\ncarol dislikes apple.\nfrank is calm.\ngeorge is busy.\ndave is a sibling of frank.\ndave is a parent of carol.\ndave is an enemy of eve.\neve owns pencil.\ndave is a friend of eve.\ncarol is a sibling of george.\n\nQUESTION:\nCould pencil is dirty explain frank is friendly?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1179,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "rough(X) :- heavy(X).\nsmooth(X) :- rough(X).\nwet(X) :- smooth(X).\nred(X) :- wet(X).\nsmall(X) :- red(X).\nbored(Z) :- calm(Z).\nfriend(Y,X) :- clever(Y), happy(X), clever(C).\ndislikes(Z,Y) :- light(Y), curious(Z).\ntired(Z) :- weak(Z), friend(Z,U), sad(U).\nbusy(Z) :- funny(Z), enemy(Z,V), sad(V).\nclever(Y) :- busy(Y), friend(Y,B), happy(B).\nsad(Y) :- happy(Y), parent(Y,V), strong(V).\nangry(X) :- funny(X).\nangry(X) :- busy(X), likes(X,V), light(V).\nsibling(Y,Z) :- tall(Y), happy(Z).\nangry(X) :- tired(X), owns(X,B), hard(B).\nparent(X,Z) :- brave(Z), strong(X), owns(X,W).\nfriend(X,Y) :- friendly(X), tall(Y).\nlight(X) :- clean(X).\nclever(X) :- bored(X), sad(X).\nsad(X) :- hungry(X).\nclean(X) :- soft(X), hard(X).\nstrong(X) :- calm(X).\nclever(X) :- funny(X).\nfunny(X) :- clever(X), weak(X).\nheavy(phone).\nlikes(carol,book).\ndislikes(dave,book).\nparent(eve,frank).\ntall(carol).\nparent(bob,carol).\nlikes(bob,ball).\nhappy(george).\ndirty(pencil).\nhungry(dave).\nbored(bob).\nowns(bob,car).\ntall(frank).\ndislikes(george,book).\nsibling(bob,dave).\nhot.",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is small.\nFor all Z, if person Z is calm, then person Z is bored.\nFor all X, Y, if there exists C such that person Y is clever and person X is happy and person C is clever, then person Y is a friend of person X.\nFor all Y, Z, if object Y is light and person Z is curious, then person Z dislikes object Y.\nFor all Z, if there exists U such that person Z is weak and person Z is a friend of person U and person U is sad, then person Z is tired.\nFor all Z, if there exists V such that person Z is funny and person Z is an enemy of person V and person V is sad, then person Z is busy.\nFor all Y, if there exists B such that person Y is busy and person Y is a friend of person B and person B is happy, then person Y is clever.\nFor all Y, if there exists V such that person Y is happy and person Y is a parent of person V and person V is strong, then person Y is sad.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if there exists V such that person X is busy and person X likes object V and object V is light, then person X is angry.\nFor all Y, Z, if person Y is tall and person Z is happy, then person Y is a sibling of person Z.\nFor all X, if there exists B such that person X is tired and person X owns object B and object B is hard, then person X is angry.\nFor all X, Z, if there exists W such that person Z is brave and person X is strong and person X owns object W, then person X is a parent of person Z.\nFor all X, Y, if person X is friendly and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is clean, then object X is light.\nFor all X, if person X is bored and person X is sad, then person X is clever.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if object X is soft and object X is hard, then object X is clean.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever and person X is weak, then person X is funny.\n\nAnd the following facts:\nphone is heavy.\ncarol likes book.\ndave dislikes book.\neve is a parent of frank.\ncarol is tall.\nbob is a parent of carol.\nbob likes ball.\ngeorge is happy.\npencil is dirty.\ndave is hungry.\nbob is bored.\nbob owns car.\nfrank is tall.\ngeorge dislikes book.\nbob is a sibling of dave.\nit is hot.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1180,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(car).",
    "c": "rough(X) :- heavy(X).\nsmooth(X) :- rough(X).\nwet(X) :- smooth(X).\nred(X) :- wet(X).\nsmall(X) :- red(X).\nbored(Z) :- calm(Z).\nfriend(Y,X) :- clever(Y), happy(X), clever(C).\ndislikes(Z,Y) :- light(Y), curious(Z).\ntired(Z) :- weak(Z), friend(Z,U), sad(U).\nbusy(Z) :- funny(Z), enemy(Z,V), sad(V).\nclever(Y) :- busy(Y), friend(Y,B), happy(B).\nsad(Y) :- happy(Y), parent(Y,V), strong(V).\nangry(X) :- funny(X).\nangry(X) :- busy(X), likes(X,V), light(V).\nsibling(Y,Z) :- tall(Y), happy(Z).\nangry(X) :- tired(X), owns(X,B), hard(B).\nparent(X,Z) :- brave(Z), strong(X), owns(X,W).\nfriend(X,Y) :- friendly(X), tall(Y).\nlight(X) :- clean(X).\nclever(X) :- bored(X), sad(X).\nsad(X) :- hungry(X).\nclean(X) :- soft(X), hard(X).\nstrong(X) :- calm(X).\nclever(X) :- funny(X).\nfunny(X) :- clever(X), weak(X).\nheavy(phone).\nlikes(carol,book).\ndislikes(dave,book).\nparent(eve,frank).\ntall(carol).\nparent(bob,carol).\nlikes(bob,ball).\nhappy(george).\ndirty(pencil).\nhungry(dave).\nbored(bob).\nowns(bob,car).\ntall(frank).\ndislikes(george,book).\nsibling(bob,dave).\nhot.",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is small.\nFor all Z, if person Z is calm, then person Z is bored.\nFor all X, Y, if there exists C such that person Y is clever and person X is happy and person C is clever, then person Y is a friend of person X.\nFor all Y, Z, if object Y is light and person Z is curious, then person Z dislikes object Y.\nFor all Z, if there exists U such that person Z is weak and person Z is a friend of person U and person U is sad, then person Z is tired.\nFor all Z, if there exists V such that person Z is funny and person Z is an enemy of person V and person V is sad, then person Z is busy.\nFor all Y, if there exists B such that person Y is busy and person Y is a friend of person B and person B is happy, then person Y is clever.\nFor all Y, if there exists V such that person Y is happy and person Y is a parent of person V and person V is strong, then person Y is sad.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if there exists V such that person X is busy and person X likes object V and object V is light, then person X is angry.\nFor all Y, Z, if person Y is tall and person Z is happy, then person Y is a sibling of person Z.\nFor all X, if there exists B such that person X is tired and person X owns object B and object B is hard, then person X is angry.\nFor all X, Z, if there exists W such that person Z is brave and person X is strong and person X owns object W, then person X is a parent of person Z.\nFor all X, Y, if person X is friendly and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is clean, then object X is light.\nFor all X, if person X is bored and person X is sad, then person X is clever.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if object X is soft and object X is hard, then object X is clean.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever and person X is weak, then person X is funny.\n\nAnd the following facts:\nphone is heavy.\ncarol likes book.\ndave dislikes book.\neve is a parent of frank.\ncarol is tall.\nbob is a parent of carol.\nbob likes ball.\ngeorge is happy.\npencil is dirty.\ndave is hungry.\nbob is bored.\nbob owns car.\nfrank is tall.\ngeorge dislikes book.\nbob is a sibling of dave.\nit is hot.\n\nQUESTION:\nIs car is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1181,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(phone).",
    "c": "rough(X) :- heavy(X).\nsmooth(X) :- rough(X).\nwet(X) :- smooth(X).\nred(X) :- wet(X).\nsmall(X) :- red(X).\nbored(Z) :- calm(Z).\nfriend(Y,X) :- clever(Y), happy(X), clever(C).\ndislikes(Z,Y) :- light(Y), curious(Z).\ntired(Z) :- weak(Z), friend(Z,U), sad(U).\nbusy(Z) :- funny(Z), enemy(Z,V), sad(V).\nclever(Y) :- busy(Y), friend(Y,B), happy(B).\nsad(Y) :- happy(Y), parent(Y,V), strong(V).\nangry(X) :- funny(X).\nangry(X) :- busy(X), likes(X,V), light(V).\nsibling(Y,Z) :- tall(Y), happy(Z).\nangry(X) :- tired(X), owns(X,B), hard(B).\nparent(X,Z) :- brave(Z), strong(X), owns(X,W).\nfriend(X,Y) :- friendly(X), tall(Y).\nlight(X) :- clean(X).\nclever(X) :- bored(X), sad(X).\nsad(X) :- hungry(X).\nclean(X) :- soft(X), hard(X).\nstrong(X) :- calm(X).\nclever(X) :- funny(X).\nfunny(X) :- clever(X), weak(X).\nsmall(phone).\nlikes(carol,book).\ndislikes(dave,book).\nparent(eve,frank).\ntall(carol).\nparent(bob,carol).\nlikes(bob,ball).\nhappy(george).\ndirty(pencil).\nhungry(dave).\nbored(bob).\nowns(bob,car).\ntall(frank).\ndislikes(george,book).\nsibling(bob,dave).\nhot.",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is small.\nFor all Z, if person Z is calm, then person Z is bored.\nFor all X, Y, if there exists C such that person Y is clever and person X is happy and person C is clever, then person Y is a friend of person X.\nFor all Y, Z, if object Y is light and person Z is curious, then person Z dislikes object Y.\nFor all Z, if there exists U such that person Z is weak and person Z is a friend of person U and person U is sad, then person Z is tired.\nFor all Z, if there exists V such that person Z is funny and person Z is an enemy of person V and person V is sad, then person Z is busy.\nFor all Y, if there exists B such that person Y is busy and person Y is a friend of person B and person B is happy, then person Y is clever.\nFor all Y, if there exists V such that person Y is happy and person Y is a parent of person V and person V is strong, then person Y is sad.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if there exists V such that person X is busy and person X likes object V and object V is light, then person X is angry.\nFor all Y, Z, if person Y is tall and person Z is happy, then person Y is a sibling of person Z.\nFor all X, if there exists B such that person X is tired and person X owns object B and object B is hard, then person X is angry.\nFor all X, Z, if there exists W such that person Z is brave and person X is strong and person X owns object W, then person X is a parent of person Z.\nFor all X, Y, if person X is friendly and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is clean, then object X is light.\nFor all X, if person X is bored and person X is sad, then person X is clever.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if object X is soft and object X is hard, then object X is clean.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever and person X is weak, then person X is funny.\n\nAnd the following facts:\nphone is small.\ncarol likes book.\ndave dislikes book.\neve is a parent of frank.\ncarol is tall.\nbob is a parent of carol.\nbob likes ball.\ngeorge is happy.\npencil is dirty.\ndave is hungry.\nbob is bored.\nbob owns car.\nfrank is tall.\ngeorge dislikes book.\nbob is a sibling of dave.\nit is hot.\n\nQUESTION:\nCould phone is heavy explain phone is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1182,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(bob).",
    "c": "rough(X) :- heavy(X).\nsmooth(X) :- rough(X).\nwet(X) :- smooth(X).\nred(X) :- wet(X).\nsmall(X) :- red(X).\nbored(Z) :- calm(Z).\nfriend(Y,X) :- clever(Y), happy(X), clever(C).\ndislikes(Z,Y) :- light(Y), curious(Z).\ntired(Z) :- weak(Z), friend(Z,U), sad(U).\nbusy(Z) :- funny(Z), enemy(Z,V), sad(V).\nclever(Y) :- busy(Y), friend(Y,B), happy(B).\nsad(Y) :- happy(Y), parent(Y,V), strong(V).\nangry(X) :- funny(X).\nangry(X) :- busy(X), likes(X,V), light(V).\nsibling(Y,Z) :- tall(Y), happy(Z).\nangry(X) :- tired(X), owns(X,B), hard(B).\nparent(X,Z) :- brave(Z), strong(X), owns(X,W).\nfriend(X,Y) :- friendly(X), tall(Y).\nlight(X) :- clean(X).\nclever(X) :- bored(X), sad(X).\nsad(X) :- hungry(X).\nclean(X) :- soft(X), hard(X).\nstrong(X) :- calm(X).\nclever(X) :- funny(X).\nfunny(X) :- clever(X), weak(X).\nsmall(phone).\nlikes(carol,book).\ndislikes(dave,book).\nparent(eve,frank).\ntall(carol).\nparent(bob,carol).\nlikes(bob,ball).\nhappy(george).\ndirty(pencil).\nhungry(dave).\nbored(bob).\nowns(bob,car).\ntall(frank).\ndislikes(george,book).\nsibling(bob,dave).\nhot.",
    "natural language": "You are given the following information:\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is red.\nFor all X, if object X is red, then object X is small.\nFor all Z, if person Z is calm, then person Z is bored.\nFor all X, Y, if there exists C such that person Y is clever and person X is happy and person C is clever, then person Y is a friend of person X.\nFor all Y, Z, if object Y is light and person Z is curious, then person Z dislikes object Y.\nFor all Z, if there exists U such that person Z is weak and person Z is a friend of person U and person U is sad, then person Z is tired.\nFor all Z, if there exists V such that person Z is funny and person Z is an enemy of person V and person V is sad, then person Z is busy.\nFor all Y, if there exists B such that person Y is busy and person Y is a friend of person B and person B is happy, then person Y is clever.\nFor all Y, if there exists V such that person Y is happy and person Y is a parent of person V and person V is strong, then person Y is sad.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if there exists V such that person X is busy and person X likes object V and object V is light, then person X is angry.\nFor all Y, Z, if person Y is tall and person Z is happy, then person Y is a sibling of person Z.\nFor all X, if there exists B such that person X is tired and person X owns object B and object B is hard, then person X is angry.\nFor all X, Z, if there exists W such that person Z is brave and person X is strong and person X owns object W, then person X is a parent of person Z.\nFor all X, Y, if person X is friendly and person Y is tall, then person X is a friend of person Y.\nFor all X, if object X is clean, then object X is light.\nFor all X, if person X is bored and person X is sad, then person X is clever.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if object X is soft and object X is hard, then object X is clean.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is funny, then person X is clever.\nFor all X, if person X is clever and person X is weak, then person X is funny.\n\nAnd the following facts:\nphone is small.\ncarol likes book.\ndave dislikes book.\neve is a parent of frank.\ncarol is tall.\nbob is a parent of carol.\nbob likes ball.\ngeorge is happy.\npencil is dirty.\ndave is hungry.\nbob is bored.\nbob owns car.\nfrank is tall.\ngeorge dislikes book.\nbob is a sibling of dave.\nit is hot.\n\nQUESTION:\nCould bob is hungry explain phone is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1183,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(car).",
    "c": "light(X) :- smooth(X).\nwet(X) :- light(X).\nold(X) :- wet(X).\nsoft(X) :- old(X).\nheavy(X) :- soft(X).\nrough(X) :- heavy(X).\nred(X) :- rough(X).\nwet(X) :- red(X).\nsoft(X) :- wet(X).\nwet(X) :- soft(X).\nsibling(Y,X) :- weak(Y), tired(X), owns(X,V).\nhungry(Z) :- happy(Z).\nbrave(Y) :- happy(Y).\nclean(X) :- dirty(X), likes(U,X), strong(U).\nangry(Y) :- calm(Y).\nstrong(Y) :- sad(Y), friend(Y,B), calm(B).\nfunny(Y) :- excited(Y).\ndirty(X) :- big(X), dislikes(W,X), tall(W).\nhard(Y) :- big(Y), owns(U,Y), clever(U).\nbig(Z) :- hard(Z), owns(V,Z), excited(V).\nfriendly(X) :- strong(X).\nparent(X,Y) :- busy(X), bored(Y).\nfriendly(X) :- happy(X).\nparent(X,Y) :- clever(X), weak(Y).\nparent(X,Y) :- bored(X), friendly(Y).\nsmooth(car).\nfriend(bob,george).\nfriend(dave,frank).\nlikes(carol,phone).\nowns(alice,phone).\ncurious(bob).\nenemy(eve,frank).\nfriendly(frank).\nfriendly(carol).\ndislikes(frank,phone).\nhard(ball).\nowns(alice,pencil).\nfriend(eve,carol).\nowns(alice,book).\nangry(carol).\nhappy(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, Y, if there exists V such that person Y is weak and person X is tired and person X owns object V, then person Y is a sibling of person X.\nFor all Z, if person Z is happy, then person Z is hungry.\nFor all Y, if person Y is happy, then person Y is brave.\nFor all X, if there exists U such that object X is dirty and person U likes object X and person U is strong, then object X is clean.\nFor all Y, if person Y is calm, then person Y is angry.\nFor all Y, if there exists B such that person Y is sad and person Y is a friend of person B and person B is calm, then person Y is strong.\nFor all Y, if person Y is excited, then person Y is funny.\nFor all X, if there exists W such that object X is big and person W dislikes object X and person W is tall, then object X is dirty.\nFor all Y, if there exists U such that object Y is big and person U owns object Y and person U is clever, then object Y is hard.\nFor all Z, if there exists V such that object Z is hard and person V owns object Z and person V is excited, then object Z is big.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, Y, if person X is busy and person Y is bored, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, Y, if person X is clever and person Y is weak, then person X is a parent of person Y.\nFor all X, Y, if person X is bored and person Y is friendly, then person X is a parent of person Y.\n\nAnd the following facts:\ncar is smooth.\nbob is a friend of george.\ndave is a friend of frank.\ncarol likes phone.\nalice owns phone.\nbob is curious.\neve is an enemy of frank.\nfrank is friendly.\ncarol is friendly.\nfrank dislikes phone.\nball is hard.\nalice owns pencil.\neve is a friend of carol.\nalice owns book.\ncarol is angry.\ncarol is happy.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1184,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "light(X) :- smooth(X).\nwet(X) :- light(X).\nold(X) :- wet(X).\nsoft(X) :- old(X).\nheavy(X) :- soft(X).\nrough(X) :- heavy(X).\nred(X) :- rough(X).\nwet(X) :- red(X).\nsoft(X) :- wet(X).\nwet(X) :- soft(X).\nsibling(Y,X) :- weak(Y), tired(X), owns(X,V).\nhungry(Z) :- happy(Z).\nbrave(Y) :- happy(Y).\nclean(X) :- dirty(X), likes(U,X), strong(U).\nangry(Y) :- calm(Y).\nstrong(Y) :- sad(Y), friend(Y,B), calm(B).\nfunny(Y) :- excited(Y).\ndirty(X) :- big(X), dislikes(W,X), tall(W).\nhard(Y) :- big(Y), owns(U,Y), clever(U).\nbig(Z) :- hard(Z), owns(V,Z), excited(V).\nfriendly(X) :- strong(X).\nparent(X,Y) :- busy(X), bored(Y).\nfriendly(X) :- happy(X).\nparent(X,Y) :- clever(X), weak(Y).\nparent(X,Y) :- bored(X), friendly(Y).\nsmooth(car).\nfriend(bob,george).\nfriend(dave,frank).\nlikes(carol,phone).\nowns(alice,phone).\ncurious(bob).\nenemy(eve,frank).\nfriendly(frank).\nfriendly(carol).\ndislikes(frank,phone).\nhard(ball).\nowns(alice,pencil).\nfriend(eve,carol).\nowns(alice,book).\nangry(carol).\nhappy(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, Y, if there exists V such that person Y is weak and person X is tired and person X owns object V, then person Y is a sibling of person X.\nFor all Z, if person Z is happy, then person Z is hungry.\nFor all Y, if person Y is happy, then person Y is brave.\nFor all X, if there exists U such that object X is dirty and person U likes object X and person U is strong, then object X is clean.\nFor all Y, if person Y is calm, then person Y is angry.\nFor all Y, if there exists B such that person Y is sad and person Y is a friend of person B and person B is calm, then person Y is strong.\nFor all Y, if person Y is excited, then person Y is funny.\nFor all X, if there exists W such that object X is big and person W dislikes object X and person W is tall, then object X is dirty.\nFor all Y, if there exists U such that object Y is big and person U owns object Y and person U is clever, then object Y is hard.\nFor all Z, if there exists V such that object Z is hard and person V owns object Z and person V is excited, then object Z is big.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, Y, if person X is busy and person Y is bored, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, Y, if person X is clever and person Y is weak, then person X is a parent of person Y.\nFor all X, Y, if person X is bored and person Y is friendly, then person X is a parent of person Y.\n\nAnd the following facts:\ncar is smooth.\nbob is a friend of george.\ndave is a friend of frank.\ncarol likes phone.\nalice owns phone.\nbob is curious.\neve is an enemy of frank.\nfrank is friendly.\ncarol is friendly.\nfrank dislikes phone.\nball is hard.\nalice owns pencil.\neve is a friend of carol.\nalice owns book.\ncarol is angry.\ncarol is happy.\n\nQUESTION:\nIs pencil is clean true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1185,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(car).",
    "c": "light(X) :- smooth(X).\nwet(X) :- light(X).\nold(X) :- wet(X).\nsoft(X) :- old(X).\nheavy(X) :- soft(X).\nrough(X) :- heavy(X).\nred(X) :- rough(X).\nwet(X) :- red(X).\nsoft(X) :- wet(X).\nwet(X) :- soft(X).\nsibling(Y,X) :- weak(Y), tired(X), owns(X,V).\nhungry(Z) :- happy(Z).\nbrave(Y) :- happy(Y).\nclean(X) :- dirty(X), likes(U,X), strong(U).\nangry(Y) :- calm(Y).\nstrong(Y) :- sad(Y), friend(Y,B), calm(B).\nfunny(Y) :- excited(Y).\ndirty(X) :- big(X), dislikes(W,X), tall(W).\nhard(Y) :- big(Y), owns(U,Y), clever(U).\nbig(Z) :- hard(Z), owns(V,Z), excited(V).\nfriendly(X) :- strong(X).\nparent(X,Y) :- busy(X), bored(Y).\nfriendly(X) :- happy(X).\nparent(X,Y) :- clever(X), weak(Y).\nparent(X,Y) :- bored(X), friendly(Y).\nwet(car).\nfriend(bob,george).\nfriend(dave,frank).\nlikes(carol,phone).\nowns(alice,phone).\ncurious(bob).\nenemy(eve,frank).\nfriendly(frank).\nfriendly(carol).\ndislikes(frank,phone).\nhard(ball).\nowns(alice,pencil).\nfriend(eve,carol).\nowns(alice,book).\nangry(carol).\nhappy(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, Y, if there exists V such that person Y is weak and person X is tired and person X owns object V, then person Y is a sibling of person X.\nFor all Z, if person Z is happy, then person Z is hungry.\nFor all Y, if person Y is happy, then person Y is brave.\nFor all X, if there exists U such that object X is dirty and person U likes object X and person U is strong, then object X is clean.\nFor all Y, if person Y is calm, then person Y is angry.\nFor all Y, if there exists B such that person Y is sad and person Y is a friend of person B and person B is calm, then person Y is strong.\nFor all Y, if person Y is excited, then person Y is funny.\nFor all X, if there exists W such that object X is big and person W dislikes object X and person W is tall, then object X is dirty.\nFor all Y, if there exists U such that object Y is big and person U owns object Y and person U is clever, then object Y is hard.\nFor all Z, if there exists V such that object Z is hard and person V owns object Z and person V is excited, then object Z is big.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, Y, if person X is busy and person Y is bored, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, Y, if person X is clever and person Y is weak, then person X is a parent of person Y.\nFor all X, Y, if person X is bored and person Y is friendly, then person X is a parent of person Y.\n\nAnd the following facts:\ncar is wet.\nbob is a friend of george.\ndave is a friend of frank.\ncarol likes phone.\nalice owns phone.\nbob is curious.\neve is an enemy of frank.\nfrank is friendly.\ncarol is friendly.\nfrank dislikes phone.\nball is hard.\nalice owns pencil.\neve is a friend of carol.\nalice owns book.\ncarol is angry.\ncarol is happy.\n\nQUESTION:\nCould car is smooth explain car is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1186,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "light(X) :- smooth(X).\nwet(X) :- light(X).\nold(X) :- wet(X).\nsoft(X) :- old(X).\nheavy(X) :- soft(X).\nrough(X) :- heavy(X).\nred(X) :- rough(X).\nwet(X) :- red(X).\nsoft(X) :- wet(X).\nwet(X) :- soft(X).\nsibling(Y,X) :- weak(Y), tired(X), owns(X,V).\nhungry(Z) :- happy(Z).\nbrave(Y) :- happy(Y).\nclean(X) :- dirty(X), likes(U,X), strong(U).\nangry(Y) :- calm(Y).\nstrong(Y) :- sad(Y), friend(Y,B), calm(B).\nfunny(Y) :- excited(Y).\ndirty(X) :- big(X), dislikes(W,X), tall(W).\nhard(Y) :- big(Y), owns(U,Y), clever(U).\nbig(Z) :- hard(Z), owns(V,Z), excited(V).\nfriendly(X) :- strong(X).\nparent(X,Y) :- busy(X), bored(Y).\nfriendly(X) :- happy(X).\nparent(X,Y) :- clever(X), weak(Y).\nparent(X,Y) :- bored(X), friendly(Y).\nwet(car).\nfriend(bob,george).\nfriend(dave,frank).\nlikes(carol,phone).\nowns(alice,phone).\ncurious(bob).\nenemy(eve,frank).\nfriendly(frank).\nfriendly(carol).\ndislikes(frank,phone).\nhard(ball).\nowns(alice,pencil).\nfriend(eve,carol).\nowns(alice,book).\nangry(carol).\nhappy(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is soft.\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is rough.\nFor all X, if object X is rough, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is soft.\nFor all X, if object X is soft, then object X is wet.\nFor all X, Y, if there exists V such that person Y is weak and person X is tired and person X owns object V, then person Y is a sibling of person X.\nFor all Z, if person Z is happy, then person Z is hungry.\nFor all Y, if person Y is happy, then person Y is brave.\nFor all X, if there exists U such that object X is dirty and person U likes object X and person U is strong, then object X is clean.\nFor all Y, if person Y is calm, then person Y is angry.\nFor all Y, if there exists B such that person Y is sad and person Y is a friend of person B and person B is calm, then person Y is strong.\nFor all Y, if person Y is excited, then person Y is funny.\nFor all X, if there exists W such that object X is big and person W dislikes object X and person W is tall, then object X is dirty.\nFor all Y, if there exists U such that object Y is big and person U owns object Y and person U is clever, then object Y is hard.\nFor all Z, if there exists V such that object Z is hard and person V owns object Z and person V is excited, then object Z is big.\nFor all X, if person X is strong, then person X is friendly.\nFor all X, Y, if person X is busy and person Y is bored, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is friendly.\nFor all X, Y, if person X is clever and person Y is weak, then person X is a parent of person Y.\nFor all X, Y, if person X is bored and person Y is friendly, then person X is a parent of person Y.\n\nAnd the following facts:\ncar is wet.\nbob is a friend of george.\ndave is a friend of frank.\ncarol likes phone.\nalice owns phone.\nbob is curious.\neve is an enemy of frank.\nfrank is friendly.\ncarol is friendly.\nfrank dislikes phone.\nball is hard.\nalice owns pencil.\neve is a friend of carol.\nalice owns book.\ncarol is angry.\ncarol is happy.\n\nQUESTION:\nCould ball is clean explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1187,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "strong(X) :- happy(X).\nsad(X) :- strong(X).\ncalm(X) :- sad(X).\nbrave(X) :- calm(X).\ntall(X) :- brave(X).\nweak(X) :- tall(X).\ncurious(X) :- weak(X).\ntall(X) :- curious(X).\nbored(X) :- tall(X).\nweak(X) :- bored(X).\nnew(Y) :- heavy(Y), dislikes(B,Y), tired(B).\nbig(Z) :- soft(Z).\ntired(Y) :- tired(Y), enemy(Y,U), clever(U).\nheavy(Z) :- clean(Z), hungry(E).\nlikes(Z,X) :- busy(Z), clean(X), rough(C).\nbig(Y) :- big(Y), likes(A,Y), angry(A).\nlight(Z) :- new(Z), dislikes(A,Z), tired(A).\nnew(X) :- light(X), dirty(X).\nnew(X) :- wet(X), hard(X).\nclean(X) :- rough(X).\nfunny(X) :- tired(X), hungry(X).\nbig(X) :- rough(X), hard(X).\nclever(X) :- tired(X).\nenemy(X,Y) :- excited(X), hungry(Y).\nparent(X,Y) :- tired(X), tired(Y), enemy(X,Y).\nhappy(dave).\nowns(dave,ball).\nenemy(george,alice).\nowns(eve,phone).\nenemy(carol,dave).\nenemy(alice,bob).\nowns(dave,book).\nsmall(book).\nlikes(frank,book).\nsibling(bob,george).\ndislikes(dave,car).\nlikes(eve,car).\nparent(carol,eve).\nparent(carol,alice).\nhungry(george).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all Y, if there exists B such that object Y is heavy and person B dislikes object Y and person B is tired, then object Y is new.\nFor all Z, if object Z is soft, then object Z is big.\nFor all Y, if there exists U such that person Y is tired and person Y is an enemy of person U and person U is clever, then person Y is tired.\nFor all Z, if there exists E such that object Z is clean and person E is hungry, then object Z is heavy.\nFor all X, Z, if there exists C such that person Z is busy and object X is clean and object C is rough, then person Z likes object X.\nFor all Y, if there exists A such that object Y is big and person A likes object Y and person A is angry, then object Y is big.\nFor all Z, if there exists A such that object Z is new and person A dislikes object Z and person A is tired, then object Z is light.\nFor all X, if object X is light and object X is dirty, then object X is new.\nFor all X, if object X is wet and object X is hard, then object X is new.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if person X is tired and person X is hungry, then person X is funny.\nFor all X, if object X is rough and object X is hard, then object X is big.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is excited and person Y is hungry, then person X is an enemy of person Y.\nFor all X, Y, if person X is tired and person Y is tired and person X is an enemy of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\ndave is happy.\ndave owns ball.\ngeorge is an enemy of alice.\neve owns phone.\ncarol is an enemy of dave.\nalice is an enemy of bob.\ndave owns book.\nbook is small.\nfrank likes book.\nbob is a sibling of george.\ndave dislikes car.\neve likes car.\ncarol is a parent of eve.\ncarol is a parent of alice.\ngeorge is hungry.\nalice is a parent of dave.\n\nQUESTION:\nIs dave is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1188,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "excited(dave).",
    "c": "strong(X) :- happy(X).\nsad(X) :- strong(X).\ncalm(X) :- sad(X).\nbrave(X) :- calm(X).\ntall(X) :- brave(X).\nweak(X) :- tall(X).\ncurious(X) :- weak(X).\ntall(X) :- curious(X).\nbored(X) :- tall(X).\nweak(X) :- bored(X).\nnew(Y) :- heavy(Y), dislikes(B,Y), tired(B).\nbig(Z) :- soft(Z).\ntired(Y) :- tired(Y), enemy(Y,U), clever(U).\nheavy(Z) :- clean(Z), hungry(E).\nlikes(Z,X) :- busy(Z), clean(X), rough(C).\nbig(Y) :- big(Y), likes(A,Y), angry(A).\nlight(Z) :- new(Z), dislikes(A,Z), tired(A).\nnew(X) :- light(X), dirty(X).\nnew(X) :- wet(X), hard(X).\nclean(X) :- rough(X).\nfunny(X) :- tired(X), hungry(X).\nbig(X) :- rough(X), hard(X).\nclever(X) :- tired(X).\nenemy(X,Y) :- excited(X), hungry(Y).\nparent(X,Y) :- tired(X), tired(Y), enemy(X,Y).\nhappy(dave).\nowns(dave,ball).\nenemy(george,alice).\nowns(eve,phone).\nenemy(carol,dave).\nenemy(alice,bob).\nowns(dave,book).\nsmall(book).\nlikes(frank,book).\nsibling(bob,george).\ndislikes(dave,car).\nlikes(eve,car).\nparent(carol,eve).\nparent(carol,alice).\nhungry(george).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all Y, if there exists B such that object Y is heavy and person B dislikes object Y and person B is tired, then object Y is new.\nFor all Z, if object Z is soft, then object Z is big.\nFor all Y, if there exists U such that person Y is tired and person Y is an enemy of person U and person U is clever, then person Y is tired.\nFor all Z, if there exists E such that object Z is clean and person E is hungry, then object Z is heavy.\nFor all X, Z, if there exists C such that person Z is busy and object X is clean and object C is rough, then person Z likes object X.\nFor all Y, if there exists A such that object Y is big and person A likes object Y and person A is angry, then object Y is big.\nFor all Z, if there exists A such that object Z is new and person A dislikes object Z and person A is tired, then object Z is light.\nFor all X, if object X is light and object X is dirty, then object X is new.\nFor all X, if object X is wet and object X is hard, then object X is new.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if person X is tired and person X is hungry, then person X is funny.\nFor all X, if object X is rough and object X is hard, then object X is big.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is excited and person Y is hungry, then person X is an enemy of person Y.\nFor all X, Y, if person X is tired and person Y is tired and person X is an enemy of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\ndave is happy.\ndave owns ball.\ngeorge is an enemy of alice.\neve owns phone.\ncarol is an enemy of dave.\nalice is an enemy of bob.\ndave owns book.\nbook is small.\nfrank likes book.\nbob is a sibling of george.\ndave dislikes car.\neve likes car.\ncarol is a parent of eve.\ncarol is a parent of alice.\ngeorge is hungry.\nalice is a parent of dave.\n\nQUESTION:\nIs dave is excited true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1189,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(dave).",
    "c": "strong(X) :- happy(X).\nsad(X) :- strong(X).\ncalm(X) :- sad(X).\nbrave(X) :- calm(X).\ntall(X) :- brave(X).\nweak(X) :- tall(X).\ncurious(X) :- weak(X).\ntall(X) :- curious(X).\nbored(X) :- tall(X).\nweak(X) :- bored(X).\nnew(Y) :- heavy(Y), dislikes(B,Y), tired(B).\nbig(Z) :- soft(Z).\ntired(Y) :- tired(Y), enemy(Y,U), clever(U).\nheavy(Z) :- clean(Z), hungry(E).\nlikes(Z,X) :- busy(Z), clean(X), rough(C).\nbig(Y) :- big(Y), likes(A,Y), angry(A).\nlight(Z) :- new(Z), dislikes(A,Z), tired(A).\nnew(X) :- light(X), dirty(X).\nnew(X) :- wet(X), hard(X).\nclean(X) :- rough(X).\nfunny(X) :- tired(X), hungry(X).\nbig(X) :- rough(X), hard(X).\nclever(X) :- tired(X).\nenemy(X,Y) :- excited(X), hungry(Y).\nparent(X,Y) :- tired(X), tired(Y), enemy(X,Y).\nweak(dave).\nowns(dave,ball).\nenemy(george,alice).\nowns(eve,phone).\nenemy(carol,dave).\nenemy(alice,bob).\nowns(dave,book).\nsmall(book).\nlikes(frank,book).\nsibling(bob,george).\ndislikes(dave,car).\nlikes(eve,car).\nparent(carol,eve).\nparent(carol,alice).\nhungry(george).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all Y, if there exists B such that object Y is heavy and person B dislikes object Y and person B is tired, then object Y is new.\nFor all Z, if object Z is soft, then object Z is big.\nFor all Y, if there exists U such that person Y is tired and person Y is an enemy of person U and person U is clever, then person Y is tired.\nFor all Z, if there exists E such that object Z is clean and person E is hungry, then object Z is heavy.\nFor all X, Z, if there exists C such that person Z is busy and object X is clean and object C is rough, then person Z likes object X.\nFor all Y, if there exists A such that object Y is big and person A likes object Y and person A is angry, then object Y is big.\nFor all Z, if there exists A such that object Z is new and person A dislikes object Z and person A is tired, then object Z is light.\nFor all X, if object X is light and object X is dirty, then object X is new.\nFor all X, if object X is wet and object X is hard, then object X is new.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if person X is tired and person X is hungry, then person X is funny.\nFor all X, if object X is rough and object X is hard, then object X is big.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is excited and person Y is hungry, then person X is an enemy of person Y.\nFor all X, Y, if person X is tired and person Y is tired and person X is an enemy of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\ndave is weak.\ndave owns ball.\ngeorge is an enemy of alice.\neve owns phone.\ncarol is an enemy of dave.\nalice is an enemy of bob.\ndave owns book.\nbook is small.\nfrank likes book.\nbob is a sibling of george.\ndave dislikes car.\neve likes car.\ncarol is a parent of eve.\ncarol is a parent of alice.\ngeorge is hungry.\nalice is a parent of dave.\n\nQUESTION:\nCould dave is happy explain dave is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1190,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "strong(X) :- happy(X).\nsad(X) :- strong(X).\ncalm(X) :- sad(X).\nbrave(X) :- calm(X).\ntall(X) :- brave(X).\nweak(X) :- tall(X).\ncurious(X) :- weak(X).\ntall(X) :- curious(X).\nbored(X) :- tall(X).\nweak(X) :- bored(X).\nnew(Y) :- heavy(Y), dislikes(B,Y), tired(B).\nbig(Z) :- soft(Z).\ntired(Y) :- tired(Y), enemy(Y,U), clever(U).\nheavy(Z) :- clean(Z), hungry(E).\nlikes(Z,X) :- busy(Z), clean(X), rough(C).\nbig(Y) :- big(Y), likes(A,Y), angry(A).\nlight(Z) :- new(Z), dislikes(A,Z), tired(A).\nnew(X) :- light(X), dirty(X).\nnew(X) :- wet(X), hard(X).\nclean(X) :- rough(X).\nfunny(X) :- tired(X), hungry(X).\nbig(X) :- rough(X), hard(X).\nclever(X) :- tired(X).\nenemy(X,Y) :- excited(X), hungry(Y).\nparent(X,Y) :- tired(X), tired(Y), enemy(X,Y).\nweak(dave).\nowns(dave,ball).\nenemy(george,alice).\nowns(eve,phone).\nenemy(carol,dave).\nenemy(alice,bob).\nowns(dave,book).\nsmall(book).\nlikes(frank,book).\nsibling(bob,george).\ndislikes(dave,car).\nlikes(eve,car).\nparent(carol,eve).\nparent(carol,alice).\nhungry(george).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all Y, if there exists B such that object Y is heavy and person B dislikes object Y and person B is tired, then object Y is new.\nFor all Z, if object Z is soft, then object Z is big.\nFor all Y, if there exists U such that person Y is tired and person Y is an enemy of person U and person U is clever, then person Y is tired.\nFor all Z, if there exists E such that object Z is clean and person E is hungry, then object Z is heavy.\nFor all X, Z, if there exists C such that person Z is busy and object X is clean and object C is rough, then person Z likes object X.\nFor all Y, if there exists A such that object Y is big and person A likes object Y and person A is angry, then object Y is big.\nFor all Z, if there exists A such that object Z is new and person A dislikes object Z and person A is tired, then object Z is light.\nFor all X, if object X is light and object X is dirty, then object X is new.\nFor all X, if object X is wet and object X is hard, then object X is new.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if person X is tired and person X is hungry, then person X is funny.\nFor all X, if object X is rough and object X is hard, then object X is big.\nFor all X, if person X is tired, then person X is clever.\nFor all X, Y, if person X is excited and person Y is hungry, then person X is an enemy of person Y.\nFor all X, Y, if person X is tired and person Y is tired and person X is an enemy of person Y, then person X is a parent of person Y.\n\nAnd the following facts:\ndave is weak.\ndave owns ball.\ngeorge is an enemy of alice.\neve owns phone.\ncarol is an enemy of dave.\nalice is an enemy of bob.\ndave owns book.\nbook is small.\nfrank likes book.\nbob is a sibling of george.\ndave dislikes car.\neve likes car.\ncarol is a parent of eve.\ncarol is a parent of alice.\ngeorge is hungry.\nalice is a parent of dave.\n\nQUESTION:\nCould car is red explain dave is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1191,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(dave).",
    "c": "friendly(X) :- weak(X).\ntired(X) :- friendly(X).\nsad(X) :- tired(X).\nexcited(X) :- sad(X).\ncalm(X) :- excited(X).\ncurious(X) :- calm(X).\nclever(X) :- curious(X).\nbrave(X) :- clever(X).\nstrong(X) :- brave(X).\nbored(X) :- strong(X).\nold(Z) :- light(Z), likes(A,Z), funny(A).\ndirty(Y) :- light(Y), likes(A,Y), busy(A).\nsmooth(X) :- wet(X).\nnew(Z) :- heavy(Z), hungry(C).\nlight(Z) :- wet(Z), dislikes(B,Z), happy(B).\nsibling(Z,X) :- happy(Z), angry(X), parent(X,U).\nfriend(Y,X) :- funny(Y), funny(X).\nwet(Z) :- clean(Z).\nparent(Y,X) :- hungry(Y), happy(X).\nenemy(Y,X) :- busy(Y), tall(X), small(A).\nowns(X,Y) :- hungry(X), heavy(Y).\nnew(X) :- rough(X).\nhappy(X) :- funny(X).\ntall(X) :- busy(X), funny(X).\ntall(X) :- busy(X).\nweak(dave).\nsibling(carol,frank).\nnew(book).\nsibling(dave,bob).\nfunny(bob).\nparent(eve,frank).\nowns(carol,apple).\nparent(frank,alice).\nowns(eve,apple).\nsibling(carol,dave).\nbig(apple).\nparent(dave,bob).\nenemy(eve,george).\nsmall(ball).\ntall(bob).\nlikes(frank,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is bored.\nFor all Z, if there exists A such that object Z is light and person A likes object Z and person A is funny, then object Z is old.\nFor all Y, if there exists A such that object Y is light and person A likes object Y and person A is busy, then object Y is dirty.\nFor all X, if object X is wet, then object X is smooth.\nFor all Z, if there exists C such that object Z is heavy and person C is hungry, then object Z is new.\nFor all Z, if there exists B such that object Z is wet and person B dislikes object Z and person B is happy, then object Z is light.\nFor all X, Z, if there exists U such that person Z is happy and person X is angry and person X is a parent of person U, then person Z is a sibling of person X.\nFor all X, Y, if person Y is funny and person X is funny, then person Y is a friend of person X.\nFor all Z, if object Z is clean, then object Z is wet.\nFor all X, Y, if person Y is hungry and person X is happy, then person Y is a parent of person X.\nFor all X, Y, if there exists A such that person Y is busy and person X is tall and object A is small, then person Y is an enemy of person X.\nFor all X, Y, if person X is hungry and object Y is heavy, then person X owns object Y.\nFor all X, if object X is rough, then object X is new.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is busy and person X is funny, then person X is tall.\nFor all X, if person X is busy, then person X is tall.\n\nAnd the following facts:\ndave is weak.\ncarol is a sibling of frank.\nbook is new.\ndave is a sibling of bob.\nbob is funny.\neve is a parent of frank.\ncarol owns apple.\nfrank is a parent of alice.\neve owns apple.\ncarol is a sibling of dave.\napple is big.\ndave is a parent of bob.\neve is an enemy of george.\nball is small.\nbob is tall.\nfrank likes phone.\n\nQUESTION:\nIs dave is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1192,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(frank).",
    "c": "friendly(X) :- weak(X).\ntired(X) :- friendly(X).\nsad(X) :- tired(X).\nexcited(X) :- sad(X).\ncalm(X) :- excited(X).\ncurious(X) :- calm(X).\nclever(X) :- curious(X).\nbrave(X) :- clever(X).\nstrong(X) :- brave(X).\nbored(X) :- strong(X).\nold(Z) :- light(Z), likes(A,Z), funny(A).\ndirty(Y) :- light(Y), likes(A,Y), busy(A).\nsmooth(X) :- wet(X).\nnew(Z) :- heavy(Z), hungry(C).\nlight(Z) :- wet(Z), dislikes(B,Z), happy(B).\nsibling(Z,X) :- happy(Z), angry(X), parent(X,U).\nfriend(Y,X) :- funny(Y), funny(X).\nwet(Z) :- clean(Z).\nparent(Y,X) :- hungry(Y), happy(X).\nenemy(Y,X) :- busy(Y), tall(X), small(A).\nowns(X,Y) :- hungry(X), heavy(Y).\nnew(X) :- rough(X).\nhappy(X) :- funny(X).\ntall(X) :- busy(X), funny(X).\ntall(X) :- busy(X).\nweak(dave).\nsibling(carol,frank).\nnew(book).\nsibling(dave,bob).\nfunny(bob).\nparent(eve,frank).\nowns(carol,apple).\nparent(frank,alice).\nowns(eve,apple).\nsibling(carol,dave).\nbig(apple).\nparent(dave,bob).\nenemy(eve,george).\nsmall(ball).\ntall(bob).\nlikes(frank,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is bored.\nFor all Z, if there exists A such that object Z is light and person A likes object Z and person A is funny, then object Z is old.\nFor all Y, if there exists A such that object Y is light and person A likes object Y and person A is busy, then object Y is dirty.\nFor all X, if object X is wet, then object X is smooth.\nFor all Z, if there exists C such that object Z is heavy and person C is hungry, then object Z is new.\nFor all Z, if there exists B such that object Z is wet and person B dislikes object Z and person B is happy, then object Z is light.\nFor all X, Z, if there exists U such that person Z is happy and person X is angry and person X is a parent of person U, then person Z is a sibling of person X.\nFor all X, Y, if person Y is funny and person X is funny, then person Y is a friend of person X.\nFor all Z, if object Z is clean, then object Z is wet.\nFor all X, Y, if person Y is hungry and person X is happy, then person Y is a parent of person X.\nFor all X, Y, if there exists A such that person Y is busy and person X is tall and object A is small, then person Y is an enemy of person X.\nFor all X, Y, if person X is hungry and object Y is heavy, then person X owns object Y.\nFor all X, if object X is rough, then object X is new.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is busy and person X is funny, then person X is tall.\nFor all X, if person X is busy, then person X is tall.\n\nAnd the following facts:\ndave is weak.\ncarol is a sibling of frank.\nbook is new.\ndave is a sibling of bob.\nbob is funny.\neve is a parent of frank.\ncarol owns apple.\nfrank is a parent of alice.\neve owns apple.\ncarol is a sibling of dave.\napple is big.\ndave is a parent of bob.\neve is an enemy of george.\nball is small.\nbob is tall.\nfrank likes phone.\n\nQUESTION:\nIs frank is funny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1193,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "weak(dave).",
    "c": "friendly(X) :- weak(X).\ntired(X) :- friendly(X).\nsad(X) :- tired(X).\nexcited(X) :- sad(X).\ncalm(X) :- excited(X).\ncurious(X) :- calm(X).\nclever(X) :- curious(X).\nbrave(X) :- clever(X).\nstrong(X) :- brave(X).\nbored(X) :- strong(X).\nold(Z) :- light(Z), likes(A,Z), funny(A).\ndirty(Y) :- light(Y), likes(A,Y), busy(A).\nsmooth(X) :- wet(X).\nnew(Z) :- heavy(Z), hungry(C).\nlight(Z) :- wet(Z), dislikes(B,Z), happy(B).\nsibling(Z,X) :- happy(Z), angry(X), parent(X,U).\nfriend(Y,X) :- funny(Y), funny(X).\nwet(Z) :- clean(Z).\nparent(Y,X) :- hungry(Y), happy(X).\nenemy(Y,X) :- busy(Y), tall(X), small(A).\nowns(X,Y) :- hungry(X), heavy(Y).\nnew(X) :- rough(X).\nhappy(X) :- funny(X).\ntall(X) :- busy(X), funny(X).\ntall(X) :- busy(X).\nbored(dave).\nsibling(carol,frank).\nnew(book).\nsibling(dave,bob).\nfunny(bob).\nparent(eve,frank).\nowns(carol,apple).\nparent(frank,alice).\nowns(eve,apple).\nsibling(carol,dave).\nbig(apple).\nparent(dave,bob).\nenemy(eve,george).\nsmall(ball).\ntall(bob).\nlikes(frank,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is bored.\nFor all Z, if there exists A such that object Z is light and person A likes object Z and person A is funny, then object Z is old.\nFor all Y, if there exists A such that object Y is light and person A likes object Y and person A is busy, then object Y is dirty.\nFor all X, if object X is wet, then object X is smooth.\nFor all Z, if there exists C such that object Z is heavy and person C is hungry, then object Z is new.\nFor all Z, if there exists B such that object Z is wet and person B dislikes object Z and person B is happy, then object Z is light.\nFor all X, Z, if there exists U such that person Z is happy and person X is angry and person X is a parent of person U, then person Z is a sibling of person X.\nFor all X, Y, if person Y is funny and person X is funny, then person Y is a friend of person X.\nFor all Z, if object Z is clean, then object Z is wet.\nFor all X, Y, if person Y is hungry and person X is happy, then person Y is a parent of person X.\nFor all X, Y, if there exists A such that person Y is busy and person X is tall and object A is small, then person Y is an enemy of person X.\nFor all X, Y, if person X is hungry and object Y is heavy, then person X owns object Y.\nFor all X, if object X is rough, then object X is new.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is busy and person X is funny, then person X is tall.\nFor all X, if person X is busy, then person X is tall.\n\nAnd the following facts:\ndave is bored.\ncarol is a sibling of frank.\nbook is new.\ndave is a sibling of bob.\nbob is funny.\neve is a parent of frank.\ncarol owns apple.\nfrank is a parent of alice.\neve owns apple.\ncarol is a sibling of dave.\napple is big.\ndave is a parent of bob.\neve is an enemy of george.\nball is small.\nbob is tall.\nfrank likes phone.\n\nQUESTION:\nCould dave is weak explain dave is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1194,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(george).",
    "c": "friendly(X) :- weak(X).\ntired(X) :- friendly(X).\nsad(X) :- tired(X).\nexcited(X) :- sad(X).\ncalm(X) :- excited(X).\ncurious(X) :- calm(X).\nclever(X) :- curious(X).\nbrave(X) :- clever(X).\nstrong(X) :- brave(X).\nbored(X) :- strong(X).\nold(Z) :- light(Z), likes(A,Z), funny(A).\ndirty(Y) :- light(Y), likes(A,Y), busy(A).\nsmooth(X) :- wet(X).\nnew(Z) :- heavy(Z), hungry(C).\nlight(Z) :- wet(Z), dislikes(B,Z), happy(B).\nsibling(Z,X) :- happy(Z), angry(X), parent(X,U).\nfriend(Y,X) :- funny(Y), funny(X).\nwet(Z) :- clean(Z).\nparent(Y,X) :- hungry(Y), happy(X).\nenemy(Y,X) :- busy(Y), tall(X), small(A).\nowns(X,Y) :- hungry(X), heavy(Y).\nnew(X) :- rough(X).\nhappy(X) :- funny(X).\ntall(X) :- busy(X), funny(X).\ntall(X) :- busy(X).\nbored(dave).\nsibling(carol,frank).\nnew(book).\nsibling(dave,bob).\nfunny(bob).\nparent(eve,frank).\nowns(carol,apple).\nparent(frank,alice).\nowns(eve,apple).\nsibling(carol,dave).\nbig(apple).\nparent(dave,bob).\nenemy(eve,george).\nsmall(ball).\ntall(bob).\nlikes(frank,phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is friendly.\nFor all X, if person X is friendly, then person X is tired.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is calm.\nFor all X, if person X is calm, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is bored.\nFor all Z, if there exists A such that object Z is light and person A likes object Z and person A is funny, then object Z is old.\nFor all Y, if there exists A such that object Y is light and person A likes object Y and person A is busy, then object Y is dirty.\nFor all X, if object X is wet, then object X is smooth.\nFor all Z, if there exists C such that object Z is heavy and person C is hungry, then object Z is new.\nFor all Z, if there exists B such that object Z is wet and person B dislikes object Z and person B is happy, then object Z is light.\nFor all X, Z, if there exists U such that person Z is happy and person X is angry and person X is a parent of person U, then person Z is a sibling of person X.\nFor all X, Y, if person Y is funny and person X is funny, then person Y is a friend of person X.\nFor all Z, if object Z is clean, then object Z is wet.\nFor all X, Y, if person Y is hungry and person X is happy, then person Y is a parent of person X.\nFor all X, Y, if there exists A such that person Y is busy and person X is tall and object A is small, then person Y is an enemy of person X.\nFor all X, Y, if person X is hungry and object Y is heavy, then person X owns object Y.\nFor all X, if object X is rough, then object X is new.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is busy and person X is funny, then person X is tall.\nFor all X, if person X is busy, then person X is tall.\n\nAnd the following facts:\ndave is bored.\ncarol is a sibling of frank.\nbook is new.\ndave is a sibling of bob.\nbob is funny.\neve is a parent of frank.\ncarol owns apple.\nfrank is a parent of alice.\neve owns apple.\ncarol is a sibling of dave.\napple is big.\ndave is a parent of bob.\neve is an enemy of george.\nball is small.\nbob is tall.\nfrank likes phone.\n\nQUESTION:\nCould george is sad explain dave is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1195,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(alice).",
    "c": "brave(X) :- happy(X).\nstrong(X) :- brave(X).\nclever(X) :- strong(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\ncurious(X) :- angry(X).\nbusy(X) :- curious(X).\nfunny(X) :- busy(X).\nbored(X) :- funny(X).\nweak(X) :- bored(X).\nexcited(Y) :- sad(Y), clean(D).\nsmall(X) :- new(X), likes(B,X), hungry(B).\nsibling(X,Y) :- hungry(Y), sad(X).\nbig(Y) :- wet(Y), dislikes(U,Y), calm(U).\nexcited(Y) :- excited(Y), dislikes(Y,V), heavy(V).\nowns(Y,X) :- excited(Y), light(X).\nfriendly(X) :- friendly(X), owns(X,B), soft(B).\nwet(Y) :- hard(Y).\nclean(Y) :- new(Y), owns(U,Y), hungry(U).\nsad(X) :- hungry(X), excited(X).\ndislikes(X,Y) :- hungry(X), big(Y).\nfriend(X,Y) :- sad(X), excited(Y).\nbig(X) :- old(X).\ndirty(X) :- smooth(X), big(X).\nrough(X) :- hard(X), red(X).\nhappy(alice).\nsibling(dave,carol).\nbig(apple).\nhungry(bob).\nclean(phone).\nred(pencil).\nenemy(bob,george).\nsad(frank).\nsibling(dave,eve).\nrough(book).\nwet(book).\nowns(george,ball).\nhungry(dave).\nold(phone).\nowns(dave,pencil).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all Y, if there exists D such that person Y is sad and object D is clean, then person Y is excited.\nFor all X, if there exists B such that object X is new and person B likes object X and person B is hungry, then object X is small.\nFor all X, Y, if person Y is hungry and person X is sad, then person X is a sibling of person Y.\nFor all Y, if there exists U such that object Y is wet and person U dislikes object Y and person U is calm, then object Y is big.\nFor all Y, if there exists V such that person Y is excited and person Y dislikes object V and object V is heavy, then person Y is excited.\nFor all X, Y, if person Y is excited and object X is light, then person Y owns object X.\nFor all X, if there exists B such that person X is friendly and person X owns object B and object B is soft, then person X is friendly.\nFor all Y, if object Y is hard, then object Y is wet.\nFor all Y, if there exists U such that object Y is new and person U owns object Y and person U is hungry, then object Y is clean.\nFor all X, if person X is hungry and person X is excited, then person X is sad.\nFor all X, Y, if person X is hungry and object Y is big, then person X dislikes object Y.\nFor all X, Y, if person X is sad and person Y is excited, then person X is a friend of person Y.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is smooth and object X is big, then object X is dirty.\nFor all X, if object X is hard and object X is red, then object X is rough.\n\nAnd the following facts:\nalice is happy.\ndave is a sibling of carol.\napple is big.\nbob is hungry.\nphone is clean.\npencil is red.\nbob is an enemy of george.\nfrank is sad.\ndave is a sibling of eve.\nbook is rough.\nbook is wet.\ngeorge owns ball.\ndave is hungry.\nphone is old.\ndave owns pencil.\ncarol is an enemy of george.\n\nQUESTION:\nIs alice is weak true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1196,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(book).",
    "c": "brave(X) :- happy(X).\nstrong(X) :- brave(X).\nclever(X) :- strong(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\ncurious(X) :- angry(X).\nbusy(X) :- curious(X).\nfunny(X) :- busy(X).\nbored(X) :- funny(X).\nweak(X) :- bored(X).\nexcited(Y) :- sad(Y), clean(D).\nsmall(X) :- new(X), likes(B,X), hungry(B).\nsibling(X,Y) :- hungry(Y), sad(X).\nbig(Y) :- wet(Y), dislikes(U,Y), calm(U).\nexcited(Y) :- excited(Y), dislikes(Y,V), heavy(V).\nowns(Y,X) :- excited(Y), light(X).\nfriendly(X) :- friendly(X), owns(X,B), soft(B).\nwet(Y) :- hard(Y).\nclean(Y) :- new(Y), owns(U,Y), hungry(U).\nsad(X) :- hungry(X), excited(X).\ndislikes(X,Y) :- hungry(X), big(Y).\nfriend(X,Y) :- sad(X), excited(Y).\nbig(X) :- old(X).\ndirty(X) :- smooth(X), big(X).\nrough(X) :- hard(X), red(X).\nhappy(alice).\nsibling(dave,carol).\nbig(apple).\nhungry(bob).\nclean(phone).\nred(pencil).\nenemy(bob,george).\nsad(frank).\nsibling(dave,eve).\nrough(book).\nwet(book).\nowns(george,ball).\nhungry(dave).\nold(phone).\nowns(dave,pencil).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all Y, if there exists D such that person Y is sad and object D is clean, then person Y is excited.\nFor all X, if there exists B such that object X is new and person B likes object X and person B is hungry, then object X is small.\nFor all X, Y, if person Y is hungry and person X is sad, then person X is a sibling of person Y.\nFor all Y, if there exists U such that object Y is wet and person U dislikes object Y and person U is calm, then object Y is big.\nFor all Y, if there exists V such that person Y is excited and person Y dislikes object V and object V is heavy, then person Y is excited.\nFor all X, Y, if person Y is excited and object X is light, then person Y owns object X.\nFor all X, if there exists B such that person X is friendly and person X owns object B and object B is soft, then person X is friendly.\nFor all Y, if object Y is hard, then object Y is wet.\nFor all Y, if there exists U such that object Y is new and person U owns object Y and person U is hungry, then object Y is clean.\nFor all X, if person X is hungry and person X is excited, then person X is sad.\nFor all X, Y, if person X is hungry and object Y is big, then person X dislikes object Y.\nFor all X, Y, if person X is sad and person Y is excited, then person X is a friend of person Y.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is smooth and object X is big, then object X is dirty.\nFor all X, if object X is hard and object X is red, then object X is rough.\n\nAnd the following facts:\nalice is happy.\ndave is a sibling of carol.\napple is big.\nbob is hungry.\nphone is clean.\npencil is red.\nbob is an enemy of george.\nfrank is sad.\ndave is a sibling of eve.\nbook is rough.\nbook is wet.\ngeorge owns ball.\ndave is hungry.\nphone is old.\ndave owns pencil.\ncarol is an enemy of george.\n\nQUESTION:\nIs book is soft true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1197,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(alice).",
    "c": "brave(X) :- happy(X).\nstrong(X) :- brave(X).\nclever(X) :- strong(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\ncurious(X) :- angry(X).\nbusy(X) :- curious(X).\nfunny(X) :- busy(X).\nbored(X) :- funny(X).\nweak(X) :- bored(X).\nexcited(Y) :- sad(Y), clean(D).\nsmall(X) :- new(X), likes(B,X), hungry(B).\nsibling(X,Y) :- hungry(Y), sad(X).\nbig(Y) :- wet(Y), dislikes(U,Y), calm(U).\nexcited(Y) :- excited(Y), dislikes(Y,V), heavy(V).\nowns(Y,X) :- excited(Y), light(X).\nfriendly(X) :- friendly(X), owns(X,B), soft(B).\nwet(Y) :- hard(Y).\nclean(Y) :- new(Y), owns(U,Y), hungry(U).\nsad(X) :- hungry(X), excited(X).\ndislikes(X,Y) :- hungry(X), big(Y).\nfriend(X,Y) :- sad(X), excited(Y).\nbig(X) :- old(X).\ndirty(X) :- smooth(X), big(X).\nrough(X) :- hard(X), red(X).\nweak(alice).\nsibling(dave,carol).\nbig(apple).\nhungry(bob).\nclean(phone).\nred(pencil).\nenemy(bob,george).\nsad(frank).\nsibling(dave,eve).\nrough(book).\nwet(book).\nowns(george,ball).\nhungry(dave).\nold(phone).\nowns(dave,pencil).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all Y, if there exists D such that person Y is sad and object D is clean, then person Y is excited.\nFor all X, if there exists B such that object X is new and person B likes object X and person B is hungry, then object X is small.\nFor all X, Y, if person Y is hungry and person X is sad, then person X is a sibling of person Y.\nFor all Y, if there exists U such that object Y is wet and person U dislikes object Y and person U is calm, then object Y is big.\nFor all Y, if there exists V such that person Y is excited and person Y dislikes object V and object V is heavy, then person Y is excited.\nFor all X, Y, if person Y is excited and object X is light, then person Y owns object X.\nFor all X, if there exists B such that person X is friendly and person X owns object B and object B is soft, then person X is friendly.\nFor all Y, if object Y is hard, then object Y is wet.\nFor all Y, if there exists U such that object Y is new and person U owns object Y and person U is hungry, then object Y is clean.\nFor all X, if person X is hungry and person X is excited, then person X is sad.\nFor all X, Y, if person X is hungry and object Y is big, then person X dislikes object Y.\nFor all X, Y, if person X is sad and person Y is excited, then person X is a friend of person Y.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is smooth and object X is big, then object X is dirty.\nFor all X, if object X is hard and object X is red, then object X is rough.\n\nAnd the following facts:\nalice is weak.\ndave is a sibling of carol.\napple is big.\nbob is hungry.\nphone is clean.\npencil is red.\nbob is an enemy of george.\nfrank is sad.\ndave is a sibling of eve.\nbook is rough.\nbook is wet.\ngeorge owns ball.\ndave is hungry.\nphone is old.\ndave owns pencil.\ncarol is an enemy of george.\n\nQUESTION:\nCould alice is happy explain alice is weak?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1198,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(phone).",
    "c": "brave(X) :- happy(X).\nstrong(X) :- brave(X).\nclever(X) :- strong(X).\ntired(X) :- clever(X).\nangry(X) :- tired(X).\ncurious(X) :- angry(X).\nbusy(X) :- curious(X).\nfunny(X) :- busy(X).\nbored(X) :- funny(X).\nweak(X) :- bored(X).\nexcited(Y) :- sad(Y), clean(D).\nsmall(X) :- new(X), likes(B,X), hungry(B).\nsibling(X,Y) :- hungry(Y), sad(X).\nbig(Y) :- wet(Y), dislikes(U,Y), calm(U).\nexcited(Y) :- excited(Y), dislikes(Y,V), heavy(V).\nowns(Y,X) :- excited(Y), light(X).\nfriendly(X) :- friendly(X), owns(X,B), soft(B).\nwet(Y) :- hard(Y).\nclean(Y) :- new(Y), owns(U,Y), hungry(U).\nsad(X) :- hungry(X), excited(X).\ndislikes(X,Y) :- hungry(X), big(Y).\nfriend(X,Y) :- sad(X), excited(Y).\nbig(X) :- old(X).\ndirty(X) :- smooth(X), big(X).\nrough(X) :- hard(X), red(X).\nweak(alice).\nsibling(dave,carol).\nbig(apple).\nhungry(bob).\nclean(phone).\nred(pencil).\nenemy(bob,george).\nsad(frank).\nsibling(dave,eve).\nrough(book).\nwet(book).\nowns(george,ball).\nhungry(dave).\nold(phone).\nowns(dave,pencil).\nenemy(carol,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is happy, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is weak.\nFor all Y, if there exists D such that person Y is sad and object D is clean, then person Y is excited.\nFor all X, if there exists B such that object X is new and person B likes object X and person B is hungry, then object X is small.\nFor all X, Y, if person Y is hungry and person X is sad, then person X is a sibling of person Y.\nFor all Y, if there exists U such that object Y is wet and person U dislikes object Y and person U is calm, then object Y is big.\nFor all Y, if there exists V such that person Y is excited and person Y dislikes object V and object V is heavy, then person Y is excited.\nFor all X, Y, if person Y is excited and object X is light, then person Y owns object X.\nFor all X, if there exists B such that person X is friendly and person X owns object B and object B is soft, then person X is friendly.\nFor all Y, if object Y is hard, then object Y is wet.\nFor all Y, if there exists U such that object Y is new and person U owns object Y and person U is hungry, then object Y is clean.\nFor all X, if person X is hungry and person X is excited, then person X is sad.\nFor all X, Y, if person X is hungry and object Y is big, then person X dislikes object Y.\nFor all X, Y, if person X is sad and person Y is excited, then person X is a friend of person Y.\nFor all X, if object X is old, then object X is big.\nFor all X, if object X is smooth and object X is big, then object X is dirty.\nFor all X, if object X is hard and object X is red, then object X is rough.\n\nAnd the following facts:\nalice is weak.\ndave is a sibling of carol.\napple is big.\nbob is hungry.\nphone is clean.\npencil is red.\nbob is an enemy of george.\nfrank is sad.\ndave is a sibling of eve.\nbook is rough.\nbook is wet.\ngeorge owns ball.\ndave is hungry.\nphone is old.\ndave owns pencil.\ncarol is an enemy of george.\n\nQUESTION:\nCould phone is red explain alice is weak?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1199,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(george).",
    "c": "friendly(X) :- tired(X).\nbrave(X) :- friendly(X).\nangry(X) :- brave(X).\ncurious(X) :- angry(X).\ncalm(X) :- curious(X).\ntall(X) :- calm(X).\nweak(X) :- tall(X).\nsad(X) :- weak(X).\nexcited(X) :- sad(X).\nhappy(X) :- excited(X).\nfunny(X) :- happy(X).\nhungry(X) :- funny(X).\nbrave(X) :- hungry(X).\nclever(X) :- brave(X).\nbrave(X) :- clever(X).\nfunny(X) :- brave(X).\nbusy(X) :- funny(X).\nfunny(X) :- busy(X).\ntired(X) :- funny(X).\ncalm(X) :- tired(X).\nsmooth(Z) :- hard(Z), dislikes(A,Z), strong(A).\nparent(X,Y) :- strong(Y), strong(X).\nheavy(X) :- small(X), likes(W,X), bored(W).\nparent(X,Y) :- bored(X), bored(Y), enemy(X,Y).\nowns(X,Y) :- strong(X), wet(Y).\ntired(george).\nlikes(dave,phone).\nenemy(dave,bob).\nparent(alice,bob).\nsibling(frank,alice).\nenemy(carol,bob).\ndislikes(george,ball).\nenemy(frank,bob).\nsmooth(car).\nowns(dave,phone).\ndislikes(bob,phone).\nparent(bob,george).\nowns(alice,apple).\nsoft(pencil).\nenemy(carol,george).\nlikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is calm.\nFor all Z, if there exists A such that object Z is hard and person A dislikes object Z and person A is strong, then object Z is smooth.\nFor all X, Y, if person Y is strong and person X is strong, then person X is a parent of person Y.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is bored, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is bored and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is strong and object Y is wet, then person X owns object Y.\n\nAnd the following facts:\ngeorge is tired.\ndave likes phone.\ndave is an enemy of bob.\nalice is a parent of bob.\nfrank is a sibling of alice.\ncarol is an enemy of bob.\ngeorge dislikes ball.\nfrank is an enemy of bob.\ncar is smooth.\ndave owns phone.\nbob dislikes phone.\nbob is a parent of george.\nalice owns apple.\npencil is soft.\ncarol is an enemy of george.\nalice likes pencil.\n\nQUESTION:\nIs george is calm true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1200,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(alice).",
    "c": "friendly(X) :- tired(X).\nbrave(X) :- friendly(X).\nangry(X) :- brave(X).\ncurious(X) :- angry(X).\ncalm(X) :- curious(X).\ntall(X) :- calm(X).\nweak(X) :- tall(X).\nsad(X) :- weak(X).\nexcited(X) :- sad(X).\nhappy(X) :- excited(X).\nfunny(X) :- happy(X).\nhungry(X) :- funny(X).\nbrave(X) :- hungry(X).\nclever(X) :- brave(X).\nbrave(X) :- clever(X).\nfunny(X) :- brave(X).\nbusy(X) :- funny(X).\nfunny(X) :- busy(X).\ntired(X) :- funny(X).\ncalm(X) :- tired(X).\nsmooth(Z) :- hard(Z), dislikes(A,Z), strong(A).\nparent(X,Y) :- strong(Y), strong(X).\nheavy(X) :- small(X), likes(W,X), bored(W).\nparent(X,Y) :- bored(X), bored(Y), enemy(X,Y).\nowns(X,Y) :- strong(X), wet(Y).\ntired(george).\nlikes(dave,phone).\nenemy(dave,bob).\nparent(alice,bob).\nsibling(frank,alice).\nenemy(carol,bob).\ndislikes(george,ball).\nenemy(frank,bob).\nsmooth(car).\nowns(dave,phone).\ndislikes(bob,phone).\nparent(bob,george).\nowns(alice,apple).\nsoft(pencil).\nenemy(carol,george).\nlikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is calm.\nFor all Z, if there exists A such that object Z is hard and person A dislikes object Z and person A is strong, then object Z is smooth.\nFor all X, Y, if person Y is strong and person X is strong, then person X is a parent of person Y.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is bored, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is bored and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is strong and object Y is wet, then person X owns object Y.\n\nAnd the following facts:\ngeorge is tired.\ndave likes phone.\ndave is an enemy of bob.\nalice is a parent of bob.\nfrank is a sibling of alice.\ncarol is an enemy of bob.\ngeorge dislikes ball.\nfrank is an enemy of bob.\ncar is smooth.\ndave owns phone.\nbob dislikes phone.\nbob is a parent of george.\nalice owns apple.\npencil is soft.\ncarol is an enemy of george.\nalice likes pencil.\n\nQUESTION:\nIs alice is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1201,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(george).",
    "c": "friendly(X) :- tired(X).\nbrave(X) :- friendly(X).\nangry(X) :- brave(X).\ncurious(X) :- angry(X).\ncalm(X) :- curious(X).\ntall(X) :- calm(X).\nweak(X) :- tall(X).\nsad(X) :- weak(X).\nexcited(X) :- sad(X).\nhappy(X) :- excited(X).\nfunny(X) :- happy(X).\nhungry(X) :- funny(X).\nbrave(X) :- hungry(X).\nclever(X) :- brave(X).\nbrave(X) :- clever(X).\nfunny(X) :- brave(X).\nbusy(X) :- funny(X).\nfunny(X) :- busy(X).\ntired(X) :- funny(X).\ncalm(X) :- tired(X).\nsmooth(Z) :- hard(Z), dislikes(A,Z), strong(A).\nparent(X,Y) :- strong(Y), strong(X).\nheavy(X) :- small(X), likes(W,X), bored(W).\nparent(X,Y) :- bored(X), bored(Y), enemy(X,Y).\nowns(X,Y) :- strong(X), wet(Y).\ncalm(george).\nlikes(dave,phone).\nenemy(dave,bob).\nparent(alice,bob).\nsibling(frank,alice).\nenemy(carol,bob).\ndislikes(george,ball).\nenemy(frank,bob).\nsmooth(car).\nowns(dave,phone).\ndislikes(bob,phone).\nparent(bob,george).\nowns(alice,apple).\nsoft(pencil).\nenemy(carol,george).\nlikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is calm.\nFor all Z, if there exists A such that object Z is hard and person A dislikes object Z and person A is strong, then object Z is smooth.\nFor all X, Y, if person Y is strong and person X is strong, then person X is a parent of person Y.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is bored, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is bored and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is strong and object Y is wet, then person X owns object Y.\n\nAnd the following facts:\ngeorge is calm.\ndave likes phone.\ndave is an enemy of bob.\nalice is a parent of bob.\nfrank is a sibling of alice.\ncarol is an enemy of bob.\ngeorge dislikes ball.\nfrank is an enemy of bob.\ncar is smooth.\ndave owns phone.\nbob dislikes phone.\nbob is a parent of george.\nalice owns apple.\npencil is soft.\ncarol is an enemy of george.\nalice likes pencil.\n\nQUESTION:\nCould george is tired explain george is calm?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1202,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(carol).",
    "c": "friendly(X) :- tired(X).\nbrave(X) :- friendly(X).\nangry(X) :- brave(X).\ncurious(X) :- angry(X).\ncalm(X) :- curious(X).\ntall(X) :- calm(X).\nweak(X) :- tall(X).\nsad(X) :- weak(X).\nexcited(X) :- sad(X).\nhappy(X) :- excited(X).\nfunny(X) :- happy(X).\nhungry(X) :- funny(X).\nbrave(X) :- hungry(X).\nclever(X) :- brave(X).\nbrave(X) :- clever(X).\nfunny(X) :- brave(X).\nbusy(X) :- funny(X).\nfunny(X) :- busy(X).\ntired(X) :- funny(X).\ncalm(X) :- tired(X).\nsmooth(Z) :- hard(Z), dislikes(A,Z), strong(A).\nparent(X,Y) :- strong(Y), strong(X).\nheavy(X) :- small(X), likes(W,X), bored(W).\nparent(X,Y) :- bored(X), bored(Y), enemy(X,Y).\nowns(X,Y) :- strong(X), wet(Y).\ncalm(george).\nlikes(dave,phone).\nenemy(dave,bob).\nparent(alice,bob).\nsibling(frank,alice).\nenemy(carol,bob).\ndislikes(george,ball).\nenemy(frank,bob).\nsmooth(car).\nowns(dave,phone).\ndislikes(bob,phone).\nparent(bob,george).\nowns(alice,apple).\nsoft(pencil).\nenemy(carol,george).\nlikes(alice,pencil).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is angry.\nFor all X, if person X is angry, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is tall.\nFor all X, if person X is tall, then person X is weak.\nFor all X, if person X is weak, then person X is sad.\nFor all X, if person X is sad, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is brave.\nFor all X, if person X is brave, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is funny.\nFor all X, if person X is funny, then person X is busy.\nFor all X, if person X is busy, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is calm.\nFor all Z, if there exists A such that object Z is hard and person A dislikes object Z and person A is strong, then object Z is smooth.\nFor all X, Y, if person Y is strong and person X is strong, then person X is a parent of person Y.\nFor all X, if there exists W such that object X is small and person W likes object X and person W is bored, then object X is heavy.\nFor all X, Y, if person X is bored and person Y is bored and person X is an enemy of person Y, then person X is a parent of person Y.\nFor all X, Y, if person X is strong and object Y is wet, then person X owns object Y.\n\nAnd the following facts:\ngeorge is calm.\ndave likes phone.\ndave is an enemy of bob.\nalice is a parent of bob.\nfrank is a sibling of alice.\ncarol is an enemy of bob.\ngeorge dislikes ball.\nfrank is an enemy of bob.\ncar is smooth.\ndave owns phone.\nbob dislikes phone.\nbob is a parent of george.\nalice owns apple.\npencil is soft.\ncarol is an enemy of george.\nalice likes pencil.\n\nQUESTION:\nCould carol is angry explain george is calm?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1203,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(george).",
    "c": "excited(X) :- angry(X).\nfunny(X) :- excited(X).\nexcited(X) :- funny(X).\nbrave(X) :- excited(X).\nstrong(X) :- brave(X).\nangry(X) :- strong(X).\nweak(X) :- angry(X).\nclever(X) :- weak(X).\nbrave(X) :- clever(X).\nbusy(X) :- brave(X).\nbored(X) :- busy(X).\ncalm(X) :- bored(X).\nbrave(X) :- calm(X).\nexcited(X) :- brave(X).\ncurious(X) :- excited(X).\ntall(X) :- curious(X).\nfunny(X) :- tall(X).\nbored(X) :- funny(X).\nfunny(X) :- bored(X).\nbored(X) :- funny(X).\nbig(X) :- light(X), dislikes(U,X), friendly(U).\nsmooth(Y) :- old(Y), likes(U,Y), tired(U).\nfriend(X,Y) :- tired(X), hungry(Y).\nsmooth(X) :- big(X), light(X).\nhard(X) :- big(X).\nangry(george).\nowns(dave,phone).\nsibling(alice,dave).\nowns(alice,car).\nowns(eve,apple).\nsmooth(phone).\nfriend(dave,carol).\nlikes(bob,pencil).\ndislikes(george,ball).\nlikes(frank,pencil).\nfriend(eve,frank).\nsmall(apple).\nowns(george,ball).\nenemy(george,alice).\nenemy(george,dave).\nsibling(alice,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is angry.\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if there exists U such that object X is light and person U dislikes object X and person U is friendly, then object X is big.\nFor all Y, if there exists U such that object Y is old and person U likes object Y and person U is tired, then object Y is smooth.\nFor all X, Y, if person X is tired and person Y is hungry, then person X is a friend of person Y.\nFor all X, if object X is big and object X is light, then object X is smooth.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\ngeorge is angry.\ndave owns phone.\nalice is a sibling of dave.\nalice owns car.\neve owns apple.\nphone is smooth.\ndave is a friend of carol.\nbob likes pencil.\ngeorge dislikes ball.\nfrank likes pencil.\neve is a friend of frank.\napple is small.\ngeorge owns ball.\ngeorge is an enemy of alice.\ngeorge is an enemy of dave.\nalice is a sibling of george.\n\nQUESTION:\nIs george is bored true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1204,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "excited(george).",
    "c": "excited(X) :- angry(X).\nfunny(X) :- excited(X).\nexcited(X) :- funny(X).\nbrave(X) :- excited(X).\nstrong(X) :- brave(X).\nangry(X) :- strong(X).\nweak(X) :- angry(X).\nclever(X) :- weak(X).\nbrave(X) :- clever(X).\nbusy(X) :- brave(X).\nbored(X) :- busy(X).\ncalm(X) :- bored(X).\nbrave(X) :- calm(X).\nexcited(X) :- brave(X).\ncurious(X) :- excited(X).\ntall(X) :- curious(X).\nfunny(X) :- tall(X).\nbored(X) :- funny(X).\nfunny(X) :- bored(X).\nbored(X) :- funny(X).\nbig(X) :- light(X), dislikes(U,X), friendly(U).\nsmooth(Y) :- old(Y), likes(U,Y), tired(U).\nfriend(X,Y) :- tired(X), hungry(Y).\nsmooth(X) :- big(X), light(X).\nhard(X) :- big(X).\nangry(george).\nowns(dave,phone).\nsibling(alice,dave).\nowns(alice,car).\nowns(eve,apple).\nsmooth(phone).\nfriend(dave,carol).\nlikes(bob,pencil).\ndislikes(george,ball).\nlikes(frank,pencil).\nfriend(eve,frank).\nsmall(apple).\nowns(george,ball).\nenemy(george,alice).\nenemy(george,dave).\nsibling(alice,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is angry.\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if there exists U such that object X is light and person U dislikes object X and person U is friendly, then object X is big.\nFor all Y, if there exists U such that object Y is old and person U likes object Y and person U is tired, then object Y is smooth.\nFor all X, Y, if person X is tired and person Y is hungry, then person X is a friend of person Y.\nFor all X, if object X is big and object X is light, then object X is smooth.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\ngeorge is angry.\ndave owns phone.\nalice is a sibling of dave.\nalice owns car.\neve owns apple.\nphone is smooth.\ndave is a friend of carol.\nbob likes pencil.\ngeorge dislikes ball.\nfrank likes pencil.\neve is a friend of frank.\napple is small.\ngeorge owns ball.\ngeorge is an enemy of alice.\ngeorge is an enemy of dave.\nalice is a sibling of george.\n\nQUESTION:\nIs george is excited true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1205,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(george).",
    "c": "excited(X) :- angry(X).\nfunny(X) :- excited(X).\nexcited(X) :- funny(X).\nbrave(X) :- excited(X).\nstrong(X) :- brave(X).\nangry(X) :- strong(X).\nweak(X) :- angry(X).\nclever(X) :- weak(X).\nbrave(X) :- clever(X).\nbusy(X) :- brave(X).\nbored(X) :- busy(X).\ncalm(X) :- bored(X).\nbrave(X) :- calm(X).\nexcited(X) :- brave(X).\ncurious(X) :- excited(X).\ntall(X) :- curious(X).\nfunny(X) :- tall(X).\nbored(X) :- funny(X).\nfunny(X) :- bored(X).\nbored(X) :- funny(X).\nbig(X) :- light(X), dislikes(U,X), friendly(U).\nsmooth(Y) :- old(Y), likes(U,Y), tired(U).\nfriend(X,Y) :- tired(X), hungry(Y).\nsmooth(X) :- big(X), light(X).\nhard(X) :- big(X).\nbored(george).\nowns(dave,phone).\nsibling(alice,dave).\nowns(alice,car).\nowns(eve,apple).\nsmooth(phone).\nfriend(dave,carol).\nlikes(bob,pencil).\ndislikes(george,ball).\nlikes(frank,pencil).\nfriend(eve,frank).\nsmall(apple).\nowns(george,ball).\nenemy(george,alice).\nenemy(george,dave).\nsibling(alice,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is angry.\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if there exists U such that object X is light and person U dislikes object X and person U is friendly, then object X is big.\nFor all Y, if there exists U such that object Y is old and person U likes object Y and person U is tired, then object Y is smooth.\nFor all X, Y, if person X is tired and person Y is hungry, then person X is a friend of person Y.\nFor all X, if object X is big and object X is light, then object X is smooth.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\ngeorge is bored.\ndave owns phone.\nalice is a sibling of dave.\nalice owns car.\neve owns apple.\nphone is smooth.\ndave is a friend of carol.\nbob likes pencil.\ngeorge dislikes ball.\nfrank likes pencil.\neve is a friend of frank.\napple is small.\ngeorge owns ball.\ngeorge is an enemy of alice.\ngeorge is an enemy of dave.\nalice is a sibling of george.\n\nQUESTION:\nCould george is angry explain george is bored?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1206,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "rough(pencil).",
    "c": "excited(X) :- angry(X).\nfunny(X) :- excited(X).\nexcited(X) :- funny(X).\nbrave(X) :- excited(X).\nstrong(X) :- brave(X).\nangry(X) :- strong(X).\nweak(X) :- angry(X).\nclever(X) :- weak(X).\nbrave(X) :- clever(X).\nbusy(X) :- brave(X).\nbored(X) :- busy(X).\ncalm(X) :- bored(X).\nbrave(X) :- calm(X).\nexcited(X) :- brave(X).\ncurious(X) :- excited(X).\ntall(X) :- curious(X).\nfunny(X) :- tall(X).\nbored(X) :- funny(X).\nfunny(X) :- bored(X).\nbored(X) :- funny(X).\nbig(X) :- light(X), dislikes(U,X), friendly(U).\nsmooth(Y) :- old(Y), likes(U,Y), tired(U).\nfriend(X,Y) :- tired(X), hungry(Y).\nsmooth(X) :- big(X), light(X).\nhard(X) :- big(X).\nbored(george).\nowns(dave,phone).\nsibling(alice,dave).\nowns(alice,car).\nowns(eve,apple).\nsmooth(phone).\nfriend(dave,carol).\nlikes(bob,pencil).\ndislikes(george,ball).\nlikes(frank,pencil).\nfriend(eve,frank).\nsmall(apple).\nowns(george,ball).\nenemy(george,alice).\nenemy(george,dave).\nsibling(alice,george).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is excited.\nFor all X, if person X is excited, then person X is funny.\nFor all X, if person X is funny, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is strong, then person X is angry.\nFor all X, if person X is angry, then person X is weak.\nFor all X, if person X is weak, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is busy.\nFor all X, if person X is busy, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is curious.\nFor all X, if person X is curious, then person X is tall.\nFor all X, if person X is tall, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if there exists U such that object X is light and person U dislikes object X and person U is friendly, then object X is big.\nFor all Y, if there exists U such that object Y is old and person U likes object Y and person U is tired, then object Y is smooth.\nFor all X, Y, if person X is tired and person Y is hungry, then person X is a friend of person Y.\nFor all X, if object X is big and object X is light, then object X is smooth.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\ngeorge is bored.\ndave owns phone.\nalice is a sibling of dave.\nalice owns car.\neve owns apple.\nphone is smooth.\ndave is a friend of carol.\nbob likes pencil.\ngeorge dislikes ball.\nfrank likes pencil.\neve is a friend of frank.\napple is small.\ngeorge owns ball.\ngeorge is an enemy of alice.\ngeorge is an enemy of dave.\nalice is a sibling of george.\n\nQUESTION:\nCould pencil is rough explain george is bored?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1207,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(eve).",
    "c": "funny(X) :- tired(X).\nhungry(X) :- funny(X).\nstrong(X) :- hungry(X).\nbrave(X) :- strong(X).\nexcited(X) :- brave(X).\nhappy(X) :- excited(X).\nweak(X) :- happy(X).\nbusy(X) :- weak(X).\nangry(X) :- busy(X).\ntall(X) :- angry(X).\ncalm(X) :- tall(X).\nbored(X) :- calm(X).\nfriendly(X) :- bored(X).\nsad(X) :- friendly(X).\ncurious(X) :- sad(X).\nclever(X) :- curious(X).\nclever(X) :- clever(X).\nbrave(X) :- clever(X).\nfriendly(X) :- brave(X).\nhungry(X) :- friendly(X).\nsmooth(Y) :- big(Y), heavy(D).\nheavy(Y) :- red(Y), likes(V,Y).\ndislikes(X,Y) :- rough(Y).\nsoft(X) :- big(X).\nsmall(X) :- heavy(X), heavy(X).\ntired(eve).\nfriend(carol,alice).\nsmall(apple).\nbig(phone).\nfriend(george,dave).\nfriend(dave,eve).\nlikes(george,ball).\nlikes(alice,book).\nfriend(frank,eve).\nlight(car).\ndislikes(eve,car).\nhard(ball).\ndislikes(dave,book).\nsibling(frank,george).\nparent(alice,carol).\nsmall(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is hungry.\nFor all Y, if there exists D such that object Y is big and object D is heavy, then object Y is smooth.\nFor all Y, if there exists V such that object Y is red and person V likes object Y, then object Y is heavy.\nFor all X, Y, if object Y is rough, then person X dislikes object Y.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is heavy and object X is heavy, then object X is small.\n\nAnd the following facts:\neve is tired.\ncarol is a friend of alice.\napple is small.\nphone is big.\ngeorge is a friend of dave.\ndave is a friend of eve.\ngeorge likes ball.\nalice likes book.\nfrank is a friend of eve.\ncar is light.\neve dislikes car.\nball is hard.\ndave dislikes book.\nfrank is a sibling of george.\nalice is a parent of carol.\nphone is small.\n\nQUESTION:\nIs eve is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1208,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(phone).",
    "c": "funny(X) :- tired(X).\nhungry(X) :- funny(X).\nstrong(X) :- hungry(X).\nbrave(X) :- strong(X).\nexcited(X) :- brave(X).\nhappy(X) :- excited(X).\nweak(X) :- happy(X).\nbusy(X) :- weak(X).\nangry(X) :- busy(X).\ntall(X) :- angry(X).\ncalm(X) :- tall(X).\nbored(X) :- calm(X).\nfriendly(X) :- bored(X).\nsad(X) :- friendly(X).\ncurious(X) :- sad(X).\nclever(X) :- curious(X).\nclever(X) :- clever(X).\nbrave(X) :- clever(X).\nfriendly(X) :- brave(X).\nhungry(X) :- friendly(X).\nsmooth(Y) :- big(Y), heavy(D).\nheavy(Y) :- red(Y), likes(V,Y).\ndislikes(X,Y) :- rough(Y).\nsoft(X) :- big(X).\nsmall(X) :- heavy(X), heavy(X).\ntired(eve).\nfriend(carol,alice).\nsmall(apple).\nbig(phone).\nfriend(george,dave).\nfriend(dave,eve).\nlikes(george,ball).\nlikes(alice,book).\nfriend(frank,eve).\nlight(car).\ndislikes(eve,car).\nhard(ball).\ndislikes(dave,book).\nsibling(frank,george).\nparent(alice,carol).\nsmall(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is hungry.\nFor all Y, if there exists D such that object Y is big and object D is heavy, then object Y is smooth.\nFor all Y, if there exists V such that object Y is red and person V likes object Y, then object Y is heavy.\nFor all X, Y, if object Y is rough, then person X dislikes object Y.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is heavy and object X is heavy, then object X is small.\n\nAnd the following facts:\neve is tired.\ncarol is a friend of alice.\napple is small.\nphone is big.\ngeorge is a friend of dave.\ndave is a friend of eve.\ngeorge likes ball.\nalice likes book.\nfrank is a friend of eve.\ncar is light.\neve dislikes car.\nball is hard.\ndave dislikes book.\nfrank is a sibling of george.\nalice is a parent of carol.\nphone is small.\n\nQUESTION:\nIs phone is old true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1209,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(eve).",
    "c": "funny(X) :- tired(X).\nhungry(X) :- funny(X).\nstrong(X) :- hungry(X).\nbrave(X) :- strong(X).\nexcited(X) :- brave(X).\nhappy(X) :- excited(X).\nweak(X) :- happy(X).\nbusy(X) :- weak(X).\nangry(X) :- busy(X).\ntall(X) :- angry(X).\ncalm(X) :- tall(X).\nbored(X) :- calm(X).\nfriendly(X) :- bored(X).\nsad(X) :- friendly(X).\ncurious(X) :- sad(X).\nclever(X) :- curious(X).\nclever(X) :- clever(X).\nbrave(X) :- clever(X).\nfriendly(X) :- brave(X).\nhungry(X) :- friendly(X).\nsmooth(Y) :- big(Y), heavy(D).\nheavy(Y) :- red(Y), likes(V,Y).\ndislikes(X,Y) :- rough(Y).\nsoft(X) :- big(X).\nsmall(X) :- heavy(X), heavy(X).\nhungry(eve).\nfriend(carol,alice).\nsmall(apple).\nbig(phone).\nfriend(george,dave).\nfriend(dave,eve).\nlikes(george,ball).\nlikes(alice,book).\nfriend(frank,eve).\nlight(car).\ndislikes(eve,car).\nhard(ball).\ndislikes(dave,book).\nsibling(frank,george).\nparent(alice,carol).\nsmall(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is hungry.\nFor all Y, if there exists D such that object Y is big and object D is heavy, then object Y is smooth.\nFor all Y, if there exists V such that object Y is red and person V likes object Y, then object Y is heavy.\nFor all X, Y, if object Y is rough, then person X dislikes object Y.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is heavy and object X is heavy, then object X is small.\n\nAnd the following facts:\neve is hungry.\ncarol is a friend of alice.\napple is small.\nphone is big.\ngeorge is a friend of dave.\ndave is a friend of eve.\ngeorge likes ball.\nalice likes book.\nfrank is a friend of eve.\ncar is light.\neve dislikes car.\nball is hard.\ndave dislikes book.\nfrank is a sibling of george.\nalice is a parent of carol.\nphone is small.\n\nQUESTION:\nCould eve is tired explain eve is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1210,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(pencil).",
    "c": "funny(X) :- tired(X).\nhungry(X) :- funny(X).\nstrong(X) :- hungry(X).\nbrave(X) :- strong(X).\nexcited(X) :- brave(X).\nhappy(X) :- excited(X).\nweak(X) :- happy(X).\nbusy(X) :- weak(X).\nangry(X) :- busy(X).\ntall(X) :- angry(X).\ncalm(X) :- tall(X).\nbored(X) :- calm(X).\nfriendly(X) :- bored(X).\nsad(X) :- friendly(X).\ncurious(X) :- sad(X).\nclever(X) :- curious(X).\nclever(X) :- clever(X).\nbrave(X) :- clever(X).\nfriendly(X) :- brave(X).\nhungry(X) :- friendly(X).\nsmooth(Y) :- big(Y), heavy(D).\nheavy(Y) :- red(Y), likes(V,Y).\ndislikes(X,Y) :- rough(Y).\nsoft(X) :- big(X).\nsmall(X) :- heavy(X), heavy(X).\nhungry(eve).\nfriend(carol,alice).\nsmall(apple).\nbig(phone).\nfriend(george,dave).\nfriend(dave,eve).\nlikes(george,ball).\nlikes(alice,book).\nfriend(frank,eve).\nlight(car).\ndislikes(eve,car).\nhard(ball).\ndislikes(dave,book).\nsibling(frank,george).\nparent(alice,carol).\nsmall(phone).",
    "natural language": "You are given the following information:\nFor all X, if person X is tired, then person X is funny.\nFor all X, if person X is funny, then person X is hungry.\nFor all X, if person X is hungry, then person X is strong.\nFor all X, if person X is strong, then person X is brave.\nFor all X, if person X is brave, then person X is excited.\nFor all X, if person X is excited, then person X is happy.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is weak, then person X is busy.\nFor all X, if person X is busy, then person X is angry.\nFor all X, if person X is angry, then person X is tall.\nFor all X, if person X is tall, then person X is calm.\nFor all X, if person X is calm, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is curious.\nFor all X, if person X is curious, then person X is clever.\nFor all X, if person X is clever, then person X is clever.\nFor all X, if person X is clever, then person X is brave.\nFor all X, if person X is brave, then person X is friendly.\nFor all X, if person X is friendly, then person X is hungry.\nFor all Y, if there exists D such that object Y is big and object D is heavy, then object Y is smooth.\nFor all Y, if there exists V such that object Y is red and person V likes object Y, then object Y is heavy.\nFor all X, Y, if object Y is rough, then person X dislikes object Y.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is heavy and object X is heavy, then object X is small.\n\nAnd the following facts:\neve is hungry.\ncarol is a friend of alice.\napple is small.\nphone is big.\ngeorge is a friend of dave.\ndave is a friend of eve.\ngeorge likes ball.\nalice likes book.\nfrank is a friend of eve.\ncar is light.\neve dislikes car.\nball is hard.\ndave dislikes book.\nfrank is a sibling of george.\nalice is a parent of carol.\nphone is small.\n\nQUESTION:\nCould pencil is smooth explain eve is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1211,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(frank).",
    "c": "busy(X) :- strong(X).\nexcited(X) :- busy(X).\nbrave(X) :- excited(X).\nsad(X) :- brave(X).\ncalm(X) :- sad(X).\nhungry(X) :- calm(X).\nhappy(X) :- hungry(X).\nclever(X) :- happy(X).\ncurious(X) :- clever(X).\nangry(X) :- curious(X).\ntired(X) :- angry(X).\nweak(X) :- tired(X).\ntall(X) :- weak(X).\nbored(X) :- tall(X).\nfriendly(X) :- bored(X).\nfunny(X) :- friendly(X).\nangry(X) :- funny(X).\nclever(X) :- angry(X).\nhungry(X) :- clever(X).\nhappy(X) :- hungry(X).\nrough(Y) :- clean(Y).\nheavy(X) :- light(X), dislikes(A,X).\nhard(X) :- new(X).\nsoft(Z) :- red(Z), dislikes(W,Z).\nsoft(X) :- small(X).\nstrong(frank).\nowns(dave,car).\nfriend(george,bob).\nenemy(eve,bob).\nowns(george,car).\nfriend(frank,alice).\nlikes(frank,pencil).\nfriend(alice,george).\nsibling(carol,george).\nlikes(george,book).\nold(ball).\nsibling(eve,george).\ndislikes(bob,book).\nold(book).\nowns(george,pencil).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all Y, if object Y is clean, then object Y is rough.\nFor all X, if there exists A such that object X is light and person A dislikes object X, then object X is heavy.\nFor all X, if object X is new, then object X is hard.\nFor all Z, if there exists W such that object Z is red and person W dislikes object Z, then object Z is soft.\nFor all X, if object X is small, then object X is soft.\n\nAnd the following facts:\nfrank is strong.\ndave owns car.\ngeorge is a friend of bob.\neve is an enemy of bob.\ngeorge owns car.\nfrank is a friend of alice.\nfrank likes pencil.\nalice is a friend of george.\ncarol is a sibling of george.\ngeorge likes book.\nball is old.\neve is a sibling of george.\nbob dislikes book.\nbook is old.\ngeorge owns pencil.\ndave is a friend of frank.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1212,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "excited(dave).",
    "c": "busy(X) :- strong(X).\nexcited(X) :- busy(X).\nbrave(X) :- excited(X).\nsad(X) :- brave(X).\ncalm(X) :- sad(X).\nhungry(X) :- calm(X).\nhappy(X) :- hungry(X).\nclever(X) :- happy(X).\ncurious(X) :- clever(X).\nangry(X) :- curious(X).\ntired(X) :- angry(X).\nweak(X) :- tired(X).\ntall(X) :- weak(X).\nbored(X) :- tall(X).\nfriendly(X) :- bored(X).\nfunny(X) :- friendly(X).\nangry(X) :- funny(X).\nclever(X) :- angry(X).\nhungry(X) :- clever(X).\nhappy(X) :- hungry(X).\nrough(Y) :- clean(Y).\nheavy(X) :- light(X), dislikes(A,X).\nhard(X) :- new(X).\nsoft(Z) :- red(Z), dislikes(W,Z).\nsoft(X) :- small(X).\nstrong(frank).\nowns(dave,car).\nfriend(george,bob).\nenemy(eve,bob).\nowns(george,car).\nfriend(frank,alice).\nlikes(frank,pencil).\nfriend(alice,george).\nsibling(carol,george).\nlikes(george,book).\nold(ball).\nsibling(eve,george).\ndislikes(bob,book).\nold(book).\nowns(george,pencil).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all Y, if object Y is clean, then object Y is rough.\nFor all X, if there exists A such that object X is light and person A dislikes object X, then object X is heavy.\nFor all X, if object X is new, then object X is hard.\nFor all Z, if there exists W such that object Z is red and person W dislikes object Z, then object Z is soft.\nFor all X, if object X is small, then object X is soft.\n\nAnd the following facts:\nfrank is strong.\ndave owns car.\ngeorge is a friend of bob.\neve is an enemy of bob.\ngeorge owns car.\nfrank is a friend of alice.\nfrank likes pencil.\nalice is a friend of george.\ncarol is a sibling of george.\ngeorge likes book.\nball is old.\neve is a sibling of george.\nbob dislikes book.\nbook is old.\ngeorge owns pencil.\ndave is a friend of frank.\n\nQUESTION:\nIs dave is excited true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1213,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "strong(frank).",
    "c": "busy(X) :- strong(X).\nexcited(X) :- busy(X).\nbrave(X) :- excited(X).\nsad(X) :- brave(X).\ncalm(X) :- sad(X).\nhungry(X) :- calm(X).\nhappy(X) :- hungry(X).\nclever(X) :- happy(X).\ncurious(X) :- clever(X).\nangry(X) :- curious(X).\ntired(X) :- angry(X).\nweak(X) :- tired(X).\ntall(X) :- weak(X).\nbored(X) :- tall(X).\nfriendly(X) :- bored(X).\nfunny(X) :- friendly(X).\nangry(X) :- funny(X).\nclever(X) :- angry(X).\nhungry(X) :- clever(X).\nhappy(X) :- hungry(X).\nrough(Y) :- clean(Y).\nheavy(X) :- light(X), dislikes(A,X).\nhard(X) :- new(X).\nsoft(Z) :- red(Z), dislikes(W,Z).\nsoft(X) :- small(X).\nhappy(frank).\nowns(dave,car).\nfriend(george,bob).\nenemy(eve,bob).\nowns(george,car).\nfriend(frank,alice).\nlikes(frank,pencil).\nfriend(alice,george).\nsibling(carol,george).\nlikes(george,book).\nold(ball).\nsibling(eve,george).\ndislikes(bob,book).\nold(book).\nowns(george,pencil).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all Y, if object Y is clean, then object Y is rough.\nFor all X, if there exists A such that object X is light and person A dislikes object X, then object X is heavy.\nFor all X, if object X is new, then object X is hard.\nFor all Z, if there exists W such that object Z is red and person W dislikes object Z, then object Z is soft.\nFor all X, if object X is small, then object X is soft.\n\nAnd the following facts:\nfrank is happy.\ndave owns car.\ngeorge is a friend of bob.\neve is an enemy of bob.\ngeorge owns car.\nfrank is a friend of alice.\nfrank likes pencil.\nalice is a friend of george.\ncarol is a sibling of george.\ngeorge likes book.\nball is old.\neve is a sibling of george.\nbob dislikes book.\nbook is old.\ngeorge owns pencil.\ndave is a friend of frank.\n\nQUESTION:\nCould frank is strong explain frank is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1214,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "calm(eve).",
    "c": "busy(X) :- strong(X).\nexcited(X) :- busy(X).\nbrave(X) :- excited(X).\nsad(X) :- brave(X).\ncalm(X) :- sad(X).\nhungry(X) :- calm(X).\nhappy(X) :- hungry(X).\nclever(X) :- happy(X).\ncurious(X) :- clever(X).\nangry(X) :- curious(X).\ntired(X) :- angry(X).\nweak(X) :- tired(X).\ntall(X) :- weak(X).\nbored(X) :- tall(X).\nfriendly(X) :- bored(X).\nfunny(X) :- friendly(X).\nangry(X) :- funny(X).\nclever(X) :- angry(X).\nhungry(X) :- clever(X).\nhappy(X) :- hungry(X).\nrough(Y) :- clean(Y).\nheavy(X) :- light(X), dislikes(A,X).\nhard(X) :- new(X).\nsoft(Z) :- red(Z), dislikes(W,Z).\nsoft(X) :- small(X).\nhappy(frank).\nowns(dave,car).\nfriend(george,bob).\nenemy(eve,bob).\nowns(george,car).\nfriend(frank,alice).\nlikes(frank,pencil).\nfriend(alice,george).\nsibling(carol,george).\nlikes(george,book).\nold(ball).\nsibling(eve,george).\ndislikes(bob,book).\nold(book).\nowns(george,pencil).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nFor all X, if person X is strong, then person X is busy.\nFor all X, if person X is busy, then person X is excited.\nFor all X, if person X is excited, then person X is brave.\nFor all X, if person X is brave, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is clever.\nFor all X, if person X is clever, then person X is curious.\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is tired.\nFor all X, if person X is tired, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is funny.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is angry, then person X is clever.\nFor all X, if person X is clever, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all Y, if object Y is clean, then object Y is rough.\nFor all X, if there exists A such that object X is light and person A dislikes object X, then object X is heavy.\nFor all X, if object X is new, then object X is hard.\nFor all Z, if there exists W such that object Z is red and person W dislikes object Z, then object Z is soft.\nFor all X, if object X is small, then object X is soft.\n\nAnd the following facts:\nfrank is happy.\ndave owns car.\ngeorge is a friend of bob.\neve is an enemy of bob.\ngeorge owns car.\nfrank is a friend of alice.\nfrank likes pencil.\nalice is a friend of george.\ncarol is a sibling of george.\ngeorge likes book.\nball is old.\neve is a sibling of george.\nbob dislikes book.\nbook is old.\ngeorge owns pencil.\ndave is a friend of frank.\n\nQUESTION:\nCould eve is calm explain frank is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1215,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(frank).",
    "c": "clever(X) :- bored(X).\nold(Z) :- heavy(Z), owns(U,Z), calm(U).\nred(Z) :- wet(Z), owns(W,Z), excited(W).\ndirty(X) :- new(X), owns(B,X), funny(B).\nold(Y) :- smooth(Y).\nfriend(Z,X) :- tired(Z), hungry(X).\nweak(Y) :- calm(Y), sibling(Y,W), funny(W).\nold(Z) :- smooth(Z), likes(U,Z), happy(U).\nbig(Z) :- small(Z).\nold(Z) :- soft(Z), likes(B,Z), tall(B).\nbig(Z) :- old(Z), owns(V,Z), sad(V).\nrough(X) :- light(X), dislikes(A,X), brave(A).\nhappy(X) :- weak(X), friend(X,U), strong(U).\ncurious(X) :- busy(X), strong(X).\nred(X) :- rough(X).\ncurious(X) :- weak(X).\ncalm(X) :- funny(X).\nangry(X) :- tall(X).\nfriend(X,Y) :- sad(X), curious(Y), sibling(X,Y).\nclean(X) :- new(X).\nfriend(X,Y) :- sad(X), sad(Y), parent(X,Y).\nfriendly(X) :- brave(X), strong(X).\nweak(X) :- busy(X), curious(X).\nhard(X) :- dirty(X).\nrough(X) :- light(X).\nbored(frank).\nenemy(eve,dave).\nowns(dave,ball).\nlight(phone).\ndislikes(bob,ball).\nfriend(bob,george).\nexcited(dave).\nbusy(bob).\ncurious(eve).\nweak(frank).\nsmall(phone).\nsibling(bob,eve).\ntired(eve).\nenemy(george,bob).\nfriend(bob,carol).\nfriend(george,bob).\nparent(frank,eve).\nsibling(dave,alice).\nsibling(eve,dave).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is clever.\nFor all Z, if there exists U such that object Z is heavy and person U owns object Z and person U is calm, then object Z is old.\nFor all Z, if there exists W such that object Z is wet and person W owns object Z and person W is excited, then object Z is red.\nFor all X, if there exists B such that object X is new and person B owns object X and person B is funny, then object X is dirty.\nFor all Y, if object Y is smooth, then object Y is old.\nFor all X, Z, if person Z is tired and person X is hungry, then person Z is a friend of person X.\nFor all Y, if there exists W such that person Y is calm and person Y is a sibling of person W and person W is funny, then person Y is weak.\nFor all Z, if there exists U such that object Z is smooth and person U likes object Z and person U is happy, then object Z is old.\nFor all Z, if object Z is small, then object Z is big.\nFor all Z, if there exists B such that object Z is soft and person B likes object Z and person B is tall, then object Z is old.\nFor all Z, if there exists V such that object Z is old and person V owns object Z and person V is sad, then object Z is big.\nFor all X, if there exists A such that object X is light and person A dislikes object X and person A is brave, then object X is rough.\nFor all X, if there exists U such that person X is weak and person X is a friend of person U and person U is strong, then person X is happy.\nFor all X, if person X is busy and person X is strong, then person X is curious.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is tall, then person X is angry.\nFor all X, Y, if person X is sad and person Y is curious and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is new, then object X is clean.\nFor all X, Y, if person X is sad and person Y is sad and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if person X is brave and person X is strong, then person X is friendly.\nFor all X, if person X is busy and person X is curious, then person X is weak.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is light, then object X is rough.\n\nAnd the following facts:\nfrank is bored.\neve is an enemy of dave.\ndave owns ball.\nphone is light.\nbob dislikes ball.\nbob is a friend of george.\ndave is excited.\nbob is busy.\neve is curious.\nfrank is weak.\nphone is small.\nbob is a sibling of eve.\neve is tired.\ngeorge is an enemy of bob.\nbob is a friend of carol.\ngeorge is a friend of bob.\nfrank is a parent of eve.\ndave is a sibling of alice.\neve is a sibling of dave.\ndave is a sibling of eve.\n\nQUESTION:\nIs frank is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1216,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(eve).",
    "c": "clever(X) :- bored(X).\nold(Z) :- heavy(Z), owns(U,Z), calm(U).\nred(Z) :- wet(Z), owns(W,Z), excited(W).\ndirty(X) :- new(X), owns(B,X), funny(B).\nold(Y) :- smooth(Y).\nfriend(Z,X) :- tired(Z), hungry(X).\nweak(Y) :- calm(Y), sibling(Y,W), funny(W).\nold(Z) :- smooth(Z), likes(U,Z), happy(U).\nbig(Z) :- small(Z).\nold(Z) :- soft(Z), likes(B,Z), tall(B).\nbig(Z) :- old(Z), owns(V,Z), sad(V).\nrough(X) :- light(X), dislikes(A,X), brave(A).\nhappy(X) :- weak(X), friend(X,U), strong(U).\ncurious(X) :- busy(X), strong(X).\nred(X) :- rough(X).\ncurious(X) :- weak(X).\ncalm(X) :- funny(X).\nangry(X) :- tall(X).\nfriend(X,Y) :- sad(X), curious(Y), sibling(X,Y).\nclean(X) :- new(X).\nfriend(X,Y) :- sad(X), sad(Y), parent(X,Y).\nfriendly(X) :- brave(X), strong(X).\nweak(X) :- busy(X), curious(X).\nhard(X) :- dirty(X).\nrough(X) :- light(X).\nbored(frank).\nenemy(eve,dave).\nowns(dave,ball).\nlight(phone).\ndislikes(bob,ball).\nfriend(bob,george).\nexcited(dave).\nbusy(bob).\ncurious(eve).\nweak(frank).\nsmall(phone).\nsibling(bob,eve).\ntired(eve).\nenemy(george,bob).\nfriend(bob,carol).\nfriend(george,bob).\nparent(frank,eve).\nsibling(dave,alice).\nsibling(eve,dave).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is clever.\nFor all Z, if there exists U such that object Z is heavy and person U owns object Z and person U is calm, then object Z is old.\nFor all Z, if there exists W such that object Z is wet and person W owns object Z and person W is excited, then object Z is red.\nFor all X, if there exists B such that object X is new and person B owns object X and person B is funny, then object X is dirty.\nFor all Y, if object Y is smooth, then object Y is old.\nFor all X, Z, if person Z is tired and person X is hungry, then person Z is a friend of person X.\nFor all Y, if there exists W such that person Y is calm and person Y is a sibling of person W and person W is funny, then person Y is weak.\nFor all Z, if there exists U such that object Z is smooth and person U likes object Z and person U is happy, then object Z is old.\nFor all Z, if object Z is small, then object Z is big.\nFor all Z, if there exists B such that object Z is soft and person B likes object Z and person B is tall, then object Z is old.\nFor all Z, if there exists V such that object Z is old and person V owns object Z and person V is sad, then object Z is big.\nFor all X, if there exists A such that object X is light and person A dislikes object X and person A is brave, then object X is rough.\nFor all X, if there exists U such that person X is weak and person X is a friend of person U and person U is strong, then person X is happy.\nFor all X, if person X is busy and person X is strong, then person X is curious.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is tall, then person X is angry.\nFor all X, Y, if person X is sad and person Y is curious and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is new, then object X is clean.\nFor all X, Y, if person X is sad and person Y is sad and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if person X is brave and person X is strong, then person X is friendly.\nFor all X, if person X is busy and person X is curious, then person X is weak.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is light, then object X is rough.\n\nAnd the following facts:\nfrank is bored.\neve is an enemy of dave.\ndave owns ball.\nphone is light.\nbob dislikes ball.\nbob is a friend of george.\ndave is excited.\nbob is busy.\neve is curious.\nfrank is weak.\nphone is small.\nbob is a sibling of eve.\neve is tired.\ngeorge is an enemy of bob.\nbob is a friend of carol.\ngeorge is a friend of bob.\nfrank is a parent of eve.\ndave is a sibling of alice.\neve is a sibling of dave.\ndave is a sibling of eve.\n\nQUESTION:\nIs eve is angry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1217,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(frank).",
    "c": "clever(X) :- bored(X).\nold(Z) :- heavy(Z), owns(U,Z), calm(U).\nred(Z) :- wet(Z), owns(W,Z), excited(W).\ndirty(X) :- new(X), owns(B,X), funny(B).\nold(Y) :- smooth(Y).\nfriend(Z,X) :- tired(Z), hungry(X).\nweak(Y) :- calm(Y), sibling(Y,W), funny(W).\nold(Z) :- smooth(Z), likes(U,Z), happy(U).\nbig(Z) :- small(Z).\nold(Z) :- soft(Z), likes(B,Z), tall(B).\nbig(Z) :- old(Z), owns(V,Z), sad(V).\nrough(X) :- light(X), dislikes(A,X), brave(A).\nhappy(X) :- weak(X), friend(X,U), strong(U).\ncurious(X) :- busy(X), strong(X).\nred(X) :- rough(X).\ncurious(X) :- weak(X).\ncalm(X) :- funny(X).\nangry(X) :- tall(X).\nfriend(X,Y) :- sad(X), curious(Y), sibling(X,Y).\nclean(X) :- new(X).\nfriend(X,Y) :- sad(X), sad(Y), parent(X,Y).\nfriendly(X) :- brave(X), strong(X).\nweak(X) :- busy(X), curious(X).\nhard(X) :- dirty(X).\nrough(X) :- light(X).\nclever(frank).\nenemy(eve,dave).\nowns(dave,ball).\nlight(phone).\ndislikes(bob,ball).\nfriend(bob,george).\nexcited(dave).\nbusy(bob).\ncurious(eve).\nweak(frank).\nsmall(phone).\nsibling(bob,eve).\ntired(eve).\nenemy(george,bob).\nfriend(bob,carol).\nfriend(george,bob).\nparent(frank,eve).\nsibling(dave,alice).\nsibling(eve,dave).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is clever.\nFor all Z, if there exists U such that object Z is heavy and person U owns object Z and person U is calm, then object Z is old.\nFor all Z, if there exists W such that object Z is wet and person W owns object Z and person W is excited, then object Z is red.\nFor all X, if there exists B such that object X is new and person B owns object X and person B is funny, then object X is dirty.\nFor all Y, if object Y is smooth, then object Y is old.\nFor all X, Z, if person Z is tired and person X is hungry, then person Z is a friend of person X.\nFor all Y, if there exists W such that person Y is calm and person Y is a sibling of person W and person W is funny, then person Y is weak.\nFor all Z, if there exists U such that object Z is smooth and person U likes object Z and person U is happy, then object Z is old.\nFor all Z, if object Z is small, then object Z is big.\nFor all Z, if there exists B such that object Z is soft and person B likes object Z and person B is tall, then object Z is old.\nFor all Z, if there exists V such that object Z is old and person V owns object Z and person V is sad, then object Z is big.\nFor all X, if there exists A such that object X is light and person A dislikes object X and person A is brave, then object X is rough.\nFor all X, if there exists U such that person X is weak and person X is a friend of person U and person U is strong, then person X is happy.\nFor all X, if person X is busy and person X is strong, then person X is curious.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is tall, then person X is angry.\nFor all X, Y, if person X is sad and person Y is curious and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is new, then object X is clean.\nFor all X, Y, if person X is sad and person Y is sad and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if person X is brave and person X is strong, then person X is friendly.\nFor all X, if person X is busy and person X is curious, then person X is weak.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is light, then object X is rough.\n\nAnd the following facts:\nfrank is clever.\neve is an enemy of dave.\ndave owns ball.\nphone is light.\nbob dislikes ball.\nbob is a friend of george.\ndave is excited.\nbob is busy.\neve is curious.\nfrank is weak.\nphone is small.\nbob is a sibling of eve.\neve is tired.\ngeorge is an enemy of bob.\nbob is a friend of carol.\ngeorge is a friend of bob.\nfrank is a parent of eve.\ndave is a sibling of alice.\neve is a sibling of dave.\ndave is a sibling of eve.\n\nQUESTION:\nCould frank is bored explain frank is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1218,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "strong(bob).",
    "c": "clever(X) :- bored(X).\nold(Z) :- heavy(Z), owns(U,Z), calm(U).\nred(Z) :- wet(Z), owns(W,Z), excited(W).\ndirty(X) :- new(X), owns(B,X), funny(B).\nold(Y) :- smooth(Y).\nfriend(Z,X) :- tired(Z), hungry(X).\nweak(Y) :- calm(Y), sibling(Y,W), funny(W).\nold(Z) :- smooth(Z), likes(U,Z), happy(U).\nbig(Z) :- small(Z).\nold(Z) :- soft(Z), likes(B,Z), tall(B).\nbig(Z) :- old(Z), owns(V,Z), sad(V).\nrough(X) :- light(X), dislikes(A,X), brave(A).\nhappy(X) :- weak(X), friend(X,U), strong(U).\ncurious(X) :- busy(X), strong(X).\nred(X) :- rough(X).\ncurious(X) :- weak(X).\ncalm(X) :- funny(X).\nangry(X) :- tall(X).\nfriend(X,Y) :- sad(X), curious(Y), sibling(X,Y).\nclean(X) :- new(X).\nfriend(X,Y) :- sad(X), sad(Y), parent(X,Y).\nfriendly(X) :- brave(X), strong(X).\nweak(X) :- busy(X), curious(X).\nhard(X) :- dirty(X).\nrough(X) :- light(X).\nclever(frank).\nenemy(eve,dave).\nowns(dave,ball).\nlight(phone).\ndislikes(bob,ball).\nfriend(bob,george).\nexcited(dave).\nbusy(bob).\ncurious(eve).\nweak(frank).\nsmall(phone).\nsibling(bob,eve).\ntired(eve).\nenemy(george,bob).\nfriend(bob,carol).\nfriend(george,bob).\nparent(frank,eve).\nsibling(dave,alice).\nsibling(eve,dave).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is bored, then person X is clever.\nFor all Z, if there exists U such that object Z is heavy and person U owns object Z and person U is calm, then object Z is old.\nFor all Z, if there exists W such that object Z is wet and person W owns object Z and person W is excited, then object Z is red.\nFor all X, if there exists B such that object X is new and person B owns object X and person B is funny, then object X is dirty.\nFor all Y, if object Y is smooth, then object Y is old.\nFor all X, Z, if person Z is tired and person X is hungry, then person Z is a friend of person X.\nFor all Y, if there exists W such that person Y is calm and person Y is a sibling of person W and person W is funny, then person Y is weak.\nFor all Z, if there exists U such that object Z is smooth and person U likes object Z and person U is happy, then object Z is old.\nFor all Z, if object Z is small, then object Z is big.\nFor all Z, if there exists B such that object Z is soft and person B likes object Z and person B is tall, then object Z is old.\nFor all Z, if there exists V such that object Z is old and person V owns object Z and person V is sad, then object Z is big.\nFor all X, if there exists A such that object X is light and person A dislikes object X and person A is brave, then object X is rough.\nFor all X, if there exists U such that person X is weak and person X is a friend of person U and person U is strong, then person X is happy.\nFor all X, if person X is busy and person X is strong, then person X is curious.\nFor all X, if object X is rough, then object X is red.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is tall, then person X is angry.\nFor all X, Y, if person X is sad and person Y is curious and person X is a sibling of person Y, then person X is a friend of person Y.\nFor all X, if object X is new, then object X is clean.\nFor all X, Y, if person X is sad and person Y is sad and person X is a parent of person Y, then person X is a friend of person Y.\nFor all X, if person X is brave and person X is strong, then person X is friendly.\nFor all X, if person X is busy and person X is curious, then person X is weak.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is light, then object X is rough.\n\nAnd the following facts:\nfrank is clever.\neve is an enemy of dave.\ndave owns ball.\nphone is light.\nbob dislikes ball.\nbob is a friend of george.\ndave is excited.\nbob is busy.\neve is curious.\nfrank is weak.\nphone is small.\nbob is a sibling of eve.\neve is tired.\ngeorge is an enemy of bob.\nbob is a friend of carol.\ngeorge is a friend of bob.\nfrank is a parent of eve.\ndave is a sibling of alice.\neve is a sibling of dave.\ndave is a sibling of eve.\n\nQUESTION:\nCould bob is strong explain frank is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1219,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "excited(carol).",
    "c": "excited(X) :- weak(X).\nhungry(Z) :- calm(Z), friend(Z,U), friendly(U).\nsibling(X,Z) :- calm(Z), friendly(X).\nsibling(X,Y) :- curious(Y), brave(X), parent(Y,V).\nheavy(Y) :- red(Y), likes(A,Y), tall(A).\ndirty(Z) :- light(Z).\nlikes(Z,X) :- strong(Z), wet(X), clever(C).\ncurious(X) :- angry(X), friend(X,V), calm(V).\nsad(Z) :- brave(Z), likes(Z,U), soft(U).\nold(Z) :- dirty(Z).\nowns(X,Z) :- big(Z), tall(X).\nfriendly(Z) :- sad(Z), likes(Z,V), rough(V).\ndirty(X) :- wet(X), dislikes(U,X), tired(U).\ncurious(Y) :- sad(Y), friend(Y,W), tall(W).\nlight(X) :- big(X).\nsibling(X,Y) :- tired(X), tall(Y), enemy(X,Y).\ndislikes(X,Y) :- calm(X), dirty(Y).\nstrong(X) :- clever(X), brave(X).\nsoft(X) :- dirty(X), hard(X).\nsmall(X) :- red(X).\ncurious(X) :- calm(X).\nlikes(X,Y) :- curious(X), rough(Y).\nfunny(X) :- clever(X), brave(X).\nfunny(X) :- happy(X).\nbored(X) :- brave(X).\nweak(carol).\nenemy(carol,alice).\nsibling(dave,bob).\nfriend(alice,bob).\nbig(pencil).\nparent(bob,george).\nsmooth(apple).\nowns(eve,pencil).\nfriend(carol,george).\nlikes(dave,phone).\nlight(car).\ndislikes(eve,apple).\ndislikes(alice,pencil).\nowns(carol,ball).\nsibling(dave,george).\nhungry(alice).\nangry(alice).\nhungry(eve).\nowns(alice,apple).\nfriendly(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is excited.\nFor all Z, if there exists U such that person Z is calm and person Z is a friend of person U and person U is friendly, then person Z is hungry.\nFor all X, Z, if person Z is calm and person X is friendly, then person X is a sibling of person Z.\nFor all X, Y, if there exists V such that person Y is curious and person X is brave and person Y is a parent of person V, then person X is a sibling of person Y.\nFor all Y, if there exists A such that object Y is red and person A likes object Y and person A is tall, then object Y is heavy.\nFor all Z, if object Z is light, then object Z is dirty.\nFor all X, Z, if there exists C such that person Z is strong and object X is wet and person C is clever, then person Z likes object X.\nFor all X, if there exists V such that person X is angry and person X is a friend of person V and person V is calm, then person X is curious.\nFor all Z, if there exists U such that person Z is brave and person Z likes object U and object U is soft, then person Z is sad.\nFor all Z, if object Z is dirty, then object Z is old.\nFor all X, Z, if object Z is big and person X is tall, then person X owns object Z.\nFor all Z, if there exists V such that person Z is sad and person Z likes object V and object V is rough, then person Z is friendly.\nFor all X, if there exists U such that object X is wet and person U dislikes object X and person U is tired, then object X is dirty.\nFor all Y, if there exists W such that person Y is sad and person Y is a friend of person W and person W is tall, then person Y is curious.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is tired and person Y is tall and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, Y, if person X is calm and object Y is dirty, then person X dislikes object Y.\nFor all X, if person X is clever and person X is brave, then person X is strong.\nFor all X, if object X is dirty and object X is hard, then object X is soft.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is calm, then person X is curious.\nFor all X, Y, if person X is curious and object Y is rough, then person X likes object Y.\nFor all X, if person X is clever and person X is brave, then person X is funny.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is brave, then person X is bored.\n\nAnd the following facts:\ncarol is weak.\ncarol is an enemy of alice.\ndave is a sibling of bob.\nalice is a friend of bob.\npencil is big.\nbob is a parent of george.\napple is smooth.\neve owns pencil.\ncarol is a friend of george.\ndave likes phone.\ncar is light.\neve dislikes apple.\nalice dislikes pencil.\ncarol owns ball.\ndave is a sibling of george.\nalice is hungry.\nalice is angry.\neve is hungry.\nalice owns apple.\nalice is friendly.\n\nQUESTION:\nIs carol is excited true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1220,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(frank).",
    "c": "excited(X) :- weak(X).\nhungry(Z) :- calm(Z), friend(Z,U), friendly(U).\nsibling(X,Z) :- calm(Z), friendly(X).\nsibling(X,Y) :- curious(Y), brave(X), parent(Y,V).\nheavy(Y) :- red(Y), likes(A,Y), tall(A).\ndirty(Z) :- light(Z).\nlikes(Z,X) :- strong(Z), wet(X), clever(C).\ncurious(X) :- angry(X), friend(X,V), calm(V).\nsad(Z) :- brave(Z), likes(Z,U), soft(U).\nold(Z) :- dirty(Z).\nowns(X,Z) :- big(Z), tall(X).\nfriendly(Z) :- sad(Z), likes(Z,V), rough(V).\ndirty(X) :- wet(X), dislikes(U,X), tired(U).\ncurious(Y) :- sad(Y), friend(Y,W), tall(W).\nlight(X) :- big(X).\nsibling(X,Y) :- tired(X), tall(Y), enemy(X,Y).\ndislikes(X,Y) :- calm(X), dirty(Y).\nstrong(X) :- clever(X), brave(X).\nsoft(X) :- dirty(X), hard(X).\nsmall(X) :- red(X).\ncurious(X) :- calm(X).\nlikes(X,Y) :- curious(X), rough(Y).\nfunny(X) :- clever(X), brave(X).\nfunny(X) :- happy(X).\nbored(X) :- brave(X).\nweak(carol).\nenemy(carol,alice).\nsibling(dave,bob).\nfriend(alice,bob).\nbig(pencil).\nparent(bob,george).\nsmooth(apple).\nowns(eve,pencil).\nfriend(carol,george).\nlikes(dave,phone).\nlight(car).\ndislikes(eve,apple).\ndislikes(alice,pencil).\nowns(carol,ball).\nsibling(dave,george).\nhungry(alice).\nangry(alice).\nhungry(eve).\nowns(alice,apple).\nfriendly(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is excited.\nFor all Z, if there exists U such that person Z is calm and person Z is a friend of person U and person U is friendly, then person Z is hungry.\nFor all X, Z, if person Z is calm and person X is friendly, then person X is a sibling of person Z.\nFor all X, Y, if there exists V such that person Y is curious and person X is brave and person Y is a parent of person V, then person X is a sibling of person Y.\nFor all Y, if there exists A such that object Y is red and person A likes object Y and person A is tall, then object Y is heavy.\nFor all Z, if object Z is light, then object Z is dirty.\nFor all X, Z, if there exists C such that person Z is strong and object X is wet and person C is clever, then person Z likes object X.\nFor all X, if there exists V such that person X is angry and person X is a friend of person V and person V is calm, then person X is curious.\nFor all Z, if there exists U such that person Z is brave and person Z likes object U and object U is soft, then person Z is sad.\nFor all Z, if object Z is dirty, then object Z is old.\nFor all X, Z, if object Z is big and person X is tall, then person X owns object Z.\nFor all Z, if there exists V such that person Z is sad and person Z likes object V and object V is rough, then person Z is friendly.\nFor all X, if there exists U such that object X is wet and person U dislikes object X and person U is tired, then object X is dirty.\nFor all Y, if there exists W such that person Y is sad and person Y is a friend of person W and person W is tall, then person Y is curious.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is tired and person Y is tall and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, Y, if person X is calm and object Y is dirty, then person X dislikes object Y.\nFor all X, if person X is clever and person X is brave, then person X is strong.\nFor all X, if object X is dirty and object X is hard, then object X is soft.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is calm, then person X is curious.\nFor all X, Y, if person X is curious and object Y is rough, then person X likes object Y.\nFor all X, if person X is clever and person X is brave, then person X is funny.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is brave, then person X is bored.\n\nAnd the following facts:\ncarol is weak.\ncarol is an enemy of alice.\ndave is a sibling of bob.\nalice is a friend of bob.\npencil is big.\nbob is a parent of george.\napple is smooth.\neve owns pencil.\ncarol is a friend of george.\ndave likes phone.\ncar is light.\neve dislikes apple.\nalice dislikes pencil.\ncarol owns ball.\ndave is a sibling of george.\nalice is hungry.\nalice is angry.\neve is hungry.\nalice owns apple.\nalice is friendly.\n\nQUESTION:\nIs frank is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1221,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "weak(carol).",
    "c": "excited(X) :- weak(X).\nhungry(Z) :- calm(Z), friend(Z,U), friendly(U).\nsibling(X,Z) :- calm(Z), friendly(X).\nsibling(X,Y) :- curious(Y), brave(X), parent(Y,V).\nheavy(Y) :- red(Y), likes(A,Y), tall(A).\ndirty(Z) :- light(Z).\nlikes(Z,X) :- strong(Z), wet(X), clever(C).\ncurious(X) :- angry(X), friend(X,V), calm(V).\nsad(Z) :- brave(Z), likes(Z,U), soft(U).\nold(Z) :- dirty(Z).\nowns(X,Z) :- big(Z), tall(X).\nfriendly(Z) :- sad(Z), likes(Z,V), rough(V).\ndirty(X) :- wet(X), dislikes(U,X), tired(U).\ncurious(Y) :- sad(Y), friend(Y,W), tall(W).\nlight(X) :- big(X).\nsibling(X,Y) :- tired(X), tall(Y), enemy(X,Y).\ndislikes(X,Y) :- calm(X), dirty(Y).\nstrong(X) :- clever(X), brave(X).\nsoft(X) :- dirty(X), hard(X).\nsmall(X) :- red(X).\ncurious(X) :- calm(X).\nlikes(X,Y) :- curious(X), rough(Y).\nfunny(X) :- clever(X), brave(X).\nfunny(X) :- happy(X).\nbored(X) :- brave(X).\nexcited(carol).\nenemy(carol,alice).\nsibling(dave,bob).\nfriend(alice,bob).\nbig(pencil).\nparent(bob,george).\nsmooth(apple).\nowns(eve,pencil).\nfriend(carol,george).\nlikes(dave,phone).\nlight(car).\ndislikes(eve,apple).\ndislikes(alice,pencil).\nowns(carol,ball).\nsibling(dave,george).\nhungry(alice).\nangry(alice).\nhungry(eve).\nowns(alice,apple).\nfriendly(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is excited.\nFor all Z, if there exists U such that person Z is calm and person Z is a friend of person U and person U is friendly, then person Z is hungry.\nFor all X, Z, if person Z is calm and person X is friendly, then person X is a sibling of person Z.\nFor all X, Y, if there exists V such that person Y is curious and person X is brave and person Y is a parent of person V, then person X is a sibling of person Y.\nFor all Y, if there exists A such that object Y is red and person A likes object Y and person A is tall, then object Y is heavy.\nFor all Z, if object Z is light, then object Z is dirty.\nFor all X, Z, if there exists C such that person Z is strong and object X is wet and person C is clever, then person Z likes object X.\nFor all X, if there exists V such that person X is angry and person X is a friend of person V and person V is calm, then person X is curious.\nFor all Z, if there exists U such that person Z is brave and person Z likes object U and object U is soft, then person Z is sad.\nFor all Z, if object Z is dirty, then object Z is old.\nFor all X, Z, if object Z is big and person X is tall, then person X owns object Z.\nFor all Z, if there exists V such that person Z is sad and person Z likes object V and object V is rough, then person Z is friendly.\nFor all X, if there exists U such that object X is wet and person U dislikes object X and person U is tired, then object X is dirty.\nFor all Y, if there exists W such that person Y is sad and person Y is a friend of person W and person W is tall, then person Y is curious.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is tired and person Y is tall and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, Y, if person X is calm and object Y is dirty, then person X dislikes object Y.\nFor all X, if person X is clever and person X is brave, then person X is strong.\nFor all X, if object X is dirty and object X is hard, then object X is soft.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is calm, then person X is curious.\nFor all X, Y, if person X is curious and object Y is rough, then person X likes object Y.\nFor all X, if person X is clever and person X is brave, then person X is funny.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is brave, then person X is bored.\n\nAnd the following facts:\ncarol is excited.\ncarol is an enemy of alice.\ndave is a sibling of bob.\nalice is a friend of bob.\npencil is big.\nbob is a parent of george.\napple is smooth.\neve owns pencil.\ncarol is a friend of george.\ndave likes phone.\ncar is light.\neve dislikes apple.\nalice dislikes pencil.\ncarol owns ball.\ndave is a sibling of george.\nalice is hungry.\nalice is angry.\neve is hungry.\nalice owns apple.\nalice is friendly.\n\nQUESTION:\nCould carol is weak explain carol is excited?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1222,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "big(ball).",
    "c": "excited(X) :- weak(X).\nhungry(Z) :- calm(Z), friend(Z,U), friendly(U).\nsibling(X,Z) :- calm(Z), friendly(X).\nsibling(X,Y) :- curious(Y), brave(X), parent(Y,V).\nheavy(Y) :- red(Y), likes(A,Y), tall(A).\ndirty(Z) :- light(Z).\nlikes(Z,X) :- strong(Z), wet(X), clever(C).\ncurious(X) :- angry(X), friend(X,V), calm(V).\nsad(Z) :- brave(Z), likes(Z,U), soft(U).\nold(Z) :- dirty(Z).\nowns(X,Z) :- big(Z), tall(X).\nfriendly(Z) :- sad(Z), likes(Z,V), rough(V).\ndirty(X) :- wet(X), dislikes(U,X), tired(U).\ncurious(Y) :- sad(Y), friend(Y,W), tall(W).\nlight(X) :- big(X).\nsibling(X,Y) :- tired(X), tall(Y), enemy(X,Y).\ndislikes(X,Y) :- calm(X), dirty(Y).\nstrong(X) :- clever(X), brave(X).\nsoft(X) :- dirty(X), hard(X).\nsmall(X) :- red(X).\ncurious(X) :- calm(X).\nlikes(X,Y) :- curious(X), rough(Y).\nfunny(X) :- clever(X), brave(X).\nfunny(X) :- happy(X).\nbored(X) :- brave(X).\nexcited(carol).\nenemy(carol,alice).\nsibling(dave,bob).\nfriend(alice,bob).\nbig(pencil).\nparent(bob,george).\nsmooth(apple).\nowns(eve,pencil).\nfriend(carol,george).\nlikes(dave,phone).\nlight(car).\ndislikes(eve,apple).\ndislikes(alice,pencil).\nowns(carol,ball).\nsibling(dave,george).\nhungry(alice).\nangry(alice).\nhungry(eve).\nowns(alice,apple).\nfriendly(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is weak, then person X is excited.\nFor all Z, if there exists U such that person Z is calm and person Z is a friend of person U and person U is friendly, then person Z is hungry.\nFor all X, Z, if person Z is calm and person X is friendly, then person X is a sibling of person Z.\nFor all X, Y, if there exists V such that person Y is curious and person X is brave and person Y is a parent of person V, then person X is a sibling of person Y.\nFor all Y, if there exists A such that object Y is red and person A likes object Y and person A is tall, then object Y is heavy.\nFor all Z, if object Z is light, then object Z is dirty.\nFor all X, Z, if there exists C such that person Z is strong and object X is wet and person C is clever, then person Z likes object X.\nFor all X, if there exists V such that person X is angry and person X is a friend of person V and person V is calm, then person X is curious.\nFor all Z, if there exists U such that person Z is brave and person Z likes object U and object U is soft, then person Z is sad.\nFor all Z, if object Z is dirty, then object Z is old.\nFor all X, Z, if object Z is big and person X is tall, then person X owns object Z.\nFor all Z, if there exists V such that person Z is sad and person Z likes object V and object V is rough, then person Z is friendly.\nFor all X, if there exists U such that object X is wet and person U dislikes object X and person U is tired, then object X is dirty.\nFor all Y, if there exists W such that person Y is sad and person Y is a friend of person W and person W is tall, then person Y is curious.\nFor all X, if object X is big, then object X is light.\nFor all X, Y, if person X is tired and person Y is tall and person X is an enemy of person Y, then person X is a sibling of person Y.\nFor all X, Y, if person X is calm and object Y is dirty, then person X dislikes object Y.\nFor all X, if person X is clever and person X is brave, then person X is strong.\nFor all X, if object X is dirty and object X is hard, then object X is soft.\nFor all X, if object X is red, then object X is small.\nFor all X, if person X is calm, then person X is curious.\nFor all X, Y, if person X is curious and object Y is rough, then person X likes object Y.\nFor all X, if person X is clever and person X is brave, then person X is funny.\nFor all X, if person X is happy, then person X is funny.\nFor all X, if person X is brave, then person X is bored.\n\nAnd the following facts:\ncarol is excited.\ncarol is an enemy of alice.\ndave is a sibling of bob.\nalice is a friend of bob.\npencil is big.\nbob is a parent of george.\napple is smooth.\neve owns pencil.\ncarol is a friend of george.\ndave likes phone.\ncar is light.\neve dislikes apple.\nalice dislikes pencil.\ncarol owns ball.\ndave is a sibling of george.\nalice is hungry.\nalice is angry.\neve is hungry.\nalice owns apple.\nalice is friendly.\n\nQUESTION:\nCould ball is big explain carol is excited?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1223,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```\\n'}]"
  },
  {
    "q": "sad(george).",
    "c": "sad(X) :- busy(X).\ndirty(Y) :- hard(Y), dislikes(B,Y), tall(B).\nbored(Z) :- weak(Z), sibling(Z,A), tired(A).\nhungry(X) :- calm(X), enemy(X,B), excited(B).\nweak(X) :- calm(X).\nenemy(Z,X) :- brave(Z), happy(X), sibling(X,V).\ncurious(Y) :- clever(Y), likes(Y,V), big(V).\nbrave(Y) :- excited(Y), funny(D).\nfriendly(Y) :- happy(Y).\nbrave(X) :- tired(X), dislikes(X,U), wet(U).\nlight(Y) :- new(Y), owns(W,Y), clever(W).\nbig(Z) :- old(Z).\nsmall(Y) :- old(Y).\nexcited(Y) :- angry(Y), parent(Y,A), clever(A).\nhard(X) :- small(X).\nangry(X) :- happy(X).\nenemy(X,Y) :- tired(X), curious(Y).\nnew(X) :- red(X), big(X).\ncalm(X) :- brave(X).\nenemy(X,Y) :- excited(X), weak(Y).\nold(X) :- hard(X), red(X).\nhungry(X) :- excited(X).\nhard(X) :- smooth(X), new(X).\nheavy(X) :- light(X).\nsibling(X,Y) :- hungry(X), hungry(Y).\nbusy(george).\nhard(ball).\ndislikes(frank,phone).\nenemy(bob,alice).\ncalm(alice).\nlikes(dave,book).\nparent(george,dave).\nowns(alice,apple).\nfriend(bob,alice).\ntall(dave).\nlikes(alice,book).\nhungry(alice).\ndislikes(carol,book).\ndislikes(bob,book).\nsibling(alice,eve).\nfriend(bob,frank).\ndislikes(eve,phone).\nhard(phone).\nsibling(bob,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is sad.\nFor all Y, if there exists B such that object Y is hard and person B dislikes object Y and person B is tall, then object Y is dirty.\nFor all Z, if there exists A such that person Z is weak and person Z is a sibling of person A and person A is tired, then person Z is bored.\nFor all X, if there exists B such that person X is calm and person X is an enemy of person B and person B is excited, then person X is hungry.\nFor all X, if person X is calm, then person X is weak.\nFor all X, Z, if there exists V such that person Z is brave and person X is happy and person X is a sibling of person V, then person Z is an enemy of person X.\nFor all Y, if there exists V such that person Y is clever and person Y likes object V and object V is big, then person Y is curious.\nFor all Y, if there exists D such that person Y is excited and person D is funny, then person Y is brave.\nFor all Y, if person Y is happy, then person Y is friendly.\nFor all X, if there exists U such that person X is tired and person X dislikes object U and object U is wet, then person X is brave.\nFor all Y, if there exists W such that object Y is new and person W owns object Y and person W is clever, then object Y is light.\nFor all Z, if object Z is old, then object Z is big.\nFor all Y, if object Y is old, then object Y is small.\nFor all Y, if there exists A such that person Y is angry and person Y is a parent of person A and person A is clever, then person Y is excited.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is happy, then person X is angry.\nFor all X, Y, if person X is tired and person Y is curious, then person X is an enemy of person Y.\nFor all X, if object X is red and object X is big, then object X is new.\nFor all X, if person X is brave, then person X is calm.\nFor all X, Y, if person X is excited and person Y is weak, then person X is an enemy of person Y.\nFor all X, if object X is hard and object X is red, then object X is old.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if object X is smooth and object X is new, then object X is hard.\nFor all X, if object X is light, then object X is heavy.\nFor all X, Y, if person X is hungry and person Y is hungry, then person X is a sibling of person Y.\n\nAnd the following facts:\ngeorge is busy.\nball is hard.\nfrank dislikes phone.\nbob is an enemy of alice.\nalice is calm.\ndave likes book.\ngeorge is a parent of dave.\nalice owns apple.\nbob is a friend of alice.\ndave is tall.\nalice likes book.\nalice is hungry.\ncarol dislikes book.\nbob dislikes book.\nalice is a sibling of eve.\nbob is a friend of frank.\neve dislikes phone.\nphone is hard.\nbob is a sibling of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nIs george is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1224,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "big(ball).",
    "c": "sad(X) :- busy(X).\ndirty(Y) :- hard(Y), dislikes(B,Y), tall(B).\nbored(Z) :- weak(Z), sibling(Z,A), tired(A).\nhungry(X) :- calm(X), enemy(X,B), excited(B).\nweak(X) :- calm(X).\nenemy(Z,X) :- brave(Z), happy(X), sibling(X,V).\ncurious(Y) :- clever(Y), likes(Y,V), big(V).\nbrave(Y) :- excited(Y), funny(D).\nfriendly(Y) :- happy(Y).\nbrave(X) :- tired(X), dislikes(X,U), wet(U).\nlight(Y) :- new(Y), owns(W,Y), clever(W).\nbig(Z) :- old(Z).\nsmall(Y) :- old(Y).\nexcited(Y) :- angry(Y), parent(Y,A), clever(A).\nhard(X) :- small(X).\nangry(X) :- happy(X).\nenemy(X,Y) :- tired(X), curious(Y).\nnew(X) :- red(X), big(X).\ncalm(X) :- brave(X).\nenemy(X,Y) :- excited(X), weak(Y).\nold(X) :- hard(X), red(X).\nhungry(X) :- excited(X).\nhard(X) :- smooth(X), new(X).\nheavy(X) :- light(X).\nsibling(X,Y) :- hungry(X), hungry(Y).\nbusy(george).\nhard(ball).\ndislikes(frank,phone).\nenemy(bob,alice).\ncalm(alice).\nlikes(dave,book).\nparent(george,dave).\nowns(alice,apple).\nfriend(bob,alice).\ntall(dave).\nlikes(alice,book).\nhungry(alice).\ndislikes(carol,book).\ndislikes(bob,book).\nsibling(alice,eve).\nfriend(bob,frank).\ndislikes(eve,phone).\nhard(phone).\nsibling(bob,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is sad.\nFor all Y, if there exists B such that object Y is hard and person B dislikes object Y and person B is tall, then object Y is dirty.\nFor all Z, if there exists A such that person Z is weak and person Z is a sibling of person A and person A is tired, then person Z is bored.\nFor all X, if there exists B such that person X is calm and person X is an enemy of person B and person B is excited, then person X is hungry.\nFor all X, if person X is calm, then person X is weak.\nFor all X, Z, if there exists V such that person Z is brave and person X is happy and person X is a sibling of person V, then person Z is an enemy of person X.\nFor all Y, if there exists V such that person Y is clever and person Y likes object V and object V is big, then person Y is curious.\nFor all Y, if there exists D such that person Y is excited and person D is funny, then person Y is brave.\nFor all Y, if person Y is happy, then person Y is friendly.\nFor all X, if there exists U such that person X is tired and person X dislikes object U and object U is wet, then person X is brave.\nFor all Y, if there exists W such that object Y is new and person W owns object Y and person W is clever, then object Y is light.\nFor all Z, if object Z is old, then object Z is big.\nFor all Y, if object Y is old, then object Y is small.\nFor all Y, if there exists A such that person Y is angry and person Y is a parent of person A and person A is clever, then person Y is excited.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is happy, then person X is angry.\nFor all X, Y, if person X is tired and person Y is curious, then person X is an enemy of person Y.\nFor all X, if object X is red and object X is big, then object X is new.\nFor all X, if person X is brave, then person X is calm.\nFor all X, Y, if person X is excited and person Y is weak, then person X is an enemy of person Y.\nFor all X, if object X is hard and object X is red, then object X is old.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if object X is smooth and object X is new, then object X is hard.\nFor all X, if object X is light, then object X is heavy.\nFor all X, Y, if person X is hungry and person Y is hungry, then person X is a sibling of person Y.\n\nAnd the following facts:\ngeorge is busy.\nball is hard.\nfrank dislikes phone.\nbob is an enemy of alice.\nalice is calm.\ndave likes book.\ngeorge is a parent of dave.\nalice owns apple.\nbob is a friend of alice.\ndave is tall.\nalice likes book.\nalice is hungry.\ncarol dislikes book.\nbob dislikes book.\nalice is a sibling of eve.\nbob is a friend of frank.\neve dislikes phone.\nphone is hard.\nbob is a sibling of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nIs ball is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1225,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(george).",
    "c": "sad(X) :- busy(X).\ndirty(Y) :- hard(Y), dislikes(B,Y), tall(B).\nbored(Z) :- weak(Z), sibling(Z,A), tired(A).\nhungry(X) :- calm(X), enemy(X,B), excited(B).\nweak(X) :- calm(X).\nenemy(Z,X) :- brave(Z), happy(X), sibling(X,V).\ncurious(Y) :- clever(Y), likes(Y,V), big(V).\nbrave(Y) :- excited(Y), funny(D).\nfriendly(Y) :- happy(Y).\nbrave(X) :- tired(X), dislikes(X,U), wet(U).\nlight(Y) :- new(Y), owns(W,Y), clever(W).\nbig(Z) :- old(Z).\nsmall(Y) :- old(Y).\nexcited(Y) :- angry(Y), parent(Y,A), clever(A).\nhard(X) :- small(X).\nangry(X) :- happy(X).\nenemy(X,Y) :- tired(X), curious(Y).\nnew(X) :- red(X), big(X).\ncalm(X) :- brave(X).\nenemy(X,Y) :- excited(X), weak(Y).\nold(X) :- hard(X), red(X).\nhungry(X) :- excited(X).\nhard(X) :- smooth(X), new(X).\nheavy(X) :- light(X).\nsibling(X,Y) :- hungry(X), hungry(Y).\nsad(george).\nhard(ball).\ndislikes(frank,phone).\nenemy(bob,alice).\ncalm(alice).\nlikes(dave,book).\nparent(george,dave).\nowns(alice,apple).\nfriend(bob,alice).\ntall(dave).\nlikes(alice,book).\nhungry(alice).\ndislikes(carol,book).\ndislikes(bob,book).\nsibling(alice,eve).\nfriend(bob,frank).\ndislikes(eve,phone).\nhard(phone).\nsibling(bob,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is sad.\nFor all Y, if there exists B such that object Y is hard and person B dislikes object Y and person B is tall, then object Y is dirty.\nFor all Z, if there exists A such that person Z is weak and person Z is a sibling of person A and person A is tired, then person Z is bored.\nFor all X, if there exists B such that person X is calm and person X is an enemy of person B and person B is excited, then person X is hungry.\nFor all X, if person X is calm, then person X is weak.\nFor all X, Z, if there exists V such that person Z is brave and person X is happy and person X is a sibling of person V, then person Z is an enemy of person X.\nFor all Y, if there exists V such that person Y is clever and person Y likes object V and object V is big, then person Y is curious.\nFor all Y, if there exists D such that person Y is excited and person D is funny, then person Y is brave.\nFor all Y, if person Y is happy, then person Y is friendly.\nFor all X, if there exists U such that person X is tired and person X dislikes object U and object U is wet, then person X is brave.\nFor all Y, if there exists W such that object Y is new and person W owns object Y and person W is clever, then object Y is light.\nFor all Z, if object Z is old, then object Z is big.\nFor all Y, if object Y is old, then object Y is small.\nFor all Y, if there exists A such that person Y is angry and person Y is a parent of person A and person A is clever, then person Y is excited.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is happy, then person X is angry.\nFor all X, Y, if person X is tired and person Y is curious, then person X is an enemy of person Y.\nFor all X, if object X is red and object X is big, then object X is new.\nFor all X, if person X is brave, then person X is calm.\nFor all X, Y, if person X is excited and person Y is weak, then person X is an enemy of person Y.\nFor all X, if object X is hard and object X is red, then object X is old.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if object X is smooth and object X is new, then object X is hard.\nFor all X, if object X is light, then object X is heavy.\nFor all X, Y, if person X is hungry and person Y is hungry, then person X is a sibling of person Y.\n\nAnd the following facts:\ngeorge is sad.\nball is hard.\nfrank dislikes phone.\nbob is an enemy of alice.\nalice is calm.\ndave likes book.\ngeorge is a parent of dave.\nalice owns apple.\nbob is a friend of alice.\ndave is tall.\nalice likes book.\nalice is hungry.\ncarol dislikes book.\nbob dislikes book.\nalice is a sibling of eve.\nbob is a friend of frank.\neve dislikes phone.\nphone is hard.\nbob is a sibling of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nCould george is busy explain george is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1226,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "friendly(george).",
    "c": "sad(X) :- busy(X).\ndirty(Y) :- hard(Y), dislikes(B,Y), tall(B).\nbored(Z) :- weak(Z), sibling(Z,A), tired(A).\nhungry(X) :- calm(X), enemy(X,B), excited(B).\nweak(X) :- calm(X).\nenemy(Z,X) :- brave(Z), happy(X), sibling(X,V).\ncurious(Y) :- clever(Y), likes(Y,V), big(V).\nbrave(Y) :- excited(Y), funny(D).\nfriendly(Y) :- happy(Y).\nbrave(X) :- tired(X), dislikes(X,U), wet(U).\nlight(Y) :- new(Y), owns(W,Y), clever(W).\nbig(Z) :- old(Z).\nsmall(Y) :- old(Y).\nexcited(Y) :- angry(Y), parent(Y,A), clever(A).\nhard(X) :- small(X).\nangry(X) :- happy(X).\nenemy(X,Y) :- tired(X), curious(Y).\nnew(X) :- red(X), big(X).\ncalm(X) :- brave(X).\nenemy(X,Y) :- excited(X), weak(Y).\nold(X) :- hard(X), red(X).\nhungry(X) :- excited(X).\nhard(X) :- smooth(X), new(X).\nheavy(X) :- light(X).\nsibling(X,Y) :- hungry(X), hungry(Y).\nsad(george).\nhard(ball).\ndislikes(frank,phone).\nenemy(bob,alice).\ncalm(alice).\nlikes(dave,book).\nparent(george,dave).\nowns(alice,apple).\nfriend(bob,alice).\ntall(dave).\nlikes(alice,book).\nhungry(alice).\ndislikes(carol,book).\ndislikes(bob,book).\nsibling(alice,eve).\nfriend(bob,frank).\ndislikes(eve,phone).\nhard(phone).\nsibling(bob,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is sad.\nFor all Y, if there exists B such that object Y is hard and person B dislikes object Y and person B is tall, then object Y is dirty.\nFor all Z, if there exists A such that person Z is weak and person Z is a sibling of person A and person A is tired, then person Z is bored.\nFor all X, if there exists B such that person X is calm and person X is an enemy of person B and person B is excited, then person X is hungry.\nFor all X, if person X is calm, then person X is weak.\nFor all X, Z, if there exists V such that person Z is brave and person X is happy and person X is a sibling of person V, then person Z is an enemy of person X.\nFor all Y, if there exists V such that person Y is clever and person Y likes object V and object V is big, then person Y is curious.\nFor all Y, if there exists D such that person Y is excited and person D is funny, then person Y is brave.\nFor all Y, if person Y is happy, then person Y is friendly.\nFor all X, if there exists U such that person X is tired and person X dislikes object U and object U is wet, then person X is brave.\nFor all Y, if there exists W such that object Y is new and person W owns object Y and person W is clever, then object Y is light.\nFor all Z, if object Z is old, then object Z is big.\nFor all Y, if object Y is old, then object Y is small.\nFor all Y, if there exists A such that person Y is angry and person Y is a parent of person A and person A is clever, then person Y is excited.\nFor all X, if object X is small, then object X is hard.\nFor all X, if person X is happy, then person X is angry.\nFor all X, Y, if person X is tired and person Y is curious, then person X is an enemy of person Y.\nFor all X, if object X is red and object X is big, then object X is new.\nFor all X, if person X is brave, then person X is calm.\nFor all X, Y, if person X is excited and person Y is weak, then person X is an enemy of person Y.\nFor all X, if object X is hard and object X is red, then object X is old.\nFor all X, if person X is excited, then person X is hungry.\nFor all X, if object X is smooth and object X is new, then object X is hard.\nFor all X, if object X is light, then object X is heavy.\nFor all X, Y, if person X is hungry and person Y is hungry, then person X is a sibling of person Y.\n\nAnd the following facts:\ngeorge is sad.\nball is hard.\nfrank dislikes phone.\nbob is an enemy of alice.\nalice is calm.\ndave likes book.\ngeorge is a parent of dave.\nalice owns apple.\nbob is a friend of alice.\ndave is tall.\nalice likes book.\nalice is hungry.\ncarol dislikes book.\nbob dislikes book.\nalice is a sibling of eve.\nbob is a friend of frank.\neve dislikes phone.\nphone is hard.\nbob is a sibling of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nCould george is friendly explain george is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1227,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tired(bob).",
    "c": "tired(X) :- busy(X).\nred(X) :- heavy(X), owns(B,X), excited(B).\nlikes(Y,Z) :- weak(Y), hard(Z).\nsmooth(Y) :- wet(Y), dislikes(A,Y), happy(A).\nbrave(Y) :- tall(Y).\nlikes(Y,X) :- hungry(Y), dirty(X), friend(Y,B).\nangry(Y) :- excited(Y), tall(C).\nfriendly(Z) :- curious(Z), parent(Z,W), excited(W).\nowns(X,Y) :- rough(Y), bored(X).\nhappy(X) :- sad(X), owns(X,W), light(W).\nhard(X) :- old(X), likes(A,X), happy(A).\nlight(Z) :- clean(Z), likes(V,Z), curious(V).\nstrong(Y) :- tall(Y), friend(Y,U), clever(U).\nsmooth(X) :- wet(X).\nparent(X,Y) :- angry(X), friendly(Y).\ndirty(X) :- new(X).\nweak(X) :- happy(X).\nsad(X) :- curious(X).\nnew(X) :- rough(X), small(X).\nfriend(X,Y) :- weak(X), tall(Y).\ncurious(X) :- friendly(X).\nclean(X) :- rough(X).\nowns(X,Y) :- friendly(X), soft(Y), likes(X,Y).\nsad(X) :- excited(X), brave(X).\nsoft(X) :- dirty(X), rough(X).\nbusy(bob).\nowns(eve,car).\nsunny.\ndirty(apple).\nowns(dave,apple).\nsibling(alice,frank).\nbig(ball).\nbrave(alice).\nhappy(bob).\ndislikes(dave,ball).\nfriend(carol,eve).\nfriend(alice,frank).\nsibling(george,bob).\ndislikes(alice,pencil).\nsibling(frank,bob).\nlikes(frank,book).\nexcited(bob).\nparent(dave,frank).\ncurious(alice).\nsmall(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is tired.\nFor all X, if there exists B such that object X is heavy and person B owns object X and person B is excited, then object X is red.\nFor all Y, Z, if person Y is weak and object Z is hard, then person Y likes object Z.\nFor all Y, if there exists A such that object Y is wet and person A dislikes object Y and person A is happy, then object Y is smooth.\nFor all Y, if person Y is tall, then person Y is brave.\nFor all X, Y, if there exists B such that person Y is hungry and object X is dirty and person Y is a friend of person B, then person Y likes object X.\nFor all Y, if there exists C such that person Y is excited and person C is tall, then person Y is angry.\nFor all Z, if there exists W such that person Z is curious and person Z is a parent of person W and person W is excited, then person Z is friendly.\nFor all X, Y, if object Y is rough and person X is bored, then person X owns object Y.\nFor all X, if there exists W such that person X is sad and person X owns object W and object W is light, then person X is happy.\nFor all X, if there exists A such that object X is old and person A likes object X and person A is happy, then object X is hard.\nFor all Z, if there exists V such that object Z is clean and person V likes object Z and person V is curious, then object Z is light.\nFor all Y, if there exists U such that person Y is tall and person Y is a friend of person U and person U is clever, then person Y is strong.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, Y, if person X is angry and person Y is friendly, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if object X is rough and object X is small, then object X is new.\nFor all X, Y, if person X is weak and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if object X is rough, then object X is clean.\nFor all X, Y, if person X is friendly and object Y is soft and person X likes object Y, then person X owns object Y.\nFor all X, if person X is excited and person X is brave, then person X is sad.\nFor all X, if object X is dirty and object X is rough, then object X is soft.\n\nAnd the following facts:\nbob is busy.\neve owns car.\nit is sunny.\napple is dirty.\ndave owns apple.\nalice is a sibling of frank.\nball is big.\nalice is brave.\nbob is happy.\ndave dislikes ball.\ncarol is a friend of eve.\nalice is a friend of frank.\ngeorge is a sibling of bob.\nalice dislikes pencil.\nfrank is a sibling of bob.\nfrank likes book.\nbob is excited.\ndave is a parent of frank.\nalice is curious.\nbook is small.\n\nQUESTION:\nIs bob is tired true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "deduction"
    },
    "id": 1228,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "curious(eve).",
    "c": "tired(X) :- busy(X).\nred(X) :- heavy(X), owns(B,X), excited(B).\nlikes(Y,Z) :- weak(Y), hard(Z).\nsmooth(Y) :- wet(Y), dislikes(A,Y), happy(A).\nbrave(Y) :- tall(Y).\nlikes(Y,X) :- hungry(Y), dirty(X), friend(Y,B).\nangry(Y) :- excited(Y), tall(C).\nfriendly(Z) :- curious(Z), parent(Z,W), excited(W).\nowns(X,Y) :- rough(Y), bored(X).\nhappy(X) :- sad(X), owns(X,W), light(W).\nhard(X) :- old(X), likes(A,X), happy(A).\nlight(Z) :- clean(Z), likes(V,Z), curious(V).\nstrong(Y) :- tall(Y), friend(Y,U), clever(U).\nsmooth(X) :- wet(X).\nparent(X,Y) :- angry(X), friendly(Y).\ndirty(X) :- new(X).\nweak(X) :- happy(X).\nsad(X) :- curious(X).\nnew(X) :- rough(X), small(X).\nfriend(X,Y) :- weak(X), tall(Y).\ncurious(X) :- friendly(X).\nclean(X) :- rough(X).\nowns(X,Y) :- friendly(X), soft(Y), likes(X,Y).\nsad(X) :- excited(X), brave(X).\nsoft(X) :- dirty(X), rough(X).\nbusy(bob).\nowns(eve,car).\nsunny.\ndirty(apple).\nowns(dave,apple).\nsibling(alice,frank).\nbig(ball).\nbrave(alice).\nhappy(bob).\ndislikes(dave,ball).\nfriend(carol,eve).\nfriend(alice,frank).\nsibling(george,bob).\ndislikes(alice,pencil).\nsibling(frank,bob).\nlikes(frank,book).\nexcited(bob).\nparent(dave,frank).\ncurious(alice).\nsmall(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is tired.\nFor all X, if there exists B such that object X is heavy and person B owns object X and person B is excited, then object X is red.\nFor all Y, Z, if person Y is weak and object Z is hard, then person Y likes object Z.\nFor all Y, if there exists A such that object Y is wet and person A dislikes object Y and person A is happy, then object Y is smooth.\nFor all Y, if person Y is tall, then person Y is brave.\nFor all X, Y, if there exists B such that person Y is hungry and object X is dirty and person Y is a friend of person B, then person Y likes object X.\nFor all Y, if there exists C such that person Y is excited and person C is tall, then person Y is angry.\nFor all Z, if there exists W such that person Z is curious and person Z is a parent of person W and person W is excited, then person Z is friendly.\nFor all X, Y, if object Y is rough and person X is bored, then person X owns object Y.\nFor all X, if there exists W such that person X is sad and person X owns object W and object W is light, then person X is happy.\nFor all X, if there exists A such that object X is old and person A likes object X and person A is happy, then object X is hard.\nFor all Z, if there exists V such that object Z is clean and person V likes object Z and person V is curious, then object Z is light.\nFor all Y, if there exists U such that person Y is tall and person Y is a friend of person U and person U is clever, then person Y is strong.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, Y, if person X is angry and person Y is friendly, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if object X is rough and object X is small, then object X is new.\nFor all X, Y, if person X is weak and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if object X is rough, then object X is clean.\nFor all X, Y, if person X is friendly and object Y is soft and person X likes object Y, then person X owns object Y.\nFor all X, if person X is excited and person X is brave, then person X is sad.\nFor all X, if object X is dirty and object X is rough, then object X is soft.\n\nAnd the following facts:\nbob is busy.\neve owns car.\nit is sunny.\napple is dirty.\ndave owns apple.\nalice is a sibling of frank.\nball is big.\nalice is brave.\nbob is happy.\ndave dislikes ball.\ncarol is a friend of eve.\nalice is a friend of frank.\ngeorge is a sibling of bob.\nalice dislikes pencil.\nfrank is a sibling of bob.\nfrank likes book.\nbob is excited.\ndave is a parent of frank.\nalice is curious.\nbook is small.\n\nQUESTION:\nIs eve is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1229,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(bob).",
    "c": "tired(X) :- busy(X).\nred(X) :- heavy(X), owns(B,X), excited(B).\nlikes(Y,Z) :- weak(Y), hard(Z).\nsmooth(Y) :- wet(Y), dislikes(A,Y), happy(A).\nbrave(Y) :- tall(Y).\nlikes(Y,X) :- hungry(Y), dirty(X), friend(Y,B).\nangry(Y) :- excited(Y), tall(C).\nfriendly(Z) :- curious(Z), parent(Z,W), excited(W).\nowns(X,Y) :- rough(Y), bored(X).\nhappy(X) :- sad(X), owns(X,W), light(W).\nhard(X) :- old(X), likes(A,X), happy(A).\nlight(Z) :- clean(Z), likes(V,Z), curious(V).\nstrong(Y) :- tall(Y), friend(Y,U), clever(U).\nsmooth(X) :- wet(X).\nparent(X,Y) :- angry(X), friendly(Y).\ndirty(X) :- new(X).\nweak(X) :- happy(X).\nsad(X) :- curious(X).\nnew(X) :- rough(X), small(X).\nfriend(X,Y) :- weak(X), tall(Y).\ncurious(X) :- friendly(X).\nclean(X) :- rough(X).\nowns(X,Y) :- friendly(X), soft(Y), likes(X,Y).\nsad(X) :- excited(X), brave(X).\nsoft(X) :- dirty(X), rough(X).\ntired(bob).\nowns(eve,car).\nsunny.\ndirty(apple).\nowns(dave,apple).\nsibling(alice,frank).\nbig(ball).\nbrave(alice).\nhappy(bob).\ndislikes(dave,ball).\nfriend(carol,eve).\nfriend(alice,frank).\nsibling(george,bob).\ndislikes(alice,pencil).\nsibling(frank,bob).\nlikes(frank,book).\nexcited(bob).\nparent(dave,frank).\ncurious(alice).\nsmall(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is tired.\nFor all X, if there exists B such that object X is heavy and person B owns object X and person B is excited, then object X is red.\nFor all Y, Z, if person Y is weak and object Z is hard, then person Y likes object Z.\nFor all Y, if there exists A such that object Y is wet and person A dislikes object Y and person A is happy, then object Y is smooth.\nFor all Y, if person Y is tall, then person Y is brave.\nFor all X, Y, if there exists B such that person Y is hungry and object X is dirty and person Y is a friend of person B, then person Y likes object X.\nFor all Y, if there exists C such that person Y is excited and person C is tall, then person Y is angry.\nFor all Z, if there exists W such that person Z is curious and person Z is a parent of person W and person W is excited, then person Z is friendly.\nFor all X, Y, if object Y is rough and person X is bored, then person X owns object Y.\nFor all X, if there exists W such that person X is sad and person X owns object W and object W is light, then person X is happy.\nFor all X, if there exists A such that object X is old and person A likes object X and person A is happy, then object X is hard.\nFor all Z, if there exists V such that object Z is clean and person V likes object Z and person V is curious, then object Z is light.\nFor all Y, if there exists U such that person Y is tall and person Y is a friend of person U and person U is clever, then person Y is strong.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, Y, if person X is angry and person Y is friendly, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if object X is rough and object X is small, then object X is new.\nFor all X, Y, if person X is weak and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if object X is rough, then object X is clean.\nFor all X, Y, if person X is friendly and object Y is soft and person X likes object Y, then person X owns object Y.\nFor all X, if person X is excited and person X is brave, then person X is sad.\nFor all X, if object X is dirty and object X is rough, then object X is soft.\n\nAnd the following facts:\nbob is tired.\neve owns car.\nit is sunny.\napple is dirty.\ndave owns apple.\nalice is a sibling of frank.\nball is big.\nalice is brave.\nbob is happy.\ndave dislikes ball.\ncarol is a friend of eve.\nalice is a friend of frank.\ngeorge is a sibling of bob.\nalice dislikes pencil.\nfrank is a sibling of bob.\nfrank likes book.\nbob is excited.\ndave is a parent of frank.\nalice is curious.\nbook is small.\n\nQUESTION:\nCould bob is busy explain bob is tired?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": 1,
      "reasoning_type": "abduction"
    },
    "id": 1230,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(frank).",
    "c": "tired(X) :- busy(X).\nred(X) :- heavy(X), owns(B,X), excited(B).\nlikes(Y,Z) :- weak(Y), hard(Z).\nsmooth(Y) :- wet(Y), dislikes(A,Y), happy(A).\nbrave(Y) :- tall(Y).\nlikes(Y,X) :- hungry(Y), dirty(X), friend(Y,B).\nangry(Y) :- excited(Y), tall(C).\nfriendly(Z) :- curious(Z), parent(Z,W), excited(W).\nowns(X,Y) :- rough(Y), bored(X).\nhappy(X) :- sad(X), owns(X,W), light(W).\nhard(X) :- old(X), likes(A,X), happy(A).\nlight(Z) :- clean(Z), likes(V,Z), curious(V).\nstrong(Y) :- tall(Y), friend(Y,U), clever(U).\nsmooth(X) :- wet(X).\nparent(X,Y) :- angry(X), friendly(Y).\ndirty(X) :- new(X).\nweak(X) :- happy(X).\nsad(X) :- curious(X).\nnew(X) :- rough(X), small(X).\nfriend(X,Y) :- weak(X), tall(Y).\ncurious(X) :- friendly(X).\nclean(X) :- rough(X).\nowns(X,Y) :- friendly(X), soft(Y), likes(X,Y).\nsad(X) :- excited(X), brave(X).\nsoft(X) :- dirty(X), rough(X).\ntired(bob).\nowns(eve,car).\nsunny.\ndirty(apple).\nowns(dave,apple).\nsibling(alice,frank).\nbig(ball).\nbrave(alice).\nhappy(bob).\ndislikes(dave,ball).\nfriend(carol,eve).\nfriend(alice,frank).\nsibling(george,bob).\ndislikes(alice,pencil).\nsibling(frank,bob).\nlikes(frank,book).\nexcited(bob).\nparent(dave,frank).\ncurious(alice).\nsmall(book).",
    "natural language": "You are given the following information:\nFor all X, if person X is busy, then person X is tired.\nFor all X, if there exists B such that object X is heavy and person B owns object X and person B is excited, then object X is red.\nFor all Y, Z, if person Y is weak and object Z is hard, then person Y likes object Z.\nFor all Y, if there exists A such that object Y is wet and person A dislikes object Y and person A is happy, then object Y is smooth.\nFor all Y, if person Y is tall, then person Y is brave.\nFor all X, Y, if there exists B such that person Y is hungry and object X is dirty and person Y is a friend of person B, then person Y likes object X.\nFor all Y, if there exists C such that person Y is excited and person C is tall, then person Y is angry.\nFor all Z, if there exists W such that person Z is curious and person Z is a parent of person W and person W is excited, then person Z is friendly.\nFor all X, Y, if object Y is rough and person X is bored, then person X owns object Y.\nFor all X, if there exists W such that person X is sad and person X owns object W and object W is light, then person X is happy.\nFor all X, if there exists A such that object X is old and person A likes object X and person A is happy, then object X is hard.\nFor all Z, if there exists V such that object Z is clean and person V likes object Z and person V is curious, then object Z is light.\nFor all Y, if there exists U such that person Y is tall and person Y is a friend of person U and person U is clever, then person Y is strong.\nFor all X, if object X is wet, then object X is smooth.\nFor all X, Y, if person X is angry and person Y is friendly, then person X is a parent of person Y.\nFor all X, if object X is new, then object X is dirty.\nFor all X, if person X is happy, then person X is weak.\nFor all X, if person X is curious, then person X is sad.\nFor all X, if object X is rough and object X is small, then object X is new.\nFor all X, Y, if person X is weak and person Y is tall, then person X is a friend of person Y.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if object X is rough, then object X is clean.\nFor all X, Y, if person X is friendly and object Y is soft and person X likes object Y, then person X owns object Y.\nFor all X, if person X is excited and person X is brave, then person X is sad.\nFor all X, if object X is dirty and object X is rough, then object X is soft.\n\nAnd the following facts:\nbob is tired.\neve owns car.\nit is sunny.\napple is dirty.\ndave owns apple.\nalice is a sibling of frank.\nball is big.\nalice is brave.\nbob is happy.\ndave dislikes ball.\ncarol is a friend of eve.\nalice is a friend of frank.\ngeorge is a sibling of bob.\nalice dislikes pencil.\nfrank is a sibling of bob.\nfrank likes book.\nbob is excited.\ndave is a parent of frank.\nalice is curious.\nbook is small.\n\nQUESTION:\nCould frank is busy explain bob is tired?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1231,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(bob).",
    "c": "brave(X) :- sad(X).\nhungry(X) :- brave(X).\nangry(X) :- hungry(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nweak(Y) :- bored(Y), hard(B).\nsoft(X) :- soft(X), dislikes(V,X), tall(V).\nnew(Z) :- hard(Z), owns(U,Z), weak(U).\nsmall(X) :- big(X).\ncurious(Y) :- calm(Y).\ntired(X) :- tall(X).\nfriendly(Z) :- friendly(Z).\nlikes(Y,X) :- strong(Y), new(X), dislikes(B,X).\nlikes(Y,X) :- curious(Y), heavy(X), owns(W,X).\ntired(X) :- strong(X).\nowns(Z,X) :- weak(Z), heavy(X), friend(Z,A).\ncurious(Z) :- happy(Z), enemy(Z,B), bored(B).\nwet(X) :- soft(X), likes(V,X), happy(V).\nfriend(X,Y) :- curious(X), curious(Y).\nstrong(X) :- weak(X).\nowns(X,Y) :- curious(X), clean(Y).\nexcited(X) :- strong(X), tired(X).\nsoft(X) :- wet(X), old(X).\nexcited(X) :- weak(X).\nhard(X) :- big(X).\nsad(bob).\nfriend(alice,bob).\nowns(alice,phone).\nold(book).\nfunny(alice).\ndislikes(carol,phone).\nsoft(phone).\nfriend(dave,alice).\nhard(pencil).\ndislikes(alice,ball).\nfriend(carol,alice).\ndislikes(george,pencil).\nowns(carol,car).\nenemy(george,bob).\nlight(pencil).\nowns(carol,apple).\nenemy(dave,frank).\ndislikes(eve,phone).\nowns(alice,car).\nold(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is brave.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all Y, if there exists B such that person Y is bored and object B is hard, then person Y is weak.\nFor all X, if there exists V such that object X is soft and person V dislikes object X and person V is tall, then object X is soft.\nFor all Z, if there exists U such that object Z is hard and person U owns object Z and person U is weak, then object Z is new.\nFor all X, if object X is big, then object X is small.\nFor all Y, if person Y is calm, then person Y is curious.\nFor all X, if person X is tall, then person X is tired.\nFor all Z, if person Z is friendly, then person Z is friendly.\nFor all X, Y, if there exists B such that person Y is strong and object X is new and person B dislikes object X, then person Y likes object X.\nFor all X, Y, if there exists W such that person Y is curious and object X is heavy and person W owns object X, then person Y likes object X.\nFor all X, if person X is strong, then person X is tired.\nFor all X, Z, if there exists A such that person Z is weak and object X is heavy and person Z is a friend of person A, then person Z owns object X.\nFor all Z, if there exists B such that person Z is happy and person Z is an enemy of person B and person B is bored, then person Z is curious.\nFor all X, if there exists V such that object X is soft and person V likes object X and person V is happy, then object X is wet.\nFor all X, Y, if person X is curious and person Y is curious, then person X is a friend of person Y.\nFor all X, if person X is weak, then person X is strong.\nFor all X, Y, if person X is curious and object Y is clean, then person X owns object Y.\nFor all X, if person X is strong and person X is tired, then person X is excited.\nFor all X, if object X is wet and object X is old, then object X is soft.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\nbob is sad.\nalice is a friend of bob.\nalice owns phone.\nbook is old.\nalice is funny.\ncarol dislikes phone.\nphone is soft.\ndave is a friend of alice.\npencil is hard.\nalice dislikes ball.\ncarol is a friend of alice.\ngeorge dislikes pencil.\ncarol owns car.\ngeorge is an enemy of bob.\npencil is light.\ncarol owns apple.\ndave is an enemy of frank.\neve dislikes phone.\nalice owns car.\ncar is old.\n\nQUESTION:\nIs bob is clever true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1232,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(bob).",
    "c": "brave(X) :- sad(X).\nhungry(X) :- brave(X).\nangry(X) :- hungry(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nweak(Y) :- bored(Y), hard(B).\nsoft(X) :- soft(X), dislikes(V,X), tall(V).\nnew(Z) :- hard(Z), owns(U,Z), weak(U).\nsmall(X) :- big(X).\ncurious(Y) :- calm(Y).\ntired(X) :- tall(X).\nfriendly(Z) :- friendly(Z).\nlikes(Y,X) :- strong(Y), new(X), dislikes(B,X).\nlikes(Y,X) :- curious(Y), heavy(X), owns(W,X).\ntired(X) :- strong(X).\nowns(Z,X) :- weak(Z), heavy(X), friend(Z,A).\ncurious(Z) :- happy(Z), enemy(Z,B), bored(B).\nwet(X) :- soft(X), likes(V,X), happy(V).\nfriend(X,Y) :- curious(X), curious(Y).\nstrong(X) :- weak(X).\nowns(X,Y) :- curious(X), clean(Y).\nexcited(X) :- strong(X), tired(X).\nsoft(X) :- wet(X), old(X).\nexcited(X) :- weak(X).\nhard(X) :- big(X).\nsad(bob).\nfriend(alice,bob).\nowns(alice,phone).\nold(book).\nfunny(alice).\ndislikes(carol,phone).\nsoft(phone).\nfriend(dave,alice).\nhard(pencil).\ndislikes(alice,ball).\nfriend(carol,alice).\ndislikes(george,pencil).\nowns(carol,car).\nenemy(george,bob).\nlight(pencil).\nowns(carol,apple).\nenemy(dave,frank).\ndislikes(eve,phone).\nowns(alice,car).\nold(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is brave.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all Y, if there exists B such that person Y is bored and object B is hard, then person Y is weak.\nFor all X, if there exists V such that object X is soft and person V dislikes object X and person V is tall, then object X is soft.\nFor all Z, if there exists U such that object Z is hard and person U owns object Z and person U is weak, then object Z is new.\nFor all X, if object X is big, then object X is small.\nFor all Y, if person Y is calm, then person Y is curious.\nFor all X, if person X is tall, then person X is tired.\nFor all Z, if person Z is friendly, then person Z is friendly.\nFor all X, Y, if there exists B such that person Y is strong and object X is new and person B dislikes object X, then person Y likes object X.\nFor all X, Y, if there exists W such that person Y is curious and object X is heavy and person W owns object X, then person Y likes object X.\nFor all X, if person X is strong, then person X is tired.\nFor all X, Z, if there exists A such that person Z is weak and object X is heavy and person Z is a friend of person A, then person Z owns object X.\nFor all Z, if there exists B such that person Z is happy and person Z is an enemy of person B and person B is bored, then person Z is curious.\nFor all X, if there exists V such that object X is soft and person V likes object X and person V is happy, then object X is wet.\nFor all X, Y, if person X is curious and person Y is curious, then person X is a friend of person Y.\nFor all X, if person X is weak, then person X is strong.\nFor all X, Y, if person X is curious and object Y is clean, then person X owns object Y.\nFor all X, if person X is strong and person X is tired, then person X is excited.\nFor all X, if object X is wet and object X is old, then object X is soft.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\nbob is sad.\nalice is a friend of bob.\nalice owns phone.\nbook is old.\nalice is funny.\ncarol dislikes phone.\nphone is soft.\ndave is a friend of alice.\npencil is hard.\nalice dislikes ball.\ncarol is a friend of alice.\ngeorge dislikes pencil.\ncarol owns car.\ngeorge is an enemy of bob.\npencil is light.\ncarol owns apple.\ndave is an enemy of frank.\neve dislikes phone.\nalice owns car.\ncar is old.\n\nQUESTION:\nIs bob is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1233,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(bob).",
    "c": "brave(X) :- sad(X).\nhungry(X) :- brave(X).\nangry(X) :- hungry(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nweak(Y) :- bored(Y), hard(B).\nsoft(X) :- soft(X), dislikes(V,X), tall(V).\nnew(Z) :- hard(Z), owns(U,Z), weak(U).\nsmall(X) :- big(X).\ncurious(Y) :- calm(Y).\ntired(X) :- tall(X).\nfriendly(Z) :- friendly(Z).\nlikes(Y,X) :- strong(Y), new(X), dislikes(B,X).\nlikes(Y,X) :- curious(Y), heavy(X), owns(W,X).\ntired(X) :- strong(X).\nowns(Z,X) :- weak(Z), heavy(X), friend(Z,A).\ncurious(Z) :- happy(Z), enemy(Z,B), bored(B).\nwet(X) :- soft(X), likes(V,X), happy(V).\nfriend(X,Y) :- curious(X), curious(Y).\nstrong(X) :- weak(X).\nowns(X,Y) :- curious(X), clean(Y).\nexcited(X) :- strong(X), tired(X).\nsoft(X) :- wet(X), old(X).\nexcited(X) :- weak(X).\nhard(X) :- big(X).\nclever(bob).\nfriend(alice,bob).\nowns(alice,phone).\nold(book).\nfunny(alice).\ndislikes(carol,phone).\nsoft(phone).\nfriend(dave,alice).\nhard(pencil).\ndislikes(alice,ball).\nfriend(carol,alice).\ndislikes(george,pencil).\nowns(carol,car).\nenemy(george,bob).\nlight(pencil).\nowns(carol,apple).\nenemy(dave,frank).\ndislikes(eve,phone).\nowns(alice,car).\nold(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is brave.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all Y, if there exists B such that person Y is bored and object B is hard, then person Y is weak.\nFor all X, if there exists V such that object X is soft and person V dislikes object X and person V is tall, then object X is soft.\nFor all Z, if there exists U such that object Z is hard and person U owns object Z and person U is weak, then object Z is new.\nFor all X, if object X is big, then object X is small.\nFor all Y, if person Y is calm, then person Y is curious.\nFor all X, if person X is tall, then person X is tired.\nFor all Z, if person Z is friendly, then person Z is friendly.\nFor all X, Y, if there exists B such that person Y is strong and object X is new and person B dislikes object X, then person Y likes object X.\nFor all X, Y, if there exists W such that person Y is curious and object X is heavy and person W owns object X, then person Y likes object X.\nFor all X, if person X is strong, then person X is tired.\nFor all X, Z, if there exists A such that person Z is weak and object X is heavy and person Z is a friend of person A, then person Z owns object X.\nFor all Z, if there exists B such that person Z is happy and person Z is an enemy of person B and person B is bored, then person Z is curious.\nFor all X, if there exists V such that object X is soft and person V likes object X and person V is happy, then object X is wet.\nFor all X, Y, if person X is curious and person Y is curious, then person X is a friend of person Y.\nFor all X, if person X is weak, then person X is strong.\nFor all X, Y, if person X is curious and object Y is clean, then person X owns object Y.\nFor all X, if person X is strong and person X is tired, then person X is excited.\nFor all X, if object X is wet and object X is old, then object X is soft.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\nbob is clever.\nalice is a friend of bob.\nalice owns phone.\nbook is old.\nalice is funny.\ncarol dislikes phone.\nphone is soft.\ndave is a friend of alice.\npencil is hard.\nalice dislikes ball.\ncarol is a friend of alice.\ngeorge dislikes pencil.\ncarol owns car.\ngeorge is an enemy of bob.\npencil is light.\ncarol owns apple.\ndave is an enemy of frank.\neve dislikes phone.\nalice owns car.\ncar is old.\n\nQUESTION:\nCould bob is sad explain bob is clever?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1234,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(apple).",
    "c": "brave(X) :- sad(X).\nhungry(X) :- brave(X).\nangry(X) :- hungry(X).\nbusy(X) :- angry(X).\nclever(X) :- busy(X).\nweak(Y) :- bored(Y), hard(B).\nsoft(X) :- soft(X), dislikes(V,X), tall(V).\nnew(Z) :- hard(Z), owns(U,Z), weak(U).\nsmall(X) :- big(X).\ncurious(Y) :- calm(Y).\ntired(X) :- tall(X).\nfriendly(Z) :- friendly(Z).\nlikes(Y,X) :- strong(Y), new(X), dislikes(B,X).\nlikes(Y,X) :- curious(Y), heavy(X), owns(W,X).\ntired(X) :- strong(X).\nowns(Z,X) :- weak(Z), heavy(X), friend(Z,A).\ncurious(Z) :- happy(Z), enemy(Z,B), bored(B).\nwet(X) :- soft(X), likes(V,X), happy(V).\nfriend(X,Y) :- curious(X), curious(Y).\nstrong(X) :- weak(X).\nowns(X,Y) :- curious(X), clean(Y).\nexcited(X) :- strong(X), tired(X).\nsoft(X) :- wet(X), old(X).\nexcited(X) :- weak(X).\nhard(X) :- big(X).\nclever(bob).\nfriend(alice,bob).\nowns(alice,phone).\nold(book).\nfunny(alice).\ndislikes(carol,phone).\nsoft(phone).\nfriend(dave,alice).\nhard(pencil).\ndislikes(alice,ball).\nfriend(carol,alice).\ndislikes(george,pencil).\nowns(carol,car).\nenemy(george,bob).\nlight(pencil).\nowns(carol,apple).\nenemy(dave,frank).\ndislikes(eve,phone).\nowns(alice,car).\nold(car).",
    "natural language": "You are given the following information:\nFor all X, if person X is sad, then person X is brave.\nFor all X, if person X is brave, then person X is hungry.\nFor all X, if person X is hungry, then person X is angry.\nFor all X, if person X is angry, then person X is busy.\nFor all X, if person X is busy, then person X is clever.\nFor all Y, if there exists B such that person Y is bored and object B is hard, then person Y is weak.\nFor all X, if there exists V such that object X is soft and person V dislikes object X and person V is tall, then object X is soft.\nFor all Z, if there exists U such that object Z is hard and person U owns object Z and person U is weak, then object Z is new.\nFor all X, if object X is big, then object X is small.\nFor all Y, if person Y is calm, then person Y is curious.\nFor all X, if person X is tall, then person X is tired.\nFor all Z, if person Z is friendly, then person Z is friendly.\nFor all X, Y, if there exists B such that person Y is strong and object X is new and person B dislikes object X, then person Y likes object X.\nFor all X, Y, if there exists W such that person Y is curious and object X is heavy and person W owns object X, then person Y likes object X.\nFor all X, if person X is strong, then person X is tired.\nFor all X, Z, if there exists A such that person Z is weak and object X is heavy and person Z is a friend of person A, then person Z owns object X.\nFor all Z, if there exists B such that person Z is happy and person Z is an enemy of person B and person B is bored, then person Z is curious.\nFor all X, if there exists V such that object X is soft and person V likes object X and person V is happy, then object X is wet.\nFor all X, Y, if person X is curious and person Y is curious, then person X is a friend of person Y.\nFor all X, if person X is weak, then person X is strong.\nFor all X, Y, if person X is curious and object Y is clean, then person X owns object Y.\nFor all X, if person X is strong and person X is tired, then person X is excited.\nFor all X, if object X is wet and object X is old, then object X is soft.\nFor all X, if person X is weak, then person X is excited.\nFor all X, if object X is big, then object X is hard.\n\nAnd the following facts:\nbob is clever.\nalice is a friend of bob.\nalice owns phone.\nbook is old.\nalice is funny.\ncarol dislikes phone.\nphone is soft.\ndave is a friend of alice.\npencil is hard.\nalice dislikes ball.\ncarol is a friend of alice.\ngeorge dislikes pencil.\ncarol owns car.\ngeorge is an enemy of bob.\npencil is light.\ncarol owns apple.\ndave is an enemy of frank.\neve dislikes phone.\nalice owns car.\ncar is old.\n\nQUESTION:\nCould apple is heavy explain bob is clever?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1235,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(apple).",
    "c": "dirty(X) :- soft(X).\nbig(X) :- dirty(X).\nlight(X) :- big(X).\nclean(X) :- light(X).\nwet(X) :- clean(X).\nfriend(Z,X) :- sad(Z), excited(X), parent(Z,U).\nangry(Y) :- happy(Y).\nfunny(X) :- brave(X), friend(X,B), funny(B).\nsmall(X) :- rough(X).\nbusy(Y) :- tall(Y).\nsibling(Y,Z) :- tired(Y), strong(Z), friend(Y,A).\nbrave(X) :- calm(X), friend(X,A), friendly(A).\nsad(Y) :- bored(Y).\nclever(Y) :- brave(Y).\nparent(Z,X) :- happy(Z), brave(X).\nbrave(X) :- happy(X), smooth(E).\nangry(X) :- sad(X), owns(X,B), smooth(B).\ntall(Y) :- funny(Y), likes(Y,U), new(U).\nheavy(Z) :- old(Z), owns(B,Z), hungry(B).\nparent(X,Y) :- calm(X), angry(Y).\nhungry(X) :- happy(X).\nstrong(X) :- weak(X).\nbrave(X) :- friendly(X).\ntired(X) :- happy(X).\nrough(X) :- smooth(X).\nsoft(apple).\nhappy(frank).\nlikes(dave,car).\ndislikes(dave,pencil).\ndislikes(eve,book).\nfriend(george,eve).\nenemy(eve,frank).\nnew(pencil).\nowns(bob,apple).\nsibling(george,bob).\nlikes(carol,book).\nparent(alice,george).\nparent(george,dave).\nhard(phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nfunny(bob).\nweak(george).\nheavy(car).\nnew(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, Z, if there exists U such that person Z is sad and person X is excited and person Z is a parent of person U, then person Z is a friend of person X.\nFor all Y, if person Y is happy, then person Y is angry.\nFor all X, if there exists B such that person X is brave and person X is a friend of person B and person B is funny, then person X is funny.\nFor all X, if object X is rough, then object X is small.\nFor all Y, if person Y is tall, then person Y is busy.\nFor all Y, Z, if there exists A such that person Y is tired and person Z is strong and person Y is a friend of person A, then person Y is a sibling of person Z.\nFor all X, if there exists A such that person X is calm and person X is a friend of person A and person A is friendly, then person X is brave.\nFor all Y, if person Y is bored, then person Y is sad.\nFor all Y, if person Y is brave, then person Y is clever.\nFor all X, Z, if person Z is happy and person X is brave, then person Z is a parent of person X.\nFor all X, if there exists E such that person X is happy and object E is smooth, then person X is brave.\nFor all X, if there exists B such that person X is sad and person X owns object B and object B is smooth, then person X is angry.\nFor all Y, if there exists U such that person Y is funny and person Y likes object U and object U is new, then person Y is tall.\nFor all Z, if there exists B such that object Z is old and person B owns object Z and person B is hungry, then object Z is heavy.\nFor all X, Y, if person X is calm and person Y is angry, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if object X is smooth, then object X is rough.\n\nAnd the following facts:\napple is soft.\nfrank is happy.\ndave likes car.\ndave dislikes pencil.\neve dislikes book.\ngeorge is a friend of eve.\neve is an enemy of frank.\npencil is new.\nbob owns apple.\ngeorge is a sibling of bob.\ncarol likes book.\nalice is a parent of george.\ngeorge is a parent of dave.\nphone is hard.\nbob owns pencil.\nbob dislikes ball.\nbob is funny.\ngeorge is weak.\ncar is heavy.\nball is new.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1236,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(eve).",
    "c": "dirty(X) :- soft(X).\nbig(X) :- dirty(X).\nlight(X) :- big(X).\nclean(X) :- light(X).\nwet(X) :- clean(X).\nfriend(Z,X) :- sad(Z), excited(X), parent(Z,U).\nangry(Y) :- happy(Y).\nfunny(X) :- brave(X), friend(X,B), funny(B).\nsmall(X) :- rough(X).\nbusy(Y) :- tall(Y).\nsibling(Y,Z) :- tired(Y), strong(Z), friend(Y,A).\nbrave(X) :- calm(X), friend(X,A), friendly(A).\nsad(Y) :- bored(Y).\nclever(Y) :- brave(Y).\nparent(Z,X) :- happy(Z), brave(X).\nbrave(X) :- happy(X), smooth(E).\nangry(X) :- sad(X), owns(X,B), smooth(B).\ntall(Y) :- funny(Y), likes(Y,U), new(U).\nheavy(Z) :- old(Z), owns(B,Z), hungry(B).\nparent(X,Y) :- calm(X), angry(Y).\nhungry(X) :- happy(X).\nstrong(X) :- weak(X).\nbrave(X) :- friendly(X).\ntired(X) :- happy(X).\nrough(X) :- smooth(X).\nsoft(apple).\nhappy(frank).\nlikes(dave,car).\ndislikes(dave,pencil).\ndislikes(eve,book).\nfriend(george,eve).\nenemy(eve,frank).\nnew(pencil).\nowns(bob,apple).\nsibling(george,bob).\nlikes(carol,book).\nparent(alice,george).\nparent(george,dave).\nhard(phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nfunny(bob).\nweak(george).\nheavy(car).\nnew(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, Z, if there exists U such that person Z is sad and person X is excited and person Z is a parent of person U, then person Z is a friend of person X.\nFor all Y, if person Y is happy, then person Y is angry.\nFor all X, if there exists B such that person X is brave and person X is a friend of person B and person B is funny, then person X is funny.\nFor all X, if object X is rough, then object X is small.\nFor all Y, if person Y is tall, then person Y is busy.\nFor all Y, Z, if there exists A such that person Y is tired and person Z is strong and person Y is a friend of person A, then person Y is a sibling of person Z.\nFor all X, if there exists A such that person X is calm and person X is a friend of person A and person A is friendly, then person X is brave.\nFor all Y, if person Y is bored, then person Y is sad.\nFor all Y, if person Y is brave, then person Y is clever.\nFor all X, Z, if person Z is happy and person X is brave, then person Z is a parent of person X.\nFor all X, if there exists E such that person X is happy and object E is smooth, then person X is brave.\nFor all X, if there exists B such that person X is sad and person X owns object B and object B is smooth, then person X is angry.\nFor all Y, if there exists U such that person Y is funny and person Y likes object U and object U is new, then person Y is tall.\nFor all Z, if there exists B such that object Z is old and person B owns object Z and person B is hungry, then object Z is heavy.\nFor all X, Y, if person X is calm and person Y is angry, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if object X is smooth, then object X is rough.\n\nAnd the following facts:\napple is soft.\nfrank is happy.\ndave likes car.\ndave dislikes pencil.\neve dislikes book.\ngeorge is a friend of eve.\neve is an enemy of frank.\npencil is new.\nbob owns apple.\ngeorge is a sibling of bob.\ncarol likes book.\nalice is a parent of george.\ngeorge is a parent of dave.\nphone is hard.\nbob owns pencil.\nbob dislikes ball.\nbob is funny.\ngeorge is weak.\ncar is heavy.\nball is new.\n\nQUESTION:\nIs eve is busy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1237,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(apple).",
    "c": "dirty(X) :- soft(X).\nbig(X) :- dirty(X).\nlight(X) :- big(X).\nclean(X) :- light(X).\nwet(X) :- clean(X).\nfriend(Z,X) :- sad(Z), excited(X), parent(Z,U).\nangry(Y) :- happy(Y).\nfunny(X) :- brave(X), friend(X,B), funny(B).\nsmall(X) :- rough(X).\nbusy(Y) :- tall(Y).\nsibling(Y,Z) :- tired(Y), strong(Z), friend(Y,A).\nbrave(X) :- calm(X), friend(X,A), friendly(A).\nsad(Y) :- bored(Y).\nclever(Y) :- brave(Y).\nparent(Z,X) :- happy(Z), brave(X).\nbrave(X) :- happy(X), smooth(E).\nangry(X) :- sad(X), owns(X,B), smooth(B).\ntall(Y) :- funny(Y), likes(Y,U), new(U).\nheavy(Z) :- old(Z), owns(B,Z), hungry(B).\nparent(X,Y) :- calm(X), angry(Y).\nhungry(X) :- happy(X).\nstrong(X) :- weak(X).\nbrave(X) :- friendly(X).\ntired(X) :- happy(X).\nrough(X) :- smooth(X).\nwet(apple).\nhappy(frank).\nlikes(dave,car).\ndislikes(dave,pencil).\ndislikes(eve,book).\nfriend(george,eve).\nenemy(eve,frank).\nnew(pencil).\nowns(bob,apple).\nsibling(george,bob).\nlikes(carol,book).\nparent(alice,george).\nparent(george,dave).\nhard(phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nfunny(bob).\nweak(george).\nheavy(car).\nnew(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, Z, if there exists U such that person Z is sad and person X is excited and person Z is a parent of person U, then person Z is a friend of person X.\nFor all Y, if person Y is happy, then person Y is angry.\nFor all X, if there exists B such that person X is brave and person X is a friend of person B and person B is funny, then person X is funny.\nFor all X, if object X is rough, then object X is small.\nFor all Y, if person Y is tall, then person Y is busy.\nFor all Y, Z, if there exists A such that person Y is tired and person Z is strong and person Y is a friend of person A, then person Y is a sibling of person Z.\nFor all X, if there exists A such that person X is calm and person X is a friend of person A and person A is friendly, then person X is brave.\nFor all Y, if person Y is bored, then person Y is sad.\nFor all Y, if person Y is brave, then person Y is clever.\nFor all X, Z, if person Z is happy and person X is brave, then person Z is a parent of person X.\nFor all X, if there exists E such that person X is happy and object E is smooth, then person X is brave.\nFor all X, if there exists B such that person X is sad and person X owns object B and object B is smooth, then person X is angry.\nFor all Y, if there exists U such that person Y is funny and person Y likes object U and object U is new, then person Y is tall.\nFor all Z, if there exists B such that object Z is old and person B owns object Z and person B is hungry, then object Z is heavy.\nFor all X, Y, if person X is calm and person Y is angry, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if object X is smooth, then object X is rough.\n\nAnd the following facts:\napple is wet.\nfrank is happy.\ndave likes car.\ndave dislikes pencil.\neve dislikes book.\ngeorge is a friend of eve.\neve is an enemy of frank.\npencil is new.\nbob owns apple.\ngeorge is a sibling of bob.\ncarol likes book.\nalice is a parent of george.\ngeorge is a parent of dave.\nphone is hard.\nbob owns pencil.\nbob dislikes ball.\nbob is funny.\ngeorge is weak.\ncar is heavy.\nball is new.\n\nQUESTION:\nCould apple is soft explain apple is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1238,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(bob).",
    "c": "dirty(X) :- soft(X).\nbig(X) :- dirty(X).\nlight(X) :- big(X).\nclean(X) :- light(X).\nwet(X) :- clean(X).\nfriend(Z,X) :- sad(Z), excited(X), parent(Z,U).\nangry(Y) :- happy(Y).\nfunny(X) :- brave(X), friend(X,B), funny(B).\nsmall(X) :- rough(X).\nbusy(Y) :- tall(Y).\nsibling(Y,Z) :- tired(Y), strong(Z), friend(Y,A).\nbrave(X) :- calm(X), friend(X,A), friendly(A).\nsad(Y) :- bored(Y).\nclever(Y) :- brave(Y).\nparent(Z,X) :- happy(Z), brave(X).\nbrave(X) :- happy(X), smooth(E).\nangry(X) :- sad(X), owns(X,B), smooth(B).\ntall(Y) :- funny(Y), likes(Y,U), new(U).\nheavy(Z) :- old(Z), owns(B,Z), hungry(B).\nparent(X,Y) :- calm(X), angry(Y).\nhungry(X) :- happy(X).\nstrong(X) :- weak(X).\nbrave(X) :- friendly(X).\ntired(X) :- happy(X).\nrough(X) :- smooth(X).\nwet(apple).\nhappy(frank).\nlikes(dave,car).\ndislikes(dave,pencil).\ndislikes(eve,book).\nfriend(george,eve).\nenemy(eve,frank).\nnew(pencil).\nowns(bob,apple).\nsibling(george,bob).\nlikes(carol,book).\nparent(alice,george).\nparent(george,dave).\nhard(phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nfunny(bob).\nweak(george).\nheavy(car).\nnew(ball).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is light.\nFor all X, if object X is light, then object X is clean.\nFor all X, if object X is clean, then object X is wet.\nFor all X, Z, if there exists U such that person Z is sad and person X is excited and person Z is a parent of person U, then person Z is a friend of person X.\nFor all Y, if person Y is happy, then person Y is angry.\nFor all X, if there exists B such that person X is brave and person X is a friend of person B and person B is funny, then person X is funny.\nFor all X, if object X is rough, then object X is small.\nFor all Y, if person Y is tall, then person Y is busy.\nFor all Y, Z, if there exists A such that person Y is tired and person Z is strong and person Y is a friend of person A, then person Y is a sibling of person Z.\nFor all X, if there exists A such that person X is calm and person X is a friend of person A and person A is friendly, then person X is brave.\nFor all Y, if person Y is bored, then person Y is sad.\nFor all Y, if person Y is brave, then person Y is clever.\nFor all X, Z, if person Z is happy and person X is brave, then person Z is a parent of person X.\nFor all X, if there exists E such that person X is happy and object E is smooth, then person X is brave.\nFor all X, if there exists B such that person X is sad and person X owns object B and object B is smooth, then person X is angry.\nFor all Y, if there exists U such that person Y is funny and person Y likes object U and object U is new, then person Y is tall.\nFor all Z, if there exists B such that object Z is old and person B owns object Z and person B is hungry, then object Z is heavy.\nFor all X, Y, if person X is calm and person Y is angry, then person X is a parent of person Y.\nFor all X, if person X is happy, then person X is hungry.\nFor all X, if person X is weak, then person X is strong.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is happy, then person X is tired.\nFor all X, if object X is smooth, then object X is rough.\n\nAnd the following facts:\napple is wet.\nfrank is happy.\ndave likes car.\ndave dislikes pencil.\neve dislikes book.\ngeorge is a friend of eve.\neve is an enemy of frank.\npencil is new.\nbob owns apple.\ngeorge is a sibling of bob.\ncarol likes book.\nalice is a parent of george.\ngeorge is a parent of dave.\nphone is hard.\nbob owns pencil.\nbob dislikes ball.\nbob is funny.\ngeorge is weak.\ncar is heavy.\nball is new.\n\nQUESTION:\nCould bob is angry explain apple is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1239,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "busy(dave).",
    "c": "hungry(X) :- angry(X).\nfunny(X) :- hungry(X).\nweak(X) :- funny(X).\ntall(X) :- weak(X).\nbusy(X) :- tall(X).\nhappy(Y) :- curious(Y), likes(Y,W), new(W).\nnew(X) :- heavy(X).\nlikes(X,Z) :- big(Z), clever(X).\nsmooth(Y) :- dirty(Y), dislikes(V,Y), curious(V).\nbrave(Y) :- brave(Y).\nred(Z) :- old(Z), likes(V,Z), tired(V).\nlikes(X,Z) :- small(Z), excited(X), enemy(X,V).\nbig(Y) :- small(Y), owns(W,Y), brave(W).\nold(Y) :- clean(Y), dislikes(U,Y), bored(U).\ndirty(X) :- wet(X), soft(E).\nstrong(X) :- sad(X), friend(X,V), curious(V).\ncurious(X) :- friendly(X).\nbig(X) :- light(X).\nbrave(X) :- strong(X), excited(X).\nsmall(X) :- soft(X).\nenemy(X,Y) :- sad(X), calm(Y).\nrough(X) :- red(X).\nsad(X) :- happy(X).\nrough(X) :- small(X).\nsibling(X,Y) :- clever(X), calm(Y).\nangry(dave).\nclean(phone).\nfriend(carol,alice).\nsibling(frank,dave).\nsibling(george,eve).\ndislikes(bob,pencil).\ndislikes(alice,book).\nlikes(george,ball).\nstrong(dave).\nsmooth(phone).\nsibling(frank,alice).\nbored(eve).\nenemy(carol,george).\nred(apple).\nowns(dave,car).\nsad(george).\nowns(george,ball).\nparent(frank,george).\ndislikes(eve,car).\nexcited(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all Y, if there exists W such that person Y is curious and person Y likes object W and object W is new, then person Y is happy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Z, if object Z is big and person X is clever, then person X likes object Z.\nFor all Y, if there exists V such that object Y is dirty and person V dislikes object Y and person V is curious, then object Y is smooth.\nFor all Y, if person Y is brave, then person Y is brave.\nFor all Z, if there exists V such that object Z is old and person V likes object Z and person V is tired, then object Z is red.\nFor all X, Z, if there exists V such that object Z is small and person X is excited and person X is an enemy of person V, then person X likes object Z.\nFor all Y, if there exists W such that object Y is small and person W owns object Y and person W is brave, then object Y is big.\nFor all Y, if there exists U such that object Y is clean and person U dislikes object Y and person U is bored, then object Y is old.\nFor all X, if there exists E such that object X is wet and object E is soft, then object X is dirty.\nFor all X, if there exists V such that person X is sad and person X is a friend of person V and person V is curious, then person X is strong.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if object X is light, then object X is big.\nFor all X, if person X is strong and person X is excited, then person X is brave.\nFor all X, if object X is soft, then object X is small.\nFor all X, Y, if person X is sad and person Y is calm, then person X is an enemy of person Y.\nFor all X, if object X is red, then object X is rough.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if object X is small, then object X is rough.\nFor all X, Y, if person X is clever and person Y is calm, then person X is a sibling of person Y.\n\nAnd the following facts:\ndave is angry.\nphone is clean.\ncarol is a friend of alice.\nfrank is a sibling of dave.\ngeorge is a sibling of eve.\nbob dislikes pencil.\nalice dislikes book.\ngeorge likes ball.\ndave is strong.\nphone is smooth.\nfrank is a sibling of alice.\neve is bored.\ncarol is an enemy of george.\napple is red.\ndave owns car.\ngeorge is sad.\ngeorge owns ball.\nfrank is a parent of george.\neve dislikes car.\nalice is excited.\n\nQUESTION:\nIs dave is busy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1240,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(ball).",
    "c": "hungry(X) :- angry(X).\nfunny(X) :- hungry(X).\nweak(X) :- funny(X).\ntall(X) :- weak(X).\nbusy(X) :- tall(X).\nhappy(Y) :- curious(Y), likes(Y,W), new(W).\nnew(X) :- heavy(X).\nlikes(X,Z) :- big(Z), clever(X).\nsmooth(Y) :- dirty(Y), dislikes(V,Y), curious(V).\nbrave(Y) :- brave(Y).\nred(Z) :- old(Z), likes(V,Z), tired(V).\nlikes(X,Z) :- small(Z), excited(X), enemy(X,V).\nbig(Y) :- small(Y), owns(W,Y), brave(W).\nold(Y) :- clean(Y), dislikes(U,Y), bored(U).\ndirty(X) :- wet(X), soft(E).\nstrong(X) :- sad(X), friend(X,V), curious(V).\ncurious(X) :- friendly(X).\nbig(X) :- light(X).\nbrave(X) :- strong(X), excited(X).\nsmall(X) :- soft(X).\nenemy(X,Y) :- sad(X), calm(Y).\nrough(X) :- red(X).\nsad(X) :- happy(X).\nrough(X) :- small(X).\nsibling(X,Y) :- clever(X), calm(Y).\nangry(dave).\nclean(phone).\nfriend(carol,alice).\nsibling(frank,dave).\nsibling(george,eve).\ndislikes(bob,pencil).\ndislikes(alice,book).\nlikes(george,ball).\nstrong(dave).\nsmooth(phone).\nsibling(frank,alice).\nbored(eve).\nenemy(carol,george).\nred(apple).\nowns(dave,car).\nsad(george).\nowns(george,ball).\nparent(frank,george).\ndislikes(eve,car).\nexcited(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all Y, if there exists W such that person Y is curious and person Y likes object W and object W is new, then person Y is happy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Z, if object Z is big and person X is clever, then person X likes object Z.\nFor all Y, if there exists V such that object Y is dirty and person V dislikes object Y and person V is curious, then object Y is smooth.\nFor all Y, if person Y is brave, then person Y is brave.\nFor all Z, if there exists V such that object Z is old and person V likes object Z and person V is tired, then object Z is red.\nFor all X, Z, if there exists V such that object Z is small and person X is excited and person X is an enemy of person V, then person X likes object Z.\nFor all Y, if there exists W such that object Y is small and person W owns object Y and person W is brave, then object Y is big.\nFor all Y, if there exists U such that object Y is clean and person U dislikes object Y and person U is bored, then object Y is old.\nFor all X, if there exists E such that object X is wet and object E is soft, then object X is dirty.\nFor all X, if there exists V such that person X is sad and person X is a friend of person V and person V is curious, then person X is strong.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if object X is light, then object X is big.\nFor all X, if person X is strong and person X is excited, then person X is brave.\nFor all X, if object X is soft, then object X is small.\nFor all X, Y, if person X is sad and person Y is calm, then person X is an enemy of person Y.\nFor all X, if object X is red, then object X is rough.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if object X is small, then object X is rough.\nFor all X, Y, if person X is clever and person Y is calm, then person X is a sibling of person Y.\n\nAnd the following facts:\ndave is angry.\nphone is clean.\ncarol is a friend of alice.\nfrank is a sibling of dave.\ngeorge is a sibling of eve.\nbob dislikes pencil.\nalice dislikes book.\ngeorge likes ball.\ndave is strong.\nphone is smooth.\nfrank is a sibling of alice.\neve is bored.\ncarol is an enemy of george.\napple is red.\ndave owns car.\ngeorge is sad.\ngeorge owns ball.\nfrank is a parent of george.\neve dislikes car.\nalice is excited.\n\nQUESTION:\nIs ball is clean true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1241,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(dave).",
    "c": "hungry(X) :- angry(X).\nfunny(X) :- hungry(X).\nweak(X) :- funny(X).\ntall(X) :- weak(X).\nbusy(X) :- tall(X).\nhappy(Y) :- curious(Y), likes(Y,W), new(W).\nnew(X) :- heavy(X).\nlikes(X,Z) :- big(Z), clever(X).\nsmooth(Y) :- dirty(Y), dislikes(V,Y), curious(V).\nbrave(Y) :- brave(Y).\nred(Z) :- old(Z), likes(V,Z), tired(V).\nlikes(X,Z) :- small(Z), excited(X), enemy(X,V).\nbig(Y) :- small(Y), owns(W,Y), brave(W).\nold(Y) :- clean(Y), dislikes(U,Y), bored(U).\ndirty(X) :- wet(X), soft(E).\nstrong(X) :- sad(X), friend(X,V), curious(V).\ncurious(X) :- friendly(X).\nbig(X) :- light(X).\nbrave(X) :- strong(X), excited(X).\nsmall(X) :- soft(X).\nenemy(X,Y) :- sad(X), calm(Y).\nrough(X) :- red(X).\nsad(X) :- happy(X).\nrough(X) :- small(X).\nsibling(X,Y) :- clever(X), calm(Y).\nbusy(dave).\nclean(phone).\nfriend(carol,alice).\nsibling(frank,dave).\nsibling(george,eve).\ndislikes(bob,pencil).\ndislikes(alice,book).\nlikes(george,ball).\nstrong(dave).\nsmooth(phone).\nsibling(frank,alice).\nbored(eve).\nenemy(carol,george).\nred(apple).\nowns(dave,car).\nsad(george).\nowns(george,ball).\nparent(frank,george).\ndislikes(eve,car).\nexcited(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all Y, if there exists W such that person Y is curious and person Y likes object W and object W is new, then person Y is happy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Z, if object Z is big and person X is clever, then person X likes object Z.\nFor all Y, if there exists V such that object Y is dirty and person V dislikes object Y and person V is curious, then object Y is smooth.\nFor all Y, if person Y is brave, then person Y is brave.\nFor all Z, if there exists V such that object Z is old and person V likes object Z and person V is tired, then object Z is red.\nFor all X, Z, if there exists V such that object Z is small and person X is excited and person X is an enemy of person V, then person X likes object Z.\nFor all Y, if there exists W such that object Y is small and person W owns object Y and person W is brave, then object Y is big.\nFor all Y, if there exists U such that object Y is clean and person U dislikes object Y and person U is bored, then object Y is old.\nFor all X, if there exists E such that object X is wet and object E is soft, then object X is dirty.\nFor all X, if there exists V such that person X is sad and person X is a friend of person V and person V is curious, then person X is strong.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if object X is light, then object X is big.\nFor all X, if person X is strong and person X is excited, then person X is brave.\nFor all X, if object X is soft, then object X is small.\nFor all X, Y, if person X is sad and person Y is calm, then person X is an enemy of person Y.\nFor all X, if object X is red, then object X is rough.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if object X is small, then object X is rough.\nFor all X, Y, if person X is clever and person Y is calm, then person X is a sibling of person Y.\n\nAnd the following facts:\ndave is busy.\nphone is clean.\ncarol is a friend of alice.\nfrank is a sibling of dave.\ngeorge is a sibling of eve.\nbob dislikes pencil.\nalice dislikes book.\ngeorge likes ball.\ndave is strong.\nphone is smooth.\nfrank is a sibling of alice.\neve is bored.\ncarol is an enemy of george.\napple is red.\ndave owns car.\ngeorge is sad.\ngeorge owns ball.\nfrank is a parent of george.\neve dislikes car.\nalice is excited.\n\nQUESTION:\nCould dave is angry explain dave is busy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1242,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(pencil).",
    "c": "hungry(X) :- angry(X).\nfunny(X) :- hungry(X).\nweak(X) :- funny(X).\ntall(X) :- weak(X).\nbusy(X) :- tall(X).\nhappy(Y) :- curious(Y), likes(Y,W), new(W).\nnew(X) :- heavy(X).\nlikes(X,Z) :- big(Z), clever(X).\nsmooth(Y) :- dirty(Y), dislikes(V,Y), curious(V).\nbrave(Y) :- brave(Y).\nred(Z) :- old(Z), likes(V,Z), tired(V).\nlikes(X,Z) :- small(Z), excited(X), enemy(X,V).\nbig(Y) :- small(Y), owns(W,Y), brave(W).\nold(Y) :- clean(Y), dislikes(U,Y), bored(U).\ndirty(X) :- wet(X), soft(E).\nstrong(X) :- sad(X), friend(X,V), curious(V).\ncurious(X) :- friendly(X).\nbig(X) :- light(X).\nbrave(X) :- strong(X), excited(X).\nsmall(X) :- soft(X).\nenemy(X,Y) :- sad(X), calm(Y).\nrough(X) :- red(X).\nsad(X) :- happy(X).\nrough(X) :- small(X).\nsibling(X,Y) :- clever(X), calm(Y).\nbusy(dave).\nclean(phone).\nfriend(carol,alice).\nsibling(frank,dave).\nsibling(george,eve).\ndislikes(bob,pencil).\ndislikes(alice,book).\nlikes(george,ball).\nstrong(dave).\nsmooth(phone).\nsibling(frank,alice).\nbored(eve).\nenemy(carol,george).\nred(apple).\nowns(dave,car).\nsad(george).\nowns(george,ball).\nparent(frank,george).\ndislikes(eve,car).\nexcited(alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is angry, then person X is hungry.\nFor all X, if person X is hungry, then person X is funny.\nFor all X, if person X is funny, then person X is weak.\nFor all X, if person X is weak, then person X is tall.\nFor all X, if person X is tall, then person X is busy.\nFor all Y, if there exists W such that person Y is curious and person Y likes object W and object W is new, then person Y is happy.\nFor all X, if object X is heavy, then object X is new.\nFor all X, Z, if object Z is big and person X is clever, then person X likes object Z.\nFor all Y, if there exists V such that object Y is dirty and person V dislikes object Y and person V is curious, then object Y is smooth.\nFor all Y, if person Y is brave, then person Y is brave.\nFor all Z, if there exists V such that object Z is old and person V likes object Z and person V is tired, then object Z is red.\nFor all X, Z, if there exists V such that object Z is small and person X is excited and person X is an enemy of person V, then person X likes object Z.\nFor all Y, if there exists W such that object Y is small and person W owns object Y and person W is brave, then object Y is big.\nFor all Y, if there exists U such that object Y is clean and person U dislikes object Y and person U is bored, then object Y is old.\nFor all X, if there exists E such that object X is wet and object E is soft, then object X is dirty.\nFor all X, if there exists V such that person X is sad and person X is a friend of person V and person V is curious, then person X is strong.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if object X is light, then object X is big.\nFor all X, if person X is strong and person X is excited, then person X is brave.\nFor all X, if object X is soft, then object X is small.\nFor all X, Y, if person X is sad and person Y is calm, then person X is an enemy of person Y.\nFor all X, if object X is red, then object X is rough.\nFor all X, if person X is happy, then person X is sad.\nFor all X, if object X is small, then object X is rough.\nFor all X, Y, if person X is clever and person Y is calm, then person X is a sibling of person Y.\n\nAnd the following facts:\ndave is busy.\nphone is clean.\ncarol is a friend of alice.\nfrank is a sibling of dave.\ngeorge is a sibling of eve.\nbob dislikes pencil.\nalice dislikes book.\ngeorge likes ball.\ndave is strong.\nphone is smooth.\nfrank is a sibling of alice.\neve is bored.\ncarol is an enemy of george.\napple is red.\ndave owns car.\ngeorge is sad.\ngeorge owns ball.\nfrank is a parent of george.\neve dislikes car.\nalice is excited.\n\nQUESTION:\nCould pencil is dirty explain dave is busy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1243,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clean(pencil).",
    "c": "wet(X) :- smooth(X).\nlight(X) :- wet(X).\ndirty(X) :- light(X).\nsoft(X) :- dirty(X).\nclean(X) :- soft(X).\nhungry(Y) :- friendly(Y), likes(Y,B), heavy(B).\nexcited(Z) :- hungry(Z), parent(Z,W), calm(W).\nsmall(Z) :- small(Z), dislikes(V,Z), calm(V).\nweak(Y) :- friendly(Y), friend(Y,U), sad(U).\nfriend(X,Z) :- funny(Z), excited(X).\nweak(Z) :- strong(Z).\nhungry(Y) :- brave(Y), enemy(Y,A), clever(A).\nfriendly(X) :- tired(X), parent(X,W), calm(W).\nlikes(X,Y) :- big(Y), tall(X), dislikes(W,Y).\ncurious(X) :- tired(X), dislikes(X,W), rough(W).\nbored(X) :- excited(X), sad(X).\nowns(X,Y) :- weak(X), big(Y).\nbusy(X) :- excited(X), calm(X).\nbrave(X) :- angry(X).\nfriendly(X) :- hungry(X), curious(X).\nrough(X) :- old(X).\nsmall(X) :- big(X), new(X).\nhungry(X) :- weak(X).\nbig(X) :- red(X), new(X).\nold(X) :- heavy(X).\nsmooth(pencil).\nfriend(dave,alice).\nstrong(carol).\nsibling(alice,frank).\nweak(carol).\nfriendly(eve).\nbig(pencil).\nowns(alice,car).\nbrave(eve).\nlikes(bob,car).\nlikes(george,apple).\ntired(frank).\nparent(eve,alice).\nlikes(alice,ball).\nangry(george).\nclever(alice).\nsad(eve).\nsibling(frank,alice).\nhungry(george).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all Y, if there exists B such that person Y is friendly and person Y likes object B and object B is heavy, then person Y is hungry.\nFor all Z, if there exists W such that person Z is hungry and person Z is a parent of person W and person W is calm, then person Z is excited.\nFor all Z, if there exists V such that object Z is small and person V dislikes object Z and person V is calm, then object Z is small.\nFor all Y, if there exists U such that person Y is friendly and person Y is a friend of person U and person U is sad, then person Y is weak.\nFor all X, Z, if person Z is funny and person X is excited, then person X is a friend of person Z.\nFor all Z, if person Z is strong, then person Z is weak.\nFor all Y, if there exists A such that person Y is brave and person Y is an enemy of person A and person A is clever, then person Y is hungry.\nFor all X, if there exists W such that person X is tired and person X is a parent of person W and person W is calm, then person X is friendly.\nFor all X, Y, if there exists W such that object Y is big and person X is tall and person W dislikes object Y, then person X likes object Y.\nFor all X, if there exists W such that person X is tired and person X dislikes object W and object W is rough, then person X is curious.\nFor all X, if person X is excited and person X is sad, then person X is bored.\nFor all X, Y, if person X is weak and object Y is big, then person X owns object Y.\nFor all X, if person X is excited and person X is calm, then person X is busy.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is hungry and person X is curious, then person X is friendly.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is big and object X is new, then object X is small.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if object X is red and object X is new, then object X is big.\nFor all X, if object X is heavy, then object X is old.\n\nAnd the following facts:\npencil is smooth.\ndave is a friend of alice.\ncarol is strong.\nalice is a sibling of frank.\ncarol is weak.\neve is friendly.\npencil is big.\nalice owns car.\neve is brave.\nbob likes car.\ngeorge likes apple.\nfrank is tired.\neve is a parent of alice.\nalice likes ball.\ngeorge is angry.\nalice is clever.\neve is sad.\nfrank is a sibling of alice.\ngeorge is hungry.\ncarol is a sibling of eve.\n\nQUESTION:\nIs pencil is clean true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "deduction"
    },
    "id": 1244,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "wet(X) :- smooth(X).\nlight(X) :- wet(X).\ndirty(X) :- light(X).\nsoft(X) :- dirty(X).\nclean(X) :- soft(X).\nhungry(Y) :- friendly(Y), likes(Y,B), heavy(B).\nexcited(Z) :- hungry(Z), parent(Z,W), calm(W).\nsmall(Z) :- small(Z), dislikes(V,Z), calm(V).\nweak(Y) :- friendly(Y), friend(Y,U), sad(U).\nfriend(X,Z) :- funny(Z), excited(X).\nweak(Z) :- strong(Z).\nhungry(Y) :- brave(Y), enemy(Y,A), clever(A).\nfriendly(X) :- tired(X), parent(X,W), calm(W).\nlikes(X,Y) :- big(Y), tall(X), dislikes(W,Y).\ncurious(X) :- tired(X), dislikes(X,W), rough(W).\nbored(X) :- excited(X), sad(X).\nowns(X,Y) :- weak(X), big(Y).\nbusy(X) :- excited(X), calm(X).\nbrave(X) :- angry(X).\nfriendly(X) :- hungry(X), curious(X).\nrough(X) :- old(X).\nsmall(X) :- big(X), new(X).\nhungry(X) :- weak(X).\nbig(X) :- red(X), new(X).\nold(X) :- heavy(X).\nsmooth(pencil).\nfriend(dave,alice).\nstrong(carol).\nsibling(alice,frank).\nweak(carol).\nfriendly(eve).\nbig(pencil).\nowns(alice,car).\nbrave(eve).\nlikes(bob,car).\nlikes(george,apple).\ntired(frank).\nparent(eve,alice).\nlikes(alice,ball).\nangry(george).\nclever(alice).\nsad(eve).\nsibling(frank,alice).\nhungry(george).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all Y, if there exists B such that person Y is friendly and person Y likes object B and object B is heavy, then person Y is hungry.\nFor all Z, if there exists W such that person Z is hungry and person Z is a parent of person W and person W is calm, then person Z is excited.\nFor all Z, if there exists V such that object Z is small and person V dislikes object Z and person V is calm, then object Z is small.\nFor all Y, if there exists U such that person Y is friendly and person Y is a friend of person U and person U is sad, then person Y is weak.\nFor all X, Z, if person Z is funny and person X is excited, then person X is a friend of person Z.\nFor all Z, if person Z is strong, then person Z is weak.\nFor all Y, if there exists A such that person Y is brave and person Y is an enemy of person A and person A is clever, then person Y is hungry.\nFor all X, if there exists W such that person X is tired and person X is a parent of person W and person W is calm, then person X is friendly.\nFor all X, Y, if there exists W such that object Y is big and person X is tall and person W dislikes object Y, then person X likes object Y.\nFor all X, if there exists W such that person X is tired and person X dislikes object W and object W is rough, then person X is curious.\nFor all X, if person X is excited and person X is sad, then person X is bored.\nFor all X, Y, if person X is weak and object Y is big, then person X owns object Y.\nFor all X, if person X is excited and person X is calm, then person X is busy.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is hungry and person X is curious, then person X is friendly.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is big and object X is new, then object X is small.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if object X is red and object X is new, then object X is big.\nFor all X, if object X is heavy, then object X is old.\n\nAnd the following facts:\npencil is smooth.\ndave is a friend of alice.\ncarol is strong.\nalice is a sibling of frank.\ncarol is weak.\neve is friendly.\npencil is big.\nalice owns car.\neve is brave.\nbob likes car.\ngeorge likes apple.\nfrank is tired.\neve is a parent of alice.\nalice likes ball.\ngeorge is angry.\nalice is clever.\neve is sad.\nfrank is a sibling of alice.\ngeorge is hungry.\ncarol is a sibling of eve.\n\nQUESTION:\nIs ball is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1245,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(pencil).",
    "c": "wet(X) :- smooth(X).\nlight(X) :- wet(X).\ndirty(X) :- light(X).\nsoft(X) :- dirty(X).\nclean(X) :- soft(X).\nhungry(Y) :- friendly(Y), likes(Y,B), heavy(B).\nexcited(Z) :- hungry(Z), parent(Z,W), calm(W).\nsmall(Z) :- small(Z), dislikes(V,Z), calm(V).\nweak(Y) :- friendly(Y), friend(Y,U), sad(U).\nfriend(X,Z) :- funny(Z), excited(X).\nweak(Z) :- strong(Z).\nhungry(Y) :- brave(Y), enemy(Y,A), clever(A).\nfriendly(X) :- tired(X), parent(X,W), calm(W).\nlikes(X,Y) :- big(Y), tall(X), dislikes(W,Y).\ncurious(X) :- tired(X), dislikes(X,W), rough(W).\nbored(X) :- excited(X), sad(X).\nowns(X,Y) :- weak(X), big(Y).\nbusy(X) :- excited(X), calm(X).\nbrave(X) :- angry(X).\nfriendly(X) :- hungry(X), curious(X).\nrough(X) :- old(X).\nsmall(X) :- big(X), new(X).\nhungry(X) :- weak(X).\nbig(X) :- red(X), new(X).\nold(X) :- heavy(X).\nclean(pencil).\nfriend(dave,alice).\nstrong(carol).\nsibling(alice,frank).\nweak(carol).\nfriendly(eve).\nbig(pencil).\nowns(alice,car).\nbrave(eve).\nlikes(bob,car).\nlikes(george,apple).\ntired(frank).\nparent(eve,alice).\nlikes(alice,ball).\nangry(george).\nclever(alice).\nsad(eve).\nsibling(frank,alice).\nhungry(george).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all Y, if there exists B such that person Y is friendly and person Y likes object B and object B is heavy, then person Y is hungry.\nFor all Z, if there exists W such that person Z is hungry and person Z is a parent of person W and person W is calm, then person Z is excited.\nFor all Z, if there exists V such that object Z is small and person V dislikes object Z and person V is calm, then object Z is small.\nFor all Y, if there exists U such that person Y is friendly and person Y is a friend of person U and person U is sad, then person Y is weak.\nFor all X, Z, if person Z is funny and person X is excited, then person X is a friend of person Z.\nFor all Z, if person Z is strong, then person Z is weak.\nFor all Y, if there exists A such that person Y is brave and person Y is an enemy of person A and person A is clever, then person Y is hungry.\nFor all X, if there exists W such that person X is tired and person X is a parent of person W and person W is calm, then person X is friendly.\nFor all X, Y, if there exists W such that object Y is big and person X is tall and person W dislikes object Y, then person X likes object Y.\nFor all X, if there exists W such that person X is tired and person X dislikes object W and object W is rough, then person X is curious.\nFor all X, if person X is excited and person X is sad, then person X is bored.\nFor all X, Y, if person X is weak and object Y is big, then person X owns object Y.\nFor all X, if person X is excited and person X is calm, then person X is busy.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is hungry and person X is curious, then person X is friendly.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is big and object X is new, then object X is small.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if object X is red and object X is new, then object X is big.\nFor all X, if object X is heavy, then object X is old.\n\nAnd the following facts:\npencil is clean.\ndave is a friend of alice.\ncarol is strong.\nalice is a sibling of frank.\ncarol is weak.\neve is friendly.\npencil is big.\nalice owns car.\neve is brave.\nbob likes car.\ngeorge likes apple.\nfrank is tired.\neve is a parent of alice.\nalice likes ball.\ngeorge is angry.\nalice is clever.\neve is sad.\nfrank is a sibling of alice.\ngeorge is hungry.\ncarol is a sibling of eve.\n\nQUESTION:\nCould pencil is smooth explain pencil is clean?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": 5,
      "reasoning_type": "abduction"
    },
    "id": 1246,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(pencil).",
    "c": "wet(X) :- smooth(X).\nlight(X) :- wet(X).\ndirty(X) :- light(X).\nsoft(X) :- dirty(X).\nclean(X) :- soft(X).\nhungry(Y) :- friendly(Y), likes(Y,B), heavy(B).\nexcited(Z) :- hungry(Z), parent(Z,W), calm(W).\nsmall(Z) :- small(Z), dislikes(V,Z), calm(V).\nweak(Y) :- friendly(Y), friend(Y,U), sad(U).\nfriend(X,Z) :- funny(Z), excited(X).\nweak(Z) :- strong(Z).\nhungry(Y) :- brave(Y), enemy(Y,A), clever(A).\nfriendly(X) :- tired(X), parent(X,W), calm(W).\nlikes(X,Y) :- big(Y), tall(X), dislikes(W,Y).\ncurious(X) :- tired(X), dislikes(X,W), rough(W).\nbored(X) :- excited(X), sad(X).\nowns(X,Y) :- weak(X), big(Y).\nbusy(X) :- excited(X), calm(X).\nbrave(X) :- angry(X).\nfriendly(X) :- hungry(X), curious(X).\nrough(X) :- old(X).\nsmall(X) :- big(X), new(X).\nhungry(X) :- weak(X).\nbig(X) :- red(X), new(X).\nold(X) :- heavy(X).\nclean(pencil).\nfriend(dave,alice).\nstrong(carol).\nsibling(alice,frank).\nweak(carol).\nfriendly(eve).\nbig(pencil).\nowns(alice,car).\nbrave(eve).\nlikes(bob,car).\nlikes(george,apple).\ntired(frank).\nparent(eve,alice).\nlikes(alice,ball).\nangry(george).\nclever(alice).\nsad(eve).\nsibling(frank,alice).\nhungry(george).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is smooth, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is dirty.\nFor all X, if object X is dirty, then object X is soft.\nFor all X, if object X is soft, then object X is clean.\nFor all Y, if there exists B such that person Y is friendly and person Y likes object B and object B is heavy, then person Y is hungry.\nFor all Z, if there exists W such that person Z is hungry and person Z is a parent of person W and person W is calm, then person Z is excited.\nFor all Z, if there exists V such that object Z is small and person V dislikes object Z and person V is calm, then object Z is small.\nFor all Y, if there exists U such that person Y is friendly and person Y is a friend of person U and person U is sad, then person Y is weak.\nFor all X, Z, if person Z is funny and person X is excited, then person X is a friend of person Z.\nFor all Z, if person Z is strong, then person Z is weak.\nFor all Y, if there exists A such that person Y is brave and person Y is an enemy of person A and person A is clever, then person Y is hungry.\nFor all X, if there exists W such that person X is tired and person X is a parent of person W and person W is calm, then person X is friendly.\nFor all X, Y, if there exists W such that object Y is big and person X is tall and person W dislikes object Y, then person X likes object Y.\nFor all X, if there exists W such that person X is tired and person X dislikes object W and object W is rough, then person X is curious.\nFor all X, if person X is excited and person X is sad, then person X is bored.\nFor all X, Y, if person X is weak and object Y is big, then person X owns object Y.\nFor all X, if person X is excited and person X is calm, then person X is busy.\nFor all X, if person X is angry, then person X is brave.\nFor all X, if person X is hungry and person X is curious, then person X is friendly.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is big and object X is new, then object X is small.\nFor all X, if person X is weak, then person X is hungry.\nFor all X, if object X is red and object X is new, then object X is big.\nFor all X, if object X is heavy, then object X is old.\n\nAnd the following facts:\npencil is clean.\ndave is a friend of alice.\ncarol is strong.\nalice is a sibling of frank.\ncarol is weak.\neve is friendly.\npencil is big.\nalice owns car.\neve is brave.\nbob likes car.\ngeorge likes apple.\nfrank is tired.\neve is a parent of alice.\nalice likes ball.\ngeorge is angry.\nalice is clever.\neve is sad.\nfrank is a sibling of alice.\ngeorge is hungry.\ncarol is a sibling of eve.\n\nQUESTION:\nCould pencil is red explain pencil is clean?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1247,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "wet(car).",
    "c": "smooth(X) :- red(X).\nbig(X) :- smooth(X).\nclean(X) :- big(X).\nheavy(X) :- clean(X).\nhard(X) :- heavy(X).\nclean(X) :- hard(X).\nbig(X) :- clean(X).\nsoft(X) :- big(X).\nsmooth(X) :- soft(X).\nwet(X) :- smooth(X).\nbusy(Y) :- strong(Y), enemy(Y,B), excited(B).\nbrave(Z) :- brave(Z), small(A).\nexcited(X) :- busy(X), rough(E).\nsmall(Y) :- dirty(Y).\nsibling(X,Y) :- funny(Y), tired(X), happy(A).\nnew(Y) :- dirty(Y), likes(B,Y), funny(B).\nenemy(Z,Y) :- clever(Y), calm(Z), enemy(Z,A).\nexcited(X) :- angry(X), hungry(X).\nweak(X) :- sad(X).\nfriend(X,Y) :- hungry(X), weak(Y).\nbored(X) :- funny(X).\ntired(X) :- hungry(X).\nsmall(X) :- rough(X).\nowns(X,Y) :- excited(X), old(Y).\nweak(X) :- funny(X), excited(X).\nred(car).\nfriend(george,alice).\nenemy(frank,george).\nfriendly(dave).\nparent(dave,frank).\ndislikes(alice,apple).\nstrong(eve).\nowns(carol,pencil).\nstrong(carol).\ncurious(dave).\nsad(eve).\nbored(eve).\nsibling(george,bob).\nowns(dave,phone).\nfriend(alice,carol).\nenemy(dave,eve).\nowns(carol,phone).\ndislikes(eve,pencil).\nlikes(carol,apple).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all Y, if there exists B such that person Y is strong and person Y is an enemy of person B and person B is excited, then person Y is busy.\nFor all Z, if there exists A such that person Z is brave and object A is small, then person Z is brave.\nFor all X, if there exists E such that person X is busy and object E is rough, then person X is excited.\nFor all Y, if object Y is dirty, then object Y is small.\nFor all X, Y, if there exists A such that person Y is funny and person X is tired and person A is happy, then person X is a sibling of person Y.\nFor all Y, if there exists B such that object Y is dirty and person B likes object Y and person B is funny, then object Y is new.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is calm and person Z is an enemy of person A, then person Z is an enemy of person Y.\nFor all X, if person X is angry and person X is hungry, then person X is excited.\nFor all X, if person X is sad, then person X is weak.\nFor all X, Y, if person X is hungry and person Y is weak, then person X is a friend of person Y.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if object X is rough, then object X is small.\nFor all X, Y, if person X is excited and object Y is old, then person X owns object Y.\nFor all X, if person X is funny and person X is excited, then person X is weak.\n\nAnd the following facts:\ncar is red.\ngeorge is a friend of alice.\nfrank is an enemy of george.\ndave is friendly.\ndave is a parent of frank.\nalice dislikes apple.\neve is strong.\ncarol owns pencil.\ncarol is strong.\ndave is curious.\neve is sad.\neve is bored.\ngeorge is a sibling of bob.\ndave owns phone.\nalice is a friend of carol.\ndave is an enemy of eve.\ncarol owns phone.\neve dislikes pencil.\ncarol likes apple.\napple is old.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1248,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "bored(bob).",
    "c": "smooth(X) :- red(X).\nbig(X) :- smooth(X).\nclean(X) :- big(X).\nheavy(X) :- clean(X).\nhard(X) :- heavy(X).\nclean(X) :- hard(X).\nbig(X) :- clean(X).\nsoft(X) :- big(X).\nsmooth(X) :- soft(X).\nwet(X) :- smooth(X).\nbusy(Y) :- strong(Y), enemy(Y,B), excited(B).\nbrave(Z) :- brave(Z), small(A).\nexcited(X) :- busy(X), rough(E).\nsmall(Y) :- dirty(Y).\nsibling(X,Y) :- funny(Y), tired(X), happy(A).\nnew(Y) :- dirty(Y), likes(B,Y), funny(B).\nenemy(Z,Y) :- clever(Y), calm(Z), enemy(Z,A).\nexcited(X) :- angry(X), hungry(X).\nweak(X) :- sad(X).\nfriend(X,Y) :- hungry(X), weak(Y).\nbored(X) :- funny(X).\ntired(X) :- hungry(X).\nsmall(X) :- rough(X).\nowns(X,Y) :- excited(X), old(Y).\nweak(X) :- funny(X), excited(X).\nred(car).\nfriend(george,alice).\nenemy(frank,george).\nfriendly(dave).\nparent(dave,frank).\ndislikes(alice,apple).\nstrong(eve).\nowns(carol,pencil).\nstrong(carol).\ncurious(dave).\nsad(eve).\nbored(eve).\nsibling(george,bob).\nowns(dave,phone).\nfriend(alice,carol).\nenemy(dave,eve).\nowns(carol,phone).\ndislikes(eve,pencil).\nlikes(carol,apple).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all Y, if there exists B such that person Y is strong and person Y is an enemy of person B and person B is excited, then person Y is busy.\nFor all Z, if there exists A such that person Z is brave and object A is small, then person Z is brave.\nFor all X, if there exists E such that person X is busy and object E is rough, then person X is excited.\nFor all Y, if object Y is dirty, then object Y is small.\nFor all X, Y, if there exists A such that person Y is funny and person X is tired and person A is happy, then person X is a sibling of person Y.\nFor all Y, if there exists B such that object Y is dirty and person B likes object Y and person B is funny, then object Y is new.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is calm and person Z is an enemy of person A, then person Z is an enemy of person Y.\nFor all X, if person X is angry and person X is hungry, then person X is excited.\nFor all X, if person X is sad, then person X is weak.\nFor all X, Y, if person X is hungry and person Y is weak, then person X is a friend of person Y.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if object X is rough, then object X is small.\nFor all X, Y, if person X is excited and object Y is old, then person X owns object Y.\nFor all X, if person X is funny and person X is excited, then person X is weak.\n\nAnd the following facts:\ncar is red.\ngeorge is a friend of alice.\nfrank is an enemy of george.\ndave is friendly.\ndave is a parent of frank.\nalice dislikes apple.\neve is strong.\ncarol owns pencil.\ncarol is strong.\ndave is curious.\neve is sad.\neve is bored.\ngeorge is a sibling of bob.\ndave owns phone.\nalice is a friend of carol.\ndave is an enemy of eve.\ncarol owns phone.\neve dislikes pencil.\ncarol likes apple.\napple is old.\n\nQUESTION:\nIs bob is bored true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1249,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(car).",
    "c": "smooth(X) :- red(X).\nbig(X) :- smooth(X).\nclean(X) :- big(X).\nheavy(X) :- clean(X).\nhard(X) :- heavy(X).\nclean(X) :- hard(X).\nbig(X) :- clean(X).\nsoft(X) :- big(X).\nsmooth(X) :- soft(X).\nwet(X) :- smooth(X).\nbusy(Y) :- strong(Y), enemy(Y,B), excited(B).\nbrave(Z) :- brave(Z), small(A).\nexcited(X) :- busy(X), rough(E).\nsmall(Y) :- dirty(Y).\nsibling(X,Y) :- funny(Y), tired(X), happy(A).\nnew(Y) :- dirty(Y), likes(B,Y), funny(B).\nenemy(Z,Y) :- clever(Y), calm(Z), enemy(Z,A).\nexcited(X) :- angry(X), hungry(X).\nweak(X) :- sad(X).\nfriend(X,Y) :- hungry(X), weak(Y).\nbored(X) :- funny(X).\ntired(X) :- hungry(X).\nsmall(X) :- rough(X).\nowns(X,Y) :- excited(X), old(Y).\nweak(X) :- funny(X), excited(X).\nwet(car).\nfriend(george,alice).\nenemy(frank,george).\nfriendly(dave).\nparent(dave,frank).\ndislikes(alice,apple).\nstrong(eve).\nowns(carol,pencil).\nstrong(carol).\ncurious(dave).\nsad(eve).\nbored(eve).\nsibling(george,bob).\nowns(dave,phone).\nfriend(alice,carol).\nenemy(dave,eve).\nowns(carol,phone).\ndislikes(eve,pencil).\nlikes(carol,apple).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all Y, if there exists B such that person Y is strong and person Y is an enemy of person B and person B is excited, then person Y is busy.\nFor all Z, if there exists A such that person Z is brave and object A is small, then person Z is brave.\nFor all X, if there exists E such that person X is busy and object E is rough, then person X is excited.\nFor all Y, if object Y is dirty, then object Y is small.\nFor all X, Y, if there exists A such that person Y is funny and person X is tired and person A is happy, then person X is a sibling of person Y.\nFor all Y, if there exists B such that object Y is dirty and person B likes object Y and person B is funny, then object Y is new.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is calm and person Z is an enemy of person A, then person Z is an enemy of person Y.\nFor all X, if person X is angry and person X is hungry, then person X is excited.\nFor all X, if person X is sad, then person X is weak.\nFor all X, Y, if person X is hungry and person Y is weak, then person X is a friend of person Y.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if object X is rough, then object X is small.\nFor all X, Y, if person X is excited and object Y is old, then person X owns object Y.\nFor all X, if person X is funny and person X is excited, then person X is weak.\n\nAnd the following facts:\ncar is wet.\ngeorge is a friend of alice.\nfrank is an enemy of george.\ndave is friendly.\ndave is a parent of frank.\nalice dislikes apple.\neve is strong.\ncarol owns pencil.\ncarol is strong.\ndave is curious.\neve is sad.\neve is bored.\ngeorge is a sibling of bob.\ndave owns phone.\nalice is a friend of carol.\ndave is an enemy of eve.\ncarol owns phone.\neve dislikes pencil.\ncarol likes apple.\napple is old.\n\nQUESTION:\nCould car is red explain car is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1250,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "angry(alice).",
    "c": "smooth(X) :- red(X).\nbig(X) :- smooth(X).\nclean(X) :- big(X).\nheavy(X) :- clean(X).\nhard(X) :- heavy(X).\nclean(X) :- hard(X).\nbig(X) :- clean(X).\nsoft(X) :- big(X).\nsmooth(X) :- soft(X).\nwet(X) :- smooth(X).\nbusy(Y) :- strong(Y), enemy(Y,B), excited(B).\nbrave(Z) :- brave(Z), small(A).\nexcited(X) :- busy(X), rough(E).\nsmall(Y) :- dirty(Y).\nsibling(X,Y) :- funny(Y), tired(X), happy(A).\nnew(Y) :- dirty(Y), likes(B,Y), funny(B).\nenemy(Z,Y) :- clever(Y), calm(Z), enemy(Z,A).\nexcited(X) :- angry(X), hungry(X).\nweak(X) :- sad(X).\nfriend(X,Y) :- hungry(X), weak(Y).\nbored(X) :- funny(X).\ntired(X) :- hungry(X).\nsmall(X) :- rough(X).\nowns(X,Y) :- excited(X), old(Y).\nweak(X) :- funny(X), excited(X).\nwet(car).\nfriend(george,alice).\nenemy(frank,george).\nfriendly(dave).\nparent(dave,frank).\ndislikes(alice,apple).\nstrong(eve).\nowns(carol,pencil).\nstrong(carol).\ncurious(dave).\nsad(eve).\nbored(eve).\nsibling(george,bob).\nowns(dave,phone).\nfriend(alice,carol).\nenemy(dave,eve).\nowns(carol,phone).\ndislikes(eve,pencil).\nlikes(carol,apple).\nold(apple).",
    "natural language": "You are given the following information:\nFor all X, if object X is red, then object X is smooth.\nFor all X, if object X is smooth, then object X is big.\nFor all X, if object X is big, then object X is clean.\nFor all X, if object X is clean, then object X is heavy.\nFor all X, if object X is heavy, then object X is hard.\nFor all X, if object X is hard, then object X is clean.\nFor all X, if object X is clean, then object X is big.\nFor all X, if object X is big, then object X is soft.\nFor all X, if object X is soft, then object X is smooth.\nFor all X, if object X is smooth, then object X is wet.\nFor all Y, if there exists B such that person Y is strong and person Y is an enemy of person B and person B is excited, then person Y is busy.\nFor all Z, if there exists A such that person Z is brave and object A is small, then person Z is brave.\nFor all X, if there exists E such that person X is busy and object E is rough, then person X is excited.\nFor all Y, if object Y is dirty, then object Y is small.\nFor all X, Y, if there exists A such that person Y is funny and person X is tired and person A is happy, then person X is a sibling of person Y.\nFor all Y, if there exists B such that object Y is dirty and person B likes object Y and person B is funny, then object Y is new.\nFor all Y, Z, if there exists A such that person Y is clever and person Z is calm and person Z is an enemy of person A, then person Z is an enemy of person Y.\nFor all X, if person X is angry and person X is hungry, then person X is excited.\nFor all X, if person X is sad, then person X is weak.\nFor all X, Y, if person X is hungry and person Y is weak, then person X is a friend of person Y.\nFor all X, if person X is funny, then person X is bored.\nFor all X, if person X is hungry, then person X is tired.\nFor all X, if object X is rough, then object X is small.\nFor all X, Y, if person X is excited and object Y is old, then person X owns object Y.\nFor all X, if person X is funny and person X is excited, then person X is weak.\n\nAnd the following facts:\ncar is wet.\ngeorge is a friend of alice.\nfrank is an enemy of george.\ndave is friendly.\ndave is a parent of frank.\nalice dislikes apple.\neve is strong.\ncarol owns pencil.\ncarol is strong.\ndave is curious.\neve is sad.\neve is bored.\ngeorge is a sibling of bob.\ndave owns phone.\nalice is a friend of carol.\ndave is an enemy of eve.\ncarol owns phone.\neve dislikes pencil.\ncarol likes apple.\napple is old.\n\nQUESTION:\nCould alice is angry explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1251,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(eve).",
    "c": "busy(X) :- curious(X).\ntired(X) :- busy(X).\nexcited(X) :- tired(X).\nclever(X) :- excited(X).\ntired(X) :- clever(X).\nclever(X) :- tired(X).\nstrong(X) :- clever(X).\nclever(X) :- strong(X).\nweak(X) :- clever(X).\nfunny(X) :- weak(X).\ndirty(X) :- smooth(X), owns(U,X), tall(U).\ndirty(Y) :- heavy(Y), dislikes(W,Y), bored(W).\nsmooth(Z) :- smooth(Z).\nhard(X) :- wet(X), dislikes(A,X), happy(A).\ndislikes(X,Z) :- soft(Z), brave(X), owns(W,Z).\ndirty(X) :- wet(X).\nlikes(Y,X) :- friendly(Y), new(X), sibling(Y,V).\nnew(X) :- red(X), dislikes(A,X), tall(A).\nowns(X,Y) :- friendly(X), old(Y).\nfriendly(X) :- calm(X).\nsmall(X) :- dirty(X).\nold(X) :- new(X), red(X).\nsibling(X,Y) :- brave(X), sad(Y).\nclean(X) :- old(X), hard(X).\ndislikes(X,Y) :- hungry(X), red(Y), owns(X,Y).\ncurious(eve).\nlikes(frank,apple).\nbrave(eve).\nfriend(eve,carol).\nparent(alice,frank).\nbig(phone).\nsmooth(apple).\nlikes(carol,pencil).\nparent(alice,eve).\nhappy(bob).\nheavy(car).\nowns(george,pencil).\nenemy(george,alice).\nsibling(george,bob).\nsibling(carol,eve).\nsoft(book).\nbored(george).\nfriend(dave,bob).\nfriend(george,bob).\nsibling(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if there exists U such that object X is smooth and person U owns object X and person U is tall, then object X is dirty.\nFor all Y, if there exists W such that object Y is heavy and person W dislikes object Y and person W is bored, then object Y is dirty.\nFor all Z, if object Z is smooth, then object Z is smooth.\nFor all X, if there exists A such that object X is wet and person A dislikes object X and person A is happy, then object X is hard.\nFor all X, Z, if there exists W such that object Z is soft and person X is brave and person W owns object Z, then person X dislikes object Z.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, Y, if there exists V such that person Y is friendly and object X is new and person Y is a sibling of person V, then person Y likes object X.\nFor all X, if there exists A such that object X is red and person A dislikes object X and person A is tall, then object X is new.\nFor all X, Y, if person X is friendly and object Y is old, then person X owns object Y.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is new and object X is red, then object X is old.\nFor all X, Y, if person X is brave and person Y is sad, then person X is a sibling of person Y.\nFor all X, if object X is old and object X is hard, then object X is clean.\nFor all X, Y, if person X is hungry and object Y is red and person X owns object Y, then person X dislikes object Y.\n\nAnd the following facts:\neve is curious.\nfrank likes apple.\neve is brave.\neve is a friend of carol.\nalice is a parent of frank.\nphone is big.\napple is smooth.\ncarol likes pencil.\nalice is a parent of eve.\nbob is happy.\ncar is heavy.\ngeorge owns pencil.\ngeorge is an enemy of alice.\ngeorge is a sibling of bob.\ncarol is a sibling of eve.\nbook is soft.\ngeorge is bored.\ndave is a friend of bob.\ngeorge is a friend of bob.\nfrank is a sibling of bob.\n\nQUESTION:\nIs eve is funny true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1252,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "clever(eve).",
    "c": "busy(X) :- curious(X).\ntired(X) :- busy(X).\nexcited(X) :- tired(X).\nclever(X) :- excited(X).\ntired(X) :- clever(X).\nclever(X) :- tired(X).\nstrong(X) :- clever(X).\nclever(X) :- strong(X).\nweak(X) :- clever(X).\nfunny(X) :- weak(X).\ndirty(X) :- smooth(X), owns(U,X), tall(U).\ndirty(Y) :- heavy(Y), dislikes(W,Y), bored(W).\nsmooth(Z) :- smooth(Z).\nhard(X) :- wet(X), dislikes(A,X), happy(A).\ndislikes(X,Z) :- soft(Z), brave(X), owns(W,Z).\ndirty(X) :- wet(X).\nlikes(Y,X) :- friendly(Y), new(X), sibling(Y,V).\nnew(X) :- red(X), dislikes(A,X), tall(A).\nowns(X,Y) :- friendly(X), old(Y).\nfriendly(X) :- calm(X).\nsmall(X) :- dirty(X).\nold(X) :- new(X), red(X).\nsibling(X,Y) :- brave(X), sad(Y).\nclean(X) :- old(X), hard(X).\ndislikes(X,Y) :- hungry(X), red(Y), owns(X,Y).\ncurious(eve).\nlikes(frank,apple).\nbrave(eve).\nfriend(eve,carol).\nparent(alice,frank).\nbig(phone).\nsmooth(apple).\nlikes(carol,pencil).\nparent(alice,eve).\nhappy(bob).\nheavy(car).\nowns(george,pencil).\nenemy(george,alice).\nsibling(george,bob).\nsibling(carol,eve).\nsoft(book).\nbored(george).\nfriend(dave,bob).\nfriend(george,bob).\nsibling(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if there exists U such that object X is smooth and person U owns object X and person U is tall, then object X is dirty.\nFor all Y, if there exists W such that object Y is heavy and person W dislikes object Y and person W is bored, then object Y is dirty.\nFor all Z, if object Z is smooth, then object Z is smooth.\nFor all X, if there exists A such that object X is wet and person A dislikes object X and person A is happy, then object X is hard.\nFor all X, Z, if there exists W such that object Z is soft and person X is brave and person W owns object Z, then person X dislikes object Z.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, Y, if there exists V such that person Y is friendly and object X is new and person Y is a sibling of person V, then person Y likes object X.\nFor all X, if there exists A such that object X is red and person A dislikes object X and person A is tall, then object X is new.\nFor all X, Y, if person X is friendly and object Y is old, then person X owns object Y.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is new and object X is red, then object X is old.\nFor all X, Y, if person X is brave and person Y is sad, then person X is a sibling of person Y.\nFor all X, if object X is old and object X is hard, then object X is clean.\nFor all X, Y, if person X is hungry and object Y is red and person X owns object Y, then person X dislikes object Y.\n\nAnd the following facts:\neve is curious.\nfrank likes apple.\neve is brave.\neve is a friend of carol.\nalice is a parent of frank.\nphone is big.\napple is smooth.\ncarol likes pencil.\nalice is a parent of eve.\nbob is happy.\ncar is heavy.\ngeorge owns pencil.\ngeorge is an enemy of alice.\ngeorge is a sibling of bob.\ncarol is a sibling of eve.\nbook is soft.\ngeorge is bored.\ndave is a friend of bob.\ngeorge is a friend of bob.\nfrank is a sibling of bob.\n\nQUESTION:\nIs eve is clever true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1253,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "curious(eve).",
    "c": "busy(X) :- curious(X).\ntired(X) :- busy(X).\nexcited(X) :- tired(X).\nclever(X) :- excited(X).\ntired(X) :- clever(X).\nclever(X) :- tired(X).\nstrong(X) :- clever(X).\nclever(X) :- strong(X).\nweak(X) :- clever(X).\nfunny(X) :- weak(X).\ndirty(X) :- smooth(X), owns(U,X), tall(U).\ndirty(Y) :- heavy(Y), dislikes(W,Y), bored(W).\nsmooth(Z) :- smooth(Z).\nhard(X) :- wet(X), dislikes(A,X), happy(A).\ndislikes(X,Z) :- soft(Z), brave(X), owns(W,Z).\ndirty(X) :- wet(X).\nlikes(Y,X) :- friendly(Y), new(X), sibling(Y,V).\nnew(X) :- red(X), dislikes(A,X), tall(A).\nowns(X,Y) :- friendly(X), old(Y).\nfriendly(X) :- calm(X).\nsmall(X) :- dirty(X).\nold(X) :- new(X), red(X).\nsibling(X,Y) :- brave(X), sad(Y).\nclean(X) :- old(X), hard(X).\ndislikes(X,Y) :- hungry(X), red(Y), owns(X,Y).\nfunny(eve).\nlikes(frank,apple).\nbrave(eve).\nfriend(eve,carol).\nparent(alice,frank).\nbig(phone).\nsmooth(apple).\nlikes(carol,pencil).\nparent(alice,eve).\nhappy(bob).\nheavy(car).\nowns(george,pencil).\nenemy(george,alice).\nsibling(george,bob).\nsibling(carol,eve).\nsoft(book).\nbored(george).\nfriend(dave,bob).\nfriend(george,bob).\nsibling(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if there exists U such that object X is smooth and person U owns object X and person U is tall, then object X is dirty.\nFor all Y, if there exists W such that object Y is heavy and person W dislikes object Y and person W is bored, then object Y is dirty.\nFor all Z, if object Z is smooth, then object Z is smooth.\nFor all X, if there exists A such that object X is wet and person A dislikes object X and person A is happy, then object X is hard.\nFor all X, Z, if there exists W such that object Z is soft and person X is brave and person W owns object Z, then person X dislikes object Z.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, Y, if there exists V such that person Y is friendly and object X is new and person Y is a sibling of person V, then person Y likes object X.\nFor all X, if there exists A such that object X is red and person A dislikes object X and person A is tall, then object X is new.\nFor all X, Y, if person X is friendly and object Y is old, then person X owns object Y.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is new and object X is red, then object X is old.\nFor all X, Y, if person X is brave and person Y is sad, then person X is a sibling of person Y.\nFor all X, if object X is old and object X is hard, then object X is clean.\nFor all X, Y, if person X is hungry and object Y is red and person X owns object Y, then person X dislikes object Y.\n\nAnd the following facts:\neve is funny.\nfrank likes apple.\neve is brave.\neve is a friend of carol.\nalice is a parent of frank.\nphone is big.\napple is smooth.\ncarol likes pencil.\nalice is a parent of eve.\nbob is happy.\ncar is heavy.\ngeorge owns pencil.\ngeorge is an enemy of alice.\ngeorge is a sibling of bob.\ncarol is a sibling of eve.\nbook is soft.\ngeorge is bored.\ndave is a friend of bob.\ngeorge is a friend of bob.\nfrank is a sibling of bob.\n\nQUESTION:\nCould eve is curious explain eve is funny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1254,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(carol).",
    "c": "busy(X) :- curious(X).\ntired(X) :- busy(X).\nexcited(X) :- tired(X).\nclever(X) :- excited(X).\ntired(X) :- clever(X).\nclever(X) :- tired(X).\nstrong(X) :- clever(X).\nclever(X) :- strong(X).\nweak(X) :- clever(X).\nfunny(X) :- weak(X).\ndirty(X) :- smooth(X), owns(U,X), tall(U).\ndirty(Y) :- heavy(Y), dislikes(W,Y), bored(W).\nsmooth(Z) :- smooth(Z).\nhard(X) :- wet(X), dislikes(A,X), happy(A).\ndislikes(X,Z) :- soft(Z), brave(X), owns(W,Z).\ndirty(X) :- wet(X).\nlikes(Y,X) :- friendly(Y), new(X), sibling(Y,V).\nnew(X) :- red(X), dislikes(A,X), tall(A).\nowns(X,Y) :- friendly(X), old(Y).\nfriendly(X) :- calm(X).\nsmall(X) :- dirty(X).\nold(X) :- new(X), red(X).\nsibling(X,Y) :- brave(X), sad(Y).\nclean(X) :- old(X), hard(X).\ndislikes(X,Y) :- hungry(X), red(Y), owns(X,Y).\nfunny(eve).\nlikes(frank,apple).\nbrave(eve).\nfriend(eve,carol).\nparent(alice,frank).\nbig(phone).\nsmooth(apple).\nlikes(carol,pencil).\nparent(alice,eve).\nhappy(bob).\nheavy(car).\nowns(george,pencil).\nenemy(george,alice).\nsibling(george,bob).\nsibling(carol,eve).\nsoft(book).\nbored(george).\nfriend(dave,bob).\nfriend(george,bob).\nsibling(frank,bob).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is busy.\nFor all X, if person X is busy, then person X is tired.\nFor all X, if person X is tired, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is tired.\nFor all X, if person X is tired, then person X is clever.\nFor all X, if person X is clever, then person X is strong.\nFor all X, if person X is strong, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is funny.\nFor all X, if there exists U such that object X is smooth and person U owns object X and person U is tall, then object X is dirty.\nFor all Y, if there exists W such that object Y is heavy and person W dislikes object Y and person W is bored, then object Y is dirty.\nFor all Z, if object Z is smooth, then object Z is smooth.\nFor all X, if there exists A such that object X is wet and person A dislikes object X and person A is happy, then object X is hard.\nFor all X, Z, if there exists W such that object Z is soft and person X is brave and person W owns object Z, then person X dislikes object Z.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, Y, if there exists V such that person Y is friendly and object X is new and person Y is a sibling of person V, then person Y likes object X.\nFor all X, if there exists A such that object X is red and person A dislikes object X and person A is tall, then object X is new.\nFor all X, Y, if person X is friendly and object Y is old, then person X owns object Y.\nFor all X, if person X is calm, then person X is friendly.\nFor all X, if object X is dirty, then object X is small.\nFor all X, if object X is new and object X is red, then object X is old.\nFor all X, Y, if person X is brave and person Y is sad, then person X is a sibling of person Y.\nFor all X, if object X is old and object X is hard, then object X is clean.\nFor all X, Y, if person X is hungry and object Y is red and person X owns object Y, then person X dislikes object Y.\n\nAnd the following facts:\neve is funny.\nfrank likes apple.\neve is brave.\neve is a friend of carol.\nalice is a parent of frank.\nphone is big.\napple is smooth.\ncarol likes pencil.\nalice is a parent of eve.\nbob is happy.\ncar is heavy.\ngeorge owns pencil.\ngeorge is an enemy of alice.\ngeorge is a sibling of bob.\ncarol is a sibling of eve.\nbook is soft.\ngeorge is bored.\ndave is a friend of bob.\ngeorge is a friend of bob.\nfrank is a sibling of bob.\n\nQUESTION:\nCould carol is curious explain eve is funny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1255,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(book).",
    "c": "old(X) :- big(X).\nheavy(X) :- old(X).\nsmooth(X) :- heavy(X).\ndirty(X) :- smooth(X).\nred(X) :- dirty(X).\nwet(X) :- red(X).\nlight(X) :- wet(X).\nhard(X) :- light(X).\nnew(X) :- hard(X).\nsoft(X) :- new(X).\nclean(Y) :- small(Y).\nrough(Z) :- small(Z), likes(B,Z), busy(B).\nbusy(Y) :- bored(Y), owns(Y,W), small(W).\nhungry(Y) :- friendly(Y), enemy(Y,W), strong(W).\nexcited(X) :- curious(X), enemy(X,U), excited(U).\nclean(Z) :- small(Z), likes(U,Z), busy(U).\ndislikes(Z,Y) :- small(Y), tall(Z), dislikes(Z,W).\nfriend(X,Y) :- curious(X), friendly(Y), enemy(X,Y).\nsad(X) :- tired(X).\nstrong(X) :- curious(X).\nangry(X) :- funny(X).\nbored(X) :- friendly(X).\nsad(X) :- clever(X).\nclean(X) :- rough(X).\nhungry(X) :- busy(X).\nbig(book).\nlikes(dave,book).\nfriend(dave,eve).\nlikes(eve,phone).\nweak(alice).\nexcited(carol).\nowns(frank,car).\nowns(george,car).\nowns(frank,book).\nsad(george).\nowns(alice,apple).\nowns(alice,ball).\nsibling(bob,alice).\nbored(eve).\ntall(bob).\nangry(george).\nfriendly(george).\ncold.\nclean(ball).\nlikes(george,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all Y, if object Y is small, then object Y is clean.\nFor all Z, if there exists B such that object Z is small and person B likes object Z and person B is busy, then object Z is rough.\nFor all Y, if there exists W such that person Y is bored and person Y owns object W and object W is small, then person Y is busy.\nFor all Y, if there exists W such that person Y is friendly and person Y is an enemy of person W and person W is strong, then person Y is hungry.\nFor all X, if there exists U such that person X is curious and person X is an enemy of person U and person U is excited, then person X is excited.\nFor all Z, if there exists U such that object Z is small and person U likes object Z and person U is busy, then object Z is clean.\nFor all Y, Z, if there exists W such that object Y is small and person Z is tall and person Z dislikes object W, then person Z dislikes object Y.\nFor all X, Y, if person X is curious and person Y is friendly and person X is an enemy of person Y, then person X is a friend of person Y.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if person X is busy, then person X is hungry.\n\nAnd the following facts:\nbook is big.\ndave likes book.\ndave is a friend of eve.\neve likes phone.\nalice is weak.\ncarol is excited.\nfrank owns car.\ngeorge owns car.\nfrank owns book.\ngeorge is sad.\nalice owns apple.\nalice owns ball.\nbob is a sibling of alice.\neve is bored.\nbob is tall.\ngeorge is angry.\ngeorge is friendly.\nit is cold.\nball is clean.\ngeorge likes book.\n\nQUESTION:\nIs book is soft true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1256,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(phone).",
    "c": "old(X) :- big(X).\nheavy(X) :- old(X).\nsmooth(X) :- heavy(X).\ndirty(X) :- smooth(X).\nred(X) :- dirty(X).\nwet(X) :- red(X).\nlight(X) :- wet(X).\nhard(X) :- light(X).\nnew(X) :- hard(X).\nsoft(X) :- new(X).\nclean(Y) :- small(Y).\nrough(Z) :- small(Z), likes(B,Z), busy(B).\nbusy(Y) :- bored(Y), owns(Y,W), small(W).\nhungry(Y) :- friendly(Y), enemy(Y,W), strong(W).\nexcited(X) :- curious(X), enemy(X,U), excited(U).\nclean(Z) :- small(Z), likes(U,Z), busy(U).\ndislikes(Z,Y) :- small(Y), tall(Z), dislikes(Z,W).\nfriend(X,Y) :- curious(X), friendly(Y), enemy(X,Y).\nsad(X) :- tired(X).\nstrong(X) :- curious(X).\nangry(X) :- funny(X).\nbored(X) :- friendly(X).\nsad(X) :- clever(X).\nclean(X) :- rough(X).\nhungry(X) :- busy(X).\nbig(book).\nlikes(dave,book).\nfriend(dave,eve).\nlikes(eve,phone).\nweak(alice).\nexcited(carol).\nowns(frank,car).\nowns(george,car).\nowns(frank,book).\nsad(george).\nowns(alice,apple).\nowns(alice,ball).\nsibling(bob,alice).\nbored(eve).\ntall(bob).\nangry(george).\nfriendly(george).\ncold.\nclean(ball).\nlikes(george,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all Y, if object Y is small, then object Y is clean.\nFor all Z, if there exists B such that object Z is small and person B likes object Z and person B is busy, then object Z is rough.\nFor all Y, if there exists W such that person Y is bored and person Y owns object W and object W is small, then person Y is busy.\nFor all Y, if there exists W such that person Y is friendly and person Y is an enemy of person W and person W is strong, then person Y is hungry.\nFor all X, if there exists U such that person X is curious and person X is an enemy of person U and person U is excited, then person X is excited.\nFor all Z, if there exists U such that object Z is small and person U likes object Z and person U is busy, then object Z is clean.\nFor all Y, Z, if there exists W such that object Y is small and person Z is tall and person Z dislikes object W, then person Z dislikes object Y.\nFor all X, Y, if person X is curious and person Y is friendly and person X is an enemy of person Y, then person X is a friend of person Y.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if person X is busy, then person X is hungry.\n\nAnd the following facts:\nbook is big.\ndave likes book.\ndave is a friend of eve.\neve likes phone.\nalice is weak.\ncarol is excited.\nfrank owns car.\ngeorge owns car.\nfrank owns book.\ngeorge is sad.\nalice owns apple.\nalice owns ball.\nbob is a sibling of alice.\neve is bored.\nbob is tall.\ngeorge is angry.\ngeorge is friendly.\nit is cold.\nball is clean.\ngeorge likes book.\n\nQUESTION:\nIs phone is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1257,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "big(book).",
    "c": "old(X) :- big(X).\nheavy(X) :- old(X).\nsmooth(X) :- heavy(X).\ndirty(X) :- smooth(X).\nred(X) :- dirty(X).\nwet(X) :- red(X).\nlight(X) :- wet(X).\nhard(X) :- light(X).\nnew(X) :- hard(X).\nsoft(X) :- new(X).\nclean(Y) :- small(Y).\nrough(Z) :- small(Z), likes(B,Z), busy(B).\nbusy(Y) :- bored(Y), owns(Y,W), small(W).\nhungry(Y) :- friendly(Y), enemy(Y,W), strong(W).\nexcited(X) :- curious(X), enemy(X,U), excited(U).\nclean(Z) :- small(Z), likes(U,Z), busy(U).\ndislikes(Z,Y) :- small(Y), tall(Z), dislikes(Z,W).\nfriend(X,Y) :- curious(X), friendly(Y), enemy(X,Y).\nsad(X) :- tired(X).\nstrong(X) :- curious(X).\nangry(X) :- funny(X).\nbored(X) :- friendly(X).\nsad(X) :- clever(X).\nclean(X) :- rough(X).\nhungry(X) :- busy(X).\nsoft(book).\nlikes(dave,book).\nfriend(dave,eve).\nlikes(eve,phone).\nweak(alice).\nexcited(carol).\nowns(frank,car).\nowns(george,car).\nowns(frank,book).\nsad(george).\nowns(alice,apple).\nowns(alice,ball).\nsibling(bob,alice).\nbored(eve).\ntall(bob).\nangry(george).\nfriendly(george).\ncold.\nclean(ball).\nlikes(george,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all Y, if object Y is small, then object Y is clean.\nFor all Z, if there exists B such that object Z is small and person B likes object Z and person B is busy, then object Z is rough.\nFor all Y, if there exists W such that person Y is bored and person Y owns object W and object W is small, then person Y is busy.\nFor all Y, if there exists W such that person Y is friendly and person Y is an enemy of person W and person W is strong, then person Y is hungry.\nFor all X, if there exists U such that person X is curious and person X is an enemy of person U and person U is excited, then person X is excited.\nFor all Z, if there exists U such that object Z is small and person U likes object Z and person U is busy, then object Z is clean.\nFor all Y, Z, if there exists W such that object Y is small and person Z is tall and person Z dislikes object W, then person Z dislikes object Y.\nFor all X, Y, if person X is curious and person Y is friendly and person X is an enemy of person Y, then person X is a friend of person Y.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if person X is busy, then person X is hungry.\n\nAnd the following facts:\nbook is soft.\ndave likes book.\ndave is a friend of eve.\neve likes phone.\nalice is weak.\ncarol is excited.\nfrank owns car.\ngeorge owns car.\nfrank owns book.\ngeorge is sad.\nalice owns apple.\nalice owns ball.\nbob is a sibling of alice.\neve is bored.\nbob is tall.\ngeorge is angry.\ngeorge is friendly.\nit is cold.\nball is clean.\ngeorge likes book.\n\nQUESTION:\nCould book is big explain book is soft?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1258,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(car).",
    "c": "old(X) :- big(X).\nheavy(X) :- old(X).\nsmooth(X) :- heavy(X).\ndirty(X) :- smooth(X).\nred(X) :- dirty(X).\nwet(X) :- red(X).\nlight(X) :- wet(X).\nhard(X) :- light(X).\nnew(X) :- hard(X).\nsoft(X) :- new(X).\nclean(Y) :- small(Y).\nrough(Z) :- small(Z), likes(B,Z), busy(B).\nbusy(Y) :- bored(Y), owns(Y,W), small(W).\nhungry(Y) :- friendly(Y), enemy(Y,W), strong(W).\nexcited(X) :- curious(X), enemy(X,U), excited(U).\nclean(Z) :- small(Z), likes(U,Z), busy(U).\ndislikes(Z,Y) :- small(Y), tall(Z), dislikes(Z,W).\nfriend(X,Y) :- curious(X), friendly(Y), enemy(X,Y).\nsad(X) :- tired(X).\nstrong(X) :- curious(X).\nangry(X) :- funny(X).\nbored(X) :- friendly(X).\nsad(X) :- clever(X).\nclean(X) :- rough(X).\nhungry(X) :- busy(X).\nsoft(book).\nlikes(dave,book).\nfriend(dave,eve).\nlikes(eve,phone).\nweak(alice).\nexcited(carol).\nowns(frank,car).\nowns(george,car).\nowns(frank,book).\nsad(george).\nowns(alice,apple).\nowns(alice,ball).\nsibling(bob,alice).\nbored(eve).\ntall(bob).\nangry(george).\nfriendly(george).\ncold.\nclean(ball).\nlikes(george,book).",
    "natural language": "You are given the following information:\nFor all X, if object X is big, then object X is old.\nFor all X, if object X is old, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is wet.\nFor all X, if object X is wet, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is new.\nFor all X, if object X is new, then object X is soft.\nFor all Y, if object Y is small, then object Y is clean.\nFor all Z, if there exists B such that object Z is small and person B likes object Z and person B is busy, then object Z is rough.\nFor all Y, if there exists W such that person Y is bored and person Y owns object W and object W is small, then person Y is busy.\nFor all Y, if there exists W such that person Y is friendly and person Y is an enemy of person W and person W is strong, then person Y is hungry.\nFor all X, if there exists U such that person X is curious and person X is an enemy of person U and person U is excited, then person X is excited.\nFor all Z, if there exists U such that object Z is small and person U likes object Z and person U is busy, then object Z is clean.\nFor all Y, Z, if there exists W such that object Y is small and person Z is tall and person Z dislikes object W, then person Z dislikes object Y.\nFor all X, Y, if person X is curious and person Y is friendly and person X is an enemy of person Y, then person X is a friend of person Y.\nFor all X, if person X is tired, then person X is sad.\nFor all X, if person X is curious, then person X is strong.\nFor all X, if person X is funny, then person X is angry.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is clever, then person X is sad.\nFor all X, if object X is rough, then object X is clean.\nFor all X, if person X is busy, then person X is hungry.\n\nAnd the following facts:\nbook is soft.\ndave likes book.\ndave is a friend of eve.\neve likes phone.\nalice is weak.\ncarol is excited.\nfrank owns car.\ngeorge owns car.\nfrank owns book.\ngeorge is sad.\nalice owns apple.\nalice owns ball.\nbob is a sibling of alice.\neve is bored.\nbob is tall.\ngeorge is angry.\ngeorge is friendly.\nit is cold.\nball is clean.\ngeorge likes book.\n\nQUESTION:\nCould car is smooth explain book is soft?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1259,
    "pred": "true",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"true\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(car).",
    "c": "heavy(X) :- soft(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nlight(X) :- clean(X).\nsmooth(X) :- light(X).\nred(X) :- smooth(X).\nold(X) :- red(X).\nrough(X) :- old(X).\nwet(X) :- rough(X).\ndirty(X) :- wet(X).\ntired(Z) :- curious(Z), friend(Z,A), excited(A).\nfunny(X) :- curious(X), enemy(X,U), busy(U).\nsibling(Y,Z) :- angry(Y), funny(Z), sibling(Z,V).\nsad(Z) :- sad(Z), dislikes(Z,U), hard(U).\nhard(Y) :- new(Y), big(A).\nangry(Z) :- calm(Z).\nenemy(X,Z) :- tall(Z), calm(X), dislikes(Z,B).\ntall(X) :- bored(X).\nfriendly(X) :- excited(X), weak(X).\nstrong(X) :- brave(X).\nhappy(X) :- funny(X).\nfunny(X) :- strong(X), busy(X).\nhungry(X) :- strong(X), bored(X).\ncalm(X) :- tired(X), curious(X).\nenemy(X,Y) :- funny(X), clever(Y).\nsoft(car).\nenemy(frank,george).\nclever(alice).\nlikes(frank,phone).\nfriend(eve,alice).\nenemy(alice,george).\ndislikes(george,phone).\nsibling(george,dave).\ndislikes(frank,apple).\nlikes(frank,book).\nhungry(bob).\nenemy(dave,alice).\nfunny(eve).\ntired(eve).\nenemy(eve,george).\ntired(frank).\nenemy(alice,dave).\ntired(george).\nexcited(carol).\nowns(carol,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all Z, if there exists A such that person Z is curious and person Z is a friend of person A and person A is excited, then person Z is tired.\nFor all X, if there exists U such that person X is curious and person X is an enemy of person U and person U is busy, then person X is funny.\nFor all Y, Z, if there exists V such that person Y is angry and person Z is funny and person Z is a sibling of person V, then person Y is a sibling of person Z.\nFor all Z, if there exists U such that person Z is sad and person Z dislikes object U and object U is hard, then person Z is sad.\nFor all Y, if there exists A such that object Y is new and object A is big, then object Y is hard.\nFor all Z, if person Z is calm, then person Z is angry.\nFor all X, Z, if there exists B such that person Z is tall and person X is calm and person Z dislikes object B, then person X is an enemy of person Z.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is excited and person X is weak, then person X is friendly.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is strong and person X is busy, then person X is funny.\nFor all X, if person X is strong and person X is bored, then person X is hungry.\nFor all X, if person X is tired and person X is curious, then person X is calm.\nFor all X, Y, if person X is funny and person Y is clever, then person X is an enemy of person Y.\n\nAnd the following facts:\ncar is soft.\nfrank is an enemy of george.\nalice is clever.\nfrank likes phone.\neve is a friend of alice.\nalice is an enemy of george.\ngeorge dislikes phone.\ngeorge is a sibling of dave.\nfrank dislikes apple.\nfrank likes book.\nbob is hungry.\ndave is an enemy of alice.\neve is funny.\neve is tired.\neve is an enemy of george.\nfrank is tired.\nalice is an enemy of dave.\ngeorge is tired.\ncarol is excited.\ncarol owns phone.\n\nQUESTION:\nIs car is dirty true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "deduction"
    },
    "id": 1260,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "tall(bob).",
    "c": "heavy(X) :- soft(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nlight(X) :- clean(X).\nsmooth(X) :- light(X).\nred(X) :- smooth(X).\nold(X) :- red(X).\nrough(X) :- old(X).\nwet(X) :- rough(X).\ndirty(X) :- wet(X).\ntired(Z) :- curious(Z), friend(Z,A), excited(A).\nfunny(X) :- curious(X), enemy(X,U), busy(U).\nsibling(Y,Z) :- angry(Y), funny(Z), sibling(Z,V).\nsad(Z) :- sad(Z), dislikes(Z,U), hard(U).\nhard(Y) :- new(Y), big(A).\nangry(Z) :- calm(Z).\nenemy(X,Z) :- tall(Z), calm(X), dislikes(Z,B).\ntall(X) :- bored(X).\nfriendly(X) :- excited(X), weak(X).\nstrong(X) :- brave(X).\nhappy(X) :- funny(X).\nfunny(X) :- strong(X), busy(X).\nhungry(X) :- strong(X), bored(X).\ncalm(X) :- tired(X), curious(X).\nenemy(X,Y) :- funny(X), clever(Y).\nsoft(car).\nenemy(frank,george).\nclever(alice).\nlikes(frank,phone).\nfriend(eve,alice).\nenemy(alice,george).\ndislikes(george,phone).\nsibling(george,dave).\ndislikes(frank,apple).\nlikes(frank,book).\nhungry(bob).\nenemy(dave,alice).\nfunny(eve).\ntired(eve).\nenemy(eve,george).\ntired(frank).\nenemy(alice,dave).\ntired(george).\nexcited(carol).\nowns(carol,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all Z, if there exists A such that person Z is curious and person Z is a friend of person A and person A is excited, then person Z is tired.\nFor all X, if there exists U such that person X is curious and person X is an enemy of person U and person U is busy, then person X is funny.\nFor all Y, Z, if there exists V such that person Y is angry and person Z is funny and person Z is a sibling of person V, then person Y is a sibling of person Z.\nFor all Z, if there exists U such that person Z is sad and person Z dislikes object U and object U is hard, then person Z is sad.\nFor all Y, if there exists A such that object Y is new and object A is big, then object Y is hard.\nFor all Z, if person Z is calm, then person Z is angry.\nFor all X, Z, if there exists B such that person Z is tall and person X is calm and person Z dislikes object B, then person X is an enemy of person Z.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is excited and person X is weak, then person X is friendly.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is strong and person X is busy, then person X is funny.\nFor all X, if person X is strong and person X is bored, then person X is hungry.\nFor all X, if person X is tired and person X is curious, then person X is calm.\nFor all X, Y, if person X is funny and person Y is clever, then person X is an enemy of person Y.\n\nAnd the following facts:\ncar is soft.\nfrank is an enemy of george.\nalice is clever.\nfrank likes phone.\neve is a friend of alice.\nalice is an enemy of george.\ngeorge dislikes phone.\ngeorge is a sibling of dave.\nfrank dislikes apple.\nfrank likes book.\nbob is hungry.\ndave is an enemy of alice.\neve is funny.\neve is tired.\neve is an enemy of george.\nfrank is tired.\nalice is an enemy of dave.\ngeorge is tired.\ncarol is excited.\ncarol owns phone.\n\nQUESTION:\nIs bob is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1261,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "soft(car).",
    "c": "heavy(X) :- soft(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nlight(X) :- clean(X).\nsmooth(X) :- light(X).\nred(X) :- smooth(X).\nold(X) :- red(X).\nrough(X) :- old(X).\nwet(X) :- rough(X).\ndirty(X) :- wet(X).\ntired(Z) :- curious(Z), friend(Z,A), excited(A).\nfunny(X) :- curious(X), enemy(X,U), busy(U).\nsibling(Y,Z) :- angry(Y), funny(Z), sibling(Z,V).\nsad(Z) :- sad(Z), dislikes(Z,U), hard(U).\nhard(Y) :- new(Y), big(A).\nangry(Z) :- calm(Z).\nenemy(X,Z) :- tall(Z), calm(X), dislikes(Z,B).\ntall(X) :- bored(X).\nfriendly(X) :- excited(X), weak(X).\nstrong(X) :- brave(X).\nhappy(X) :- funny(X).\nfunny(X) :- strong(X), busy(X).\nhungry(X) :- strong(X), bored(X).\ncalm(X) :- tired(X), curious(X).\nenemy(X,Y) :- funny(X), clever(Y).\ndirty(car).\nenemy(frank,george).\nclever(alice).\nlikes(frank,phone).\nfriend(eve,alice).\nenemy(alice,george).\ndislikes(george,phone).\nsibling(george,dave).\ndislikes(frank,apple).\nlikes(frank,book).\nhungry(bob).\nenemy(dave,alice).\nfunny(eve).\ntired(eve).\nenemy(eve,george).\ntired(frank).\nenemy(alice,dave).\ntired(george).\nexcited(carol).\nowns(carol,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all Z, if there exists A such that person Z is curious and person Z is a friend of person A and person A is excited, then person Z is tired.\nFor all X, if there exists U such that person X is curious and person X is an enemy of person U and person U is busy, then person X is funny.\nFor all Y, Z, if there exists V such that person Y is angry and person Z is funny and person Z is a sibling of person V, then person Y is a sibling of person Z.\nFor all Z, if there exists U such that person Z is sad and person Z dislikes object U and object U is hard, then person Z is sad.\nFor all Y, if there exists A such that object Y is new and object A is big, then object Y is hard.\nFor all Z, if person Z is calm, then person Z is angry.\nFor all X, Z, if there exists B such that person Z is tall and person X is calm and person Z dislikes object B, then person X is an enemy of person Z.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is excited and person X is weak, then person X is friendly.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is strong and person X is busy, then person X is funny.\nFor all X, if person X is strong and person X is bored, then person X is hungry.\nFor all X, if person X is tired and person X is curious, then person X is calm.\nFor all X, Y, if person X is funny and person Y is clever, then person X is an enemy of person Y.\n\nAnd the following facts:\ncar is dirty.\nfrank is an enemy of george.\nalice is clever.\nfrank likes phone.\neve is a friend of alice.\nalice is an enemy of george.\ngeorge dislikes phone.\ngeorge is a sibling of dave.\nfrank dislikes apple.\nfrank likes book.\nbob is hungry.\ndave is an enemy of alice.\neve is funny.\neve is tired.\neve is an enemy of george.\nfrank is tired.\nalice is an enemy of dave.\ngeorge is tired.\ncarol is excited.\ncarol owns phone.\n\nQUESTION:\nCould car is soft explain car is dirty?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": 10,
      "reasoning_type": "abduction"
    },
    "id": 1262,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(carol).",
    "c": "heavy(X) :- soft(X).\nsmall(X) :- heavy(X).\nclean(X) :- small(X).\nlight(X) :- clean(X).\nsmooth(X) :- light(X).\nred(X) :- smooth(X).\nold(X) :- red(X).\nrough(X) :- old(X).\nwet(X) :- rough(X).\ndirty(X) :- wet(X).\ntired(Z) :- curious(Z), friend(Z,A), excited(A).\nfunny(X) :- curious(X), enemy(X,U), busy(U).\nsibling(Y,Z) :- angry(Y), funny(Z), sibling(Z,V).\nsad(Z) :- sad(Z), dislikes(Z,U), hard(U).\nhard(Y) :- new(Y), big(A).\nangry(Z) :- calm(Z).\nenemy(X,Z) :- tall(Z), calm(X), dislikes(Z,B).\ntall(X) :- bored(X).\nfriendly(X) :- excited(X), weak(X).\nstrong(X) :- brave(X).\nhappy(X) :- funny(X).\nfunny(X) :- strong(X), busy(X).\nhungry(X) :- strong(X), bored(X).\ncalm(X) :- tired(X), curious(X).\nenemy(X,Y) :- funny(X), clever(Y).\ndirty(car).\nenemy(frank,george).\nclever(alice).\nlikes(frank,phone).\nfriend(eve,alice).\nenemy(alice,george).\ndislikes(george,phone).\nsibling(george,dave).\ndislikes(frank,apple).\nlikes(frank,book).\nhungry(bob).\nenemy(dave,alice).\nfunny(eve).\ntired(eve).\nenemy(eve,george).\ntired(frank).\nenemy(alice,dave).\ntired(george).\nexcited(carol).\nowns(carol,phone).",
    "natural language": "You are given the following information:\nFor all X, if object X is soft, then object X is heavy.\nFor all X, if object X is heavy, then object X is small.\nFor all X, if object X is small, then object X is clean.\nFor all X, if object X is clean, then object X is light.\nFor all X, if object X is light, then object X is smooth.\nFor all X, if object X is smooth, then object X is red.\nFor all X, if object X is red, then object X is old.\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all Z, if there exists A such that person Z is curious and person Z is a friend of person A and person A is excited, then person Z is tired.\nFor all X, if there exists U such that person X is curious and person X is an enemy of person U and person U is busy, then person X is funny.\nFor all Y, Z, if there exists V such that person Y is angry and person Z is funny and person Z is a sibling of person V, then person Y is a sibling of person Z.\nFor all Z, if there exists U such that person Z is sad and person Z dislikes object U and object U is hard, then person Z is sad.\nFor all Y, if there exists A such that object Y is new and object A is big, then object Y is hard.\nFor all Z, if person Z is calm, then person Z is angry.\nFor all X, Z, if there exists B such that person Z is tall and person X is calm and person Z dislikes object B, then person X is an enemy of person Z.\nFor all X, if person X is bored, then person X is tall.\nFor all X, if person X is excited and person X is weak, then person X is friendly.\nFor all X, if person X is brave, then person X is strong.\nFor all X, if person X is funny, then person X is happy.\nFor all X, if person X is strong and person X is busy, then person X is funny.\nFor all X, if person X is strong and person X is bored, then person X is hungry.\nFor all X, if person X is tired and person X is curious, then person X is calm.\nFor all X, Y, if person X is funny and person Y is clever, then person X is an enemy of person Y.\n\nAnd the following facts:\ncar is dirty.\nfrank is an enemy of george.\nalice is clever.\nfrank likes phone.\neve is a friend of alice.\nalice is an enemy of george.\ngeorge dislikes phone.\ngeorge is a sibling of dave.\nfrank dislikes apple.\nfrank likes book.\nbob is hungry.\ndave is an enemy of alice.\neve is funny.\neve is tired.\neve is an enemy of george.\nfrank is tired.\nalice is an enemy of dave.\ngeorge is tired.\ncarol is excited.\ncarol owns phone.\n\nQUESTION:\nCould carol is happy explain car is dirty?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1263,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "smooth(ball).",
    "c": "light(X) :- dirty(X).\nwet(X) :- light(X).\nrough(X) :- wet(X).\ndirty(X) :- rough(X).\nbig(X) :- dirty(X).\nsmooth(X) :- big(X).\nold(X) :- smooth(X).\nsmooth(X) :- old(X).\ndirty(X) :- smooth(X).\nhard(X) :- dirty(X).\ndirty(X) :- hard(X).\nred(X) :- dirty(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nclean(X) :- old(X).\nsoft(X) :- clean(X).\ndirty(X) :- soft(X).\nbig(X) :- dirty(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nfunny(X) :- bored(X), friend(X,W), funny(W).\nangry(X) :- bored(X), curious(F).\ntall(X) :- busy(X), calm(X).\nweak(X) :- curious(X).\ncurious(X) :- busy(X).\ndirty(ball).\nbrave(alice).\nfriend(dave,frank).\ndislikes(alice,book).\nhungry(frank).\nsibling(eve,alice).\nsibling(bob,dave).\nenemy(dave,alice).\nparent(frank,bob).\nfriend(dave,george).\nsmall(pencil).\ncalm(eve).\nhappy(eve).\ntired(frank).\nlikes(frank,book).\nexcited(alice).\nangry(george).\nparent(frank,george).\nenemy(frank,eve).\ntired(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists W such that person X is bored and person X is a friend of person W and person W is funny, then person X is funny.\nFor all X, if there exists F such that person X is bored and person F is curious, then person X is angry.\nFor all X, if person X is busy and person X is calm, then person X is tall.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is busy, then person X is curious.\n\nAnd the following facts:\nball is dirty.\nalice is brave.\ndave is a friend of frank.\nalice dislikes book.\nfrank is hungry.\neve is a sibling of alice.\nbob is a sibling of dave.\ndave is an enemy of alice.\nfrank is a parent of bob.\ndave is a friend of george.\npencil is small.\neve is calm.\neve is happy.\nfrank is tired.\nfrank likes book.\nalice is excited.\ngeorge is angry.\nfrank is a parent of george.\nfrank is an enemy of eve.\ncarol is tired.\n\nQUESTION:\nIs ball is smooth true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1264,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(ball).",
    "c": "light(X) :- dirty(X).\nwet(X) :- light(X).\nrough(X) :- wet(X).\ndirty(X) :- rough(X).\nbig(X) :- dirty(X).\nsmooth(X) :- big(X).\nold(X) :- smooth(X).\nsmooth(X) :- old(X).\ndirty(X) :- smooth(X).\nhard(X) :- dirty(X).\ndirty(X) :- hard(X).\nred(X) :- dirty(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nclean(X) :- old(X).\nsoft(X) :- clean(X).\ndirty(X) :- soft(X).\nbig(X) :- dirty(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nfunny(X) :- bored(X), friend(X,W), funny(W).\nangry(X) :- bored(X), curious(F).\ntall(X) :- busy(X), calm(X).\nweak(X) :- curious(X).\ncurious(X) :- busy(X).\ndirty(ball).\nbrave(alice).\nfriend(dave,frank).\ndislikes(alice,book).\nhungry(frank).\nsibling(eve,alice).\nsibling(bob,dave).\nenemy(dave,alice).\nparent(frank,bob).\nfriend(dave,george).\nsmall(pencil).\ncalm(eve).\nhappy(eve).\ntired(frank).\nlikes(frank,book).\nexcited(alice).\nangry(george).\nparent(frank,george).\nenemy(frank,eve).\ntired(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists W such that person X is bored and person X is a friend of person W and person W is funny, then person X is funny.\nFor all X, if there exists F such that person X is bored and person F is curious, then person X is angry.\nFor all X, if person X is busy and person X is calm, then person X is tall.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is busy, then person X is curious.\n\nAnd the following facts:\nball is dirty.\nalice is brave.\ndave is a friend of frank.\nalice dislikes book.\nfrank is hungry.\neve is a sibling of alice.\nbob is a sibling of dave.\ndave is an enemy of alice.\nfrank is a parent of bob.\ndave is a friend of george.\npencil is small.\neve is calm.\neve is happy.\nfrank is tired.\nfrank likes book.\nalice is excited.\ngeorge is angry.\nfrank is a parent of george.\nfrank is an enemy of eve.\ncarol is tired.\n\nQUESTION:\nIs ball is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1265,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "dirty(ball).",
    "c": "light(X) :- dirty(X).\nwet(X) :- light(X).\nrough(X) :- wet(X).\ndirty(X) :- rough(X).\nbig(X) :- dirty(X).\nsmooth(X) :- big(X).\nold(X) :- smooth(X).\nsmooth(X) :- old(X).\ndirty(X) :- smooth(X).\nhard(X) :- dirty(X).\ndirty(X) :- hard(X).\nred(X) :- dirty(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nclean(X) :- old(X).\nsoft(X) :- clean(X).\ndirty(X) :- soft(X).\nbig(X) :- dirty(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nfunny(X) :- bored(X), friend(X,W), funny(W).\nangry(X) :- bored(X), curious(F).\ntall(X) :- busy(X), calm(X).\nweak(X) :- curious(X).\ncurious(X) :- busy(X).\nsmooth(ball).\nbrave(alice).\nfriend(dave,frank).\ndislikes(alice,book).\nhungry(frank).\nsibling(eve,alice).\nsibling(bob,dave).\nenemy(dave,alice).\nparent(frank,bob).\nfriend(dave,george).\nsmall(pencil).\ncalm(eve).\nhappy(eve).\ntired(frank).\nlikes(frank,book).\nexcited(alice).\nangry(george).\nparent(frank,george).\nenemy(frank,eve).\ntired(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists W such that person X is bored and person X is a friend of person W and person W is funny, then person X is funny.\nFor all X, if there exists F such that person X is bored and person F is curious, then person X is angry.\nFor all X, if person X is busy and person X is calm, then person X is tall.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is busy, then person X is curious.\n\nAnd the following facts:\nball is smooth.\nalice is brave.\ndave is a friend of frank.\nalice dislikes book.\nfrank is hungry.\neve is a sibling of alice.\nbob is a sibling of dave.\ndave is an enemy of alice.\nfrank is a parent of bob.\ndave is a friend of george.\npencil is small.\neve is calm.\neve is happy.\nfrank is tired.\nfrank likes book.\nalice is excited.\ngeorge is angry.\nfrank is a parent of george.\nfrank is an enemy of eve.\ncarol is tired.\n\nQUESTION:\nCould ball is dirty explain ball is smooth?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1266,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(phone).",
    "c": "light(X) :- dirty(X).\nwet(X) :- light(X).\nrough(X) :- wet(X).\ndirty(X) :- rough(X).\nbig(X) :- dirty(X).\nsmooth(X) :- big(X).\nold(X) :- smooth(X).\nsmooth(X) :- old(X).\ndirty(X) :- smooth(X).\nhard(X) :- dirty(X).\ndirty(X) :- hard(X).\nred(X) :- dirty(X).\nhard(X) :- red(X).\nold(X) :- hard(X).\nclean(X) :- old(X).\nsoft(X) :- clean(X).\ndirty(X) :- soft(X).\nbig(X) :- dirty(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nfunny(X) :- bored(X), friend(X,W), funny(W).\nangry(X) :- bored(X), curious(F).\ntall(X) :- busy(X), calm(X).\nweak(X) :- curious(X).\ncurious(X) :- busy(X).\nsmooth(ball).\nbrave(alice).\nfriend(dave,frank).\ndislikes(alice,book).\nhungry(frank).\nsibling(eve,alice).\nsibling(bob,dave).\nenemy(dave,alice).\nparent(frank,bob).\nfriend(dave,george).\nsmall(pencil).\ncalm(eve).\nhappy(eve).\ntired(frank).\nlikes(frank,book).\nexcited(alice).\nangry(george).\nparent(frank,george).\nenemy(frank,eve).\ntired(carol).",
    "natural language": "You are given the following information:\nFor all X, if object X is dirty, then object X is light.\nFor all X, if object X is light, then object X is wet.\nFor all X, if object X is wet, then object X is rough.\nFor all X, if object X is rough, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is smooth.\nFor all X, if object X is smooth, then object X is dirty.\nFor all X, if object X is dirty, then object X is hard.\nFor all X, if object X is hard, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is hard.\nFor all X, if object X is hard, then object X is old.\nFor all X, if object X is old, then object X is clean.\nFor all X, if object X is clean, then object X is soft.\nFor all X, if object X is soft, then object X is dirty.\nFor all X, if object X is dirty, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if there exists W such that person X is bored and person X is a friend of person W and person W is funny, then person X is funny.\nFor all X, if there exists F such that person X is bored and person F is curious, then person X is angry.\nFor all X, if person X is busy and person X is calm, then person X is tall.\nFor all X, if person X is curious, then person X is weak.\nFor all X, if person X is busy, then person X is curious.\n\nAnd the following facts:\nball is smooth.\nalice is brave.\ndave is a friend of frank.\nalice dislikes book.\nfrank is hungry.\neve is a sibling of alice.\nbob is a sibling of dave.\ndave is an enemy of alice.\nfrank is a parent of bob.\ndave is a friend of george.\npencil is small.\neve is calm.\neve is happy.\nfrank is tired.\nfrank likes book.\nalice is excited.\ngeorge is angry.\nfrank is a parent of george.\nfrank is an enemy of eve.\ncarol is tired.\n\nQUESTION:\nCould phone is small explain ball is smooth?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1267,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "hungry(frank).",
    "c": "friendly(X) :- funny(X).\nsad(X) :- friendly(X).\nbored(X) :- sad(X).\nfunny(X) :- bored(X).\ncalm(X) :- funny(X).\nstrong(X) :- calm(X).\ntired(X) :- strong(X).\nbored(X) :- tired(X).\nfriendly(X) :- bored(X).\nbored(X) :- friendly(X).\nhungry(X) :- bored(X).\nhappy(X) :- hungry(X).\ncurious(X) :- happy(X).\ncalm(X) :- curious(X).\nexcited(X) :- calm(X).\nweak(X) :- excited(X).\nbored(X) :- weak(X).\ncalm(X) :- bored(X).\nsad(X) :- calm(X).\nhungry(X) :- sad(X).\nwet(X) :- dirty(X), owns(U,X), tall(U).\nsmooth(Z) :- rough(Z), owns(V,Z), brave(V).\nlikes(X,Y) :- clever(X), soft(Y).\nwet(X) :- small(X).\nrough(X) :- soft(X).\nfunny(frank).\nclean(book).\nsmooth(pencil).\nowns(dave,pencil).\nlikes(george,apple).\nowns(bob,phone).\nnew(pencil).\nlikes(alice,car).\nowns(dave,book).\nclean(pencil).\nbrave(dave).\nparent(alice,frank).\nfriend(carol,eve).\nhard(apple).\nlight(phone).\nenemy(alice,dave).\nowns(dave,apple).\nenemy(alice,frank).\nlikes(carol,pencil).\nfriend(bob,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if there exists U such that object X is dirty and person U owns object X and person U is tall, then object X is wet.\nFor all Z, if there exists V such that object Z is rough and person V owns object Z and person V is brave, then object Z is smooth.\nFor all X, Y, if person X is clever and object Y is soft, then person X likes object Y.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is soft, then object X is rough.\n\nAnd the following facts:\nfrank is funny.\nbook is clean.\npencil is smooth.\ndave owns pencil.\ngeorge likes apple.\nbob owns phone.\npencil is new.\nalice likes car.\ndave owns book.\npencil is clean.\ndave is brave.\nalice is a parent of frank.\ncarol is a friend of eve.\napple is hard.\nphone is light.\nalice is an enemy of dave.\ndave owns apple.\nalice is an enemy of frank.\ncarol likes pencil.\nbob is a friend of alice.\n\nQUESTION:\nIs frank is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1268,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(george).",
    "c": "friendly(X) :- funny(X).\nsad(X) :- friendly(X).\nbored(X) :- sad(X).\nfunny(X) :- bored(X).\ncalm(X) :- funny(X).\nstrong(X) :- calm(X).\ntired(X) :- strong(X).\nbored(X) :- tired(X).\nfriendly(X) :- bored(X).\nbored(X) :- friendly(X).\nhungry(X) :- bored(X).\nhappy(X) :- hungry(X).\ncurious(X) :- happy(X).\ncalm(X) :- curious(X).\nexcited(X) :- calm(X).\nweak(X) :- excited(X).\nbored(X) :- weak(X).\ncalm(X) :- bored(X).\nsad(X) :- calm(X).\nhungry(X) :- sad(X).\nwet(X) :- dirty(X), owns(U,X), tall(U).\nsmooth(Z) :- rough(Z), owns(V,Z), brave(V).\nlikes(X,Y) :- clever(X), soft(Y).\nwet(X) :- small(X).\nrough(X) :- soft(X).\nfunny(frank).\nclean(book).\nsmooth(pencil).\nowns(dave,pencil).\nlikes(george,apple).\nowns(bob,phone).\nnew(pencil).\nlikes(alice,car).\nowns(dave,book).\nclean(pencil).\nbrave(dave).\nparent(alice,frank).\nfriend(carol,eve).\nhard(apple).\nlight(phone).\nenemy(alice,dave).\nowns(dave,apple).\nenemy(alice,frank).\nlikes(carol,pencil).\nfriend(bob,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if there exists U such that object X is dirty and person U owns object X and person U is tall, then object X is wet.\nFor all Z, if there exists V such that object Z is rough and person V owns object Z and person V is brave, then object Z is smooth.\nFor all X, Y, if person X is clever and object Y is soft, then person X likes object Y.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is soft, then object X is rough.\n\nAnd the following facts:\nfrank is funny.\nbook is clean.\npencil is smooth.\ndave owns pencil.\ngeorge likes apple.\nbob owns phone.\npencil is new.\nalice likes car.\ndave owns book.\npencil is clean.\ndave is brave.\nalice is a parent of frank.\ncarol is a friend of eve.\napple is hard.\nphone is light.\nalice is an enemy of dave.\ndave owns apple.\nalice is an enemy of frank.\ncarol likes pencil.\nbob is a friend of alice.\n\nQUESTION:\nIs george is curious true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1269,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "funny(frank).",
    "c": "friendly(X) :- funny(X).\nsad(X) :- friendly(X).\nbored(X) :- sad(X).\nfunny(X) :- bored(X).\ncalm(X) :- funny(X).\nstrong(X) :- calm(X).\ntired(X) :- strong(X).\nbored(X) :- tired(X).\nfriendly(X) :- bored(X).\nbored(X) :- friendly(X).\nhungry(X) :- bored(X).\nhappy(X) :- hungry(X).\ncurious(X) :- happy(X).\ncalm(X) :- curious(X).\nexcited(X) :- calm(X).\nweak(X) :- excited(X).\nbored(X) :- weak(X).\ncalm(X) :- bored(X).\nsad(X) :- calm(X).\nhungry(X) :- sad(X).\nwet(X) :- dirty(X), owns(U,X), tall(U).\nsmooth(Z) :- rough(Z), owns(V,Z), brave(V).\nlikes(X,Y) :- clever(X), soft(Y).\nwet(X) :- small(X).\nrough(X) :- soft(X).\nhungry(frank).\nclean(book).\nsmooth(pencil).\nowns(dave,pencil).\nlikes(george,apple).\nowns(bob,phone).\nnew(pencil).\nlikes(alice,car).\nowns(dave,book).\nclean(pencil).\nbrave(dave).\nparent(alice,frank).\nfriend(carol,eve).\nhard(apple).\nlight(phone).\nenemy(alice,dave).\nowns(dave,apple).\nenemy(alice,frank).\nlikes(carol,pencil).\nfriend(bob,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if there exists U such that object X is dirty and person U owns object X and person U is tall, then object X is wet.\nFor all Z, if there exists V such that object Z is rough and person V owns object Z and person V is brave, then object Z is smooth.\nFor all X, Y, if person X is clever and object Y is soft, then person X likes object Y.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is soft, then object X is rough.\n\nAnd the following facts:\nfrank is hungry.\nbook is clean.\npencil is smooth.\ndave owns pencil.\ngeorge likes apple.\nbob owns phone.\npencil is new.\nalice likes car.\ndave owns book.\npencil is clean.\ndave is brave.\nalice is a parent of frank.\ncarol is a friend of eve.\napple is hard.\nphone is light.\nalice is an enemy of dave.\ndave owns apple.\nalice is an enemy of frank.\ncarol likes pencil.\nbob is a friend of alice.\n\nQUESTION:\nCould frank is funny explain frank is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1270,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "heavy(book).",
    "c": "friendly(X) :- funny(X).\nsad(X) :- friendly(X).\nbored(X) :- sad(X).\nfunny(X) :- bored(X).\ncalm(X) :- funny(X).\nstrong(X) :- calm(X).\ntired(X) :- strong(X).\nbored(X) :- tired(X).\nfriendly(X) :- bored(X).\nbored(X) :- friendly(X).\nhungry(X) :- bored(X).\nhappy(X) :- hungry(X).\ncurious(X) :- happy(X).\ncalm(X) :- curious(X).\nexcited(X) :- calm(X).\nweak(X) :- excited(X).\nbored(X) :- weak(X).\ncalm(X) :- bored(X).\nsad(X) :- calm(X).\nhungry(X) :- sad(X).\nwet(X) :- dirty(X), owns(U,X), tall(U).\nsmooth(Z) :- rough(Z), owns(V,Z), brave(V).\nlikes(X,Y) :- clever(X), soft(Y).\nwet(X) :- small(X).\nrough(X) :- soft(X).\nhungry(frank).\nclean(book).\nsmooth(pencil).\nowns(dave,pencil).\nlikes(george,apple).\nowns(bob,phone).\nnew(pencil).\nlikes(alice,car).\nowns(dave,book).\nclean(pencil).\nbrave(dave).\nparent(alice,frank).\nfriend(carol,eve).\nhard(apple).\nlight(phone).\nenemy(alice,dave).\nowns(dave,apple).\nenemy(alice,frank).\nlikes(carol,pencil).\nfriend(bob,alice).",
    "natural language": "You are given the following information:\nFor all X, if person X is funny, then person X is friendly.\nFor all X, if person X is friendly, then person X is sad.\nFor all X, if person X is sad, then person X is bored.\nFor all X, if person X is bored, then person X is funny.\nFor all X, if person X is funny, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is tired.\nFor all X, if person X is tired, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is bored.\nFor all X, if person X is bored, then person X is hungry.\nFor all X, if person X is hungry, then person X is happy.\nFor all X, if person X is happy, then person X is curious.\nFor all X, if person X is curious, then person X is calm.\nFor all X, if person X is calm, then person X is excited.\nFor all X, if person X is excited, then person X is weak.\nFor all X, if person X is weak, then person X is bored.\nFor all X, if person X is bored, then person X is calm.\nFor all X, if person X is calm, then person X is sad.\nFor all X, if person X is sad, then person X is hungry.\nFor all X, if there exists U such that object X is dirty and person U owns object X and person U is tall, then object X is wet.\nFor all Z, if there exists V such that object Z is rough and person V owns object Z and person V is brave, then object Z is smooth.\nFor all X, Y, if person X is clever and object Y is soft, then person X likes object Y.\nFor all X, if object X is small, then object X is wet.\nFor all X, if object X is soft, then object X is rough.\n\nAnd the following facts:\nfrank is hungry.\nbook is clean.\npencil is smooth.\ndave owns pencil.\ngeorge likes apple.\nbob owns phone.\npencil is new.\nalice likes car.\ndave owns book.\npencil is clean.\ndave is brave.\nalice is a parent of frank.\ncarol is a friend of eve.\napple is hard.\nphone is light.\nalice is an enemy of dave.\ndave owns apple.\nalice is an enemy of frank.\ncarol likes pencil.\nbob is a friend of alice.\n\nQUESTION:\nCould book is heavy explain frank is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1271,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "red(apple).",
    "c": "rough(X) :- old(X).\nsoft(X) :- rough(X).\nred(X) :- soft(X).\nlight(X) :- red(X).\nhard(X) :- light(X).\nwet(X) :- hard(X).\ndirty(X) :- wet(X).\nnew(X) :- dirty(X).\nclean(X) :- new(X).\nsmall(X) :- clean(X).\nbig(X) :- small(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nold(X) :- smooth(X).\nwet(X) :- old(X).\nold(X) :- wet(X).\ndirty(X) :- old(X).\nred(X) :- dirty(X).\nnew(X) :- red(X).\nred(X) :- new(X).\nfunny(Z) :- calm(Z), likes(Z,A).\nstrong(Y) :- brave(Y), owns(Y,A).\ncurious(X) :- friendly(X).\ncurious(X) :- weak(X).\nbored(X) :- friendly(X), tall(X).\nold(apple).\nhappy(bob).\nfriend(eve,alice).\nfriend(frank,dave).\nparent(dave,carol).\nbored(bob).\nbusy(alice).\nsibling(frank,carol).\nsibling(eve,bob).\nfriendly(carol).\ndislikes(george,phone).\nexcited(dave).\ndislikes(alice,pencil).\nfriend(george,dave).\nparent(alice,george).\nowns(bob,car).\nowns(alice,apple).\nowns(bob,pencil).\nparent(george,dave).\nstrong(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all Z, if there exists A such that person Z is calm and person Z likes object A, then person Z is funny.\nFor all Y, if there exists A such that person Y is brave and person Y owns object A, then person Y is strong.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is friendly and person X is tall, then person X is bored.\n\nAnd the following facts:\napple is old.\nbob is happy.\neve is a friend of alice.\nfrank is a friend of dave.\ndave is a parent of carol.\nbob is bored.\nalice is busy.\nfrank is a sibling of carol.\neve is a sibling of bob.\ncarol is friendly.\ngeorge dislikes phone.\ndave is excited.\nalice dislikes pencil.\ngeorge is a friend of dave.\nalice is a parent of george.\nbob owns car.\nalice owns apple.\nbob owns pencil.\ngeorge is a parent of dave.\neve is strong.\n\nQUESTION:\nIs apple is red true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1272,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "new(car).",
    "c": "rough(X) :- old(X).\nsoft(X) :- rough(X).\nred(X) :- soft(X).\nlight(X) :- red(X).\nhard(X) :- light(X).\nwet(X) :- hard(X).\ndirty(X) :- wet(X).\nnew(X) :- dirty(X).\nclean(X) :- new(X).\nsmall(X) :- clean(X).\nbig(X) :- small(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nold(X) :- smooth(X).\nwet(X) :- old(X).\nold(X) :- wet(X).\ndirty(X) :- old(X).\nred(X) :- dirty(X).\nnew(X) :- red(X).\nred(X) :- new(X).\nfunny(Z) :- calm(Z), likes(Z,A).\nstrong(Y) :- brave(Y), owns(Y,A).\ncurious(X) :- friendly(X).\ncurious(X) :- weak(X).\nbored(X) :- friendly(X), tall(X).\nold(apple).\nhappy(bob).\nfriend(eve,alice).\nfriend(frank,dave).\nparent(dave,carol).\nbored(bob).\nbusy(alice).\nsibling(frank,carol).\nsibling(eve,bob).\nfriendly(carol).\ndislikes(george,phone).\nexcited(dave).\ndislikes(alice,pencil).\nfriend(george,dave).\nparent(alice,george).\nowns(bob,car).\nowns(alice,apple).\nowns(bob,pencil).\nparent(george,dave).\nstrong(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all Z, if there exists A such that person Z is calm and person Z likes object A, then person Z is funny.\nFor all Y, if there exists A such that person Y is brave and person Y owns object A, then person Y is strong.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is friendly and person X is tall, then person X is bored.\n\nAnd the following facts:\napple is old.\nbob is happy.\neve is a friend of alice.\nfrank is a friend of dave.\ndave is a parent of carol.\nbob is bored.\nalice is busy.\nfrank is a sibling of carol.\neve is a sibling of bob.\ncarol is friendly.\ngeorge dislikes phone.\ndave is excited.\nalice dislikes pencil.\ngeorge is a friend of dave.\nalice is a parent of george.\nbob owns car.\nalice owns apple.\nbob owns pencil.\ngeorge is a parent of dave.\neve is strong.\n\nQUESTION:\nIs car is new true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1273,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "old(apple).",
    "c": "rough(X) :- old(X).\nsoft(X) :- rough(X).\nred(X) :- soft(X).\nlight(X) :- red(X).\nhard(X) :- light(X).\nwet(X) :- hard(X).\ndirty(X) :- wet(X).\nnew(X) :- dirty(X).\nclean(X) :- new(X).\nsmall(X) :- clean(X).\nbig(X) :- small(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nold(X) :- smooth(X).\nwet(X) :- old(X).\nold(X) :- wet(X).\ndirty(X) :- old(X).\nred(X) :- dirty(X).\nnew(X) :- red(X).\nred(X) :- new(X).\nfunny(Z) :- calm(Z), likes(Z,A).\nstrong(Y) :- brave(Y), owns(Y,A).\ncurious(X) :- friendly(X).\ncurious(X) :- weak(X).\nbored(X) :- friendly(X), tall(X).\nred(apple).\nhappy(bob).\nfriend(eve,alice).\nfriend(frank,dave).\nparent(dave,carol).\nbored(bob).\nbusy(alice).\nsibling(frank,carol).\nsibling(eve,bob).\nfriendly(carol).\ndislikes(george,phone).\nexcited(dave).\ndislikes(alice,pencil).\nfriend(george,dave).\nparent(alice,george).\nowns(bob,car).\nowns(alice,apple).\nowns(bob,pencil).\nparent(george,dave).\nstrong(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all Z, if there exists A such that person Z is calm and person Z likes object A, then person Z is funny.\nFor all Y, if there exists A such that person Y is brave and person Y owns object A, then person Y is strong.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is friendly and person X is tall, then person X is bored.\n\nAnd the following facts:\napple is red.\nbob is happy.\neve is a friend of alice.\nfrank is a friend of dave.\ndave is a parent of carol.\nbob is bored.\nalice is busy.\nfrank is a sibling of carol.\neve is a sibling of bob.\ncarol is friendly.\ngeorge dislikes phone.\ndave is excited.\nalice dislikes pencil.\ngeorge is a friend of dave.\nalice is a parent of george.\nbob owns car.\nalice owns apple.\nbob owns pencil.\ngeorge is a parent of dave.\neve is strong.\n\nQUESTION:\nCould apple is old explain apple is red?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1274,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "sad(george).",
    "c": "rough(X) :- old(X).\nsoft(X) :- rough(X).\nred(X) :- soft(X).\nlight(X) :- red(X).\nhard(X) :- light(X).\nwet(X) :- hard(X).\ndirty(X) :- wet(X).\nnew(X) :- dirty(X).\nclean(X) :- new(X).\nsmall(X) :- clean(X).\nbig(X) :- small(X).\nheavy(X) :- big(X).\nsmooth(X) :- heavy(X).\nold(X) :- smooth(X).\nwet(X) :- old(X).\nold(X) :- wet(X).\ndirty(X) :- old(X).\nred(X) :- dirty(X).\nnew(X) :- red(X).\nred(X) :- new(X).\nfunny(Z) :- calm(Z), likes(Z,A).\nstrong(Y) :- brave(Y), owns(Y,A).\ncurious(X) :- friendly(X).\ncurious(X) :- weak(X).\nbored(X) :- friendly(X), tall(X).\nred(apple).\nhappy(bob).\nfriend(eve,alice).\nfriend(frank,dave).\nparent(dave,carol).\nbored(bob).\nbusy(alice).\nsibling(frank,carol).\nsibling(eve,bob).\nfriendly(carol).\ndislikes(george,phone).\nexcited(dave).\ndislikes(alice,pencil).\nfriend(george,dave).\nparent(alice,george).\nowns(bob,car).\nowns(alice,apple).\nowns(bob,pencil).\nparent(george,dave).\nstrong(eve).",
    "natural language": "You are given the following information:\nFor all X, if object X is old, then object X is rough.\nFor all X, if object X is rough, then object X is soft.\nFor all X, if object X is soft, then object X is red.\nFor all X, if object X is red, then object X is light.\nFor all X, if object X is light, then object X is hard.\nFor all X, if object X is hard, then object X is wet.\nFor all X, if object X is wet, then object X is dirty.\nFor all X, if object X is dirty, then object X is new.\nFor all X, if object X is new, then object X is clean.\nFor all X, if object X is clean, then object X is small.\nFor all X, if object X is small, then object X is big.\nFor all X, if object X is big, then object X is heavy.\nFor all X, if object X is heavy, then object X is smooth.\nFor all X, if object X is smooth, then object X is old.\nFor all X, if object X is old, then object X is wet.\nFor all X, if object X is wet, then object X is old.\nFor all X, if object X is old, then object X is dirty.\nFor all X, if object X is dirty, then object X is red.\nFor all X, if object X is red, then object X is new.\nFor all X, if object X is new, then object X is red.\nFor all Z, if there exists A such that person Z is calm and person Z likes object A, then person Z is funny.\nFor all Y, if there exists A such that person Y is brave and person Y owns object A, then person Y is strong.\nFor all X, if person X is friendly, then person X is curious.\nFor all X, if person X is weak, then person X is curious.\nFor all X, if person X is friendly and person X is tall, then person X is bored.\n\nAnd the following facts:\napple is red.\nbob is happy.\neve is a friend of alice.\nfrank is a friend of dave.\ndave is a parent of carol.\nbob is bored.\nalice is busy.\nfrank is a sibling of carol.\neve is a sibling of bob.\ncarol is friendly.\ngeorge dislikes phone.\ndave is excited.\nalice dislikes pencil.\ngeorge is a friend of dave.\nalice is a parent of george.\nbob owns car.\nalice owns apple.\nbob owns pencil.\ngeorge is a parent of dave.\neve is strong.\n\nQUESTION:\nCould george is sad explain apple is red?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1275,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "happy(carol).",
    "c": "angry(X) :- curious(X).\nfunny(X) :- angry(X).\ntired(X) :- funny(X).\nbusy(X) :- tired(X).\nhungry(X) :- busy(X).\nsad(X) :- hungry(X).\nhappy(X) :- sad(X).\nbored(X) :- happy(X).\nfriendly(X) :- bored(X).\nbrave(X) :- friendly(X).\ntall(X) :- brave(X).\nexcited(X) :- tall(X).\nclever(X) :- excited(X).\nweak(X) :- clever(X).\ncalm(X) :- weak(X).\nstrong(X) :- calm(X).\nsad(X) :- strong(X).\ncalm(X) :- sad(X).\nbrave(X) :- calm(X).\nhappy(X) :- brave(X).\nbig(Z) :- red(Z).\nnew(Z) :- light(Z).\nsmooth(Z) :- soft(Z).\nred(Z) :- clean(Z), owns(A,Z), red(B).\nclean(X) :- heavy(X), dislikes(A,X), clean(B).\ncurious(carol).\ndislikes(bob,pencil).\nenemy(bob,carol).\nsibling(dave,eve).\nlikes(eve,phone).\nclean(ball).\nenemy(bob,george).\ndislikes(frank,phone).\nsmall(apple).\nfriend(alice,frank).\nfriend(alice,carol).\nlikes(dave,pencil).\nparent(dave,frank).\nheavy(pencil).\nparent(george,alice).\nfriend(carol,frank).\ndislikes(alice,car).\nowns(frank,car).\nowns(alice,book).\nowns(eve,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all Z, if object Z is red, then object Z is big.\nFor all Z, if object Z is light, then object Z is new.\nFor all Z, if object Z is soft, then object Z is smooth.\nFor all Z, if there exist A, B such that object Z is clean and person A owns object Z and object B is red, then object Z is red.\nFor all X, if there exist A, B such that object X is heavy and person A dislikes object X and object B is clean, then object X is clean.\n\nAnd the following facts:\ncarol is curious.\nbob dislikes pencil.\nbob is an enemy of carol.\ndave is a sibling of eve.\neve likes phone.\nball is clean.\nbob is an enemy of george.\nfrank dislikes phone.\napple is small.\nalice is a friend of frank.\nalice is a friend of carol.\ndave likes pencil.\ndave is a parent of frank.\npencil is heavy.\ngeorge is a parent of alice.\ncarol is a friend of frank.\nalice dislikes car.\nfrank owns car.\nalice owns book.\neve owns book.\n\nQUESTION:\nIs carol is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "deduction"
    },
    "id": 1276,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "light(apple).",
    "c": "angry(X) :- curious(X).\nfunny(X) :- angry(X).\ntired(X) :- funny(X).\nbusy(X) :- tired(X).\nhungry(X) :- busy(X).\nsad(X) :- hungry(X).\nhappy(X) :- sad(X).\nbored(X) :- happy(X).\nfriendly(X) :- bored(X).\nbrave(X) :- friendly(X).\ntall(X) :- brave(X).\nexcited(X) :- tall(X).\nclever(X) :- excited(X).\nweak(X) :- clever(X).\ncalm(X) :- weak(X).\nstrong(X) :- calm(X).\nsad(X) :- strong(X).\ncalm(X) :- sad(X).\nbrave(X) :- calm(X).\nhappy(X) :- brave(X).\nbig(Z) :- red(Z).\nnew(Z) :- light(Z).\nsmooth(Z) :- soft(Z).\nred(Z) :- clean(Z), owns(A,Z), red(B).\nclean(X) :- heavy(X), dislikes(A,X), clean(B).\ncurious(carol).\ndislikes(bob,pencil).\nenemy(bob,carol).\nsibling(dave,eve).\nlikes(eve,phone).\nclean(ball).\nenemy(bob,george).\ndislikes(frank,phone).\nsmall(apple).\nfriend(alice,frank).\nfriend(alice,carol).\nlikes(dave,pencil).\nparent(dave,frank).\nheavy(pencil).\nparent(george,alice).\nfriend(carol,frank).\ndislikes(alice,car).\nowns(frank,car).\nowns(alice,book).\nowns(eve,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all Z, if object Z is red, then object Z is big.\nFor all Z, if object Z is light, then object Z is new.\nFor all Z, if object Z is soft, then object Z is smooth.\nFor all Z, if there exist A, B such that object Z is clean and person A owns object Z and object B is red, then object Z is red.\nFor all X, if there exist A, B such that object X is heavy and person A dislikes object X and object B is clean, then object X is clean.\n\nAnd the following facts:\ncarol is curious.\nbob dislikes pencil.\nbob is an enemy of carol.\ndave is a sibling of eve.\neve likes phone.\nball is clean.\nbob is an enemy of george.\nfrank dislikes phone.\napple is small.\nalice is a friend of frank.\nalice is a friend of carol.\ndave likes pencil.\ndave is a parent of frank.\npencil is heavy.\ngeorge is a parent of alice.\ncarol is a friend of frank.\nalice dislikes car.\nfrank owns car.\nalice owns book.\neve owns book.\n\nQUESTION:\nIs apple is light true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    },
    "id": 1277,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "curious(carol).",
    "c": "angry(X) :- curious(X).\nfunny(X) :- angry(X).\ntired(X) :- funny(X).\nbusy(X) :- tired(X).\nhungry(X) :- busy(X).\nsad(X) :- hungry(X).\nhappy(X) :- sad(X).\nbored(X) :- happy(X).\nfriendly(X) :- bored(X).\nbrave(X) :- friendly(X).\ntall(X) :- brave(X).\nexcited(X) :- tall(X).\nclever(X) :- excited(X).\nweak(X) :- clever(X).\ncalm(X) :- weak(X).\nstrong(X) :- calm(X).\nsad(X) :- strong(X).\ncalm(X) :- sad(X).\nbrave(X) :- calm(X).\nhappy(X) :- brave(X).\nbig(Z) :- red(Z).\nnew(Z) :- light(Z).\nsmooth(Z) :- soft(Z).\nred(Z) :- clean(Z), owns(A,Z), red(B).\nclean(X) :- heavy(X), dislikes(A,X), clean(B).\nhappy(carol).\ndislikes(bob,pencil).\nenemy(bob,carol).\nsibling(dave,eve).\nlikes(eve,phone).\nclean(ball).\nenemy(bob,george).\ndislikes(frank,phone).\nsmall(apple).\nfriend(alice,frank).\nfriend(alice,carol).\nlikes(dave,pencil).\nparent(dave,frank).\nheavy(pencil).\nparent(george,alice).\nfriend(carol,frank).\ndislikes(alice,car).\nowns(frank,car).\nowns(alice,book).\nowns(eve,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all Z, if object Z is red, then object Z is big.\nFor all Z, if object Z is light, then object Z is new.\nFor all Z, if object Z is soft, then object Z is smooth.\nFor all Z, if there exist A, B such that object Z is clean and person A owns object Z and object B is red, then object Z is red.\nFor all X, if there exist A, B such that object X is heavy and person A dislikes object X and object B is clean, then object X is clean.\n\nAnd the following facts:\ncarol is happy.\nbob dislikes pencil.\nbob is an enemy of carol.\ndave is a sibling of eve.\neve likes phone.\nball is clean.\nbob is an enemy of george.\nfrank dislikes phone.\napple is small.\nalice is a friend of frank.\nalice is a friend of carol.\ndave likes pencil.\ndave is a parent of frank.\npencil is heavy.\ngeorge is a parent of alice.\ncarol is a friend of frank.\nalice dislikes car.\nfrank owns car.\nalice owns book.\neve owns book.\n\nQUESTION:\nCould carol is curious explain carol is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": 20,
      "reasoning_type": "abduction"
    },
    "id": 1278,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  },
  {
    "q": "small(book).",
    "c": "angry(X) :- curious(X).\nfunny(X) :- angry(X).\ntired(X) :- funny(X).\nbusy(X) :- tired(X).\nhungry(X) :- busy(X).\nsad(X) :- hungry(X).\nhappy(X) :- sad(X).\nbored(X) :- happy(X).\nfriendly(X) :- bored(X).\nbrave(X) :- friendly(X).\ntall(X) :- brave(X).\nexcited(X) :- tall(X).\nclever(X) :- excited(X).\nweak(X) :- clever(X).\ncalm(X) :- weak(X).\nstrong(X) :- calm(X).\nsad(X) :- strong(X).\ncalm(X) :- sad(X).\nbrave(X) :- calm(X).\nhappy(X) :- brave(X).\nbig(Z) :- red(Z).\nnew(Z) :- light(Z).\nsmooth(Z) :- soft(Z).\nred(Z) :- clean(Z), owns(A,Z), red(B).\nclean(X) :- heavy(X), dislikes(A,X), clean(B).\nhappy(carol).\ndislikes(bob,pencil).\nenemy(bob,carol).\nsibling(dave,eve).\nlikes(eve,phone).\nclean(ball).\nenemy(bob,george).\ndislikes(frank,phone).\nsmall(apple).\nfriend(alice,frank).\nfriend(alice,carol).\nlikes(dave,pencil).\nparent(dave,frank).\nheavy(pencil).\nparent(george,alice).\nfriend(carol,frank).\ndislikes(alice,car).\nowns(frank,car).\nowns(alice,book).\nowns(eve,book).",
    "natural language": "You are given the following information:\nFor all X, if person X is curious, then person X is angry.\nFor all X, if person X is angry, then person X is funny.\nFor all X, if person X is funny, then person X is tired.\nFor all X, if person X is tired, then person X is busy.\nFor all X, if person X is busy, then person X is hungry.\nFor all X, if person X is hungry, then person X is sad.\nFor all X, if person X is sad, then person X is happy.\nFor all X, if person X is happy, then person X is bored.\nFor all X, if person X is bored, then person X is friendly.\nFor all X, if person X is friendly, then person X is brave.\nFor all X, if person X is brave, then person X is tall.\nFor all X, if person X is tall, then person X is excited.\nFor all X, if person X is excited, then person X is clever.\nFor all X, if person X is clever, then person X is weak.\nFor all X, if person X is weak, then person X is calm.\nFor all X, if person X is calm, then person X is strong.\nFor all X, if person X is strong, then person X is sad.\nFor all X, if person X is sad, then person X is calm.\nFor all X, if person X is calm, then person X is brave.\nFor all X, if person X is brave, then person X is happy.\nFor all Z, if object Z is red, then object Z is big.\nFor all Z, if object Z is light, then object Z is new.\nFor all Z, if object Z is soft, then object Z is smooth.\nFor all Z, if there exist A, B such that object Z is clean and person A owns object Z and object B is red, then object Z is red.\nFor all X, if there exist A, B such that object X is heavy and person A dislikes object X and object B is clean, then object X is clean.\n\nAnd the following facts:\ncarol is happy.\nbob dislikes pencil.\nbob is an enemy of carol.\ndave is a sibling of eve.\neve likes phone.\nball is clean.\nbob is an enemy of george.\nfrank dislikes phone.\napple is small.\nalice is a friend of frank.\nalice is a friend of carol.\ndave likes pencil.\ndave is a parent of frank.\npencil is heavy.\ngeorge is a parent of alice.\ncarol is a friend of frank.\nalice dislikes car.\nfrank owns car.\nalice owns book.\neve owns book.\n\nQUESTION:\nCould book is small explain carol is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 20,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    },
    "id": 1279,
    "pred": "false",
    "raw_output": "[{'generated_text': '\\n```json\\n{\\n  \"answer\": \"false\"\\n}\\n```'}]"
  }
]