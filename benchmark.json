[
  {
    "q": "dislikes(alice,carol).",
    "c": "cold :- owns(dave,pencil).\ndislikes(eve,apple) :- cold.\nfriend(bob,alice) :- small(ball), friend(dave,eve), hungry(frank).\nhappy(alice) :- big(apple), happy(bob).\nowns(dave,pencil).\nowns(dave,ball).\nowns(george,pencil).\ndislikes(alice,carol).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then it is cold.\nIf it is cold, then eve dislikes apple.\nIf ball is small and dave is a friend of eve and frank is hungry, then bob is a friend of alice.\nIf apple is big and bob is happy, then alice is happy.\n\nAnd the following facts:\ndave owns pencil.\ndave owns ball.\ngeorge owns pencil.\nalice dislikes carol.\n\nQUESTION:\nIs alice dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,ball).",
    "c": "cold :- owns(dave,pencil).\ndislikes(eve,apple) :- cold.\nfriend(bob,alice) :- small(ball), friend(dave,eve), hungry(frank).\nhappy(alice) :- big(apple), happy(bob).\nowns(dave,pencil).\nowns(dave,ball).\nowns(george,pencil).\ndislikes(alice,carol).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then it is cold.\nIf it is cold, then eve dislikes apple.\nIf ball is small and dave is a friend of eve and frank is hungry, then bob is a friend of alice.\nIf apple is big and bob is happy, then alice is happy.\n\nAnd the following facts:\ndave owns pencil.\ndave owns ball.\ngeorge owns pencil.\nalice dislikes carol.\n\nQUESTION:\nIs dave owns ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "cold :- owns(dave,pencil).\ndislikes(eve,apple) :- cold.\nfriend(bob,alice) :- small(ball), friend(dave,eve), hungry(frank).\nhappy(alice) :- big(apple), happy(bob).\nowns(dave,pencil).\nowns(dave,ball).\nowns(george,pencil).\ndislikes(alice,carol).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then it is cold.\nIf it is cold, then eve dislikes apple.\nIf ball is small and dave is a friend of eve and frank is hungry, then bob is a friend of alice.\nIf apple is big and bob is happy, then alice is happy.\n\nAnd the following facts:\ndave owns pencil.\ndave owns ball.\ngeorge owns pencil.\nalice dislikes carol.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,bob).",
    "c": "cold :- owns(dave,pencil).\ndislikes(eve,apple) :- cold.\nfriend(bob,alice) :- small(ball), friend(dave,eve), hungry(frank).\nhappy(alice) :- big(apple), happy(bob).\nowns(dave,pencil).\nowns(dave,ball).\nowns(george,pencil).\ndislikes(alice,carol).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then it is cold.\nIf it is cold, then eve dislikes apple.\nIf ball is small and dave is a friend of eve and frank is hungry, then bob is a friend of alice.\nIf apple is big and bob is happy, then alice is happy.\n\nAnd the following facts:\ndave owns pencil.\ndave owns ball.\ngeorge owns pencil.\nalice dislikes carol.\n\nQUESTION:\nIs carol dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(george).",
    "c": "cold :- owns(dave,pencil).\ndislikes(eve,apple) :- cold.\nfriend(bob,alice) :- small(ball), friend(dave,eve), hungry(frank).\nhappy(alice) :- big(apple), happy(bob).\nowns(dave,pencil).\nowns(dave,ball).\nowns(george,pencil).\ndislikes(alice,carol).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then it is cold.\nIf it is cold, then eve dislikes apple.\nIf ball is small and dave is a friend of eve and frank is hungry, then bob is a friend of alice.\nIf apple is big and bob is happy, then alice is happy.\n\nAnd the following facts:\ndave owns pencil.\ndave owns ball.\ngeorge owns pencil.\nalice dislikes carol.\n\nQUESTION:\nIs george is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,pencil).",
    "c": "cold :- owns(dave,pencil).\ndislikes(eve,apple) :- cold.\nfriend(bob,alice) :- small(ball), friend(dave,eve), hungry(frank).\nhappy(alice) :- big(apple), happy(bob).\nowns(dave,ball).\nowns(george,pencil).\ndislikes(alice,carol).",
    "natural language": "You are given the following rules:\nIf dave owns pencil, then it is cold.\nIf it is cold, then eve dislikes apple.\nIf ball is small and dave is a friend of eve and frank is hungry, then bob is a friend of alice.\nIf apple is big and bob is happy, then alice is happy.\n\nAnd the following facts:\ndave owns pencil.\ndave owns ball.\ngeorge owns pencil.\nalice dislikes carol.\n\nOBSERVATION: eve dislikes apple is true.\n\nQUESTION:\nCould dave owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,ball).",
    "c": "cold :- owns(dave,pencil).\ndislikes(eve,apple) :- cold.\nfriend(bob,alice) :- small(ball), friend(dave,eve), hungry(frank).\nhappy(alice) :- big(apple), happy(bob).\nowns(dave,pencil).\nowns(george,pencil).\ndislikes(alice,carol).",
    "natural language": "You are given the following rules:\nIf dave owns pencil, then it is cold.\nIf it is cold, then eve dislikes apple.\nIf ball is small and dave is a friend of eve and frank is hungry, then bob is a friend of alice.\nIf apple is big and bob is happy, then alice is happy.\n\nAnd the following facts:\ndave owns pencil.\ndave owns ball.\ngeorge owns pencil.\nalice dislikes carol.\n\nOBSERVATION: eve dislikes apple is true.\n\nQUESTION:\nCould dave owns ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(george,pencil).",
    "c": "cold :- owns(dave,pencil).\ndislikes(eve,apple) :- cold.\nfriend(bob,alice) :- small(ball), friend(dave,eve), hungry(frank).\nhappy(alice) :- big(apple), happy(bob).\nowns(dave,pencil).\nowns(dave,ball).\ndislikes(alice,carol).",
    "natural language": "You are given the following rules:\nIf dave owns pencil, then it is cold.\nIf it is cold, then eve dislikes apple.\nIf ball is small and dave is a friend of eve and frank is hungry, then bob is a friend of alice.\nIf apple is big and bob is happy, then alice is happy.\n\nAnd the following facts:\ndave owns pencil.\ndave owns ball.\ngeorge owns pencil.\nalice dislikes carol.\n\nOBSERVATION: eve dislikes apple is true.\n\nQUESTION:\nCould george owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(george,carol).",
    "c": "parent(dave,frank) :- friend(george,carol).\nfriend(bob,dave) :- parent(dave,frank).\ntall(frank) :- tall(alice), tall(alice), sunny.\nenemy(george,alice) :- tall(eve), hot, likes(dave,bob).\nfriend(george,carol).\nfriend(alice,george).\nparent(george,dave).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf george is a friend of carol, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is a friend of dave.\nIf alice is tall and alice is tall and it is sunny, then frank is tall.\nIf eve is tall and it is hot and dave likes bob, then george is an enemy of alice.\n\nAnd the following facts:\ngeorge is a friend of carol.\nalice is a friend of george.\ngeorge is a parent of dave.\nalice is an enemy of eve.\n\nQUESTION:\nIs george is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,eve).",
    "c": "parent(dave,frank) :- friend(george,carol).\nfriend(bob,dave) :- parent(dave,frank).\ntall(frank) :- tall(alice), tall(alice), sunny.\nenemy(george,alice) :- tall(eve), hot, likes(dave,bob).\nfriend(george,carol).\nfriend(alice,george).\nparent(george,dave).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf george is a friend of carol, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is a friend of dave.\nIf alice is tall and alice is tall and it is sunny, then frank is tall.\nIf eve is tall and it is hot and dave likes bob, then george is an enemy of alice.\n\nAnd the following facts:\ngeorge is a friend of carol.\nalice is a friend of george.\ngeorge is a parent of dave.\nalice is an enemy of eve.\n\nQUESTION:\nIs alice is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,george).",
    "c": "parent(dave,frank) :- friend(george,carol).\nfriend(bob,dave) :- parent(dave,frank).\ntall(frank) :- tall(alice), tall(alice), sunny.\nenemy(george,alice) :- tall(eve), hot, likes(dave,bob).\nfriend(george,carol).\nfriend(alice,george).\nparent(george,dave).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf george is a friend of carol, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is a friend of dave.\nIf alice is tall and alice is tall and it is sunny, then frank is tall.\nIf eve is tall and it is hot and dave likes bob, then george is an enemy of alice.\n\nAnd the following facts:\ngeorge is a friend of carol.\nalice is a friend of george.\ngeorge is a parent of dave.\nalice is an enemy of eve.\n\nQUESTION:\nIs alice is a friend of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,pencil).",
    "c": "parent(dave,frank) :- friend(george,carol).\nfriend(bob,dave) :- parent(dave,frank).\ntall(frank) :- tall(alice), tall(alice), sunny.\nenemy(george,alice) :- tall(eve), hot, likes(dave,bob).\nfriend(george,carol).\nfriend(alice,george).\nparent(george,dave).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf george is a friend of carol, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is a friend of dave.\nIf alice is tall and alice is tall and it is sunny, then frank is tall.\nIf eve is tall and it is hot and dave likes bob, then george is an enemy of alice.\n\nAnd the following facts:\ngeorge is a friend of carol.\nalice is a friend of george.\ngeorge is a parent of dave.\nalice is an enemy of eve.\n\nQUESTION:\nIs george likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "parent(dave,frank) :- friend(george,carol).\nfriend(bob,dave) :- parent(dave,frank).\ntall(frank) :- tall(alice), tall(alice), sunny.\nenemy(george,alice) :- tall(eve), hot, likes(dave,bob).\nfriend(george,carol).\nfriend(alice,george).\nparent(george,dave).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf george is a friend of carol, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is a friend of dave.\nIf alice is tall and alice is tall and it is sunny, then frank is tall.\nIf eve is tall and it is hot and dave likes bob, then george is an enemy of alice.\n\nAnd the following facts:\ngeorge is a friend of carol.\nalice is a friend of george.\ngeorge is a parent of dave.\nalice is an enemy of eve.\n\nQUESTION:\nIs alice is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,carol).",
    "c": "parent(dave,frank) :- friend(george,carol).\nfriend(bob,dave) :- parent(dave,frank).\ntall(frank) :- tall(alice), tall(alice), sunny.\nenemy(george,alice) :- tall(eve), hot, likes(dave,bob).\nfriend(alice,george).\nparent(george,dave).\nenemy(alice,eve).",
    "natural language": "You are given the following rules:\nIf george is a friend of carol, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is a friend of dave.\nIf alice is tall and alice is tall and it is sunny, then frank is tall.\nIf eve is tall and it is hot and dave likes bob, then george is an enemy of alice.\n\nAnd the following facts:\ngeorge is a friend of carol.\nalice is a friend of george.\ngeorge is a parent of dave.\nalice is an enemy of eve.\n\nOBSERVATION: bob is a friend of dave is true.\n\nQUESTION:\nCould george is a friend of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(alice,george).",
    "c": "parent(dave,frank) :- friend(george,carol).\nfriend(bob,dave) :- parent(dave,frank).\ntall(frank) :- tall(alice), tall(alice), sunny.\nenemy(george,alice) :- tall(eve), hot, likes(dave,bob).\nfriend(george,carol).\nparent(george,dave).\nenemy(alice,eve).",
    "natural language": "You are given the following rules:\nIf george is a friend of carol, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is a friend of dave.\nIf alice is tall and alice is tall and it is sunny, then frank is tall.\nIf eve is tall and it is hot and dave likes bob, then george is an enemy of alice.\n\nAnd the following facts:\ngeorge is a friend of carol.\nalice is a friend of george.\ngeorge is a parent of dave.\nalice is an enemy of eve.\n\nOBSERVATION: bob is a friend of dave is true.\n\nQUESTION:\nCould alice is a friend of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,eve).",
    "c": "parent(dave,frank) :- friend(george,carol).\nfriend(bob,dave) :- parent(dave,frank).\ntall(frank) :- tall(alice), tall(alice), sunny.\nenemy(george,alice) :- tall(eve), hot, likes(dave,bob).\nfriend(george,carol).\nfriend(alice,george).\nparent(george,dave).",
    "natural language": "You are given the following rules:\nIf george is a friend of carol, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is a friend of dave.\nIf alice is tall and alice is tall and it is sunny, then frank is tall.\nIf eve is tall and it is hot and dave likes bob, then george is an enemy of alice.\n\nAnd the following facts:\ngeorge is a friend of carol.\nalice is a friend of george.\ngeorge is a parent of dave.\nalice is an enemy of eve.\n\nOBSERVATION: bob is a friend of dave is true.\n\nQUESTION:\nCould alice is an enemy of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "big(car).",
    "c": "sunny :- friend(george,dave).\ndislikes(carol,carol) :- sunny.\nbig(car) :- dislikes(carol,carol).\nenemy(dave,frank) :- big(car).\nfriend(george,dave).\ndislikes(george,alice).\nfriend(bob,george).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then it is sunny.\nIf it is sunny, then carol dislikes carol.\nIf carol dislikes carol, then car is big.\nIf car is big, then dave is an enemy of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ngeorge dislikes alice.\nbob is a friend of george.\ngeorge is a friend of frank.\n\nQUESTION:\nIs car is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "sunny :- friend(george,dave).\ndislikes(carol,carol) :- sunny.\nbig(car) :- dislikes(carol,carol).\nenemy(dave,frank) :- big(car).\nfriend(george,dave).\ndislikes(george,alice).\nfriend(bob,george).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then it is sunny.\nIf it is sunny, then carol dislikes carol.\nIf carol dislikes carol, then car is big.\nIf car is big, then dave is an enemy of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ngeorge dislikes alice.\nbob is a friend of george.\ngeorge is a friend of frank.\n\nQUESTION:\nIs george is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "sunny :- friend(george,dave).\ndislikes(carol,carol) :- sunny.\nbig(car) :- dislikes(carol,carol).\nenemy(dave,frank) :- big(car).\nfriend(george,dave).\ndislikes(george,alice).\nfriend(bob,george).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then it is sunny.\nIf it is sunny, then carol dislikes carol.\nIf carol dislikes carol, then car is big.\nIf car is big, then dave is an enemy of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ngeorge dislikes alice.\nbob is a friend of george.\ngeorge is a friend of frank.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,bob).",
    "c": "sunny :- friend(george,dave).\ndislikes(carol,carol) :- sunny.\nbig(car) :- dislikes(carol,carol).\nenemy(dave,frank) :- big(car).\nfriend(george,dave).\ndislikes(george,alice).\nfriend(bob,george).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then it is sunny.\nIf it is sunny, then carol dislikes carol.\nIf carol dislikes carol, then car is big.\nIf car is big, then dave is an enemy of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ngeorge dislikes alice.\nbob is a friend of george.\ngeorge is a friend of frank.\n\nQUESTION:\nIs dave is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,eve).",
    "c": "sunny :- friend(george,dave).\ndislikes(carol,carol) :- sunny.\nbig(car) :- dislikes(carol,carol).\nenemy(dave,frank) :- big(car).\nfriend(george,dave).\ndislikes(george,alice).\nfriend(bob,george).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then it is sunny.\nIf it is sunny, then carol dislikes carol.\nIf carol dislikes carol, then car is big.\nIf car is big, then dave is an enemy of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ngeorge dislikes alice.\nbob is a friend of george.\ngeorge is a friend of frank.\n\nQUESTION:\nIs george dislikes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "sunny :- friend(george,dave).\ndislikes(carol,carol) :- sunny.\nbig(car) :- dislikes(carol,carol).\nenemy(dave,frank) :- big(car).\ndislikes(george,alice).\nfriend(bob,george).\nfriend(george,frank).",
    "natural language": "You are given the following rules:\nIf george is a friend of dave, then it is sunny.\nIf it is sunny, then carol dislikes carol.\nIf carol dislikes carol, then car is big.\nIf car is big, then dave is an enemy of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ngeorge dislikes alice.\nbob is a friend of george.\ngeorge is a friend of frank.\n\nOBSERVATION: dave is an enemy of frank is true.\n\nQUESTION:\nCould george is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,alice).",
    "c": "sunny :- friend(george,dave).\ndislikes(carol,carol) :- sunny.\nbig(car) :- dislikes(carol,carol).\nenemy(dave,frank) :- big(car).\nfriend(george,dave).\nfriend(bob,george).\nfriend(george,frank).",
    "natural language": "You are given the following rules:\nIf george is a friend of dave, then it is sunny.\nIf it is sunny, then carol dislikes carol.\nIf carol dislikes carol, then car is big.\nIf car is big, then dave is an enemy of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ngeorge dislikes alice.\nbob is a friend of george.\ngeorge is a friend of frank.\n\nOBSERVATION: dave is an enemy of frank is true.\n\nQUESTION:\nCould george dislikes alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(george,frank).",
    "c": "sunny :- friend(george,dave).\ndislikes(carol,carol) :- sunny.\nbig(car) :- dislikes(carol,carol).\nenemy(dave,frank) :- big(car).\nfriend(george,dave).\ndislikes(george,alice).\nfriend(bob,george).",
    "natural language": "You are given the following rules:\nIf george is a friend of dave, then it is sunny.\nIf it is sunny, then carol dislikes carol.\nIf carol dislikes carol, then car is big.\nIf car is big, then dave is an enemy of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ngeorge dislikes alice.\nbob is a friend of george.\ngeorge is a friend of frank.\n\nOBSERVATION: dave is an enemy of frank is true.\n\nQUESTION:\nCould george is a friend of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "big(apple).",
    "c": "big(apple) :- happy(dave).\nowns(eve,book) :- big(apple).\nhot :- owns(eve,book).\nenemy(george,dave) :- hot.\nhappy(dave).\nbig(car).\nenemy(frank,eve).\nenemy(alice,frank).",
    "natural language": "You are given the following information:\nIf dave is happy, then apple is big.\nIf apple is big, then eve owns book.\nIf eve owns book, then it is hot.\nIf it is hot, then george is an enemy of dave.\n\nAnd the following facts:\ndave is happy.\ncar is big.\nfrank is an enemy of eve.\nalice is an enemy of frank.\n\nQUESTION:\nIs apple is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,eve).",
    "c": "big(apple) :- happy(dave).\nowns(eve,book) :- big(apple).\nhot :- owns(eve,book).\nenemy(george,dave) :- hot.\nhappy(dave).\nbig(car).\nenemy(frank,eve).\nenemy(alice,frank).",
    "natural language": "You are given the following information:\nIf dave is happy, then apple is big.\nIf apple is big, then eve owns book.\nIf eve owns book, then it is hot.\nIf it is hot, then george is an enemy of dave.\n\nAnd the following facts:\ndave is happy.\ncar is big.\nfrank is an enemy of eve.\nalice is an enemy of frank.\n\nQUESTION:\nIs frank is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(car).",
    "c": "big(apple) :- happy(dave).\nowns(eve,book) :- big(apple).\nhot :- owns(eve,book).\nenemy(george,dave) :- hot.\nhappy(dave).\nbig(car).\nenemy(frank,eve).\nenemy(alice,frank).",
    "natural language": "You are given the following information:\nIf dave is happy, then apple is big.\nIf apple is big, then eve owns book.\nIf eve owns book, then it is hot.\nIf it is hot, then george is an enemy of dave.\n\nAnd the following facts:\ndave is happy.\ncar is big.\nfrank is an enemy of eve.\nalice is an enemy of frank.\n\nQUESTION:\nIs car is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "big(apple) :- happy(dave).\nowns(eve,book) :- big(apple).\nhot :- owns(eve,book).\nenemy(george,dave) :- hot.\nhappy(dave).\nbig(car).\nenemy(frank,eve).\nenemy(alice,frank).",
    "natural language": "You are given the following information:\nIf dave is happy, then apple is big.\nIf apple is big, then eve owns book.\nIf eve owns book, then it is hot.\nIf it is hot, then george is an enemy of dave.\n\nAnd the following facts:\ndave is happy.\ncar is big.\nfrank is an enemy of eve.\nalice is an enemy of frank.\n\nQUESTION:\nIs dave is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,pencil).",
    "c": "big(apple) :- happy(dave).\nowns(eve,book) :- big(apple).\nhot :- owns(eve,book).\nenemy(george,dave) :- hot.\nhappy(dave).\nbig(car).\nenemy(frank,eve).\nenemy(alice,frank).",
    "natural language": "You are given the following information:\nIf dave is happy, then apple is big.\nIf apple is big, then eve owns book.\nIf eve owns book, then it is hot.\nIf it is hot, then george is an enemy of dave.\n\nAnd the following facts:\ndave is happy.\ncar is big.\nfrank is an enemy of eve.\nalice is an enemy of frank.\n\nQUESTION:\nIs carol owns pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "big(apple) :- happy(dave).\nowns(eve,book) :- big(apple).\nhot :- owns(eve,book).\nenemy(george,dave) :- hot.\nbig(car).\nenemy(frank,eve).\nenemy(alice,frank).",
    "natural language": "You are given the following rules:\nIf dave is happy, then apple is big.\nIf apple is big, then eve owns book.\nIf eve owns book, then it is hot.\nIf it is hot, then george is an enemy of dave.\n\nAnd the following facts:\ndave is happy.\ncar is big.\nfrank is an enemy of eve.\nalice is an enemy of frank.\n\nOBSERVATION: george is an enemy of dave is true.\n\nQUESTION:\nCould dave is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "big(car).",
    "c": "big(apple) :- happy(dave).\nowns(eve,book) :- big(apple).\nhot :- owns(eve,book).\nenemy(george,dave) :- hot.\nhappy(dave).\nenemy(frank,eve).\nenemy(alice,frank).",
    "natural language": "You are given the following rules:\nIf dave is happy, then apple is big.\nIf apple is big, then eve owns book.\nIf eve owns book, then it is hot.\nIf it is hot, then george is an enemy of dave.\n\nAnd the following facts:\ndave is happy.\ncar is big.\nfrank is an enemy of eve.\nalice is an enemy of frank.\n\nOBSERVATION: george is an enemy of dave is true.\n\nQUESTION:\nCould car is big be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(frank,eve).",
    "c": "big(apple) :- happy(dave).\nowns(eve,book) :- big(apple).\nhot :- owns(eve,book).\nenemy(george,dave) :- hot.\nhappy(dave).\nbig(car).\nenemy(alice,frank).",
    "natural language": "You are given the following rules:\nIf dave is happy, then apple is big.\nIf apple is big, then eve owns book.\nIf eve owns book, then it is hot.\nIf it is hot, then george is an enemy of dave.\n\nAnd the following facts:\ndave is happy.\ncar is big.\nfrank is an enemy of eve.\nalice is an enemy of frank.\n\nOBSERVATION: george is an enemy of dave is true.\n\nQUESTION:\nCould frank is an enemy of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,alice).",
    "c": "hungry(eve) :- enemy(eve,carol).\nenemy(george,frank) :- hungry(eve).\nsunny :- big(ball), big(car), sunny.\nfriend(frank,bob) :- friend(george,frank), big(book).\nenemy(eve,carol).\nhungry(bob).\nfriend(eve,alice).\nenemy(dave,alice).\nsunny.\nenemy(dave,carol).\nenemy(george,alice).\nfriend(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is an enemy of carol, then eve is hungry.\nIf eve is hungry, then george is an enemy of frank.\nIf ball is big and car is big and it is sunny, then it is sunny.\nIf george is a friend of frank and book is big, then frank is a friend of bob.\n\nAnd the following facts:\neve is an enemy of carol.\nbob is hungry.\neve is a friend of alice.\ndave is an enemy of alice.\nit is sunny.\ndave is an enemy of carol.\ngeorge is an enemy of alice.\neve is a friend of bob.\n\nQUESTION:\nIs dave is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "hungry(eve) :- enemy(eve,carol).\nenemy(george,frank) :- hungry(eve).\nsunny :- big(ball), big(car), sunny.\nfriend(frank,bob) :- friend(george,frank), big(book).\nenemy(eve,carol).\nhungry(bob).\nfriend(eve,alice).\nenemy(dave,alice).\nsunny.\nenemy(dave,carol).\nenemy(george,alice).\nfriend(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is an enemy of carol, then eve is hungry.\nIf eve is hungry, then george is an enemy of frank.\nIf ball is big and car is big and it is sunny, then it is sunny.\nIf george is a friend of frank and book is big, then frank is a friend of bob.\n\nAnd the following facts:\neve is an enemy of carol.\nbob is hungry.\neve is a friend of alice.\ndave is an enemy of alice.\nit is sunny.\ndave is an enemy of carol.\ngeorge is an enemy of alice.\neve is a friend of bob.\n\nQUESTION:\nIs eve is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,bob).",
    "c": "hungry(eve) :- enemy(eve,carol).\nenemy(george,frank) :- hungry(eve).\nsunny :- big(ball), big(car), sunny.\nfriend(frank,bob) :- friend(george,frank), big(book).\nenemy(eve,carol).\nhungry(bob).\nfriend(eve,alice).\nenemy(dave,alice).\nsunny.\nenemy(dave,carol).\nenemy(george,alice).\nfriend(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is an enemy of carol, then eve is hungry.\nIf eve is hungry, then george is an enemy of frank.\nIf ball is big and car is big and it is sunny, then it is sunny.\nIf george is a friend of frank and book is big, then frank is a friend of bob.\n\nAnd the following facts:\neve is an enemy of carol.\nbob is hungry.\neve is a friend of alice.\ndave is an enemy of alice.\nit is sunny.\ndave is an enemy of carol.\ngeorge is an enemy of alice.\neve is a friend of bob.\n\nQUESTION:\nIs eve is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,carol).",
    "c": "hungry(eve) :- enemy(eve,carol).\nenemy(george,frank) :- hungry(eve).\nsunny :- big(ball), big(car), sunny.\nfriend(frank,bob) :- friend(george,frank), big(book).\nenemy(eve,carol).\nhungry(bob).\nfriend(eve,alice).\nenemy(dave,alice).\nsunny.\nenemy(dave,carol).\nenemy(george,alice).\nfriend(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is an enemy of carol, then eve is hungry.\nIf eve is hungry, then george is an enemy of frank.\nIf ball is big and car is big and it is sunny, then it is sunny.\nIf george is a friend of frank and book is big, then frank is a friend of bob.\n\nAnd the following facts:\neve is an enemy of carol.\nbob is hungry.\neve is a friend of alice.\ndave is an enemy of alice.\nit is sunny.\ndave is an enemy of carol.\ngeorge is an enemy of alice.\neve is a friend of bob.\n\nQUESTION:\nIs frank is an enemy of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(car).",
    "c": "hungry(eve) :- enemy(eve,carol).\nenemy(george,frank) :- hungry(eve).\nsunny :- big(ball), big(car), sunny.\nfriend(frank,bob) :- friend(george,frank), big(book).\nenemy(eve,carol).\nhungry(bob).\nfriend(eve,alice).\nenemy(dave,alice).\nsunny.\nenemy(dave,carol).\nenemy(george,alice).\nfriend(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is an enemy of carol, then eve is hungry.\nIf eve is hungry, then george is an enemy of frank.\nIf ball is big and car is big and it is sunny, then it is sunny.\nIf george is a friend of frank and book is big, then frank is a friend of bob.\n\nAnd the following facts:\neve is an enemy of carol.\nbob is hungry.\neve is a friend of alice.\ndave is an enemy of alice.\nit is sunny.\ndave is an enemy of carol.\ngeorge is an enemy of alice.\neve is a friend of bob.\n\nQUESTION:\nIs car is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,carol).",
    "c": "hungry(eve) :- enemy(eve,carol).\nenemy(george,frank) :- hungry(eve).\nsunny :- big(ball), big(car), sunny.\nfriend(frank,bob) :- friend(george,frank), big(book).\nhungry(bob).\nfriend(eve,alice).\nenemy(dave,alice).\nsunny.\nenemy(dave,carol).\nenemy(george,alice).\nfriend(eve,bob).",
    "natural language": "You are given the following rules:\nIf eve is an enemy of carol, then eve is hungry.\nIf eve is hungry, then george is an enemy of frank.\nIf ball is big and car is big and it is sunny, then it is sunny.\nIf george is a friend of frank and book is big, then frank is a friend of bob.\n\nAnd the following facts:\neve is an enemy of carol.\nbob is hungry.\neve is a friend of alice.\ndave is an enemy of alice.\nit is sunny.\ndave is an enemy of carol.\ngeorge is an enemy of alice.\neve is a friend of bob.\n\nOBSERVATION: george is an enemy of frank is true.\n\nQUESTION:\nCould eve is an enemy of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "hungry(eve) :- enemy(eve,carol).\nenemy(george,frank) :- hungry(eve).\nsunny :- big(ball), big(car), sunny.\nfriend(frank,bob) :- friend(george,frank), big(book).\nenemy(eve,carol).\nhungry(bob).\nenemy(dave,alice).\nsunny.\nenemy(dave,carol).\nenemy(george,alice).\nfriend(eve,bob).",
    "natural language": "You are given the following rules:\nIf eve is an enemy of carol, then eve is hungry.\nIf eve is hungry, then george is an enemy of frank.\nIf ball is big and car is big and it is sunny, then it is sunny.\nIf george is a friend of frank and book is big, then frank is a friend of bob.\n\nAnd the following facts:\neve is an enemy of carol.\nbob is hungry.\neve is a friend of alice.\ndave is an enemy of alice.\nit is sunny.\ndave is an enemy of carol.\ngeorge is an enemy of alice.\neve is a friend of bob.\n\nOBSERVATION: george is an enemy of frank is true.\n\nQUESTION:\nCould eve is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,alice).",
    "c": "hungry(eve) :- enemy(eve,carol).\nenemy(george,frank) :- hungry(eve).\nsunny :- big(ball), big(car), sunny.\nfriend(frank,bob) :- friend(george,frank), big(book).\nenemy(eve,carol).\nhungry(bob).\nfriend(eve,alice).\nsunny.\nenemy(dave,carol).\nenemy(george,alice).\nfriend(eve,bob).",
    "natural language": "You are given the following rules:\nIf eve is an enemy of carol, then eve is hungry.\nIf eve is hungry, then george is an enemy of frank.\nIf ball is big and car is big and it is sunny, then it is sunny.\nIf george is a friend of frank and book is big, then frank is a friend of bob.\n\nAnd the following facts:\neve is an enemy of carol.\nbob is hungry.\neve is a friend of alice.\ndave is an enemy of alice.\nit is sunny.\ndave is an enemy of carol.\ngeorge is an enemy of alice.\neve is a friend of bob.\n\nOBSERVATION: george is an enemy of frank is true.\n\nQUESTION:\nCould dave is an enemy of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(george,bob).",
    "c": "sad(dave) :- small(apple).\nenemy(eve,george) :- sad(dave).\ntall(alice) :- wet(ball), tall(bob).\ntall(george) :- sad(dave), likes(alice,frank), enemy(frank,eve).\nsmall(apple).\nlikes(frank,pencil).\nlikes(frank,george).\nlikes(dave,eve).\nlikes(dave,car).\nlikes(dave,pencil).\nlikes(george,bob).\nlikes(carol,ball).",
    "natural language": "You are given the following information:\nIf apple is small, then dave is sad.\nIf dave is sad, then eve is an enemy of george.\nIf ball is wet and bob is tall, then alice is tall.\nIf dave is sad and alice likes frank and frank is an enemy of eve, then george is tall.\n\nAnd the following facts:\napple is small.\nfrank likes pencil.\nfrank likes george.\ndave likes eve.\ndave likes car.\ndave likes pencil.\ngeorge likes bob.\ncarol likes ball.\n\nQUESTION:\nIs george likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,eve).",
    "c": "sad(dave) :- small(apple).\nenemy(eve,george) :- sad(dave).\ntall(alice) :- wet(ball), tall(bob).\ntall(george) :- sad(dave), likes(alice,frank), enemy(frank,eve).\nsmall(apple).\nlikes(frank,pencil).\nlikes(frank,george).\nlikes(dave,eve).\nlikes(dave,car).\nlikes(dave,pencil).\nlikes(george,bob).\nlikes(carol,ball).",
    "natural language": "You are given the following information:\nIf apple is small, then dave is sad.\nIf dave is sad, then eve is an enemy of george.\nIf ball is wet and bob is tall, then alice is tall.\nIf dave is sad and alice likes frank and frank is an enemy of eve, then george is tall.\n\nAnd the following facts:\napple is small.\nfrank likes pencil.\nfrank likes george.\ndave likes eve.\ndave likes car.\ndave likes pencil.\ngeorge likes bob.\ncarol likes ball.\n\nQUESTION:\nIs dave likes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,george).",
    "c": "sad(dave) :- small(apple).\nenemy(eve,george) :- sad(dave).\ntall(alice) :- wet(ball), tall(bob).\ntall(george) :- sad(dave), likes(alice,frank), enemy(frank,eve).\nsmall(apple).\nlikes(frank,pencil).\nlikes(frank,george).\nlikes(dave,eve).\nlikes(dave,car).\nlikes(dave,pencil).\nlikes(george,bob).\nlikes(carol,ball).",
    "natural language": "You are given the following information:\nIf apple is small, then dave is sad.\nIf dave is sad, then eve is an enemy of george.\nIf ball is wet and bob is tall, then alice is tall.\nIf dave is sad and alice likes frank and frank is an enemy of eve, then george is tall.\n\nAnd the following facts:\napple is small.\nfrank likes pencil.\nfrank likes george.\ndave likes eve.\ndave likes car.\ndave likes pencil.\ngeorge likes bob.\ncarol likes ball.\n\nQUESTION:\nIs eve is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,bob).",
    "c": "sad(dave) :- small(apple).\nenemy(eve,george) :- sad(dave).\ntall(alice) :- wet(ball), tall(bob).\ntall(george) :- sad(dave), likes(alice,frank), enemy(frank,eve).\nsmall(apple).\nlikes(frank,pencil).\nlikes(frank,george).\nlikes(dave,eve).\nlikes(dave,car).\nlikes(dave,pencil).\nlikes(george,bob).\nlikes(carol,ball).",
    "natural language": "You are given the following information:\nIf apple is small, then dave is sad.\nIf dave is sad, then eve is an enemy of george.\nIf ball is wet and bob is tall, then alice is tall.\nIf dave is sad and alice likes frank and frank is an enemy of eve, then george is tall.\n\nAnd the following facts:\napple is small.\nfrank likes pencil.\nfrank likes george.\ndave likes eve.\ndave likes car.\ndave likes pencil.\ngeorge likes bob.\ncarol likes ball.\n\nQUESTION:\nIs carol likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "sad(dave) :- small(apple).\nenemy(eve,george) :- sad(dave).\ntall(alice) :- wet(ball), tall(bob).\ntall(george) :- sad(dave), likes(alice,frank), enemy(frank,eve).\nsmall(apple).\nlikes(frank,pencil).\nlikes(frank,george).\nlikes(dave,eve).\nlikes(dave,car).\nlikes(dave,pencil).\nlikes(george,bob).\nlikes(carol,ball).",
    "natural language": "You are given the following information:\nIf apple is small, then dave is sad.\nIf dave is sad, then eve is an enemy of george.\nIf ball is wet and bob is tall, then alice is tall.\nIf dave is sad and alice likes frank and frank is an enemy of eve, then george is tall.\n\nAnd the following facts:\napple is small.\nfrank likes pencil.\nfrank likes george.\ndave likes eve.\ndave likes car.\ndave likes pencil.\ngeorge likes bob.\ncarol likes ball.\n\nQUESTION:\nIs frank is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(apple).",
    "c": "sad(dave) :- small(apple).\nenemy(eve,george) :- sad(dave).\ntall(alice) :- wet(ball), tall(bob).\ntall(george) :- sad(dave), likes(alice,frank), enemy(frank,eve).\nlikes(frank,pencil).\nlikes(frank,george).\nlikes(dave,eve).\nlikes(dave,car).\nlikes(dave,pencil).\nlikes(george,bob).\nlikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf apple is small, then dave is sad.\nIf dave is sad, then eve is an enemy of george.\nIf ball is wet and bob is tall, then alice is tall.\nIf dave is sad and alice likes frank and frank is an enemy of eve, then george is tall.\n\nAnd the following facts:\napple is small.\nfrank likes pencil.\nfrank likes george.\ndave likes eve.\ndave likes car.\ndave likes pencil.\ngeorge likes bob.\ncarol likes ball.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould apple is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(dave,car).",
    "c": "sad(dave) :- small(apple).\nenemy(eve,george) :- sad(dave).\ntall(alice) :- wet(ball), tall(bob).\ntall(george) :- sad(dave), likes(alice,frank), enemy(frank,eve).\nsmall(apple).\nlikes(frank,pencil).\nlikes(frank,george).\nlikes(dave,eve).\nlikes(dave,pencil).\nlikes(george,bob).\nlikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf apple is small, then dave is sad.\nIf dave is sad, then eve is an enemy of george.\nIf ball is wet and bob is tall, then alice is tall.\nIf dave is sad and alice likes frank and frank is an enemy of eve, then george is tall.\n\nAnd the following facts:\napple is small.\nfrank likes pencil.\nfrank likes george.\ndave likes eve.\ndave likes car.\ndave likes pencil.\ngeorge likes bob.\ncarol likes ball.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould dave likes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,ball).",
    "c": "sad(dave) :- small(apple).\nenemy(eve,george) :- sad(dave).\ntall(alice) :- wet(ball), tall(bob).\ntall(george) :- sad(dave), likes(alice,frank), enemy(frank,eve).\nsmall(apple).\nlikes(frank,pencil).\nlikes(frank,george).\nlikes(dave,eve).\nlikes(dave,car).\nlikes(dave,pencil).\nlikes(george,bob).",
    "natural language": "You are given the following rules:\nIf apple is small, then dave is sad.\nIf dave is sad, then eve is an enemy of george.\nIf ball is wet and bob is tall, then alice is tall.\nIf dave is sad and alice likes frank and frank is an enemy of eve, then george is tall.\n\nAnd the following facts:\napple is small.\nfrank likes pencil.\nfrank likes george.\ndave likes eve.\ndave likes car.\ndave likes pencil.\ngeorge likes bob.\ncarol likes ball.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould carol likes ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "dislikes(bob,apple) :- friend(carol,frank).\nhungry(carol) :- dislikes(bob,apple).\nwet(ball) :- hungry(carol).\nparent(bob,frank) :- wet(ball).\nfriend(carol,frank).\nfriend(george,eve).\nwet(ball).\nfriend(alice,carol).\nparent(alice,bob).\nfriend(eve,alice).\nfriend(alice,dave).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf carol is a friend of frank, then bob dislikes apple.\nIf bob dislikes apple, then carol is hungry.\nIf carol is hungry, then ball is wet.\nIf ball is wet, then bob is a parent of frank.\n\nAnd the following facts:\ncarol is a friend of frank.\ngeorge is a friend of eve.\nball is wet.\nalice is a friend of carol.\nalice is a parent of bob.\neve is a friend of alice.\nalice is a friend of dave.\nfrank is a parent of alice.\n\nQUESTION:\nIs alice is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,apple).",
    "c": "dislikes(bob,apple) :- friend(carol,frank).\nhungry(carol) :- dislikes(bob,apple).\nwet(ball) :- hungry(carol).\nparent(bob,frank) :- wet(ball).\nfriend(carol,frank).\nfriend(george,eve).\nwet(ball).\nfriend(alice,carol).\nparent(alice,bob).\nfriend(eve,alice).\nfriend(alice,dave).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf carol is a friend of frank, then bob dislikes apple.\nIf bob dislikes apple, then carol is hungry.\nIf carol is hungry, then ball is wet.\nIf ball is wet, then bob is a parent of frank.\n\nAnd the following facts:\ncarol is a friend of frank.\ngeorge is a friend of eve.\nball is wet.\nalice is a friend of carol.\nalice is a parent of bob.\neve is a friend of alice.\nalice is a friend of dave.\nfrank is a parent of alice.\n\nQUESTION:\nIs bob dislikes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,frank).",
    "c": "dislikes(bob,apple) :- friend(carol,frank).\nhungry(carol) :- dislikes(bob,apple).\nwet(ball) :- hungry(carol).\nparent(bob,frank) :- wet(ball).\nfriend(carol,frank).\nfriend(george,eve).\nwet(ball).\nfriend(alice,carol).\nparent(alice,bob).\nfriend(eve,alice).\nfriend(alice,dave).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf carol is a friend of frank, then bob dislikes apple.\nIf bob dislikes apple, then carol is hungry.\nIf carol is hungry, then ball is wet.\nIf ball is wet, then bob is a parent of frank.\n\nAnd the following facts:\ncarol is a friend of frank.\ngeorge is a friend of eve.\nball is wet.\nalice is a friend of carol.\nalice is a parent of bob.\neve is a friend of alice.\nalice is a friend of dave.\nfrank is a parent of alice.\n\nQUESTION:\nIs bob is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,bob).",
    "c": "dislikes(bob,apple) :- friend(carol,frank).\nhungry(carol) :- dislikes(bob,apple).\nwet(ball) :- hungry(carol).\nparent(bob,frank) :- wet(ball).\nfriend(carol,frank).\nfriend(george,eve).\nwet(ball).\nfriend(alice,carol).\nparent(alice,bob).\nfriend(eve,alice).\nfriend(alice,dave).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf carol is a friend of frank, then bob dislikes apple.\nIf bob dislikes apple, then carol is hungry.\nIf carol is hungry, then ball is wet.\nIf ball is wet, then bob is a parent of frank.\n\nAnd the following facts:\ncarol is a friend of frank.\ngeorge is a friend of eve.\nball is wet.\nalice is a friend of carol.\nalice is a parent of bob.\neve is a friend of alice.\nalice is a friend of dave.\nfrank is a parent of alice.\n\nQUESTION:\nIs alice is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "dislikes(bob,apple) :- friend(carol,frank).\nhungry(carol) :- dislikes(bob,apple).\nwet(ball) :- hungry(carol).\nparent(bob,frank) :- wet(ball).\nfriend(carol,frank).\nfriend(george,eve).\nwet(ball).\nfriend(alice,carol).\nparent(alice,bob).\nfriend(eve,alice).\nfriend(alice,dave).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf carol is a friend of frank, then bob dislikes apple.\nIf bob dislikes apple, then carol is hungry.\nIf carol is hungry, then ball is wet.\nIf ball is wet, then bob is a parent of frank.\n\nAnd the following facts:\ncarol is a friend of frank.\ngeorge is a friend of eve.\nball is wet.\nalice is a friend of carol.\nalice is a parent of bob.\neve is a friend of alice.\nalice is a friend of dave.\nfrank is a parent of alice.\n\nQUESTION:\nIs carol is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "dislikes(bob,apple) :- friend(carol,frank).\nhungry(carol) :- dislikes(bob,apple).\nwet(ball) :- hungry(carol).\nparent(bob,frank) :- wet(ball).\nfriend(carol,frank).\nfriend(george,eve).\nfriend(alice,carol).\nparent(alice,bob).\nfriend(eve,alice).\nfriend(alice,dave).\nparent(frank,alice).",
    "natural language": "You are given the following rules:\nIf carol is a friend of frank, then bob dislikes apple.\nIf bob dislikes apple, then carol is hungry.\nIf carol is hungry, then ball is wet.\nIf ball is wet, then bob is a parent of frank.\n\nAnd the following facts:\ncarol is a friend of frank.\ngeorge is a friend of eve.\nball is wet.\nalice is a friend of carol.\nalice is a parent of bob.\neve is a friend of alice.\nalice is a friend of dave.\nfrank is a parent of alice.\n\nOBSERVATION: bob is a parent of frank is true.\n\nQUESTION:\nCould ball is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(carol,frank).",
    "c": "dislikes(bob,apple) :- friend(carol,frank).\nhungry(carol) :- dislikes(bob,apple).\nwet(ball) :- hungry(carol).\nparent(bob,frank) :- wet(ball).\nfriend(george,eve).\nwet(ball).\nfriend(alice,carol).\nparent(alice,bob).\nfriend(eve,alice).\nfriend(alice,dave).\nparent(frank,alice).",
    "natural language": "You are given the following rules:\nIf carol is a friend of frank, then bob dislikes apple.\nIf bob dislikes apple, then carol is hungry.\nIf carol is hungry, then ball is wet.\nIf ball is wet, then bob is a parent of frank.\n\nAnd the following facts:\ncarol is a friend of frank.\ngeorge is a friend of eve.\nball is wet.\nalice is a friend of carol.\nalice is a parent of bob.\neve is a friend of alice.\nalice is a friend of dave.\nfrank is a parent of alice.\n\nOBSERVATION: bob is a parent of frank is true.\n\nQUESTION:\nCould carol is a friend of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "dislikes(bob,apple) :- friend(carol,frank).\nhungry(carol) :- dislikes(bob,apple).\nwet(ball) :- hungry(carol).\nparent(bob,frank) :- wet(ball).\nfriend(carol,frank).\nfriend(george,eve).\nwet(ball).\nfriend(alice,carol).\nparent(alice,bob).\nfriend(eve,alice).\nparent(frank,alice).",
    "natural language": "You are given the following rules:\nIf carol is a friend of frank, then bob dislikes apple.\nIf bob dislikes apple, then carol is hungry.\nIf carol is hungry, then ball is wet.\nIf ball is wet, then bob is a parent of frank.\n\nAnd the following facts:\ncarol is a friend of frank.\ngeorge is a friend of eve.\nball is wet.\nalice is a friend of carol.\nalice is a parent of bob.\neve is a friend of alice.\nalice is a friend of dave.\nfrank is a parent of alice.\n\nOBSERVATION: bob is a parent of frank is true.\n\nQUESTION:\nCould alice is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,book).",
    "c": "owns(eve,phone) :- owns(dave,pencil).\nhungry(dave) :- owns(eve,phone).\nhappy(frank) :- hungry(dave).\nowns(dave,book) :- happy(frank).\nowns(dave,pencil).\nhungry(bob).\nowns(frank,apple).\nowns(george,book).\nhungry(alice).\nowns(frank,car).\nhappy(alice).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then eve owns phone.\nIf eve owns phone, then dave is hungry.\nIf dave is hungry, then frank is happy.\nIf frank is happy, then dave owns book.\n\nAnd the following facts:\ndave owns pencil.\nbob is hungry.\nfrank owns apple.\ngeorge owns book.\nalice is hungry.\nfrank owns car.\nalice is happy.\ndave owns ball.\n\nQUESTION:\nIs dave owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "owns(eve,phone) :- owns(dave,pencil).\nhungry(dave) :- owns(eve,phone).\nhappy(frank) :- hungry(dave).\nowns(dave,book) :- happy(frank).\nowns(dave,pencil).\nhungry(bob).\nowns(frank,apple).\nowns(george,book).\nhungry(alice).\nowns(frank,car).\nhappy(alice).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then eve owns phone.\nIf eve owns phone, then dave is hungry.\nIf dave is hungry, then frank is happy.\nIf frank is happy, then dave owns book.\n\nAnd the following facts:\ndave owns pencil.\nbob is hungry.\nfrank owns apple.\ngeorge owns book.\nalice is hungry.\nfrank owns car.\nalice is happy.\ndave owns ball.\n\nQUESTION:\nIs frank owns car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,pencil).",
    "c": "owns(eve,phone) :- owns(dave,pencil).\nhungry(dave) :- owns(eve,phone).\nhappy(frank) :- hungry(dave).\nowns(dave,book) :- happy(frank).\nowns(dave,pencil).\nhungry(bob).\nowns(frank,apple).\nowns(george,book).\nhungry(alice).\nowns(frank,car).\nhappy(alice).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then eve owns phone.\nIf eve owns phone, then dave is hungry.\nIf dave is hungry, then frank is happy.\nIf frank is happy, then dave owns book.\n\nAnd the following facts:\ndave owns pencil.\nbob is hungry.\nfrank owns apple.\ngeorge owns book.\nalice is hungry.\nfrank owns car.\nalice is happy.\ndave owns ball.\n\nQUESTION:\nIs dave owns pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,phone).",
    "c": "owns(eve,phone) :- owns(dave,pencil).\nhungry(dave) :- owns(eve,phone).\nhappy(frank) :- hungry(dave).\nowns(dave,book) :- happy(frank).\nowns(dave,pencil).\nhungry(bob).\nowns(frank,apple).\nowns(george,book).\nhungry(alice).\nowns(frank,car).\nhappy(alice).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then eve owns phone.\nIf eve owns phone, then dave is hungry.\nIf dave is hungry, then frank is happy.\nIf frank is happy, then dave owns book.\n\nAnd the following facts:\ndave owns pencil.\nbob is hungry.\nfrank owns apple.\ngeorge owns book.\nalice is hungry.\nfrank owns car.\nalice is happy.\ndave owns ball.\n\nQUESTION:\nIs frank owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "owns(eve,phone) :- owns(dave,pencil).\nhungry(dave) :- owns(eve,phone).\nhappy(frank) :- hungry(dave).\nowns(dave,book) :- happy(frank).\nowns(dave,pencil).\nhungry(bob).\nowns(frank,apple).\nowns(george,book).\nhungry(alice).\nowns(frank,car).\nhappy(alice).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave owns pencil, then eve owns phone.\nIf eve owns phone, then dave is hungry.\nIf dave is hungry, then frank is happy.\nIf frank is happy, then dave owns book.\n\nAnd the following facts:\ndave owns pencil.\nbob is hungry.\nfrank owns apple.\ngeorge owns book.\nalice is hungry.\nfrank owns car.\nalice is happy.\ndave owns ball.\n\nQUESTION:\nIs bob owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,pencil).",
    "c": "owns(eve,phone) :- owns(dave,pencil).\nhungry(dave) :- owns(eve,phone).\nhappy(frank) :- hungry(dave).\nowns(dave,book) :- happy(frank).\nhungry(bob).\nowns(frank,apple).\nowns(george,book).\nhungry(alice).\nowns(frank,car).\nhappy(alice).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf dave owns pencil, then eve owns phone.\nIf eve owns phone, then dave is hungry.\nIf dave is hungry, then frank is happy.\nIf frank is happy, then dave owns book.\n\nAnd the following facts:\ndave owns pencil.\nbob is hungry.\nfrank owns apple.\ngeorge owns book.\nalice is hungry.\nfrank owns car.\nalice is happy.\ndave owns ball.\n\nOBSERVATION: dave owns book is true.\n\nQUESTION:\nCould dave owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "owns(eve,phone) :- owns(dave,pencil).\nhungry(dave) :- owns(eve,phone).\nhappy(frank) :- hungry(dave).\nowns(dave,book) :- happy(frank).\nowns(dave,pencil).\nowns(frank,apple).\nowns(george,book).\nhungry(alice).\nowns(frank,car).\nhappy(alice).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf dave owns pencil, then eve owns phone.\nIf eve owns phone, then dave is hungry.\nIf dave is hungry, then frank is happy.\nIf frank is happy, then dave owns book.\n\nAnd the following facts:\ndave owns pencil.\nbob is hungry.\nfrank owns apple.\ngeorge owns book.\nalice is hungry.\nfrank owns car.\nalice is happy.\ndave owns ball.\n\nOBSERVATION: dave owns book is true.\n\nQUESTION:\nCould bob is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(george,book).",
    "c": "owns(eve,phone) :- owns(dave,pencil).\nhungry(dave) :- owns(eve,phone).\nhappy(frank) :- hungry(dave).\nowns(dave,book) :- happy(frank).\nowns(dave,pencil).\nhungry(bob).\nowns(frank,apple).\nhungry(alice).\nowns(frank,car).\nhappy(alice).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf dave owns pencil, then eve owns phone.\nIf eve owns phone, then dave is hungry.\nIf dave is hungry, then frank is happy.\nIf frank is happy, then dave owns book.\n\nAnd the following facts:\ndave owns pencil.\nbob is hungry.\nfrank owns apple.\ngeorge owns book.\nalice is hungry.\nfrank owns car.\nalice is happy.\ndave owns ball.\n\nOBSERVATION: dave owns book is true.\n\nQUESTION:\nCould george owns book be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(george,pencil).",
    "c": "owns(frank,book) :- hot.\ncold :- owns(frank,book).\ntall(frank) :- cold, enemy(dave,frank), sunny.\ntall(george) :- hungry(george), parent(dave,bob).\nhot.\nparent(frank,bob).\nhungry(frank).\nowns(frank,ball).\nowns(bob,phone).\nparent(frank,dave).\nowns(bob,ball).\nowns(frank,car).\nowns(george,pencil).\nenemy(carol,bob).\ntall(george).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is hot, then frank owns book.\nIf frank owns book, then it is cold.\nIf it is cold and dave is an enemy of frank and it is sunny, then frank is tall.\nIf george is hungry and dave is a parent of bob, then george is tall.\n\nAnd the following facts:\nit is hot.\nfrank is a parent of bob.\nfrank is hungry.\nfrank owns ball.\nbob owns phone.\nfrank is a parent of dave.\nbob owns ball.\nfrank owns car.\ngeorge owns pencil.\ncarol is an enemy of bob.\ngeorge is tall.\ndave owns phone.\n\nQUESTION:\nIs george owns pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "owns(frank,book) :- hot.\ncold :- owns(frank,book).\ntall(frank) :- cold, enemy(dave,frank), sunny.\ntall(george) :- hungry(george), parent(dave,bob).\nhot.\nparent(frank,bob).\nhungry(frank).\nowns(frank,ball).\nowns(bob,phone).\nparent(frank,dave).\nowns(bob,ball).\nowns(frank,car).\nowns(george,pencil).\nenemy(carol,bob).\ntall(george).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is hot, then frank owns book.\nIf frank owns book, then it is cold.\nIf it is cold and dave is an enemy of frank and it is sunny, then frank is tall.\nIf george is hungry and dave is a parent of bob, then george is tall.\n\nAnd the following facts:\nit is hot.\nfrank is a parent of bob.\nfrank is hungry.\nfrank owns ball.\nbob owns phone.\nfrank is a parent of dave.\nbob owns ball.\nfrank owns car.\ngeorge owns pencil.\ncarol is an enemy of bob.\ngeorge is tall.\ndave owns phone.\n\nQUESTION:\nIs frank is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "owns(frank,book) :- hot.\ncold :- owns(frank,book).\ntall(frank) :- cold, enemy(dave,frank), sunny.\ntall(george) :- hungry(george), parent(dave,bob).\nhot.\nparent(frank,bob).\nhungry(frank).\nowns(frank,ball).\nowns(bob,phone).\nparent(frank,dave).\nowns(bob,ball).\nowns(frank,car).\nowns(george,pencil).\nenemy(carol,bob).\ntall(george).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is hot, then frank owns book.\nIf frank owns book, then it is cold.\nIf it is cold and dave is an enemy of frank and it is sunny, then frank is tall.\nIf george is hungry and dave is a parent of bob, then george is tall.\n\nAnd the following facts:\nit is hot.\nfrank is a parent of bob.\nfrank is hungry.\nfrank owns ball.\nbob owns phone.\nfrank is a parent of dave.\nbob owns ball.\nfrank owns car.\ngeorge owns pencil.\ncarol is an enemy of bob.\ngeorge is tall.\ndave owns phone.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,george).",
    "c": "owns(frank,book) :- hot.\ncold :- owns(frank,book).\ntall(frank) :- cold, enemy(dave,frank), sunny.\ntall(george) :- hungry(george), parent(dave,bob).\nhot.\nparent(frank,bob).\nhungry(frank).\nowns(frank,ball).\nowns(bob,phone).\nparent(frank,dave).\nowns(bob,ball).\nowns(frank,car).\nowns(george,pencil).\nenemy(carol,bob).\ntall(george).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is hot, then frank owns book.\nIf frank owns book, then it is cold.\nIf it is cold and dave is an enemy of frank and it is sunny, then frank is tall.\nIf george is hungry and dave is a parent of bob, then george is tall.\n\nAnd the following facts:\nit is hot.\nfrank is a parent of bob.\nfrank is hungry.\nfrank owns ball.\nbob owns phone.\nfrank is a parent of dave.\nbob owns ball.\nfrank owns car.\ngeorge owns pencil.\ncarol is an enemy of bob.\ngeorge is tall.\ndave owns phone.\n\nQUESTION:\nIs carol is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,apple).",
    "c": "owns(frank,book) :- hot.\ncold :- owns(frank,book).\ntall(frank) :- cold, enemy(dave,frank), sunny.\ntall(george) :- hungry(george), parent(dave,bob).\nhot.\nparent(frank,bob).\nhungry(frank).\nowns(frank,ball).\nowns(bob,phone).\nparent(frank,dave).\nowns(bob,ball).\nowns(frank,car).\nowns(george,pencil).\nenemy(carol,bob).\ntall(george).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is hot, then frank owns book.\nIf frank owns book, then it is cold.\nIf it is cold and dave is an enemy of frank and it is sunny, then frank is tall.\nIf george is hungry and dave is a parent of bob, then george is tall.\n\nAnd the following facts:\nit is hot.\nfrank is a parent of bob.\nfrank is hungry.\nfrank owns ball.\nbob owns phone.\nfrank is a parent of dave.\nbob owns ball.\nfrank owns car.\ngeorge owns pencil.\ncarol is an enemy of bob.\ngeorge is tall.\ndave owns phone.\n\nQUESTION:\nIs carol owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "owns(frank,book) :- hot.\ncold :- owns(frank,book).\ntall(frank) :- cold, enemy(dave,frank), sunny.\ntall(george) :- hungry(george), parent(dave,bob).\nparent(frank,bob).\nhungry(frank).\nowns(frank,ball).\nowns(bob,phone).\nparent(frank,dave).\nowns(bob,ball).\nowns(frank,car).\nowns(george,pencil).\nenemy(carol,bob).\ntall(george).\nowns(dave,phone).",
    "natural language": "You are given the following rules:\nIf it is hot, then frank owns book.\nIf frank owns book, then it is cold.\nIf it is cold and dave is an enemy of frank and it is sunny, then frank is tall.\nIf george is hungry and dave is a parent of bob, then george is tall.\n\nAnd the following facts:\nit is hot.\nfrank is a parent of bob.\nfrank is hungry.\nfrank owns ball.\nbob owns phone.\nfrank is a parent of dave.\nbob owns ball.\nfrank owns car.\ngeorge owns pencil.\ncarol is an enemy of bob.\ngeorge is tall.\ndave owns phone.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould it is hot be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(frank,ball).",
    "c": "owns(frank,book) :- hot.\ncold :- owns(frank,book).\ntall(frank) :- cold, enemy(dave,frank), sunny.\ntall(george) :- hungry(george), parent(dave,bob).\nhot.\nparent(frank,bob).\nhungry(frank).\nowns(bob,phone).\nparent(frank,dave).\nowns(bob,ball).\nowns(frank,car).\nowns(george,pencil).\nenemy(carol,bob).\ntall(george).\nowns(dave,phone).",
    "natural language": "You are given the following rules:\nIf it is hot, then frank owns book.\nIf frank owns book, then it is cold.\nIf it is cold and dave is an enemy of frank and it is sunny, then frank is tall.\nIf george is hungry and dave is a parent of bob, then george is tall.\n\nAnd the following facts:\nit is hot.\nfrank is a parent of bob.\nfrank is hungry.\nfrank owns ball.\nbob owns phone.\nfrank is a parent of dave.\nbob owns ball.\nfrank owns car.\ngeorge owns pencil.\ncarol is an enemy of bob.\ngeorge is tall.\ndave owns phone.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould frank owns ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(frank,bob).",
    "c": "owns(frank,book) :- hot.\ncold :- owns(frank,book).\ntall(frank) :- cold, enemy(dave,frank), sunny.\ntall(george) :- hungry(george), parent(dave,bob).\nhot.\nhungry(frank).\nowns(frank,ball).\nowns(bob,phone).\nparent(frank,dave).\nowns(bob,ball).\nowns(frank,car).\nowns(george,pencil).\nenemy(carol,bob).\ntall(george).\nowns(dave,phone).",
    "natural language": "You are given the following rules:\nIf it is hot, then frank owns book.\nIf frank owns book, then it is cold.\nIf it is cold and dave is an enemy of frank and it is sunny, then frank is tall.\nIf george is hungry and dave is a parent of bob, then george is tall.\n\nAnd the following facts:\nit is hot.\nfrank is a parent of bob.\nfrank is hungry.\nfrank owns ball.\nbob owns phone.\nfrank is a parent of dave.\nbob owns ball.\nfrank owns car.\ngeorge owns pencil.\ncarol is an enemy of bob.\ngeorge is tall.\ndave owns phone.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould frank is a parent of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(frank,bob).",
    "c": "big(ball) :- sunny.\nhungry(george) :- big(ball).\nsmall(phone) :- friend(george,dave), friend(alice,carol).\nparent(alice,bob) :- friend(george,george), enemy(alice,bob), hungry(eve).\nsunny.\nenemy(eve,dave).\nfriend(eve,bob).\nparent(eve,carol).\nenemy(frank,bob).\nenemy(bob,george).\nparent(frank,alice).\nparent(dave,frank).\nfriend(george,eve).\nparent(eve,frank).\nenemy(carol,frank).\nbig(book).",
    "natural language": "You are given the following information:\nIf it is sunny, then ball is big.\nIf ball is big, then george is hungry.\nIf george is a friend of dave and alice is a friend of carol, then phone is small.\nIf george is a friend of george and alice is an enemy of bob and eve is hungry, then alice is a parent of bob.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of dave.\neve is a friend of bob.\neve is a parent of carol.\nfrank is an enemy of bob.\nbob is an enemy of george.\nfrank is a parent of alice.\ndave is a parent of frank.\ngeorge is a friend of eve.\neve is a parent of frank.\ncarol is an enemy of frank.\nbook is big.\n\nQUESTION:\nIs frank is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "big(ball) :- sunny.\nhungry(george) :- big(ball).\nsmall(phone) :- friend(george,dave), friend(alice,carol).\nparent(alice,bob) :- friend(george,george), enemy(alice,bob), hungry(eve).\nsunny.\nenemy(eve,dave).\nfriend(eve,bob).\nparent(eve,carol).\nenemy(frank,bob).\nenemy(bob,george).\nparent(frank,alice).\nparent(dave,frank).\nfriend(george,eve).\nparent(eve,frank).\nenemy(carol,frank).\nbig(book).",
    "natural language": "You are given the following information:\nIf it is sunny, then ball is big.\nIf ball is big, then george is hungry.\nIf george is a friend of dave and alice is a friend of carol, then phone is small.\nIf george is a friend of george and alice is an enemy of bob and eve is hungry, then alice is a parent of bob.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of dave.\neve is a friend of bob.\neve is a parent of carol.\nfrank is an enemy of bob.\nbob is an enemy of george.\nfrank is a parent of alice.\ndave is a parent of frank.\ngeorge is a friend of eve.\neve is a parent of frank.\ncarol is an enemy of frank.\nbook is big.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "big(ball) :- sunny.\nhungry(george) :- big(ball).\nsmall(phone) :- friend(george,dave), friend(alice,carol).\nparent(alice,bob) :- friend(george,george), enemy(alice,bob), hungry(eve).\nsunny.\nenemy(eve,dave).\nfriend(eve,bob).\nparent(eve,carol).\nenemy(frank,bob).\nenemy(bob,george).\nparent(frank,alice).\nparent(dave,frank).\nfriend(george,eve).\nparent(eve,frank).\nenemy(carol,frank).\nbig(book).",
    "natural language": "You are given the following information:\nIf it is sunny, then ball is big.\nIf ball is big, then george is hungry.\nIf george is a friend of dave and alice is a friend of carol, then phone is small.\nIf george is a friend of george and alice is an enemy of bob and eve is hungry, then alice is a parent of bob.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of dave.\neve is a friend of bob.\neve is a parent of carol.\nfrank is an enemy of bob.\nbob is an enemy of george.\nfrank is a parent of alice.\ndave is a parent of frank.\ngeorge is a friend of eve.\neve is a parent of frank.\ncarol is an enemy of frank.\nbook is big.\n\nQUESTION:\nIs frank is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,alice).",
    "c": "big(ball) :- sunny.\nhungry(george) :- big(ball).\nsmall(phone) :- friend(george,dave), friend(alice,carol).\nparent(alice,bob) :- friend(george,george), enemy(alice,bob), hungry(eve).\nsunny.\nenemy(eve,dave).\nfriend(eve,bob).\nparent(eve,carol).\nenemy(frank,bob).\nenemy(bob,george).\nparent(frank,alice).\nparent(dave,frank).\nfriend(george,eve).\nparent(eve,frank).\nenemy(carol,frank).\nbig(book).",
    "natural language": "You are given the following information:\nIf it is sunny, then ball is big.\nIf ball is big, then george is hungry.\nIf george is a friend of dave and alice is a friend of carol, then phone is small.\nIf george is a friend of george and alice is an enemy of bob and eve is hungry, then alice is a parent of bob.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of dave.\neve is a friend of bob.\neve is a parent of carol.\nfrank is an enemy of bob.\nbob is an enemy of george.\nfrank is a parent of alice.\ndave is a parent of frank.\ngeorge is a friend of eve.\neve is a parent of frank.\ncarol is an enemy of frank.\nbook is big.\n\nQUESTION:\nIs bob is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "big(ball) :- sunny.\nhungry(george) :- big(ball).\nsmall(phone) :- friend(george,dave), friend(alice,carol).\nparent(alice,bob) :- friend(george,george), enemy(alice,bob), hungry(eve).\nsunny.\nenemy(eve,dave).\nfriend(eve,bob).\nparent(eve,carol).\nenemy(frank,bob).\nenemy(bob,george).\nparent(frank,alice).\nparent(dave,frank).\nfriend(george,eve).\nparent(eve,frank).\nenemy(carol,frank).\nbig(book).",
    "natural language": "You are given the following information:\nIf it is sunny, then ball is big.\nIf ball is big, then george is hungry.\nIf george is a friend of dave and alice is a friend of carol, then phone is small.\nIf george is a friend of george and alice is an enemy of bob and eve is hungry, then alice is a parent of bob.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of dave.\neve is a friend of bob.\neve is a parent of carol.\nfrank is an enemy of bob.\nbob is an enemy of george.\nfrank is a parent of alice.\ndave is a parent of frank.\ngeorge is a friend of eve.\neve is a parent of frank.\ncarol is an enemy of frank.\nbook is big.\n\nQUESTION:\nIs frank is a parent of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "big(ball) :- sunny.\nhungry(george) :- big(ball).\nsmall(phone) :- friend(george,dave), friend(alice,carol).\nparent(alice,bob) :- friend(george,george), enemy(alice,bob), hungry(eve).\nenemy(eve,dave).\nfriend(eve,bob).\nparent(eve,carol).\nenemy(frank,bob).\nenemy(bob,george).\nparent(frank,alice).\nparent(dave,frank).\nfriend(george,eve).\nparent(eve,frank).\nenemy(carol,frank).\nbig(book).",
    "natural language": "You are given the following rules:\nIf it is sunny, then ball is big.\nIf ball is big, then george is hungry.\nIf george is a friend of dave and alice is a friend of carol, then phone is small.\nIf george is a friend of george and alice is an enemy of bob and eve is hungry, then alice is a parent of bob.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of dave.\neve is a friend of bob.\neve is a parent of carol.\nfrank is an enemy of bob.\nbob is an enemy of george.\nfrank is a parent of alice.\ndave is a parent of frank.\ngeorge is a friend of eve.\neve is a parent of frank.\ncarol is an enemy of frank.\nbook is big.\n\nOBSERVATION: george is hungry is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "big(ball) :- sunny.\nhungry(george) :- big(ball).\nsmall(phone) :- friend(george,dave), friend(alice,carol).\nparent(alice,bob) :- friend(george,george), enemy(alice,bob), hungry(eve).\nsunny.\nenemy(eve,dave).\nfriend(eve,bob).\nparent(eve,carol).\nenemy(frank,bob).\nenemy(bob,george).\nparent(dave,frank).\nfriend(george,eve).\nparent(eve,frank).\nenemy(carol,frank).\nbig(book).",
    "natural language": "You are given the following rules:\nIf it is sunny, then ball is big.\nIf ball is big, then george is hungry.\nIf george is a friend of dave and alice is a friend of carol, then phone is small.\nIf george is a friend of george and alice is an enemy of bob and eve is hungry, then alice is a parent of bob.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of dave.\neve is a friend of bob.\neve is a parent of carol.\nfrank is an enemy of bob.\nbob is an enemy of george.\nfrank is a parent of alice.\ndave is a parent of frank.\ngeorge is a friend of eve.\neve is a parent of frank.\ncarol is an enemy of frank.\nbook is big.\n\nOBSERVATION: george is hungry is true.\n\nQUESTION:\nCould frank is a parent of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(eve,bob).",
    "c": "big(ball) :- sunny.\nhungry(george) :- big(ball).\nsmall(phone) :- friend(george,dave), friend(alice,carol).\nparent(alice,bob) :- friend(george,george), enemy(alice,bob), hungry(eve).\nsunny.\nenemy(eve,dave).\nparent(eve,carol).\nenemy(frank,bob).\nenemy(bob,george).\nparent(frank,alice).\nparent(dave,frank).\nfriend(george,eve).\nparent(eve,frank).\nenemy(carol,frank).\nbig(book).",
    "natural language": "You are given the following rules:\nIf it is sunny, then ball is big.\nIf ball is big, then george is hungry.\nIf george is a friend of dave and alice is a friend of carol, then phone is small.\nIf george is a friend of george and alice is an enemy of bob and eve is hungry, then alice is a parent of bob.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of dave.\neve is a friend of bob.\neve is a parent of carol.\nfrank is an enemy of bob.\nbob is an enemy of george.\nfrank is a parent of alice.\ndave is a parent of frank.\ngeorge is a friend of eve.\neve is a parent of frank.\ncarol is an enemy of frank.\nbook is big.\n\nOBSERVATION: george is hungry is true.\n\nQUESTION:\nCould eve is a friend of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(frank,george).",
    "c": "sibling(george,eve) :- small(ball).\nparent(frank,bob) :- sibling(george,eve).\nparent(dave,frank) :- parent(frank,bob).\nsad(bob) :- parent(dave,frank).\nsmall(ball).\nparent(eve,dave).\nsibling(alice,bob).\nparent(frank,bob).\nparent(eve,carol).\nsibling(frank,eve).\nparent(dave,bob).\nsibling(eve,carol).\nparent(george,eve).\nsad(george).\nsibling(frank,george).\nsmall(book).",
    "natural language": "You are given the following information:\nIf ball is small, then george is a sibling of eve.\nIf george is a sibling of eve, then frank is a parent of bob.\nIf frank is a parent of bob, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is sad.\n\nAnd the following facts:\nball is small.\neve is a parent of dave.\nalice is a sibling of bob.\nfrank is a parent of bob.\neve is a parent of carol.\nfrank is a sibling of eve.\ndave is a parent of bob.\neve is a sibling of carol.\ngeorge is a parent of eve.\ngeorge is sad.\nfrank is a sibling of george.\nbook is small.\n\nQUESTION:\nIs frank is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(book).",
    "c": "sibling(george,eve) :- small(ball).\nparent(frank,bob) :- sibling(george,eve).\nparent(dave,frank) :- parent(frank,bob).\nsad(bob) :- parent(dave,frank).\nsmall(ball).\nparent(eve,dave).\nsibling(alice,bob).\nparent(frank,bob).\nparent(eve,carol).\nsibling(frank,eve).\nparent(dave,bob).\nsibling(eve,carol).\nparent(george,eve).\nsad(george).\nsibling(frank,george).\nsmall(book).",
    "natural language": "You are given the following information:\nIf ball is small, then george is a sibling of eve.\nIf george is a sibling of eve, then frank is a parent of bob.\nIf frank is a parent of bob, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is sad.\n\nAnd the following facts:\nball is small.\neve is a parent of dave.\nalice is a sibling of bob.\nfrank is a parent of bob.\neve is a parent of carol.\nfrank is a sibling of eve.\ndave is a parent of bob.\neve is a sibling of carol.\ngeorge is a parent of eve.\ngeorge is sad.\nfrank is a sibling of george.\nbook is small.\n\nQUESTION:\nIs book is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,carol).",
    "c": "sibling(george,eve) :- small(ball).\nparent(frank,bob) :- sibling(george,eve).\nparent(dave,frank) :- parent(frank,bob).\nsad(bob) :- parent(dave,frank).\nsmall(ball).\nparent(eve,dave).\nsibling(alice,bob).\nparent(frank,bob).\nparent(eve,carol).\nsibling(frank,eve).\nparent(dave,bob).\nsibling(eve,carol).\nparent(george,eve).\nsad(george).\nsibling(frank,george).\nsmall(book).",
    "natural language": "You are given the following information:\nIf ball is small, then george is a sibling of eve.\nIf george is a sibling of eve, then frank is a parent of bob.\nIf frank is a parent of bob, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is sad.\n\nAnd the following facts:\nball is small.\neve is a parent of dave.\nalice is a sibling of bob.\nfrank is a parent of bob.\neve is a parent of carol.\nfrank is a sibling of eve.\ndave is a parent of bob.\neve is a sibling of carol.\ngeorge is a parent of eve.\ngeorge is sad.\nfrank is a sibling of george.\nbook is small.\n\nQUESTION:\nIs eve is a parent of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,carol).",
    "c": "sibling(george,eve) :- small(ball).\nparent(frank,bob) :- sibling(george,eve).\nparent(dave,frank) :- parent(frank,bob).\nsad(bob) :- parent(dave,frank).\nsmall(ball).\nparent(eve,dave).\nsibling(alice,bob).\nparent(frank,bob).\nparent(eve,carol).\nsibling(frank,eve).\nparent(dave,bob).\nsibling(eve,carol).\nparent(george,eve).\nsad(george).\nsibling(frank,george).\nsmall(book).",
    "natural language": "You are given the following information:\nIf ball is small, then george is a sibling of eve.\nIf george is a sibling of eve, then frank is a parent of bob.\nIf frank is a parent of bob, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is sad.\n\nAnd the following facts:\nball is small.\neve is a parent of dave.\nalice is a sibling of bob.\nfrank is a parent of bob.\neve is a parent of carol.\nfrank is a sibling of eve.\ndave is a parent of bob.\neve is a sibling of carol.\ngeorge is a parent of eve.\ngeorge is sad.\nfrank is a sibling of george.\nbook is small.\n\nQUESTION:\nIs dave is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,carol).",
    "c": "sibling(george,eve) :- small(ball).\nparent(frank,bob) :- sibling(george,eve).\nparent(dave,frank) :- parent(frank,bob).\nsad(bob) :- parent(dave,frank).\nsmall(ball).\nparent(eve,dave).\nsibling(alice,bob).\nparent(frank,bob).\nparent(eve,carol).\nsibling(frank,eve).\nparent(dave,bob).\nsibling(eve,carol).\nparent(george,eve).\nsad(george).\nsibling(frank,george).\nsmall(book).",
    "natural language": "You are given the following information:\nIf ball is small, then george is a sibling of eve.\nIf george is a sibling of eve, then frank is a parent of bob.\nIf frank is a parent of bob, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is sad.\n\nAnd the following facts:\nball is small.\neve is a parent of dave.\nalice is a sibling of bob.\nfrank is a parent of bob.\neve is a parent of carol.\nfrank is a sibling of eve.\ndave is a parent of bob.\neve is a sibling of carol.\ngeorge is a parent of eve.\ngeorge is sad.\nfrank is a sibling of george.\nbook is small.\n\nQUESTION:\nIs bob is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,bob).",
    "c": "sibling(george,eve) :- small(ball).\nparent(frank,bob) :- sibling(george,eve).\nparent(dave,frank) :- parent(frank,bob).\nsad(bob) :- parent(dave,frank).\nsmall(ball).\nparent(eve,dave).\nsibling(alice,bob).\nparent(eve,carol).\nsibling(frank,eve).\nparent(dave,bob).\nsibling(eve,carol).\nparent(george,eve).\nsad(george).\nsibling(frank,george).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf ball is small, then george is a sibling of eve.\nIf george is a sibling of eve, then frank is a parent of bob.\nIf frank is a parent of bob, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is sad.\n\nAnd the following facts:\nball is small.\neve is a parent of dave.\nalice is a sibling of bob.\nfrank is a parent of bob.\neve is a parent of carol.\nfrank is a sibling of eve.\ndave is a parent of bob.\neve is a sibling of carol.\ngeorge is a parent of eve.\ngeorge is sad.\nfrank is a sibling of george.\nbook is small.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould frank is a parent of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(frank,eve).",
    "c": "sibling(george,eve) :- small(ball).\nparent(frank,bob) :- sibling(george,eve).\nparent(dave,frank) :- parent(frank,bob).\nsad(bob) :- parent(dave,frank).\nsmall(ball).\nparent(eve,dave).\nsibling(alice,bob).\nparent(frank,bob).\nparent(eve,carol).\nparent(dave,bob).\nsibling(eve,carol).\nparent(george,eve).\nsad(george).\nsibling(frank,george).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf ball is small, then george is a sibling of eve.\nIf george is a sibling of eve, then frank is a parent of bob.\nIf frank is a parent of bob, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is sad.\n\nAnd the following facts:\nball is small.\neve is a parent of dave.\nalice is a sibling of bob.\nfrank is a parent of bob.\neve is a parent of carol.\nfrank is a sibling of eve.\ndave is a parent of bob.\neve is a sibling of carol.\ngeorge is a parent of eve.\ngeorge is sad.\nfrank is a sibling of george.\nbook is small.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould frank is a sibling of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "sibling(george,eve) :- small(ball).\nparent(frank,bob) :- sibling(george,eve).\nparent(dave,frank) :- parent(frank,bob).\nsad(bob) :- parent(dave,frank).\nsmall(ball).\nsibling(alice,bob).\nparent(frank,bob).\nparent(eve,carol).\nsibling(frank,eve).\nparent(dave,bob).\nsibling(eve,carol).\nparent(george,eve).\nsad(george).\nsibling(frank,george).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf ball is small, then george is a sibling of eve.\nIf george is a sibling of eve, then frank is a parent of bob.\nIf frank is a parent of bob, then dave is a parent of frank.\nIf dave is a parent of frank, then bob is sad.\n\nAnd the following facts:\nball is small.\neve is a parent of dave.\nalice is a sibling of bob.\nfrank is a parent of bob.\neve is a parent of carol.\nfrank is a sibling of eve.\ndave is a parent of bob.\neve is a sibling of carol.\ngeorge is a parent of eve.\ngeorge is sad.\nfrank is a sibling of george.\nbook is small.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould eve is a parent of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(carol).",
    "c": "small(pencil) :- hungry(carol).\nbig(phone) :- small(pencil).\nwet(ball) :- big(phone).\nwet(book) :- wet(ball).\nhungry(carol).\nhungry(eve).\nsmall(ball).\nwet(ball).\nbig(car).\nhungry(bob).\nsmall(book).\nhungry(carol).\nbig(ball).\nsmall(phone).\nbig(pencil).\nsmall(apple).",
    "natural language": "You are given the following information:\nIf carol is hungry, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then ball is wet.\nIf ball is wet, then book is wet.\n\nAnd the following facts:\ncarol is hungry.\neve is hungry.\nball is small.\nball is wet.\ncar is big.\nbob is hungry.\nbook is small.\ncarol is hungry.\nball is big.\nphone is small.\npencil is big.\napple is small.\n\nQUESTION:\nIs carol is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "small(pencil) :- hungry(carol).\nbig(phone) :- small(pencil).\nwet(ball) :- big(phone).\nwet(book) :- wet(ball).\nhungry(carol).\nhungry(eve).\nsmall(ball).\nwet(ball).\nbig(car).\nhungry(bob).\nsmall(book).\nhungry(carol).\nbig(ball).\nsmall(phone).\nbig(pencil).\nsmall(apple).",
    "natural language": "You are given the following information:\nIf carol is hungry, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then ball is wet.\nIf ball is wet, then book is wet.\n\nAnd the following facts:\ncarol is hungry.\neve is hungry.\nball is small.\nball is wet.\ncar is big.\nbob is hungry.\nbook is small.\ncarol is hungry.\nball is big.\nphone is small.\npencil is big.\napple is small.\n\nQUESTION:\nIs bob is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(book).",
    "c": "small(pencil) :- hungry(carol).\nbig(phone) :- small(pencil).\nwet(ball) :- big(phone).\nwet(book) :- wet(ball).\nhungry(carol).\nhungry(eve).\nsmall(ball).\nwet(ball).\nbig(car).\nhungry(bob).\nsmall(book).\nhungry(carol).\nbig(ball).\nsmall(phone).\nbig(pencil).\nsmall(apple).",
    "natural language": "You are given the following information:\nIf carol is hungry, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then ball is wet.\nIf ball is wet, then book is wet.\n\nAnd the following facts:\ncarol is hungry.\neve is hungry.\nball is small.\nball is wet.\ncar is big.\nbob is hungry.\nbook is small.\ncarol is hungry.\nball is big.\nphone is small.\npencil is big.\napple is small.\n\nQUESTION:\nIs book is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "small(pencil) :- hungry(carol).\nbig(phone) :- small(pencil).\nwet(ball) :- big(phone).\nwet(book) :- wet(ball).\nhungry(carol).\nhungry(eve).\nsmall(ball).\nwet(ball).\nbig(car).\nhungry(bob).\nsmall(book).\nhungry(carol).\nbig(ball).\nsmall(phone).\nbig(pencil).\nsmall(apple).",
    "natural language": "You are given the following information:\nIf carol is hungry, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then ball is wet.\nIf ball is wet, then book is wet.\n\nAnd the following facts:\ncarol is hungry.\neve is hungry.\nball is small.\nball is wet.\ncar is big.\nbob is hungry.\nbook is small.\ncarol is hungry.\nball is big.\nphone is small.\npencil is big.\napple is small.\n\nQUESTION:\nIs car is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "small(pencil) :- hungry(carol).\nbig(phone) :- small(pencil).\nwet(ball) :- big(phone).\nwet(book) :- wet(ball).\nhungry(carol).\nhungry(eve).\nsmall(ball).\nwet(ball).\nbig(car).\nhungry(bob).\nsmall(book).\nhungry(carol).\nbig(ball).\nsmall(phone).\nbig(pencil).\nsmall(apple).",
    "natural language": "You are given the following information:\nIf carol is hungry, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then ball is wet.\nIf ball is wet, then book is wet.\n\nAnd the following facts:\ncarol is hungry.\neve is hungry.\nball is small.\nball is wet.\ncar is big.\nbob is hungry.\nbook is small.\ncarol is hungry.\nball is big.\nphone is small.\npencil is big.\napple is small.\n\nQUESTION:\nIs frank is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "small(pencil) :- hungry(carol).\nbig(phone) :- small(pencil).\nwet(ball) :- big(phone).\nwet(book) :- wet(ball).\nhungry(carol).\nhungry(eve).\nsmall(ball).\nbig(car).\nhungry(bob).\nsmall(book).\nhungry(carol).\nbig(ball).\nsmall(phone).\nbig(pencil).\nsmall(apple).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then ball is wet.\nIf ball is wet, then book is wet.\n\nAnd the following facts:\ncarol is hungry.\neve is hungry.\nball is small.\nball is wet.\ncar is big.\nbob is hungry.\nbook is small.\ncarol is hungry.\nball is big.\nphone is small.\npencil is big.\napple is small.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould ball is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(phone).",
    "c": "small(pencil) :- hungry(carol).\nbig(phone) :- small(pencil).\nwet(ball) :- big(phone).\nwet(book) :- wet(ball).\nhungry(carol).\nhungry(eve).\nsmall(ball).\nwet(ball).\nbig(car).\nhungry(bob).\nsmall(book).\nhungry(carol).\nbig(ball).\nbig(pencil).\nsmall(apple).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then ball is wet.\nIf ball is wet, then book is wet.\n\nAnd the following facts:\ncarol is hungry.\neve is hungry.\nball is small.\nball is wet.\ncar is big.\nbob is hungry.\nbook is small.\ncarol is hungry.\nball is big.\nphone is small.\npencil is big.\napple is small.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould phone is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(apple).",
    "c": "small(pencil) :- hungry(carol).\nbig(phone) :- small(pencil).\nwet(ball) :- big(phone).\nwet(book) :- wet(ball).\nhungry(carol).\nhungry(eve).\nsmall(ball).\nwet(ball).\nbig(car).\nhungry(bob).\nsmall(book).\nhungry(carol).\nbig(ball).\nsmall(phone).\nbig(pencil).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then ball is wet.\nIf ball is wet, then book is wet.\n\nAnd the following facts:\ncarol is hungry.\neve is hungry.\nball is small.\nball is wet.\ncar is big.\nbob is hungry.\nbook is small.\ncarol is hungry.\nball is big.\nphone is small.\npencil is big.\napple is small.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould apple is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,dave).",
    "c": "friend(alice,carol) :- big(pencil).\ntall(alice) :- friend(alice,carol).\nlikes(dave,george) :- likes(dave,carol), likes(george,george).\nsmall(book) :- happy(dave), owns(dave,apple), big(ball).\nbig(pencil).\nfriend(george,dave).\nfriend(alice,dave).\nlikes(dave,pencil).\nlikes(eve,george).\nlikes(bob,dave).\nowns(eve,car).\nowns(george,ball).\nfriend(frank,bob).\nlikes(dave,frank).\nowns(carol,apple).\nowns(dave,phone).\nfriend(eve,alice).\nlikes(eve,dave).\nlikes(carol,apple).\nlikes(george,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then alice is a friend of carol.\nIf alice is a friend of carol, then alice is tall.\nIf dave likes carol and george likes george, then dave likes george.\nIf dave is happy and dave owns apple and ball is big, then book is small.\n\nAnd the following facts:\npencil is big.\ngeorge is a friend of dave.\nalice is a friend of dave.\ndave likes pencil.\neve likes george.\nbob likes dave.\neve owns car.\ngeorge owns ball.\nfrank is a friend of bob.\ndave likes frank.\ncarol owns apple.\ndave owns phone.\neve is a friend of alice.\neve likes dave.\ncarol likes apple.\ngeorge likes carol.\n\nQUESTION:\nIs eve likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "friend(alice,carol) :- big(pencil).\ntall(alice) :- friend(alice,carol).\nlikes(dave,george) :- likes(dave,carol), likes(george,george).\nsmall(book) :- happy(dave), owns(dave,apple), big(ball).\nbig(pencil).\nfriend(george,dave).\nfriend(alice,dave).\nlikes(dave,pencil).\nlikes(eve,george).\nlikes(bob,dave).\nowns(eve,car).\nowns(george,ball).\nfriend(frank,bob).\nlikes(dave,frank).\nowns(carol,apple).\nowns(dave,phone).\nfriend(eve,alice).\nlikes(eve,dave).\nlikes(carol,apple).\nlikes(george,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then alice is a friend of carol.\nIf alice is a friend of carol, then alice is tall.\nIf dave likes carol and george likes george, then dave likes george.\nIf dave is happy and dave owns apple and ball is big, then book is small.\n\nAnd the following facts:\npencil is big.\ngeorge is a friend of dave.\nalice is a friend of dave.\ndave likes pencil.\neve likes george.\nbob likes dave.\neve owns car.\ngeorge owns ball.\nfrank is a friend of bob.\ndave likes frank.\ncarol owns apple.\ndave owns phone.\neve is a friend of alice.\neve likes dave.\ncarol likes apple.\ngeorge likes carol.\n\nQUESTION:\nIs alice is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "friend(alice,carol) :- big(pencil).\ntall(alice) :- friend(alice,carol).\nlikes(dave,george) :- likes(dave,carol), likes(george,george).\nsmall(book) :- happy(dave), owns(dave,apple), big(ball).\nbig(pencil).\nfriend(george,dave).\nfriend(alice,dave).\nlikes(dave,pencil).\nlikes(eve,george).\nlikes(bob,dave).\nowns(eve,car).\nowns(george,ball).\nfriend(frank,bob).\nlikes(dave,frank).\nowns(carol,apple).\nowns(dave,phone).\nfriend(eve,alice).\nlikes(eve,dave).\nlikes(carol,apple).\nlikes(george,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then alice is a friend of carol.\nIf alice is a friend of carol, then alice is tall.\nIf dave likes carol and george likes george, then dave likes george.\nIf dave is happy and dave owns apple and ball is big, then book is small.\n\nAnd the following facts:\npencil is big.\ngeorge is a friend of dave.\nalice is a friend of dave.\ndave likes pencil.\neve likes george.\nbob likes dave.\neve owns car.\ngeorge owns ball.\nfrank is a friend of bob.\ndave likes frank.\ncarol owns apple.\ndave owns phone.\neve is a friend of alice.\neve likes dave.\ncarol likes apple.\ngeorge likes carol.\n\nQUESTION:\nIs eve is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(book).",
    "c": "friend(alice,carol) :- big(pencil).\ntall(alice) :- friend(alice,carol).\nlikes(dave,george) :- likes(dave,carol), likes(george,george).\nsmall(book) :- happy(dave), owns(dave,apple), big(ball).\nbig(pencil).\nfriend(george,dave).\nfriend(alice,dave).\nlikes(dave,pencil).\nlikes(eve,george).\nlikes(bob,dave).\nowns(eve,car).\nowns(george,ball).\nfriend(frank,bob).\nlikes(dave,frank).\nowns(carol,apple).\nowns(dave,phone).\nfriend(eve,alice).\nlikes(eve,dave).\nlikes(carol,apple).\nlikes(george,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then alice is a friend of carol.\nIf alice is a friend of carol, then alice is tall.\nIf dave likes carol and george likes george, then dave likes george.\nIf dave is happy and dave owns apple and ball is big, then book is small.\n\nAnd the following facts:\npencil is big.\ngeorge is a friend of dave.\nalice is a friend of dave.\ndave likes pencil.\neve likes george.\nbob likes dave.\neve owns car.\ngeorge owns ball.\nfrank is a friend of bob.\ndave likes frank.\ncarol owns apple.\ndave owns phone.\neve is a friend of alice.\neve likes dave.\ncarol likes apple.\ngeorge likes carol.\n\nQUESTION:\nIs book is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,frank).",
    "c": "friend(alice,carol) :- big(pencil).\ntall(alice) :- friend(alice,carol).\nlikes(dave,george) :- likes(dave,carol), likes(george,george).\nsmall(book) :- happy(dave), owns(dave,apple), big(ball).\nbig(pencil).\nfriend(george,dave).\nfriend(alice,dave).\nlikes(dave,pencil).\nlikes(eve,george).\nlikes(bob,dave).\nowns(eve,car).\nowns(george,ball).\nfriend(frank,bob).\nlikes(dave,frank).\nowns(carol,apple).\nowns(dave,phone).\nfriend(eve,alice).\nlikes(eve,dave).\nlikes(carol,apple).\nlikes(george,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then alice is a friend of carol.\nIf alice is a friend of carol, then alice is tall.\nIf dave likes carol and george likes george, then dave likes george.\nIf dave is happy and dave owns apple and ball is big, then book is small.\n\nAnd the following facts:\npencil is big.\ngeorge is a friend of dave.\nalice is a friend of dave.\ndave likes pencil.\neve likes george.\nbob likes dave.\neve owns car.\ngeorge owns ball.\nfrank is a friend of bob.\ndave likes frank.\ncarol owns apple.\ndave owns phone.\neve is a friend of alice.\neve likes dave.\ncarol likes apple.\ngeorge likes carol.\n\nQUESTION:\nIs eve likes frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(pencil).",
    "c": "friend(alice,carol) :- big(pencil).\ntall(alice) :- friend(alice,carol).\nlikes(dave,george) :- likes(dave,carol), likes(george,george).\nsmall(book) :- happy(dave), owns(dave,apple), big(ball).\nfriend(george,dave).\nfriend(alice,dave).\nlikes(dave,pencil).\nlikes(eve,george).\nlikes(bob,dave).\nowns(eve,car).\nowns(george,ball).\nfriend(frank,bob).\nlikes(dave,frank).\nowns(carol,apple).\nowns(dave,phone).\nfriend(eve,alice).\nlikes(eve,dave).\nlikes(carol,apple).\nlikes(george,carol).",
    "natural language": "You are given the following rules:\nIf pencil is big, then alice is a friend of carol.\nIf alice is a friend of carol, then alice is tall.\nIf dave likes carol and george likes george, then dave likes george.\nIf dave is happy and dave owns apple and ball is big, then book is small.\n\nAnd the following facts:\npencil is big.\ngeorge is a friend of dave.\nalice is a friend of dave.\ndave likes pencil.\neve likes george.\nbob likes dave.\neve owns car.\ngeorge owns ball.\nfrank is a friend of bob.\ndave likes frank.\ncarol owns apple.\ndave owns phone.\neve is a friend of alice.\neve likes dave.\ncarol likes apple.\ngeorge likes carol.\n\nOBSERVATION: alice is tall is true.\n\nQUESTION:\nCould pencil is big be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,phone).",
    "c": "friend(alice,carol) :- big(pencil).\ntall(alice) :- friend(alice,carol).\nlikes(dave,george) :- likes(dave,carol), likes(george,george).\nsmall(book) :- happy(dave), owns(dave,apple), big(ball).\nbig(pencil).\nfriend(george,dave).\nfriend(alice,dave).\nlikes(dave,pencil).\nlikes(eve,george).\nlikes(bob,dave).\nowns(eve,car).\nowns(george,ball).\nfriend(frank,bob).\nlikes(dave,frank).\nowns(carol,apple).\nfriend(eve,alice).\nlikes(eve,dave).\nlikes(carol,apple).\nlikes(george,carol).",
    "natural language": "You are given the following rules:\nIf pencil is big, then alice is a friend of carol.\nIf alice is a friend of carol, then alice is tall.\nIf dave likes carol and george likes george, then dave likes george.\nIf dave is happy and dave owns apple and ball is big, then book is small.\n\nAnd the following facts:\npencil is big.\ngeorge is a friend of dave.\nalice is a friend of dave.\ndave likes pencil.\neve likes george.\nbob likes dave.\neve owns car.\ngeorge owns ball.\nfrank is a friend of bob.\ndave likes frank.\ncarol owns apple.\ndave owns phone.\neve is a friend of alice.\neve likes dave.\ncarol likes apple.\ngeorge likes carol.\n\nOBSERVATION: alice is tall is true.\n\nQUESTION:\nCould dave owns phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "friend(alice,carol) :- big(pencil).\ntall(alice) :- friend(alice,carol).\nlikes(dave,george) :- likes(dave,carol), likes(george,george).\nsmall(book) :- happy(dave), owns(dave,apple), big(ball).\nbig(pencil).\nfriend(alice,dave).\nlikes(dave,pencil).\nlikes(eve,george).\nlikes(bob,dave).\nowns(eve,car).\nowns(george,ball).\nfriend(frank,bob).\nlikes(dave,frank).\nowns(carol,apple).\nowns(dave,phone).\nfriend(eve,alice).\nlikes(eve,dave).\nlikes(carol,apple).\nlikes(george,carol).",
    "natural language": "You are given the following rules:\nIf pencil is big, then alice is a friend of carol.\nIf alice is a friend of carol, then alice is tall.\nIf dave likes carol and george likes george, then dave likes george.\nIf dave is happy and dave owns apple and ball is big, then book is small.\n\nAnd the following facts:\npencil is big.\ngeorge is a friend of dave.\nalice is a friend of dave.\ndave likes pencil.\neve likes george.\nbob likes dave.\neve owns car.\ngeorge owns ball.\nfrank is a friend of bob.\ndave likes frank.\ncarol owns apple.\ndave owns phone.\neve is a friend of alice.\neve likes dave.\ncarol likes apple.\ngeorge likes carol.\n\nOBSERVATION: alice is tall is true.\n\nQUESTION:\nCould george is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,eve).",
    "c": "small(car) :- sibling(bob,carol).\ncold :- small(car).\nfriend(bob,george) :- hot, likes(alice,dave), happy(alice).\nfriend(bob,eve) :- parent(george,frank), happy(eve).\nsibling(bob,carol).\nfriend(frank,george).\nfriend(dave,carol).\nfriend(alice,carol).\nhappy(carol).\nsibling(dave,frank).\nlikes(alice,car).\nlikes(eve,george).\nsibling(frank,george).\nsibling(george,eve).\nsibling(dave,eve).\nlikes(dave,frank).\nparent(george,dave).\nfriend(george,eve).\nsibling(carol,bob).\nsibling(george,carol).",
    "natural language": "You are given the following information:\nIf bob is a sibling of carol, then car is small.\nIf car is small, then it is cold.\nIf it is hot and alice likes dave and alice is happy, then bob is a friend of george.\nIf george is a parent of frank and eve is happy, then bob is a friend of eve.\n\nAnd the following facts:\nbob is a sibling of carol.\nfrank is a friend of george.\ndave is a friend of carol.\nalice is a friend of carol.\ncarol is happy.\ndave is a sibling of frank.\nalice likes car.\neve likes george.\nfrank is a sibling of george.\ngeorge is a sibling of eve.\ndave is a sibling of eve.\ndave likes frank.\ngeorge is a parent of dave.\ngeorge is a friend of eve.\ncarol is a sibling of bob.\ngeorge is a sibling of carol.\n\nQUESTION:\nIs dave is a sibling of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,carol).",
    "c": "small(car) :- sibling(bob,carol).\ncold :- small(car).\nfriend(bob,george) :- hot, likes(alice,dave), happy(alice).\nfriend(bob,eve) :- parent(george,frank), happy(eve).\nsibling(bob,carol).\nfriend(frank,george).\nfriend(dave,carol).\nfriend(alice,carol).\nhappy(carol).\nsibling(dave,frank).\nlikes(alice,car).\nlikes(eve,george).\nsibling(frank,george).\nsibling(george,eve).\nsibling(dave,eve).\nlikes(dave,frank).\nparent(george,dave).\nfriend(george,eve).\nsibling(carol,bob).\nsibling(george,carol).",
    "natural language": "You are given the following information:\nIf bob is a sibling of carol, then car is small.\nIf car is small, then it is cold.\nIf it is hot and alice likes dave and alice is happy, then bob is a friend of george.\nIf george is a parent of frank and eve is happy, then bob is a friend of eve.\n\nAnd the following facts:\nbob is a sibling of carol.\nfrank is a friend of george.\ndave is a friend of carol.\nalice is a friend of carol.\ncarol is happy.\ndave is a sibling of frank.\nalice likes car.\neve likes george.\nfrank is a sibling of george.\ngeorge is a sibling of eve.\ndave is a sibling of eve.\ndave likes frank.\ngeorge is a parent of dave.\ngeorge is a friend of eve.\ncarol is a sibling of bob.\ngeorge is a sibling of carol.\n\nQUESTION:\nIs bob is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,george).",
    "c": "small(car) :- sibling(bob,carol).\ncold :- small(car).\nfriend(bob,george) :- hot, likes(alice,dave), happy(alice).\nfriend(bob,eve) :- parent(george,frank), happy(eve).\nsibling(bob,carol).\nfriend(frank,george).\nfriend(dave,carol).\nfriend(alice,carol).\nhappy(carol).\nsibling(dave,frank).\nlikes(alice,car).\nlikes(eve,george).\nsibling(frank,george).\nsibling(george,eve).\nsibling(dave,eve).\nlikes(dave,frank).\nparent(george,dave).\nfriend(george,eve).\nsibling(carol,bob).\nsibling(george,carol).",
    "natural language": "You are given the following information:\nIf bob is a sibling of carol, then car is small.\nIf car is small, then it is cold.\nIf it is hot and alice likes dave and alice is happy, then bob is a friend of george.\nIf george is a parent of frank and eve is happy, then bob is a friend of eve.\n\nAnd the following facts:\nbob is a sibling of carol.\nfrank is a friend of george.\ndave is a friend of carol.\nalice is a friend of carol.\ncarol is happy.\ndave is a sibling of frank.\nalice likes car.\neve likes george.\nfrank is a sibling of george.\ngeorge is a sibling of eve.\ndave is a sibling of eve.\ndave likes frank.\ngeorge is a parent of dave.\ngeorge is a friend of eve.\ncarol is a sibling of bob.\ngeorge is a sibling of carol.\n\nQUESTION:\nIs frank is a friend of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "small(car) :- sibling(bob,carol).\ncold :- small(car).\nfriend(bob,george) :- hot, likes(alice,dave), happy(alice).\nfriend(bob,eve) :- parent(george,frank), happy(eve).\nsibling(bob,carol).\nfriend(frank,george).\nfriend(dave,carol).\nfriend(alice,carol).\nhappy(carol).\nsibling(dave,frank).\nlikes(alice,car).\nlikes(eve,george).\nsibling(frank,george).\nsibling(george,eve).\nsibling(dave,eve).\nlikes(dave,frank).\nparent(george,dave).\nfriend(george,eve).\nsibling(carol,bob).\nsibling(george,carol).",
    "natural language": "You are given the following information:\nIf bob is a sibling of carol, then car is small.\nIf car is small, then it is cold.\nIf it is hot and alice likes dave and alice is happy, then bob is a friend of george.\nIf george is a parent of frank and eve is happy, then bob is a friend of eve.\n\nAnd the following facts:\nbob is a sibling of carol.\nfrank is a friend of george.\ndave is a friend of carol.\nalice is a friend of carol.\ncarol is happy.\ndave is a sibling of frank.\nalice likes car.\neve likes george.\nfrank is a sibling of george.\ngeorge is a sibling of eve.\ndave is a sibling of eve.\ndave likes frank.\ngeorge is a parent of dave.\ngeorge is a friend of eve.\ncarol is a sibling of bob.\ngeorge is a sibling of carol.\n\nQUESTION:\nIs alice is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,george).",
    "c": "small(car) :- sibling(bob,carol).\ncold :- small(car).\nfriend(bob,george) :- hot, likes(alice,dave), happy(alice).\nfriend(bob,eve) :- parent(george,frank), happy(eve).\nsibling(bob,carol).\nfriend(frank,george).\nfriend(dave,carol).\nfriend(alice,carol).\nhappy(carol).\nsibling(dave,frank).\nlikes(alice,car).\nlikes(eve,george).\nsibling(frank,george).\nsibling(george,eve).\nsibling(dave,eve).\nlikes(dave,frank).\nparent(george,dave).\nfriend(george,eve).\nsibling(carol,bob).\nsibling(george,carol).",
    "natural language": "You are given the following information:\nIf bob is a sibling of carol, then car is small.\nIf car is small, then it is cold.\nIf it is hot and alice likes dave and alice is happy, then bob is a friend of george.\nIf george is a parent of frank and eve is happy, then bob is a friend of eve.\n\nAnd the following facts:\nbob is a sibling of carol.\nfrank is a friend of george.\ndave is a friend of carol.\nalice is a friend of carol.\ncarol is happy.\ndave is a sibling of frank.\nalice likes car.\neve likes george.\nfrank is a sibling of george.\ngeorge is a sibling of eve.\ndave is a sibling of eve.\ndave likes frank.\ngeorge is a parent of dave.\ngeorge is a friend of eve.\ncarol is a sibling of bob.\ngeorge is a sibling of carol.\n\nQUESTION:\nIs bob is a friend of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,carol).",
    "c": "small(car) :- sibling(bob,carol).\ncold :- small(car).\nfriend(bob,george) :- hot, likes(alice,dave), happy(alice).\nfriend(bob,eve) :- parent(george,frank), happy(eve).\nfriend(frank,george).\nfriend(dave,carol).\nfriend(alice,carol).\nhappy(carol).\nsibling(dave,frank).\nlikes(alice,car).\nlikes(eve,george).\nsibling(frank,george).\nsibling(george,eve).\nsibling(dave,eve).\nlikes(dave,frank).\nparent(george,dave).\nfriend(george,eve).\nsibling(carol,bob).\nsibling(george,carol).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of carol, then car is small.\nIf car is small, then it is cold.\nIf it is hot and alice likes dave and alice is happy, then bob is a friend of george.\nIf george is a parent of frank and eve is happy, then bob is a friend of eve.\n\nAnd the following facts:\nbob is a sibling of carol.\nfrank is a friend of george.\ndave is a friend of carol.\nalice is a friend of carol.\ncarol is happy.\ndave is a sibling of frank.\nalice likes car.\neve likes george.\nfrank is a sibling of george.\ngeorge is a sibling of eve.\ndave is a sibling of eve.\ndave likes frank.\ngeorge is a parent of dave.\ngeorge is a friend of eve.\ncarol is a sibling of bob.\ngeorge is a sibling of carol.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould bob is a sibling of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(carol).",
    "c": "small(car) :- sibling(bob,carol).\ncold :- small(car).\nfriend(bob,george) :- hot, likes(alice,dave), happy(alice).\nfriend(bob,eve) :- parent(george,frank), happy(eve).\nsibling(bob,carol).\nfriend(frank,george).\nfriend(dave,carol).\nfriend(alice,carol).\nsibling(dave,frank).\nlikes(alice,car).\nlikes(eve,george).\nsibling(frank,george).\nsibling(george,eve).\nsibling(dave,eve).\nlikes(dave,frank).\nparent(george,dave).\nfriend(george,eve).\nsibling(carol,bob).\nsibling(george,carol).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of carol, then car is small.\nIf car is small, then it is cold.\nIf it is hot and alice likes dave and alice is happy, then bob is a friend of george.\nIf george is a parent of frank and eve is happy, then bob is a friend of eve.\n\nAnd the following facts:\nbob is a sibling of carol.\nfrank is a friend of george.\ndave is a friend of carol.\nalice is a friend of carol.\ncarol is happy.\ndave is a sibling of frank.\nalice likes car.\neve likes george.\nfrank is a sibling of george.\ngeorge is a sibling of eve.\ndave is a sibling of eve.\ndave likes frank.\ngeorge is a parent of dave.\ngeorge is a friend of eve.\ncarol is a sibling of bob.\ngeorge is a sibling of carol.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould carol is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(dave,carol).",
    "c": "small(car) :- sibling(bob,carol).\ncold :- small(car).\nfriend(bob,george) :- hot, likes(alice,dave), happy(alice).\nfriend(bob,eve) :- parent(george,frank), happy(eve).\nsibling(bob,carol).\nfriend(frank,george).\nfriend(alice,carol).\nhappy(carol).\nsibling(dave,frank).\nlikes(alice,car).\nlikes(eve,george).\nsibling(frank,george).\nsibling(george,eve).\nsibling(dave,eve).\nlikes(dave,frank).\nparent(george,dave).\nfriend(george,eve).\nsibling(carol,bob).\nsibling(george,carol).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of carol, then car is small.\nIf car is small, then it is cold.\nIf it is hot and alice likes dave and alice is happy, then bob is a friend of george.\nIf george is a parent of frank and eve is happy, then bob is a friend of eve.\n\nAnd the following facts:\nbob is a sibling of carol.\nfrank is a friend of george.\ndave is a friend of carol.\nalice is a friend of carol.\ncarol is happy.\ndave is a sibling of frank.\nalice likes car.\neve likes george.\nfrank is a sibling of george.\ngeorge is a sibling of eve.\ndave is a sibling of eve.\ndave likes frank.\ngeorge is a parent of dave.\ngeorge is a friend of eve.\ncarol is a sibling of bob.\ngeorge is a sibling of carol.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould dave is a friend of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,alice).",
    "c": "hungry(alice) :- tall(frank).\nsmall(ball) :- hungry(alice).\nparent(carol,frank) :- small(ball).\nlikes(eve,dave) :- parent(carol,frank).\ntall(frank).\nhungry(bob).\nhungry(dave).\nlikes(bob,apple).\nparent(eve,alice).\nparent(george,frank).\nlikes(frank,eve).\nparent(eve,dave).\nparent(bob,george).\nlikes(eve,car).\nparent(alice,dave).\nlikes(george,eve).\ntall(alice).\nlikes(george,pencil).\nlikes(dave,frank).\ntall(dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then carol is a parent of frank.\nIf carol is a parent of frank, then eve likes dave.\n\nAnd the following facts:\nfrank is tall.\nbob is hungry.\ndave is hungry.\nbob likes apple.\neve is a parent of alice.\ngeorge is a parent of frank.\nfrank likes eve.\neve is a parent of dave.\nbob is a parent of george.\neve likes car.\nalice is a parent of dave.\ngeorge likes eve.\nalice is tall.\ngeorge likes pencil.\ndave likes frank.\ndave is tall.\n\nQUESTION:\nIs eve is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(dave).",
    "c": "hungry(alice) :- tall(frank).\nsmall(ball) :- hungry(alice).\nparent(carol,frank) :- small(ball).\nlikes(eve,dave) :- parent(carol,frank).\ntall(frank).\nhungry(bob).\nhungry(dave).\nlikes(bob,apple).\nparent(eve,alice).\nparent(george,frank).\nlikes(frank,eve).\nparent(eve,dave).\nparent(bob,george).\nlikes(eve,car).\nparent(alice,dave).\nlikes(george,eve).\ntall(alice).\nlikes(george,pencil).\nlikes(dave,frank).\ntall(dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then carol is a parent of frank.\nIf carol is a parent of frank, then eve likes dave.\n\nAnd the following facts:\nfrank is tall.\nbob is hungry.\ndave is hungry.\nbob likes apple.\neve is a parent of alice.\ngeorge is a parent of frank.\nfrank likes eve.\neve is a parent of dave.\nbob is a parent of george.\neve likes car.\nalice is a parent of dave.\ngeorge likes eve.\nalice is tall.\ngeorge likes pencil.\ndave likes frank.\ndave is tall.\n\nQUESTION:\nIs dave is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,frank).",
    "c": "hungry(alice) :- tall(frank).\nsmall(ball) :- hungry(alice).\nparent(carol,frank) :- small(ball).\nlikes(eve,dave) :- parent(carol,frank).\ntall(frank).\nhungry(bob).\nhungry(dave).\nlikes(bob,apple).\nparent(eve,alice).\nparent(george,frank).\nlikes(frank,eve).\nparent(eve,dave).\nparent(bob,george).\nlikes(eve,car).\nparent(alice,dave).\nlikes(george,eve).\ntall(alice).\nlikes(george,pencil).\nlikes(dave,frank).\ntall(dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then carol is a parent of frank.\nIf carol is a parent of frank, then eve likes dave.\n\nAnd the following facts:\nfrank is tall.\nbob is hungry.\ndave is hungry.\nbob likes apple.\neve is a parent of alice.\ngeorge is a parent of frank.\nfrank likes eve.\neve is a parent of dave.\nbob is a parent of george.\neve likes car.\nalice is a parent of dave.\ngeorge likes eve.\nalice is tall.\ngeorge likes pencil.\ndave likes frank.\ndave is tall.\n\nQUESTION:\nIs carol is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,dave).",
    "c": "hungry(alice) :- tall(frank).\nsmall(ball) :- hungry(alice).\nparent(carol,frank) :- small(ball).\nlikes(eve,dave) :- parent(carol,frank).\ntall(frank).\nhungry(bob).\nhungry(dave).\nlikes(bob,apple).\nparent(eve,alice).\nparent(george,frank).\nlikes(frank,eve).\nparent(eve,dave).\nparent(bob,george).\nlikes(eve,car).\nparent(alice,dave).\nlikes(george,eve).\ntall(alice).\nlikes(george,pencil).\nlikes(dave,frank).\ntall(dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then carol is a parent of frank.\nIf carol is a parent of frank, then eve likes dave.\n\nAnd the following facts:\nfrank is tall.\nbob is hungry.\ndave is hungry.\nbob likes apple.\neve is a parent of alice.\ngeorge is a parent of frank.\nfrank likes eve.\neve is a parent of dave.\nbob is a parent of george.\neve likes car.\nalice is a parent of dave.\ngeorge likes eve.\nalice is tall.\ngeorge likes pencil.\ndave likes frank.\ndave is tall.\n\nQUESTION:\nIs george likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,carol).",
    "c": "hungry(alice) :- tall(frank).\nsmall(ball) :- hungry(alice).\nparent(carol,frank) :- small(ball).\nlikes(eve,dave) :- parent(carol,frank).\ntall(frank).\nhungry(bob).\nhungry(dave).\nlikes(bob,apple).\nparent(eve,alice).\nparent(george,frank).\nlikes(frank,eve).\nparent(eve,dave).\nparent(bob,george).\nlikes(eve,car).\nparent(alice,dave).\nlikes(george,eve).\ntall(alice).\nlikes(george,pencil).\nlikes(dave,frank).\ntall(dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then carol is a parent of frank.\nIf carol is a parent of frank, then eve likes dave.\n\nAnd the following facts:\nfrank is tall.\nbob is hungry.\ndave is hungry.\nbob likes apple.\neve is a parent of alice.\ngeorge is a parent of frank.\nfrank likes eve.\neve is a parent of dave.\nbob is a parent of george.\neve likes car.\nalice is a parent of dave.\ngeorge likes eve.\nalice is tall.\ngeorge likes pencil.\ndave likes frank.\ndave is tall.\n\nQUESTION:\nIs dave likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "hungry(alice) :- tall(frank).\nsmall(ball) :- hungry(alice).\nparent(carol,frank) :- small(ball).\nlikes(eve,dave) :- parent(carol,frank).\nhungry(bob).\nhungry(dave).\nlikes(bob,apple).\nparent(eve,alice).\nparent(george,frank).\nlikes(frank,eve).\nparent(eve,dave).\nparent(bob,george).\nlikes(eve,car).\nparent(alice,dave).\nlikes(george,eve).\ntall(alice).\nlikes(george,pencil).\nlikes(dave,frank).\ntall(dave).",
    "natural language": "You are given the following rules:\nIf frank is tall, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then carol is a parent of frank.\nIf carol is a parent of frank, then eve likes dave.\n\nAnd the following facts:\nfrank is tall.\nbob is hungry.\ndave is hungry.\nbob likes apple.\neve is a parent of alice.\ngeorge is a parent of frank.\nfrank likes eve.\neve is a parent of dave.\nbob is a parent of george.\neve likes car.\nalice is a parent of dave.\ngeorge likes eve.\nalice is tall.\ngeorge likes pencil.\ndave likes frank.\ndave is tall.\n\nOBSERVATION: eve likes dave is true.\n\nQUESTION:\nCould frank is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "hungry(alice) :- tall(frank).\nsmall(ball) :- hungry(alice).\nparent(carol,frank) :- small(ball).\nlikes(eve,dave) :- parent(carol,frank).\ntall(frank).\nhungry(bob).\nhungry(dave).\nlikes(bob,apple).\nparent(eve,alice).\nparent(george,frank).\nlikes(frank,eve).\nparent(bob,george).\nlikes(eve,car).\nparent(alice,dave).\nlikes(george,eve).\ntall(alice).\nlikes(george,pencil).\nlikes(dave,frank).\ntall(dave).",
    "natural language": "You are given the following rules:\nIf frank is tall, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then carol is a parent of frank.\nIf carol is a parent of frank, then eve likes dave.\n\nAnd the following facts:\nfrank is tall.\nbob is hungry.\ndave is hungry.\nbob likes apple.\neve is a parent of alice.\ngeorge is a parent of frank.\nfrank likes eve.\neve is a parent of dave.\nbob is a parent of george.\neve likes car.\nalice is a parent of dave.\ngeorge likes eve.\nalice is tall.\ngeorge likes pencil.\ndave likes frank.\ndave is tall.\n\nOBSERVATION: eve likes dave is true.\n\nQUESTION:\nCould eve is a parent of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "hungry(alice) :- tall(frank).\nsmall(ball) :- hungry(alice).\nparent(carol,frank) :- small(ball).\nlikes(eve,dave) :- parent(carol,frank).\ntall(frank).\nhungry(dave).\nlikes(bob,apple).\nparent(eve,alice).\nparent(george,frank).\nlikes(frank,eve).\nparent(eve,dave).\nparent(bob,george).\nlikes(eve,car).\nparent(alice,dave).\nlikes(george,eve).\ntall(alice).\nlikes(george,pencil).\nlikes(dave,frank).\ntall(dave).",
    "natural language": "You are given the following rules:\nIf frank is tall, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then carol is a parent of frank.\nIf carol is a parent of frank, then eve likes dave.\n\nAnd the following facts:\nfrank is tall.\nbob is hungry.\ndave is hungry.\nbob likes apple.\neve is a parent of alice.\ngeorge is a parent of frank.\nfrank likes eve.\neve is a parent of dave.\nbob is a parent of george.\neve likes car.\nalice is a parent of dave.\ngeorge likes eve.\nalice is tall.\ngeorge likes pencil.\ndave likes frank.\ndave is tall.\n\nOBSERVATION: eve likes dave is true.\n\nQUESTION:\nCould bob is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "enemy(george,bob) :- tall(alice).\nwet(ball) :- enemy(george,bob).\nparent(carol,bob) :- wet(ball).\nsmall(car) :- parent(carol,bob).\ntall(alice).\nenemy(dave,eve).\nparent(alice,george).\nenemy(dave,george).\nenemy(alice,eve).\nparent(frank,dave).\nparent(dave,frank).\nparent(carol,george).\nparent(carol,alice).\nenemy(eve,frank).\nsmall(book).\nparent(alice,bob).\ntall(frank).\nwet(ball).\nenemy(frank,dave).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then george is an enemy of bob.\nIf george is an enemy of bob, then ball is wet.\nIf ball is wet, then carol is a parent of bob.\nIf carol is a parent of bob, then car is small.\n\nAnd the following facts:\nalice is tall.\ndave is an enemy of eve.\nalice is a parent of george.\ndave is an enemy of george.\nalice is an enemy of eve.\nfrank is a parent of dave.\ndave is a parent of frank.\ncarol is a parent of george.\ncarol is a parent of alice.\neve is an enemy of frank.\nbook is small.\nalice is a parent of bob.\nfrank is tall.\nball is wet.\nfrank is an enemy of dave.\ncarol is an enemy of dave.\n\nQUESTION:\nIs frank is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "enemy(george,bob) :- tall(alice).\nwet(ball) :- enemy(george,bob).\nparent(carol,bob) :- wet(ball).\nsmall(car) :- parent(carol,bob).\ntall(alice).\nenemy(dave,eve).\nparent(alice,george).\nenemy(dave,george).\nenemy(alice,eve).\nparent(frank,dave).\nparent(dave,frank).\nparent(carol,george).\nparent(carol,alice).\nenemy(eve,frank).\nsmall(book).\nparent(alice,bob).\ntall(frank).\nwet(ball).\nenemy(frank,dave).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then george is an enemy of bob.\nIf george is an enemy of bob, then ball is wet.\nIf ball is wet, then carol is a parent of bob.\nIf carol is a parent of bob, then car is small.\n\nAnd the following facts:\nalice is tall.\ndave is an enemy of eve.\nalice is a parent of george.\ndave is an enemy of george.\nalice is an enemy of eve.\nfrank is a parent of dave.\ndave is a parent of frank.\ncarol is a parent of george.\ncarol is a parent of alice.\neve is an enemy of frank.\nbook is small.\nalice is a parent of bob.\nfrank is tall.\nball is wet.\nfrank is an enemy of dave.\ncarol is an enemy of dave.\n\nQUESTION:\nIs ball is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "enemy(george,bob) :- tall(alice).\nwet(ball) :- enemy(george,bob).\nparent(carol,bob) :- wet(ball).\nsmall(car) :- parent(carol,bob).\ntall(alice).\nenemy(dave,eve).\nparent(alice,george).\nenemy(dave,george).\nenemy(alice,eve).\nparent(frank,dave).\nparent(dave,frank).\nparent(carol,george).\nparent(carol,alice).\nenemy(eve,frank).\nsmall(book).\nparent(alice,bob).\ntall(frank).\nwet(ball).\nenemy(frank,dave).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then george is an enemy of bob.\nIf george is an enemy of bob, then ball is wet.\nIf ball is wet, then carol is a parent of bob.\nIf carol is a parent of bob, then car is small.\n\nAnd the following facts:\nalice is tall.\ndave is an enemy of eve.\nalice is a parent of george.\ndave is an enemy of george.\nalice is an enemy of eve.\nfrank is a parent of dave.\ndave is a parent of frank.\ncarol is a parent of george.\ncarol is a parent of alice.\neve is an enemy of frank.\nbook is small.\nalice is a parent of bob.\nfrank is tall.\nball is wet.\nfrank is an enemy of dave.\ncarol is an enemy of dave.\n\nQUESTION:\nIs george is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,bob).",
    "c": "enemy(george,bob) :- tall(alice).\nwet(ball) :- enemy(george,bob).\nparent(carol,bob) :- wet(ball).\nsmall(car) :- parent(carol,bob).\ntall(alice).\nenemy(dave,eve).\nparent(alice,george).\nenemy(dave,george).\nenemy(alice,eve).\nparent(frank,dave).\nparent(dave,frank).\nparent(carol,george).\nparent(carol,alice).\nenemy(eve,frank).\nsmall(book).\nparent(alice,bob).\ntall(frank).\nwet(ball).\nenemy(frank,dave).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then george is an enemy of bob.\nIf george is an enemy of bob, then ball is wet.\nIf ball is wet, then carol is a parent of bob.\nIf carol is a parent of bob, then car is small.\n\nAnd the following facts:\nalice is tall.\ndave is an enemy of eve.\nalice is a parent of george.\ndave is an enemy of george.\nalice is an enemy of eve.\nfrank is a parent of dave.\ndave is a parent of frank.\ncarol is a parent of george.\ncarol is a parent of alice.\neve is an enemy of frank.\nbook is small.\nalice is a parent of bob.\nfrank is tall.\nball is wet.\nfrank is an enemy of dave.\ncarol is an enemy of dave.\n\nQUESTION:\nIs alice is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,alice).",
    "c": "enemy(george,bob) :- tall(alice).\nwet(ball) :- enemy(george,bob).\nparent(carol,bob) :- wet(ball).\nsmall(car) :- parent(carol,bob).\ntall(alice).\nenemy(dave,eve).\nparent(alice,george).\nenemy(dave,george).\nenemy(alice,eve).\nparent(frank,dave).\nparent(dave,frank).\nparent(carol,george).\nparent(carol,alice).\nenemy(eve,frank).\nsmall(book).\nparent(alice,bob).\ntall(frank).\nwet(ball).\nenemy(frank,dave).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then george is an enemy of bob.\nIf george is an enemy of bob, then ball is wet.\nIf ball is wet, then carol is a parent of bob.\nIf carol is a parent of bob, then car is small.\n\nAnd the following facts:\nalice is tall.\ndave is an enemy of eve.\nalice is a parent of george.\ndave is an enemy of george.\nalice is an enemy of eve.\nfrank is a parent of dave.\ndave is a parent of frank.\ncarol is a parent of george.\ncarol is a parent of alice.\neve is an enemy of frank.\nbook is small.\nalice is a parent of bob.\nfrank is tall.\nball is wet.\nfrank is an enemy of dave.\ncarol is an enemy of dave.\n\nQUESTION:\nIs george is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "enemy(george,bob) :- tall(alice).\nwet(ball) :- enemy(george,bob).\nparent(carol,bob) :- wet(ball).\nsmall(car) :- parent(carol,bob).\ntall(alice).\nenemy(dave,eve).\nparent(alice,george).\nenemy(dave,george).\nenemy(alice,eve).\nparent(frank,dave).\nparent(dave,frank).\nparent(carol,george).\nparent(carol,alice).\nenemy(eve,frank).\nsmall(book).\nparent(alice,bob).\ntall(frank).\nenemy(frank,dave).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf alice is tall, then george is an enemy of bob.\nIf george is an enemy of bob, then ball is wet.\nIf ball is wet, then carol is a parent of bob.\nIf carol is a parent of bob, then car is small.\n\nAnd the following facts:\nalice is tall.\ndave is an enemy of eve.\nalice is a parent of george.\ndave is an enemy of george.\nalice is an enemy of eve.\nfrank is a parent of dave.\ndave is a parent of frank.\ncarol is a parent of george.\ncarol is a parent of alice.\neve is an enemy of frank.\nbook is small.\nalice is a parent of bob.\nfrank is tall.\nball is wet.\nfrank is an enemy of dave.\ncarol is an enemy of dave.\n\nOBSERVATION: car is small is true.\n\nQUESTION:\nCould ball is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "enemy(george,bob) :- tall(alice).\nwet(ball) :- enemy(george,bob).\nparent(carol,bob) :- wet(ball).\nsmall(car) :- parent(carol,bob).\ntall(alice).\nenemy(dave,eve).\nparent(alice,george).\nenemy(alice,eve).\nparent(frank,dave).\nparent(dave,frank).\nparent(carol,george).\nparent(carol,alice).\nenemy(eve,frank).\nsmall(book).\nparent(alice,bob).\ntall(frank).\nwet(ball).\nenemy(frank,dave).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf alice is tall, then george is an enemy of bob.\nIf george is an enemy of bob, then ball is wet.\nIf ball is wet, then carol is a parent of bob.\nIf carol is a parent of bob, then car is small.\n\nAnd the following facts:\nalice is tall.\ndave is an enemy of eve.\nalice is a parent of george.\ndave is an enemy of george.\nalice is an enemy of eve.\nfrank is a parent of dave.\ndave is a parent of frank.\ncarol is a parent of george.\ncarol is a parent of alice.\neve is an enemy of frank.\nbook is small.\nalice is a parent of bob.\nfrank is tall.\nball is wet.\nfrank is an enemy of dave.\ncarol is an enemy of dave.\n\nOBSERVATION: car is small is true.\n\nQUESTION:\nCould dave is an enemy of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "enemy(george,bob) :- tall(alice).\nwet(ball) :- enemy(george,bob).\nparent(carol,bob) :- wet(ball).\nsmall(car) :- parent(carol,bob).\ntall(alice).\nenemy(dave,eve).\nparent(alice,george).\nenemy(dave,george).\nenemy(alice,eve).\nparent(frank,dave).\nparent(dave,frank).\nparent(carol,george).\nenemy(eve,frank).\nsmall(book).\nparent(alice,bob).\ntall(frank).\nwet(ball).\nenemy(frank,dave).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf alice is tall, then george is an enemy of bob.\nIf george is an enemy of bob, then ball is wet.\nIf ball is wet, then carol is a parent of bob.\nIf carol is a parent of bob, then car is small.\n\nAnd the following facts:\nalice is tall.\ndave is an enemy of eve.\nalice is a parent of george.\ndave is an enemy of george.\nalice is an enemy of eve.\nfrank is a parent of dave.\ndave is a parent of frank.\ncarol is a parent of george.\ncarol is a parent of alice.\neve is an enemy of frank.\nbook is small.\nalice is a parent of bob.\nfrank is tall.\nball is wet.\nfrank is an enemy of dave.\ncarol is an enemy of dave.\n\nOBSERVATION: car is small is true.\n\nQUESTION:\nCould carol is a parent of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "likes(dave,car) :- wet(pencil).\nfriend(alice,dave) :- likes(dave,car).\nowns(frank,book) :- owns(carol,book), enemy(frank,carol), owns(bob,car).\nowns(frank,car) :- sunny, enemy(alice,eve).\nsibling(frank,dave) :- sibling(george,frank).\ndislikes(carol,pencil) :- sad(carol), small(book), wet(ball).\ndislikes(frank,alice) :- happy(eve).\nsibling(dave,bob) :- sibling(bob,alice), hungry(eve).\nsmall(ball) :- small(pencil), hot, cold.\nwet(pencil).\nlikes(carol,phone).\nenemy(carol,eve).\nlikes(alice,frank).",
    "natural language": "You are given the following information:\nIf pencil is wet, then dave likes car.\nIf dave likes car, then alice is a friend of dave.\nIf carol owns book and frank is an enemy of carol and bob owns car, then frank owns book.\nIf it is sunny and alice is an enemy of eve, then frank owns car.\nIf george is a sibling of frank, then frank is a sibling of dave.\nIf carol is sad and book is small and ball is wet, then carol dislikes pencil.\nIf eve is happy, then frank dislikes alice.\nIf bob is a sibling of alice and eve is hungry, then dave is a sibling of bob.\nIf pencil is small and it is hot and it is cold, then ball is small.\n\nAnd the following facts:\npencil is wet.\ncarol likes phone.\ncarol is an enemy of eve.\nalice likes frank.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,frank).",
    "c": "likes(dave,car) :- wet(pencil).\nfriend(alice,dave) :- likes(dave,car).\nowns(frank,book) :- owns(carol,book), enemy(frank,carol), owns(bob,car).\nowns(frank,car) :- sunny, enemy(alice,eve).\nsibling(frank,dave) :- sibling(george,frank).\ndislikes(carol,pencil) :- sad(carol), small(book), wet(ball).\ndislikes(frank,alice) :- happy(eve).\nsibling(dave,bob) :- sibling(bob,alice), hungry(eve).\nsmall(ball) :- small(pencil), hot, cold.\nwet(pencil).\nlikes(carol,phone).\nenemy(carol,eve).\nlikes(alice,frank).",
    "natural language": "You are given the following information:\nIf pencil is wet, then dave likes car.\nIf dave likes car, then alice is a friend of dave.\nIf carol owns book and frank is an enemy of carol and bob owns car, then frank owns book.\nIf it is sunny and alice is an enemy of eve, then frank owns car.\nIf george is a sibling of frank, then frank is a sibling of dave.\nIf carol is sad and book is small and ball is wet, then carol dislikes pencil.\nIf eve is happy, then frank dislikes alice.\nIf bob is a sibling of alice and eve is hungry, then dave is a sibling of bob.\nIf pencil is small and it is hot and it is cold, then ball is small.\n\nAnd the following facts:\npencil is wet.\ncarol likes phone.\ncarol is an enemy of eve.\nalice likes frank.\n\nQUESTION:\nIs alice likes frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "likes(dave,car) :- wet(pencil).\nfriend(alice,dave) :- likes(dave,car).\nowns(frank,book) :- owns(carol,book), enemy(frank,carol), owns(bob,car).\nowns(frank,car) :- sunny, enemy(alice,eve).\nsibling(frank,dave) :- sibling(george,frank).\ndislikes(carol,pencil) :- sad(carol), small(book), wet(ball).\ndislikes(frank,alice) :- happy(eve).\nsibling(dave,bob) :- sibling(bob,alice), hungry(eve).\nsmall(ball) :- small(pencil), hot, cold.\nwet(pencil).\nlikes(carol,phone).\nenemy(carol,eve).\nlikes(alice,frank).",
    "natural language": "You are given the following information:\nIf pencil is wet, then dave likes car.\nIf dave likes car, then alice is a friend of dave.\nIf carol owns book and frank is an enemy of carol and bob owns car, then frank owns book.\nIf it is sunny and alice is an enemy of eve, then frank owns car.\nIf george is a sibling of frank, then frank is a sibling of dave.\nIf carol is sad and book is small and ball is wet, then carol dislikes pencil.\nIf eve is happy, then frank dislikes alice.\nIf bob is a sibling of alice and eve is hungry, then dave is a sibling of bob.\nIf pencil is small and it is hot and it is cold, then ball is small.\n\nAnd the following facts:\npencil is wet.\ncarol likes phone.\ncarol is an enemy of eve.\nalice likes frank.\n\nQUESTION:\nIs alice is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,book).",
    "c": "likes(dave,car) :- wet(pencil).\nfriend(alice,dave) :- likes(dave,car).\nowns(frank,book) :- owns(carol,book), enemy(frank,carol), owns(bob,car).\nowns(frank,car) :- sunny, enemy(alice,eve).\nsibling(frank,dave) :- sibling(george,frank).\ndislikes(carol,pencil) :- sad(carol), small(book), wet(ball).\ndislikes(frank,alice) :- happy(eve).\nsibling(dave,bob) :- sibling(bob,alice), hungry(eve).\nsmall(ball) :- small(pencil), hot, cold.\nwet(pencil).\nlikes(carol,phone).\nenemy(carol,eve).\nlikes(alice,frank).",
    "natural language": "You are given the following information:\nIf pencil is wet, then dave likes car.\nIf dave likes car, then alice is a friend of dave.\nIf carol owns book and frank is an enemy of carol and bob owns car, then frank owns book.\nIf it is sunny and alice is an enemy of eve, then frank owns car.\nIf george is a sibling of frank, then frank is a sibling of dave.\nIf carol is sad and book is small and ball is wet, then carol dislikes pencil.\nIf eve is happy, then frank dislikes alice.\nIf bob is a sibling of alice and eve is hungry, then dave is a sibling of bob.\nIf pencil is small and it is hot and it is cold, then ball is small.\n\nAnd the following facts:\npencil is wet.\ncarol likes phone.\ncarol is an enemy of eve.\nalice likes frank.\n\nQUESTION:\nIs frank dislikes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "likes(dave,car) :- wet(pencil).\nfriend(alice,dave) :- likes(dave,car).\nowns(frank,book) :- owns(carol,book), enemy(frank,carol), owns(bob,car).\nowns(frank,car) :- sunny, enemy(alice,eve).\nsibling(frank,dave) :- sibling(george,frank).\ndislikes(carol,pencil) :- sad(carol), small(book), wet(ball).\ndislikes(frank,alice) :- happy(eve).\nsibling(dave,bob) :- sibling(bob,alice), hungry(eve).\nsmall(ball) :- small(pencil), hot, cold.\nwet(pencil).\nlikes(carol,phone).\nenemy(carol,eve).\nlikes(alice,frank).",
    "natural language": "You are given the following information:\nIf pencil is wet, then dave likes car.\nIf dave likes car, then alice is a friend of dave.\nIf carol owns book and frank is an enemy of carol and bob owns car, then frank owns book.\nIf it is sunny and alice is an enemy of eve, then frank owns car.\nIf george is a sibling of frank, then frank is a sibling of dave.\nIf carol is sad and book is small and ball is wet, then carol dislikes pencil.\nIf eve is happy, then frank dislikes alice.\nIf bob is a sibling of alice and eve is hungry, then dave is a sibling of bob.\nIf pencil is small and it is hot and it is cold, then ball is small.\n\nAnd the following facts:\npencil is wet.\ncarol likes phone.\ncarol is an enemy of eve.\nalice likes frank.\n\nQUESTION:\nIs dave is an enemy of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "likes(dave,car) :- wet(pencil).\nfriend(alice,dave) :- likes(dave,car).\nowns(frank,book) :- owns(carol,book), enemy(frank,carol), owns(bob,car).\nowns(frank,car) :- sunny, enemy(alice,eve).\nsibling(frank,dave) :- sibling(george,frank).\ndislikes(carol,pencil) :- sad(carol), small(book), wet(ball).\ndislikes(frank,alice) :- happy(eve).\nsibling(dave,bob) :- sibling(bob,alice), hungry(eve).\nsmall(ball) :- small(pencil), hot, cold.\nlikes(carol,phone).\nenemy(carol,eve).\nlikes(alice,frank).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then dave likes car.\nIf dave likes car, then alice is a friend of dave.\nIf carol owns book and frank is an enemy of carol and bob owns car, then frank owns book.\nIf it is sunny and alice is an enemy of eve, then frank owns car.\nIf george is a sibling of frank, then frank is a sibling of dave.\nIf carol is sad and book is small and ball is wet, then carol dislikes pencil.\nIf eve is happy, then frank dislikes alice.\nIf bob is a sibling of alice and eve is hungry, then dave is a sibling of bob.\nIf pencil is small and it is hot and it is cold, then ball is small.\n\nAnd the following facts:\npencil is wet.\ncarol likes phone.\ncarol is an enemy of eve.\nalice likes frank.\n\nOBSERVATION: alice is a friend of dave is true.\n\nQUESTION:\nCould pencil is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,phone).",
    "c": "likes(dave,car) :- wet(pencil).\nfriend(alice,dave) :- likes(dave,car).\nowns(frank,book) :- owns(carol,book), enemy(frank,carol), owns(bob,car).\nowns(frank,car) :- sunny, enemy(alice,eve).\nsibling(frank,dave) :- sibling(george,frank).\ndislikes(carol,pencil) :- sad(carol), small(book), wet(ball).\ndislikes(frank,alice) :- happy(eve).\nsibling(dave,bob) :- sibling(bob,alice), hungry(eve).\nsmall(ball) :- small(pencil), hot, cold.\nwet(pencil).\nenemy(carol,eve).\nlikes(alice,frank).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then dave likes car.\nIf dave likes car, then alice is a friend of dave.\nIf carol owns book and frank is an enemy of carol and bob owns car, then frank owns book.\nIf it is sunny and alice is an enemy of eve, then frank owns car.\nIf george is a sibling of frank, then frank is a sibling of dave.\nIf carol is sad and book is small and ball is wet, then carol dislikes pencil.\nIf eve is happy, then frank dislikes alice.\nIf bob is a sibling of alice and eve is hungry, then dave is a sibling of bob.\nIf pencil is small and it is hot and it is cold, then ball is small.\n\nAnd the following facts:\npencil is wet.\ncarol likes phone.\ncarol is an enemy of eve.\nalice likes frank.\n\nOBSERVATION: alice is a friend of dave is true.\n\nQUESTION:\nCould carol likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "likes(dave,car) :- wet(pencil).\nfriend(alice,dave) :- likes(dave,car).\nowns(frank,book) :- owns(carol,book), enemy(frank,carol), owns(bob,car).\nowns(frank,car) :- sunny, enemy(alice,eve).\nsibling(frank,dave) :- sibling(george,frank).\ndislikes(carol,pencil) :- sad(carol), small(book), wet(ball).\ndislikes(frank,alice) :- happy(eve).\nsibling(dave,bob) :- sibling(bob,alice), hungry(eve).\nsmall(ball) :- small(pencil), hot, cold.\nwet(pencil).\nlikes(carol,phone).\nlikes(alice,frank).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then dave likes car.\nIf dave likes car, then alice is a friend of dave.\nIf carol owns book and frank is an enemy of carol and bob owns car, then frank owns book.\nIf it is sunny and alice is an enemy of eve, then frank owns car.\nIf george is a sibling of frank, then frank is a sibling of dave.\nIf carol is sad and book is small and ball is wet, then carol dislikes pencil.\nIf eve is happy, then frank dislikes alice.\nIf bob is a sibling of alice and eve is hungry, then dave is a sibling of bob.\nIf pencil is small and it is hot and it is cold, then ball is small.\n\nAnd the following facts:\npencil is wet.\ncarol likes phone.\ncarol is an enemy of eve.\nalice likes frank.\n\nOBSERVATION: alice is a friend of dave is true.\n\nQUESTION:\nCould carol is an enemy of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,dave).",
    "c": "friend(george,eve) :- sad(bob).\nsad(frank) :- friend(george,eve).\nsibling(bob,dave) :- tall(carol), tall(frank), parent(dave,dave).\nhungry(alice) :- parent(alice,eve), parent(alice,george), wet(apple).\nenemy(alice,frank) :- sibling(george,alice), dislikes(alice,eve).\nlikes(dave,frank) :- enemy(george,george), sunny.\nhungry(alice) :- wet(phone), big(pencil).\nenemy(carol,frank) :- enemy(alice,dave), tall(george), big(book).\nlikes(bob,dave) :- parent(frank,bob), sunny.\nsad(bob).\nparent(frank,eve).\nsibling(alice,dave).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf bob is sad, then george is a friend of eve.\nIf george is a friend of eve, then frank is sad.\nIf carol is tall and frank is tall and dave is a parent of dave, then bob is a sibling of dave.\nIf alice is a parent of eve and alice is a parent of george and apple is wet, then alice is hungry.\nIf george is a sibling of alice and alice dislikes eve, then alice is an enemy of frank.\nIf george is an enemy of george and it is sunny, then dave likes frank.\nIf phone is wet and pencil is big, then alice is hungry.\nIf alice is an enemy of dave and george is tall and book is big, then carol is an enemy of frank.\nIf frank is a parent of bob and it is sunny, then bob likes dave.\n\nAnd the following facts:\nbob is sad.\nfrank is a parent of eve.\nalice is a sibling of dave.\nbob is an enemy of george.\n\nQUESTION:\nIs alice is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,eve).",
    "c": "friend(george,eve) :- sad(bob).\nsad(frank) :- friend(george,eve).\nsibling(bob,dave) :- tall(carol), tall(frank), parent(dave,dave).\nhungry(alice) :- parent(alice,eve), parent(alice,george), wet(apple).\nenemy(alice,frank) :- sibling(george,alice), dislikes(alice,eve).\nlikes(dave,frank) :- enemy(george,george), sunny.\nhungry(alice) :- wet(phone), big(pencil).\nenemy(carol,frank) :- enemy(alice,dave), tall(george), big(book).\nlikes(bob,dave) :- parent(frank,bob), sunny.\nsad(bob).\nparent(frank,eve).\nsibling(alice,dave).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf bob is sad, then george is a friend of eve.\nIf george is a friend of eve, then frank is sad.\nIf carol is tall and frank is tall and dave is a parent of dave, then bob is a sibling of dave.\nIf alice is a parent of eve and alice is a parent of george and apple is wet, then alice is hungry.\nIf george is a sibling of alice and alice dislikes eve, then alice is an enemy of frank.\nIf george is an enemy of george and it is sunny, then dave likes frank.\nIf phone is wet and pencil is big, then alice is hungry.\nIf alice is an enemy of dave and george is tall and book is big, then carol is an enemy of frank.\nIf frank is a parent of bob and it is sunny, then bob likes dave.\n\nAnd the following facts:\nbob is sad.\nfrank is a parent of eve.\nalice is a sibling of dave.\nbob is an enemy of george.\n\nQUESTION:\nIs george is a friend of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "friend(george,eve) :- sad(bob).\nsad(frank) :- friend(george,eve).\nsibling(bob,dave) :- tall(carol), tall(frank), parent(dave,dave).\nhungry(alice) :- parent(alice,eve), parent(alice,george), wet(apple).\nenemy(alice,frank) :- sibling(george,alice), dislikes(alice,eve).\nlikes(dave,frank) :- enemy(george,george), sunny.\nhungry(alice) :- wet(phone), big(pencil).\nenemy(carol,frank) :- enemy(alice,dave), tall(george), big(book).\nlikes(bob,dave) :- parent(frank,bob), sunny.\nsad(bob).\nparent(frank,eve).\nsibling(alice,dave).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf bob is sad, then george is a friend of eve.\nIf george is a friend of eve, then frank is sad.\nIf carol is tall and frank is tall and dave is a parent of dave, then bob is a sibling of dave.\nIf alice is a parent of eve and alice is a parent of george and apple is wet, then alice is hungry.\nIf george is a sibling of alice and alice dislikes eve, then alice is an enemy of frank.\nIf george is an enemy of george and it is sunny, then dave likes frank.\nIf phone is wet and pencil is big, then alice is hungry.\nIf alice is an enemy of dave and george is tall and book is big, then carol is an enemy of frank.\nIf frank is a parent of bob and it is sunny, then bob likes dave.\n\nAnd the following facts:\nbob is sad.\nfrank is a parent of eve.\nalice is a sibling of dave.\nbob is an enemy of george.\n\nQUESTION:\nIs frank is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,alice).",
    "c": "friend(george,eve) :- sad(bob).\nsad(frank) :- friend(george,eve).\nsibling(bob,dave) :- tall(carol), tall(frank), parent(dave,dave).\nhungry(alice) :- parent(alice,eve), parent(alice,george), wet(apple).\nenemy(alice,frank) :- sibling(george,alice), dislikes(alice,eve).\nlikes(dave,frank) :- enemy(george,george), sunny.\nhungry(alice) :- wet(phone), big(pencil).\nenemy(carol,frank) :- enemy(alice,dave), tall(george), big(book).\nlikes(bob,dave) :- parent(frank,bob), sunny.\nsad(bob).\nparent(frank,eve).\nsibling(alice,dave).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf bob is sad, then george is a friend of eve.\nIf george is a friend of eve, then frank is sad.\nIf carol is tall and frank is tall and dave is a parent of dave, then bob is a sibling of dave.\nIf alice is a parent of eve and alice is a parent of george and apple is wet, then alice is hungry.\nIf george is a sibling of alice and alice dislikes eve, then alice is an enemy of frank.\nIf george is an enemy of george and it is sunny, then dave likes frank.\nIf phone is wet and pencil is big, then alice is hungry.\nIf alice is an enemy of dave and george is tall and book is big, then carol is an enemy of frank.\nIf frank is a parent of bob and it is sunny, then bob likes dave.\n\nAnd the following facts:\nbob is sad.\nfrank is a parent of eve.\nalice is a sibling of dave.\nbob is an enemy of george.\n\nQUESTION:\nIs frank is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,frank).",
    "c": "friend(george,eve) :- sad(bob).\nsad(frank) :- friend(george,eve).\nsibling(bob,dave) :- tall(carol), tall(frank), parent(dave,dave).\nhungry(alice) :- parent(alice,eve), parent(alice,george), wet(apple).\nenemy(alice,frank) :- sibling(george,alice), dislikes(alice,eve).\nlikes(dave,frank) :- enemy(george,george), sunny.\nhungry(alice) :- wet(phone), big(pencil).\nenemy(carol,frank) :- enemy(alice,dave), tall(george), big(book).\nlikes(bob,dave) :- parent(frank,bob), sunny.\nsad(bob).\nparent(frank,eve).\nsibling(alice,dave).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf bob is sad, then george is a friend of eve.\nIf george is a friend of eve, then frank is sad.\nIf carol is tall and frank is tall and dave is a parent of dave, then bob is a sibling of dave.\nIf alice is a parent of eve and alice is a parent of george and apple is wet, then alice is hungry.\nIf george is a sibling of alice and alice dislikes eve, then alice is an enemy of frank.\nIf george is an enemy of george and it is sunny, then dave likes frank.\nIf phone is wet and pencil is big, then alice is hungry.\nIf alice is an enemy of dave and george is tall and book is big, then carol is an enemy of frank.\nIf frank is a parent of bob and it is sunny, then bob likes dave.\n\nAnd the following facts:\nbob is sad.\nfrank is a parent of eve.\nalice is a sibling of dave.\nbob is an enemy of george.\n\nQUESTION:\nIs george is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(bob).",
    "c": "friend(george,eve) :- sad(bob).\nsad(frank) :- friend(george,eve).\nsibling(bob,dave) :- tall(carol), tall(frank), parent(dave,dave).\nhungry(alice) :- parent(alice,eve), parent(alice,george), wet(apple).\nenemy(alice,frank) :- sibling(george,alice), dislikes(alice,eve).\nlikes(dave,frank) :- enemy(george,george), sunny.\nhungry(alice) :- wet(phone), big(pencil).\nenemy(carol,frank) :- enemy(alice,dave), tall(george), big(book).\nlikes(bob,dave) :- parent(frank,bob), sunny.\nparent(frank,eve).\nsibling(alice,dave).\nenemy(bob,george).",
    "natural language": "You are given the following rules:\nIf bob is sad, then george is a friend of eve.\nIf george is a friend of eve, then frank is sad.\nIf carol is tall and frank is tall and dave is a parent of dave, then bob is a sibling of dave.\nIf alice is a parent of eve and alice is a parent of george and apple is wet, then alice is hungry.\nIf george is a sibling of alice and alice dislikes eve, then alice is an enemy of frank.\nIf george is an enemy of george and it is sunny, then dave likes frank.\nIf phone is wet and pencil is big, then alice is hungry.\nIf alice is an enemy of dave and george is tall and book is big, then carol is an enemy of frank.\nIf frank is a parent of bob and it is sunny, then bob likes dave.\n\nAnd the following facts:\nbob is sad.\nfrank is a parent of eve.\nalice is a sibling of dave.\nbob is an enemy of george.\n\nOBSERVATION: frank is sad is true.\n\nQUESTION:\nCould bob is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(frank,eve).",
    "c": "friend(george,eve) :- sad(bob).\nsad(frank) :- friend(george,eve).\nsibling(bob,dave) :- tall(carol), tall(frank), parent(dave,dave).\nhungry(alice) :- parent(alice,eve), parent(alice,george), wet(apple).\nenemy(alice,frank) :- sibling(george,alice), dislikes(alice,eve).\nlikes(dave,frank) :- enemy(george,george), sunny.\nhungry(alice) :- wet(phone), big(pencil).\nenemy(carol,frank) :- enemy(alice,dave), tall(george), big(book).\nlikes(bob,dave) :- parent(frank,bob), sunny.\nsad(bob).\nsibling(alice,dave).\nenemy(bob,george).",
    "natural language": "You are given the following rules:\nIf bob is sad, then george is a friend of eve.\nIf george is a friend of eve, then frank is sad.\nIf carol is tall and frank is tall and dave is a parent of dave, then bob is a sibling of dave.\nIf alice is a parent of eve and alice is a parent of george and apple is wet, then alice is hungry.\nIf george is a sibling of alice and alice dislikes eve, then alice is an enemy of frank.\nIf george is an enemy of george and it is sunny, then dave likes frank.\nIf phone is wet and pencil is big, then alice is hungry.\nIf alice is an enemy of dave and george is tall and book is big, then carol is an enemy of frank.\nIf frank is a parent of bob and it is sunny, then bob likes dave.\n\nAnd the following facts:\nbob is sad.\nfrank is a parent of eve.\nalice is a sibling of dave.\nbob is an enemy of george.\n\nOBSERVATION: frank is sad is true.\n\nQUESTION:\nCould frank is a parent of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,dave).",
    "c": "friend(george,eve) :- sad(bob).\nsad(frank) :- friend(george,eve).\nsibling(bob,dave) :- tall(carol), tall(frank), parent(dave,dave).\nhungry(alice) :- parent(alice,eve), parent(alice,george), wet(apple).\nenemy(alice,frank) :- sibling(george,alice), dislikes(alice,eve).\nlikes(dave,frank) :- enemy(george,george), sunny.\nhungry(alice) :- wet(phone), big(pencil).\nenemy(carol,frank) :- enemy(alice,dave), tall(george), big(book).\nlikes(bob,dave) :- parent(frank,bob), sunny.\nsad(bob).\nparent(frank,eve).\nenemy(bob,george).",
    "natural language": "You are given the following rules:\nIf bob is sad, then george is a friend of eve.\nIf george is a friend of eve, then frank is sad.\nIf carol is tall and frank is tall and dave is a parent of dave, then bob is a sibling of dave.\nIf alice is a parent of eve and alice is a parent of george and apple is wet, then alice is hungry.\nIf george is a sibling of alice and alice dislikes eve, then alice is an enemy of frank.\nIf george is an enemy of george and it is sunny, then dave likes frank.\nIf phone is wet and pencil is big, then alice is hungry.\nIf alice is an enemy of dave and george is tall and book is big, then carol is an enemy of frank.\nIf frank is a parent of bob and it is sunny, then bob likes dave.\n\nAnd the following facts:\nbob is sad.\nfrank is a parent of eve.\nalice is a sibling of dave.\nbob is an enemy of george.\n\nOBSERVATION: frank is sad is true.\n\nQUESTION:\nCould alice is a sibling of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(alice,frank).",
    "c": "sad(eve) :- hot.\nhappy(eve) :- sad(eve).\ndislikes(alice,frank) :- happy(eve).\nparent(alice,alice) :- dislikes(alice,frank).\ndislikes(alice,ball) :- dislikes(bob,phone), tall(dave).\ndislikes(carol,bob) :- sibling(frank,frank).\nsunny :- dislikes(eve,george), hot.\nhappy(frank) :- likes(george,eve).\nowns(eve,pencil) :- owns(bob,ball).\nhot.\nparent(alice,frank).\nlikes(carol,bob).\ndislikes(eve,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is sad.\nIf eve is sad, then eve is happy.\nIf eve is happy, then alice dislikes frank.\nIf alice dislikes frank, then alice is a parent of alice.\nIf bob dislikes phone and dave is tall, then alice dislikes ball.\nIf frank is a sibling of frank, then carol dislikes bob.\nIf eve dislikes george and it is hot, then it is sunny.\nIf george likes eve, then frank is happy.\nIf bob owns ball, then eve owns pencil.\n\nAnd the following facts:\nit is hot.\nalice is a parent of frank.\ncarol likes bob.\neve dislikes carol.\n\nQUESTION:\nIs alice is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(eve).",
    "c": "sad(eve) :- hot.\nhappy(eve) :- sad(eve).\ndislikes(alice,frank) :- happy(eve).\nparent(alice,alice) :- dislikes(alice,frank).\ndislikes(alice,ball) :- dislikes(bob,phone), tall(dave).\ndislikes(carol,bob) :- sibling(frank,frank).\nsunny :- dislikes(eve,george), hot.\nhappy(frank) :- likes(george,eve).\nowns(eve,pencil) :- owns(bob,ball).\nhot.\nparent(alice,frank).\nlikes(carol,bob).\ndislikes(eve,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is sad.\nIf eve is sad, then eve is happy.\nIf eve is happy, then alice dislikes frank.\nIf alice dislikes frank, then alice is a parent of alice.\nIf bob dislikes phone and dave is tall, then alice dislikes ball.\nIf frank is a sibling of frank, then carol dislikes bob.\nIf eve dislikes george and it is hot, then it is sunny.\nIf george likes eve, then frank is happy.\nIf bob owns ball, then eve owns pencil.\n\nAnd the following facts:\nit is hot.\nalice is a parent of frank.\ncarol likes bob.\neve dislikes carol.\n\nQUESTION:\nIs eve is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "sad(eve) :- hot.\nhappy(eve) :- sad(eve).\ndislikes(alice,frank) :- happy(eve).\nparent(alice,alice) :- dislikes(alice,frank).\ndislikes(alice,ball) :- dislikes(bob,phone), tall(dave).\ndislikes(carol,bob) :- sibling(frank,frank).\nsunny :- dislikes(eve,george), hot.\nhappy(frank) :- likes(george,eve).\nowns(eve,pencil) :- owns(bob,ball).\nhot.\nparent(alice,frank).\nlikes(carol,bob).\ndislikes(eve,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is sad.\nIf eve is sad, then eve is happy.\nIf eve is happy, then alice dislikes frank.\nIf alice dislikes frank, then alice is a parent of alice.\nIf bob dislikes phone and dave is tall, then alice dislikes ball.\nIf frank is a sibling of frank, then carol dislikes bob.\nIf eve dislikes george and it is hot, then it is sunny.\nIf george likes eve, then frank is happy.\nIf bob owns ball, then eve owns pencil.\n\nAnd the following facts:\nit is hot.\nalice is a parent of frank.\ncarol likes bob.\neve dislikes carol.\n\nQUESTION:\nIs it is hot true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,alice).",
    "c": "sad(eve) :- hot.\nhappy(eve) :- sad(eve).\ndislikes(alice,frank) :- happy(eve).\nparent(alice,alice) :- dislikes(alice,frank).\ndislikes(alice,ball) :- dislikes(bob,phone), tall(dave).\ndislikes(carol,bob) :- sibling(frank,frank).\nsunny :- dislikes(eve,george), hot.\nhappy(frank) :- likes(george,eve).\nowns(eve,pencil) :- owns(bob,ball).\nhot.\nparent(alice,frank).\nlikes(carol,bob).\ndislikes(eve,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is sad.\nIf eve is sad, then eve is happy.\nIf eve is happy, then alice dislikes frank.\nIf alice dislikes frank, then alice is a parent of alice.\nIf bob dislikes phone and dave is tall, then alice dislikes ball.\nIf frank is a sibling of frank, then carol dislikes bob.\nIf eve dislikes george and it is hot, then it is sunny.\nIf george likes eve, then frank is happy.\nIf bob owns ball, then eve owns pencil.\n\nAnd the following facts:\nit is hot.\nalice is a parent of frank.\ncarol likes bob.\neve dislikes carol.\n\nQUESTION:\nIs george likes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,apple).",
    "c": "sad(eve) :- hot.\nhappy(eve) :- sad(eve).\ndislikes(alice,frank) :- happy(eve).\nparent(alice,alice) :- dislikes(alice,frank).\ndislikes(alice,ball) :- dislikes(bob,phone), tall(dave).\ndislikes(carol,bob) :- sibling(frank,frank).\nsunny :- dislikes(eve,george), hot.\nhappy(frank) :- likes(george,eve).\nowns(eve,pencil) :- owns(bob,ball).\nhot.\nparent(alice,frank).\nlikes(carol,bob).\ndislikes(eve,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is sad.\nIf eve is sad, then eve is happy.\nIf eve is happy, then alice dislikes frank.\nIf alice dislikes frank, then alice is a parent of alice.\nIf bob dislikes phone and dave is tall, then alice dislikes ball.\nIf frank is a sibling of frank, then carol dislikes bob.\nIf eve dislikes george and it is hot, then it is sunny.\nIf george likes eve, then frank is happy.\nIf bob owns ball, then eve owns pencil.\n\nAnd the following facts:\nit is hot.\nalice is a parent of frank.\ncarol likes bob.\neve dislikes carol.\n\nQUESTION:\nIs bob likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "sad(eve) :- hot.\nhappy(eve) :- sad(eve).\ndislikes(alice,frank) :- happy(eve).\nparent(alice,alice) :- dislikes(alice,frank).\ndislikes(alice,ball) :- dislikes(bob,phone), tall(dave).\ndislikes(carol,bob) :- sibling(frank,frank).\nsunny :- dislikes(eve,george), hot.\nhappy(frank) :- likes(george,eve).\nowns(eve,pencil) :- owns(bob,ball).\nparent(alice,frank).\nlikes(carol,bob).\ndislikes(eve,carol).",
    "natural language": "You are given the following rules:\nIf it is hot, then eve is sad.\nIf eve is sad, then eve is happy.\nIf eve is happy, then alice dislikes frank.\nIf alice dislikes frank, then alice is a parent of alice.\nIf bob dislikes phone and dave is tall, then alice dislikes ball.\nIf frank is a sibling of frank, then carol dislikes bob.\nIf eve dislikes george and it is hot, then it is sunny.\nIf george likes eve, then frank is happy.\nIf bob owns ball, then eve owns pencil.\n\nAnd the following facts:\nit is hot.\nalice is a parent of frank.\ncarol likes bob.\neve dislikes carol.\n\nOBSERVATION: alice is a parent of alice is true.\n\nQUESTION:\nCould it is hot be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(eve,carol).",
    "c": "sad(eve) :- hot.\nhappy(eve) :- sad(eve).\ndislikes(alice,frank) :- happy(eve).\nparent(alice,alice) :- dislikes(alice,frank).\ndislikes(alice,ball) :- dislikes(bob,phone), tall(dave).\ndislikes(carol,bob) :- sibling(frank,frank).\nsunny :- dislikes(eve,george), hot.\nhappy(frank) :- likes(george,eve).\nowns(eve,pencil) :- owns(bob,ball).\nhot.\nparent(alice,frank).\nlikes(carol,bob).",
    "natural language": "You are given the following rules:\nIf it is hot, then eve is sad.\nIf eve is sad, then eve is happy.\nIf eve is happy, then alice dislikes frank.\nIf alice dislikes frank, then alice is a parent of alice.\nIf bob dislikes phone and dave is tall, then alice dislikes ball.\nIf frank is a sibling of frank, then carol dislikes bob.\nIf eve dislikes george and it is hot, then it is sunny.\nIf george likes eve, then frank is happy.\nIf bob owns ball, then eve owns pencil.\n\nAnd the following facts:\nit is hot.\nalice is a parent of frank.\ncarol likes bob.\neve dislikes carol.\n\nOBSERVATION: alice is a parent of alice is true.\n\nQUESTION:\nCould eve dislikes carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,bob).",
    "c": "sad(eve) :- hot.\nhappy(eve) :- sad(eve).\ndislikes(alice,frank) :- happy(eve).\nparent(alice,alice) :- dislikes(alice,frank).\ndislikes(alice,ball) :- dislikes(bob,phone), tall(dave).\ndislikes(carol,bob) :- sibling(frank,frank).\nsunny :- dislikes(eve,george), hot.\nhappy(frank) :- likes(george,eve).\nowns(eve,pencil) :- owns(bob,ball).\nhot.\nparent(alice,frank).\ndislikes(eve,carol).",
    "natural language": "You are given the following rules:\nIf it is hot, then eve is sad.\nIf eve is sad, then eve is happy.\nIf eve is happy, then alice dislikes frank.\nIf alice dislikes frank, then alice is a parent of alice.\nIf bob dislikes phone and dave is tall, then alice dislikes ball.\nIf frank is a sibling of frank, then carol dislikes bob.\nIf eve dislikes george and it is hot, then it is sunny.\nIf george likes eve, then frank is happy.\nIf bob owns ball, then eve owns pencil.\n\nAnd the following facts:\nit is hot.\nalice is a parent of frank.\ncarol likes bob.\neve dislikes carol.\n\nOBSERVATION: alice is a parent of alice is true.\n\nQUESTION:\nCould carol likes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(carol,book).",
    "c": "small(car) :- owns(carol,book).\nhot :- small(car).\nowns(george,phone) :- hot.\nhappy(dave) :- owns(george,phone).\ncold :- owns(george,car), big(book), sad(alice).\ncold :- hot, hot, wet(book).\nhappy(george) :- owns(eve,ball), cold.\nhappy(alice) :- small(phone), likes(bob,alice), sibling(bob,eve).\nhappy(george) :- small(apple).\nowns(carol,book).\nsibling(alice,frank).\nbig(car).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nIf carol owns book, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george owns phone.\nIf george owns phone, then dave is happy.\nIf george owns car and book is big and alice is sad, then it is cold.\nIf it is hot and it is hot and book is wet, then it is cold.\nIf eve owns ball and it is cold, then george is happy.\nIf phone is small and bob likes alice and bob is a sibling of eve, then alice is happy.\nIf apple is small, then george is happy.\n\nAnd the following facts:\ncarol owns book.\nalice is a sibling of frank.\ncar is big.\nfrank likes car.\n\nQUESTION:\nIs carol owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,phone).",
    "c": "small(car) :- owns(carol,book).\nhot :- small(car).\nowns(george,phone) :- hot.\nhappy(dave) :- owns(george,phone).\ncold :- owns(george,car), big(book), sad(alice).\ncold :- hot, hot, wet(book).\nhappy(george) :- owns(eve,ball), cold.\nhappy(alice) :- small(phone), likes(bob,alice), sibling(bob,eve).\nhappy(george) :- small(apple).\nowns(carol,book).\nsibling(alice,frank).\nbig(car).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nIf carol owns book, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george owns phone.\nIf george owns phone, then dave is happy.\nIf george owns car and book is big and alice is sad, then it is cold.\nIf it is hot and it is hot and book is wet, then it is cold.\nIf eve owns ball and it is cold, then george is happy.\nIf phone is small and bob likes alice and bob is a sibling of eve, then alice is happy.\nIf apple is small, then george is happy.\n\nAnd the following facts:\ncarol owns book.\nalice is a sibling of frank.\ncar is big.\nfrank likes car.\n\nQUESTION:\nIs george owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "small(car) :- owns(carol,book).\nhot :- small(car).\nowns(george,phone) :- hot.\nhappy(dave) :- owns(george,phone).\ncold :- owns(george,car), big(book), sad(alice).\ncold :- hot, hot, wet(book).\nhappy(george) :- owns(eve,ball), cold.\nhappy(alice) :- small(phone), likes(bob,alice), sibling(bob,eve).\nhappy(george) :- small(apple).\nowns(carol,book).\nsibling(alice,frank).\nbig(car).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nIf carol owns book, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george owns phone.\nIf george owns phone, then dave is happy.\nIf george owns car and book is big and alice is sad, then it is cold.\nIf it is hot and it is hot and book is wet, then it is cold.\nIf eve owns ball and it is cold, then george is happy.\nIf phone is small and bob likes alice and bob is a sibling of eve, then alice is happy.\nIf apple is small, then george is happy.\n\nAnd the following facts:\ncarol owns book.\nalice is a sibling of frank.\ncar is big.\nfrank likes car.\n\nQUESTION:\nIs it is hot true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,bob).",
    "c": "small(car) :- owns(carol,book).\nhot :- small(car).\nowns(george,phone) :- hot.\nhappy(dave) :- owns(george,phone).\ncold :- owns(george,car), big(book), sad(alice).\ncold :- hot, hot, wet(book).\nhappy(george) :- owns(eve,ball), cold.\nhappy(alice) :- small(phone), likes(bob,alice), sibling(bob,eve).\nhappy(george) :- small(apple).\nowns(carol,book).\nsibling(alice,frank).\nbig(car).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nIf carol owns book, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george owns phone.\nIf george owns phone, then dave is happy.\nIf george owns car and book is big and alice is sad, then it is cold.\nIf it is hot and it is hot and book is wet, then it is cold.\nIf eve owns ball and it is cold, then george is happy.\nIf phone is small and bob likes alice and bob is a sibling of eve, then alice is happy.\nIf apple is small, then george is happy.\n\nAnd the following facts:\ncarol owns book.\nalice is a sibling of frank.\ncar is big.\nfrank likes car.\n\nQUESTION:\nIs eve is a sibling of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,book).",
    "c": "small(car) :- owns(carol,book).\nhot :- small(car).\nowns(george,phone) :- hot.\nhappy(dave) :- owns(george,phone).\ncold :- owns(george,car), big(book), sad(alice).\ncold :- hot, hot, wet(book).\nhappy(george) :- owns(eve,ball), cold.\nhappy(alice) :- small(phone), likes(bob,alice), sibling(bob,eve).\nhappy(george) :- small(apple).\nowns(carol,book).\nsibling(alice,frank).\nbig(car).\nlikes(frank,car).",
    "natural language": "You are given the following information:\nIf carol owns book, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george owns phone.\nIf george owns phone, then dave is happy.\nIf george owns car and book is big and alice is sad, then it is cold.\nIf it is hot and it is hot and book is wet, then it is cold.\nIf eve owns ball and it is cold, then george is happy.\nIf phone is small and bob likes alice and bob is a sibling of eve, then alice is happy.\nIf apple is small, then george is happy.\n\nAnd the following facts:\ncarol owns book.\nalice is a sibling of frank.\ncar is big.\nfrank likes car.\n\nQUESTION:\nIs alice owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,book).",
    "c": "small(car) :- owns(carol,book).\nhot :- small(car).\nowns(george,phone) :- hot.\nhappy(dave) :- owns(george,phone).\ncold :- owns(george,car), big(book), sad(alice).\ncold :- hot, hot, wet(book).\nhappy(george) :- owns(eve,ball), cold.\nhappy(alice) :- small(phone), likes(bob,alice), sibling(bob,eve).\nhappy(george) :- small(apple).\nsibling(alice,frank).\nbig(car).\nlikes(frank,car).",
    "natural language": "You are given the following rules:\nIf carol owns book, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george owns phone.\nIf george owns phone, then dave is happy.\nIf george owns car and book is big and alice is sad, then it is cold.\nIf it is hot and it is hot and book is wet, then it is cold.\nIf eve owns ball and it is cold, then george is happy.\nIf phone is small and bob likes alice and bob is a sibling of eve, then alice is happy.\nIf apple is small, then george is happy.\n\nAnd the following facts:\ncarol owns book.\nalice is a sibling of frank.\ncar is big.\nfrank likes car.\n\nOBSERVATION: dave is happy is true.\n\nQUESTION:\nCould carol owns book be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(frank,car).",
    "c": "small(car) :- owns(carol,book).\nhot :- small(car).\nowns(george,phone) :- hot.\nhappy(dave) :- owns(george,phone).\ncold :- owns(george,car), big(book), sad(alice).\ncold :- hot, hot, wet(book).\nhappy(george) :- owns(eve,ball), cold.\nhappy(alice) :- small(phone), likes(bob,alice), sibling(bob,eve).\nhappy(george) :- small(apple).\nowns(carol,book).\nsibling(alice,frank).\nbig(car).",
    "natural language": "You are given the following rules:\nIf carol owns book, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george owns phone.\nIf george owns phone, then dave is happy.\nIf george owns car and book is big and alice is sad, then it is cold.\nIf it is hot and it is hot and book is wet, then it is cold.\nIf eve owns ball and it is cold, then george is happy.\nIf phone is small and bob likes alice and bob is a sibling of eve, then alice is happy.\nIf apple is small, then george is happy.\n\nAnd the following facts:\ncarol owns book.\nalice is a sibling of frank.\ncar is big.\nfrank likes car.\n\nOBSERVATION: dave is happy is true.\n\nQUESTION:\nCould frank likes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,frank).",
    "c": "small(car) :- owns(carol,book).\nhot :- small(car).\nowns(george,phone) :- hot.\nhappy(dave) :- owns(george,phone).\ncold :- owns(george,car), big(book), sad(alice).\ncold :- hot, hot, wet(book).\nhappy(george) :- owns(eve,ball), cold.\nhappy(alice) :- small(phone), likes(bob,alice), sibling(bob,eve).\nhappy(george) :- small(apple).\nowns(carol,book).\nbig(car).\nlikes(frank,car).",
    "natural language": "You are given the following rules:\nIf carol owns book, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george owns phone.\nIf george owns phone, then dave is happy.\nIf george owns car and book is big and alice is sad, then it is cold.\nIf it is hot and it is hot and book is wet, then it is cold.\nIf eve owns ball and it is cold, then george is happy.\nIf phone is small and bob likes alice and bob is a sibling of eve, then alice is happy.\nIf apple is small, then george is happy.\n\nAnd the following facts:\ncarol owns book.\nalice is a sibling of frank.\ncar is big.\nfrank likes car.\n\nOBSERVATION: dave is happy is true.\n\nQUESTION:\nCould alice is a sibling of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,ball).",
    "c": "tall(bob) :- sad(frank).\nsibling(bob,carol) :- tall(bob).\nenemy(eve,george) :- sibling(bob,carol).\ntall(dave) :- enemy(eve,george).\nwet(phone) :- tall(dave).\nlikes(eve,ball) :- wet(phone).\nhot :- cold.\nowns(alice,book) :- enemy(bob,bob).\nsmall(pencil) :- cold, wet(pencil).\nsad(frank).\nsibling(frank,alice).\nenemy(carol,george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf frank is sad, then bob is tall.\nIf bob is tall, then bob is a sibling of carol.\nIf bob is a sibling of carol, then eve is an enemy of george.\nIf eve is an enemy of george, then dave is tall.\nIf dave is tall, then phone is wet.\nIf phone is wet, then eve likes ball.\nIf it is cold, then it is hot.\nIf bob is an enemy of bob, then alice owns book.\nIf it is cold and pencil is wet, then pencil is small.\n\nAnd the following facts:\nfrank is sad.\nfrank is a sibling of alice.\ncarol is an enemy of george.\nalice is an enemy of dave.\n\nQUESTION:\nIs eve likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "tall(bob) :- sad(frank).\nsibling(bob,carol) :- tall(bob).\nenemy(eve,george) :- sibling(bob,carol).\ntall(dave) :- enemy(eve,george).\nwet(phone) :- tall(dave).\nlikes(eve,ball) :- wet(phone).\nhot :- cold.\nowns(alice,book) :- enemy(bob,bob).\nsmall(pencil) :- cold, wet(pencil).\nsad(frank).\nsibling(frank,alice).\nenemy(carol,george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf frank is sad, then bob is tall.\nIf bob is tall, then bob is a sibling of carol.\nIf bob is a sibling of carol, then eve is an enemy of george.\nIf eve is an enemy of george, then dave is tall.\nIf dave is tall, then phone is wet.\nIf phone is wet, then eve likes ball.\nIf it is cold, then it is hot.\nIf bob is an enemy of bob, then alice owns book.\nIf it is cold and pencil is wet, then pencil is small.\n\nAnd the following facts:\nfrank is sad.\nfrank is a sibling of alice.\ncarol is an enemy of george.\nalice is an enemy of dave.\n\nQUESTION:\nIs frank is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,dave).",
    "c": "tall(bob) :- sad(frank).\nsibling(bob,carol) :- tall(bob).\nenemy(eve,george) :- sibling(bob,carol).\ntall(dave) :- enemy(eve,george).\nwet(phone) :- tall(dave).\nlikes(eve,ball) :- wet(phone).\nhot :- cold.\nowns(alice,book) :- enemy(bob,bob).\nsmall(pencil) :- cold, wet(pencil).\nsad(frank).\nsibling(frank,alice).\nenemy(carol,george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf frank is sad, then bob is tall.\nIf bob is tall, then bob is a sibling of carol.\nIf bob is a sibling of carol, then eve is an enemy of george.\nIf eve is an enemy of george, then dave is tall.\nIf dave is tall, then phone is wet.\nIf phone is wet, then eve likes ball.\nIf it is cold, then it is hot.\nIf bob is an enemy of bob, then alice owns book.\nIf it is cold and pencil is wet, then pencil is small.\n\nAnd the following facts:\nfrank is sad.\nfrank is a sibling of alice.\ncarol is an enemy of george.\nalice is an enemy of dave.\n\nQUESTION:\nIs alice is an enemy of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,phone).",
    "c": "tall(bob) :- sad(frank).\nsibling(bob,carol) :- tall(bob).\nenemy(eve,george) :- sibling(bob,carol).\ntall(dave) :- enemy(eve,george).\nwet(phone) :- tall(dave).\nlikes(eve,ball) :- wet(phone).\nhot :- cold.\nowns(alice,book) :- enemy(bob,bob).\nsmall(pencil) :- cold, wet(pencil).\nsad(frank).\nsibling(frank,alice).\nenemy(carol,george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf frank is sad, then bob is tall.\nIf bob is tall, then bob is a sibling of carol.\nIf bob is a sibling of carol, then eve is an enemy of george.\nIf eve is an enemy of george, then dave is tall.\nIf dave is tall, then phone is wet.\nIf phone is wet, then eve likes ball.\nIf it is cold, then it is hot.\nIf bob is an enemy of bob, then alice owns book.\nIf it is cold and pencil is wet, then pencil is small.\n\nAnd the following facts:\nfrank is sad.\nfrank is a sibling of alice.\ncarol is an enemy of george.\nalice is an enemy of dave.\n\nQUESTION:\nIs george likes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,frank).",
    "c": "tall(bob) :- sad(frank).\nsibling(bob,carol) :- tall(bob).\nenemy(eve,george) :- sibling(bob,carol).\ntall(dave) :- enemy(eve,george).\nwet(phone) :- tall(dave).\nlikes(eve,ball) :- wet(phone).\nhot :- cold.\nowns(alice,book) :- enemy(bob,bob).\nsmall(pencil) :- cold, wet(pencil).\nsad(frank).\nsibling(frank,alice).\nenemy(carol,george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf frank is sad, then bob is tall.\nIf bob is tall, then bob is a sibling of carol.\nIf bob is a sibling of carol, then eve is an enemy of george.\nIf eve is an enemy of george, then dave is tall.\nIf dave is tall, then phone is wet.\nIf phone is wet, then eve likes ball.\nIf it is cold, then it is hot.\nIf bob is an enemy of bob, then alice owns book.\nIf it is cold and pencil is wet, then pencil is small.\n\nAnd the following facts:\nfrank is sad.\nfrank is a sibling of alice.\ncarol is an enemy of george.\nalice is an enemy of dave.\n\nQUESTION:\nIs alice is an enemy of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "tall(bob) :- sad(frank).\nsibling(bob,carol) :- tall(bob).\nenemy(eve,george) :- sibling(bob,carol).\ntall(dave) :- enemy(eve,george).\nwet(phone) :- tall(dave).\nlikes(eve,ball) :- wet(phone).\nhot :- cold.\nowns(alice,book) :- enemy(bob,bob).\nsmall(pencil) :- cold, wet(pencil).\nsibling(frank,alice).\nenemy(carol,george).\nenemy(alice,dave).",
    "natural language": "You are given the following rules:\nIf frank is sad, then bob is tall.\nIf bob is tall, then bob is a sibling of carol.\nIf bob is a sibling of carol, then eve is an enemy of george.\nIf eve is an enemy of george, then dave is tall.\nIf dave is tall, then phone is wet.\nIf phone is wet, then eve likes ball.\nIf it is cold, then it is hot.\nIf bob is an enemy of bob, then alice owns book.\nIf it is cold and pencil is wet, then pencil is small.\n\nAnd the following facts:\nfrank is sad.\nfrank is a sibling of alice.\ncarol is an enemy of george.\nalice is an enemy of dave.\n\nOBSERVATION: eve likes ball is true.\n\nQUESTION:\nCould frank is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,dave).",
    "c": "tall(bob) :- sad(frank).\nsibling(bob,carol) :- tall(bob).\nenemy(eve,george) :- sibling(bob,carol).\ntall(dave) :- enemy(eve,george).\nwet(phone) :- tall(dave).\nlikes(eve,ball) :- wet(phone).\nhot :- cold.\nowns(alice,book) :- enemy(bob,bob).\nsmall(pencil) :- cold, wet(pencil).\nsad(frank).\nsibling(frank,alice).\nenemy(carol,george).",
    "natural language": "You are given the following rules:\nIf frank is sad, then bob is tall.\nIf bob is tall, then bob is a sibling of carol.\nIf bob is a sibling of carol, then eve is an enemy of george.\nIf eve is an enemy of george, then dave is tall.\nIf dave is tall, then phone is wet.\nIf phone is wet, then eve likes ball.\nIf it is cold, then it is hot.\nIf bob is an enemy of bob, then alice owns book.\nIf it is cold and pencil is wet, then pencil is small.\n\nAnd the following facts:\nfrank is sad.\nfrank is a sibling of alice.\ncarol is an enemy of george.\nalice is an enemy of dave.\n\nOBSERVATION: eve likes ball is true.\n\nQUESTION:\nCould alice is an enemy of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(frank,alice).",
    "c": "tall(bob) :- sad(frank).\nsibling(bob,carol) :- tall(bob).\nenemy(eve,george) :- sibling(bob,carol).\ntall(dave) :- enemy(eve,george).\nwet(phone) :- tall(dave).\nlikes(eve,ball) :- wet(phone).\nhot :- cold.\nowns(alice,book) :- enemy(bob,bob).\nsmall(pencil) :- cold, wet(pencil).\nsad(frank).\nenemy(carol,george).\nenemy(alice,dave).",
    "natural language": "You are given the following rules:\nIf frank is sad, then bob is tall.\nIf bob is tall, then bob is a sibling of carol.\nIf bob is a sibling of carol, then eve is an enemy of george.\nIf eve is an enemy of george, then dave is tall.\nIf dave is tall, then phone is wet.\nIf phone is wet, then eve likes ball.\nIf it is cold, then it is hot.\nIf bob is an enemy of bob, then alice owns book.\nIf it is cold and pencil is wet, then pencil is small.\n\nAnd the following facts:\nfrank is sad.\nfrank is a sibling of alice.\ncarol is an enemy of george.\nalice is an enemy of dave.\n\nOBSERVATION: eve likes ball is true.\n\nQUESTION:\nCould frank is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "small(phone) :- parent(george,frank).\ndislikes(george,dave) :- small(phone).\nhungry(carol) :- dislikes(george,dave).\nwet(phone) :- hungry(carol).\ndislikes(george,pencil) :- wet(phone).\nfriend(bob,dave) :- dislikes(george,pencil).\ncold :- enemy(dave,eve), owns(carol,pencil).\nsibling(dave,eve) :- wet(car).\nhungry(dave) :- small(pencil).\nparent(george,frank).\nsibling(bob,carol).\ndislikes(frank,alice).\ndislikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is a parent of frank, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then carol is hungry.\nIf carol is hungry, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then bob is a friend of dave.\nIf dave is an enemy of eve and carol owns pencil, then it is cold.\nIf car is wet, then dave is a sibling of eve.\nIf pencil is small, then dave is hungry.\n\nAnd the following facts:\ngeorge is a parent of frank.\nbob is a sibling of carol.\nfrank dislikes alice.\nfrank dislikes carol.\n\nQUESTION:\nIs phone is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "small(phone) :- parent(george,frank).\ndislikes(george,dave) :- small(phone).\nhungry(carol) :- dislikes(george,dave).\nwet(phone) :- hungry(carol).\ndislikes(george,pencil) :- wet(phone).\nfriend(bob,dave) :- dislikes(george,pencil).\ncold :- enemy(dave,eve), owns(carol,pencil).\nsibling(dave,eve) :- wet(car).\nhungry(dave) :- small(pencil).\nparent(george,frank).\nsibling(bob,carol).\ndislikes(frank,alice).\ndislikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is a parent of frank, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then carol is hungry.\nIf carol is hungry, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then bob is a friend of dave.\nIf dave is an enemy of eve and carol owns pencil, then it is cold.\nIf car is wet, then dave is a sibling of eve.\nIf pencil is small, then dave is hungry.\n\nAnd the following facts:\ngeorge is a parent of frank.\nbob is a sibling of carol.\nfrank dislikes alice.\nfrank dislikes carol.\n\nQUESTION:\nIs george is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,carol).",
    "c": "small(phone) :- parent(george,frank).\ndislikes(george,dave) :- small(phone).\nhungry(carol) :- dislikes(george,dave).\nwet(phone) :- hungry(carol).\ndislikes(george,pencil) :- wet(phone).\nfriend(bob,dave) :- dislikes(george,pencil).\ncold :- enemy(dave,eve), owns(carol,pencil).\nsibling(dave,eve) :- wet(car).\nhungry(dave) :- small(pencil).\nparent(george,frank).\nsibling(bob,carol).\ndislikes(frank,alice).\ndislikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is a parent of frank, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then carol is hungry.\nIf carol is hungry, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then bob is a friend of dave.\nIf dave is an enemy of eve and carol owns pencil, then it is cold.\nIf car is wet, then dave is a sibling of eve.\nIf pencil is small, then dave is hungry.\n\nAnd the following facts:\ngeorge is a parent of frank.\nbob is a sibling of carol.\nfrank dislikes alice.\nfrank dislikes carol.\n\nQUESTION:\nIs frank dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,george).",
    "c": "small(phone) :- parent(george,frank).\ndislikes(george,dave) :- small(phone).\nhungry(carol) :- dislikes(george,dave).\nwet(phone) :- hungry(carol).\ndislikes(george,pencil) :- wet(phone).\nfriend(bob,dave) :- dislikes(george,pencil).\ncold :- enemy(dave,eve), owns(carol,pencil).\nsibling(dave,eve) :- wet(car).\nhungry(dave) :- small(pencil).\nparent(george,frank).\nsibling(bob,carol).\ndislikes(frank,alice).\ndislikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is a parent of frank, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then carol is hungry.\nIf carol is hungry, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then bob is a friend of dave.\nIf dave is an enemy of eve and carol owns pencil, then it is cold.\nIf car is wet, then dave is a sibling of eve.\nIf pencil is small, then dave is hungry.\n\nAnd the following facts:\ngeorge is a parent of frank.\nbob is a sibling of carol.\nfrank dislikes alice.\nfrank dislikes carol.\n\nQUESTION:\nIs eve is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,car).",
    "c": "small(phone) :- parent(george,frank).\ndislikes(george,dave) :- small(phone).\nhungry(carol) :- dislikes(george,dave).\nwet(phone) :- hungry(carol).\ndislikes(george,pencil) :- wet(phone).\nfriend(bob,dave) :- dislikes(george,pencil).\ncold :- enemy(dave,eve), owns(carol,pencil).\nsibling(dave,eve) :- wet(car).\nhungry(dave) :- small(pencil).\nparent(george,frank).\nsibling(bob,carol).\ndislikes(frank,alice).\ndislikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is a parent of frank, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then carol is hungry.\nIf carol is hungry, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then bob is a friend of dave.\nIf dave is an enemy of eve and carol owns pencil, then it is cold.\nIf car is wet, then dave is a sibling of eve.\nIf pencil is small, then dave is hungry.\n\nAnd the following facts:\ngeorge is a parent of frank.\nbob is a sibling of carol.\nfrank dislikes alice.\nfrank dislikes carol.\n\nQUESTION:\nIs dave dislikes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "small(phone) :- parent(george,frank).\ndislikes(george,dave) :- small(phone).\nhungry(carol) :- dislikes(george,dave).\nwet(phone) :- hungry(carol).\ndislikes(george,pencil) :- wet(phone).\nfriend(bob,dave) :- dislikes(george,pencil).\ncold :- enemy(dave,eve), owns(carol,pencil).\nsibling(dave,eve) :- wet(car).\nhungry(dave) :- small(pencil).\nsibling(bob,carol).\ndislikes(frank,alice).\ndislikes(frank,carol).",
    "natural language": "You are given the following rules:\nIf george is a parent of frank, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then carol is hungry.\nIf carol is hungry, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then bob is a friend of dave.\nIf dave is an enemy of eve and carol owns pencil, then it is cold.\nIf car is wet, then dave is a sibling of eve.\nIf pencil is small, then dave is hungry.\n\nAnd the following facts:\ngeorge is a parent of frank.\nbob is a sibling of carol.\nfrank dislikes alice.\nfrank dislikes carol.\n\nOBSERVATION: bob is a friend of dave is true.\n\nQUESTION:\nCould george is a parent of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(bob,carol).",
    "c": "small(phone) :- parent(george,frank).\ndislikes(george,dave) :- small(phone).\nhungry(carol) :- dislikes(george,dave).\nwet(phone) :- hungry(carol).\ndislikes(george,pencil) :- wet(phone).\nfriend(bob,dave) :- dislikes(george,pencil).\ncold :- enemy(dave,eve), owns(carol,pencil).\nsibling(dave,eve) :- wet(car).\nhungry(dave) :- small(pencil).\nparent(george,frank).\ndislikes(frank,alice).\ndislikes(frank,carol).",
    "natural language": "You are given the following rules:\nIf george is a parent of frank, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then carol is hungry.\nIf carol is hungry, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then bob is a friend of dave.\nIf dave is an enemy of eve and carol owns pencil, then it is cold.\nIf car is wet, then dave is a sibling of eve.\nIf pencil is small, then dave is hungry.\n\nAnd the following facts:\ngeorge is a parent of frank.\nbob is a sibling of carol.\nfrank dislikes alice.\nfrank dislikes carol.\n\nOBSERVATION: bob is a friend of dave is true.\n\nQUESTION:\nCould bob is a sibling of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(frank,carol).",
    "c": "small(phone) :- parent(george,frank).\ndislikes(george,dave) :- small(phone).\nhungry(carol) :- dislikes(george,dave).\nwet(phone) :- hungry(carol).\ndislikes(george,pencil) :- wet(phone).\nfriend(bob,dave) :- dislikes(george,pencil).\ncold :- enemy(dave,eve), owns(carol,pencil).\nsibling(dave,eve) :- wet(car).\nhungry(dave) :- small(pencil).\nparent(george,frank).\nsibling(bob,carol).\ndislikes(frank,alice).",
    "natural language": "You are given the following rules:\nIf george is a parent of frank, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then carol is hungry.\nIf carol is hungry, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then bob is a friend of dave.\nIf dave is an enemy of eve and carol owns pencil, then it is cold.\nIf car is wet, then dave is a sibling of eve.\nIf pencil is small, then dave is hungry.\n\nAnd the following facts:\ngeorge is a parent of frank.\nbob is a sibling of carol.\nfrank dislikes alice.\nfrank dislikes carol.\n\nOBSERVATION: bob is a friend of dave is true.\n\nQUESTION:\nCould frank dislikes carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,george).",
    "c": "happy(eve) :- sunny.\nsunny :- happy(eve).\nsibling(eve,frank) :- sunny.\nparent(george,frank) :- sibling(eve,frank).\nsunny :- parent(george,frank).\nhappy(bob) :- sunny.\nwet(book) :- happy(bob).\nsibling(alice,eve) :- wet(book).\nwet(ball) :- hungry(george), small(book), likes(george,car).\nsunny.\nlikes(bob,george).\nparent(carol,george).\nlikes(bob,dave).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is happy.\nIf eve is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then george is a parent of frank.\nIf george is a parent of frank, then it is sunny.\nIf it is sunny, then bob is happy.\nIf bob is happy, then book is wet.\nIf book is wet, then alice is a sibling of eve.\nIf george is hungry and book is small and george likes car, then ball is wet.\n\nAnd the following facts:\nit is sunny.\nbob likes george.\ncarol is a parent of george.\nbob likes dave.\n\nQUESTION:\nIs bob likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "happy(eve) :- sunny.\nsunny :- happy(eve).\nsibling(eve,frank) :- sunny.\nparent(george,frank) :- sibling(eve,frank).\nsunny :- parent(george,frank).\nhappy(bob) :- sunny.\nwet(book) :- happy(bob).\nsibling(alice,eve) :- wet(book).\nwet(ball) :- hungry(george), small(book), likes(george,car).\nsunny.\nlikes(bob,george).\nparent(carol,george).\nlikes(bob,dave).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is happy.\nIf eve is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then george is a parent of frank.\nIf george is a parent of frank, then it is sunny.\nIf it is sunny, then bob is happy.\nIf bob is happy, then book is wet.\nIf book is wet, then alice is a sibling of eve.\nIf george is hungry and book is small and george likes car, then ball is wet.\n\nAnd the following facts:\nit is sunny.\nbob likes george.\ncarol is a parent of george.\nbob likes dave.\n\nQUESTION:\nIs george is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "happy(eve) :- sunny.\nsunny :- happy(eve).\nsibling(eve,frank) :- sunny.\nparent(george,frank) :- sibling(eve,frank).\nsunny :- parent(george,frank).\nhappy(bob) :- sunny.\nwet(book) :- happy(bob).\nsibling(alice,eve) :- wet(book).\nwet(ball) :- hungry(george), small(book), likes(george,car).\nsunny.\nlikes(bob,george).\nparent(carol,george).\nlikes(bob,dave).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is happy.\nIf eve is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then george is a parent of frank.\nIf george is a parent of frank, then it is sunny.\nIf it is sunny, then bob is happy.\nIf bob is happy, then book is wet.\nIf book is wet, then alice is a sibling of eve.\nIf george is hungry and book is small and george likes car, then ball is wet.\n\nAnd the following facts:\nit is sunny.\nbob likes george.\ncarol is a parent of george.\nbob likes dave.\n\nQUESTION:\nIs bob is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,ball).",
    "c": "happy(eve) :- sunny.\nsunny :- happy(eve).\nsibling(eve,frank) :- sunny.\nparent(george,frank) :- sibling(eve,frank).\nsunny :- parent(george,frank).\nhappy(bob) :- sunny.\nwet(book) :- happy(bob).\nsibling(alice,eve) :- wet(book).\nwet(ball) :- hungry(george), small(book), likes(george,car).\nsunny.\nlikes(bob,george).\nparent(carol,george).\nlikes(bob,dave).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is happy.\nIf eve is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then george is a parent of frank.\nIf george is a parent of frank, then it is sunny.\nIf it is sunny, then bob is happy.\nIf bob is happy, then book is wet.\nIf book is wet, then alice is a sibling of eve.\nIf george is hungry and book is small and george likes car, then ball is wet.\n\nAnd the following facts:\nit is sunny.\nbob likes george.\ncarol is a parent of george.\nbob likes dave.\n\nQUESTION:\nIs frank likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "happy(eve) :- sunny.\nsunny :- happy(eve).\nsibling(eve,frank) :- sunny.\nparent(george,frank) :- sibling(eve,frank).\nsunny :- parent(george,frank).\nhappy(bob) :- sunny.\nwet(book) :- happy(bob).\nsibling(alice,eve) :- wet(book).\nwet(ball) :- hungry(george), small(book), likes(george,car).\nsunny.\nlikes(bob,george).\nparent(carol,george).\nlikes(bob,dave).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is happy.\nIf eve is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then george is a parent of frank.\nIf george is a parent of frank, then it is sunny.\nIf it is sunny, then bob is happy.\nIf bob is happy, then book is wet.\nIf book is wet, then alice is a sibling of eve.\nIf george is hungry and book is small and george likes car, then ball is wet.\n\nAnd the following facts:\nit is sunny.\nbob likes george.\ncarol is a parent of george.\nbob likes dave.\n\nQUESTION:\nIs carol likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "happy(eve) :- sunny.\nsunny :- happy(eve).\nsibling(eve,frank) :- sunny.\nparent(george,frank) :- sibling(eve,frank).\nsunny :- parent(george,frank).\nhappy(bob) :- sunny.\nwet(book) :- happy(bob).\nsibling(alice,eve) :- wet(book).\nwet(ball) :- hungry(george), small(book), likes(george,car).\nlikes(bob,george).\nparent(carol,george).\nlikes(bob,dave).",
    "natural language": "You are given the following rules:\nIf it is sunny, then eve is happy.\nIf eve is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then george is a parent of frank.\nIf george is a parent of frank, then it is sunny.\nIf it is sunny, then bob is happy.\nIf bob is happy, then book is wet.\nIf book is wet, then alice is a sibling of eve.\nIf george is hungry and book is small and george likes car, then ball is wet.\n\nAnd the following facts:\nit is sunny.\nbob likes george.\ncarol is a parent of george.\nbob likes dave.\n\nOBSERVATION: alice is a sibling of eve is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,dave).",
    "c": "happy(eve) :- sunny.\nsunny :- happy(eve).\nsibling(eve,frank) :- sunny.\nparent(george,frank) :- sibling(eve,frank).\nsunny :- parent(george,frank).\nhappy(bob) :- sunny.\nwet(book) :- happy(bob).\nsibling(alice,eve) :- wet(book).\nwet(ball) :- hungry(george), small(book), likes(george,car).\nsunny.\nlikes(bob,george).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf it is sunny, then eve is happy.\nIf eve is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then george is a parent of frank.\nIf george is a parent of frank, then it is sunny.\nIf it is sunny, then bob is happy.\nIf bob is happy, then book is wet.\nIf book is wet, then alice is a sibling of eve.\nIf george is hungry and book is small and george likes car, then ball is wet.\n\nAnd the following facts:\nit is sunny.\nbob likes george.\ncarol is a parent of george.\nbob likes dave.\n\nOBSERVATION: alice is a sibling of eve is true.\n\nQUESTION:\nCould bob likes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(carol,george).",
    "c": "happy(eve) :- sunny.\nsunny :- happy(eve).\nsibling(eve,frank) :- sunny.\nparent(george,frank) :- sibling(eve,frank).\nsunny :- parent(george,frank).\nhappy(bob) :- sunny.\nwet(book) :- happy(bob).\nsibling(alice,eve) :- wet(book).\nwet(ball) :- hungry(george), small(book), likes(george,car).\nsunny.\nlikes(bob,george).\nlikes(bob,dave).",
    "natural language": "You are given the following rules:\nIf it is sunny, then eve is happy.\nIf eve is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then george is a parent of frank.\nIf george is a parent of frank, then it is sunny.\nIf it is sunny, then bob is happy.\nIf bob is happy, then book is wet.\nIf book is wet, then alice is a sibling of eve.\nIf george is hungry and book is small and george likes car, then ball is wet.\n\nAnd the following facts:\nit is sunny.\nbob likes george.\ncarol is a parent of george.\nbob likes dave.\n\nOBSERVATION: alice is a sibling of eve is true.\n\nQUESTION:\nCould carol is a parent of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "big(apple).",
    "c": "wet(book) :- friend(eve,alice).\nhungry(dave) :- wet(book).\nwet(apple) :- hungry(dave).\ntall(carol) :- wet(apple).\nhot :- tall(carol).\nbig(ball) :- hot.\nsunny :- big(ball).\nhappy(george) :- sunny.\nsunny :- sibling(carol,carol).\nfriend(eve,alice).\nbig(apple).\nsibling(eve,bob).\nwet(car).",
    "natural language": "You are given the following information:\nIf eve is a friend of alice, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf apple is wet, then carol is tall.\nIf carol is tall, then it is hot.\nIf it is hot, then ball is big.\nIf ball is big, then it is sunny.\nIf it is sunny, then george is happy.\nIf carol is a sibling of carol, then it is sunny.\n\nAnd the following facts:\neve is a friend of alice.\napple is big.\neve is a sibling of bob.\ncar is wet.\n\nQUESTION:\nIs apple is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "wet(book) :- friend(eve,alice).\nhungry(dave) :- wet(book).\nwet(apple) :- hungry(dave).\ntall(carol) :- wet(apple).\nhot :- tall(carol).\nbig(ball) :- hot.\nsunny :- big(ball).\nhappy(george) :- sunny.\nsunny :- sibling(carol,carol).\nfriend(eve,alice).\nbig(apple).\nsibling(eve,bob).\nwet(car).",
    "natural language": "You are given the following information:\nIf eve is a friend of alice, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf apple is wet, then carol is tall.\nIf carol is tall, then it is hot.\nIf it is hot, then ball is big.\nIf ball is big, then it is sunny.\nIf it is sunny, then george is happy.\nIf carol is a sibling of carol, then it is sunny.\n\nAnd the following facts:\neve is a friend of alice.\napple is big.\neve is a sibling of bob.\ncar is wet.\n\nQUESTION:\nIs it is hot true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,bob).",
    "c": "wet(book) :- friend(eve,alice).\nhungry(dave) :- wet(book).\nwet(apple) :- hungry(dave).\ntall(carol) :- wet(apple).\nhot :- tall(carol).\nbig(ball) :- hot.\nsunny :- big(ball).\nhappy(george) :- sunny.\nsunny :- sibling(carol,carol).\nfriend(eve,alice).\nbig(apple).\nsibling(eve,bob).\nwet(car).",
    "natural language": "You are given the following information:\nIf eve is a friend of alice, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf apple is wet, then carol is tall.\nIf carol is tall, then it is hot.\nIf it is hot, then ball is big.\nIf ball is big, then it is sunny.\nIf it is sunny, then george is happy.\nIf carol is a sibling of carol, then it is sunny.\n\nAnd the following facts:\neve is a friend of alice.\napple is big.\neve is a sibling of bob.\ncar is wet.\n\nQUESTION:\nIs eve is a sibling of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,alice).",
    "c": "wet(book) :- friend(eve,alice).\nhungry(dave) :- wet(book).\nwet(apple) :- hungry(dave).\ntall(carol) :- wet(apple).\nhot :- tall(carol).\nbig(ball) :- hot.\nsunny :- big(ball).\nhappy(george) :- sunny.\nsunny :- sibling(carol,carol).\nfriend(eve,alice).\nbig(apple).\nsibling(eve,bob).\nwet(car).",
    "natural language": "You are given the following information:\nIf eve is a friend of alice, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf apple is wet, then carol is tall.\nIf carol is tall, then it is hot.\nIf it is hot, then ball is big.\nIf ball is big, then it is sunny.\nIf it is sunny, then george is happy.\nIf carol is a sibling of carol, then it is sunny.\n\nAnd the following facts:\neve is a friend of alice.\napple is big.\neve is a sibling of bob.\ncar is wet.\n\nQUESTION:\nIs bob is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "wet(book) :- friend(eve,alice).\nhungry(dave) :- wet(book).\nwet(apple) :- hungry(dave).\ntall(carol) :- wet(apple).\nhot :- tall(carol).\nbig(ball) :- hot.\nsunny :- big(ball).\nhappy(george) :- sunny.\nsunny :- sibling(carol,carol).\nfriend(eve,alice).\nbig(apple).\nsibling(eve,bob).\nwet(car).",
    "natural language": "You are given the following information:\nIf eve is a friend of alice, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf apple is wet, then carol is tall.\nIf carol is tall, then it is hot.\nIf it is hot, then ball is big.\nIf ball is big, then it is sunny.\nIf it is sunny, then george is happy.\nIf carol is a sibling of carol, then it is sunny.\n\nAnd the following facts:\neve is a friend of alice.\napple is big.\neve is a sibling of bob.\ncar is wet.\n\nQUESTION:\nIs alice is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "wet(book) :- friend(eve,alice).\nhungry(dave) :- wet(book).\nwet(apple) :- hungry(dave).\ntall(carol) :- wet(apple).\nhot :- tall(carol).\nbig(ball) :- hot.\nsunny :- big(ball).\nhappy(george) :- sunny.\nsunny :- sibling(carol,carol).\nbig(apple).\nsibling(eve,bob).\nwet(car).",
    "natural language": "You are given the following rules:\nIf eve is a friend of alice, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf apple is wet, then carol is tall.\nIf carol is tall, then it is hot.\nIf it is hot, then ball is big.\nIf ball is big, then it is sunny.\nIf it is sunny, then george is happy.\nIf carol is a sibling of carol, then it is sunny.\n\nAnd the following facts:\neve is a friend of alice.\napple is big.\neve is a sibling of bob.\ncar is wet.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould eve is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "wet(book) :- friend(eve,alice).\nhungry(dave) :- wet(book).\nwet(apple) :- hungry(dave).\ntall(carol) :- wet(apple).\nhot :- tall(carol).\nbig(ball) :- hot.\nsunny :- big(ball).\nhappy(george) :- sunny.\nsunny :- sibling(carol,carol).\nfriend(eve,alice).\nbig(apple).\nsibling(eve,bob).",
    "natural language": "You are given the following rules:\nIf eve is a friend of alice, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf apple is wet, then carol is tall.\nIf carol is tall, then it is hot.\nIf it is hot, then ball is big.\nIf ball is big, then it is sunny.\nIf it is sunny, then george is happy.\nIf carol is a sibling of carol, then it is sunny.\n\nAnd the following facts:\neve is a friend of alice.\napple is big.\neve is a sibling of bob.\ncar is wet.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould car is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(eve,bob).",
    "c": "wet(book) :- friend(eve,alice).\nhungry(dave) :- wet(book).\nwet(apple) :- hungry(dave).\ntall(carol) :- wet(apple).\nhot :- tall(carol).\nbig(ball) :- hot.\nsunny :- big(ball).\nhappy(george) :- sunny.\nsunny :- sibling(carol,carol).\nfriend(eve,alice).\nbig(apple).\nwet(car).",
    "natural language": "You are given the following rules:\nIf eve is a friend of alice, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf apple is wet, then carol is tall.\nIf carol is tall, then it is hot.\nIf it is hot, then ball is big.\nIf ball is big, then it is sunny.\nIf it is sunny, then george is happy.\nIf carol is a sibling of carol, then it is sunny.\n\nAnd the following facts:\neve is a friend of alice.\napple is big.\neve is a sibling of bob.\ncar is wet.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould eve is a sibling of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "sad(dave) :- parent(alice,frank).\nsunny :- sad(dave).\nbig(phone) :- sunny.\nsmall(car) :- big(phone).\nparent(dave,alice) :- small(car).\nlikes(alice,ball) :- parent(dave,alice).\ntall(george) :- likes(alice,ball).\ntall(alice) :- tall(george).\nenemy(alice,frank) :- tall(alice).\nsmall(phone) :- enemy(alice,frank).\nparent(alice,frank).\nenemy(alice,bob).\nenemy(george,carol).\nsad(frank).",
    "natural language": "You are given the following information:\nIf alice is a parent of frank, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then phone is big.\nIf phone is big, then car is small.\nIf car is small, then dave is a parent of alice.\nIf dave is a parent of alice, then alice likes ball.\nIf alice likes ball, then george is tall.\nIf george is tall, then alice is tall.\nIf alice is tall, then alice is an enemy of frank.\nIf alice is an enemy of frank, then phone is small.\n\nAnd the following facts:\nalice is a parent of frank.\nalice is an enemy of bob.\ngeorge is an enemy of carol.\nfrank is sad.\n\nQUESTION:\nIs george is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "sad(dave) :- parent(alice,frank).\nsunny :- sad(dave).\nbig(phone) :- sunny.\nsmall(car) :- big(phone).\nparent(dave,alice) :- small(car).\nlikes(alice,ball) :- parent(dave,alice).\ntall(george) :- likes(alice,ball).\ntall(alice) :- tall(george).\nenemy(alice,frank) :- tall(alice).\nsmall(phone) :- enemy(alice,frank).\nparent(alice,frank).\nenemy(alice,bob).\nenemy(george,carol).\nsad(frank).",
    "natural language": "You are given the following information:\nIf alice is a parent of frank, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then phone is big.\nIf phone is big, then car is small.\nIf car is small, then dave is a parent of alice.\nIf dave is a parent of alice, then alice likes ball.\nIf alice likes ball, then george is tall.\nIf george is tall, then alice is tall.\nIf alice is tall, then alice is an enemy of frank.\nIf alice is an enemy of frank, then phone is small.\n\nAnd the following facts:\nalice is a parent of frank.\nalice is an enemy of bob.\ngeorge is an enemy of carol.\nfrank is sad.\n\nQUESTION:\nIs frank is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(phone).",
    "c": "sad(dave) :- parent(alice,frank).\nsunny :- sad(dave).\nbig(phone) :- sunny.\nsmall(car) :- big(phone).\nparent(dave,alice) :- small(car).\nlikes(alice,ball) :- parent(dave,alice).\ntall(george) :- likes(alice,ball).\ntall(alice) :- tall(george).\nenemy(alice,frank) :- tall(alice).\nsmall(phone) :- enemy(alice,frank).\nparent(alice,frank).\nenemy(alice,bob).\nenemy(george,carol).\nsad(frank).",
    "natural language": "You are given the following information:\nIf alice is a parent of frank, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then phone is big.\nIf phone is big, then car is small.\nIf car is small, then dave is a parent of alice.\nIf dave is a parent of alice, then alice likes ball.\nIf alice likes ball, then george is tall.\nIf george is tall, then alice is tall.\nIf alice is tall, then alice is an enemy of frank.\nIf alice is an enemy of frank, then phone is small.\n\nAnd the following facts:\nalice is a parent of frank.\nalice is an enemy of bob.\ngeorge is an enemy of carol.\nfrank is sad.\n\nQUESTION:\nIs phone is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,george).",
    "c": "sad(dave) :- parent(alice,frank).\nsunny :- sad(dave).\nbig(phone) :- sunny.\nsmall(car) :- big(phone).\nparent(dave,alice) :- small(car).\nlikes(alice,ball) :- parent(dave,alice).\ntall(george) :- likes(alice,ball).\ntall(alice) :- tall(george).\nenemy(alice,frank) :- tall(alice).\nsmall(phone) :- enemy(alice,frank).\nparent(alice,frank).\nenemy(alice,bob).\nenemy(george,carol).\nsad(frank).",
    "natural language": "You are given the following information:\nIf alice is a parent of frank, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then phone is big.\nIf phone is big, then car is small.\nIf car is small, then dave is a parent of alice.\nIf dave is a parent of alice, then alice likes ball.\nIf alice likes ball, then george is tall.\nIf george is tall, then alice is tall.\nIf alice is tall, then alice is an enemy of frank.\nIf alice is an enemy of frank, then phone is small.\n\nAnd the following facts:\nalice is a parent of frank.\nalice is an enemy of bob.\ngeorge is an enemy of carol.\nfrank is sad.\n\nQUESTION:\nIs alice is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "sad(dave) :- parent(alice,frank).\nsunny :- sad(dave).\nbig(phone) :- sunny.\nsmall(car) :- big(phone).\nparent(dave,alice) :- small(car).\nlikes(alice,ball) :- parent(dave,alice).\ntall(george) :- likes(alice,ball).\ntall(alice) :- tall(george).\nenemy(alice,frank) :- tall(alice).\nsmall(phone) :- enemy(alice,frank).\nparent(alice,frank).\nenemy(alice,bob).\nenemy(george,carol).\nsad(frank).",
    "natural language": "You are given the following information:\nIf alice is a parent of frank, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then phone is big.\nIf phone is big, then car is small.\nIf car is small, then dave is a parent of alice.\nIf dave is a parent of alice, then alice likes ball.\nIf alice likes ball, then george is tall.\nIf george is tall, then alice is tall.\nIf alice is tall, then alice is an enemy of frank.\nIf alice is an enemy of frank, then phone is small.\n\nAnd the following facts:\nalice is a parent of frank.\nalice is an enemy of bob.\ngeorge is an enemy of carol.\nfrank is sad.\n\nQUESTION:\nIs dave is a parent of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,frank).",
    "c": "sad(dave) :- parent(alice,frank).\nsunny :- sad(dave).\nbig(phone) :- sunny.\nsmall(car) :- big(phone).\nparent(dave,alice) :- small(car).\nlikes(alice,ball) :- parent(dave,alice).\ntall(george) :- likes(alice,ball).\ntall(alice) :- tall(george).\nenemy(alice,frank) :- tall(alice).\nsmall(phone) :- enemy(alice,frank).\nenemy(alice,bob).\nenemy(george,carol).\nsad(frank).",
    "natural language": "You are given the following rules:\nIf alice is a parent of frank, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then phone is big.\nIf phone is big, then car is small.\nIf car is small, then dave is a parent of alice.\nIf dave is a parent of alice, then alice likes ball.\nIf alice likes ball, then george is tall.\nIf george is tall, then alice is tall.\nIf alice is tall, then alice is an enemy of frank.\nIf alice is an enemy of frank, then phone is small.\n\nAnd the following facts:\nalice is a parent of frank.\nalice is an enemy of bob.\ngeorge is an enemy of carol.\nfrank is sad.\n\nOBSERVATION: phone is small is true.\n\nQUESTION:\nCould alice is a parent of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,bob).",
    "c": "sad(dave) :- parent(alice,frank).\nsunny :- sad(dave).\nbig(phone) :- sunny.\nsmall(car) :- big(phone).\nparent(dave,alice) :- small(car).\nlikes(alice,ball) :- parent(dave,alice).\ntall(george) :- likes(alice,ball).\ntall(alice) :- tall(george).\nenemy(alice,frank) :- tall(alice).\nsmall(phone) :- enemy(alice,frank).\nparent(alice,frank).\nenemy(george,carol).\nsad(frank).",
    "natural language": "You are given the following rules:\nIf alice is a parent of frank, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then phone is big.\nIf phone is big, then car is small.\nIf car is small, then dave is a parent of alice.\nIf dave is a parent of alice, then alice likes ball.\nIf alice likes ball, then george is tall.\nIf george is tall, then alice is tall.\nIf alice is tall, then alice is an enemy of frank.\nIf alice is an enemy of frank, then phone is small.\n\nAnd the following facts:\nalice is a parent of frank.\nalice is an enemy of bob.\ngeorge is an enemy of carol.\nfrank is sad.\n\nOBSERVATION: phone is small is true.\n\nQUESTION:\nCould alice is an enemy of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(george,carol).",
    "c": "sad(dave) :- parent(alice,frank).\nsunny :- sad(dave).\nbig(phone) :- sunny.\nsmall(car) :- big(phone).\nparent(dave,alice) :- small(car).\nlikes(alice,ball) :- parent(dave,alice).\ntall(george) :- likes(alice,ball).\ntall(alice) :- tall(george).\nenemy(alice,frank) :- tall(alice).\nsmall(phone) :- enemy(alice,frank).\nparent(alice,frank).\nenemy(alice,bob).\nsad(frank).",
    "natural language": "You are given the following rules:\nIf alice is a parent of frank, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then phone is big.\nIf phone is big, then car is small.\nIf car is small, then dave is a parent of alice.\nIf dave is a parent of alice, then alice likes ball.\nIf alice likes ball, then george is tall.\nIf george is tall, then alice is tall.\nIf alice is tall, then alice is an enemy of frank.\nIf alice is an enemy of frank, then phone is small.\n\nAnd the following facts:\nalice is a parent of frank.\nalice is an enemy of bob.\ngeorge is an enemy of carol.\nfrank is sad.\n\nOBSERVATION: phone is small is true.\n\nQUESTION:\nCould george is an enemy of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "cold :- big(apple).\nhungry(dave) :- cold.\nenemy(dave,george) :- hungry(dave).\nenemy(dave,alice) :- enemy(dave,george).\nsad(frank) :- enemy(dave,alice).\nsmall(ball) :- sad(frank).\nwet(pencil) :- small(ball).\nsibling(dave,eve) :- wet(pencil).\ndislikes(dave,alice) :- sibling(dave,eve).\ncold :- dislikes(dave,alice).\nbig(apple).\nenemy(frank,dave).\nwet(phone).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nIf apple is big, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is an enemy of george.\nIf dave is an enemy of george, then dave is an enemy of alice.\nIf dave is an enemy of alice, then frank is sad.\nIf frank is sad, then ball is small.\nIf ball is small, then pencil is wet.\nIf pencil is wet, then dave is a sibling of eve.\nIf dave is a sibling of eve, then dave dislikes alice.\nIf dave dislikes alice, then it is cold.\n\nAnd the following facts:\napple is big.\nfrank is an enemy of dave.\nphone is wet.\ncarol dislikes pencil.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(dave).",
    "c": "cold :- big(apple).\nhungry(dave) :- cold.\nenemy(dave,george) :- hungry(dave).\nenemy(dave,alice) :- enemy(dave,george).\nsad(frank) :- enemy(dave,alice).\nsmall(ball) :- sad(frank).\nwet(pencil) :- small(ball).\nsibling(dave,eve) :- wet(pencil).\ndislikes(dave,alice) :- sibling(dave,eve).\ncold :- dislikes(dave,alice).\nbig(apple).\nenemy(frank,dave).\nwet(phone).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nIf apple is big, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is an enemy of george.\nIf dave is an enemy of george, then dave is an enemy of alice.\nIf dave is an enemy of alice, then frank is sad.\nIf frank is sad, then ball is small.\nIf ball is small, then pencil is wet.\nIf pencil is wet, then dave is a sibling of eve.\nIf dave is a sibling of eve, then dave dislikes alice.\nIf dave dislikes alice, then it is cold.\n\nAnd the following facts:\napple is big.\nfrank is an enemy of dave.\nphone is wet.\ncarol dislikes pencil.\n\nQUESTION:\nIs dave is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "cold :- big(apple).\nhungry(dave) :- cold.\nenemy(dave,george) :- hungry(dave).\nenemy(dave,alice) :- enemy(dave,george).\nsad(frank) :- enemy(dave,alice).\nsmall(ball) :- sad(frank).\nwet(pencil) :- small(ball).\nsibling(dave,eve) :- wet(pencil).\ndislikes(dave,alice) :- sibling(dave,eve).\ncold :- dislikes(dave,alice).\nbig(apple).\nenemy(frank,dave).\nwet(phone).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nIf apple is big, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is an enemy of george.\nIf dave is an enemy of george, then dave is an enemy of alice.\nIf dave is an enemy of alice, then frank is sad.\nIf frank is sad, then ball is small.\nIf ball is small, then pencil is wet.\nIf pencil is wet, then dave is a sibling of eve.\nIf dave is a sibling of eve, then dave dislikes alice.\nIf dave dislikes alice, then it is cold.\n\nAnd the following facts:\napple is big.\nfrank is an enemy of dave.\nphone is wet.\ncarol dislikes pencil.\n\nQUESTION:\nIs dave is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(book).",
    "c": "cold :- big(apple).\nhungry(dave) :- cold.\nenemy(dave,george) :- hungry(dave).\nenemy(dave,alice) :- enemy(dave,george).\nsad(frank) :- enemy(dave,alice).\nsmall(ball) :- sad(frank).\nwet(pencil) :- small(ball).\nsibling(dave,eve) :- wet(pencil).\ndislikes(dave,alice) :- sibling(dave,eve).\ncold :- dislikes(dave,alice).\nbig(apple).\nenemy(frank,dave).\nwet(phone).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nIf apple is big, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is an enemy of george.\nIf dave is an enemy of george, then dave is an enemy of alice.\nIf dave is an enemy of alice, then frank is sad.\nIf frank is sad, then ball is small.\nIf ball is small, then pencil is wet.\nIf pencil is wet, then dave is a sibling of eve.\nIf dave is a sibling of eve, then dave dislikes alice.\nIf dave dislikes alice, then it is cold.\n\nAnd the following facts:\napple is big.\nfrank is an enemy of dave.\nphone is wet.\ncarol dislikes pencil.\n\nQUESTION:\nIs book is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,george).",
    "c": "cold :- big(apple).\nhungry(dave) :- cold.\nenemy(dave,george) :- hungry(dave).\nenemy(dave,alice) :- enemy(dave,george).\nsad(frank) :- enemy(dave,alice).\nsmall(ball) :- sad(frank).\nwet(pencil) :- small(ball).\nsibling(dave,eve) :- wet(pencil).\ndislikes(dave,alice) :- sibling(dave,eve).\ncold :- dislikes(dave,alice).\nbig(apple).\nenemy(frank,dave).\nwet(phone).\ndislikes(carol,pencil).",
    "natural language": "You are given the following information:\nIf apple is big, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is an enemy of george.\nIf dave is an enemy of george, then dave is an enemy of alice.\nIf dave is an enemy of alice, then frank is sad.\nIf frank is sad, then ball is small.\nIf ball is small, then pencil is wet.\nIf pencil is wet, then dave is a sibling of eve.\nIf dave is a sibling of eve, then dave dislikes alice.\nIf dave dislikes alice, then it is cold.\n\nAnd the following facts:\napple is big.\nfrank is an enemy of dave.\nphone is wet.\ncarol dislikes pencil.\n\nQUESTION:\nIs alice dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(apple).",
    "c": "cold :- big(apple).\nhungry(dave) :- cold.\nenemy(dave,george) :- hungry(dave).\nenemy(dave,alice) :- enemy(dave,george).\nsad(frank) :- enemy(dave,alice).\nsmall(ball) :- sad(frank).\nwet(pencil) :- small(ball).\nsibling(dave,eve) :- wet(pencil).\ndislikes(dave,alice) :- sibling(dave,eve).\ncold :- dislikes(dave,alice).\nenemy(frank,dave).\nwet(phone).\ndislikes(carol,pencil).",
    "natural language": "You are given the following rules:\nIf apple is big, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is an enemy of george.\nIf dave is an enemy of george, then dave is an enemy of alice.\nIf dave is an enemy of alice, then frank is sad.\nIf frank is sad, then ball is small.\nIf ball is small, then pencil is wet.\nIf pencil is wet, then dave is a sibling of eve.\nIf dave is a sibling of eve, then dave dislikes alice.\nIf dave dislikes alice, then it is cold.\n\nAnd the following facts:\napple is big.\nfrank is an enemy of dave.\nphone is wet.\ncarol dislikes pencil.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould apple is big be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(carol,pencil).",
    "c": "cold :- big(apple).\nhungry(dave) :- cold.\nenemy(dave,george) :- hungry(dave).\nenemy(dave,alice) :- enemy(dave,george).\nsad(frank) :- enemy(dave,alice).\nsmall(ball) :- sad(frank).\nwet(pencil) :- small(ball).\nsibling(dave,eve) :- wet(pencil).\ndislikes(dave,alice) :- sibling(dave,eve).\ncold :- dislikes(dave,alice).\nbig(apple).\nenemy(frank,dave).\nwet(phone).",
    "natural language": "You are given the following rules:\nIf apple is big, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is an enemy of george.\nIf dave is an enemy of george, then dave is an enemy of alice.\nIf dave is an enemy of alice, then frank is sad.\nIf frank is sad, then ball is small.\nIf ball is small, then pencil is wet.\nIf pencil is wet, then dave is a sibling of eve.\nIf dave is a sibling of eve, then dave dislikes alice.\nIf dave dislikes alice, then it is cold.\n\nAnd the following facts:\napple is big.\nfrank is an enemy of dave.\nphone is wet.\ncarol dislikes pencil.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould carol dislikes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "cold :- big(apple).\nhungry(dave) :- cold.\nenemy(dave,george) :- hungry(dave).\nenemy(dave,alice) :- enemy(dave,george).\nsad(frank) :- enemy(dave,alice).\nsmall(ball) :- sad(frank).\nwet(pencil) :- small(ball).\nsibling(dave,eve) :- wet(pencil).\ndislikes(dave,alice) :- sibling(dave,eve).\ncold :- dislikes(dave,alice).\nbig(apple).\nenemy(frank,dave).\ndislikes(carol,pencil).",
    "natural language": "You are given the following rules:\nIf apple is big, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is an enemy of george.\nIf dave is an enemy of george, then dave is an enemy of alice.\nIf dave is an enemy of alice, then frank is sad.\nIf frank is sad, then ball is small.\nIf ball is small, then pencil is wet.\nIf pencil is wet, then dave is a sibling of eve.\nIf dave is a sibling of eve, then dave dislikes alice.\nIf dave dislikes alice, then it is cold.\n\nAnd the following facts:\napple is big.\nfrank is an enemy of dave.\nphone is wet.\ncarol dislikes pencil.\n\nOBSERVATION: it is cold is true.\n\nQUESTION:\nCould phone is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,carol).",
    "c": "owns(frank,car) :- sad(alice).\nsad(bob) :- owns(frank,car).\nfriend(dave,dave) :- friend(george,frank), hot.\nsmall(book) :- small(phone), dislikes(george,dave).\nsunny :- small(apple), friend(alice,eve).\nparent(carol,bob) :- enemy(bob,frank).\nsunny :- hot, happy(bob).\nfriend(alice,carol) :- happy(eve), friend(eve,bob), owns(george,phone).\ndislikes(george,phone) :- cold, parent(dave,carol), parent(carol,george).\nsad(alice).\nsmall(car).\nhappy(alice).\nparent(george,eve).\nparent(george,bob).\ndislikes(george,carol).\ndislikes(george,ball).\ndislikes(bob,eve).",
    "natural language": "You are given the following information:\nIf alice is sad, then frank owns car.\nIf frank owns car, then bob is sad.\nIf george is a friend of frank and it is hot, then dave is a friend of dave.\nIf phone is small and george dislikes dave, then book is small.\nIf apple is small and alice is a friend of eve, then it is sunny.\nIf bob is an enemy of frank, then carol is a parent of bob.\nIf it is hot and bob is happy, then it is sunny.\nIf eve is happy and eve is a friend of bob and george owns phone, then alice is a friend of carol.\nIf it is cold and dave is a parent of carol and carol is a parent of george, then george dislikes phone.\n\nAnd the following facts:\nalice is sad.\ncar is small.\nalice is happy.\ngeorge is a parent of eve.\ngeorge is a parent of bob.\ngeorge dislikes carol.\ngeorge dislikes ball.\nbob dislikes eve.\n\nQUESTION:\nIs george dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,ball).",
    "c": "owns(frank,car) :- sad(alice).\nsad(bob) :- owns(frank,car).\nfriend(dave,dave) :- friend(george,frank), hot.\nsmall(book) :- small(phone), dislikes(george,dave).\nsunny :- small(apple), friend(alice,eve).\nparent(carol,bob) :- enemy(bob,frank).\nsunny :- hot, happy(bob).\nfriend(alice,carol) :- happy(eve), friend(eve,bob), owns(george,phone).\ndislikes(george,phone) :- cold, parent(dave,carol), parent(carol,george).\nsad(alice).\nsmall(car).\nhappy(alice).\nparent(george,eve).\nparent(george,bob).\ndislikes(george,carol).\ndislikes(george,ball).\ndislikes(bob,eve).",
    "natural language": "You are given the following information:\nIf alice is sad, then frank owns car.\nIf frank owns car, then bob is sad.\nIf george is a friend of frank and it is hot, then dave is a friend of dave.\nIf phone is small and george dislikes dave, then book is small.\nIf apple is small and alice is a friend of eve, then it is sunny.\nIf bob is an enemy of frank, then carol is a parent of bob.\nIf it is hot and bob is happy, then it is sunny.\nIf eve is happy and eve is a friend of bob and george owns phone, then alice is a friend of carol.\nIf it is cold and dave is a parent of carol and carol is a parent of george, then george dislikes phone.\n\nAnd the following facts:\nalice is sad.\ncar is small.\nalice is happy.\ngeorge is a parent of eve.\ngeorge is a parent of bob.\ngeorge dislikes carol.\ngeorge dislikes ball.\nbob dislikes eve.\n\nQUESTION:\nIs george dislikes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "owns(frank,car) :- sad(alice).\nsad(bob) :- owns(frank,car).\nfriend(dave,dave) :- friend(george,frank), hot.\nsmall(book) :- small(phone), dislikes(george,dave).\nsunny :- small(apple), friend(alice,eve).\nparent(carol,bob) :- enemy(bob,frank).\nsunny :- hot, happy(bob).\nfriend(alice,carol) :- happy(eve), friend(eve,bob), owns(george,phone).\ndislikes(george,phone) :- cold, parent(dave,carol), parent(carol,george).\nsad(alice).\nsmall(car).\nhappy(alice).\nparent(george,eve).\nparent(george,bob).\ndislikes(george,carol).\ndislikes(george,ball).\ndislikes(bob,eve).",
    "natural language": "You are given the following information:\nIf alice is sad, then frank owns car.\nIf frank owns car, then bob is sad.\nIf george is a friend of frank and it is hot, then dave is a friend of dave.\nIf phone is small and george dislikes dave, then book is small.\nIf apple is small and alice is a friend of eve, then it is sunny.\nIf bob is an enemy of frank, then carol is a parent of bob.\nIf it is hot and bob is happy, then it is sunny.\nIf eve is happy and eve is a friend of bob and george owns phone, then alice is a friend of carol.\nIf it is cold and dave is a parent of carol and carol is a parent of george, then george dislikes phone.\n\nAnd the following facts:\nalice is sad.\ncar is small.\nalice is happy.\ngeorge is a parent of eve.\ngeorge is a parent of bob.\ngeorge dislikes carol.\ngeorge dislikes ball.\nbob dislikes eve.\n\nQUESTION:\nIs frank owns car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,ball).",
    "c": "owns(frank,car) :- sad(alice).\nsad(bob) :- owns(frank,car).\nfriend(dave,dave) :- friend(george,frank), hot.\nsmall(book) :- small(phone), dislikes(george,dave).\nsunny :- small(apple), friend(alice,eve).\nparent(carol,bob) :- enemy(bob,frank).\nsunny :- hot, happy(bob).\nfriend(alice,carol) :- happy(eve), friend(eve,bob), owns(george,phone).\ndislikes(george,phone) :- cold, parent(dave,carol), parent(carol,george).\nsad(alice).\nsmall(car).\nhappy(alice).\nparent(george,eve).\nparent(george,bob).\ndislikes(george,carol).\ndislikes(george,ball).\ndislikes(bob,eve).",
    "natural language": "You are given the following information:\nIf alice is sad, then frank owns car.\nIf frank owns car, then bob is sad.\nIf george is a friend of frank and it is hot, then dave is a friend of dave.\nIf phone is small and george dislikes dave, then book is small.\nIf apple is small and alice is a friend of eve, then it is sunny.\nIf bob is an enemy of frank, then carol is a parent of bob.\nIf it is hot and bob is happy, then it is sunny.\nIf eve is happy and eve is a friend of bob and george owns phone, then alice is a friend of carol.\nIf it is cold and dave is a parent of carol and carol is a parent of george, then george dislikes phone.\n\nAnd the following facts:\nalice is sad.\ncar is small.\nalice is happy.\ngeorge is a parent of eve.\ngeorge is a parent of bob.\ngeorge dislikes carol.\ngeorge dislikes ball.\nbob dislikes eve.\n\nQUESTION:\nIs alice owns ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,george).",
    "c": "owns(frank,car) :- sad(alice).\nsad(bob) :- owns(frank,car).\nfriend(dave,dave) :- friend(george,frank), hot.\nsmall(book) :- small(phone), dislikes(george,dave).\nsunny :- small(apple), friend(alice,eve).\nparent(carol,bob) :- enemy(bob,frank).\nsunny :- hot, happy(bob).\nfriend(alice,carol) :- happy(eve), friend(eve,bob), owns(george,phone).\ndislikes(george,phone) :- cold, parent(dave,carol), parent(carol,george).\nsad(alice).\nsmall(car).\nhappy(alice).\nparent(george,eve).\nparent(george,bob).\ndislikes(george,carol).\ndislikes(george,ball).\ndislikes(bob,eve).",
    "natural language": "You are given the following information:\nIf alice is sad, then frank owns car.\nIf frank owns car, then bob is sad.\nIf george is a friend of frank and it is hot, then dave is a friend of dave.\nIf phone is small and george dislikes dave, then book is small.\nIf apple is small and alice is a friend of eve, then it is sunny.\nIf bob is an enemy of frank, then carol is a parent of bob.\nIf it is hot and bob is happy, then it is sunny.\nIf eve is happy and eve is a friend of bob and george owns phone, then alice is a friend of carol.\nIf it is cold and dave is a parent of carol and carol is a parent of george, then george dislikes phone.\n\nAnd the following facts:\nalice is sad.\ncar is small.\nalice is happy.\ngeorge is a parent of eve.\ngeorge is a parent of bob.\ngeorge dislikes carol.\ngeorge dislikes ball.\nbob dislikes eve.\n\nQUESTION:\nIs alice is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(alice).",
    "c": "owns(frank,car) :- sad(alice).\nsad(bob) :- owns(frank,car).\nfriend(dave,dave) :- friend(george,frank), hot.\nsmall(book) :- small(phone), dislikes(george,dave).\nsunny :- small(apple), friend(alice,eve).\nparent(carol,bob) :- enemy(bob,frank).\nsunny :- hot, happy(bob).\nfriend(alice,carol) :- happy(eve), friend(eve,bob), owns(george,phone).\ndislikes(george,phone) :- cold, parent(dave,carol), parent(carol,george).\nsmall(car).\nhappy(alice).\nparent(george,eve).\nparent(george,bob).\ndislikes(george,carol).\ndislikes(george,ball).\ndislikes(bob,eve).",
    "natural language": "You are given the following rules:\nIf alice is sad, then frank owns car.\nIf frank owns car, then bob is sad.\nIf george is a friend of frank and it is hot, then dave is a friend of dave.\nIf phone is small and george dislikes dave, then book is small.\nIf apple is small and alice is a friend of eve, then it is sunny.\nIf bob is an enemy of frank, then carol is a parent of bob.\nIf it is hot and bob is happy, then it is sunny.\nIf eve is happy and eve is a friend of bob and george owns phone, then alice is a friend of carol.\nIf it is cold and dave is a parent of carol and carol is a parent of george, then george dislikes phone.\n\nAnd the following facts:\nalice is sad.\ncar is small.\nalice is happy.\ngeorge is a parent of eve.\ngeorge is a parent of bob.\ngeorge dislikes carol.\ngeorge dislikes ball.\nbob dislikes eve.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould alice is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(george,eve).",
    "c": "owns(frank,car) :- sad(alice).\nsad(bob) :- owns(frank,car).\nfriend(dave,dave) :- friend(george,frank), hot.\nsmall(book) :- small(phone), dislikes(george,dave).\nsunny :- small(apple), friend(alice,eve).\nparent(carol,bob) :- enemy(bob,frank).\nsunny :- hot, happy(bob).\nfriend(alice,carol) :- happy(eve), friend(eve,bob), owns(george,phone).\ndislikes(george,phone) :- cold, parent(dave,carol), parent(carol,george).\nsad(alice).\nsmall(car).\nhappy(alice).\nparent(george,bob).\ndislikes(george,carol).\ndislikes(george,ball).\ndislikes(bob,eve).",
    "natural language": "You are given the following rules:\nIf alice is sad, then frank owns car.\nIf frank owns car, then bob is sad.\nIf george is a friend of frank and it is hot, then dave is a friend of dave.\nIf phone is small and george dislikes dave, then book is small.\nIf apple is small and alice is a friend of eve, then it is sunny.\nIf bob is an enemy of frank, then carol is a parent of bob.\nIf it is hot and bob is happy, then it is sunny.\nIf eve is happy and eve is a friend of bob and george owns phone, then alice is a friend of carol.\nIf it is cold and dave is a parent of carol and carol is a parent of george, then george dislikes phone.\n\nAnd the following facts:\nalice is sad.\ncar is small.\nalice is happy.\ngeorge is a parent of eve.\ngeorge is a parent of bob.\ngeorge dislikes carol.\ngeorge dislikes ball.\nbob dislikes eve.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould george is a parent of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(car).",
    "c": "owns(frank,car) :- sad(alice).\nsad(bob) :- owns(frank,car).\nfriend(dave,dave) :- friend(george,frank), hot.\nsmall(book) :- small(phone), dislikes(george,dave).\nsunny :- small(apple), friend(alice,eve).\nparent(carol,bob) :- enemy(bob,frank).\nsunny :- hot, happy(bob).\nfriend(alice,carol) :- happy(eve), friend(eve,bob), owns(george,phone).\ndislikes(george,phone) :- cold, parent(dave,carol), parent(carol,george).\nsad(alice).\nhappy(alice).\nparent(george,eve).\nparent(george,bob).\ndislikes(george,carol).\ndislikes(george,ball).\ndislikes(bob,eve).",
    "natural language": "You are given the following rules:\nIf alice is sad, then frank owns car.\nIf frank owns car, then bob is sad.\nIf george is a friend of frank and it is hot, then dave is a friend of dave.\nIf phone is small and george dislikes dave, then book is small.\nIf apple is small and alice is a friend of eve, then it is sunny.\nIf bob is an enemy of frank, then carol is a parent of bob.\nIf it is hot and bob is happy, then it is sunny.\nIf eve is happy and eve is a friend of bob and george owns phone, then alice is a friend of carol.\nIf it is cold and dave is a parent of carol and carol is a parent of george, then george dislikes phone.\n\nAnd the following facts:\nalice is sad.\ncar is small.\nalice is happy.\ngeorge is a parent of eve.\ngeorge is a parent of bob.\ngeorge dislikes carol.\ngeorge dislikes ball.\nbob dislikes eve.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould car is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(frank,dave).",
    "c": "friend(frank,dave) :- friend(carol,eve).\nlikes(george,book) :- friend(frank,dave).\nsad(carol) :- sibling(alice,bob), dislikes(eve,phone).\nhungry(dave) :- hungry(frank), dislikes(dave,pencil), hot.\nhungry(george) :- sad(alice).\nsad(frank) :- parent(eve,carol), owns(eve,phone).\nwet(car) :- enemy(alice,eve), sunny, sibling(george,eve).\nsibling(dave,eve) :- sad(eve), friend(frank,carol), hungry(george).\nsibling(carol,eve) :- sibling(carol,frank).\nfriend(carol,eve).\nparent(dave,george).\nparent(eve,dave).\nenemy(eve,alice).\ndislikes(bob,alice).\ndislikes(frank,carol).\nowns(alice,ball).\nsibling(eve,frank).",
    "natural language": "You are given the following information:\nIf carol is a friend of eve, then frank is a friend of dave.\nIf frank is a friend of dave, then george likes book.\nIf alice is a sibling of bob and eve dislikes phone, then carol is sad.\nIf frank is hungry and dave dislikes pencil and it is hot, then dave is hungry.\nIf alice is sad, then george is hungry.\nIf eve is a parent of carol and eve owns phone, then frank is sad.\nIf alice is an enemy of eve and it is sunny and george is a sibling of eve, then car is wet.\nIf eve is sad and frank is a friend of carol and george is hungry, then dave is a sibling of eve.\nIf carol is a sibling of frank, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is a friend of eve.\ndave is a parent of george.\neve is a parent of dave.\neve is an enemy of alice.\nbob dislikes alice.\nfrank dislikes carol.\nalice owns ball.\neve is a sibling of frank.\n\nQUESTION:\nIs frank is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,book).",
    "c": "friend(frank,dave) :- friend(carol,eve).\nlikes(george,book) :- friend(frank,dave).\nsad(carol) :- sibling(alice,bob), dislikes(eve,phone).\nhungry(dave) :- hungry(frank), dislikes(dave,pencil), hot.\nhungry(george) :- sad(alice).\nsad(frank) :- parent(eve,carol), owns(eve,phone).\nwet(car) :- enemy(alice,eve), sunny, sibling(george,eve).\nsibling(dave,eve) :- sad(eve), friend(frank,carol), hungry(george).\nsibling(carol,eve) :- sibling(carol,frank).\nfriend(carol,eve).\nparent(dave,george).\nparent(eve,dave).\nenemy(eve,alice).\ndislikes(bob,alice).\ndislikes(frank,carol).\nowns(alice,ball).\nsibling(eve,frank).",
    "natural language": "You are given the following information:\nIf carol is a friend of eve, then frank is a friend of dave.\nIf frank is a friend of dave, then george likes book.\nIf alice is a sibling of bob and eve dislikes phone, then carol is sad.\nIf frank is hungry and dave dislikes pencil and it is hot, then dave is hungry.\nIf alice is sad, then george is hungry.\nIf eve is a parent of carol and eve owns phone, then frank is sad.\nIf alice is an enemy of eve and it is sunny and george is a sibling of eve, then car is wet.\nIf eve is sad and frank is a friend of carol and george is hungry, then dave is a sibling of eve.\nIf carol is a sibling of frank, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is a friend of eve.\ndave is a parent of george.\neve is a parent of dave.\neve is an enemy of alice.\nbob dislikes alice.\nfrank dislikes carol.\nalice owns ball.\neve is a sibling of frank.\n\nQUESTION:\nIs george likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,frank).",
    "c": "friend(frank,dave) :- friend(carol,eve).\nlikes(george,book) :- friend(frank,dave).\nsad(carol) :- sibling(alice,bob), dislikes(eve,phone).\nhungry(dave) :- hungry(frank), dislikes(dave,pencil), hot.\nhungry(george) :- sad(alice).\nsad(frank) :- parent(eve,carol), owns(eve,phone).\nwet(car) :- enemy(alice,eve), sunny, sibling(george,eve).\nsibling(dave,eve) :- sad(eve), friend(frank,carol), hungry(george).\nsibling(carol,eve) :- sibling(carol,frank).\nfriend(carol,eve).\nparent(dave,george).\nparent(eve,dave).\nenemy(eve,alice).\ndislikes(bob,alice).\ndislikes(frank,carol).\nowns(alice,ball).\nsibling(eve,frank).",
    "natural language": "You are given the following information:\nIf carol is a friend of eve, then frank is a friend of dave.\nIf frank is a friend of dave, then george likes book.\nIf alice is a sibling of bob and eve dislikes phone, then carol is sad.\nIf frank is hungry and dave dislikes pencil and it is hot, then dave is hungry.\nIf alice is sad, then george is hungry.\nIf eve is a parent of carol and eve owns phone, then frank is sad.\nIf alice is an enemy of eve and it is sunny and george is a sibling of eve, then car is wet.\nIf eve is sad and frank is a friend of carol and george is hungry, then dave is a sibling of eve.\nIf carol is a sibling of frank, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is a friend of eve.\ndave is a parent of george.\neve is a parent of dave.\neve is an enemy of alice.\nbob dislikes alice.\nfrank dislikes carol.\nalice owns ball.\neve is a sibling of frank.\n\nQUESTION:\nIs eve is a sibling of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,carol).",
    "c": "friend(frank,dave) :- friend(carol,eve).\nlikes(george,book) :- friend(frank,dave).\nsad(carol) :- sibling(alice,bob), dislikes(eve,phone).\nhungry(dave) :- hungry(frank), dislikes(dave,pencil), hot.\nhungry(george) :- sad(alice).\nsad(frank) :- parent(eve,carol), owns(eve,phone).\nwet(car) :- enemy(alice,eve), sunny, sibling(george,eve).\nsibling(dave,eve) :- sad(eve), friend(frank,carol), hungry(george).\nsibling(carol,eve) :- sibling(carol,frank).\nfriend(carol,eve).\nparent(dave,george).\nparent(eve,dave).\nenemy(eve,alice).\ndislikes(bob,alice).\ndislikes(frank,carol).\nowns(alice,ball).\nsibling(eve,frank).",
    "natural language": "You are given the following information:\nIf carol is a friend of eve, then frank is a friend of dave.\nIf frank is a friend of dave, then george likes book.\nIf alice is a sibling of bob and eve dislikes phone, then carol is sad.\nIf frank is hungry and dave dislikes pencil and it is hot, then dave is hungry.\nIf alice is sad, then george is hungry.\nIf eve is a parent of carol and eve owns phone, then frank is sad.\nIf alice is an enemy of eve and it is sunny and george is a sibling of eve, then car is wet.\nIf eve is sad and frank is a friend of carol and george is hungry, then dave is a sibling of eve.\nIf carol is a sibling of frank, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is a friend of eve.\ndave is a parent of george.\neve is a parent of dave.\neve is an enemy of alice.\nbob dislikes alice.\nfrank dislikes carol.\nalice owns ball.\neve is a sibling of frank.\n\nQUESTION:\nIs bob dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "friend(frank,dave) :- friend(carol,eve).\nlikes(george,book) :- friend(frank,dave).\nsad(carol) :- sibling(alice,bob), dislikes(eve,phone).\nhungry(dave) :- hungry(frank), dislikes(dave,pencil), hot.\nhungry(george) :- sad(alice).\nsad(frank) :- parent(eve,carol), owns(eve,phone).\nwet(car) :- enemy(alice,eve), sunny, sibling(george,eve).\nsibling(dave,eve) :- sad(eve), friend(frank,carol), hungry(george).\nsibling(carol,eve) :- sibling(carol,frank).\nfriend(carol,eve).\nparent(dave,george).\nparent(eve,dave).\nenemy(eve,alice).\ndislikes(bob,alice).\ndislikes(frank,carol).\nowns(alice,ball).\nsibling(eve,frank).",
    "natural language": "You are given the following information:\nIf carol is a friend of eve, then frank is a friend of dave.\nIf frank is a friend of dave, then george likes book.\nIf alice is a sibling of bob and eve dislikes phone, then carol is sad.\nIf frank is hungry and dave dislikes pencil and it is hot, then dave is hungry.\nIf alice is sad, then george is hungry.\nIf eve is a parent of carol and eve owns phone, then frank is sad.\nIf alice is an enemy of eve and it is sunny and george is a sibling of eve, then car is wet.\nIf eve is sad and frank is a friend of carol and george is hungry, then dave is a sibling of eve.\nIf carol is a sibling of frank, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is a friend of eve.\ndave is a parent of george.\neve is a parent of dave.\neve is an enemy of alice.\nbob dislikes alice.\nfrank dislikes carol.\nalice owns ball.\neve is a sibling of frank.\n\nQUESTION:\nIs dave is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,eve).",
    "c": "friend(frank,dave) :- friend(carol,eve).\nlikes(george,book) :- friend(frank,dave).\nsad(carol) :- sibling(alice,bob), dislikes(eve,phone).\nhungry(dave) :- hungry(frank), dislikes(dave,pencil), hot.\nhungry(george) :- sad(alice).\nsad(frank) :- parent(eve,carol), owns(eve,phone).\nwet(car) :- enemy(alice,eve), sunny, sibling(george,eve).\nsibling(dave,eve) :- sad(eve), friend(frank,carol), hungry(george).\nsibling(carol,eve) :- sibling(carol,frank).\nparent(dave,george).\nparent(eve,dave).\nenemy(eve,alice).\ndislikes(bob,alice).\ndislikes(frank,carol).\nowns(alice,ball).\nsibling(eve,frank).",
    "natural language": "You are given the following rules:\nIf carol is a friend of eve, then frank is a friend of dave.\nIf frank is a friend of dave, then george likes book.\nIf alice is a sibling of bob and eve dislikes phone, then carol is sad.\nIf frank is hungry and dave dislikes pencil and it is hot, then dave is hungry.\nIf alice is sad, then george is hungry.\nIf eve is a parent of carol and eve owns phone, then frank is sad.\nIf alice is an enemy of eve and it is sunny and george is a sibling of eve, then car is wet.\nIf eve is sad and frank is a friend of carol and george is hungry, then dave is a sibling of eve.\nIf carol is a sibling of frank, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is a friend of eve.\ndave is a parent of george.\neve is a parent of dave.\neve is an enemy of alice.\nbob dislikes alice.\nfrank dislikes carol.\nalice owns ball.\neve is a sibling of frank.\n\nOBSERVATION: george likes book is true.\n\nQUESTION:\nCould carol is a friend of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(eve,alice).",
    "c": "friend(frank,dave) :- friend(carol,eve).\nlikes(george,book) :- friend(frank,dave).\nsad(carol) :- sibling(alice,bob), dislikes(eve,phone).\nhungry(dave) :- hungry(frank), dislikes(dave,pencil), hot.\nhungry(george) :- sad(alice).\nsad(frank) :- parent(eve,carol), owns(eve,phone).\nwet(car) :- enemy(alice,eve), sunny, sibling(george,eve).\nsibling(dave,eve) :- sad(eve), friend(frank,carol), hungry(george).\nsibling(carol,eve) :- sibling(carol,frank).\nfriend(carol,eve).\nparent(dave,george).\nparent(eve,dave).\ndislikes(bob,alice).\ndislikes(frank,carol).\nowns(alice,ball).\nsibling(eve,frank).",
    "natural language": "You are given the following rules:\nIf carol is a friend of eve, then frank is a friend of dave.\nIf frank is a friend of dave, then george likes book.\nIf alice is a sibling of bob and eve dislikes phone, then carol is sad.\nIf frank is hungry and dave dislikes pencil and it is hot, then dave is hungry.\nIf alice is sad, then george is hungry.\nIf eve is a parent of carol and eve owns phone, then frank is sad.\nIf alice is an enemy of eve and it is sunny and george is a sibling of eve, then car is wet.\nIf eve is sad and frank is a friend of carol and george is hungry, then dave is a sibling of eve.\nIf carol is a sibling of frank, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is a friend of eve.\ndave is a parent of george.\neve is a parent of dave.\neve is an enemy of alice.\nbob dislikes alice.\nfrank dislikes carol.\nalice owns ball.\neve is a sibling of frank.\n\nOBSERVATION: george likes book is true.\n\nQUESTION:\nCould eve is an enemy of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,alice).",
    "c": "friend(frank,dave) :- friend(carol,eve).\nlikes(george,book) :- friend(frank,dave).\nsad(carol) :- sibling(alice,bob), dislikes(eve,phone).\nhungry(dave) :- hungry(frank), dislikes(dave,pencil), hot.\nhungry(george) :- sad(alice).\nsad(frank) :- parent(eve,carol), owns(eve,phone).\nwet(car) :- enemy(alice,eve), sunny, sibling(george,eve).\nsibling(dave,eve) :- sad(eve), friend(frank,carol), hungry(george).\nsibling(carol,eve) :- sibling(carol,frank).\nfriend(carol,eve).\nparent(dave,george).\nparent(eve,dave).\nenemy(eve,alice).\ndislikes(frank,carol).\nowns(alice,ball).\nsibling(eve,frank).",
    "natural language": "You are given the following rules:\nIf carol is a friend of eve, then frank is a friend of dave.\nIf frank is a friend of dave, then george likes book.\nIf alice is a sibling of bob and eve dislikes phone, then carol is sad.\nIf frank is hungry and dave dislikes pencil and it is hot, then dave is hungry.\nIf alice is sad, then george is hungry.\nIf eve is a parent of carol and eve owns phone, then frank is sad.\nIf alice is an enemy of eve and it is sunny and george is a sibling of eve, then car is wet.\nIf eve is sad and frank is a friend of carol and george is hungry, then dave is a sibling of eve.\nIf carol is a sibling of frank, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is a friend of eve.\ndave is a parent of george.\neve is a parent of dave.\neve is an enemy of alice.\nbob dislikes alice.\nfrank dislikes carol.\nalice owns ball.\neve is a sibling of frank.\n\nOBSERVATION: george likes book is true.\n\nQUESTION:\nCould bob dislikes alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(carol,apple).",
    "c": "sad(frank) :- hungry(eve).\ncold :- sad(frank).\nlikes(bob,ball) :- cold.\nwet(ball) :- likes(bob,ball).\nsmall(ball) :- hot, small(apple), likes(bob,eve).\nsmall(apple) :- cold, small(ball).\nowns(alice,pencil) :- sunny, owns(carol,phone).\nsmall(ball) :- owns(bob,apple), big(phone).\nparent(frank,bob) :- happy(eve).\nhungry(eve).\nlikes(carol,ball).\nsmall(pencil).\nowns(carol,apple).\nlikes(frank,eve).\nowns(dave,apple).\nsad(alice).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve is hungry, then frank is sad.\nIf frank is sad, then it is cold.\nIf it is cold, then bob likes ball.\nIf bob likes ball, then ball is wet.\nIf it is hot and apple is small and bob likes eve, then ball is small.\nIf it is cold and ball is small, then apple is small.\nIf it is sunny and carol owns phone, then alice owns pencil.\nIf bob owns apple and phone is big, then ball is small.\nIf eve is happy, then frank is a parent of bob.\n\nAnd the following facts:\neve is hungry.\ncarol likes ball.\npencil is small.\ncarol owns apple.\nfrank likes eve.\ndave owns apple.\nalice is sad.\ngeorge owns apple.\n\nQUESTION:\nIs carol owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,ball).",
    "c": "sad(frank) :- hungry(eve).\ncold :- sad(frank).\nlikes(bob,ball) :- cold.\nwet(ball) :- likes(bob,ball).\nsmall(ball) :- hot, small(apple), likes(bob,eve).\nsmall(apple) :- cold, small(ball).\nowns(alice,pencil) :- sunny, owns(carol,phone).\nsmall(ball) :- owns(bob,apple), big(phone).\nparent(frank,bob) :- happy(eve).\nhungry(eve).\nlikes(carol,ball).\nsmall(pencil).\nowns(carol,apple).\nlikes(frank,eve).\nowns(dave,apple).\nsad(alice).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve is hungry, then frank is sad.\nIf frank is sad, then it is cold.\nIf it is cold, then bob likes ball.\nIf bob likes ball, then ball is wet.\nIf it is hot and apple is small and bob likes eve, then ball is small.\nIf it is cold and ball is small, then apple is small.\nIf it is sunny and carol owns phone, then alice owns pencil.\nIf bob owns apple and phone is big, then ball is small.\nIf eve is happy, then frank is a parent of bob.\n\nAnd the following facts:\neve is hungry.\ncarol likes ball.\npencil is small.\ncarol owns apple.\nfrank likes eve.\ndave owns apple.\nalice is sad.\ngeorge owns apple.\n\nQUESTION:\nIs carol likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,apple).",
    "c": "sad(frank) :- hungry(eve).\ncold :- sad(frank).\nlikes(bob,ball) :- cold.\nwet(ball) :- likes(bob,ball).\nsmall(ball) :- hot, small(apple), likes(bob,eve).\nsmall(apple) :- cold, small(ball).\nowns(alice,pencil) :- sunny, owns(carol,phone).\nsmall(ball) :- owns(bob,apple), big(phone).\nparent(frank,bob) :- happy(eve).\nhungry(eve).\nlikes(carol,ball).\nsmall(pencil).\nowns(carol,apple).\nlikes(frank,eve).\nowns(dave,apple).\nsad(alice).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve is hungry, then frank is sad.\nIf frank is sad, then it is cold.\nIf it is cold, then bob likes ball.\nIf bob likes ball, then ball is wet.\nIf it is hot and apple is small and bob likes eve, then ball is small.\nIf it is cold and ball is small, then apple is small.\nIf it is sunny and carol owns phone, then alice owns pencil.\nIf bob owns apple and phone is big, then ball is small.\nIf eve is happy, then frank is a parent of bob.\n\nAnd the following facts:\neve is hungry.\ncarol likes ball.\npencil is small.\ncarol owns apple.\nfrank likes eve.\ndave owns apple.\nalice is sad.\ngeorge owns apple.\n\nQUESTION:\nIs dave owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,car).",
    "c": "sad(frank) :- hungry(eve).\ncold :- sad(frank).\nlikes(bob,ball) :- cold.\nwet(ball) :- likes(bob,ball).\nsmall(ball) :- hot, small(apple), likes(bob,eve).\nsmall(apple) :- cold, small(ball).\nowns(alice,pencil) :- sunny, owns(carol,phone).\nsmall(ball) :- owns(bob,apple), big(phone).\nparent(frank,bob) :- happy(eve).\nhungry(eve).\nlikes(carol,ball).\nsmall(pencil).\nowns(carol,apple).\nlikes(frank,eve).\nowns(dave,apple).\nsad(alice).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve is hungry, then frank is sad.\nIf frank is sad, then it is cold.\nIf it is cold, then bob likes ball.\nIf bob likes ball, then ball is wet.\nIf it is hot and apple is small and bob likes eve, then ball is small.\nIf it is cold and ball is small, then apple is small.\nIf it is sunny and carol owns phone, then alice owns pencil.\nIf bob owns apple and phone is big, then ball is small.\nIf eve is happy, then frank is a parent of bob.\n\nAnd the following facts:\neve is hungry.\ncarol likes ball.\npencil is small.\ncarol owns apple.\nfrank likes eve.\ndave owns apple.\nalice is sad.\ngeorge owns apple.\n\nQUESTION:\nIs alice likes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,dave).",
    "c": "sad(frank) :- hungry(eve).\ncold :- sad(frank).\nlikes(bob,ball) :- cold.\nwet(ball) :- likes(bob,ball).\nsmall(ball) :- hot, small(apple), likes(bob,eve).\nsmall(apple) :- cold, small(ball).\nowns(alice,pencil) :- sunny, owns(carol,phone).\nsmall(ball) :- owns(bob,apple), big(phone).\nparent(frank,bob) :- happy(eve).\nhungry(eve).\nlikes(carol,ball).\nsmall(pencil).\nowns(carol,apple).\nlikes(frank,eve).\nowns(dave,apple).\nsad(alice).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve is hungry, then frank is sad.\nIf frank is sad, then it is cold.\nIf it is cold, then bob likes ball.\nIf bob likes ball, then ball is wet.\nIf it is hot and apple is small and bob likes eve, then ball is small.\nIf it is cold and ball is small, then apple is small.\nIf it is sunny and carol owns phone, then alice owns pencil.\nIf bob owns apple and phone is big, then ball is small.\nIf eve is happy, then frank is a parent of bob.\n\nAnd the following facts:\neve is hungry.\ncarol likes ball.\npencil is small.\ncarol owns apple.\nfrank likes eve.\ndave owns apple.\nalice is sad.\ngeorge owns apple.\n\nQUESTION:\nIs bob likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "sad(frank) :- hungry(eve).\ncold :- sad(frank).\nlikes(bob,ball) :- cold.\nwet(ball) :- likes(bob,ball).\nsmall(ball) :- hot, small(apple), likes(bob,eve).\nsmall(apple) :- cold, small(ball).\nowns(alice,pencil) :- sunny, owns(carol,phone).\nsmall(ball) :- owns(bob,apple), big(phone).\nparent(frank,bob) :- happy(eve).\nlikes(carol,ball).\nsmall(pencil).\nowns(carol,apple).\nlikes(frank,eve).\nowns(dave,apple).\nsad(alice).\nowns(george,apple).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then frank is sad.\nIf frank is sad, then it is cold.\nIf it is cold, then bob likes ball.\nIf bob likes ball, then ball is wet.\nIf it is hot and apple is small and bob likes eve, then ball is small.\nIf it is cold and ball is small, then apple is small.\nIf it is sunny and carol owns phone, then alice owns pencil.\nIf bob owns apple and phone is big, then ball is small.\nIf eve is happy, then frank is a parent of bob.\n\nAnd the following facts:\neve is hungry.\ncarol likes ball.\npencil is small.\ncarol owns apple.\nfrank likes eve.\ndave owns apple.\nalice is sad.\ngeorge owns apple.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould eve is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(frank,eve).",
    "c": "sad(frank) :- hungry(eve).\ncold :- sad(frank).\nlikes(bob,ball) :- cold.\nwet(ball) :- likes(bob,ball).\nsmall(ball) :- hot, small(apple), likes(bob,eve).\nsmall(apple) :- cold, small(ball).\nowns(alice,pencil) :- sunny, owns(carol,phone).\nsmall(ball) :- owns(bob,apple), big(phone).\nparent(frank,bob) :- happy(eve).\nhungry(eve).\nlikes(carol,ball).\nsmall(pencil).\nowns(carol,apple).\nowns(dave,apple).\nsad(alice).\nowns(george,apple).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then frank is sad.\nIf frank is sad, then it is cold.\nIf it is cold, then bob likes ball.\nIf bob likes ball, then ball is wet.\nIf it is hot and apple is small and bob likes eve, then ball is small.\nIf it is cold and ball is small, then apple is small.\nIf it is sunny and carol owns phone, then alice owns pencil.\nIf bob owns apple and phone is big, then ball is small.\nIf eve is happy, then frank is a parent of bob.\n\nAnd the following facts:\neve is hungry.\ncarol likes ball.\npencil is small.\ncarol owns apple.\nfrank likes eve.\ndave owns apple.\nalice is sad.\ngeorge owns apple.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould frank likes eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "sad(frank) :- hungry(eve).\ncold :- sad(frank).\nlikes(bob,ball) :- cold.\nwet(ball) :- likes(bob,ball).\nsmall(ball) :- hot, small(apple), likes(bob,eve).\nsmall(apple) :- cold, small(ball).\nowns(alice,pencil) :- sunny, owns(carol,phone).\nsmall(ball) :- owns(bob,apple), big(phone).\nparent(frank,bob) :- happy(eve).\nhungry(eve).\nlikes(carol,ball).\nowns(carol,apple).\nlikes(frank,eve).\nowns(dave,apple).\nsad(alice).\nowns(george,apple).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then frank is sad.\nIf frank is sad, then it is cold.\nIf it is cold, then bob likes ball.\nIf bob likes ball, then ball is wet.\nIf it is hot and apple is small and bob likes eve, then ball is small.\nIf it is cold and ball is small, then apple is small.\nIf it is sunny and carol owns phone, then alice owns pencil.\nIf bob owns apple and phone is big, then ball is small.\nIf eve is happy, then frank is a parent of bob.\n\nAnd the following facts:\neve is hungry.\ncarol likes ball.\npencil is small.\ncarol owns apple.\nfrank likes eve.\ndave owns apple.\nalice is sad.\ngeorge owns apple.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould pencil is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(carol,alice).",
    "c": "big(ball) :- small(pencil).\ntall(carol) :- big(ball).\nenemy(alice,dave) :- tall(carol).\nhot :- enemy(alice,dave).\nenemy(carol,bob) :- big(phone).\nenemy(dave,frank) :- sibling(alice,alice), big(ball).\nbig(apple) :- sad(frank).\nbig(book) :- likes(alice,frank), happy(carol).\ndislikes(alice,george) :- tall(george).\nsmall(pencil).\nenemy(carol,alice).\nsibling(george,eve).\nlikes(eve,george).\nlikes(bob,phone).\nlikes(bob,car).\nlikes(george,bob).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is big.\nIf ball is big, then carol is tall.\nIf carol is tall, then alice is an enemy of dave.\nIf alice is an enemy of dave, then it is hot.\nIf phone is big, then carol is an enemy of bob.\nIf alice is a sibling of alice and ball is big, then dave is an enemy of frank.\nIf frank is sad, then apple is big.\nIf alice likes frank and carol is happy, then book is big.\nIf george is tall, then alice dislikes george.\n\nAnd the following facts:\npencil is small.\ncarol is an enemy of alice.\ngeorge is a sibling of eve.\neve likes george.\nbob likes phone.\nbob likes car.\ngeorge likes bob.\nbob is an enemy of george.\n\nQUESTION:\nIs carol is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,eve).",
    "c": "big(ball) :- small(pencil).\ntall(carol) :- big(ball).\nenemy(alice,dave) :- tall(carol).\nhot :- enemy(alice,dave).\nenemy(carol,bob) :- big(phone).\nenemy(dave,frank) :- sibling(alice,alice), big(ball).\nbig(apple) :- sad(frank).\nbig(book) :- likes(alice,frank), happy(carol).\ndislikes(alice,george) :- tall(george).\nsmall(pencil).\nenemy(carol,alice).\nsibling(george,eve).\nlikes(eve,george).\nlikes(bob,phone).\nlikes(bob,car).\nlikes(george,bob).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is big.\nIf ball is big, then carol is tall.\nIf carol is tall, then alice is an enemy of dave.\nIf alice is an enemy of dave, then it is hot.\nIf phone is big, then carol is an enemy of bob.\nIf alice is a sibling of alice and ball is big, then dave is an enemy of frank.\nIf frank is sad, then apple is big.\nIf alice likes frank and carol is happy, then book is big.\nIf george is tall, then alice dislikes george.\n\nAnd the following facts:\npencil is small.\ncarol is an enemy of alice.\ngeorge is a sibling of eve.\neve likes george.\nbob likes phone.\nbob likes car.\ngeorge likes bob.\nbob is an enemy of george.\n\nQUESTION:\nIs george is a sibling of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "big(ball) :- small(pencil).\ntall(carol) :- big(ball).\nenemy(alice,dave) :- tall(carol).\nhot :- enemy(alice,dave).\nenemy(carol,bob) :- big(phone).\nenemy(dave,frank) :- sibling(alice,alice), big(ball).\nbig(apple) :- sad(frank).\nbig(book) :- likes(alice,frank), happy(carol).\ndislikes(alice,george) :- tall(george).\nsmall(pencil).\nenemy(carol,alice).\nsibling(george,eve).\nlikes(eve,george).\nlikes(bob,phone).\nlikes(bob,car).\nlikes(george,bob).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is big.\nIf ball is big, then carol is tall.\nIf carol is tall, then alice is an enemy of dave.\nIf alice is an enemy of dave, then it is hot.\nIf phone is big, then carol is an enemy of bob.\nIf alice is a sibling of alice and ball is big, then dave is an enemy of frank.\nIf frank is sad, then apple is big.\nIf alice likes frank and carol is happy, then book is big.\nIf george is tall, then alice dislikes george.\n\nAnd the following facts:\npencil is small.\ncarol is an enemy of alice.\ngeorge is a sibling of eve.\neve likes george.\nbob likes phone.\nbob likes car.\ngeorge likes bob.\nbob is an enemy of george.\n\nQUESTION:\nIs ball is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,carol).",
    "c": "big(ball) :- small(pencil).\ntall(carol) :- big(ball).\nenemy(alice,dave) :- tall(carol).\nhot :- enemy(alice,dave).\nenemy(carol,bob) :- big(phone).\nenemy(dave,frank) :- sibling(alice,alice), big(ball).\nbig(apple) :- sad(frank).\nbig(book) :- likes(alice,frank), happy(carol).\ndislikes(alice,george) :- tall(george).\nsmall(pencil).\nenemy(carol,alice).\nsibling(george,eve).\nlikes(eve,george).\nlikes(bob,phone).\nlikes(bob,car).\nlikes(george,bob).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is big.\nIf ball is big, then carol is tall.\nIf carol is tall, then alice is an enemy of dave.\nIf alice is an enemy of dave, then it is hot.\nIf phone is big, then carol is an enemy of bob.\nIf alice is a sibling of alice and ball is big, then dave is an enemy of frank.\nIf frank is sad, then apple is big.\nIf alice likes frank and carol is happy, then book is big.\nIf george is tall, then alice dislikes george.\n\nAnd the following facts:\npencil is small.\ncarol is an enemy of alice.\ngeorge is a sibling of eve.\neve likes george.\nbob likes phone.\nbob likes car.\ngeorge likes bob.\nbob is an enemy of george.\n\nQUESTION:\nIs bob likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,dave).",
    "c": "big(ball) :- small(pencil).\ntall(carol) :- big(ball).\nenemy(alice,dave) :- tall(carol).\nhot :- enemy(alice,dave).\nenemy(carol,bob) :- big(phone).\nenemy(dave,frank) :- sibling(alice,alice), big(ball).\nbig(apple) :- sad(frank).\nbig(book) :- likes(alice,frank), happy(carol).\ndislikes(alice,george) :- tall(george).\nsmall(pencil).\nenemy(carol,alice).\nsibling(george,eve).\nlikes(eve,george).\nlikes(bob,phone).\nlikes(bob,car).\nlikes(george,bob).\nenemy(bob,george).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is big.\nIf ball is big, then carol is tall.\nIf carol is tall, then alice is an enemy of dave.\nIf alice is an enemy of dave, then it is hot.\nIf phone is big, then carol is an enemy of bob.\nIf alice is a sibling of alice and ball is big, then dave is an enemy of frank.\nIf frank is sad, then apple is big.\nIf alice likes frank and carol is happy, then book is big.\nIf george is tall, then alice dislikes george.\n\nAnd the following facts:\npencil is small.\ncarol is an enemy of alice.\ngeorge is a sibling of eve.\neve likes george.\nbob likes phone.\nbob likes car.\ngeorge likes bob.\nbob is an enemy of george.\n\nQUESTION:\nIs alice dislikes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "big(ball) :- small(pencil).\ntall(carol) :- big(ball).\nenemy(alice,dave) :- tall(carol).\nhot :- enemy(alice,dave).\nenemy(carol,bob) :- big(phone).\nenemy(dave,frank) :- sibling(alice,alice), big(ball).\nbig(apple) :- sad(frank).\nbig(book) :- likes(alice,frank), happy(carol).\ndislikes(alice,george) :- tall(george).\nenemy(carol,alice).\nsibling(george,eve).\nlikes(eve,george).\nlikes(bob,phone).\nlikes(bob,car).\nlikes(george,bob).\nenemy(bob,george).",
    "natural language": "You are given the following rules:\nIf pencil is small, then ball is big.\nIf ball is big, then carol is tall.\nIf carol is tall, then alice is an enemy of dave.\nIf alice is an enemy of dave, then it is hot.\nIf phone is big, then carol is an enemy of bob.\nIf alice is a sibling of alice and ball is big, then dave is an enemy of frank.\nIf frank is sad, then apple is big.\nIf alice likes frank and carol is happy, then book is big.\nIf george is tall, then alice dislikes george.\n\nAnd the following facts:\npencil is small.\ncarol is an enemy of alice.\ngeorge is a sibling of eve.\neve likes george.\nbob likes phone.\nbob likes car.\ngeorge likes bob.\nbob is an enemy of george.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould pencil is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(george,bob).",
    "c": "big(ball) :- small(pencil).\ntall(carol) :- big(ball).\nenemy(alice,dave) :- tall(carol).\nhot :- enemy(alice,dave).\nenemy(carol,bob) :- big(phone).\nenemy(dave,frank) :- sibling(alice,alice), big(ball).\nbig(apple) :- sad(frank).\nbig(book) :- likes(alice,frank), happy(carol).\ndislikes(alice,george) :- tall(george).\nsmall(pencil).\nenemy(carol,alice).\nsibling(george,eve).\nlikes(eve,george).\nlikes(bob,phone).\nlikes(bob,car).\nenemy(bob,george).",
    "natural language": "You are given the following rules:\nIf pencil is small, then ball is big.\nIf ball is big, then carol is tall.\nIf carol is tall, then alice is an enemy of dave.\nIf alice is an enemy of dave, then it is hot.\nIf phone is big, then carol is an enemy of bob.\nIf alice is a sibling of alice and ball is big, then dave is an enemy of frank.\nIf frank is sad, then apple is big.\nIf alice likes frank and carol is happy, then book is big.\nIf george is tall, then alice dislikes george.\n\nAnd the following facts:\npencil is small.\ncarol is an enemy of alice.\ngeorge is a sibling of eve.\neve likes george.\nbob likes phone.\nbob likes car.\ngeorge likes bob.\nbob is an enemy of george.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould george likes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "big(ball) :- small(pencil).\ntall(carol) :- big(ball).\nenemy(alice,dave) :- tall(carol).\nhot :- enemy(alice,dave).\nenemy(carol,bob) :- big(phone).\nenemy(dave,frank) :- sibling(alice,alice), big(ball).\nbig(apple) :- sad(frank).\nbig(book) :- likes(alice,frank), happy(carol).\ndislikes(alice,george) :- tall(george).\nsmall(pencil).\nenemy(carol,alice).\nsibling(george,eve).\nlikes(eve,george).\nlikes(bob,car).\nlikes(george,bob).\nenemy(bob,george).",
    "natural language": "You are given the following rules:\nIf pencil is small, then ball is big.\nIf ball is big, then carol is tall.\nIf carol is tall, then alice is an enemy of dave.\nIf alice is an enemy of dave, then it is hot.\nIf phone is big, then carol is an enemy of bob.\nIf alice is a sibling of alice and ball is big, then dave is an enemy of frank.\nIf frank is sad, then apple is big.\nIf alice likes frank and carol is happy, then book is big.\nIf george is tall, then alice dislikes george.\n\nAnd the following facts:\npencil is small.\ncarol is an enemy of alice.\ngeorge is a sibling of eve.\neve likes george.\nbob likes phone.\nbob likes car.\ngeorge likes bob.\nbob is an enemy of george.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould bob likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,carol).",
    "c": "happy(dave) :- tall(alice).\nenemy(dave,george) :- happy(dave).\nlikes(frank,phone) :- enemy(dave,george).\nhungry(alice) :- likes(frank,phone).\nparent(alice,eve) :- hungry(alice).\nowns(carol,car) :- parent(alice,eve).\nwet(book) :- wet(apple), sibling(carol,carol).\ncold :- owns(carol,car).\nwet(pencil) :- tall(carol).\ntall(alice).\nsibling(eve,alice).\nhungry(bob).\nlikes(dave,carol).\nlikes(alice,carol).\nlikes(george,phone).\nowns(carol,phone).\nlikes(alice,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is happy.\nIf dave is happy, then dave is an enemy of george.\nIf dave is an enemy of george, then frank likes phone.\nIf frank likes phone, then alice is hungry.\nIf alice is hungry, then alice is a parent of eve.\nIf alice is a parent of eve, then carol owns car.\nIf apple is wet and carol is a sibling of carol, then book is wet.\nIf carol owns car, then it is cold.\nIf carol is tall, then pencil is wet.\n\nAnd the following facts:\nalice is tall.\neve is a sibling of alice.\nbob is hungry.\ndave likes carol.\nalice likes carol.\ngeorge likes phone.\ncarol owns phone.\nalice likes dave.\n\nQUESTION:\nIs alice likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "happy(dave) :- tall(alice).\nenemy(dave,george) :- happy(dave).\nlikes(frank,phone) :- enemy(dave,george).\nhungry(alice) :- likes(frank,phone).\nparent(alice,eve) :- hungry(alice).\nowns(carol,car) :- parent(alice,eve).\nwet(book) :- wet(apple), sibling(carol,carol).\ncold :- owns(carol,car).\nwet(pencil) :- tall(carol).\ntall(alice).\nsibling(eve,alice).\nhungry(bob).\nlikes(dave,carol).\nlikes(alice,carol).\nlikes(george,phone).\nowns(carol,phone).\nlikes(alice,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is happy.\nIf dave is happy, then dave is an enemy of george.\nIf dave is an enemy of george, then frank likes phone.\nIf frank likes phone, then alice is hungry.\nIf alice is hungry, then alice is a parent of eve.\nIf alice is a parent of eve, then carol owns car.\nIf apple is wet and carol is a sibling of carol, then book is wet.\nIf carol owns car, then it is cold.\nIf carol is tall, then pencil is wet.\n\nAnd the following facts:\nalice is tall.\neve is a sibling of alice.\nbob is hungry.\ndave likes carol.\nalice likes carol.\ngeorge likes phone.\ncarol owns phone.\nalice likes dave.\n\nQUESTION:\nIs dave is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,dave).",
    "c": "happy(dave) :- tall(alice).\nenemy(dave,george) :- happy(dave).\nlikes(frank,phone) :- enemy(dave,george).\nhungry(alice) :- likes(frank,phone).\nparent(alice,eve) :- hungry(alice).\nowns(carol,car) :- parent(alice,eve).\nwet(book) :- wet(apple), sibling(carol,carol).\ncold :- owns(carol,car).\nwet(pencil) :- tall(carol).\ntall(alice).\nsibling(eve,alice).\nhungry(bob).\nlikes(dave,carol).\nlikes(alice,carol).\nlikes(george,phone).\nowns(carol,phone).\nlikes(alice,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is happy.\nIf dave is happy, then dave is an enemy of george.\nIf dave is an enemy of george, then frank likes phone.\nIf frank likes phone, then alice is hungry.\nIf alice is hungry, then alice is a parent of eve.\nIf alice is a parent of eve, then carol owns car.\nIf apple is wet and carol is a sibling of carol, then book is wet.\nIf carol owns car, then it is cold.\nIf carol is tall, then pencil is wet.\n\nAnd the following facts:\nalice is tall.\neve is a sibling of alice.\nbob is hungry.\ndave likes carol.\nalice likes carol.\ngeorge likes phone.\ncarol owns phone.\nalice likes dave.\n\nQUESTION:\nIs alice likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,carol).",
    "c": "happy(dave) :- tall(alice).\nenemy(dave,george) :- happy(dave).\nlikes(frank,phone) :- enemy(dave,george).\nhungry(alice) :- likes(frank,phone).\nparent(alice,eve) :- hungry(alice).\nowns(carol,car) :- parent(alice,eve).\nwet(book) :- wet(apple), sibling(carol,carol).\ncold :- owns(carol,car).\nwet(pencil) :- tall(carol).\ntall(alice).\nsibling(eve,alice).\nhungry(bob).\nlikes(dave,carol).\nlikes(alice,carol).\nlikes(george,phone).\nowns(carol,phone).\nlikes(alice,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is happy.\nIf dave is happy, then dave is an enemy of george.\nIf dave is an enemy of george, then frank likes phone.\nIf frank likes phone, then alice is hungry.\nIf alice is hungry, then alice is a parent of eve.\nIf alice is a parent of eve, then carol owns car.\nIf apple is wet and carol is a sibling of carol, then book is wet.\nIf carol owns car, then it is cold.\nIf carol is tall, then pencil is wet.\n\nAnd the following facts:\nalice is tall.\neve is a sibling of alice.\nbob is hungry.\ndave likes carol.\nalice likes carol.\ngeorge likes phone.\ncarol owns phone.\nalice likes dave.\n\nQUESTION:\nIs bob is an enemy of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,carol).",
    "c": "happy(dave) :- tall(alice).\nenemy(dave,george) :- happy(dave).\nlikes(frank,phone) :- enemy(dave,george).\nhungry(alice) :- likes(frank,phone).\nparent(alice,eve) :- hungry(alice).\nowns(carol,car) :- parent(alice,eve).\nwet(book) :- wet(apple), sibling(carol,carol).\ncold :- owns(carol,car).\nwet(pencil) :- tall(carol).\ntall(alice).\nsibling(eve,alice).\nhungry(bob).\nlikes(dave,carol).\nlikes(alice,carol).\nlikes(george,phone).\nowns(carol,phone).\nlikes(alice,dave).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is happy.\nIf dave is happy, then dave is an enemy of george.\nIf dave is an enemy of george, then frank likes phone.\nIf frank likes phone, then alice is hungry.\nIf alice is hungry, then alice is a parent of eve.\nIf alice is a parent of eve, then carol owns car.\nIf apple is wet and carol is a sibling of carol, then book is wet.\nIf carol owns car, then it is cold.\nIf carol is tall, then pencil is wet.\n\nAnd the following facts:\nalice is tall.\neve is a sibling of alice.\nbob is hungry.\ndave likes carol.\nalice likes carol.\ngeorge likes phone.\ncarol owns phone.\nalice likes dave.\n\nQUESTION:\nIs dave is a parent of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(alice).",
    "c": "happy(dave) :- tall(alice).\nenemy(dave,george) :- happy(dave).\nlikes(frank,phone) :- enemy(dave,george).\nhungry(alice) :- likes(frank,phone).\nparent(alice,eve) :- hungry(alice).\nowns(carol,car) :- parent(alice,eve).\nwet(book) :- wet(apple), sibling(carol,carol).\ncold :- owns(carol,car).\nwet(pencil) :- tall(carol).\nsibling(eve,alice).\nhungry(bob).\nlikes(dave,carol).\nlikes(alice,carol).\nlikes(george,phone).\nowns(carol,phone).\nlikes(alice,dave).",
    "natural language": "You are given the following rules:\nIf alice is tall, then dave is happy.\nIf dave is happy, then dave is an enemy of george.\nIf dave is an enemy of george, then frank likes phone.\nIf frank likes phone, then alice is hungry.\nIf alice is hungry, then alice is a parent of eve.\nIf alice is a parent of eve, then carol owns car.\nIf apple is wet and carol is a sibling of carol, then book is wet.\nIf carol owns car, then it is cold.\nIf carol is tall, then pencil is wet.\n\nAnd the following facts:\nalice is tall.\neve is a sibling of alice.\nbob is hungry.\ndave likes carol.\nalice likes carol.\ngeorge likes phone.\ncarol owns phone.\nalice likes dave.\n\nOBSERVATION: carol owns car is true.\n\nQUESTION:\nCould alice is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,dave).",
    "c": "happy(dave) :- tall(alice).\nenemy(dave,george) :- happy(dave).\nlikes(frank,phone) :- enemy(dave,george).\nhungry(alice) :- likes(frank,phone).\nparent(alice,eve) :- hungry(alice).\nowns(carol,car) :- parent(alice,eve).\nwet(book) :- wet(apple), sibling(carol,carol).\ncold :- owns(carol,car).\nwet(pencil) :- tall(carol).\ntall(alice).\nsibling(eve,alice).\nhungry(bob).\nlikes(dave,carol).\nlikes(alice,carol).\nlikes(george,phone).\nowns(carol,phone).",
    "natural language": "You are given the following rules:\nIf alice is tall, then dave is happy.\nIf dave is happy, then dave is an enemy of george.\nIf dave is an enemy of george, then frank likes phone.\nIf frank likes phone, then alice is hungry.\nIf alice is hungry, then alice is a parent of eve.\nIf alice is a parent of eve, then carol owns car.\nIf apple is wet and carol is a sibling of carol, then book is wet.\nIf carol owns car, then it is cold.\nIf carol is tall, then pencil is wet.\n\nAnd the following facts:\nalice is tall.\neve is a sibling of alice.\nbob is hungry.\ndave likes carol.\nalice likes carol.\ngeorge likes phone.\ncarol owns phone.\nalice likes dave.\n\nOBSERVATION: carol owns car is true.\n\nQUESTION:\nCould alice likes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(eve,alice).",
    "c": "happy(dave) :- tall(alice).\nenemy(dave,george) :- happy(dave).\nlikes(frank,phone) :- enemy(dave,george).\nhungry(alice) :- likes(frank,phone).\nparent(alice,eve) :- hungry(alice).\nowns(carol,car) :- parent(alice,eve).\nwet(book) :- wet(apple), sibling(carol,carol).\ncold :- owns(carol,car).\nwet(pencil) :- tall(carol).\ntall(alice).\nhungry(bob).\nlikes(dave,carol).\nlikes(alice,carol).\nlikes(george,phone).\nowns(carol,phone).\nlikes(alice,dave).",
    "natural language": "You are given the following rules:\nIf alice is tall, then dave is happy.\nIf dave is happy, then dave is an enemy of george.\nIf dave is an enemy of george, then frank likes phone.\nIf frank likes phone, then alice is hungry.\nIf alice is hungry, then alice is a parent of eve.\nIf alice is a parent of eve, then carol owns car.\nIf apple is wet and carol is a sibling of carol, then book is wet.\nIf carol owns car, then it is cold.\nIf carol is tall, then pencil is wet.\n\nAnd the following facts:\nalice is tall.\neve is a sibling of alice.\nbob is hungry.\ndave likes carol.\nalice likes carol.\ngeorge likes phone.\ncarol owns phone.\nalice likes dave.\n\nOBSERVATION: carol owns car is true.\n\nQUESTION:\nCould eve is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(bob,george).",
    "c": "sibling(dave,alice) :- big(apple).\nlikes(carol,apple) :- sibling(dave,alice).\nenemy(alice,frank) :- likes(carol,apple).\nparent(frank,dave) :- enemy(alice,frank).\nsunny :- parent(frank,dave).\nparent(frank,carol) :- sunny.\nsad(carol) :- dislikes(eve,frank), dislikes(frank,apple), big(ball).\nsad(alice) :- tall(bob), hungry(dave).\nbig(pencil) :- sunny, enemy(frank,frank).\nbig(apple).\nsibling(bob,george).\nlikes(dave,frank).\nenemy(alice,george).\nenemy(george,carol).\nsibling(frank,george).\nsad(eve).\ndislikes(frank,car).",
    "natural language": "You are given the following information:\nIf apple is big, then dave is a sibling of alice.\nIf dave is a sibling of alice, then carol likes apple.\nIf carol likes apple, then alice is an enemy of frank.\nIf alice is an enemy of frank, then frank is a parent of dave.\nIf frank is a parent of dave, then it is sunny.\nIf it is sunny, then frank is a parent of carol.\nIf eve dislikes frank and frank dislikes apple and ball is big, then carol is sad.\nIf bob is tall and dave is hungry, then alice is sad.\nIf it is sunny and frank is an enemy of frank, then pencil is big.\n\nAnd the following facts:\napple is big.\nbob is a sibling of george.\ndave likes frank.\nalice is an enemy of george.\ngeorge is an enemy of carol.\nfrank is a sibling of george.\neve is sad.\nfrank dislikes car.\n\nQUESTION:\nIs bob is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "sibling(dave,alice) :- big(apple).\nlikes(carol,apple) :- sibling(dave,alice).\nenemy(alice,frank) :- likes(carol,apple).\nparent(frank,dave) :- enemy(alice,frank).\nsunny :- parent(frank,dave).\nparent(frank,carol) :- sunny.\nsad(carol) :- dislikes(eve,frank), dislikes(frank,apple), big(ball).\nsad(alice) :- tall(bob), hungry(dave).\nbig(pencil) :- sunny, enemy(frank,frank).\nbig(apple).\nsibling(bob,george).\nlikes(dave,frank).\nenemy(alice,george).\nenemy(george,carol).\nsibling(frank,george).\nsad(eve).\ndislikes(frank,car).",
    "natural language": "You are given the following information:\nIf apple is big, then dave is a sibling of alice.\nIf dave is a sibling of alice, then carol likes apple.\nIf carol likes apple, then alice is an enemy of frank.\nIf alice is an enemy of frank, then frank is a parent of dave.\nIf frank is a parent of dave, then it is sunny.\nIf it is sunny, then frank is a parent of carol.\nIf eve dislikes frank and frank dislikes apple and ball is big, then carol is sad.\nIf bob is tall and dave is hungry, then alice is sad.\nIf it is sunny and frank is an enemy of frank, then pencil is big.\n\nAnd the following facts:\napple is big.\nbob is a sibling of george.\ndave likes frank.\nalice is an enemy of george.\ngeorge is an enemy of carol.\nfrank is a sibling of george.\neve is sad.\nfrank dislikes car.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "sibling(dave,alice) :- big(apple).\nlikes(carol,apple) :- sibling(dave,alice).\nenemy(alice,frank) :- likes(carol,apple).\nparent(frank,dave) :- enemy(alice,frank).\nsunny :- parent(frank,dave).\nparent(frank,carol) :- sunny.\nsad(carol) :- dislikes(eve,frank), dislikes(frank,apple), big(ball).\nsad(alice) :- tall(bob), hungry(dave).\nbig(pencil) :- sunny, enemy(frank,frank).\nbig(apple).\nsibling(bob,george).\nlikes(dave,frank).\nenemy(alice,george).\nenemy(george,carol).\nsibling(frank,george).\nsad(eve).\ndislikes(frank,car).",
    "natural language": "You are given the following information:\nIf apple is big, then dave is a sibling of alice.\nIf dave is a sibling of alice, then carol likes apple.\nIf carol likes apple, then alice is an enemy of frank.\nIf alice is an enemy of frank, then frank is a parent of dave.\nIf frank is a parent of dave, then it is sunny.\nIf it is sunny, then frank is a parent of carol.\nIf eve dislikes frank and frank dislikes apple and ball is big, then carol is sad.\nIf bob is tall and dave is hungry, then alice is sad.\nIf it is sunny and frank is an enemy of frank, then pencil is big.\n\nAnd the following facts:\napple is big.\nbob is a sibling of george.\ndave likes frank.\nalice is an enemy of george.\ngeorge is an enemy of carol.\nfrank is a sibling of george.\neve is sad.\nfrank dislikes car.\n\nQUESTION:\nIs carol likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,bob).",
    "c": "sibling(dave,alice) :- big(apple).\nlikes(carol,apple) :- sibling(dave,alice).\nenemy(alice,frank) :- likes(carol,apple).\nparent(frank,dave) :- enemy(alice,frank).\nsunny :- parent(frank,dave).\nparent(frank,carol) :- sunny.\nsad(carol) :- dislikes(eve,frank), dislikes(frank,apple), big(ball).\nsad(alice) :- tall(bob), hungry(dave).\nbig(pencil) :- sunny, enemy(frank,frank).\nbig(apple).\nsibling(bob,george).\nlikes(dave,frank).\nenemy(alice,george).\nenemy(george,carol).\nsibling(frank,george).\nsad(eve).\ndislikes(frank,car).",
    "natural language": "You are given the following information:\nIf apple is big, then dave is a sibling of alice.\nIf dave is a sibling of alice, then carol likes apple.\nIf carol likes apple, then alice is an enemy of frank.\nIf alice is an enemy of frank, then frank is a parent of dave.\nIf frank is a parent of dave, then it is sunny.\nIf it is sunny, then frank is a parent of carol.\nIf eve dislikes frank and frank dislikes apple and ball is big, then carol is sad.\nIf bob is tall and dave is hungry, then alice is sad.\nIf it is sunny and frank is an enemy of frank, then pencil is big.\n\nAnd the following facts:\napple is big.\nbob is a sibling of george.\ndave likes frank.\nalice is an enemy of george.\ngeorge is an enemy of carol.\nfrank is a sibling of george.\neve is sad.\nfrank dislikes car.\n\nQUESTION:\nIs alice likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,phone).",
    "c": "sibling(dave,alice) :- big(apple).\nlikes(carol,apple) :- sibling(dave,alice).\nenemy(alice,frank) :- likes(carol,apple).\nparent(frank,dave) :- enemy(alice,frank).\nsunny :- parent(frank,dave).\nparent(frank,carol) :- sunny.\nsad(carol) :- dislikes(eve,frank), dislikes(frank,apple), big(ball).\nsad(alice) :- tall(bob), hungry(dave).\nbig(pencil) :- sunny, enemy(frank,frank).\nbig(apple).\nsibling(bob,george).\nlikes(dave,frank).\nenemy(alice,george).\nenemy(george,carol).\nsibling(frank,george).\nsad(eve).\ndislikes(frank,car).",
    "natural language": "You are given the following information:\nIf apple is big, then dave is a sibling of alice.\nIf dave is a sibling of alice, then carol likes apple.\nIf carol likes apple, then alice is an enemy of frank.\nIf alice is an enemy of frank, then frank is a parent of dave.\nIf frank is a parent of dave, then it is sunny.\nIf it is sunny, then frank is a parent of carol.\nIf eve dislikes frank and frank dislikes apple and ball is big, then carol is sad.\nIf bob is tall and dave is hungry, then alice is sad.\nIf it is sunny and frank is an enemy of frank, then pencil is big.\n\nAnd the following facts:\napple is big.\nbob is a sibling of george.\ndave likes frank.\nalice is an enemy of george.\ngeorge is an enemy of carol.\nfrank is a sibling of george.\neve is sad.\nfrank dislikes car.\n\nQUESTION:\nIs carol likes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(apple).",
    "c": "sibling(dave,alice) :- big(apple).\nlikes(carol,apple) :- sibling(dave,alice).\nenemy(alice,frank) :- likes(carol,apple).\nparent(frank,dave) :- enemy(alice,frank).\nsunny :- parent(frank,dave).\nparent(frank,carol) :- sunny.\nsad(carol) :- dislikes(eve,frank), dislikes(frank,apple), big(ball).\nsad(alice) :- tall(bob), hungry(dave).\nbig(pencil) :- sunny, enemy(frank,frank).\nsibling(bob,george).\nlikes(dave,frank).\nenemy(alice,george).\nenemy(george,carol).\nsibling(frank,george).\nsad(eve).\ndislikes(frank,car).",
    "natural language": "You are given the following rules:\nIf apple is big, then dave is a sibling of alice.\nIf dave is a sibling of alice, then carol likes apple.\nIf carol likes apple, then alice is an enemy of frank.\nIf alice is an enemy of frank, then frank is a parent of dave.\nIf frank is a parent of dave, then it is sunny.\nIf it is sunny, then frank is a parent of carol.\nIf eve dislikes frank and frank dislikes apple and ball is big, then carol is sad.\nIf bob is tall and dave is hungry, then alice is sad.\nIf it is sunny and frank is an enemy of frank, then pencil is big.\n\nAnd the following facts:\napple is big.\nbob is a sibling of george.\ndave likes frank.\nalice is an enemy of george.\ngeorge is an enemy of carol.\nfrank is a sibling of george.\neve is sad.\nfrank dislikes car.\n\nOBSERVATION: frank is a parent of carol is true.\n\nQUESTION:\nCould apple is big be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(george,carol).",
    "c": "sibling(dave,alice) :- big(apple).\nlikes(carol,apple) :- sibling(dave,alice).\nenemy(alice,frank) :- likes(carol,apple).\nparent(frank,dave) :- enemy(alice,frank).\nsunny :- parent(frank,dave).\nparent(frank,carol) :- sunny.\nsad(carol) :- dislikes(eve,frank), dislikes(frank,apple), big(ball).\nsad(alice) :- tall(bob), hungry(dave).\nbig(pencil) :- sunny, enemy(frank,frank).\nbig(apple).\nsibling(bob,george).\nlikes(dave,frank).\nenemy(alice,george).\nsibling(frank,george).\nsad(eve).\ndislikes(frank,car).",
    "natural language": "You are given the following rules:\nIf apple is big, then dave is a sibling of alice.\nIf dave is a sibling of alice, then carol likes apple.\nIf carol likes apple, then alice is an enemy of frank.\nIf alice is an enemy of frank, then frank is a parent of dave.\nIf frank is a parent of dave, then it is sunny.\nIf it is sunny, then frank is a parent of carol.\nIf eve dislikes frank and frank dislikes apple and ball is big, then carol is sad.\nIf bob is tall and dave is hungry, then alice is sad.\nIf it is sunny and frank is an enemy of frank, then pencil is big.\n\nAnd the following facts:\napple is big.\nbob is a sibling of george.\ndave likes frank.\nalice is an enemy of george.\ngeorge is an enemy of carol.\nfrank is a sibling of george.\neve is sad.\nfrank dislikes car.\n\nOBSERVATION: frank is a parent of carol is true.\n\nQUESTION:\nCould george is an enemy of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,george).",
    "c": "sibling(dave,alice) :- big(apple).\nlikes(carol,apple) :- sibling(dave,alice).\nenemy(alice,frank) :- likes(carol,apple).\nparent(frank,dave) :- enemy(alice,frank).\nsunny :- parent(frank,dave).\nparent(frank,carol) :- sunny.\nsad(carol) :- dislikes(eve,frank), dislikes(frank,apple), big(ball).\nsad(alice) :- tall(bob), hungry(dave).\nbig(pencil) :- sunny, enemy(frank,frank).\nbig(apple).\nsibling(bob,george).\nlikes(dave,frank).\nenemy(george,carol).\nsibling(frank,george).\nsad(eve).\ndislikes(frank,car).",
    "natural language": "You are given the following rules:\nIf apple is big, then dave is a sibling of alice.\nIf dave is a sibling of alice, then carol likes apple.\nIf carol likes apple, then alice is an enemy of frank.\nIf alice is an enemy of frank, then frank is a parent of dave.\nIf frank is a parent of dave, then it is sunny.\nIf it is sunny, then frank is a parent of carol.\nIf eve dislikes frank and frank dislikes apple and ball is big, then carol is sad.\nIf bob is tall and dave is hungry, then alice is sad.\nIf it is sunny and frank is an enemy of frank, then pencil is big.\n\nAnd the following facts:\napple is big.\nbob is a sibling of george.\ndave likes frank.\nalice is an enemy of george.\ngeorge is an enemy of carol.\nfrank is a sibling of george.\neve is sad.\nfrank dislikes car.\n\nOBSERVATION: frank is a parent of carol is true.\n\nQUESTION:\nCould alice is an enemy of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,pencil).",
    "c": "sibling(frank,dave) :- owns(frank,apple).\nhappy(eve) :- sibling(frank,dave).\nsad(dave) :- happy(eve).\nfriend(bob,carol) :- sad(dave).\nlikes(george,dave) :- friend(bob,carol).\nparent(george,frank) :- likes(george,dave).\nfriend(carol,carol) :- parent(george,frank).\nsad(dave) :- friend(carol,carol).\ncold :- happy(eve).\nowns(frank,apple).\nsibling(alice,bob).\nparent(alice,eve).\nparent(dave,alice).\nlikes(eve,pencil).\nlikes(alice,pencil).\nsibling(george,bob).\nlikes(bob,george).",
    "natural language": "You are given the following information:\nIf frank owns apple, then frank is a sibling of dave.\nIf frank is a sibling of dave, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then bob is a friend of carol.\nIf bob is a friend of carol, then george likes dave.\nIf george likes dave, then george is a parent of frank.\nIf george is a parent of frank, then carol is a friend of carol.\nIf carol is a friend of carol, then dave is sad.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nfrank owns apple.\nalice is a sibling of bob.\nalice is a parent of eve.\ndave is a parent of alice.\neve likes pencil.\nalice likes pencil.\ngeorge is a sibling of bob.\nbob likes george.\n\nQUESTION:\nIs alice likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,pencil).",
    "c": "sibling(frank,dave) :- owns(frank,apple).\nhappy(eve) :- sibling(frank,dave).\nsad(dave) :- happy(eve).\nfriend(bob,carol) :- sad(dave).\nlikes(george,dave) :- friend(bob,carol).\nparent(george,frank) :- likes(george,dave).\nfriend(carol,carol) :- parent(george,frank).\nsad(dave) :- friend(carol,carol).\ncold :- happy(eve).\nowns(frank,apple).\nsibling(alice,bob).\nparent(alice,eve).\nparent(dave,alice).\nlikes(eve,pencil).\nlikes(alice,pencil).\nsibling(george,bob).\nlikes(bob,george).",
    "natural language": "You are given the following information:\nIf frank owns apple, then frank is a sibling of dave.\nIf frank is a sibling of dave, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then bob is a friend of carol.\nIf bob is a friend of carol, then george likes dave.\nIf george likes dave, then george is a parent of frank.\nIf george is a parent of frank, then carol is a friend of carol.\nIf carol is a friend of carol, then dave is sad.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nfrank owns apple.\nalice is a sibling of bob.\nalice is a parent of eve.\ndave is a parent of alice.\neve likes pencil.\nalice likes pencil.\ngeorge is a sibling of bob.\nbob likes george.\n\nQUESTION:\nIs eve likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "sibling(frank,dave) :- owns(frank,apple).\nhappy(eve) :- sibling(frank,dave).\nsad(dave) :- happy(eve).\nfriend(bob,carol) :- sad(dave).\nlikes(george,dave) :- friend(bob,carol).\nparent(george,frank) :- likes(george,dave).\nfriend(carol,carol) :- parent(george,frank).\nsad(dave) :- friend(carol,carol).\ncold :- happy(eve).\nowns(frank,apple).\nsibling(alice,bob).\nparent(alice,eve).\nparent(dave,alice).\nlikes(eve,pencil).\nlikes(alice,pencil).\nsibling(george,bob).\nlikes(bob,george).",
    "natural language": "You are given the following information:\nIf frank owns apple, then frank is a sibling of dave.\nIf frank is a sibling of dave, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then bob is a friend of carol.\nIf bob is a friend of carol, then george likes dave.\nIf george likes dave, then george is a parent of frank.\nIf george is a parent of frank, then carol is a friend of carol.\nIf carol is a friend of carol, then dave is sad.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nfrank owns apple.\nalice is a sibling of bob.\nalice is a parent of eve.\ndave is a parent of alice.\neve likes pencil.\nalice likes pencil.\ngeorge is a sibling of bob.\nbob likes george.\n\nQUESTION:\nIs george is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,george).",
    "c": "sibling(frank,dave) :- owns(frank,apple).\nhappy(eve) :- sibling(frank,dave).\nsad(dave) :- happy(eve).\nfriend(bob,carol) :- sad(dave).\nlikes(george,dave) :- friend(bob,carol).\nparent(george,frank) :- likes(george,dave).\nfriend(carol,carol) :- parent(george,frank).\nsad(dave) :- friend(carol,carol).\ncold :- happy(eve).\nowns(frank,apple).\nsibling(alice,bob).\nparent(alice,eve).\nparent(dave,alice).\nlikes(eve,pencil).\nlikes(alice,pencil).\nsibling(george,bob).\nlikes(bob,george).",
    "natural language": "You are given the following information:\nIf frank owns apple, then frank is a sibling of dave.\nIf frank is a sibling of dave, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then bob is a friend of carol.\nIf bob is a friend of carol, then george likes dave.\nIf george likes dave, then george is a parent of frank.\nIf george is a parent of frank, then carol is a friend of carol.\nIf carol is a friend of carol, then dave is sad.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nfrank owns apple.\nalice is a sibling of bob.\nalice is a parent of eve.\ndave is a parent of alice.\neve likes pencil.\nalice likes pencil.\ngeorge is a sibling of bob.\nbob likes george.\n\nQUESTION:\nIs dave is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,alice).",
    "c": "sibling(frank,dave) :- owns(frank,apple).\nhappy(eve) :- sibling(frank,dave).\nsad(dave) :- happy(eve).\nfriend(bob,carol) :- sad(dave).\nlikes(george,dave) :- friend(bob,carol).\nparent(george,frank) :- likes(george,dave).\nfriend(carol,carol) :- parent(george,frank).\nsad(dave) :- friend(carol,carol).\ncold :- happy(eve).\nowns(frank,apple).\nsibling(alice,bob).\nparent(alice,eve).\nparent(dave,alice).\nlikes(eve,pencil).\nlikes(alice,pencil).\nsibling(george,bob).\nlikes(bob,george).",
    "natural language": "You are given the following information:\nIf frank owns apple, then frank is a sibling of dave.\nIf frank is a sibling of dave, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then bob is a friend of carol.\nIf bob is a friend of carol, then george likes dave.\nIf george likes dave, then george is a parent of frank.\nIf george is a parent of frank, then carol is a friend of carol.\nIf carol is a friend of carol, then dave is sad.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nfrank owns apple.\nalice is a sibling of bob.\nalice is a parent of eve.\ndave is a parent of alice.\neve likes pencil.\nalice likes pencil.\ngeorge is a sibling of bob.\nbob likes george.\n\nQUESTION:\nIs frank is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,apple).",
    "c": "sibling(frank,dave) :- owns(frank,apple).\nhappy(eve) :- sibling(frank,dave).\nsad(dave) :- happy(eve).\nfriend(bob,carol) :- sad(dave).\nlikes(george,dave) :- friend(bob,carol).\nparent(george,frank) :- likes(george,dave).\nfriend(carol,carol) :- parent(george,frank).\nsad(dave) :- friend(carol,carol).\ncold :- happy(eve).\nsibling(alice,bob).\nparent(alice,eve).\nparent(dave,alice).\nlikes(eve,pencil).\nlikes(alice,pencil).\nsibling(george,bob).\nlikes(bob,george).",
    "natural language": "You are given the following rules:\nIf frank owns apple, then frank is a sibling of dave.\nIf frank is a sibling of dave, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then bob is a friend of carol.\nIf bob is a friend of carol, then george likes dave.\nIf george likes dave, then george is a parent of frank.\nIf george is a parent of frank, then carol is a friend of carol.\nIf carol is a friend of carol, then dave is sad.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nfrank owns apple.\nalice is a sibling of bob.\nalice is a parent of eve.\ndave is a parent of alice.\neve likes pencil.\nalice likes pencil.\ngeorge is a sibling of bob.\nbob likes george.\n\nOBSERVATION: dave is sad is true.\n\nQUESTION:\nCould frank owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "sibling(frank,dave) :- owns(frank,apple).\nhappy(eve) :- sibling(frank,dave).\nsad(dave) :- happy(eve).\nfriend(bob,carol) :- sad(dave).\nlikes(george,dave) :- friend(bob,carol).\nparent(george,frank) :- likes(george,dave).\nfriend(carol,carol) :- parent(george,frank).\nsad(dave) :- friend(carol,carol).\ncold :- happy(eve).\nowns(frank,apple).\nsibling(alice,bob).\nparent(alice,eve).\nlikes(eve,pencil).\nlikes(alice,pencil).\nsibling(george,bob).\nlikes(bob,george).",
    "natural language": "You are given the following rules:\nIf frank owns apple, then frank is a sibling of dave.\nIf frank is a sibling of dave, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then bob is a friend of carol.\nIf bob is a friend of carol, then george likes dave.\nIf george likes dave, then george is a parent of frank.\nIf george is a parent of frank, then carol is a friend of carol.\nIf carol is a friend of carol, then dave is sad.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nfrank owns apple.\nalice is a sibling of bob.\nalice is a parent of eve.\ndave is a parent of alice.\neve likes pencil.\nalice likes pencil.\ngeorge is a sibling of bob.\nbob likes george.\n\nOBSERVATION: dave is sad is true.\n\nQUESTION:\nCould dave is a parent of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,bob).",
    "c": "sibling(frank,dave) :- owns(frank,apple).\nhappy(eve) :- sibling(frank,dave).\nsad(dave) :- happy(eve).\nfriend(bob,carol) :- sad(dave).\nlikes(george,dave) :- friend(bob,carol).\nparent(george,frank) :- likes(george,dave).\nfriend(carol,carol) :- parent(george,frank).\nsad(dave) :- friend(carol,carol).\ncold :- happy(eve).\nowns(frank,apple).\nparent(alice,eve).\nparent(dave,alice).\nlikes(eve,pencil).\nlikes(alice,pencil).\nsibling(george,bob).\nlikes(bob,george).",
    "natural language": "You are given the following rules:\nIf frank owns apple, then frank is a sibling of dave.\nIf frank is a sibling of dave, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then bob is a friend of carol.\nIf bob is a friend of carol, then george likes dave.\nIf george likes dave, then george is a parent of frank.\nIf george is a parent of frank, then carol is a friend of carol.\nIf carol is a friend of carol, then dave is sad.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nfrank owns apple.\nalice is a sibling of bob.\nalice is a parent of eve.\ndave is a parent of alice.\neve likes pencil.\nalice likes pencil.\ngeorge is a sibling of bob.\nbob likes george.\n\nOBSERVATION: dave is sad is true.\n\nQUESTION:\nCould alice is a sibling of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,frank).",
    "c": "parent(bob,george) :- small(pencil).\nwet(apple) :- parent(bob,george).\ndislikes(bob,apple) :- wet(apple).\nbig(phone) :- dislikes(bob,apple).\nhungry(dave) :- big(phone).\nowns(dave,phone) :- hungry(dave).\ntall(george) :- owns(dave,phone).\nlikes(carol,book) :- tall(george).\nsunny :- small(pencil).\nsmall(pencil).\ndislikes(alice,pencil).\nparent(carol,bob).\ndislikes(alice,apple).\nowns(alice,phone).\nparent(dave,eve).\nlikes(george,pencil).\ndislikes(george,frank).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a parent of george.\nIf bob is a parent of george, then apple is wet.\nIf apple is wet, then bob dislikes apple.\nIf bob dislikes apple, then phone is big.\nIf phone is big, then dave is hungry.\nIf dave is hungry, then dave owns phone.\nIf dave owns phone, then george is tall.\nIf george is tall, then carol likes book.\nIf pencil is small, then it is sunny.\n\nAnd the following facts:\npencil is small.\nalice dislikes pencil.\ncarol is a parent of bob.\nalice dislikes apple.\nalice owns phone.\ndave is a parent of eve.\ngeorge likes pencil.\ngeorge dislikes frank.\n\nQUESTION:\nIs george dislikes frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,bob).",
    "c": "parent(bob,george) :- small(pencil).\nwet(apple) :- parent(bob,george).\ndislikes(bob,apple) :- wet(apple).\nbig(phone) :- dislikes(bob,apple).\nhungry(dave) :- big(phone).\nowns(dave,phone) :- hungry(dave).\ntall(george) :- owns(dave,phone).\nlikes(carol,book) :- tall(george).\nsunny :- small(pencil).\nsmall(pencil).\ndislikes(alice,pencil).\nparent(carol,bob).\ndislikes(alice,apple).\nowns(alice,phone).\nparent(dave,eve).\nlikes(george,pencil).\ndislikes(george,frank).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a parent of george.\nIf bob is a parent of george, then apple is wet.\nIf apple is wet, then bob dislikes apple.\nIf bob dislikes apple, then phone is big.\nIf phone is big, then dave is hungry.\nIf dave is hungry, then dave owns phone.\nIf dave owns phone, then george is tall.\nIf george is tall, then carol likes book.\nIf pencil is small, then it is sunny.\n\nAnd the following facts:\npencil is small.\nalice dislikes pencil.\ncarol is a parent of bob.\nalice dislikes apple.\nalice owns phone.\ndave is a parent of eve.\ngeorge likes pencil.\ngeorge dislikes frank.\n\nQUESTION:\nIs carol is a parent of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,pencil).",
    "c": "parent(bob,george) :- small(pencil).\nwet(apple) :- parent(bob,george).\ndislikes(bob,apple) :- wet(apple).\nbig(phone) :- dislikes(bob,apple).\nhungry(dave) :- big(phone).\nowns(dave,phone) :- hungry(dave).\ntall(george) :- owns(dave,phone).\nlikes(carol,book) :- tall(george).\nsunny :- small(pencil).\nsmall(pencil).\ndislikes(alice,pencil).\nparent(carol,bob).\ndislikes(alice,apple).\nowns(alice,phone).\nparent(dave,eve).\nlikes(george,pencil).\ndislikes(george,frank).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a parent of george.\nIf bob is a parent of george, then apple is wet.\nIf apple is wet, then bob dislikes apple.\nIf bob dislikes apple, then phone is big.\nIf phone is big, then dave is hungry.\nIf dave is hungry, then dave owns phone.\nIf dave owns phone, then george is tall.\nIf george is tall, then carol likes book.\nIf pencil is small, then it is sunny.\n\nAnd the following facts:\npencil is small.\nalice dislikes pencil.\ncarol is a parent of bob.\nalice dislikes apple.\nalice owns phone.\ndave is a parent of eve.\ngeorge likes pencil.\ngeorge dislikes frank.\n\nQUESTION:\nIs alice dislikes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,book).",
    "c": "parent(bob,george) :- small(pencil).\nwet(apple) :- parent(bob,george).\ndislikes(bob,apple) :- wet(apple).\nbig(phone) :- dislikes(bob,apple).\nhungry(dave) :- big(phone).\nowns(dave,phone) :- hungry(dave).\ntall(george) :- owns(dave,phone).\nlikes(carol,book) :- tall(george).\nsunny :- small(pencil).\nsmall(pencil).\ndislikes(alice,pencil).\nparent(carol,bob).\ndislikes(alice,apple).\nowns(alice,phone).\nparent(dave,eve).\nlikes(george,pencil).\ndislikes(george,frank).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a parent of george.\nIf bob is a parent of george, then apple is wet.\nIf apple is wet, then bob dislikes apple.\nIf bob dislikes apple, then phone is big.\nIf phone is big, then dave is hungry.\nIf dave is hungry, then dave owns phone.\nIf dave owns phone, then george is tall.\nIf george is tall, then carol likes book.\nIf pencil is small, then it is sunny.\n\nAnd the following facts:\npencil is small.\nalice dislikes pencil.\ncarol is a parent of bob.\nalice dislikes apple.\nalice owns phone.\ndave is a parent of eve.\ngeorge likes pencil.\ngeorge dislikes frank.\n\nQUESTION:\nIs eve owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,book).",
    "c": "parent(bob,george) :- small(pencil).\nwet(apple) :- parent(bob,george).\ndislikes(bob,apple) :- wet(apple).\nbig(phone) :- dislikes(bob,apple).\nhungry(dave) :- big(phone).\nowns(dave,phone) :- hungry(dave).\ntall(george) :- owns(dave,phone).\nlikes(carol,book) :- tall(george).\nsunny :- small(pencil).\nsmall(pencil).\ndislikes(alice,pencil).\nparent(carol,bob).\ndislikes(alice,apple).\nowns(alice,phone).\nparent(dave,eve).\nlikes(george,pencil).\ndislikes(george,frank).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a parent of george.\nIf bob is a parent of george, then apple is wet.\nIf apple is wet, then bob dislikes apple.\nIf bob dislikes apple, then phone is big.\nIf phone is big, then dave is hungry.\nIf dave is hungry, then dave owns phone.\nIf dave owns phone, then george is tall.\nIf george is tall, then carol likes book.\nIf pencil is small, then it is sunny.\n\nAnd the following facts:\npencil is small.\nalice dislikes pencil.\ncarol is a parent of bob.\nalice dislikes apple.\nalice owns phone.\ndave is a parent of eve.\ngeorge likes pencil.\ngeorge dislikes frank.\n\nQUESTION:\nIs george dislikes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "parent(bob,george) :- small(pencil).\nwet(apple) :- parent(bob,george).\ndislikes(bob,apple) :- wet(apple).\nbig(phone) :- dislikes(bob,apple).\nhungry(dave) :- big(phone).\nowns(dave,phone) :- hungry(dave).\ntall(george) :- owns(dave,phone).\nlikes(carol,book) :- tall(george).\nsunny :- small(pencil).\ndislikes(alice,pencil).\nparent(carol,bob).\ndislikes(alice,apple).\nowns(alice,phone).\nparent(dave,eve).\nlikes(george,pencil).\ndislikes(george,frank).",
    "natural language": "You are given the following rules:\nIf pencil is small, then bob is a parent of george.\nIf bob is a parent of george, then apple is wet.\nIf apple is wet, then bob dislikes apple.\nIf bob dislikes apple, then phone is big.\nIf phone is big, then dave is hungry.\nIf dave is hungry, then dave owns phone.\nIf dave owns phone, then george is tall.\nIf george is tall, then carol likes book.\nIf pencil is small, then it is sunny.\n\nAnd the following facts:\npencil is small.\nalice dislikes pencil.\ncarol is a parent of bob.\nalice dislikes apple.\nalice owns phone.\ndave is a parent of eve.\ngeorge likes pencil.\ngeorge dislikes frank.\n\nOBSERVATION: carol likes book is true.\n\nQUESTION:\nCould pencil is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,frank).",
    "c": "parent(bob,george) :- small(pencil).\nwet(apple) :- parent(bob,george).\ndislikes(bob,apple) :- wet(apple).\nbig(phone) :- dislikes(bob,apple).\nhungry(dave) :- big(phone).\nowns(dave,phone) :- hungry(dave).\ntall(george) :- owns(dave,phone).\nlikes(carol,book) :- tall(george).\nsunny :- small(pencil).\nsmall(pencil).\ndislikes(alice,pencil).\nparent(carol,bob).\ndislikes(alice,apple).\nowns(alice,phone).\nparent(dave,eve).\nlikes(george,pencil).",
    "natural language": "You are given the following rules:\nIf pencil is small, then bob is a parent of george.\nIf bob is a parent of george, then apple is wet.\nIf apple is wet, then bob dislikes apple.\nIf bob dislikes apple, then phone is big.\nIf phone is big, then dave is hungry.\nIf dave is hungry, then dave owns phone.\nIf dave owns phone, then george is tall.\nIf george is tall, then carol likes book.\nIf pencil is small, then it is sunny.\n\nAnd the following facts:\npencil is small.\nalice dislikes pencil.\ncarol is a parent of bob.\nalice dislikes apple.\nalice owns phone.\ndave is a parent of eve.\ngeorge likes pencil.\ngeorge dislikes frank.\n\nOBSERVATION: carol likes book is true.\n\nQUESTION:\nCould george dislikes frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(dave,eve).",
    "c": "parent(bob,george) :- small(pencil).\nwet(apple) :- parent(bob,george).\ndislikes(bob,apple) :- wet(apple).\nbig(phone) :- dislikes(bob,apple).\nhungry(dave) :- big(phone).\nowns(dave,phone) :- hungry(dave).\ntall(george) :- owns(dave,phone).\nlikes(carol,book) :- tall(george).\nsunny :- small(pencil).\nsmall(pencil).\ndislikes(alice,pencil).\nparent(carol,bob).\ndislikes(alice,apple).\nowns(alice,phone).\nlikes(george,pencil).\ndislikes(george,frank).",
    "natural language": "You are given the following rules:\nIf pencil is small, then bob is a parent of george.\nIf bob is a parent of george, then apple is wet.\nIf apple is wet, then bob dislikes apple.\nIf bob dislikes apple, then phone is big.\nIf phone is big, then dave is hungry.\nIf dave is hungry, then dave owns phone.\nIf dave owns phone, then george is tall.\nIf george is tall, then carol likes book.\nIf pencil is small, then it is sunny.\n\nAnd the following facts:\npencil is small.\nalice dislikes pencil.\ncarol is a parent of bob.\nalice dislikes apple.\nalice owns phone.\ndave is a parent of eve.\ngeorge likes pencil.\ngeorge dislikes frank.\n\nOBSERVATION: carol likes book is true.\n\nQUESTION:\nCould dave is a parent of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(eve,frank).",
    "c": "friend(eve,frank) :- wet(ball).\ncold :- friend(eve,frank).\nowns(eve,car) :- cold.\nsunny :- owns(eve,car).\nlikes(carol,eve) :- sunny.\nfriend(dave,alice) :- likes(carol,eve).\ndislikes(dave,george) :- friend(dave,alice).\nlikes(alice,phone) :- dislikes(dave,george).\nlikes(george,carol) :- likes(alice,phone).\nsunny :- likes(george,carol).\nwet(ball).\nfriend(george,frank).\ndislikes(eve,frank).\nowns(bob,apple).\nlikes(george,alice).\ndislikes(dave,car).\ndislikes(alice,eve).\nlikes(alice,car).",
    "natural language": "You are given the following information:\nIf ball is wet, then eve is a friend of frank.\nIf eve is a friend of frank, then it is cold.\nIf it is cold, then eve owns car.\nIf eve owns car, then it is sunny.\nIf it is sunny, then carol likes eve.\nIf carol likes eve, then dave is a friend of alice.\nIf dave is a friend of alice, then dave dislikes george.\nIf dave dislikes george, then alice likes phone.\nIf alice likes phone, then george likes carol.\nIf george likes carol, then it is sunny.\n\nAnd the following facts:\nball is wet.\ngeorge is a friend of frank.\neve dislikes frank.\nbob owns apple.\ngeorge likes alice.\ndave dislikes car.\nalice dislikes eve.\nalice likes car.\n\nQUESTION:\nIs eve is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "friend(eve,frank) :- wet(ball).\ncold :- friend(eve,frank).\nowns(eve,car) :- cold.\nsunny :- owns(eve,car).\nlikes(carol,eve) :- sunny.\nfriend(dave,alice) :- likes(carol,eve).\ndislikes(dave,george) :- friend(dave,alice).\nlikes(alice,phone) :- dislikes(dave,george).\nlikes(george,carol) :- likes(alice,phone).\nsunny :- likes(george,carol).\nwet(ball).\nfriend(george,frank).\ndislikes(eve,frank).\nowns(bob,apple).\nlikes(george,alice).\ndislikes(dave,car).\ndislikes(alice,eve).\nlikes(alice,car).",
    "natural language": "You are given the following information:\nIf ball is wet, then eve is a friend of frank.\nIf eve is a friend of frank, then it is cold.\nIf it is cold, then eve owns car.\nIf eve owns car, then it is sunny.\nIf it is sunny, then carol likes eve.\nIf carol likes eve, then dave is a friend of alice.\nIf dave is a friend of alice, then dave dislikes george.\nIf dave dislikes george, then alice likes phone.\nIf alice likes phone, then george likes carol.\nIf george likes carol, then it is sunny.\n\nAnd the following facts:\nball is wet.\ngeorge is a friend of frank.\neve dislikes frank.\nbob owns apple.\ngeorge likes alice.\ndave dislikes car.\nalice dislikes eve.\nalice likes car.\n\nQUESTION:\nIs ball is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,car).",
    "c": "friend(eve,frank) :- wet(ball).\ncold :- friend(eve,frank).\nowns(eve,car) :- cold.\nsunny :- owns(eve,car).\nlikes(carol,eve) :- sunny.\nfriend(dave,alice) :- likes(carol,eve).\ndislikes(dave,george) :- friend(dave,alice).\nlikes(alice,phone) :- dislikes(dave,george).\nlikes(george,carol) :- likes(alice,phone).\nsunny :- likes(george,carol).\nwet(ball).\nfriend(george,frank).\ndislikes(eve,frank).\nowns(bob,apple).\nlikes(george,alice).\ndislikes(dave,car).\ndislikes(alice,eve).\nlikes(alice,car).",
    "natural language": "You are given the following information:\nIf ball is wet, then eve is a friend of frank.\nIf eve is a friend of frank, then it is cold.\nIf it is cold, then eve owns car.\nIf eve owns car, then it is sunny.\nIf it is sunny, then carol likes eve.\nIf carol likes eve, then dave is a friend of alice.\nIf dave is a friend of alice, then dave dislikes george.\nIf dave dislikes george, then alice likes phone.\nIf alice likes phone, then george likes carol.\nIf george likes carol, then it is sunny.\n\nAnd the following facts:\nball is wet.\ngeorge is a friend of frank.\neve dislikes frank.\nbob owns apple.\ngeorge likes alice.\ndave dislikes car.\nalice dislikes eve.\nalice likes car.\n\nQUESTION:\nIs dave dislikes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,pencil).",
    "c": "friend(eve,frank) :- wet(ball).\ncold :- friend(eve,frank).\nowns(eve,car) :- cold.\nsunny :- owns(eve,car).\nlikes(carol,eve) :- sunny.\nfriend(dave,alice) :- likes(carol,eve).\ndislikes(dave,george) :- friend(dave,alice).\nlikes(alice,phone) :- dislikes(dave,george).\nlikes(george,carol) :- likes(alice,phone).\nsunny :- likes(george,carol).\nwet(ball).\nfriend(george,frank).\ndislikes(eve,frank).\nowns(bob,apple).\nlikes(george,alice).\ndislikes(dave,car).\ndislikes(alice,eve).\nlikes(alice,car).",
    "natural language": "You are given the following information:\nIf ball is wet, then eve is a friend of frank.\nIf eve is a friend of frank, then it is cold.\nIf it is cold, then eve owns car.\nIf eve owns car, then it is sunny.\nIf it is sunny, then carol likes eve.\nIf carol likes eve, then dave is a friend of alice.\nIf dave is a friend of alice, then dave dislikes george.\nIf dave dislikes george, then alice likes phone.\nIf alice likes phone, then george likes carol.\nIf george likes carol, then it is sunny.\n\nAnd the following facts:\nball is wet.\ngeorge is a friend of frank.\neve dislikes frank.\nbob owns apple.\ngeorge likes alice.\ndave dislikes car.\nalice dislikes eve.\nalice likes car.\n\nQUESTION:\nIs bob likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,george).",
    "c": "friend(eve,frank) :- wet(ball).\ncold :- friend(eve,frank).\nowns(eve,car) :- cold.\nsunny :- owns(eve,car).\nlikes(carol,eve) :- sunny.\nfriend(dave,alice) :- likes(carol,eve).\ndislikes(dave,george) :- friend(dave,alice).\nlikes(alice,phone) :- dislikes(dave,george).\nlikes(george,carol) :- likes(alice,phone).\nsunny :- likes(george,carol).\nwet(ball).\nfriend(george,frank).\ndislikes(eve,frank).\nowns(bob,apple).\nlikes(george,alice).\ndislikes(dave,car).\ndislikes(alice,eve).\nlikes(alice,car).",
    "natural language": "You are given the following information:\nIf ball is wet, then eve is a friend of frank.\nIf eve is a friend of frank, then it is cold.\nIf it is cold, then eve owns car.\nIf eve owns car, then it is sunny.\nIf it is sunny, then carol likes eve.\nIf carol likes eve, then dave is a friend of alice.\nIf dave is a friend of alice, then dave dislikes george.\nIf dave dislikes george, then alice likes phone.\nIf alice likes phone, then george likes carol.\nIf george likes carol, then it is sunny.\n\nAnd the following facts:\nball is wet.\ngeorge is a friend of frank.\neve dislikes frank.\nbob owns apple.\ngeorge likes alice.\ndave dislikes car.\nalice dislikes eve.\nalice likes car.\n\nQUESTION:\nIs dave likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "friend(eve,frank) :- wet(ball).\ncold :- friend(eve,frank).\nowns(eve,car) :- cold.\nsunny :- owns(eve,car).\nlikes(carol,eve) :- sunny.\nfriend(dave,alice) :- likes(carol,eve).\ndislikes(dave,george) :- friend(dave,alice).\nlikes(alice,phone) :- dislikes(dave,george).\nlikes(george,carol) :- likes(alice,phone).\nsunny :- likes(george,carol).\nfriend(george,frank).\ndislikes(eve,frank).\nowns(bob,apple).\nlikes(george,alice).\ndislikes(dave,car).\ndislikes(alice,eve).\nlikes(alice,car).",
    "natural language": "You are given the following rules:\nIf ball is wet, then eve is a friend of frank.\nIf eve is a friend of frank, then it is cold.\nIf it is cold, then eve owns car.\nIf eve owns car, then it is sunny.\nIf it is sunny, then carol likes eve.\nIf carol likes eve, then dave is a friend of alice.\nIf dave is a friend of alice, then dave dislikes george.\nIf dave dislikes george, then alice likes phone.\nIf alice likes phone, then george likes carol.\nIf george likes carol, then it is sunny.\n\nAnd the following facts:\nball is wet.\ngeorge is a friend of frank.\neve dislikes frank.\nbob owns apple.\ngeorge likes alice.\ndave dislikes car.\nalice dislikes eve.\nalice likes car.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould ball is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(bob,apple).",
    "c": "friend(eve,frank) :- wet(ball).\ncold :- friend(eve,frank).\nowns(eve,car) :- cold.\nsunny :- owns(eve,car).\nlikes(carol,eve) :- sunny.\nfriend(dave,alice) :- likes(carol,eve).\ndislikes(dave,george) :- friend(dave,alice).\nlikes(alice,phone) :- dislikes(dave,george).\nlikes(george,carol) :- likes(alice,phone).\nsunny :- likes(george,carol).\nwet(ball).\nfriend(george,frank).\ndislikes(eve,frank).\nlikes(george,alice).\ndislikes(dave,car).\ndislikes(alice,eve).\nlikes(alice,car).",
    "natural language": "You are given the following rules:\nIf ball is wet, then eve is a friend of frank.\nIf eve is a friend of frank, then it is cold.\nIf it is cold, then eve owns car.\nIf eve owns car, then it is sunny.\nIf it is sunny, then carol likes eve.\nIf carol likes eve, then dave is a friend of alice.\nIf dave is a friend of alice, then dave dislikes george.\nIf dave dislikes george, then alice likes phone.\nIf alice likes phone, then george likes carol.\nIf george likes carol, then it is sunny.\n\nAnd the following facts:\nball is wet.\ngeorge is a friend of frank.\neve dislikes frank.\nbob owns apple.\ngeorge likes alice.\ndave dislikes car.\nalice dislikes eve.\nalice likes car.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould bob owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,car).",
    "c": "friend(eve,frank) :- wet(ball).\ncold :- friend(eve,frank).\nowns(eve,car) :- cold.\nsunny :- owns(eve,car).\nlikes(carol,eve) :- sunny.\nfriend(dave,alice) :- likes(carol,eve).\ndislikes(dave,george) :- friend(dave,alice).\nlikes(alice,phone) :- dislikes(dave,george).\nlikes(george,carol) :- likes(alice,phone).\nsunny :- likes(george,carol).\nwet(ball).\nfriend(george,frank).\ndislikes(eve,frank).\nowns(bob,apple).\nlikes(george,alice).\ndislikes(dave,car).\ndislikes(alice,eve).",
    "natural language": "You are given the following rules:\nIf ball is wet, then eve is a friend of frank.\nIf eve is a friend of frank, then it is cold.\nIf it is cold, then eve owns car.\nIf eve owns car, then it is sunny.\nIf it is sunny, then carol likes eve.\nIf carol likes eve, then dave is a friend of alice.\nIf dave is a friend of alice, then dave dislikes george.\nIf dave dislikes george, then alice likes phone.\nIf alice likes phone, then george likes carol.\nIf george likes carol, then it is sunny.\n\nAnd the following facts:\nball is wet.\ngeorge is a friend of frank.\neve dislikes frank.\nbob owns apple.\ngeorge likes alice.\ndave dislikes car.\nalice dislikes eve.\nalice likes car.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould alice likes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(eve,book).",
    "c": "parent(bob,alice) :- dislikes(alice,eve).\nsibling(george,carol) :- parent(bob,alice).\nowns(frank,car) :- sibling(george,carol).\nowns(dave,apple) :- owns(frank,car).\nlikes(alice,dave) :- owns(dave,apple).\nhappy(george) :- likes(alice,dave).\nwet(car) :- happy(george).\nwet(apple) :- wet(car).\ndislikes(dave,bob) :- wet(apple).\nsunny :- dislikes(dave,bob).\ndislikes(alice,eve).\nlikes(carol,phone).\nowns(eve,book).\nlikes(dave,bob).\ndislikes(alice,dave).\nsibling(alice,eve).\nparent(george,carol).\nhappy(eve).",
    "natural language": "You are given the following information:\nIf alice dislikes eve, then bob is a parent of alice.\nIf bob is a parent of alice, then george is a sibling of carol.\nIf george is a sibling of carol, then frank owns car.\nIf frank owns car, then dave owns apple.\nIf dave owns apple, then alice likes dave.\nIf alice likes dave, then george is happy.\nIf george is happy, then car is wet.\nIf car is wet, then apple is wet.\nIf apple is wet, then dave dislikes bob.\nIf dave dislikes bob, then it is sunny.\n\nAnd the following facts:\nalice dislikes eve.\ncarol likes phone.\neve owns book.\ndave likes bob.\nalice dislikes dave.\nalice is a sibling of eve.\ngeorge is a parent of carol.\neve is happy.\n\nQUESTION:\nIs eve owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,eve).",
    "c": "parent(bob,alice) :- dislikes(alice,eve).\nsibling(george,carol) :- parent(bob,alice).\nowns(frank,car) :- sibling(george,carol).\nowns(dave,apple) :- owns(frank,car).\nlikes(alice,dave) :- owns(dave,apple).\nhappy(george) :- likes(alice,dave).\nwet(car) :- happy(george).\nwet(apple) :- wet(car).\ndislikes(dave,bob) :- wet(apple).\nsunny :- dislikes(dave,bob).\ndislikes(alice,eve).\nlikes(carol,phone).\nowns(eve,book).\nlikes(dave,bob).\ndislikes(alice,dave).\nsibling(alice,eve).\nparent(george,carol).\nhappy(eve).",
    "natural language": "You are given the following information:\nIf alice dislikes eve, then bob is a parent of alice.\nIf bob is a parent of alice, then george is a sibling of carol.\nIf george is a sibling of carol, then frank owns car.\nIf frank owns car, then dave owns apple.\nIf dave owns apple, then alice likes dave.\nIf alice likes dave, then george is happy.\nIf george is happy, then car is wet.\nIf car is wet, then apple is wet.\nIf apple is wet, then dave dislikes bob.\nIf dave dislikes bob, then it is sunny.\n\nAnd the following facts:\nalice dislikes eve.\ncarol likes phone.\neve owns book.\ndave likes bob.\nalice dislikes dave.\nalice is a sibling of eve.\ngeorge is a parent of carol.\neve is happy.\n\nQUESTION:\nIs alice dislikes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "parent(bob,alice) :- dislikes(alice,eve).\nsibling(george,carol) :- parent(bob,alice).\nowns(frank,car) :- sibling(george,carol).\nowns(dave,apple) :- owns(frank,car).\nlikes(alice,dave) :- owns(dave,apple).\nhappy(george) :- likes(alice,dave).\nwet(car) :- happy(george).\nwet(apple) :- wet(car).\ndislikes(dave,bob) :- wet(apple).\nsunny :- dislikes(dave,bob).\ndislikes(alice,eve).\nlikes(carol,phone).\nowns(eve,book).\nlikes(dave,bob).\ndislikes(alice,dave).\nsibling(alice,eve).\nparent(george,carol).\nhappy(eve).",
    "natural language": "You are given the following information:\nIf alice dislikes eve, then bob is a parent of alice.\nIf bob is a parent of alice, then george is a sibling of carol.\nIf george is a sibling of carol, then frank owns car.\nIf frank owns car, then dave owns apple.\nIf dave owns apple, then alice likes dave.\nIf alice likes dave, then george is happy.\nIf george is happy, then car is wet.\nIf car is wet, then apple is wet.\nIf apple is wet, then dave dislikes bob.\nIf dave dislikes bob, then it is sunny.\n\nAnd the following facts:\nalice dislikes eve.\ncarol likes phone.\neve owns book.\ndave likes bob.\nalice dislikes dave.\nalice is a sibling of eve.\ngeorge is a parent of carol.\neve is happy.\n\nQUESTION:\nIs apple is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,dave).",
    "c": "parent(bob,alice) :- dislikes(alice,eve).\nsibling(george,carol) :- parent(bob,alice).\nowns(frank,car) :- sibling(george,carol).\nowns(dave,apple) :- owns(frank,car).\nlikes(alice,dave) :- owns(dave,apple).\nhappy(george) :- likes(alice,dave).\nwet(car) :- happy(george).\nwet(apple) :- wet(car).\ndislikes(dave,bob) :- wet(apple).\nsunny :- dislikes(dave,bob).\ndislikes(alice,eve).\nlikes(carol,phone).\nowns(eve,book).\nlikes(dave,bob).\ndislikes(alice,dave).\nsibling(alice,eve).\nparent(george,carol).\nhappy(eve).",
    "natural language": "You are given the following information:\nIf alice dislikes eve, then bob is a parent of alice.\nIf bob is a parent of alice, then george is a sibling of carol.\nIf george is a sibling of carol, then frank owns car.\nIf frank owns car, then dave owns apple.\nIf dave owns apple, then alice likes dave.\nIf alice likes dave, then george is happy.\nIf george is happy, then car is wet.\nIf car is wet, then apple is wet.\nIf apple is wet, then dave dislikes bob.\nIf dave dislikes bob, then it is sunny.\n\nAnd the following facts:\nalice dislikes eve.\ncarol likes phone.\neve owns book.\ndave likes bob.\nalice dislikes dave.\nalice is a sibling of eve.\ngeorge is a parent of carol.\neve is happy.\n\nQUESTION:\nIs george likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "parent(bob,alice) :- dislikes(alice,eve).\nsibling(george,carol) :- parent(bob,alice).\nowns(frank,car) :- sibling(george,carol).\nowns(dave,apple) :- owns(frank,car).\nlikes(alice,dave) :- owns(dave,apple).\nhappy(george) :- likes(alice,dave).\nwet(car) :- happy(george).\nwet(apple) :- wet(car).\ndislikes(dave,bob) :- wet(apple).\nsunny :- dislikes(dave,bob).\ndislikes(alice,eve).\nlikes(carol,phone).\nowns(eve,book).\nlikes(dave,bob).\ndislikes(alice,dave).\nsibling(alice,eve).\nparent(george,carol).\nhappy(eve).",
    "natural language": "You are given the following information:\nIf alice dislikes eve, then bob is a parent of alice.\nIf bob is a parent of alice, then george is a sibling of carol.\nIf george is a sibling of carol, then frank owns car.\nIf frank owns car, then dave owns apple.\nIf dave owns apple, then alice likes dave.\nIf alice likes dave, then george is happy.\nIf george is happy, then car is wet.\nIf car is wet, then apple is wet.\nIf apple is wet, then dave dislikes bob.\nIf dave dislikes bob, then it is sunny.\n\nAnd the following facts:\nalice dislikes eve.\ncarol likes phone.\neve owns book.\ndave likes bob.\nalice dislikes dave.\nalice is a sibling of eve.\ngeorge is a parent of carol.\neve is happy.\n\nQUESTION:\nIs eve is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,eve).",
    "c": "parent(bob,alice) :- dislikes(alice,eve).\nsibling(george,carol) :- parent(bob,alice).\nowns(frank,car) :- sibling(george,carol).\nowns(dave,apple) :- owns(frank,car).\nlikes(alice,dave) :- owns(dave,apple).\nhappy(george) :- likes(alice,dave).\nwet(car) :- happy(george).\nwet(apple) :- wet(car).\ndislikes(dave,bob) :- wet(apple).\nsunny :- dislikes(dave,bob).\nlikes(carol,phone).\nowns(eve,book).\nlikes(dave,bob).\ndislikes(alice,dave).\nsibling(alice,eve).\nparent(george,carol).\nhappy(eve).",
    "natural language": "You are given the following rules:\nIf alice dislikes eve, then bob is a parent of alice.\nIf bob is a parent of alice, then george is a sibling of carol.\nIf george is a sibling of carol, then frank owns car.\nIf frank owns car, then dave owns apple.\nIf dave owns apple, then alice likes dave.\nIf alice likes dave, then george is happy.\nIf george is happy, then car is wet.\nIf car is wet, then apple is wet.\nIf apple is wet, then dave dislikes bob.\nIf dave dislikes bob, then it is sunny.\n\nAnd the following facts:\nalice dislikes eve.\ncarol likes phone.\neve owns book.\ndave likes bob.\nalice dislikes dave.\nalice is a sibling of eve.\ngeorge is a parent of carol.\neve is happy.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould alice dislikes eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(eve).",
    "c": "parent(bob,alice) :- dislikes(alice,eve).\nsibling(george,carol) :- parent(bob,alice).\nowns(frank,car) :- sibling(george,carol).\nowns(dave,apple) :- owns(frank,car).\nlikes(alice,dave) :- owns(dave,apple).\nhappy(george) :- likes(alice,dave).\nwet(car) :- happy(george).\nwet(apple) :- wet(car).\ndislikes(dave,bob) :- wet(apple).\nsunny :- dislikes(dave,bob).\ndislikes(alice,eve).\nlikes(carol,phone).\nowns(eve,book).\nlikes(dave,bob).\ndislikes(alice,dave).\nsibling(alice,eve).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf alice dislikes eve, then bob is a parent of alice.\nIf bob is a parent of alice, then george is a sibling of carol.\nIf george is a sibling of carol, then frank owns car.\nIf frank owns car, then dave owns apple.\nIf dave owns apple, then alice likes dave.\nIf alice likes dave, then george is happy.\nIf george is happy, then car is wet.\nIf car is wet, then apple is wet.\nIf apple is wet, then dave dislikes bob.\nIf dave dislikes bob, then it is sunny.\n\nAnd the following facts:\nalice dislikes eve.\ncarol likes phone.\neve owns book.\ndave likes bob.\nalice dislikes dave.\nalice is a sibling of eve.\ngeorge is a parent of carol.\neve is happy.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould eve is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,dave).",
    "c": "parent(bob,alice) :- dislikes(alice,eve).\nsibling(george,carol) :- parent(bob,alice).\nowns(frank,car) :- sibling(george,carol).\nowns(dave,apple) :- owns(frank,car).\nlikes(alice,dave) :- owns(dave,apple).\nhappy(george) :- likes(alice,dave).\nwet(car) :- happy(george).\nwet(apple) :- wet(car).\ndislikes(dave,bob) :- wet(apple).\nsunny :- dislikes(dave,bob).\ndislikes(alice,eve).\nlikes(carol,phone).\nowns(eve,book).\nlikes(dave,bob).\nsibling(alice,eve).\nparent(george,carol).\nhappy(eve).",
    "natural language": "You are given the following rules:\nIf alice dislikes eve, then bob is a parent of alice.\nIf bob is a parent of alice, then george is a sibling of carol.\nIf george is a sibling of carol, then frank owns car.\nIf frank owns car, then dave owns apple.\nIf dave owns apple, then alice likes dave.\nIf alice likes dave, then george is happy.\nIf george is happy, then car is wet.\nIf car is wet, then apple is wet.\nIf apple is wet, then dave dislikes bob.\nIf dave dislikes bob, then it is sunny.\n\nAnd the following facts:\nalice dislikes eve.\ncarol likes phone.\neve owns book.\ndave likes bob.\nalice dislikes dave.\nalice is a sibling of eve.\ngeorge is a parent of carol.\neve is happy.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould alice dislikes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,car).",
    "c": "hungry(carol) :- likes(carol,car).\nwet(car) :- hungry(carol).\nsunny :- sad(carol), sunny, likes(george,apple).\nenemy(bob,frank) :- cold, enemy(alice,bob), hungry(dave).\nsunny :- sunny, hot.\nsad(bob) :- wet(phone), sad(eve), hot.\nsmall(phone) :- wet(apple), small(apple).\nsad(dave) :- hot, sad(carol).\nwet(apple) :- likes(george,phone), wet(pencil), friend(bob,dave).\nlikes(carol,car).\nsad(carol).\nfriend(eve,alice).\nlikes(bob,carol).\nlikes(carol,dave).\nfriend(frank,carol).\nlikes(bob,car).\nlikes(alice,george).\nenemy(george,carol).\nlikes(bob,frank).\nlikes(frank,car).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf carol likes car, then carol is hungry.\nIf carol is hungry, then car is wet.\nIf carol is sad and it is sunny and george likes apple, then it is sunny.\nIf it is cold and alice is an enemy of bob and dave is hungry, then bob is an enemy of frank.\nIf it is sunny and it is hot, then it is sunny.\nIf phone is wet and eve is sad and it is hot, then bob is sad.\nIf apple is wet and apple is small, then phone is small.\nIf it is hot and carol is sad, then dave is sad.\nIf george likes phone and pencil is wet and bob is a friend of dave, then apple is wet.\n\nAnd the following facts:\ncarol likes car.\ncarol is sad.\neve is a friend of alice.\nbob likes carol.\ncarol likes dave.\nfrank is a friend of carol.\nbob likes car.\nalice likes george.\ngeorge is an enemy of carol.\nbob likes frank.\nfrank likes car.\ndave likes alice.\n\nQUESTION:\nIs carol likes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,carol).",
    "c": "hungry(carol) :- likes(carol,car).\nwet(car) :- hungry(carol).\nsunny :- sad(carol), sunny, likes(george,apple).\nenemy(bob,frank) :- cold, enemy(alice,bob), hungry(dave).\nsunny :- sunny, hot.\nsad(bob) :- wet(phone), sad(eve), hot.\nsmall(phone) :- wet(apple), small(apple).\nsad(dave) :- hot, sad(carol).\nwet(apple) :- likes(george,phone), wet(pencil), friend(bob,dave).\nlikes(carol,car).\nsad(carol).\nfriend(eve,alice).\nlikes(bob,carol).\nlikes(carol,dave).\nfriend(frank,carol).\nlikes(bob,car).\nlikes(alice,george).\nenemy(george,carol).\nlikes(bob,frank).\nlikes(frank,car).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf carol likes car, then carol is hungry.\nIf carol is hungry, then car is wet.\nIf carol is sad and it is sunny and george likes apple, then it is sunny.\nIf it is cold and alice is an enemy of bob and dave is hungry, then bob is an enemy of frank.\nIf it is sunny and it is hot, then it is sunny.\nIf phone is wet and eve is sad and it is hot, then bob is sad.\nIf apple is wet and apple is small, then phone is small.\nIf it is hot and carol is sad, then dave is sad.\nIf george likes phone and pencil is wet and bob is a friend of dave, then apple is wet.\n\nAnd the following facts:\ncarol likes car.\ncarol is sad.\neve is a friend of alice.\nbob likes carol.\ncarol likes dave.\nfrank is a friend of carol.\nbob likes car.\nalice likes george.\ngeorge is an enemy of carol.\nbob likes frank.\nfrank likes car.\ndave likes alice.\n\nQUESTION:\nIs bob likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,carol).",
    "c": "hungry(carol) :- likes(carol,car).\nwet(car) :- hungry(carol).\nsunny :- sad(carol), sunny, likes(george,apple).\nenemy(bob,frank) :- cold, enemy(alice,bob), hungry(dave).\nsunny :- sunny, hot.\nsad(bob) :- wet(phone), sad(eve), hot.\nsmall(phone) :- wet(apple), small(apple).\nsad(dave) :- hot, sad(carol).\nwet(apple) :- likes(george,phone), wet(pencil), friend(bob,dave).\nlikes(carol,car).\nsad(carol).\nfriend(eve,alice).\nlikes(bob,carol).\nlikes(carol,dave).\nfriend(frank,carol).\nlikes(bob,car).\nlikes(alice,george).\nenemy(george,carol).\nlikes(bob,frank).\nlikes(frank,car).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf carol likes car, then carol is hungry.\nIf carol is hungry, then car is wet.\nIf carol is sad and it is sunny and george likes apple, then it is sunny.\nIf it is cold and alice is an enemy of bob and dave is hungry, then bob is an enemy of frank.\nIf it is sunny and it is hot, then it is sunny.\nIf phone is wet and eve is sad and it is hot, then bob is sad.\nIf apple is wet and apple is small, then phone is small.\nIf it is hot and carol is sad, then dave is sad.\nIf george likes phone and pencil is wet and bob is a friend of dave, then apple is wet.\n\nAnd the following facts:\ncarol likes car.\ncarol is sad.\neve is a friend of alice.\nbob likes carol.\ncarol likes dave.\nfrank is a friend of carol.\nbob likes car.\nalice likes george.\ngeorge is an enemy of carol.\nbob likes frank.\nfrank likes car.\ndave likes alice.\n\nQUESTION:\nIs frank is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "hungry(carol) :- likes(carol,car).\nwet(car) :- hungry(carol).\nsunny :- sad(carol), sunny, likes(george,apple).\nenemy(bob,frank) :- cold, enemy(alice,bob), hungry(dave).\nsunny :- sunny, hot.\nsad(bob) :- wet(phone), sad(eve), hot.\nsmall(phone) :- wet(apple), small(apple).\nsad(dave) :- hot, sad(carol).\nwet(apple) :- likes(george,phone), wet(pencil), friend(bob,dave).\nlikes(carol,car).\nsad(carol).\nfriend(eve,alice).\nlikes(bob,carol).\nlikes(carol,dave).\nfriend(frank,carol).\nlikes(bob,car).\nlikes(alice,george).\nenemy(george,carol).\nlikes(bob,frank).\nlikes(frank,car).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf carol likes car, then carol is hungry.\nIf carol is hungry, then car is wet.\nIf carol is sad and it is sunny and george likes apple, then it is sunny.\nIf it is cold and alice is an enemy of bob and dave is hungry, then bob is an enemy of frank.\nIf it is sunny and it is hot, then it is sunny.\nIf phone is wet and eve is sad and it is hot, then bob is sad.\nIf apple is wet and apple is small, then phone is small.\nIf it is hot and carol is sad, then dave is sad.\nIf george likes phone and pencil is wet and bob is a friend of dave, then apple is wet.\n\nAnd the following facts:\ncarol likes car.\ncarol is sad.\neve is a friend of alice.\nbob likes carol.\ncarol likes dave.\nfrank is a friend of carol.\nbob likes car.\nalice likes george.\ngeorge is an enemy of carol.\nbob likes frank.\nfrank likes car.\ndave likes alice.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,carol).",
    "c": "hungry(carol) :- likes(carol,car).\nwet(car) :- hungry(carol).\nsunny :- sad(carol), sunny, likes(george,apple).\nenemy(bob,frank) :- cold, enemy(alice,bob), hungry(dave).\nsunny :- sunny, hot.\nsad(bob) :- wet(phone), sad(eve), hot.\nsmall(phone) :- wet(apple), small(apple).\nsad(dave) :- hot, sad(carol).\nwet(apple) :- likes(george,phone), wet(pencil), friend(bob,dave).\nlikes(carol,car).\nsad(carol).\nfriend(eve,alice).\nlikes(bob,carol).\nlikes(carol,dave).\nfriend(frank,carol).\nlikes(bob,car).\nlikes(alice,george).\nenemy(george,carol).\nlikes(bob,frank).\nlikes(frank,car).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf carol likes car, then carol is hungry.\nIf carol is hungry, then car is wet.\nIf carol is sad and it is sunny and george likes apple, then it is sunny.\nIf it is cold and alice is an enemy of bob and dave is hungry, then bob is an enemy of frank.\nIf it is sunny and it is hot, then it is sunny.\nIf phone is wet and eve is sad and it is hot, then bob is sad.\nIf apple is wet and apple is small, then phone is small.\nIf it is hot and carol is sad, then dave is sad.\nIf george likes phone and pencil is wet and bob is a friend of dave, then apple is wet.\n\nAnd the following facts:\ncarol likes car.\ncarol is sad.\neve is a friend of alice.\nbob likes carol.\ncarol likes dave.\nfrank is a friend of carol.\nbob likes car.\nalice likes george.\ngeorge is an enemy of carol.\nbob likes frank.\nfrank likes car.\ndave likes alice.\n\nQUESTION:\nIs alice likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,car).",
    "c": "hungry(carol) :- likes(carol,car).\nwet(car) :- hungry(carol).\nsunny :- sad(carol), sunny, likes(george,apple).\nenemy(bob,frank) :- cold, enemy(alice,bob), hungry(dave).\nsunny :- sunny, hot.\nsad(bob) :- wet(phone), sad(eve), hot.\nsmall(phone) :- wet(apple), small(apple).\nsad(dave) :- hot, sad(carol).\nwet(apple) :- likes(george,phone), wet(pencil), friend(bob,dave).\nsad(carol).\nfriend(eve,alice).\nlikes(bob,carol).\nlikes(carol,dave).\nfriend(frank,carol).\nlikes(bob,car).\nlikes(alice,george).\nenemy(george,carol).\nlikes(bob,frank).\nlikes(frank,car).\nlikes(dave,alice).",
    "natural language": "You are given the following rules:\nIf carol likes car, then carol is hungry.\nIf carol is hungry, then car is wet.\nIf carol is sad and it is sunny and george likes apple, then it is sunny.\nIf it is cold and alice is an enemy of bob and dave is hungry, then bob is an enemy of frank.\nIf it is sunny and it is hot, then it is sunny.\nIf phone is wet and eve is sad and it is hot, then bob is sad.\nIf apple is wet and apple is small, then phone is small.\nIf it is hot and carol is sad, then dave is sad.\nIf george likes phone and pencil is wet and bob is a friend of dave, then apple is wet.\n\nAnd the following facts:\ncarol likes car.\ncarol is sad.\neve is a friend of alice.\nbob likes carol.\ncarol likes dave.\nfrank is a friend of carol.\nbob likes car.\nalice likes george.\ngeorge is an enemy of carol.\nbob likes frank.\nfrank likes car.\ndave likes alice.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould carol likes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "hungry(carol) :- likes(carol,car).\nwet(car) :- hungry(carol).\nsunny :- sad(carol), sunny, likes(george,apple).\nenemy(bob,frank) :- cold, enemy(alice,bob), hungry(dave).\nsunny :- sunny, hot.\nsad(bob) :- wet(phone), sad(eve), hot.\nsmall(phone) :- wet(apple), small(apple).\nsad(dave) :- hot, sad(carol).\nwet(apple) :- likes(george,phone), wet(pencil), friend(bob,dave).\nlikes(carol,car).\nsad(carol).\nlikes(bob,carol).\nlikes(carol,dave).\nfriend(frank,carol).\nlikes(bob,car).\nlikes(alice,george).\nenemy(george,carol).\nlikes(bob,frank).\nlikes(frank,car).\nlikes(dave,alice).",
    "natural language": "You are given the following rules:\nIf carol likes car, then carol is hungry.\nIf carol is hungry, then car is wet.\nIf carol is sad and it is sunny and george likes apple, then it is sunny.\nIf it is cold and alice is an enemy of bob and dave is hungry, then bob is an enemy of frank.\nIf it is sunny and it is hot, then it is sunny.\nIf phone is wet and eve is sad and it is hot, then bob is sad.\nIf apple is wet and apple is small, then phone is small.\nIf it is hot and carol is sad, then dave is sad.\nIf george likes phone and pencil is wet and bob is a friend of dave, then apple is wet.\n\nAnd the following facts:\ncarol likes car.\ncarol is sad.\neve is a friend of alice.\nbob likes carol.\ncarol likes dave.\nfrank is a friend of carol.\nbob likes car.\nalice likes george.\ngeorge is an enemy of carol.\nbob likes frank.\nfrank likes car.\ndave likes alice.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould eve is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,frank).",
    "c": "hungry(carol) :- likes(carol,car).\nwet(car) :- hungry(carol).\nsunny :- sad(carol), sunny, likes(george,apple).\nenemy(bob,frank) :- cold, enemy(alice,bob), hungry(dave).\nsunny :- sunny, hot.\nsad(bob) :- wet(phone), sad(eve), hot.\nsmall(phone) :- wet(apple), small(apple).\nsad(dave) :- hot, sad(carol).\nwet(apple) :- likes(george,phone), wet(pencil), friend(bob,dave).\nlikes(carol,car).\nsad(carol).\nfriend(eve,alice).\nlikes(bob,carol).\nlikes(carol,dave).\nfriend(frank,carol).\nlikes(bob,car).\nlikes(alice,george).\nenemy(george,carol).\nlikes(frank,car).\nlikes(dave,alice).",
    "natural language": "You are given the following rules:\nIf carol likes car, then carol is hungry.\nIf carol is hungry, then car is wet.\nIf carol is sad and it is sunny and george likes apple, then it is sunny.\nIf it is cold and alice is an enemy of bob and dave is hungry, then bob is an enemy of frank.\nIf it is sunny and it is hot, then it is sunny.\nIf phone is wet and eve is sad and it is hot, then bob is sad.\nIf apple is wet and apple is small, then phone is small.\nIf it is hot and carol is sad, then dave is sad.\nIf george likes phone and pencil is wet and bob is a friend of dave, then apple is wet.\n\nAnd the following facts:\ncarol likes car.\ncarol is sad.\neve is a friend of alice.\nbob likes carol.\ncarol likes dave.\nfrank is a friend of carol.\nbob likes car.\nalice likes george.\ngeorge is an enemy of carol.\nbob likes frank.\nfrank likes car.\ndave likes alice.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould bob likes frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "hot :- wet(book).\nwet(pencil) :- hot.\ntall(eve) :- tall(bob), dislikes(carol,book), sunny.\ntall(carol) :- small(book), hungry(george), cold.\nhappy(dave) :- tall(carol), sibling(frank,dave), cold.\nhappy(carol) :- sibling(carol,eve), small(book), wet(apple).\nwet(ball) :- parent(carol,eve), owns(eve,apple), hungry(eve).\nwet(pencil) :- small(phone), dislikes(bob,bob), big(ball).\nwet(ball) :- sibling(george,dave), wet(apple), cold.\nwet(book).\nparent(alice,bob).\nowns(frank,ball).\nowns(frank,book).\nowns(alice,phone).\nparent(alice,frank).\ndislikes(dave,alice).\nsibling(eve,bob).\ndislikes(george,dave).\nsibling(dave,frank).\nparent(alice,carol).\ndislikes(eve,dave).",
    "natural language": "You are given the following information:\nIf book is wet, then it is hot.\nIf it is hot, then pencil is wet.\nIf bob is tall and carol dislikes book and it is sunny, then eve is tall.\nIf book is small and george is hungry and it is cold, then carol is tall.\nIf carol is tall and frank is a sibling of dave and it is cold, then dave is happy.\nIf carol is a sibling of eve and book is small and apple is wet, then carol is happy.\nIf carol is a parent of eve and eve owns apple and eve is hungry, then ball is wet.\nIf phone is small and bob dislikes bob and ball is big, then pencil is wet.\nIf george is a sibling of dave and apple is wet and it is cold, then ball is wet.\n\nAnd the following facts:\nbook is wet.\nalice is a parent of bob.\nfrank owns ball.\nfrank owns book.\nalice owns phone.\nalice is a parent of frank.\ndave dislikes alice.\neve is a sibling of bob.\ngeorge dislikes dave.\ndave is a sibling of frank.\nalice is a parent of carol.\neve dislikes dave.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,phone).",
    "c": "hot :- wet(book).\nwet(pencil) :- hot.\ntall(eve) :- tall(bob), dislikes(carol,book), sunny.\ntall(carol) :- small(book), hungry(george), cold.\nhappy(dave) :- tall(carol), sibling(frank,dave), cold.\nhappy(carol) :- sibling(carol,eve), small(book), wet(apple).\nwet(ball) :- parent(carol,eve), owns(eve,apple), hungry(eve).\nwet(pencil) :- small(phone), dislikes(bob,bob), big(ball).\nwet(ball) :- sibling(george,dave), wet(apple), cold.\nwet(book).\nparent(alice,bob).\nowns(frank,ball).\nowns(frank,book).\nowns(alice,phone).\nparent(alice,frank).\ndislikes(dave,alice).\nsibling(eve,bob).\ndislikes(george,dave).\nsibling(dave,frank).\nparent(alice,carol).\ndislikes(eve,dave).",
    "natural language": "You are given the following information:\nIf book is wet, then it is hot.\nIf it is hot, then pencil is wet.\nIf bob is tall and carol dislikes book and it is sunny, then eve is tall.\nIf book is small and george is hungry and it is cold, then carol is tall.\nIf carol is tall and frank is a sibling of dave and it is cold, then dave is happy.\nIf carol is a sibling of eve and book is small and apple is wet, then carol is happy.\nIf carol is a parent of eve and eve owns apple and eve is hungry, then ball is wet.\nIf phone is small and bob dislikes bob and ball is big, then pencil is wet.\nIf george is a sibling of dave and apple is wet and it is cold, then ball is wet.\n\nAnd the following facts:\nbook is wet.\nalice is a parent of bob.\nfrank owns ball.\nfrank owns book.\nalice owns phone.\nalice is a parent of frank.\ndave dislikes alice.\neve is a sibling of bob.\ngeorge dislikes dave.\ndave is a sibling of frank.\nalice is a parent of carol.\neve dislikes dave.\n\nQUESTION:\nIs alice owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,alice).",
    "c": "hot :- wet(book).\nwet(pencil) :- hot.\ntall(eve) :- tall(bob), dislikes(carol,book), sunny.\ntall(carol) :- small(book), hungry(george), cold.\nhappy(dave) :- tall(carol), sibling(frank,dave), cold.\nhappy(carol) :- sibling(carol,eve), small(book), wet(apple).\nwet(ball) :- parent(carol,eve), owns(eve,apple), hungry(eve).\nwet(pencil) :- small(phone), dislikes(bob,bob), big(ball).\nwet(ball) :- sibling(george,dave), wet(apple), cold.\nwet(book).\nparent(alice,bob).\nowns(frank,ball).\nowns(frank,book).\nowns(alice,phone).\nparent(alice,frank).\ndislikes(dave,alice).\nsibling(eve,bob).\ndislikes(george,dave).\nsibling(dave,frank).\nparent(alice,carol).\ndislikes(eve,dave).",
    "natural language": "You are given the following information:\nIf book is wet, then it is hot.\nIf it is hot, then pencil is wet.\nIf bob is tall and carol dislikes book and it is sunny, then eve is tall.\nIf book is small and george is hungry and it is cold, then carol is tall.\nIf carol is tall and frank is a sibling of dave and it is cold, then dave is happy.\nIf carol is a sibling of eve and book is small and apple is wet, then carol is happy.\nIf carol is a parent of eve and eve owns apple and eve is hungry, then ball is wet.\nIf phone is small and bob dislikes bob and ball is big, then pencil is wet.\nIf george is a sibling of dave and apple is wet and it is cold, then ball is wet.\n\nAnd the following facts:\nbook is wet.\nalice is a parent of bob.\nfrank owns ball.\nfrank owns book.\nalice owns phone.\nalice is a parent of frank.\ndave dislikes alice.\neve is a sibling of bob.\ngeorge dislikes dave.\ndave is a sibling of frank.\nalice is a parent of carol.\neve dislikes dave.\n\nQUESTION:\nIs dave dislikes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,phone).",
    "c": "hot :- wet(book).\nwet(pencil) :- hot.\ntall(eve) :- tall(bob), dislikes(carol,book), sunny.\ntall(carol) :- small(book), hungry(george), cold.\nhappy(dave) :- tall(carol), sibling(frank,dave), cold.\nhappy(carol) :- sibling(carol,eve), small(book), wet(apple).\nwet(ball) :- parent(carol,eve), owns(eve,apple), hungry(eve).\nwet(pencil) :- small(phone), dislikes(bob,bob), big(ball).\nwet(ball) :- sibling(george,dave), wet(apple), cold.\nwet(book).\nparent(alice,bob).\nowns(frank,ball).\nowns(frank,book).\nowns(alice,phone).\nparent(alice,frank).\ndislikes(dave,alice).\nsibling(eve,bob).\ndislikes(george,dave).\nsibling(dave,frank).\nparent(alice,carol).\ndislikes(eve,dave).",
    "natural language": "You are given the following information:\nIf book is wet, then it is hot.\nIf it is hot, then pencil is wet.\nIf bob is tall and carol dislikes book and it is sunny, then eve is tall.\nIf book is small and george is hungry and it is cold, then carol is tall.\nIf carol is tall and frank is a sibling of dave and it is cold, then dave is happy.\nIf carol is a sibling of eve and book is small and apple is wet, then carol is happy.\nIf carol is a parent of eve and eve owns apple and eve is hungry, then ball is wet.\nIf phone is small and bob dislikes bob and ball is big, then pencil is wet.\nIf george is a sibling of dave and apple is wet and it is cold, then ball is wet.\n\nAnd the following facts:\nbook is wet.\nalice is a parent of bob.\nfrank owns ball.\nfrank owns book.\nalice owns phone.\nalice is a parent of frank.\ndave dislikes alice.\neve is a sibling of bob.\ngeorge dislikes dave.\ndave is a sibling of frank.\nalice is a parent of carol.\neve dislikes dave.\n\nQUESTION:\nIs alice dislikes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,car).",
    "c": "hot :- wet(book).\nwet(pencil) :- hot.\ntall(eve) :- tall(bob), dislikes(carol,book), sunny.\ntall(carol) :- small(book), hungry(george), cold.\nhappy(dave) :- tall(carol), sibling(frank,dave), cold.\nhappy(carol) :- sibling(carol,eve), small(book), wet(apple).\nwet(ball) :- parent(carol,eve), owns(eve,apple), hungry(eve).\nwet(pencil) :- small(phone), dislikes(bob,bob), big(ball).\nwet(ball) :- sibling(george,dave), wet(apple), cold.\nwet(book).\nparent(alice,bob).\nowns(frank,ball).\nowns(frank,book).\nowns(alice,phone).\nparent(alice,frank).\ndislikes(dave,alice).\nsibling(eve,bob).\ndislikes(george,dave).\nsibling(dave,frank).\nparent(alice,carol).\ndislikes(eve,dave).",
    "natural language": "You are given the following information:\nIf book is wet, then it is hot.\nIf it is hot, then pencil is wet.\nIf bob is tall and carol dislikes book and it is sunny, then eve is tall.\nIf book is small and george is hungry and it is cold, then carol is tall.\nIf carol is tall and frank is a sibling of dave and it is cold, then dave is happy.\nIf carol is a sibling of eve and book is small and apple is wet, then carol is happy.\nIf carol is a parent of eve and eve owns apple and eve is hungry, then ball is wet.\nIf phone is small and bob dislikes bob and ball is big, then pencil is wet.\nIf george is a sibling of dave and apple is wet and it is cold, then ball is wet.\n\nAnd the following facts:\nbook is wet.\nalice is a parent of bob.\nfrank owns ball.\nfrank owns book.\nalice owns phone.\nalice is a parent of frank.\ndave dislikes alice.\neve is a sibling of bob.\ngeorge dislikes dave.\ndave is a sibling of frank.\nalice is a parent of carol.\neve dislikes dave.\n\nQUESTION:\nIs carol owns car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(book).",
    "c": "hot :- wet(book).\nwet(pencil) :- hot.\ntall(eve) :- tall(bob), dislikes(carol,book), sunny.\ntall(carol) :- small(book), hungry(george), cold.\nhappy(dave) :- tall(carol), sibling(frank,dave), cold.\nhappy(carol) :- sibling(carol,eve), small(book), wet(apple).\nwet(ball) :- parent(carol,eve), owns(eve,apple), hungry(eve).\nwet(pencil) :- small(phone), dislikes(bob,bob), big(ball).\nwet(ball) :- sibling(george,dave), wet(apple), cold.\nparent(alice,bob).\nowns(frank,ball).\nowns(frank,book).\nowns(alice,phone).\nparent(alice,frank).\ndislikes(dave,alice).\nsibling(eve,bob).\ndislikes(george,dave).\nsibling(dave,frank).\nparent(alice,carol).\ndislikes(eve,dave).",
    "natural language": "You are given the following rules:\nIf book is wet, then it is hot.\nIf it is hot, then pencil is wet.\nIf bob is tall and carol dislikes book and it is sunny, then eve is tall.\nIf book is small and george is hungry and it is cold, then carol is tall.\nIf carol is tall and frank is a sibling of dave and it is cold, then dave is happy.\nIf carol is a sibling of eve and book is small and apple is wet, then carol is happy.\nIf carol is a parent of eve and eve owns apple and eve is hungry, then ball is wet.\nIf phone is small and bob dislikes bob and ball is big, then pencil is wet.\nIf george is a sibling of dave and apple is wet and it is cold, then ball is wet.\n\nAnd the following facts:\nbook is wet.\nalice is a parent of bob.\nfrank owns ball.\nfrank owns book.\nalice owns phone.\nalice is a parent of frank.\ndave dislikes alice.\neve is a sibling of bob.\ngeorge dislikes dave.\ndave is a sibling of frank.\nalice is a parent of carol.\neve dislikes dave.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould book is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,dave).",
    "c": "hot :- wet(book).\nwet(pencil) :- hot.\ntall(eve) :- tall(bob), dislikes(carol,book), sunny.\ntall(carol) :- small(book), hungry(george), cold.\nhappy(dave) :- tall(carol), sibling(frank,dave), cold.\nhappy(carol) :- sibling(carol,eve), small(book), wet(apple).\nwet(ball) :- parent(carol,eve), owns(eve,apple), hungry(eve).\nwet(pencil) :- small(phone), dislikes(bob,bob), big(ball).\nwet(ball) :- sibling(george,dave), wet(apple), cold.\nwet(book).\nparent(alice,bob).\nowns(frank,ball).\nowns(frank,book).\nowns(alice,phone).\nparent(alice,frank).\ndislikes(dave,alice).\nsibling(eve,bob).\nsibling(dave,frank).\nparent(alice,carol).\ndislikes(eve,dave).",
    "natural language": "You are given the following rules:\nIf book is wet, then it is hot.\nIf it is hot, then pencil is wet.\nIf bob is tall and carol dislikes book and it is sunny, then eve is tall.\nIf book is small and george is hungry and it is cold, then carol is tall.\nIf carol is tall and frank is a sibling of dave and it is cold, then dave is happy.\nIf carol is a sibling of eve and book is small and apple is wet, then carol is happy.\nIf carol is a parent of eve and eve owns apple and eve is hungry, then ball is wet.\nIf phone is small and bob dislikes bob and ball is big, then pencil is wet.\nIf george is a sibling of dave and apple is wet and it is cold, then ball is wet.\n\nAnd the following facts:\nbook is wet.\nalice is a parent of bob.\nfrank owns ball.\nfrank owns book.\nalice owns phone.\nalice is a parent of frank.\ndave dislikes alice.\neve is a sibling of bob.\ngeorge dislikes dave.\ndave is a sibling of frank.\nalice is a parent of carol.\neve dislikes dave.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould george dislikes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(alice,carol).",
    "c": "hot :- wet(book).\nwet(pencil) :- hot.\ntall(eve) :- tall(bob), dislikes(carol,book), sunny.\ntall(carol) :- small(book), hungry(george), cold.\nhappy(dave) :- tall(carol), sibling(frank,dave), cold.\nhappy(carol) :- sibling(carol,eve), small(book), wet(apple).\nwet(ball) :- parent(carol,eve), owns(eve,apple), hungry(eve).\nwet(pencil) :- small(phone), dislikes(bob,bob), big(ball).\nwet(ball) :- sibling(george,dave), wet(apple), cold.\nwet(book).\nparent(alice,bob).\nowns(frank,ball).\nowns(frank,book).\nowns(alice,phone).\nparent(alice,frank).\ndislikes(dave,alice).\nsibling(eve,bob).\ndislikes(george,dave).\nsibling(dave,frank).\ndislikes(eve,dave).",
    "natural language": "You are given the following rules:\nIf book is wet, then it is hot.\nIf it is hot, then pencil is wet.\nIf bob is tall and carol dislikes book and it is sunny, then eve is tall.\nIf book is small and george is hungry and it is cold, then carol is tall.\nIf carol is tall and frank is a sibling of dave and it is cold, then dave is happy.\nIf carol is a sibling of eve and book is small and apple is wet, then carol is happy.\nIf carol is a parent of eve and eve owns apple and eve is hungry, then ball is wet.\nIf phone is small and bob dislikes bob and ball is big, then pencil is wet.\nIf george is a sibling of dave and apple is wet and it is cold, then ball is wet.\n\nAnd the following facts:\nbook is wet.\nalice is a parent of bob.\nfrank owns ball.\nfrank owns book.\nalice owns phone.\nalice is a parent of frank.\ndave dislikes alice.\neve is a sibling of bob.\ngeorge dislikes dave.\ndave is a sibling of frank.\nalice is a parent of carol.\neve dislikes dave.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould alice is a parent of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(bob,eve).",
    "c": "small(ball) :- hungry(eve).\nparent(dave,bob) :- small(ball).\nenemy(bob,bob) :- parent(dave,bob).\nhappy(carol) :- enemy(bob,bob).\nfriend(george,dave) :- sad(alice), wet(book), hot.\nfriend(carol,george) :- friend(carol,eve), cold.\nfriend(alice,bob) :- happy(carol).\nsmall(pencil) :- sibling(carol,frank), hot.\nparent(george,carol) :- sunny, wet(book), enemy(dave,alice).\nhungry(eve).\nfriend(george,alice).\nparent(george,frank).\nfriend(eve,alice).\nparent(bob,carol).\nhungry(frank).\nsmall(pencil).\nfriend(alice,frank).\nfriend(dave,carol).\nenemy(george,bob).\nfriend(frank,eve).\nfriend(bob,eve).",
    "natural language": "You are given the following information:\nIf eve is hungry, then ball is small.\nIf ball is small, then dave is a parent of bob.\nIf dave is a parent of bob, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf alice is sad and book is wet and it is hot, then george is a friend of dave.\nIf carol is a friend of eve and it is cold, then carol is a friend of george.\nIf carol is happy, then alice is a friend of bob.\nIf carol is a sibling of frank and it is hot, then pencil is small.\nIf it is sunny and book is wet and dave is an enemy of alice, then george is a parent of carol.\n\nAnd the following facts:\neve is hungry.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\neve is a friend of alice.\nbob is a parent of carol.\nfrank is hungry.\npencil is small.\nalice is a friend of frank.\ndave is a friend of carol.\ngeorge is an enemy of bob.\nfrank is a friend of eve.\nbob is a friend of eve.\n\nQUESTION:\nIs bob is a friend of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "small(ball) :- hungry(eve).\nparent(dave,bob) :- small(ball).\nenemy(bob,bob) :- parent(dave,bob).\nhappy(carol) :- enemy(bob,bob).\nfriend(george,dave) :- sad(alice), wet(book), hot.\nfriend(carol,george) :- friend(carol,eve), cold.\nfriend(alice,bob) :- happy(carol).\nsmall(pencil) :- sibling(carol,frank), hot.\nparent(george,carol) :- sunny, wet(book), enemy(dave,alice).\nhungry(eve).\nfriend(george,alice).\nparent(george,frank).\nfriend(eve,alice).\nparent(bob,carol).\nhungry(frank).\nsmall(pencil).\nfriend(alice,frank).\nfriend(dave,carol).\nenemy(george,bob).\nfriend(frank,eve).\nfriend(bob,eve).",
    "natural language": "You are given the following information:\nIf eve is hungry, then ball is small.\nIf ball is small, then dave is a parent of bob.\nIf dave is a parent of bob, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf alice is sad and book is wet and it is hot, then george is a friend of dave.\nIf carol is a friend of eve and it is cold, then carol is a friend of george.\nIf carol is happy, then alice is a friend of bob.\nIf carol is a sibling of frank and it is hot, then pencil is small.\nIf it is sunny and book is wet and dave is an enemy of alice, then george is a parent of carol.\n\nAnd the following facts:\neve is hungry.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\neve is a friend of alice.\nbob is a parent of carol.\nfrank is hungry.\npencil is small.\nalice is a friend of frank.\ndave is a friend of carol.\ngeorge is an enemy of bob.\nfrank is a friend of eve.\nbob is a friend of eve.\n\nQUESTION:\nIs frank is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "small(ball) :- hungry(eve).\nparent(dave,bob) :- small(ball).\nenemy(bob,bob) :- parent(dave,bob).\nhappy(carol) :- enemy(bob,bob).\nfriend(george,dave) :- sad(alice), wet(book), hot.\nfriend(carol,george) :- friend(carol,eve), cold.\nfriend(alice,bob) :- happy(carol).\nsmall(pencil) :- sibling(carol,frank), hot.\nparent(george,carol) :- sunny, wet(book), enemy(dave,alice).\nhungry(eve).\nfriend(george,alice).\nparent(george,frank).\nfriend(eve,alice).\nparent(bob,carol).\nhungry(frank).\nsmall(pencil).\nfriend(alice,frank).\nfriend(dave,carol).\nenemy(george,bob).\nfriend(frank,eve).\nfriend(bob,eve).",
    "natural language": "You are given the following information:\nIf eve is hungry, then ball is small.\nIf ball is small, then dave is a parent of bob.\nIf dave is a parent of bob, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf alice is sad and book is wet and it is hot, then george is a friend of dave.\nIf carol is a friend of eve and it is cold, then carol is a friend of george.\nIf carol is happy, then alice is a friend of bob.\nIf carol is a sibling of frank and it is hot, then pencil is small.\nIf it is sunny and book is wet and dave is an enemy of alice, then george is a parent of carol.\n\nAnd the following facts:\neve is hungry.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\neve is a friend of alice.\nbob is a parent of carol.\nfrank is hungry.\npencil is small.\nalice is a friend of frank.\ndave is a friend of carol.\ngeorge is an enemy of bob.\nfrank is a friend of eve.\nbob is a friend of eve.\n\nQUESTION:\nIs george is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,alice).",
    "c": "small(ball) :- hungry(eve).\nparent(dave,bob) :- small(ball).\nenemy(bob,bob) :- parent(dave,bob).\nhappy(carol) :- enemy(bob,bob).\nfriend(george,dave) :- sad(alice), wet(book), hot.\nfriend(carol,george) :- friend(carol,eve), cold.\nfriend(alice,bob) :- happy(carol).\nsmall(pencil) :- sibling(carol,frank), hot.\nparent(george,carol) :- sunny, wet(book), enemy(dave,alice).\nhungry(eve).\nfriend(george,alice).\nparent(george,frank).\nfriend(eve,alice).\nparent(bob,carol).\nhungry(frank).\nsmall(pencil).\nfriend(alice,frank).\nfriend(dave,carol).\nenemy(george,bob).\nfriend(frank,eve).\nfriend(bob,eve).",
    "natural language": "You are given the following information:\nIf eve is hungry, then ball is small.\nIf ball is small, then dave is a parent of bob.\nIf dave is a parent of bob, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf alice is sad and book is wet and it is hot, then george is a friend of dave.\nIf carol is a friend of eve and it is cold, then carol is a friend of george.\nIf carol is happy, then alice is a friend of bob.\nIf carol is a sibling of frank and it is hot, then pencil is small.\nIf it is sunny and book is wet and dave is an enemy of alice, then george is a parent of carol.\n\nAnd the following facts:\neve is hungry.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\neve is a friend of alice.\nbob is a parent of carol.\nfrank is hungry.\npencil is small.\nalice is a friend of frank.\ndave is a friend of carol.\ngeorge is an enemy of bob.\nfrank is a friend of eve.\nbob is a friend of eve.\n\nQUESTION:\nIs frank is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,dave).",
    "c": "small(ball) :- hungry(eve).\nparent(dave,bob) :- small(ball).\nenemy(bob,bob) :- parent(dave,bob).\nhappy(carol) :- enemy(bob,bob).\nfriend(george,dave) :- sad(alice), wet(book), hot.\nfriend(carol,george) :- friend(carol,eve), cold.\nfriend(alice,bob) :- happy(carol).\nsmall(pencil) :- sibling(carol,frank), hot.\nparent(george,carol) :- sunny, wet(book), enemy(dave,alice).\nhungry(eve).\nfriend(george,alice).\nparent(george,frank).\nfriend(eve,alice).\nparent(bob,carol).\nhungry(frank).\nsmall(pencil).\nfriend(alice,frank).\nfriend(dave,carol).\nenemy(george,bob).\nfriend(frank,eve).\nfriend(bob,eve).",
    "natural language": "You are given the following information:\nIf eve is hungry, then ball is small.\nIf ball is small, then dave is a parent of bob.\nIf dave is a parent of bob, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf alice is sad and book is wet and it is hot, then george is a friend of dave.\nIf carol is a friend of eve and it is cold, then carol is a friend of george.\nIf carol is happy, then alice is a friend of bob.\nIf carol is a sibling of frank and it is hot, then pencil is small.\nIf it is sunny and book is wet and dave is an enemy of alice, then george is a parent of carol.\n\nAnd the following facts:\neve is hungry.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\neve is a friend of alice.\nbob is a parent of carol.\nfrank is hungry.\npencil is small.\nalice is a friend of frank.\ndave is a friend of carol.\ngeorge is an enemy of bob.\nfrank is a friend of eve.\nbob is a friend of eve.\n\nQUESTION:\nIs carol is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "small(ball) :- hungry(eve).\nparent(dave,bob) :- small(ball).\nenemy(bob,bob) :- parent(dave,bob).\nhappy(carol) :- enemy(bob,bob).\nfriend(george,dave) :- sad(alice), wet(book), hot.\nfriend(carol,george) :- friend(carol,eve), cold.\nfriend(alice,bob) :- happy(carol).\nsmall(pencil) :- sibling(carol,frank), hot.\nparent(george,carol) :- sunny, wet(book), enemy(dave,alice).\nfriend(george,alice).\nparent(george,frank).\nfriend(eve,alice).\nparent(bob,carol).\nhungry(frank).\nsmall(pencil).\nfriend(alice,frank).\nfriend(dave,carol).\nenemy(george,bob).\nfriend(frank,eve).\nfriend(bob,eve).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then ball is small.\nIf ball is small, then dave is a parent of bob.\nIf dave is a parent of bob, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf alice is sad and book is wet and it is hot, then george is a friend of dave.\nIf carol is a friend of eve and it is cold, then carol is a friend of george.\nIf carol is happy, then alice is a friend of bob.\nIf carol is a sibling of frank and it is hot, then pencil is small.\nIf it is sunny and book is wet and dave is an enemy of alice, then george is a parent of carol.\n\nAnd the following facts:\neve is hungry.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\neve is a friend of alice.\nbob is a parent of carol.\nfrank is hungry.\npencil is small.\nalice is a friend of frank.\ndave is a friend of carol.\ngeorge is an enemy of bob.\nfrank is a friend of eve.\nbob is a friend of eve.\n\nOBSERVATION: carol is happy is true.\n\nQUESTION:\nCould eve is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "small(ball) :- hungry(eve).\nparent(dave,bob) :- small(ball).\nenemy(bob,bob) :- parent(dave,bob).\nhappy(carol) :- enemy(bob,bob).\nfriend(george,dave) :- sad(alice), wet(book), hot.\nfriend(carol,george) :- friend(carol,eve), cold.\nfriend(alice,bob) :- happy(carol).\nsmall(pencil) :- sibling(carol,frank), hot.\nparent(george,carol) :- sunny, wet(book), enemy(dave,alice).\nhungry(eve).\nfriend(george,alice).\nfriend(eve,alice).\nparent(bob,carol).\nhungry(frank).\nsmall(pencil).\nfriend(alice,frank).\nfriend(dave,carol).\nenemy(george,bob).\nfriend(frank,eve).\nfriend(bob,eve).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then ball is small.\nIf ball is small, then dave is a parent of bob.\nIf dave is a parent of bob, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf alice is sad and book is wet and it is hot, then george is a friend of dave.\nIf carol is a friend of eve and it is cold, then carol is a friend of george.\nIf carol is happy, then alice is a friend of bob.\nIf carol is a sibling of frank and it is hot, then pencil is small.\nIf it is sunny and book is wet and dave is an enemy of alice, then george is a parent of carol.\n\nAnd the following facts:\neve is hungry.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\neve is a friend of alice.\nbob is a parent of carol.\nfrank is hungry.\npencil is small.\nalice is a friend of frank.\ndave is a friend of carol.\ngeorge is an enemy of bob.\nfrank is a friend of eve.\nbob is a friend of eve.\n\nOBSERVATION: carol is happy is true.\n\nQUESTION:\nCould george is a parent of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "small(ball) :- hungry(eve).\nparent(dave,bob) :- small(ball).\nenemy(bob,bob) :- parent(dave,bob).\nhappy(carol) :- enemy(bob,bob).\nfriend(george,dave) :- sad(alice), wet(book), hot.\nfriend(carol,george) :- friend(carol,eve), cold.\nfriend(alice,bob) :- happy(carol).\nsmall(pencil) :- sibling(carol,frank), hot.\nparent(george,carol) :- sunny, wet(book), enemy(dave,alice).\nhungry(eve).\nfriend(george,alice).\nparent(george,frank).\nfriend(eve,alice).\nparent(bob,carol).\nhungry(frank).\nsmall(pencil).\nfriend(alice,frank).\nfriend(dave,carol).\nfriend(frank,eve).\nfriend(bob,eve).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then ball is small.\nIf ball is small, then dave is a parent of bob.\nIf dave is a parent of bob, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf alice is sad and book is wet and it is hot, then george is a friend of dave.\nIf carol is a friend of eve and it is cold, then carol is a friend of george.\nIf carol is happy, then alice is a friend of bob.\nIf carol is a sibling of frank and it is hot, then pencil is small.\nIf it is sunny and book is wet and dave is an enemy of alice, then george is a parent of carol.\n\nAnd the following facts:\neve is hungry.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\neve is a friend of alice.\nbob is a parent of carol.\nfrank is hungry.\npencil is small.\nalice is a friend of frank.\ndave is a friend of carol.\ngeorge is an enemy of bob.\nfrank is a friend of eve.\nbob is a friend of eve.\n\nOBSERVATION: carol is happy is true.\n\nQUESTION:\nCould george is an enemy of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(dave).",
    "c": "sibling(alice,dave) :- friend(alice,eve).\nsmall(phone) :- sibling(alice,dave).\nhungry(dave) :- small(phone).\ndislikes(bob,dave) :- hungry(dave).\nowns(alice,car) :- tall(dave), parent(bob,frank), likes(frank,carol).\ncold :- big(book).\ntall(dave) :- tall(bob), wet(pencil).\ndislikes(carol,george) :- dislikes(carol,frank), tall(frank).\ncold :- happy(eve).\nfriend(alice,eve).\ndislikes(bob,apple).\nowns(frank,pencil).\nlikes(bob,apple).\nlikes(bob,book).\ndislikes(carol,car).\nsibling(bob,dave).\ndislikes(george,alice).\ndislikes(dave,bob).\nparent(eve,frank).\nowns(frank,car).\nparent(george,eve).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then alice is a sibling of dave.\nIf alice is a sibling of dave, then phone is small.\nIf phone is small, then dave is hungry.\nIf dave is hungry, then bob dislikes dave.\nIf dave is tall and bob is a parent of frank and frank likes carol, then alice owns car.\nIf book is big, then it is cold.\nIf bob is tall and pencil is wet, then dave is tall.\nIf carol dislikes frank and frank is tall, then carol dislikes george.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nalice is a friend of eve.\nbob dislikes apple.\nfrank owns pencil.\nbob likes apple.\nbob likes book.\ncarol dislikes car.\nbob is a sibling of dave.\ngeorge dislikes alice.\ndave dislikes bob.\neve is a parent of frank.\nfrank owns car.\ngeorge is a parent of eve.\n\nQUESTION:\nIs dave is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,apple).",
    "c": "sibling(alice,dave) :- friend(alice,eve).\nsmall(phone) :- sibling(alice,dave).\nhungry(dave) :- small(phone).\ndislikes(bob,dave) :- hungry(dave).\nowns(alice,car) :- tall(dave), parent(bob,frank), likes(frank,carol).\ncold :- big(book).\ntall(dave) :- tall(bob), wet(pencil).\ndislikes(carol,george) :- dislikes(carol,frank), tall(frank).\ncold :- happy(eve).\nfriend(alice,eve).\ndislikes(bob,apple).\nowns(frank,pencil).\nlikes(bob,apple).\nlikes(bob,book).\ndislikes(carol,car).\nsibling(bob,dave).\ndislikes(george,alice).\ndislikes(dave,bob).\nparent(eve,frank).\nowns(frank,car).\nparent(george,eve).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then alice is a sibling of dave.\nIf alice is a sibling of dave, then phone is small.\nIf phone is small, then dave is hungry.\nIf dave is hungry, then bob dislikes dave.\nIf dave is tall and bob is a parent of frank and frank likes carol, then alice owns car.\nIf book is big, then it is cold.\nIf bob is tall and pencil is wet, then dave is tall.\nIf carol dislikes frank and frank is tall, then carol dislikes george.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nalice is a friend of eve.\nbob dislikes apple.\nfrank owns pencil.\nbob likes apple.\nbob likes book.\ncarol dislikes car.\nbob is a sibling of dave.\ngeorge dislikes alice.\ndave dislikes bob.\neve is a parent of frank.\nfrank owns car.\ngeorge is a parent of eve.\n\nQUESTION:\nIs bob likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,book).",
    "c": "sibling(alice,dave) :- friend(alice,eve).\nsmall(phone) :- sibling(alice,dave).\nhungry(dave) :- small(phone).\ndislikes(bob,dave) :- hungry(dave).\nowns(alice,car) :- tall(dave), parent(bob,frank), likes(frank,carol).\ncold :- big(book).\ntall(dave) :- tall(bob), wet(pencil).\ndislikes(carol,george) :- dislikes(carol,frank), tall(frank).\ncold :- happy(eve).\nfriend(alice,eve).\ndislikes(bob,apple).\nowns(frank,pencil).\nlikes(bob,apple).\nlikes(bob,book).\ndislikes(carol,car).\nsibling(bob,dave).\ndislikes(george,alice).\ndislikes(dave,bob).\nparent(eve,frank).\nowns(frank,car).\nparent(george,eve).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then alice is a sibling of dave.\nIf alice is a sibling of dave, then phone is small.\nIf phone is small, then dave is hungry.\nIf dave is hungry, then bob dislikes dave.\nIf dave is tall and bob is a parent of frank and frank likes carol, then alice owns car.\nIf book is big, then it is cold.\nIf bob is tall and pencil is wet, then dave is tall.\nIf carol dislikes frank and frank is tall, then carol dislikes george.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nalice is a friend of eve.\nbob dislikes apple.\nfrank owns pencil.\nbob likes apple.\nbob likes book.\ncarol dislikes car.\nbob is a sibling of dave.\ngeorge dislikes alice.\ndave dislikes bob.\neve is a parent of frank.\nfrank owns car.\ngeorge is a parent of eve.\n\nQUESTION:\nIs bob likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "sibling(alice,dave) :- friend(alice,eve).\nsmall(phone) :- sibling(alice,dave).\nhungry(dave) :- small(phone).\ndislikes(bob,dave) :- hungry(dave).\nowns(alice,car) :- tall(dave), parent(bob,frank), likes(frank,carol).\ncold :- big(book).\ntall(dave) :- tall(bob), wet(pencil).\ndislikes(carol,george) :- dislikes(carol,frank), tall(frank).\ncold :- happy(eve).\nfriend(alice,eve).\ndislikes(bob,apple).\nowns(frank,pencil).\nlikes(bob,apple).\nlikes(bob,book).\ndislikes(carol,car).\nsibling(bob,dave).\ndislikes(george,alice).\ndislikes(dave,bob).\nparent(eve,frank).\nowns(frank,car).\nparent(george,eve).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then alice is a sibling of dave.\nIf alice is a sibling of dave, then phone is small.\nIf phone is small, then dave is hungry.\nIf dave is hungry, then bob dislikes dave.\nIf dave is tall and bob is a parent of frank and frank likes carol, then alice owns car.\nIf book is big, then it is cold.\nIf bob is tall and pencil is wet, then dave is tall.\nIf carol dislikes frank and frank is tall, then carol dislikes george.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nalice is a friend of eve.\nbob dislikes apple.\nfrank owns pencil.\nbob likes apple.\nbob likes book.\ncarol dislikes car.\nbob is a sibling of dave.\ngeorge dislikes alice.\ndave dislikes bob.\neve is a parent of frank.\nfrank owns car.\ngeorge is a parent of eve.\n\nQUESTION:\nIs eve is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,alice).",
    "c": "sibling(alice,dave) :- friend(alice,eve).\nsmall(phone) :- sibling(alice,dave).\nhungry(dave) :- small(phone).\ndislikes(bob,dave) :- hungry(dave).\nowns(alice,car) :- tall(dave), parent(bob,frank), likes(frank,carol).\ncold :- big(book).\ntall(dave) :- tall(bob), wet(pencil).\ndislikes(carol,george) :- dislikes(carol,frank), tall(frank).\ncold :- happy(eve).\nfriend(alice,eve).\ndislikes(bob,apple).\nowns(frank,pencil).\nlikes(bob,apple).\nlikes(bob,book).\ndislikes(carol,car).\nsibling(bob,dave).\ndislikes(george,alice).\ndislikes(dave,bob).\nparent(eve,frank).\nowns(frank,car).\nparent(george,eve).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then alice is a sibling of dave.\nIf alice is a sibling of dave, then phone is small.\nIf phone is small, then dave is hungry.\nIf dave is hungry, then bob dislikes dave.\nIf dave is tall and bob is a parent of frank and frank likes carol, then alice owns car.\nIf book is big, then it is cold.\nIf bob is tall and pencil is wet, then dave is tall.\nIf carol dislikes frank and frank is tall, then carol dislikes george.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nalice is a friend of eve.\nbob dislikes apple.\nfrank owns pencil.\nbob likes apple.\nbob likes book.\ncarol dislikes car.\nbob is a sibling of dave.\ngeorge dislikes alice.\ndave dislikes bob.\neve is a parent of frank.\nfrank owns car.\ngeorge is a parent of eve.\n\nQUESTION:\nIs dave dislikes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "sibling(alice,dave) :- friend(alice,eve).\nsmall(phone) :- sibling(alice,dave).\nhungry(dave) :- small(phone).\ndislikes(bob,dave) :- hungry(dave).\nowns(alice,car) :- tall(dave), parent(bob,frank), likes(frank,carol).\ncold :- big(book).\ntall(dave) :- tall(bob), wet(pencil).\ndislikes(carol,george) :- dislikes(carol,frank), tall(frank).\ncold :- happy(eve).\ndislikes(bob,apple).\nowns(frank,pencil).\nlikes(bob,apple).\nlikes(bob,book).\ndislikes(carol,car).\nsibling(bob,dave).\ndislikes(george,alice).\ndislikes(dave,bob).\nparent(eve,frank).\nowns(frank,car).\nparent(george,eve).",
    "natural language": "You are given the following rules:\nIf alice is a friend of eve, then alice is a sibling of dave.\nIf alice is a sibling of dave, then phone is small.\nIf phone is small, then dave is hungry.\nIf dave is hungry, then bob dislikes dave.\nIf dave is tall and bob is a parent of frank and frank likes carol, then alice owns car.\nIf book is big, then it is cold.\nIf bob is tall and pencil is wet, then dave is tall.\nIf carol dislikes frank and frank is tall, then carol dislikes george.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nalice is a friend of eve.\nbob dislikes apple.\nfrank owns pencil.\nbob likes apple.\nbob likes book.\ncarol dislikes car.\nbob is a sibling of dave.\ngeorge dislikes alice.\ndave dislikes bob.\neve is a parent of frank.\nfrank owns car.\ngeorge is a parent of eve.\n\nOBSERVATION: bob dislikes dave is true.\n\nQUESTION:\nCould alice is a friend of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,bob).",
    "c": "sibling(alice,dave) :- friend(alice,eve).\nsmall(phone) :- sibling(alice,dave).\nhungry(dave) :- small(phone).\ndislikes(bob,dave) :- hungry(dave).\nowns(alice,car) :- tall(dave), parent(bob,frank), likes(frank,carol).\ncold :- big(book).\ntall(dave) :- tall(bob), wet(pencil).\ndislikes(carol,george) :- dislikes(carol,frank), tall(frank).\ncold :- happy(eve).\nfriend(alice,eve).\ndislikes(bob,apple).\nowns(frank,pencil).\nlikes(bob,apple).\nlikes(bob,book).\ndislikes(carol,car).\nsibling(bob,dave).\ndislikes(george,alice).\nparent(eve,frank).\nowns(frank,car).\nparent(george,eve).",
    "natural language": "You are given the following rules:\nIf alice is a friend of eve, then alice is a sibling of dave.\nIf alice is a sibling of dave, then phone is small.\nIf phone is small, then dave is hungry.\nIf dave is hungry, then bob dislikes dave.\nIf dave is tall and bob is a parent of frank and frank likes carol, then alice owns car.\nIf book is big, then it is cold.\nIf bob is tall and pencil is wet, then dave is tall.\nIf carol dislikes frank and frank is tall, then carol dislikes george.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nalice is a friend of eve.\nbob dislikes apple.\nfrank owns pencil.\nbob likes apple.\nbob likes book.\ncarol dislikes car.\nbob is a sibling of dave.\ngeorge dislikes alice.\ndave dislikes bob.\neve is a parent of frank.\nfrank owns car.\ngeorge is a parent of eve.\n\nOBSERVATION: bob dislikes dave is true.\n\nQUESTION:\nCould dave dislikes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(george,eve).",
    "c": "sibling(alice,dave) :- friend(alice,eve).\nsmall(phone) :- sibling(alice,dave).\nhungry(dave) :- small(phone).\ndislikes(bob,dave) :- hungry(dave).\nowns(alice,car) :- tall(dave), parent(bob,frank), likes(frank,carol).\ncold :- big(book).\ntall(dave) :- tall(bob), wet(pencil).\ndislikes(carol,george) :- dislikes(carol,frank), tall(frank).\ncold :- happy(eve).\nfriend(alice,eve).\ndislikes(bob,apple).\nowns(frank,pencil).\nlikes(bob,apple).\nlikes(bob,book).\ndislikes(carol,car).\nsibling(bob,dave).\ndislikes(george,alice).\ndislikes(dave,bob).\nparent(eve,frank).\nowns(frank,car).",
    "natural language": "You are given the following rules:\nIf alice is a friend of eve, then alice is a sibling of dave.\nIf alice is a sibling of dave, then phone is small.\nIf phone is small, then dave is hungry.\nIf dave is hungry, then bob dislikes dave.\nIf dave is tall and bob is a parent of frank and frank likes carol, then alice owns car.\nIf book is big, then it is cold.\nIf bob is tall and pencil is wet, then dave is tall.\nIf carol dislikes frank and frank is tall, then carol dislikes george.\nIf eve is happy, then it is cold.\n\nAnd the following facts:\nalice is a friend of eve.\nbob dislikes apple.\nfrank owns pencil.\nbob likes apple.\nbob likes book.\ncarol dislikes car.\nbob is a sibling of dave.\ngeorge dislikes alice.\ndave dislikes bob.\neve is a parent of frank.\nfrank owns car.\ngeorge is a parent of eve.\n\nOBSERVATION: bob dislikes dave is true.\n\nQUESTION:\nCould george is a parent of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(book).",
    "c": "small(car) :- sibling(frank,frank).\ntall(carol) :- small(car).\nenemy(alice,george) :- tall(carol).\nhungry(alice) :- enemy(alice,george).\nsunny :- hungry(alice).\nsmall(apple) :- sunny.\nfriend(george,dave) :- sibling(dave,carol), owns(bob,ball).\ndislikes(carol,dave) :- happy(alice).\nwet(phone) :- cold, owns(carol,car), wet(phone).\nsibling(frank,frank).\ndislikes(bob,eve).\nwet(book).\nenemy(bob,frank).\nenemy(bob,carol).\ndislikes(frank,apple).\nfriend(bob,alice).\ndislikes(eve,ball).\nhungry(bob).\ndislikes(carol,book).\nowns(eve,book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is small.\nIf car is small, then carol is tall.\nIf carol is tall, then alice is an enemy of george.\nIf alice is an enemy of george, then alice is hungry.\nIf alice is hungry, then it is sunny.\nIf it is sunny, then apple is small.\nIf dave is a sibling of carol and bob owns ball, then george is a friend of dave.\nIf alice is happy, then carol dislikes dave.\nIf it is cold and carol owns car and phone is wet, then phone is wet.\n\nAnd the following facts:\nfrank is a sibling of frank.\nbob dislikes eve.\nbook is wet.\nbob is an enemy of frank.\nbob is an enemy of carol.\nfrank dislikes apple.\nbob is a friend of alice.\neve dislikes ball.\nbob is hungry.\ncarol dislikes book.\neve owns book.\nbob owns pencil.\n\nQUESTION:\nIs book is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "small(car) :- sibling(frank,frank).\ntall(carol) :- small(car).\nenemy(alice,george) :- tall(carol).\nhungry(alice) :- enemy(alice,george).\nsunny :- hungry(alice).\nsmall(apple) :- sunny.\nfriend(george,dave) :- sibling(dave,carol), owns(bob,ball).\ndislikes(carol,dave) :- happy(alice).\nwet(phone) :- cold, owns(carol,car), wet(phone).\nsibling(frank,frank).\ndislikes(bob,eve).\nwet(book).\nenemy(bob,frank).\nenemy(bob,carol).\ndislikes(frank,apple).\nfriend(bob,alice).\ndislikes(eve,ball).\nhungry(bob).\ndislikes(carol,book).\nowns(eve,book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is small.\nIf car is small, then carol is tall.\nIf carol is tall, then alice is an enemy of george.\nIf alice is an enemy of george, then alice is hungry.\nIf alice is hungry, then it is sunny.\nIf it is sunny, then apple is small.\nIf dave is a sibling of carol and bob owns ball, then george is a friend of dave.\nIf alice is happy, then carol dislikes dave.\nIf it is cold and carol owns car and phone is wet, then phone is wet.\n\nAnd the following facts:\nfrank is a sibling of frank.\nbob dislikes eve.\nbook is wet.\nbob is an enemy of frank.\nbob is an enemy of carol.\nfrank dislikes apple.\nbob is a friend of alice.\neve dislikes ball.\nbob is hungry.\ncarol dislikes book.\neve owns book.\nbob owns pencil.\n\nQUESTION:\nIs alice is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,book).",
    "c": "small(car) :- sibling(frank,frank).\ntall(carol) :- small(car).\nenemy(alice,george) :- tall(carol).\nhungry(alice) :- enemy(alice,george).\nsunny :- hungry(alice).\nsmall(apple) :- sunny.\nfriend(george,dave) :- sibling(dave,carol), owns(bob,ball).\ndislikes(carol,dave) :- happy(alice).\nwet(phone) :- cold, owns(carol,car), wet(phone).\nsibling(frank,frank).\ndislikes(bob,eve).\nwet(book).\nenemy(bob,frank).\nenemy(bob,carol).\ndislikes(frank,apple).\nfriend(bob,alice).\ndislikes(eve,ball).\nhungry(bob).\ndislikes(carol,book).\nowns(eve,book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is small.\nIf car is small, then carol is tall.\nIf carol is tall, then alice is an enemy of george.\nIf alice is an enemy of george, then alice is hungry.\nIf alice is hungry, then it is sunny.\nIf it is sunny, then apple is small.\nIf dave is a sibling of carol and bob owns ball, then george is a friend of dave.\nIf alice is happy, then carol dislikes dave.\nIf it is cold and carol owns car and phone is wet, then phone is wet.\n\nAnd the following facts:\nfrank is a sibling of frank.\nbob dislikes eve.\nbook is wet.\nbob is an enemy of frank.\nbob is an enemy of carol.\nfrank dislikes apple.\nbob is a friend of alice.\neve dislikes ball.\nbob is hungry.\ncarol dislikes book.\neve owns book.\nbob owns pencil.\n\nQUESTION:\nIs carol dislikes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,frank).",
    "c": "small(car) :- sibling(frank,frank).\ntall(carol) :- small(car).\nenemy(alice,george) :- tall(carol).\nhungry(alice) :- enemy(alice,george).\nsunny :- hungry(alice).\nsmall(apple) :- sunny.\nfriend(george,dave) :- sibling(dave,carol), owns(bob,ball).\ndislikes(carol,dave) :- happy(alice).\nwet(phone) :- cold, owns(carol,car), wet(phone).\nsibling(frank,frank).\ndislikes(bob,eve).\nwet(book).\nenemy(bob,frank).\nenemy(bob,carol).\ndislikes(frank,apple).\nfriend(bob,alice).\ndislikes(eve,ball).\nhungry(bob).\ndislikes(carol,book).\nowns(eve,book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is small.\nIf car is small, then carol is tall.\nIf carol is tall, then alice is an enemy of george.\nIf alice is an enemy of george, then alice is hungry.\nIf alice is hungry, then it is sunny.\nIf it is sunny, then apple is small.\nIf dave is a sibling of carol and bob owns ball, then george is a friend of dave.\nIf alice is happy, then carol dislikes dave.\nIf it is cold and carol owns car and phone is wet, then phone is wet.\n\nAnd the following facts:\nfrank is a sibling of frank.\nbob dislikes eve.\nbook is wet.\nbob is an enemy of frank.\nbob is an enemy of carol.\nfrank dislikes apple.\nbob is a friend of alice.\neve dislikes ball.\nbob is hungry.\ncarol dislikes book.\neve owns book.\nbob owns pencil.\n\nQUESTION:\nIs dave is a sibling of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,phone).",
    "c": "small(car) :- sibling(frank,frank).\ntall(carol) :- small(car).\nenemy(alice,george) :- tall(carol).\nhungry(alice) :- enemy(alice,george).\nsunny :- hungry(alice).\nsmall(apple) :- sunny.\nfriend(george,dave) :- sibling(dave,carol), owns(bob,ball).\ndislikes(carol,dave) :- happy(alice).\nwet(phone) :- cold, owns(carol,car), wet(phone).\nsibling(frank,frank).\ndislikes(bob,eve).\nwet(book).\nenemy(bob,frank).\nenemy(bob,carol).\ndislikes(frank,apple).\nfriend(bob,alice).\ndislikes(eve,ball).\nhungry(bob).\ndislikes(carol,book).\nowns(eve,book).\nowns(bob,pencil).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is small.\nIf car is small, then carol is tall.\nIf carol is tall, then alice is an enemy of george.\nIf alice is an enemy of george, then alice is hungry.\nIf alice is hungry, then it is sunny.\nIf it is sunny, then apple is small.\nIf dave is a sibling of carol and bob owns ball, then george is a friend of dave.\nIf alice is happy, then carol dislikes dave.\nIf it is cold and carol owns car and phone is wet, then phone is wet.\n\nAnd the following facts:\nfrank is a sibling of frank.\nbob dislikes eve.\nbook is wet.\nbob is an enemy of frank.\nbob is an enemy of carol.\nfrank dislikes apple.\nbob is a friend of alice.\neve dislikes ball.\nbob is hungry.\ncarol dislikes book.\neve owns book.\nbob owns pencil.\n\nQUESTION:\nIs dave dislikes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,frank).",
    "c": "small(car) :- sibling(frank,frank).\ntall(carol) :- small(car).\nenemy(alice,george) :- tall(carol).\nhungry(alice) :- enemy(alice,george).\nsunny :- hungry(alice).\nsmall(apple) :- sunny.\nfriend(george,dave) :- sibling(dave,carol), owns(bob,ball).\ndislikes(carol,dave) :- happy(alice).\nwet(phone) :- cold, owns(carol,car), wet(phone).\ndislikes(bob,eve).\nwet(book).\nenemy(bob,frank).\nenemy(bob,carol).\ndislikes(frank,apple).\nfriend(bob,alice).\ndislikes(eve,ball).\nhungry(bob).\ndislikes(carol,book).\nowns(eve,book).\nowns(bob,pencil).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of frank, then car is small.\nIf car is small, then carol is tall.\nIf carol is tall, then alice is an enemy of george.\nIf alice is an enemy of george, then alice is hungry.\nIf alice is hungry, then it is sunny.\nIf it is sunny, then apple is small.\nIf dave is a sibling of carol and bob owns ball, then george is a friend of dave.\nIf alice is happy, then carol dislikes dave.\nIf it is cold and carol owns car and phone is wet, then phone is wet.\n\nAnd the following facts:\nfrank is a sibling of frank.\nbob dislikes eve.\nbook is wet.\nbob is an enemy of frank.\nbob is an enemy of carol.\nfrank dislikes apple.\nbob is a friend of alice.\neve dislikes ball.\nbob is hungry.\ncarol dislikes book.\neve owns book.\nbob owns pencil.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould frank is a sibling of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(bob,alice).",
    "c": "small(car) :- sibling(frank,frank).\ntall(carol) :- small(car).\nenemy(alice,george) :- tall(carol).\nhungry(alice) :- enemy(alice,george).\nsunny :- hungry(alice).\nsmall(apple) :- sunny.\nfriend(george,dave) :- sibling(dave,carol), owns(bob,ball).\ndislikes(carol,dave) :- happy(alice).\nwet(phone) :- cold, owns(carol,car), wet(phone).\nsibling(frank,frank).\ndislikes(bob,eve).\nwet(book).\nenemy(bob,frank).\nenemy(bob,carol).\ndislikes(frank,apple).\ndislikes(eve,ball).\nhungry(bob).\ndislikes(carol,book).\nowns(eve,book).\nowns(bob,pencil).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of frank, then car is small.\nIf car is small, then carol is tall.\nIf carol is tall, then alice is an enemy of george.\nIf alice is an enemy of george, then alice is hungry.\nIf alice is hungry, then it is sunny.\nIf it is sunny, then apple is small.\nIf dave is a sibling of carol and bob owns ball, then george is a friend of dave.\nIf alice is happy, then carol dislikes dave.\nIf it is cold and carol owns car and phone is wet, then phone is wet.\n\nAnd the following facts:\nfrank is a sibling of frank.\nbob dislikes eve.\nbook is wet.\nbob is an enemy of frank.\nbob is an enemy of carol.\nfrank dislikes apple.\nbob is a friend of alice.\neve dislikes ball.\nbob is hungry.\ncarol dislikes book.\neve owns book.\nbob owns pencil.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould bob is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(eve,ball).",
    "c": "small(car) :- sibling(frank,frank).\ntall(carol) :- small(car).\nenemy(alice,george) :- tall(carol).\nhungry(alice) :- enemy(alice,george).\nsunny :- hungry(alice).\nsmall(apple) :- sunny.\nfriend(george,dave) :- sibling(dave,carol), owns(bob,ball).\ndislikes(carol,dave) :- happy(alice).\nwet(phone) :- cold, owns(carol,car), wet(phone).\nsibling(frank,frank).\ndislikes(bob,eve).\nwet(book).\nenemy(bob,frank).\nenemy(bob,carol).\ndislikes(frank,apple).\nfriend(bob,alice).\nhungry(bob).\ndislikes(carol,book).\nowns(eve,book).\nowns(bob,pencil).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of frank, then car is small.\nIf car is small, then carol is tall.\nIf carol is tall, then alice is an enemy of george.\nIf alice is an enemy of george, then alice is hungry.\nIf alice is hungry, then it is sunny.\nIf it is sunny, then apple is small.\nIf dave is a sibling of carol and bob owns ball, then george is a friend of dave.\nIf alice is happy, then carol dislikes dave.\nIf it is cold and carol owns car and phone is wet, then phone is wet.\n\nAnd the following facts:\nfrank is a sibling of frank.\nbob dislikes eve.\nbook is wet.\nbob is an enemy of frank.\nbob is an enemy of carol.\nfrank dislikes apple.\nbob is a friend of alice.\neve dislikes ball.\nbob is hungry.\ncarol dislikes book.\neve owns book.\nbob owns pencil.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould eve dislikes ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,ball).",
    "c": "hungry(george) :- tall(george).\ntall(alice) :- hungry(george).\nsad(frank) :- tall(alice).\nwet(phone) :- sad(frank).\nsibling(alice,bob) :- wet(phone).\nhungry(george) :- sibling(alice,bob).\ncold :- sad(eve).\ncold :- happy(bob), sad(eve).\nlikes(alice,phone) :- enemy(frank,george), wet(ball).\ntall(george).\nsad(frank).\nlikes(alice,dave).\nsibling(alice,bob).\nhungry(bob).\nsibling(alice,dave).\nenemy(george,frank).\nsibling(alice,george).\nsibling(carol,alice).\nlikes(carol,ball).\nsibling(dave,george).\nlikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then george is hungry.\nIf george is hungry, then alice is tall.\nIf alice is tall, then frank is sad.\nIf frank is sad, then phone is wet.\nIf phone is wet, then alice is a sibling of bob.\nIf alice is a sibling of bob, then george is hungry.\nIf eve is sad, then it is cold.\nIf bob is happy and eve is sad, then it is cold.\nIf frank is an enemy of george and ball is wet, then alice likes phone.\n\nAnd the following facts:\ngeorge is tall.\nfrank is sad.\nalice likes dave.\nalice is a sibling of bob.\nbob is hungry.\nalice is a sibling of dave.\ngeorge is an enemy of frank.\nalice is a sibling of george.\ncarol is a sibling of alice.\ncarol likes ball.\ndave is a sibling of george.\nfrank likes carol.\n\nQUESTION:\nIs carol likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,george).",
    "c": "hungry(george) :- tall(george).\ntall(alice) :- hungry(george).\nsad(frank) :- tall(alice).\nwet(phone) :- sad(frank).\nsibling(alice,bob) :- wet(phone).\nhungry(george) :- sibling(alice,bob).\ncold :- sad(eve).\ncold :- happy(bob), sad(eve).\nlikes(alice,phone) :- enemy(frank,george), wet(ball).\ntall(george).\nsad(frank).\nlikes(alice,dave).\nsibling(alice,bob).\nhungry(bob).\nsibling(alice,dave).\nenemy(george,frank).\nsibling(alice,george).\nsibling(carol,alice).\nlikes(carol,ball).\nsibling(dave,george).\nlikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then george is hungry.\nIf george is hungry, then alice is tall.\nIf alice is tall, then frank is sad.\nIf frank is sad, then phone is wet.\nIf phone is wet, then alice is a sibling of bob.\nIf alice is a sibling of bob, then george is hungry.\nIf eve is sad, then it is cold.\nIf bob is happy and eve is sad, then it is cold.\nIf frank is an enemy of george and ball is wet, then alice likes phone.\n\nAnd the following facts:\ngeorge is tall.\nfrank is sad.\nalice likes dave.\nalice is a sibling of bob.\nbob is hungry.\nalice is a sibling of dave.\ngeorge is an enemy of frank.\nalice is a sibling of george.\ncarol is a sibling of alice.\ncarol likes ball.\ndave is a sibling of george.\nfrank likes carol.\n\nQUESTION:\nIs alice is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "hungry(george) :- tall(george).\ntall(alice) :- hungry(george).\nsad(frank) :- tall(alice).\nwet(phone) :- sad(frank).\nsibling(alice,bob) :- wet(phone).\nhungry(george) :- sibling(alice,bob).\ncold :- sad(eve).\ncold :- happy(bob), sad(eve).\nlikes(alice,phone) :- enemy(frank,george), wet(ball).\ntall(george).\nsad(frank).\nlikes(alice,dave).\nsibling(alice,bob).\nhungry(bob).\nsibling(alice,dave).\nenemy(george,frank).\nsibling(alice,george).\nsibling(carol,alice).\nlikes(carol,ball).\nsibling(dave,george).\nlikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then george is hungry.\nIf george is hungry, then alice is tall.\nIf alice is tall, then frank is sad.\nIf frank is sad, then phone is wet.\nIf phone is wet, then alice is a sibling of bob.\nIf alice is a sibling of bob, then george is hungry.\nIf eve is sad, then it is cold.\nIf bob is happy and eve is sad, then it is cold.\nIf frank is an enemy of george and ball is wet, then alice likes phone.\n\nAnd the following facts:\ngeorge is tall.\nfrank is sad.\nalice likes dave.\nalice is a sibling of bob.\nbob is hungry.\nalice is a sibling of dave.\ngeorge is an enemy of frank.\nalice is a sibling of george.\ncarol is a sibling of alice.\ncarol likes ball.\ndave is a sibling of george.\nfrank likes carol.\n\nQUESTION:\nIs george is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,book).",
    "c": "hungry(george) :- tall(george).\ntall(alice) :- hungry(george).\nsad(frank) :- tall(alice).\nwet(phone) :- sad(frank).\nsibling(alice,bob) :- wet(phone).\nhungry(george) :- sibling(alice,bob).\ncold :- sad(eve).\ncold :- happy(bob), sad(eve).\nlikes(alice,phone) :- enemy(frank,george), wet(ball).\ntall(george).\nsad(frank).\nlikes(alice,dave).\nsibling(alice,bob).\nhungry(bob).\nsibling(alice,dave).\nenemy(george,frank).\nsibling(alice,george).\nsibling(carol,alice).\nlikes(carol,ball).\nsibling(dave,george).\nlikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then george is hungry.\nIf george is hungry, then alice is tall.\nIf alice is tall, then frank is sad.\nIf frank is sad, then phone is wet.\nIf phone is wet, then alice is a sibling of bob.\nIf alice is a sibling of bob, then george is hungry.\nIf eve is sad, then it is cold.\nIf bob is happy and eve is sad, then it is cold.\nIf frank is an enemy of george and ball is wet, then alice likes phone.\n\nAnd the following facts:\ngeorge is tall.\nfrank is sad.\nalice likes dave.\nalice is a sibling of bob.\nbob is hungry.\nalice is a sibling of dave.\ngeorge is an enemy of frank.\nalice is a sibling of george.\ncarol is a sibling of alice.\ncarol likes ball.\ndave is a sibling of george.\nfrank likes carol.\n\nQUESTION:\nIs george likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,carol).",
    "c": "hungry(george) :- tall(george).\ntall(alice) :- hungry(george).\nsad(frank) :- tall(alice).\nwet(phone) :- sad(frank).\nsibling(alice,bob) :- wet(phone).\nhungry(george) :- sibling(alice,bob).\ncold :- sad(eve).\ncold :- happy(bob), sad(eve).\nlikes(alice,phone) :- enemy(frank,george), wet(ball).\ntall(george).\nsad(frank).\nlikes(alice,dave).\nsibling(alice,bob).\nhungry(bob).\nsibling(alice,dave).\nenemy(george,frank).\nsibling(alice,george).\nsibling(carol,alice).\nlikes(carol,ball).\nsibling(dave,george).\nlikes(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then george is hungry.\nIf george is hungry, then alice is tall.\nIf alice is tall, then frank is sad.\nIf frank is sad, then phone is wet.\nIf phone is wet, then alice is a sibling of bob.\nIf alice is a sibling of bob, then george is hungry.\nIf eve is sad, then it is cold.\nIf bob is happy and eve is sad, then it is cold.\nIf frank is an enemy of george and ball is wet, then alice likes phone.\n\nAnd the following facts:\ngeorge is tall.\nfrank is sad.\nalice likes dave.\nalice is a sibling of bob.\nbob is hungry.\nalice is a sibling of dave.\ngeorge is an enemy of frank.\nalice is a sibling of george.\ncarol is a sibling of alice.\ncarol likes ball.\ndave is a sibling of george.\nfrank likes carol.\n\nQUESTION:\nIs eve is an enemy of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,bob).",
    "c": "hungry(george) :- tall(george).\ntall(alice) :- hungry(george).\nsad(frank) :- tall(alice).\nwet(phone) :- sad(frank).\nsibling(alice,bob) :- wet(phone).\nhungry(george) :- sibling(alice,bob).\ncold :- sad(eve).\ncold :- happy(bob), sad(eve).\nlikes(alice,phone) :- enemy(frank,george), wet(ball).\ntall(george).\nsad(frank).\nlikes(alice,dave).\nhungry(bob).\nsibling(alice,dave).\nenemy(george,frank).\nsibling(alice,george).\nsibling(carol,alice).\nlikes(carol,ball).\nsibling(dave,george).\nlikes(frank,carol).",
    "natural language": "You are given the following rules:\nIf george is tall, then george is hungry.\nIf george is hungry, then alice is tall.\nIf alice is tall, then frank is sad.\nIf frank is sad, then phone is wet.\nIf phone is wet, then alice is a sibling of bob.\nIf alice is a sibling of bob, then george is hungry.\nIf eve is sad, then it is cold.\nIf bob is happy and eve is sad, then it is cold.\nIf frank is an enemy of george and ball is wet, then alice likes phone.\n\nAnd the following facts:\ngeorge is tall.\nfrank is sad.\nalice likes dave.\nalice is a sibling of bob.\nbob is hungry.\nalice is a sibling of dave.\ngeorge is an enemy of frank.\nalice is a sibling of george.\ncarol is a sibling of alice.\ncarol likes ball.\ndave is a sibling of george.\nfrank likes carol.\n\nOBSERVATION: george is hungry is true.\n\nQUESTION:\nCould alice is a sibling of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,dave).",
    "c": "hungry(george) :- tall(george).\ntall(alice) :- hungry(george).\nsad(frank) :- tall(alice).\nwet(phone) :- sad(frank).\nsibling(alice,bob) :- wet(phone).\nhungry(george) :- sibling(alice,bob).\ncold :- sad(eve).\ncold :- happy(bob), sad(eve).\nlikes(alice,phone) :- enemy(frank,george), wet(ball).\ntall(george).\nsad(frank).\nlikes(alice,dave).\nsibling(alice,bob).\nhungry(bob).\nenemy(george,frank).\nsibling(alice,george).\nsibling(carol,alice).\nlikes(carol,ball).\nsibling(dave,george).\nlikes(frank,carol).",
    "natural language": "You are given the following rules:\nIf george is tall, then george is hungry.\nIf george is hungry, then alice is tall.\nIf alice is tall, then frank is sad.\nIf frank is sad, then phone is wet.\nIf phone is wet, then alice is a sibling of bob.\nIf alice is a sibling of bob, then george is hungry.\nIf eve is sad, then it is cold.\nIf bob is happy and eve is sad, then it is cold.\nIf frank is an enemy of george and ball is wet, then alice likes phone.\n\nAnd the following facts:\ngeorge is tall.\nfrank is sad.\nalice likes dave.\nalice is a sibling of bob.\nbob is hungry.\nalice is a sibling of dave.\ngeorge is an enemy of frank.\nalice is a sibling of george.\ncarol is a sibling of alice.\ncarol likes ball.\ndave is a sibling of george.\nfrank likes carol.\n\nOBSERVATION: george is hungry is true.\n\nQUESTION:\nCould alice is a sibling of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,george).",
    "c": "hungry(george) :- tall(george).\ntall(alice) :- hungry(george).\nsad(frank) :- tall(alice).\nwet(phone) :- sad(frank).\nsibling(alice,bob) :- wet(phone).\nhungry(george) :- sibling(alice,bob).\ncold :- sad(eve).\ncold :- happy(bob), sad(eve).\nlikes(alice,phone) :- enemy(frank,george), wet(ball).\ntall(george).\nsad(frank).\nlikes(alice,dave).\nsibling(alice,bob).\nhungry(bob).\nsibling(alice,dave).\nenemy(george,frank).\nsibling(alice,george).\nsibling(carol,alice).\nlikes(carol,ball).\nlikes(frank,carol).",
    "natural language": "You are given the following rules:\nIf george is tall, then george is hungry.\nIf george is hungry, then alice is tall.\nIf alice is tall, then frank is sad.\nIf frank is sad, then phone is wet.\nIf phone is wet, then alice is a sibling of bob.\nIf alice is a sibling of bob, then george is hungry.\nIf eve is sad, then it is cold.\nIf bob is happy and eve is sad, then it is cold.\nIf frank is an enemy of george and ball is wet, then alice likes phone.\n\nAnd the following facts:\ngeorge is tall.\nfrank is sad.\nalice likes dave.\nalice is a sibling of bob.\nbob is hungry.\nalice is a sibling of dave.\ngeorge is an enemy of frank.\nalice is a sibling of george.\ncarol is a sibling of alice.\ncarol likes ball.\ndave is a sibling of george.\nfrank likes carol.\n\nOBSERVATION: george is hungry is true.\n\nQUESTION:\nCould dave is a sibling of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,bob).",
    "c": "big(phone) :- parent(george,bob).\nenemy(carol,bob) :- big(phone).\nhot :- enemy(carol,bob).\nowns(eve,phone) :- hot.\nhot :- owns(eve,phone).\nhappy(dave) :- hot.\nbig(phone) :- happy(dave).\ndislikes(alice,dave) :- big(phone).\ntall(eve) :- wet(ball).\nparent(george,bob).\nowns(frank,ball).\nparent(george,carol).\ndislikes(george,book).\nparent(eve,carol).\nparent(eve,bob).\ndislikes(eve,dave).\nowns(george,pencil).\nowns(dave,car).\ndislikes(eve,alice).\nbig(phone).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nIf george is a parent of bob, then phone is big.\nIf phone is big, then carol is an enemy of bob.\nIf carol is an enemy of bob, then it is hot.\nIf it is hot, then eve owns phone.\nIf eve owns phone, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then phone is big.\nIf phone is big, then alice dislikes dave.\nIf ball is wet, then eve is tall.\n\nAnd the following facts:\ngeorge is a parent of bob.\nfrank owns ball.\ngeorge is a parent of carol.\ngeorge dislikes book.\neve is a parent of carol.\neve is a parent of bob.\neve dislikes dave.\ngeorge owns pencil.\ndave owns car.\neve dislikes alice.\nphone is big.\neve owns apple.\n\nQUESTION:\nIs eve is a parent of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,apple).",
    "c": "big(phone) :- parent(george,bob).\nenemy(carol,bob) :- big(phone).\nhot :- enemy(carol,bob).\nowns(eve,phone) :- hot.\nhot :- owns(eve,phone).\nhappy(dave) :- hot.\nbig(phone) :- happy(dave).\ndislikes(alice,dave) :- big(phone).\ntall(eve) :- wet(ball).\nparent(george,bob).\nowns(frank,ball).\nparent(george,carol).\ndislikes(george,book).\nparent(eve,carol).\nparent(eve,bob).\ndislikes(eve,dave).\nowns(george,pencil).\nowns(dave,car).\ndislikes(eve,alice).\nbig(phone).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nIf george is a parent of bob, then phone is big.\nIf phone is big, then carol is an enemy of bob.\nIf carol is an enemy of bob, then it is hot.\nIf it is hot, then eve owns phone.\nIf eve owns phone, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then phone is big.\nIf phone is big, then alice dislikes dave.\nIf ball is wet, then eve is tall.\n\nAnd the following facts:\ngeorge is a parent of bob.\nfrank owns ball.\ngeorge is a parent of carol.\ngeorge dislikes book.\neve is a parent of carol.\neve is a parent of bob.\neve dislikes dave.\ngeorge owns pencil.\ndave owns car.\neve dislikes alice.\nphone is big.\neve owns apple.\n\nQUESTION:\nIs eve owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,bob).",
    "c": "big(phone) :- parent(george,bob).\nenemy(carol,bob) :- big(phone).\nhot :- enemy(carol,bob).\nowns(eve,phone) :- hot.\nhot :- owns(eve,phone).\nhappy(dave) :- hot.\nbig(phone) :- happy(dave).\ndislikes(alice,dave) :- big(phone).\ntall(eve) :- wet(ball).\nparent(george,bob).\nowns(frank,ball).\nparent(george,carol).\ndislikes(george,book).\nparent(eve,carol).\nparent(eve,bob).\ndislikes(eve,dave).\nowns(george,pencil).\nowns(dave,car).\ndislikes(eve,alice).\nbig(phone).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nIf george is a parent of bob, then phone is big.\nIf phone is big, then carol is an enemy of bob.\nIf carol is an enemy of bob, then it is hot.\nIf it is hot, then eve owns phone.\nIf eve owns phone, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then phone is big.\nIf phone is big, then alice dislikes dave.\nIf ball is wet, then eve is tall.\n\nAnd the following facts:\ngeorge is a parent of bob.\nfrank owns ball.\ngeorge is a parent of carol.\ngeorge dislikes book.\neve is a parent of carol.\neve is a parent of bob.\neve dislikes dave.\ngeorge owns pencil.\ndave owns car.\neve dislikes alice.\nphone is big.\neve owns apple.\n\nQUESTION:\nIs george is a parent of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,george).",
    "c": "big(phone) :- parent(george,bob).\nenemy(carol,bob) :- big(phone).\nhot :- enemy(carol,bob).\nowns(eve,phone) :- hot.\nhot :- owns(eve,phone).\nhappy(dave) :- hot.\nbig(phone) :- happy(dave).\ndislikes(alice,dave) :- big(phone).\ntall(eve) :- wet(ball).\nparent(george,bob).\nowns(frank,ball).\nparent(george,carol).\ndislikes(george,book).\nparent(eve,carol).\nparent(eve,bob).\ndislikes(eve,dave).\nowns(george,pencil).\nowns(dave,car).\ndislikes(eve,alice).\nbig(phone).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nIf george is a parent of bob, then phone is big.\nIf phone is big, then carol is an enemy of bob.\nIf carol is an enemy of bob, then it is hot.\nIf it is hot, then eve owns phone.\nIf eve owns phone, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then phone is big.\nIf phone is big, then alice dislikes dave.\nIf ball is wet, then eve is tall.\n\nAnd the following facts:\ngeorge is a parent of bob.\nfrank owns ball.\ngeorge is a parent of carol.\ngeorge dislikes book.\neve is a parent of carol.\neve is a parent of bob.\neve dislikes dave.\ngeorge owns pencil.\ndave owns car.\neve dislikes alice.\nphone is big.\neve owns apple.\n\nQUESTION:\nIs eve dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,dave).",
    "c": "big(phone) :- parent(george,bob).\nenemy(carol,bob) :- big(phone).\nhot :- enemy(carol,bob).\nowns(eve,phone) :- hot.\nhot :- owns(eve,phone).\nhappy(dave) :- hot.\nbig(phone) :- happy(dave).\ndislikes(alice,dave) :- big(phone).\ntall(eve) :- wet(ball).\nparent(george,bob).\nowns(frank,ball).\nparent(george,carol).\ndislikes(george,book).\nparent(eve,carol).\nparent(eve,bob).\ndislikes(eve,dave).\nowns(george,pencil).\nowns(dave,car).\ndislikes(eve,alice).\nbig(phone).\nowns(eve,apple).",
    "natural language": "You are given the following information:\nIf george is a parent of bob, then phone is big.\nIf phone is big, then carol is an enemy of bob.\nIf carol is an enemy of bob, then it is hot.\nIf it is hot, then eve owns phone.\nIf eve owns phone, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then phone is big.\nIf phone is big, then alice dislikes dave.\nIf ball is wet, then eve is tall.\n\nAnd the following facts:\ngeorge is a parent of bob.\nfrank owns ball.\ngeorge is a parent of carol.\ngeorge dislikes book.\neve is a parent of carol.\neve is a parent of bob.\neve dislikes dave.\ngeorge owns pencil.\ndave owns car.\neve dislikes alice.\nphone is big.\neve owns apple.\n\nQUESTION:\nIs bob is a parent of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(phone).",
    "c": "big(phone) :- parent(george,bob).\nenemy(carol,bob) :- big(phone).\nhot :- enemy(carol,bob).\nowns(eve,phone) :- hot.\nhot :- owns(eve,phone).\nhappy(dave) :- hot.\nbig(phone) :- happy(dave).\ndislikes(alice,dave) :- big(phone).\ntall(eve) :- wet(ball).\nparent(george,bob).\nowns(frank,ball).\nparent(george,carol).\ndislikes(george,book).\nparent(eve,carol).\nparent(eve,bob).\ndislikes(eve,dave).\nowns(george,pencil).\nowns(dave,car).\ndislikes(eve,alice).\nowns(eve,apple).",
    "natural language": "You are given the following rules:\nIf george is a parent of bob, then phone is big.\nIf phone is big, then carol is an enemy of bob.\nIf carol is an enemy of bob, then it is hot.\nIf it is hot, then eve owns phone.\nIf eve owns phone, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then phone is big.\nIf phone is big, then alice dislikes dave.\nIf ball is wet, then eve is tall.\n\nAnd the following facts:\ngeorge is a parent of bob.\nfrank owns ball.\ngeorge is a parent of carol.\ngeorge dislikes book.\neve is a parent of carol.\neve is a parent of bob.\neve dislikes dave.\ngeorge owns pencil.\ndave owns car.\neve dislikes alice.\nphone is big.\neve owns apple.\n\nOBSERVATION: alice dislikes dave is true.\n\nQUESTION:\nCould phone is big be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,car).",
    "c": "big(phone) :- parent(george,bob).\nenemy(carol,bob) :- big(phone).\nhot :- enemy(carol,bob).\nowns(eve,phone) :- hot.\nhot :- owns(eve,phone).\nhappy(dave) :- hot.\nbig(phone) :- happy(dave).\ndislikes(alice,dave) :- big(phone).\ntall(eve) :- wet(ball).\nparent(george,bob).\nowns(frank,ball).\nparent(george,carol).\ndislikes(george,book).\nparent(eve,carol).\nparent(eve,bob).\ndislikes(eve,dave).\nowns(george,pencil).\ndislikes(eve,alice).\nbig(phone).\nowns(eve,apple).",
    "natural language": "You are given the following rules:\nIf george is a parent of bob, then phone is big.\nIf phone is big, then carol is an enemy of bob.\nIf carol is an enemy of bob, then it is hot.\nIf it is hot, then eve owns phone.\nIf eve owns phone, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then phone is big.\nIf phone is big, then alice dislikes dave.\nIf ball is wet, then eve is tall.\n\nAnd the following facts:\ngeorge is a parent of bob.\nfrank owns ball.\ngeorge is a parent of carol.\ngeorge dislikes book.\neve is a parent of carol.\neve is a parent of bob.\neve dislikes dave.\ngeorge owns pencil.\ndave owns car.\neve dislikes alice.\nphone is big.\neve owns apple.\n\nOBSERVATION: alice dislikes dave is true.\n\nQUESTION:\nCould dave owns car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(george,pencil).",
    "c": "big(phone) :- parent(george,bob).\nenemy(carol,bob) :- big(phone).\nhot :- enemy(carol,bob).\nowns(eve,phone) :- hot.\nhot :- owns(eve,phone).\nhappy(dave) :- hot.\nbig(phone) :- happy(dave).\ndislikes(alice,dave) :- big(phone).\ntall(eve) :- wet(ball).\nparent(george,bob).\nowns(frank,ball).\nparent(george,carol).\ndislikes(george,book).\nparent(eve,carol).\nparent(eve,bob).\ndislikes(eve,dave).\nowns(dave,car).\ndislikes(eve,alice).\nbig(phone).\nowns(eve,apple).",
    "natural language": "You are given the following rules:\nIf george is a parent of bob, then phone is big.\nIf phone is big, then carol is an enemy of bob.\nIf carol is an enemy of bob, then it is hot.\nIf it is hot, then eve owns phone.\nIf eve owns phone, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then phone is big.\nIf phone is big, then alice dislikes dave.\nIf ball is wet, then eve is tall.\n\nAnd the following facts:\ngeorge is a parent of bob.\nfrank owns ball.\ngeorge is a parent of carol.\ngeorge dislikes book.\neve is a parent of carol.\neve is a parent of bob.\neve dislikes dave.\ngeorge owns pencil.\ndave owns car.\neve dislikes alice.\nphone is big.\neve owns apple.\n\nOBSERVATION: alice dislikes dave is true.\n\nQUESTION:\nCould george owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "friend(bob,dave) :- sunny.\nhot :- friend(bob,dave).\nlikes(eve,apple) :- hot.\nsmall(pencil) :- likes(eve,apple).\nbig(pencil) :- small(pencil).\nhungry(eve) :- big(pencil).\nsad(dave) :- hungry(eve).\nenemy(george,carol) :- sad(dave).\nhappy(george) :- big(pencil), sunny, sad(eve).\nsunny.\nsmall(apple).\nlikes(dave,apple).\nenemy(dave,carol).\nfriend(dave,eve).\nenemy(bob,george).\nlikes(george,bob).\nlikes(dave,pencil).\nhungry(bob).\nfriend(alice,george).\nlikes(bob,eve).\nlikes(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then it is hot.\nIf it is hot, then eve likes apple.\nIf eve likes apple, then pencil is small.\nIf pencil is small, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then dave is sad.\nIf dave is sad, then george is an enemy of carol.\nIf pencil is big and it is sunny and eve is sad, then george is happy.\n\nAnd the following facts:\nit is sunny.\napple is small.\ndave likes apple.\ndave is an enemy of carol.\ndave is a friend of eve.\nbob is an enemy of george.\ngeorge likes bob.\ndave likes pencil.\nbob is hungry.\nalice is a friend of george.\nbob likes eve.\nfrank likes alice.\n\nQUESTION:\nIs eve is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,bob).",
    "c": "friend(bob,dave) :- sunny.\nhot :- friend(bob,dave).\nlikes(eve,apple) :- hot.\nsmall(pencil) :- likes(eve,apple).\nbig(pencil) :- small(pencil).\nhungry(eve) :- big(pencil).\nsad(dave) :- hungry(eve).\nenemy(george,carol) :- sad(dave).\nhappy(george) :- big(pencil), sunny, sad(eve).\nsunny.\nsmall(apple).\nlikes(dave,apple).\nenemy(dave,carol).\nfriend(dave,eve).\nenemy(bob,george).\nlikes(george,bob).\nlikes(dave,pencil).\nhungry(bob).\nfriend(alice,george).\nlikes(bob,eve).\nlikes(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then it is hot.\nIf it is hot, then eve likes apple.\nIf eve likes apple, then pencil is small.\nIf pencil is small, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then dave is sad.\nIf dave is sad, then george is an enemy of carol.\nIf pencil is big and it is sunny and eve is sad, then george is happy.\n\nAnd the following facts:\nit is sunny.\napple is small.\ndave likes apple.\ndave is an enemy of carol.\ndave is a friend of eve.\nbob is an enemy of george.\ngeorge likes bob.\ndave likes pencil.\nbob is hungry.\nalice is a friend of george.\nbob likes eve.\nfrank likes alice.\n\nQUESTION:\nIs george likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,apple).",
    "c": "friend(bob,dave) :- sunny.\nhot :- friend(bob,dave).\nlikes(eve,apple) :- hot.\nsmall(pencil) :- likes(eve,apple).\nbig(pencil) :- small(pencil).\nhungry(eve) :- big(pencil).\nsad(dave) :- hungry(eve).\nenemy(george,carol) :- sad(dave).\nhappy(george) :- big(pencil), sunny, sad(eve).\nsunny.\nsmall(apple).\nlikes(dave,apple).\nenemy(dave,carol).\nfriend(dave,eve).\nenemy(bob,george).\nlikes(george,bob).\nlikes(dave,pencil).\nhungry(bob).\nfriend(alice,george).\nlikes(bob,eve).\nlikes(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then it is hot.\nIf it is hot, then eve likes apple.\nIf eve likes apple, then pencil is small.\nIf pencil is small, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then dave is sad.\nIf dave is sad, then george is an enemy of carol.\nIf pencil is big and it is sunny and eve is sad, then george is happy.\n\nAnd the following facts:\nit is sunny.\napple is small.\ndave likes apple.\ndave is an enemy of carol.\ndave is a friend of eve.\nbob is an enemy of george.\ngeorge likes bob.\ndave likes pencil.\nbob is hungry.\nalice is a friend of george.\nbob likes eve.\nfrank likes alice.\n\nQUESTION:\nIs eve likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,george).",
    "c": "friend(bob,dave) :- sunny.\nhot :- friend(bob,dave).\nlikes(eve,apple) :- hot.\nsmall(pencil) :- likes(eve,apple).\nbig(pencil) :- small(pencil).\nhungry(eve) :- big(pencil).\nsad(dave) :- hungry(eve).\nenemy(george,carol) :- sad(dave).\nhappy(george) :- big(pencil), sunny, sad(eve).\nsunny.\nsmall(apple).\nlikes(dave,apple).\nenemy(dave,carol).\nfriend(dave,eve).\nenemy(bob,george).\nlikes(george,bob).\nlikes(dave,pencil).\nhungry(bob).\nfriend(alice,george).\nlikes(bob,eve).\nlikes(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then it is hot.\nIf it is hot, then eve likes apple.\nIf eve likes apple, then pencil is small.\nIf pencil is small, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then dave is sad.\nIf dave is sad, then george is an enemy of carol.\nIf pencil is big and it is sunny and eve is sad, then george is happy.\n\nAnd the following facts:\nit is sunny.\napple is small.\ndave likes apple.\ndave is an enemy of carol.\ndave is a friend of eve.\nbob is an enemy of george.\ngeorge likes bob.\ndave likes pencil.\nbob is hungry.\nalice is a friend of george.\nbob likes eve.\nfrank likes alice.\n\nQUESTION:\nIs carol likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,eve).",
    "c": "friend(bob,dave) :- sunny.\nhot :- friend(bob,dave).\nlikes(eve,apple) :- hot.\nsmall(pencil) :- likes(eve,apple).\nbig(pencil) :- small(pencil).\nhungry(eve) :- big(pencil).\nsad(dave) :- hungry(eve).\nenemy(george,carol) :- sad(dave).\nhappy(george) :- big(pencil), sunny, sad(eve).\nsunny.\nsmall(apple).\nlikes(dave,apple).\nenemy(dave,carol).\nfriend(dave,eve).\nenemy(bob,george).\nlikes(george,bob).\nlikes(dave,pencil).\nhungry(bob).\nfriend(alice,george).\nlikes(bob,eve).\nlikes(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then it is hot.\nIf it is hot, then eve likes apple.\nIf eve likes apple, then pencil is small.\nIf pencil is small, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then dave is sad.\nIf dave is sad, then george is an enemy of carol.\nIf pencil is big and it is sunny and eve is sad, then george is happy.\n\nAnd the following facts:\nit is sunny.\napple is small.\ndave likes apple.\ndave is an enemy of carol.\ndave is a friend of eve.\nbob is an enemy of george.\ngeorge likes bob.\ndave likes pencil.\nbob is hungry.\nalice is a friend of george.\nbob likes eve.\nfrank likes alice.\n\nQUESTION:\nIs george likes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "friend(bob,dave) :- sunny.\nhot :- friend(bob,dave).\nlikes(eve,apple) :- hot.\nsmall(pencil) :- likes(eve,apple).\nbig(pencil) :- small(pencil).\nhungry(eve) :- big(pencil).\nsad(dave) :- hungry(eve).\nenemy(george,carol) :- sad(dave).\nhappy(george) :- big(pencil), sunny, sad(eve).\nsmall(apple).\nlikes(dave,apple).\nenemy(dave,carol).\nfriend(dave,eve).\nenemy(bob,george).\nlikes(george,bob).\nlikes(dave,pencil).\nhungry(bob).\nfriend(alice,george).\nlikes(bob,eve).\nlikes(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then it is hot.\nIf it is hot, then eve likes apple.\nIf eve likes apple, then pencil is small.\nIf pencil is small, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then dave is sad.\nIf dave is sad, then george is an enemy of carol.\nIf pencil is big and it is sunny and eve is sad, then george is happy.\n\nAnd the following facts:\nit is sunny.\napple is small.\ndave likes apple.\ndave is an enemy of carol.\ndave is a friend of eve.\nbob is an enemy of george.\ngeorge likes bob.\ndave likes pencil.\nbob is hungry.\nalice is a friend of george.\nbob likes eve.\nfrank likes alice.\n\nOBSERVATION: george is an enemy of carol is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "friend(bob,dave) :- sunny.\nhot :- friend(bob,dave).\nlikes(eve,apple) :- hot.\nsmall(pencil) :- likes(eve,apple).\nbig(pencil) :- small(pencil).\nhungry(eve) :- big(pencil).\nsad(dave) :- hungry(eve).\nenemy(george,carol) :- sad(dave).\nhappy(george) :- big(pencil), sunny, sad(eve).\nsunny.\nsmall(apple).\nenemy(dave,carol).\nfriend(dave,eve).\nenemy(bob,george).\nlikes(george,bob).\nlikes(dave,pencil).\nhungry(bob).\nfriend(alice,george).\nlikes(bob,eve).\nlikes(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then it is hot.\nIf it is hot, then eve likes apple.\nIf eve likes apple, then pencil is small.\nIf pencil is small, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then dave is sad.\nIf dave is sad, then george is an enemy of carol.\nIf pencil is big and it is sunny and eve is sad, then george is happy.\n\nAnd the following facts:\nit is sunny.\napple is small.\ndave likes apple.\ndave is an enemy of carol.\ndave is a friend of eve.\nbob is an enemy of george.\ngeorge likes bob.\ndave likes pencil.\nbob is hungry.\nalice is a friend of george.\nbob likes eve.\nfrank likes alice.\n\nOBSERVATION: george is an enemy of carol is true.\n\nQUESTION:\nCould dave likes apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(dave,pencil).",
    "c": "friend(bob,dave) :- sunny.\nhot :- friend(bob,dave).\nlikes(eve,apple) :- hot.\nsmall(pencil) :- likes(eve,apple).\nbig(pencil) :- small(pencil).\nhungry(eve) :- big(pencil).\nsad(dave) :- hungry(eve).\nenemy(george,carol) :- sad(dave).\nhappy(george) :- big(pencil), sunny, sad(eve).\nsunny.\nsmall(apple).\nlikes(dave,apple).\nenemy(dave,carol).\nfriend(dave,eve).\nenemy(bob,george).\nlikes(george,bob).\nhungry(bob).\nfriend(alice,george).\nlikes(bob,eve).\nlikes(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then it is hot.\nIf it is hot, then eve likes apple.\nIf eve likes apple, then pencil is small.\nIf pencil is small, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then dave is sad.\nIf dave is sad, then george is an enemy of carol.\nIf pencil is big and it is sunny and eve is sad, then george is happy.\n\nAnd the following facts:\nit is sunny.\napple is small.\ndave likes apple.\ndave is an enemy of carol.\ndave is a friend of eve.\nbob is an enemy of george.\ngeorge likes bob.\ndave likes pencil.\nbob is hungry.\nalice is a friend of george.\nbob likes eve.\nfrank likes alice.\n\nOBSERVATION: george is an enemy of carol is true.\n\nQUESTION:\nCould dave likes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,bob).",
    "c": "big(car) :- tall(george).\nbig(pencil) :- big(car).\nsad(carol) :- big(pencil).\nwet(book) :- sad(carol).\nlikes(alice,eve) :- wet(book).\nhot :- likes(alice,eve).\nhungry(alice) :- hot.\nsibling(eve,carol) :- hungry(alice).\nsibling(frank,eve) :- sibling(eve,carol).\nlikes(dave,frank) :- sibling(frank,eve).\ntall(george).\nlikes(bob,ball).\nlikes(bob,eve).\nlikes(george,carol).\nlikes(frank,apple).\nlikes(dave,phone).\nsibling(george,carol).\nlikes(carol,ball).\nhungry(bob).\nlikes(carol,book).\nsibling(dave,bob).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then car is big.\nIf car is big, then pencil is big.\nIf pencil is big, then carol is sad.\nIf carol is sad, then book is wet.\nIf book is wet, then alice likes eve.\nIf alice likes eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf alice is hungry, then eve is a sibling of carol.\nIf eve is a sibling of carol, then frank is a sibling of eve.\nIf frank is a sibling of eve, then dave likes frank.\n\nAnd the following facts:\ngeorge is tall.\nbob likes ball.\nbob likes eve.\ngeorge likes carol.\nfrank likes apple.\ndave likes phone.\ngeorge is a sibling of carol.\ncarol likes ball.\nbob is hungry.\ncarol likes book.\ndave is a sibling of bob.\nfrank is a sibling of carol.\n\nQUESTION:\nIs dave is a sibling of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "big(car) :- tall(george).\nbig(pencil) :- big(car).\nsad(carol) :- big(pencil).\nwet(book) :- sad(carol).\nlikes(alice,eve) :- wet(book).\nhot :- likes(alice,eve).\nhungry(alice) :- hot.\nsibling(eve,carol) :- hungry(alice).\nsibling(frank,eve) :- sibling(eve,carol).\nlikes(dave,frank) :- sibling(frank,eve).\ntall(george).\nlikes(bob,ball).\nlikes(bob,eve).\nlikes(george,carol).\nlikes(frank,apple).\nlikes(dave,phone).\nsibling(george,carol).\nlikes(carol,ball).\nhungry(bob).\nlikes(carol,book).\nsibling(dave,bob).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then car is big.\nIf car is big, then pencil is big.\nIf pencil is big, then carol is sad.\nIf carol is sad, then book is wet.\nIf book is wet, then alice likes eve.\nIf alice likes eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf alice is hungry, then eve is a sibling of carol.\nIf eve is a sibling of carol, then frank is a sibling of eve.\nIf frank is a sibling of eve, then dave likes frank.\n\nAnd the following facts:\ngeorge is tall.\nbob likes ball.\nbob likes eve.\ngeorge likes carol.\nfrank likes apple.\ndave likes phone.\ngeorge is a sibling of carol.\ncarol likes ball.\nbob is hungry.\ncarol likes book.\ndave is a sibling of bob.\nfrank is a sibling of carol.\n\nQUESTION:\nIs it is hot true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,ball).",
    "c": "big(car) :- tall(george).\nbig(pencil) :- big(car).\nsad(carol) :- big(pencil).\nwet(book) :- sad(carol).\nlikes(alice,eve) :- wet(book).\nhot :- likes(alice,eve).\nhungry(alice) :- hot.\nsibling(eve,carol) :- hungry(alice).\nsibling(frank,eve) :- sibling(eve,carol).\nlikes(dave,frank) :- sibling(frank,eve).\ntall(george).\nlikes(bob,ball).\nlikes(bob,eve).\nlikes(george,carol).\nlikes(frank,apple).\nlikes(dave,phone).\nsibling(george,carol).\nlikes(carol,ball).\nhungry(bob).\nlikes(carol,book).\nsibling(dave,bob).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then car is big.\nIf car is big, then pencil is big.\nIf pencil is big, then carol is sad.\nIf carol is sad, then book is wet.\nIf book is wet, then alice likes eve.\nIf alice likes eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf alice is hungry, then eve is a sibling of carol.\nIf eve is a sibling of carol, then frank is a sibling of eve.\nIf frank is a sibling of eve, then dave likes frank.\n\nAnd the following facts:\ngeorge is tall.\nbob likes ball.\nbob likes eve.\ngeorge likes carol.\nfrank likes apple.\ndave likes phone.\ngeorge is a sibling of carol.\ncarol likes ball.\nbob is hungry.\ncarol likes book.\ndave is a sibling of bob.\nfrank is a sibling of carol.\n\nQUESTION:\nIs bob likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,alice).",
    "c": "big(car) :- tall(george).\nbig(pencil) :- big(car).\nsad(carol) :- big(pencil).\nwet(book) :- sad(carol).\nlikes(alice,eve) :- wet(book).\nhot :- likes(alice,eve).\nhungry(alice) :- hot.\nsibling(eve,carol) :- hungry(alice).\nsibling(frank,eve) :- sibling(eve,carol).\nlikes(dave,frank) :- sibling(frank,eve).\ntall(george).\nlikes(bob,ball).\nlikes(bob,eve).\nlikes(george,carol).\nlikes(frank,apple).\nlikes(dave,phone).\nsibling(george,carol).\nlikes(carol,ball).\nhungry(bob).\nlikes(carol,book).\nsibling(dave,bob).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then car is big.\nIf car is big, then pencil is big.\nIf pencil is big, then carol is sad.\nIf carol is sad, then book is wet.\nIf book is wet, then alice likes eve.\nIf alice likes eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf alice is hungry, then eve is a sibling of carol.\nIf eve is a sibling of carol, then frank is a sibling of eve.\nIf frank is a sibling of eve, then dave likes frank.\n\nAnd the following facts:\ngeorge is tall.\nbob likes ball.\nbob likes eve.\ngeorge likes carol.\nfrank likes apple.\ndave likes phone.\ngeorge is a sibling of carol.\ncarol likes ball.\nbob is hungry.\ncarol likes book.\ndave is a sibling of bob.\nfrank is a sibling of carol.\n\nQUESTION:\nIs dave is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,dave).",
    "c": "big(car) :- tall(george).\nbig(pencil) :- big(car).\nsad(carol) :- big(pencil).\nwet(book) :- sad(carol).\nlikes(alice,eve) :- wet(book).\nhot :- likes(alice,eve).\nhungry(alice) :- hot.\nsibling(eve,carol) :- hungry(alice).\nsibling(frank,eve) :- sibling(eve,carol).\nlikes(dave,frank) :- sibling(frank,eve).\ntall(george).\nlikes(bob,ball).\nlikes(bob,eve).\nlikes(george,carol).\nlikes(frank,apple).\nlikes(dave,phone).\nsibling(george,carol).\nlikes(carol,ball).\nhungry(bob).\nlikes(carol,book).\nsibling(dave,bob).\nsibling(frank,carol).",
    "natural language": "You are given the following information:\nIf george is tall, then car is big.\nIf car is big, then pencil is big.\nIf pencil is big, then carol is sad.\nIf carol is sad, then book is wet.\nIf book is wet, then alice likes eve.\nIf alice likes eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf alice is hungry, then eve is a sibling of carol.\nIf eve is a sibling of carol, then frank is a sibling of eve.\nIf frank is a sibling of eve, then dave likes frank.\n\nAnd the following facts:\ngeorge is tall.\nbob likes ball.\nbob likes eve.\ngeorge likes carol.\nfrank likes apple.\ndave likes phone.\ngeorge is a sibling of carol.\ncarol likes ball.\nbob is hungry.\ncarol likes book.\ndave is a sibling of bob.\nfrank is a sibling of carol.\n\nQUESTION:\nIs george is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "big(car) :- tall(george).\nbig(pencil) :- big(car).\nsad(carol) :- big(pencil).\nwet(book) :- sad(carol).\nlikes(alice,eve) :- wet(book).\nhot :- likes(alice,eve).\nhungry(alice) :- hot.\nsibling(eve,carol) :- hungry(alice).\nsibling(frank,eve) :- sibling(eve,carol).\nlikes(dave,frank) :- sibling(frank,eve).\nlikes(bob,ball).\nlikes(bob,eve).\nlikes(george,carol).\nlikes(frank,apple).\nlikes(dave,phone).\nsibling(george,carol).\nlikes(carol,ball).\nhungry(bob).\nlikes(carol,book).\nsibling(dave,bob).\nsibling(frank,carol).",
    "natural language": "You are given the following rules:\nIf george is tall, then car is big.\nIf car is big, then pencil is big.\nIf pencil is big, then carol is sad.\nIf carol is sad, then book is wet.\nIf book is wet, then alice likes eve.\nIf alice likes eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf alice is hungry, then eve is a sibling of carol.\nIf eve is a sibling of carol, then frank is a sibling of eve.\nIf frank is a sibling of eve, then dave likes frank.\n\nAnd the following facts:\ngeorge is tall.\nbob likes ball.\nbob likes eve.\ngeorge likes carol.\nfrank likes apple.\ndave likes phone.\ngeorge is a sibling of carol.\ncarol likes ball.\nbob is hungry.\ncarol likes book.\ndave is a sibling of bob.\nfrank is a sibling of carol.\n\nOBSERVATION: dave likes frank is true.\n\nQUESTION:\nCould george is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "big(car) :- tall(george).\nbig(pencil) :- big(car).\nsad(carol) :- big(pencil).\nwet(book) :- sad(carol).\nlikes(alice,eve) :- wet(book).\nhot :- likes(alice,eve).\nhungry(alice) :- hot.\nsibling(eve,carol) :- hungry(alice).\nsibling(frank,eve) :- sibling(eve,carol).\nlikes(dave,frank) :- sibling(frank,eve).\ntall(george).\nlikes(bob,ball).\nlikes(bob,eve).\nlikes(george,carol).\nlikes(frank,apple).\nlikes(dave,phone).\nsibling(george,carol).\nlikes(carol,ball).\nlikes(carol,book).\nsibling(dave,bob).\nsibling(frank,carol).",
    "natural language": "You are given the following rules:\nIf george is tall, then car is big.\nIf car is big, then pencil is big.\nIf pencil is big, then carol is sad.\nIf carol is sad, then book is wet.\nIf book is wet, then alice likes eve.\nIf alice likes eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf alice is hungry, then eve is a sibling of carol.\nIf eve is a sibling of carol, then frank is a sibling of eve.\nIf frank is a sibling of eve, then dave likes frank.\n\nAnd the following facts:\ngeorge is tall.\nbob likes ball.\nbob likes eve.\ngeorge likes carol.\nfrank likes apple.\ndave likes phone.\ngeorge is a sibling of carol.\ncarol likes ball.\nbob is hungry.\ncarol likes book.\ndave is a sibling of bob.\nfrank is a sibling of carol.\n\nOBSERVATION: dave likes frank is true.\n\nQUESTION:\nCould bob is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,bob).",
    "c": "big(car) :- tall(george).\nbig(pencil) :- big(car).\nsad(carol) :- big(pencil).\nwet(book) :- sad(carol).\nlikes(alice,eve) :- wet(book).\nhot :- likes(alice,eve).\nhungry(alice) :- hot.\nsibling(eve,carol) :- hungry(alice).\nsibling(frank,eve) :- sibling(eve,carol).\nlikes(dave,frank) :- sibling(frank,eve).\ntall(george).\nlikes(bob,ball).\nlikes(bob,eve).\nlikes(george,carol).\nlikes(frank,apple).\nlikes(dave,phone).\nsibling(george,carol).\nlikes(carol,ball).\nhungry(bob).\nlikes(carol,book).\nsibling(frank,carol).",
    "natural language": "You are given the following rules:\nIf george is tall, then car is big.\nIf car is big, then pencil is big.\nIf pencil is big, then carol is sad.\nIf carol is sad, then book is wet.\nIf book is wet, then alice likes eve.\nIf alice likes eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf alice is hungry, then eve is a sibling of carol.\nIf eve is a sibling of carol, then frank is a sibling of eve.\nIf frank is a sibling of eve, then dave likes frank.\n\nAnd the following facts:\ngeorge is tall.\nbob likes ball.\nbob likes eve.\ngeorge likes carol.\nfrank likes apple.\ndave likes phone.\ngeorge is a sibling of carol.\ncarol likes ball.\nbob is hungry.\ncarol likes book.\ndave is a sibling of bob.\nfrank is a sibling of carol.\n\nOBSERVATION: dave likes frank is true.\n\nQUESTION:\nCould dave is a sibling of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(bob,pencil).",
    "c": "owns(alice,car) :- likes(frank,frank).\nsad(bob) :- owns(alice,car).\nfriend(eve,alice) :- sad(bob).\ncold :- friend(eve,alice).\nsibling(eve,frank) :- cold.\nhot :- sibling(eve,frank).\nsmall(phone) :- hot.\ndislikes(george,dave) :- small(phone).\nlikes(george,frank) :- dislikes(george,dave).\nwet(car) :- likes(george,frank).\nlikes(frank,frank).\ndislikes(dave,george).\nlikes(bob,ball).\nwet(apple).\nlikes(bob,pencil).\nlikes(alice,frank).\nlikes(carol,pencil).\ndislikes(eve,bob).\nlikes(eve,dave).\nowns(bob,pencil).\nlikes(frank,pencil).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nIf frank likes frank, then alice owns car.\nIf alice owns car, then bob is sad.\nIf bob is sad, then eve is a friend of alice.\nIf eve is a friend of alice, then it is cold.\nIf it is cold, then eve is a sibling of frank.\nIf eve is a sibling of frank, then it is hot.\nIf it is hot, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then george likes frank.\nIf george likes frank, then car is wet.\n\nAnd the following facts:\nfrank likes frank.\ndave dislikes george.\nbob likes ball.\napple is wet.\nbob likes pencil.\nalice likes frank.\ncarol likes pencil.\neve dislikes bob.\neve likes dave.\nbob owns pencil.\nfrank likes pencil.\nfrank is a sibling of dave.\n\nQUESTION:\nIs bob owns pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,dave).",
    "c": "owns(alice,car) :- likes(frank,frank).\nsad(bob) :- owns(alice,car).\nfriend(eve,alice) :- sad(bob).\ncold :- friend(eve,alice).\nsibling(eve,frank) :- cold.\nhot :- sibling(eve,frank).\nsmall(phone) :- hot.\ndislikes(george,dave) :- small(phone).\nlikes(george,frank) :- dislikes(george,dave).\nwet(car) :- likes(george,frank).\nlikes(frank,frank).\ndislikes(dave,george).\nlikes(bob,ball).\nwet(apple).\nlikes(bob,pencil).\nlikes(alice,frank).\nlikes(carol,pencil).\ndislikes(eve,bob).\nlikes(eve,dave).\nowns(bob,pencil).\nlikes(frank,pencil).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nIf frank likes frank, then alice owns car.\nIf alice owns car, then bob is sad.\nIf bob is sad, then eve is a friend of alice.\nIf eve is a friend of alice, then it is cold.\nIf it is cold, then eve is a sibling of frank.\nIf eve is a sibling of frank, then it is hot.\nIf it is hot, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then george likes frank.\nIf george likes frank, then car is wet.\n\nAnd the following facts:\nfrank likes frank.\ndave dislikes george.\nbob likes ball.\napple is wet.\nbob likes pencil.\nalice likes frank.\ncarol likes pencil.\neve dislikes bob.\neve likes dave.\nbob owns pencil.\nfrank likes pencil.\nfrank is a sibling of dave.\n\nQUESTION:\nIs george dislikes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "owns(alice,car) :- likes(frank,frank).\nsad(bob) :- owns(alice,car).\nfriend(eve,alice) :- sad(bob).\ncold :- friend(eve,alice).\nsibling(eve,frank) :- cold.\nhot :- sibling(eve,frank).\nsmall(phone) :- hot.\ndislikes(george,dave) :- small(phone).\nlikes(george,frank) :- dislikes(george,dave).\nwet(car) :- likes(george,frank).\nlikes(frank,frank).\ndislikes(dave,george).\nlikes(bob,ball).\nwet(apple).\nlikes(bob,pencil).\nlikes(alice,frank).\nlikes(carol,pencil).\ndislikes(eve,bob).\nlikes(eve,dave).\nowns(bob,pencil).\nlikes(frank,pencil).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nIf frank likes frank, then alice owns car.\nIf alice owns car, then bob is sad.\nIf bob is sad, then eve is a friend of alice.\nIf eve is a friend of alice, then it is cold.\nIf it is cold, then eve is a sibling of frank.\nIf eve is a sibling of frank, then it is hot.\nIf it is hot, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then george likes frank.\nIf george likes frank, then car is wet.\n\nAnd the following facts:\nfrank likes frank.\ndave dislikes george.\nbob likes ball.\napple is wet.\nbob likes pencil.\nalice likes frank.\ncarol likes pencil.\neve dislikes bob.\neve likes dave.\nbob owns pencil.\nfrank likes pencil.\nfrank is a sibling of dave.\n\nQUESTION:\nIs car is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,frank).",
    "c": "owns(alice,car) :- likes(frank,frank).\nsad(bob) :- owns(alice,car).\nfriend(eve,alice) :- sad(bob).\ncold :- friend(eve,alice).\nsibling(eve,frank) :- cold.\nhot :- sibling(eve,frank).\nsmall(phone) :- hot.\ndislikes(george,dave) :- small(phone).\nlikes(george,frank) :- dislikes(george,dave).\nwet(car) :- likes(george,frank).\nlikes(frank,frank).\ndislikes(dave,george).\nlikes(bob,ball).\nwet(apple).\nlikes(bob,pencil).\nlikes(alice,frank).\nlikes(carol,pencil).\ndislikes(eve,bob).\nlikes(eve,dave).\nowns(bob,pencil).\nlikes(frank,pencil).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nIf frank likes frank, then alice owns car.\nIf alice owns car, then bob is sad.\nIf bob is sad, then eve is a friend of alice.\nIf eve is a friend of alice, then it is cold.\nIf it is cold, then eve is a sibling of frank.\nIf eve is a sibling of frank, then it is hot.\nIf it is hot, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then george likes frank.\nIf george likes frank, then car is wet.\n\nAnd the following facts:\nfrank likes frank.\ndave dislikes george.\nbob likes ball.\napple is wet.\nbob likes pencil.\nalice likes frank.\ncarol likes pencil.\neve dislikes bob.\neve likes dave.\nbob owns pencil.\nfrank likes pencil.\nfrank is a sibling of dave.\n\nQUESTION:\nIs alice dislikes frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,ball).",
    "c": "owns(alice,car) :- likes(frank,frank).\nsad(bob) :- owns(alice,car).\nfriend(eve,alice) :- sad(bob).\ncold :- friend(eve,alice).\nsibling(eve,frank) :- cold.\nhot :- sibling(eve,frank).\nsmall(phone) :- hot.\ndislikes(george,dave) :- small(phone).\nlikes(george,frank) :- dislikes(george,dave).\nwet(car) :- likes(george,frank).\nlikes(frank,frank).\ndislikes(dave,george).\nlikes(bob,ball).\nwet(apple).\nlikes(bob,pencil).\nlikes(alice,frank).\nlikes(carol,pencil).\ndislikes(eve,bob).\nlikes(eve,dave).\nowns(bob,pencil).\nlikes(frank,pencil).\nsibling(frank,dave).",
    "natural language": "You are given the following information:\nIf frank likes frank, then alice owns car.\nIf alice owns car, then bob is sad.\nIf bob is sad, then eve is a friend of alice.\nIf eve is a friend of alice, then it is cold.\nIf it is cold, then eve is a sibling of frank.\nIf eve is a sibling of frank, then it is hot.\nIf it is hot, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then george likes frank.\nIf george likes frank, then car is wet.\n\nAnd the following facts:\nfrank likes frank.\ndave dislikes george.\nbob likes ball.\napple is wet.\nbob likes pencil.\nalice likes frank.\ncarol likes pencil.\neve dislikes bob.\neve likes dave.\nbob owns pencil.\nfrank likes pencil.\nfrank is a sibling of dave.\n\nQUESTION:\nIs frank likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,frank).",
    "c": "owns(alice,car) :- likes(frank,frank).\nsad(bob) :- owns(alice,car).\nfriend(eve,alice) :- sad(bob).\ncold :- friend(eve,alice).\nsibling(eve,frank) :- cold.\nhot :- sibling(eve,frank).\nsmall(phone) :- hot.\ndislikes(george,dave) :- small(phone).\nlikes(george,frank) :- dislikes(george,dave).\nwet(car) :- likes(george,frank).\ndislikes(dave,george).\nlikes(bob,ball).\nwet(apple).\nlikes(bob,pencil).\nlikes(alice,frank).\nlikes(carol,pencil).\ndislikes(eve,bob).\nlikes(eve,dave).\nowns(bob,pencil).\nlikes(frank,pencil).\nsibling(frank,dave).",
    "natural language": "You are given the following rules:\nIf frank likes frank, then alice owns car.\nIf alice owns car, then bob is sad.\nIf bob is sad, then eve is a friend of alice.\nIf eve is a friend of alice, then it is cold.\nIf it is cold, then eve is a sibling of frank.\nIf eve is a sibling of frank, then it is hot.\nIf it is hot, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then george likes frank.\nIf george likes frank, then car is wet.\n\nAnd the following facts:\nfrank likes frank.\ndave dislikes george.\nbob likes ball.\napple is wet.\nbob likes pencil.\nalice likes frank.\ncarol likes pencil.\neve dislikes bob.\neve likes dave.\nbob owns pencil.\nfrank likes pencil.\nfrank is a sibling of dave.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould frank likes frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,pencil).",
    "c": "owns(alice,car) :- likes(frank,frank).\nsad(bob) :- owns(alice,car).\nfriend(eve,alice) :- sad(bob).\ncold :- friend(eve,alice).\nsibling(eve,frank) :- cold.\nhot :- sibling(eve,frank).\nsmall(phone) :- hot.\ndislikes(george,dave) :- small(phone).\nlikes(george,frank) :- dislikes(george,dave).\nwet(car) :- likes(george,frank).\nlikes(frank,frank).\ndislikes(dave,george).\nlikes(bob,ball).\nwet(apple).\nlikes(bob,pencil).\nlikes(alice,frank).\ndislikes(eve,bob).\nlikes(eve,dave).\nowns(bob,pencil).\nlikes(frank,pencil).\nsibling(frank,dave).",
    "natural language": "You are given the following rules:\nIf frank likes frank, then alice owns car.\nIf alice owns car, then bob is sad.\nIf bob is sad, then eve is a friend of alice.\nIf eve is a friend of alice, then it is cold.\nIf it is cold, then eve is a sibling of frank.\nIf eve is a sibling of frank, then it is hot.\nIf it is hot, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then george likes frank.\nIf george likes frank, then car is wet.\n\nAnd the following facts:\nfrank likes frank.\ndave dislikes george.\nbob likes ball.\napple is wet.\nbob likes pencil.\nalice likes frank.\ncarol likes pencil.\neve dislikes bob.\neve likes dave.\nbob owns pencil.\nfrank likes pencil.\nfrank is a sibling of dave.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould carol likes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(bob,pencil).",
    "c": "owns(alice,car) :- likes(frank,frank).\nsad(bob) :- owns(alice,car).\nfriend(eve,alice) :- sad(bob).\ncold :- friend(eve,alice).\nsibling(eve,frank) :- cold.\nhot :- sibling(eve,frank).\nsmall(phone) :- hot.\ndislikes(george,dave) :- small(phone).\nlikes(george,frank) :- dislikes(george,dave).\nwet(car) :- likes(george,frank).\nlikes(frank,frank).\ndislikes(dave,george).\nlikes(bob,ball).\nwet(apple).\nlikes(bob,pencil).\nlikes(alice,frank).\nlikes(carol,pencil).\ndislikes(eve,bob).\nlikes(eve,dave).\nlikes(frank,pencil).\nsibling(frank,dave).",
    "natural language": "You are given the following rules:\nIf frank likes frank, then alice owns car.\nIf alice owns car, then bob is sad.\nIf bob is sad, then eve is a friend of alice.\nIf eve is a friend of alice, then it is cold.\nIf it is cold, then eve is a sibling of frank.\nIf eve is a sibling of frank, then it is hot.\nIf it is hot, then phone is small.\nIf phone is small, then george dislikes dave.\nIf george dislikes dave, then george likes frank.\nIf george likes frank, then car is wet.\n\nAnd the following facts:\nfrank likes frank.\ndave dislikes george.\nbob likes ball.\napple is wet.\nbob likes pencil.\nalice likes frank.\ncarol likes pencil.\neve dislikes bob.\neve likes dave.\nbob owns pencil.\nfrank likes pencil.\nfrank is a sibling of dave.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould bob owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(eve,dave).",
    "c": "parent(bob,frank) :- dislikes(eve,bob).\nparent(eve,alice) :- parent(bob,frank).\nhot :- cold, hot, parent(carol,bob).\nhot :- hot, friend(bob,george), friend(bob,dave).\nsmall(phone) :- parent(bob,eve), small(apple), cold.\ntall(alice) :- sad(dave).\ntall(dave) :- happy(bob).\nsmall(car) :- small(pencil), friend(frank,frank).\nenemy(dave,frank) :- enemy(bob,george), sad(frank), likes(dave,car).\ndislikes(eve,bob).\nlikes(eve,george).\nlikes(frank,car).\nenemy(george,dave).\nlikes(carol,ball).\ndislikes(alice,carol).\nenemy(eve,dave).\nsmall(pencil).\ntall(bob).\ndislikes(eve,phone).\nlikes(alice,eve).\nenemy(frank,bob).\nlikes(bob,alice).\nhappy(bob).\ndislikes(bob,apple).\nfriend(george,alice).",
    "natural language": "You are given the following information:\nIf eve dislikes bob, then bob is a parent of frank.\nIf bob is a parent of frank, then eve is a parent of alice.\nIf it is cold and it is hot and carol is a parent of bob, then it is hot.\nIf it is hot and bob is a friend of george and bob is a friend of dave, then it is hot.\nIf bob is a parent of eve and apple is small and it is cold, then phone is small.\nIf dave is sad, then alice is tall.\nIf bob is happy, then dave is tall.\nIf pencil is small and frank is a friend of frank, then car is small.\nIf bob is an enemy of george and frank is sad and dave likes car, then dave is an enemy of frank.\n\nAnd the following facts:\neve dislikes bob.\neve likes george.\nfrank likes car.\ngeorge is an enemy of dave.\ncarol likes ball.\nalice dislikes carol.\neve is an enemy of dave.\npencil is small.\nbob is tall.\neve dislikes phone.\nalice likes eve.\nfrank is an enemy of bob.\nbob likes alice.\nbob is happy.\nbob dislikes apple.\ngeorge is a friend of alice.\n\nQUESTION:\nIs eve is an enemy of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,bob).",
    "c": "parent(bob,frank) :- dislikes(eve,bob).\nparent(eve,alice) :- parent(bob,frank).\nhot :- cold, hot, parent(carol,bob).\nhot :- hot, friend(bob,george), friend(bob,dave).\nsmall(phone) :- parent(bob,eve), small(apple), cold.\ntall(alice) :- sad(dave).\ntall(dave) :- happy(bob).\nsmall(car) :- small(pencil), friend(frank,frank).\nenemy(dave,frank) :- enemy(bob,george), sad(frank), likes(dave,car).\ndislikes(eve,bob).\nlikes(eve,george).\nlikes(frank,car).\nenemy(george,dave).\nlikes(carol,ball).\ndislikes(alice,carol).\nenemy(eve,dave).\nsmall(pencil).\ntall(bob).\ndislikes(eve,phone).\nlikes(alice,eve).\nenemy(frank,bob).\nlikes(bob,alice).\nhappy(bob).\ndislikes(bob,apple).\nfriend(george,alice).",
    "natural language": "You are given the following information:\nIf eve dislikes bob, then bob is a parent of frank.\nIf bob is a parent of frank, then eve is a parent of alice.\nIf it is cold and it is hot and carol is a parent of bob, then it is hot.\nIf it is hot and bob is a friend of george and bob is a friend of dave, then it is hot.\nIf bob is a parent of eve and apple is small and it is cold, then phone is small.\nIf dave is sad, then alice is tall.\nIf bob is happy, then dave is tall.\nIf pencil is small and frank is a friend of frank, then car is small.\nIf bob is an enemy of george and frank is sad and dave likes car, then dave is an enemy of frank.\n\nAnd the following facts:\neve dislikes bob.\neve likes george.\nfrank likes car.\ngeorge is an enemy of dave.\ncarol likes ball.\nalice dislikes carol.\neve is an enemy of dave.\npencil is small.\nbob is tall.\neve dislikes phone.\nalice likes eve.\nfrank is an enemy of bob.\nbob likes alice.\nbob is happy.\nbob dislikes apple.\ngeorge is a friend of alice.\n\nQUESTION:\nIs eve dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,car).",
    "c": "parent(bob,frank) :- dislikes(eve,bob).\nparent(eve,alice) :- parent(bob,frank).\nhot :- cold, hot, parent(carol,bob).\nhot :- hot, friend(bob,george), friend(bob,dave).\nsmall(phone) :- parent(bob,eve), small(apple), cold.\ntall(alice) :- sad(dave).\ntall(dave) :- happy(bob).\nsmall(car) :- small(pencil), friend(frank,frank).\nenemy(dave,frank) :- enemy(bob,george), sad(frank), likes(dave,car).\ndislikes(eve,bob).\nlikes(eve,george).\nlikes(frank,car).\nenemy(george,dave).\nlikes(carol,ball).\ndislikes(alice,carol).\nenemy(eve,dave).\nsmall(pencil).\ntall(bob).\ndislikes(eve,phone).\nlikes(alice,eve).\nenemy(frank,bob).\nlikes(bob,alice).\nhappy(bob).\ndislikes(bob,apple).\nfriend(george,alice).",
    "natural language": "You are given the following information:\nIf eve dislikes bob, then bob is a parent of frank.\nIf bob is a parent of frank, then eve is a parent of alice.\nIf it is cold and it is hot and carol is a parent of bob, then it is hot.\nIf it is hot and bob is a friend of george and bob is a friend of dave, then it is hot.\nIf bob is a parent of eve and apple is small and it is cold, then phone is small.\nIf dave is sad, then alice is tall.\nIf bob is happy, then dave is tall.\nIf pencil is small and frank is a friend of frank, then car is small.\nIf bob is an enemy of george and frank is sad and dave likes car, then dave is an enemy of frank.\n\nAnd the following facts:\neve dislikes bob.\neve likes george.\nfrank likes car.\ngeorge is an enemy of dave.\ncarol likes ball.\nalice dislikes carol.\neve is an enemy of dave.\npencil is small.\nbob is tall.\neve dislikes phone.\nalice likes eve.\nfrank is an enemy of bob.\nbob likes alice.\nbob is happy.\nbob dislikes apple.\ngeorge is a friend of alice.\n\nQUESTION:\nIs frank likes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,frank).",
    "c": "parent(bob,frank) :- dislikes(eve,bob).\nparent(eve,alice) :- parent(bob,frank).\nhot :- cold, hot, parent(carol,bob).\nhot :- hot, friend(bob,george), friend(bob,dave).\nsmall(phone) :- parent(bob,eve), small(apple), cold.\ntall(alice) :- sad(dave).\ntall(dave) :- happy(bob).\nsmall(car) :- small(pencil), friend(frank,frank).\nenemy(dave,frank) :- enemy(bob,george), sad(frank), likes(dave,car).\ndislikes(eve,bob).\nlikes(eve,george).\nlikes(frank,car).\nenemy(george,dave).\nlikes(carol,ball).\ndislikes(alice,carol).\nenemy(eve,dave).\nsmall(pencil).\ntall(bob).\ndislikes(eve,phone).\nlikes(alice,eve).\nenemy(frank,bob).\nlikes(bob,alice).\nhappy(bob).\ndislikes(bob,apple).\nfriend(george,alice).",
    "natural language": "You are given the following information:\nIf eve dislikes bob, then bob is a parent of frank.\nIf bob is a parent of frank, then eve is a parent of alice.\nIf it is cold and it is hot and carol is a parent of bob, then it is hot.\nIf it is hot and bob is a friend of george and bob is a friend of dave, then it is hot.\nIf bob is a parent of eve and apple is small and it is cold, then phone is small.\nIf dave is sad, then alice is tall.\nIf bob is happy, then dave is tall.\nIf pencil is small and frank is a friend of frank, then car is small.\nIf bob is an enemy of george and frank is sad and dave likes car, then dave is an enemy of frank.\n\nAnd the following facts:\neve dislikes bob.\neve likes george.\nfrank likes car.\ngeorge is an enemy of dave.\ncarol likes ball.\nalice dislikes carol.\neve is an enemy of dave.\npencil is small.\nbob is tall.\neve dislikes phone.\nalice likes eve.\nfrank is an enemy of bob.\nbob likes alice.\nbob is happy.\nbob dislikes apple.\ngeorge is a friend of alice.\n\nQUESTION:\nIs bob is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "parent(bob,frank) :- dislikes(eve,bob).\nparent(eve,alice) :- parent(bob,frank).\nhot :- cold, hot, parent(carol,bob).\nhot :- hot, friend(bob,george), friend(bob,dave).\nsmall(phone) :- parent(bob,eve), small(apple), cold.\ntall(alice) :- sad(dave).\ntall(dave) :- happy(bob).\nsmall(car) :- small(pencil), friend(frank,frank).\nenemy(dave,frank) :- enemy(bob,george), sad(frank), likes(dave,car).\ndislikes(eve,bob).\nlikes(eve,george).\nlikes(frank,car).\nenemy(george,dave).\nlikes(carol,ball).\ndislikes(alice,carol).\nenemy(eve,dave).\nsmall(pencil).\ntall(bob).\ndislikes(eve,phone).\nlikes(alice,eve).\nenemy(frank,bob).\nlikes(bob,alice).\nhappy(bob).\ndislikes(bob,apple).\nfriend(george,alice).",
    "natural language": "You are given the following information:\nIf eve dislikes bob, then bob is a parent of frank.\nIf bob is a parent of frank, then eve is a parent of alice.\nIf it is cold and it is hot and carol is a parent of bob, then it is hot.\nIf it is hot and bob is a friend of george and bob is a friend of dave, then it is hot.\nIf bob is a parent of eve and apple is small and it is cold, then phone is small.\nIf dave is sad, then alice is tall.\nIf bob is happy, then dave is tall.\nIf pencil is small and frank is a friend of frank, then car is small.\nIf bob is an enemy of george and frank is sad and dave likes car, then dave is an enemy of frank.\n\nAnd the following facts:\neve dislikes bob.\neve likes george.\nfrank likes car.\ngeorge is an enemy of dave.\ncarol likes ball.\nalice dislikes carol.\neve is an enemy of dave.\npencil is small.\nbob is tall.\neve dislikes phone.\nalice likes eve.\nfrank is an enemy of bob.\nbob likes alice.\nbob is happy.\nbob dislikes apple.\ngeorge is a friend of alice.\n\nQUESTION:\nIs george is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,bob).",
    "c": "parent(bob,frank) :- dislikes(eve,bob).\nparent(eve,alice) :- parent(bob,frank).\nhot :- cold, hot, parent(carol,bob).\nhot :- hot, friend(bob,george), friend(bob,dave).\nsmall(phone) :- parent(bob,eve), small(apple), cold.\ntall(alice) :- sad(dave).\ntall(dave) :- happy(bob).\nsmall(car) :- small(pencil), friend(frank,frank).\nenemy(dave,frank) :- enemy(bob,george), sad(frank), likes(dave,car).\nlikes(eve,george).\nlikes(frank,car).\nenemy(george,dave).\nlikes(carol,ball).\ndislikes(alice,carol).\nenemy(eve,dave).\nsmall(pencil).\ntall(bob).\ndislikes(eve,phone).\nlikes(alice,eve).\nenemy(frank,bob).\nlikes(bob,alice).\nhappy(bob).\ndislikes(bob,apple).\nfriend(george,alice).",
    "natural language": "You are given the following rules:\nIf eve dislikes bob, then bob is a parent of frank.\nIf bob is a parent of frank, then eve is a parent of alice.\nIf it is cold and it is hot and carol is a parent of bob, then it is hot.\nIf it is hot and bob is a friend of george and bob is a friend of dave, then it is hot.\nIf bob is a parent of eve and apple is small and it is cold, then phone is small.\nIf dave is sad, then alice is tall.\nIf bob is happy, then dave is tall.\nIf pencil is small and frank is a friend of frank, then car is small.\nIf bob is an enemy of george and frank is sad and dave likes car, then dave is an enemy of frank.\n\nAnd the following facts:\neve dislikes bob.\neve likes george.\nfrank likes car.\ngeorge is an enemy of dave.\ncarol likes ball.\nalice dislikes carol.\neve is an enemy of dave.\npencil is small.\nbob is tall.\neve dislikes phone.\nalice likes eve.\nfrank is an enemy of bob.\nbob likes alice.\nbob is happy.\nbob dislikes apple.\ngeorge is a friend of alice.\n\nOBSERVATION: eve is a parent of alice is true.\n\nQUESTION:\nCould eve dislikes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "parent(bob,frank) :- dislikes(eve,bob).\nparent(eve,alice) :- parent(bob,frank).\nhot :- cold, hot, parent(carol,bob).\nhot :- hot, friend(bob,george), friend(bob,dave).\nsmall(phone) :- parent(bob,eve), small(apple), cold.\ntall(alice) :- sad(dave).\ntall(dave) :- happy(bob).\nsmall(car) :- small(pencil), friend(frank,frank).\nenemy(dave,frank) :- enemy(bob,george), sad(frank), likes(dave,car).\ndislikes(eve,bob).\nlikes(eve,george).\nlikes(frank,car).\nenemy(george,dave).\nlikes(carol,ball).\ndislikes(alice,carol).\nenemy(eve,dave).\nsmall(pencil).\ntall(bob).\ndislikes(eve,phone).\nlikes(alice,eve).\nenemy(frank,bob).\nlikes(bob,alice).\ndislikes(bob,apple).\nfriend(george,alice).",
    "natural language": "You are given the following rules:\nIf eve dislikes bob, then bob is a parent of frank.\nIf bob is a parent of frank, then eve is a parent of alice.\nIf it is cold and it is hot and carol is a parent of bob, then it is hot.\nIf it is hot and bob is a friend of george and bob is a friend of dave, then it is hot.\nIf bob is a parent of eve and apple is small and it is cold, then phone is small.\nIf dave is sad, then alice is tall.\nIf bob is happy, then dave is tall.\nIf pencil is small and frank is a friend of frank, then car is small.\nIf bob is an enemy of george and frank is sad and dave likes car, then dave is an enemy of frank.\n\nAnd the following facts:\neve dislikes bob.\neve likes george.\nfrank likes car.\ngeorge is an enemy of dave.\ncarol likes ball.\nalice dislikes carol.\neve is an enemy of dave.\npencil is small.\nbob is tall.\neve dislikes phone.\nalice likes eve.\nfrank is an enemy of bob.\nbob likes alice.\nbob is happy.\nbob dislikes apple.\ngeorge is a friend of alice.\n\nOBSERVATION: eve is a parent of alice is true.\n\nQUESTION:\nCould bob is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,george).",
    "c": "parent(bob,frank) :- dislikes(eve,bob).\nparent(eve,alice) :- parent(bob,frank).\nhot :- cold, hot, parent(carol,bob).\nhot :- hot, friend(bob,george), friend(bob,dave).\nsmall(phone) :- parent(bob,eve), small(apple), cold.\ntall(alice) :- sad(dave).\ntall(dave) :- happy(bob).\nsmall(car) :- small(pencil), friend(frank,frank).\nenemy(dave,frank) :- enemy(bob,george), sad(frank), likes(dave,car).\ndislikes(eve,bob).\nlikes(frank,car).\nenemy(george,dave).\nlikes(carol,ball).\ndislikes(alice,carol).\nenemy(eve,dave).\nsmall(pencil).\ntall(bob).\ndislikes(eve,phone).\nlikes(alice,eve).\nenemy(frank,bob).\nlikes(bob,alice).\nhappy(bob).\ndislikes(bob,apple).\nfriend(george,alice).",
    "natural language": "You are given the following rules:\nIf eve dislikes bob, then bob is a parent of frank.\nIf bob is a parent of frank, then eve is a parent of alice.\nIf it is cold and it is hot and carol is a parent of bob, then it is hot.\nIf it is hot and bob is a friend of george and bob is a friend of dave, then it is hot.\nIf bob is a parent of eve and apple is small and it is cold, then phone is small.\nIf dave is sad, then alice is tall.\nIf bob is happy, then dave is tall.\nIf pencil is small and frank is a friend of frank, then car is small.\nIf bob is an enemy of george and frank is sad and dave likes car, then dave is an enemy of frank.\n\nAnd the following facts:\neve dislikes bob.\neve likes george.\nfrank likes car.\ngeorge is an enemy of dave.\ncarol likes ball.\nalice dislikes carol.\neve is an enemy of dave.\npencil is small.\nbob is tall.\neve dislikes phone.\nalice likes eve.\nfrank is an enemy of bob.\nbob likes alice.\nbob is happy.\nbob dislikes apple.\ngeorge is a friend of alice.\n\nOBSERVATION: eve is a parent of alice is true.\n\nQUESTION:\nCould eve likes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "wet(car) :- owns(george,phone).\nhungry(carol) :- wet(car).\ntall(carol) :- sibling(alice,dave).\nlikes(eve,car) :- small(book), owns(bob,car).\ntall(dave) :- wet(pencil), dislikes(alice,carol).\nenemy(bob,alice) :- enemy(alice,carol).\nlikes(carol,pencil) :- dislikes(bob,alice), sad(alice).\nhungry(alice) :- dislikes(george,alice).\nenemy(george,eve) :- friend(george,alice), enemy(george,dave), enemy(carol,alice).\nowns(george,phone).\nowns(frank,ball).\nowns(george,phone).\nlikes(george,alice).\nsibling(frank,alice).\ndislikes(alice,carol).\nsibling(bob,carol).\nfriend(alice,bob).\nsibling(george,bob).\nsibling(frank,bob).\nlikes(bob,ball).\ndislikes(bob,car).\ndislikes(eve,george).\nenemy(dave,eve).\nsibling(alice,eve).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf george owns phone, then car is wet.\nIf car is wet, then carol is hungry.\nIf alice is a sibling of dave, then carol is tall.\nIf book is small and bob owns car, then eve likes car.\nIf pencil is wet and alice dislikes carol, then dave is tall.\nIf alice is an enemy of carol, then bob is an enemy of alice.\nIf bob dislikes alice and alice is sad, then carol likes pencil.\nIf george dislikes alice, then alice is hungry.\nIf george is a friend of alice and george is an enemy of dave and carol is an enemy of alice, then george is an enemy of eve.\n\nAnd the following facts:\ngeorge owns phone.\nfrank owns ball.\ngeorge owns phone.\ngeorge likes alice.\nfrank is a sibling of alice.\nalice dislikes carol.\nbob is a sibling of carol.\nalice is a friend of bob.\ngeorge is a sibling of bob.\nfrank is a sibling of bob.\nbob likes ball.\nbob dislikes car.\neve dislikes george.\ndave is an enemy of eve.\nalice is a sibling of eve.\neve likes apple.\n\nQUESTION:\nIs dave is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "wet(car) :- owns(george,phone).\nhungry(carol) :- wet(car).\ntall(carol) :- sibling(alice,dave).\nlikes(eve,car) :- small(book), owns(bob,car).\ntall(dave) :- wet(pencil), dislikes(alice,carol).\nenemy(bob,alice) :- enemy(alice,carol).\nlikes(carol,pencil) :- dislikes(bob,alice), sad(alice).\nhungry(alice) :- dislikes(george,alice).\nenemy(george,eve) :- friend(george,alice), enemy(george,dave), enemy(carol,alice).\nowns(george,phone).\nowns(frank,ball).\nowns(george,phone).\nlikes(george,alice).\nsibling(frank,alice).\ndislikes(alice,carol).\nsibling(bob,carol).\nfriend(alice,bob).\nsibling(george,bob).\nsibling(frank,bob).\nlikes(bob,ball).\ndislikes(bob,car).\ndislikes(eve,george).\nenemy(dave,eve).\nsibling(alice,eve).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf george owns phone, then car is wet.\nIf car is wet, then carol is hungry.\nIf alice is a sibling of dave, then carol is tall.\nIf book is small and bob owns car, then eve likes car.\nIf pencil is wet and alice dislikes carol, then dave is tall.\nIf alice is an enemy of carol, then bob is an enemy of alice.\nIf bob dislikes alice and alice is sad, then carol likes pencil.\nIf george dislikes alice, then alice is hungry.\nIf george is a friend of alice and george is an enemy of dave and carol is an enemy of alice, then george is an enemy of eve.\n\nAnd the following facts:\ngeorge owns phone.\nfrank owns ball.\ngeorge owns phone.\ngeorge likes alice.\nfrank is a sibling of alice.\nalice dislikes carol.\nbob is a sibling of carol.\nalice is a friend of bob.\ngeorge is a sibling of bob.\nfrank is a sibling of bob.\nbob likes ball.\nbob dislikes car.\neve dislikes george.\ndave is an enemy of eve.\nalice is a sibling of eve.\neve likes apple.\n\nQUESTION:\nIs car is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,carol).",
    "c": "wet(car) :- owns(george,phone).\nhungry(carol) :- wet(car).\ntall(carol) :- sibling(alice,dave).\nlikes(eve,car) :- small(book), owns(bob,car).\ntall(dave) :- wet(pencil), dislikes(alice,carol).\nenemy(bob,alice) :- enemy(alice,carol).\nlikes(carol,pencil) :- dislikes(bob,alice), sad(alice).\nhungry(alice) :- dislikes(george,alice).\nenemy(george,eve) :- friend(george,alice), enemy(george,dave), enemy(carol,alice).\nowns(george,phone).\nowns(frank,ball).\nowns(george,phone).\nlikes(george,alice).\nsibling(frank,alice).\ndislikes(alice,carol).\nsibling(bob,carol).\nfriend(alice,bob).\nsibling(george,bob).\nsibling(frank,bob).\nlikes(bob,ball).\ndislikes(bob,car).\ndislikes(eve,george).\nenemy(dave,eve).\nsibling(alice,eve).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf george owns phone, then car is wet.\nIf car is wet, then carol is hungry.\nIf alice is a sibling of dave, then carol is tall.\nIf book is small and bob owns car, then eve likes car.\nIf pencil is wet and alice dislikes carol, then dave is tall.\nIf alice is an enemy of carol, then bob is an enemy of alice.\nIf bob dislikes alice and alice is sad, then carol likes pencil.\nIf george dislikes alice, then alice is hungry.\nIf george is a friend of alice and george is an enemy of dave and carol is an enemy of alice, then george is an enemy of eve.\n\nAnd the following facts:\ngeorge owns phone.\nfrank owns ball.\ngeorge owns phone.\ngeorge likes alice.\nfrank is a sibling of alice.\nalice dislikes carol.\nbob is a sibling of carol.\nalice is a friend of bob.\ngeorge is a sibling of bob.\nfrank is a sibling of bob.\nbob likes ball.\nbob dislikes car.\neve dislikes george.\ndave is an enemy of eve.\nalice is a sibling of eve.\neve likes apple.\n\nQUESTION:\nIs alice dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "wet(car) :- owns(george,phone).\nhungry(carol) :- wet(car).\ntall(carol) :- sibling(alice,dave).\nlikes(eve,car) :- small(book), owns(bob,car).\ntall(dave) :- wet(pencil), dislikes(alice,carol).\nenemy(bob,alice) :- enemy(alice,carol).\nlikes(carol,pencil) :- dislikes(bob,alice), sad(alice).\nhungry(alice) :- dislikes(george,alice).\nenemy(george,eve) :- friend(george,alice), enemy(george,dave), enemy(carol,alice).\nowns(george,phone).\nowns(frank,ball).\nowns(george,phone).\nlikes(george,alice).\nsibling(frank,alice).\ndislikes(alice,carol).\nsibling(bob,carol).\nfriend(alice,bob).\nsibling(george,bob).\nsibling(frank,bob).\nlikes(bob,ball).\ndislikes(bob,car).\ndislikes(eve,george).\nenemy(dave,eve).\nsibling(alice,eve).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf george owns phone, then car is wet.\nIf car is wet, then carol is hungry.\nIf alice is a sibling of dave, then carol is tall.\nIf book is small and bob owns car, then eve likes car.\nIf pencil is wet and alice dislikes carol, then dave is tall.\nIf alice is an enemy of carol, then bob is an enemy of alice.\nIf bob dislikes alice and alice is sad, then carol likes pencil.\nIf george dislikes alice, then alice is hungry.\nIf george is a friend of alice and george is an enemy of dave and carol is an enemy of alice, then george is an enemy of eve.\n\nAnd the following facts:\ngeorge owns phone.\nfrank owns ball.\ngeorge owns phone.\ngeorge likes alice.\nfrank is a sibling of alice.\nalice dislikes carol.\nbob is a sibling of carol.\nalice is a friend of bob.\ngeorge is a sibling of bob.\nfrank is a sibling of bob.\nbob likes ball.\nbob dislikes car.\neve dislikes george.\ndave is an enemy of eve.\nalice is a sibling of eve.\neve likes apple.\n\nQUESTION:\nIs alice is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "wet(car) :- owns(george,phone).\nhungry(carol) :- wet(car).\ntall(carol) :- sibling(alice,dave).\nlikes(eve,car) :- small(book), owns(bob,car).\ntall(dave) :- wet(pencil), dislikes(alice,carol).\nenemy(bob,alice) :- enemy(alice,carol).\nlikes(carol,pencil) :- dislikes(bob,alice), sad(alice).\nhungry(alice) :- dislikes(george,alice).\nenemy(george,eve) :- friend(george,alice), enemy(george,dave), enemy(carol,alice).\nowns(george,phone).\nowns(frank,ball).\nowns(george,phone).\nlikes(george,alice).\nsibling(frank,alice).\ndislikes(alice,carol).\nsibling(bob,carol).\nfriend(alice,bob).\nsibling(george,bob).\nsibling(frank,bob).\nlikes(bob,ball).\ndislikes(bob,car).\ndislikes(eve,george).\nenemy(dave,eve).\nsibling(alice,eve).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf george owns phone, then car is wet.\nIf car is wet, then carol is hungry.\nIf alice is a sibling of dave, then carol is tall.\nIf book is small and bob owns car, then eve likes car.\nIf pencil is wet and alice dislikes carol, then dave is tall.\nIf alice is an enemy of carol, then bob is an enemy of alice.\nIf bob dislikes alice and alice is sad, then carol likes pencil.\nIf george dislikes alice, then alice is hungry.\nIf george is a friend of alice and george is an enemy of dave and carol is an enemy of alice, then george is an enemy of eve.\n\nAnd the following facts:\ngeorge owns phone.\nfrank owns ball.\ngeorge owns phone.\ngeorge likes alice.\nfrank is a sibling of alice.\nalice dislikes carol.\nbob is a sibling of carol.\nalice is a friend of bob.\ngeorge is a sibling of bob.\nfrank is a sibling of bob.\nbob likes ball.\nbob dislikes car.\neve dislikes george.\ndave is an enemy of eve.\nalice is a sibling of eve.\neve likes apple.\n\nQUESTION:\nIs eve is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,phone).",
    "c": "wet(car) :- owns(george,phone).\nhungry(carol) :- wet(car).\ntall(carol) :- sibling(alice,dave).\nlikes(eve,car) :- small(book), owns(bob,car).\ntall(dave) :- wet(pencil), dislikes(alice,carol).\nenemy(bob,alice) :- enemy(alice,carol).\nlikes(carol,pencil) :- dislikes(bob,alice), sad(alice).\nhungry(alice) :- dislikes(george,alice).\nenemy(george,eve) :- friend(george,alice), enemy(george,dave), enemy(carol,alice).\nowns(frank,ball).\nlikes(george,alice).\nsibling(frank,alice).\ndislikes(alice,carol).\nsibling(bob,carol).\nfriend(alice,bob).\nsibling(george,bob).\nsibling(frank,bob).\nlikes(bob,ball).\ndislikes(bob,car).\ndislikes(eve,george).\nenemy(dave,eve).\nsibling(alice,eve).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf george owns phone, then car is wet.\nIf car is wet, then carol is hungry.\nIf alice is a sibling of dave, then carol is tall.\nIf book is small and bob owns car, then eve likes car.\nIf pencil is wet and alice dislikes carol, then dave is tall.\nIf alice is an enemy of carol, then bob is an enemy of alice.\nIf bob dislikes alice and alice is sad, then carol likes pencil.\nIf george dislikes alice, then alice is hungry.\nIf george is a friend of alice and george is an enemy of dave and carol is an enemy of alice, then george is an enemy of eve.\n\nAnd the following facts:\ngeorge owns phone.\nfrank owns ball.\ngeorge owns phone.\ngeorge likes alice.\nfrank is a sibling of alice.\nalice dislikes carol.\nbob is a sibling of carol.\nalice is a friend of bob.\ngeorge is a sibling of bob.\nfrank is a sibling of bob.\nbob likes ball.\nbob dislikes car.\neve dislikes george.\ndave is an enemy of eve.\nalice is a sibling of eve.\neve likes apple.\n\nOBSERVATION: carol is hungry is true.\n\nQUESTION:\nCould george owns phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,car).",
    "c": "wet(car) :- owns(george,phone).\nhungry(carol) :- wet(car).\ntall(carol) :- sibling(alice,dave).\nlikes(eve,car) :- small(book), owns(bob,car).\ntall(dave) :- wet(pencil), dislikes(alice,carol).\nenemy(bob,alice) :- enemy(alice,carol).\nlikes(carol,pencil) :- dislikes(bob,alice), sad(alice).\nhungry(alice) :- dislikes(george,alice).\nenemy(george,eve) :- friend(george,alice), enemy(george,dave), enemy(carol,alice).\nowns(george,phone).\nowns(frank,ball).\nowns(george,phone).\nlikes(george,alice).\nsibling(frank,alice).\ndislikes(alice,carol).\nsibling(bob,carol).\nfriend(alice,bob).\nsibling(george,bob).\nsibling(frank,bob).\nlikes(bob,ball).\ndislikes(eve,george).\nenemy(dave,eve).\nsibling(alice,eve).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf george owns phone, then car is wet.\nIf car is wet, then carol is hungry.\nIf alice is a sibling of dave, then carol is tall.\nIf book is small and bob owns car, then eve likes car.\nIf pencil is wet and alice dislikes carol, then dave is tall.\nIf alice is an enemy of carol, then bob is an enemy of alice.\nIf bob dislikes alice and alice is sad, then carol likes pencil.\nIf george dislikes alice, then alice is hungry.\nIf george is a friend of alice and george is an enemy of dave and carol is an enemy of alice, then george is an enemy of eve.\n\nAnd the following facts:\ngeorge owns phone.\nfrank owns ball.\ngeorge owns phone.\ngeorge likes alice.\nfrank is a sibling of alice.\nalice dislikes carol.\nbob is a sibling of carol.\nalice is a friend of bob.\ngeorge is a sibling of bob.\nfrank is a sibling of bob.\nbob likes ball.\nbob dislikes car.\neve dislikes george.\ndave is an enemy of eve.\nalice is a sibling of eve.\neve likes apple.\n\nOBSERVATION: carol is hungry is true.\n\nQUESTION:\nCould bob dislikes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,apple).",
    "c": "wet(car) :- owns(george,phone).\nhungry(carol) :- wet(car).\ntall(carol) :- sibling(alice,dave).\nlikes(eve,car) :- small(book), owns(bob,car).\ntall(dave) :- wet(pencil), dislikes(alice,carol).\nenemy(bob,alice) :- enemy(alice,carol).\nlikes(carol,pencil) :- dislikes(bob,alice), sad(alice).\nhungry(alice) :- dislikes(george,alice).\nenemy(george,eve) :- friend(george,alice), enemy(george,dave), enemy(carol,alice).\nowns(george,phone).\nowns(frank,ball).\nowns(george,phone).\nlikes(george,alice).\nsibling(frank,alice).\ndislikes(alice,carol).\nsibling(bob,carol).\nfriend(alice,bob).\nsibling(george,bob).\nsibling(frank,bob).\nlikes(bob,ball).\ndislikes(bob,car).\ndislikes(eve,george).\nenemy(dave,eve).\nsibling(alice,eve).",
    "natural language": "You are given the following rules:\nIf george owns phone, then car is wet.\nIf car is wet, then carol is hungry.\nIf alice is a sibling of dave, then carol is tall.\nIf book is small and bob owns car, then eve likes car.\nIf pencil is wet and alice dislikes carol, then dave is tall.\nIf alice is an enemy of carol, then bob is an enemy of alice.\nIf bob dislikes alice and alice is sad, then carol likes pencil.\nIf george dislikes alice, then alice is hungry.\nIf george is a friend of alice and george is an enemy of dave and carol is an enemy of alice, then george is an enemy of eve.\n\nAnd the following facts:\ngeorge owns phone.\nfrank owns ball.\ngeorge owns phone.\ngeorge likes alice.\nfrank is a sibling of alice.\nalice dislikes carol.\nbob is a sibling of carol.\nalice is a friend of bob.\ngeorge is a sibling of bob.\nfrank is a sibling of bob.\nbob likes ball.\nbob dislikes car.\neve dislikes george.\ndave is an enemy of eve.\nalice is a sibling of eve.\neve likes apple.\n\nOBSERVATION: carol is hungry is true.\n\nQUESTION:\nCould eve likes apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,dave).",
    "c": "hot :- tall(frank).\nwet(pencil) :- hot.\nsunny :- wet(pencil).\nparent(bob,frank) :- sunny.\nhungry(dave) :- small(pencil).\nhungry(frank) :- sad(george).\nsunny :- hot, likes(carol,ball), sunny.\nwet(ball) :- hungry(dave), wet(apple).\nbig(apple) :- hot, hungry(frank).\ntall(frank).\nlikes(frank,carol).\nparent(george,carol).\nparent(dave,frank).\nlikes(bob,ball).\nlikes(frank,george).\nlikes(alice,car).\nparent(carol,george).\nlikes(frank,apple).\nlikes(carol,dave).\nparent(george,bob).\nhungry(frank).\nlikes(george,apple).\nlikes(george,frank).\nlikes(eve,dave).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is tall, then it is hot.\nIf it is hot, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then bob is a parent of frank.\nIf pencil is small, then dave is hungry.\nIf george is sad, then frank is hungry.\nIf it is hot and carol likes ball and it is sunny, then it is sunny.\nIf dave is hungry and apple is wet, then ball is wet.\nIf it is hot and frank is hungry, then apple is big.\n\nAnd the following facts:\nfrank is tall.\nfrank likes carol.\ngeorge is a parent of carol.\ndave is a parent of frank.\nbob likes ball.\nfrank likes george.\nalice likes car.\ncarol is a parent of george.\nfrank likes apple.\ncarol likes dave.\ngeorge is a parent of bob.\nfrank is hungry.\ngeorge likes apple.\ngeorge likes frank.\neve likes dave.\neve likes apple.\n\nQUESTION:\nIs carol likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,dave).",
    "c": "hot :- tall(frank).\nwet(pencil) :- hot.\nsunny :- wet(pencil).\nparent(bob,frank) :- sunny.\nhungry(dave) :- small(pencil).\nhungry(frank) :- sad(george).\nsunny :- hot, likes(carol,ball), sunny.\nwet(ball) :- hungry(dave), wet(apple).\nbig(apple) :- hot, hungry(frank).\ntall(frank).\nlikes(frank,carol).\nparent(george,carol).\nparent(dave,frank).\nlikes(bob,ball).\nlikes(frank,george).\nlikes(alice,car).\nparent(carol,george).\nlikes(frank,apple).\nlikes(carol,dave).\nparent(george,bob).\nhungry(frank).\nlikes(george,apple).\nlikes(george,frank).\nlikes(eve,dave).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is tall, then it is hot.\nIf it is hot, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then bob is a parent of frank.\nIf pencil is small, then dave is hungry.\nIf george is sad, then frank is hungry.\nIf it is hot and carol likes ball and it is sunny, then it is sunny.\nIf dave is hungry and apple is wet, then ball is wet.\nIf it is hot and frank is hungry, then apple is big.\n\nAnd the following facts:\nfrank is tall.\nfrank likes carol.\ngeorge is a parent of carol.\ndave is a parent of frank.\nbob likes ball.\nfrank likes george.\nalice likes car.\ncarol is a parent of george.\nfrank likes apple.\ncarol likes dave.\ngeorge is a parent of bob.\nfrank is hungry.\ngeorge likes apple.\ngeorge likes frank.\neve likes dave.\neve likes apple.\n\nQUESTION:\nIs eve likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "hot :- tall(frank).\nwet(pencil) :- hot.\nsunny :- wet(pencil).\nparent(bob,frank) :- sunny.\nhungry(dave) :- small(pencil).\nhungry(frank) :- sad(george).\nsunny :- hot, likes(carol,ball), sunny.\nwet(ball) :- hungry(dave), wet(apple).\nbig(apple) :- hot, hungry(frank).\ntall(frank).\nlikes(frank,carol).\nparent(george,carol).\nparent(dave,frank).\nlikes(bob,ball).\nlikes(frank,george).\nlikes(alice,car).\nparent(carol,george).\nlikes(frank,apple).\nlikes(carol,dave).\nparent(george,bob).\nhungry(frank).\nlikes(george,apple).\nlikes(george,frank).\nlikes(eve,dave).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is tall, then it is hot.\nIf it is hot, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then bob is a parent of frank.\nIf pencil is small, then dave is hungry.\nIf george is sad, then frank is hungry.\nIf it is hot and carol likes ball and it is sunny, then it is sunny.\nIf dave is hungry and apple is wet, then ball is wet.\nIf it is hot and frank is hungry, then apple is big.\n\nAnd the following facts:\nfrank is tall.\nfrank likes carol.\ngeorge is a parent of carol.\ndave is a parent of frank.\nbob likes ball.\nfrank likes george.\nalice likes car.\ncarol is a parent of george.\nfrank likes apple.\ncarol likes dave.\ngeorge is a parent of bob.\nfrank is hungry.\ngeorge likes apple.\ngeorge likes frank.\neve likes dave.\neve likes apple.\n\nQUESTION:\nIs frank is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,george).",
    "c": "hot :- tall(frank).\nwet(pencil) :- hot.\nsunny :- wet(pencil).\nparent(bob,frank) :- sunny.\nhungry(dave) :- small(pencil).\nhungry(frank) :- sad(george).\nsunny :- hot, likes(carol,ball), sunny.\nwet(ball) :- hungry(dave), wet(apple).\nbig(apple) :- hot, hungry(frank).\ntall(frank).\nlikes(frank,carol).\nparent(george,carol).\nparent(dave,frank).\nlikes(bob,ball).\nlikes(frank,george).\nlikes(alice,car).\nparent(carol,george).\nlikes(frank,apple).\nlikes(carol,dave).\nparent(george,bob).\nhungry(frank).\nlikes(george,apple).\nlikes(george,frank).\nlikes(eve,dave).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is tall, then it is hot.\nIf it is hot, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then bob is a parent of frank.\nIf pencil is small, then dave is hungry.\nIf george is sad, then frank is hungry.\nIf it is hot and carol likes ball and it is sunny, then it is sunny.\nIf dave is hungry and apple is wet, then ball is wet.\nIf it is hot and frank is hungry, then apple is big.\n\nAnd the following facts:\nfrank is tall.\nfrank likes carol.\ngeorge is a parent of carol.\ndave is a parent of frank.\nbob likes ball.\nfrank likes george.\nalice likes car.\ncarol is a parent of george.\nfrank likes apple.\ncarol likes dave.\ngeorge is a parent of bob.\nfrank is hungry.\ngeorge likes apple.\ngeorge likes frank.\neve likes dave.\neve likes apple.\n\nQUESTION:\nIs dave likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "hot :- tall(frank).\nwet(pencil) :- hot.\nsunny :- wet(pencil).\nparent(bob,frank) :- sunny.\nhungry(dave) :- small(pencil).\nhungry(frank) :- sad(george).\nsunny :- hot, likes(carol,ball), sunny.\nwet(ball) :- hungry(dave), wet(apple).\nbig(apple) :- hot, hungry(frank).\ntall(frank).\nlikes(frank,carol).\nparent(george,carol).\nparent(dave,frank).\nlikes(bob,ball).\nlikes(frank,george).\nlikes(alice,car).\nparent(carol,george).\nlikes(frank,apple).\nlikes(carol,dave).\nparent(george,bob).\nhungry(frank).\nlikes(george,apple).\nlikes(george,frank).\nlikes(eve,dave).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is tall, then it is hot.\nIf it is hot, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then bob is a parent of frank.\nIf pencil is small, then dave is hungry.\nIf george is sad, then frank is hungry.\nIf it is hot and carol likes ball and it is sunny, then it is sunny.\nIf dave is hungry and apple is wet, then ball is wet.\nIf it is hot and frank is hungry, then apple is big.\n\nAnd the following facts:\nfrank is tall.\nfrank likes carol.\ngeorge is a parent of carol.\ndave is a parent of frank.\nbob likes ball.\nfrank likes george.\nalice likes car.\ncarol is a parent of george.\nfrank likes apple.\ncarol likes dave.\ngeorge is a parent of bob.\nfrank is hungry.\ngeorge likes apple.\ngeorge likes frank.\neve likes dave.\neve likes apple.\n\nQUESTION:\nIs george is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "hot :- tall(frank).\nwet(pencil) :- hot.\nsunny :- wet(pencil).\nparent(bob,frank) :- sunny.\nhungry(dave) :- small(pencil).\nhungry(frank) :- sad(george).\nsunny :- hot, likes(carol,ball), sunny.\nwet(ball) :- hungry(dave), wet(apple).\nbig(apple) :- hot, hungry(frank).\nlikes(frank,carol).\nparent(george,carol).\nparent(dave,frank).\nlikes(bob,ball).\nlikes(frank,george).\nlikes(alice,car).\nparent(carol,george).\nlikes(frank,apple).\nlikes(carol,dave).\nparent(george,bob).\nhungry(frank).\nlikes(george,apple).\nlikes(george,frank).\nlikes(eve,dave).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf frank is tall, then it is hot.\nIf it is hot, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then bob is a parent of frank.\nIf pencil is small, then dave is hungry.\nIf george is sad, then frank is hungry.\nIf it is hot and carol likes ball and it is sunny, then it is sunny.\nIf dave is hungry and apple is wet, then ball is wet.\nIf it is hot and frank is hungry, then apple is big.\n\nAnd the following facts:\nfrank is tall.\nfrank likes carol.\ngeorge is a parent of carol.\ndave is a parent of frank.\nbob likes ball.\nfrank likes george.\nalice likes car.\ncarol is a parent of george.\nfrank likes apple.\ncarol likes dave.\ngeorge is a parent of bob.\nfrank is hungry.\ngeorge likes apple.\ngeorge likes frank.\neve likes dave.\neve likes apple.\n\nOBSERVATION: bob is a parent of frank is true.\n\nQUESTION:\nCould frank is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(george,bob).",
    "c": "hot :- tall(frank).\nwet(pencil) :- hot.\nsunny :- wet(pencil).\nparent(bob,frank) :- sunny.\nhungry(dave) :- small(pencil).\nhungry(frank) :- sad(george).\nsunny :- hot, likes(carol,ball), sunny.\nwet(ball) :- hungry(dave), wet(apple).\nbig(apple) :- hot, hungry(frank).\ntall(frank).\nlikes(frank,carol).\nparent(george,carol).\nparent(dave,frank).\nlikes(bob,ball).\nlikes(frank,george).\nlikes(alice,car).\nparent(carol,george).\nlikes(frank,apple).\nlikes(carol,dave).\nhungry(frank).\nlikes(george,apple).\nlikes(george,frank).\nlikes(eve,dave).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf frank is tall, then it is hot.\nIf it is hot, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then bob is a parent of frank.\nIf pencil is small, then dave is hungry.\nIf george is sad, then frank is hungry.\nIf it is hot and carol likes ball and it is sunny, then it is sunny.\nIf dave is hungry and apple is wet, then ball is wet.\nIf it is hot and frank is hungry, then apple is big.\n\nAnd the following facts:\nfrank is tall.\nfrank likes carol.\ngeorge is a parent of carol.\ndave is a parent of frank.\nbob likes ball.\nfrank likes george.\nalice likes car.\ncarol is a parent of george.\nfrank likes apple.\ncarol likes dave.\ngeorge is a parent of bob.\nfrank is hungry.\ngeorge likes apple.\ngeorge likes frank.\neve likes dave.\neve likes apple.\n\nOBSERVATION: bob is a parent of frank is true.\n\nQUESTION:\nCould george is a parent of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(frank,carol).",
    "c": "hot :- tall(frank).\nwet(pencil) :- hot.\nsunny :- wet(pencil).\nparent(bob,frank) :- sunny.\nhungry(dave) :- small(pencil).\nhungry(frank) :- sad(george).\nsunny :- hot, likes(carol,ball), sunny.\nwet(ball) :- hungry(dave), wet(apple).\nbig(apple) :- hot, hungry(frank).\ntall(frank).\nparent(george,carol).\nparent(dave,frank).\nlikes(bob,ball).\nlikes(frank,george).\nlikes(alice,car).\nparent(carol,george).\nlikes(frank,apple).\nlikes(carol,dave).\nparent(george,bob).\nhungry(frank).\nlikes(george,apple).\nlikes(george,frank).\nlikes(eve,dave).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf frank is tall, then it is hot.\nIf it is hot, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then bob is a parent of frank.\nIf pencil is small, then dave is hungry.\nIf george is sad, then frank is hungry.\nIf it is hot and carol likes ball and it is sunny, then it is sunny.\nIf dave is hungry and apple is wet, then ball is wet.\nIf it is hot and frank is hungry, then apple is big.\n\nAnd the following facts:\nfrank is tall.\nfrank likes carol.\ngeorge is a parent of carol.\ndave is a parent of frank.\nbob likes ball.\nfrank likes george.\nalice likes car.\ncarol is a parent of george.\nfrank likes apple.\ncarol likes dave.\ngeorge is a parent of bob.\nfrank is hungry.\ngeorge likes apple.\ngeorge likes frank.\neve likes dave.\neve likes apple.\n\nOBSERVATION: bob is a parent of frank is true.\n\nQUESTION:\nCould frank likes carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,apple).",
    "c": "tall(alice) :- enemy(alice,frank).\nwet(ball) :- tall(alice).\nsad(frank) :- wet(ball).\nowns(george,book) :- sad(frank).\ntall(dave) :- wet(pencil), likes(george,ball).\ntall(george) :- likes(frank,phone), friend(dave,carol).\nwet(apple) :- cold, sunny, owns(frank,ball).\nwet(car) :- sunny.\nsmall(book) :- sunny, cold.\nenemy(alice,frank).\ntall(alice).\nowns(alice,apple).\nenemy(carol,dave).\nowns(frank,car).\nowns(carol,ball).\nowns(bob,apple).\nowns(dave,apple).\nsunny.\nfriend(george,dave).\nlikes(george,eve).\nenemy(dave,george).\nfriend(dave,bob).\nlikes(carol,phone).\nfriend(alice,eve).\ntall(carol).",
    "natural language": "You are given the following information:\nIf alice is an enemy of frank, then alice is tall.\nIf alice is tall, then ball is wet.\nIf ball is wet, then frank is sad.\nIf frank is sad, then george owns book.\nIf pencil is wet and george likes ball, then dave is tall.\nIf frank likes phone and dave is a friend of carol, then george is tall.\nIf it is cold and it is sunny and frank owns ball, then apple is wet.\nIf it is sunny, then car is wet.\nIf it is sunny and it is cold, then book is small.\n\nAnd the following facts:\nalice is an enemy of frank.\nalice is tall.\nalice owns apple.\ncarol is an enemy of dave.\nfrank owns car.\ncarol owns ball.\nbob owns apple.\ndave owns apple.\nit is sunny.\ngeorge is a friend of dave.\ngeorge likes eve.\ndave is an enemy of george.\ndave is a friend of bob.\ncarol likes phone.\nalice is a friend of eve.\ncarol is tall.\n\nQUESTION:\nIs dave owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,eve).",
    "c": "tall(alice) :- enemy(alice,frank).\nwet(ball) :- tall(alice).\nsad(frank) :- wet(ball).\nowns(george,book) :- sad(frank).\ntall(dave) :- wet(pencil), likes(george,ball).\ntall(george) :- likes(frank,phone), friend(dave,carol).\nwet(apple) :- cold, sunny, owns(frank,ball).\nwet(car) :- sunny.\nsmall(book) :- sunny, cold.\nenemy(alice,frank).\ntall(alice).\nowns(alice,apple).\nenemy(carol,dave).\nowns(frank,car).\nowns(carol,ball).\nowns(bob,apple).\nowns(dave,apple).\nsunny.\nfriend(george,dave).\nlikes(george,eve).\nenemy(dave,george).\nfriend(dave,bob).\nlikes(carol,phone).\nfriend(alice,eve).\ntall(carol).",
    "natural language": "You are given the following information:\nIf alice is an enemy of frank, then alice is tall.\nIf alice is tall, then ball is wet.\nIf ball is wet, then frank is sad.\nIf frank is sad, then george owns book.\nIf pencil is wet and george likes ball, then dave is tall.\nIf frank likes phone and dave is a friend of carol, then george is tall.\nIf it is cold and it is sunny and frank owns ball, then apple is wet.\nIf it is sunny, then car is wet.\nIf it is sunny and it is cold, then book is small.\n\nAnd the following facts:\nalice is an enemy of frank.\nalice is tall.\nalice owns apple.\ncarol is an enemy of dave.\nfrank owns car.\ncarol owns ball.\nbob owns apple.\ndave owns apple.\nit is sunny.\ngeorge is a friend of dave.\ngeorge likes eve.\ndave is an enemy of george.\ndave is a friend of bob.\ncarol likes phone.\nalice is a friend of eve.\ncarol is tall.\n\nQUESTION:\nIs george likes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,phone).",
    "c": "tall(alice) :- enemy(alice,frank).\nwet(ball) :- tall(alice).\nsad(frank) :- wet(ball).\nowns(george,book) :- sad(frank).\ntall(dave) :- wet(pencil), likes(george,ball).\ntall(george) :- likes(frank,phone), friend(dave,carol).\nwet(apple) :- cold, sunny, owns(frank,ball).\nwet(car) :- sunny.\nsmall(book) :- sunny, cold.\nenemy(alice,frank).\ntall(alice).\nowns(alice,apple).\nenemy(carol,dave).\nowns(frank,car).\nowns(carol,ball).\nowns(bob,apple).\nowns(dave,apple).\nsunny.\nfriend(george,dave).\nlikes(george,eve).\nenemy(dave,george).\nfriend(dave,bob).\nlikes(carol,phone).\nfriend(alice,eve).\ntall(carol).",
    "natural language": "You are given the following information:\nIf alice is an enemy of frank, then alice is tall.\nIf alice is tall, then ball is wet.\nIf ball is wet, then frank is sad.\nIf frank is sad, then george owns book.\nIf pencil is wet and george likes ball, then dave is tall.\nIf frank likes phone and dave is a friend of carol, then george is tall.\nIf it is cold and it is sunny and frank owns ball, then apple is wet.\nIf it is sunny, then car is wet.\nIf it is sunny and it is cold, then book is small.\n\nAnd the following facts:\nalice is an enemy of frank.\nalice is tall.\nalice owns apple.\ncarol is an enemy of dave.\nfrank owns car.\ncarol owns ball.\nbob owns apple.\ndave owns apple.\nit is sunny.\ngeorge is a friend of dave.\ngeorge likes eve.\ndave is an enemy of george.\ndave is a friend of bob.\ncarol likes phone.\nalice is a friend of eve.\ncarol is tall.\n\nQUESTION:\nIs carol likes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,car).",
    "c": "tall(alice) :- enemy(alice,frank).\nwet(ball) :- tall(alice).\nsad(frank) :- wet(ball).\nowns(george,book) :- sad(frank).\ntall(dave) :- wet(pencil), likes(george,ball).\ntall(george) :- likes(frank,phone), friend(dave,carol).\nwet(apple) :- cold, sunny, owns(frank,ball).\nwet(car) :- sunny.\nsmall(book) :- sunny, cold.\nenemy(alice,frank).\ntall(alice).\nowns(alice,apple).\nenemy(carol,dave).\nowns(frank,car).\nowns(carol,ball).\nowns(bob,apple).\nowns(dave,apple).\nsunny.\nfriend(george,dave).\nlikes(george,eve).\nenemy(dave,george).\nfriend(dave,bob).\nlikes(carol,phone).\nfriend(alice,eve).\ntall(carol).",
    "natural language": "You are given the following information:\nIf alice is an enemy of frank, then alice is tall.\nIf alice is tall, then ball is wet.\nIf ball is wet, then frank is sad.\nIf frank is sad, then george owns book.\nIf pencil is wet and george likes ball, then dave is tall.\nIf frank likes phone and dave is a friend of carol, then george is tall.\nIf it is cold and it is sunny and frank owns ball, then apple is wet.\nIf it is sunny, then car is wet.\nIf it is sunny and it is cold, then book is small.\n\nAnd the following facts:\nalice is an enemy of frank.\nalice is tall.\nalice owns apple.\ncarol is an enemy of dave.\nfrank owns car.\ncarol owns ball.\nbob owns apple.\ndave owns apple.\nit is sunny.\ngeorge is a friend of dave.\ngeorge likes eve.\ndave is an enemy of george.\ndave is a friend of bob.\ncarol likes phone.\nalice is a friend of eve.\ncarol is tall.\n\nQUESTION:\nIs alice owns car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,eve).",
    "c": "tall(alice) :- enemy(alice,frank).\nwet(ball) :- tall(alice).\nsad(frank) :- wet(ball).\nowns(george,book) :- sad(frank).\ntall(dave) :- wet(pencil), likes(george,ball).\ntall(george) :- likes(frank,phone), friend(dave,carol).\nwet(apple) :- cold, sunny, owns(frank,ball).\nwet(car) :- sunny.\nsmall(book) :- sunny, cold.\nenemy(alice,frank).\ntall(alice).\nowns(alice,apple).\nenemy(carol,dave).\nowns(frank,car).\nowns(carol,ball).\nowns(bob,apple).\nowns(dave,apple).\nsunny.\nfriend(george,dave).\nlikes(george,eve).\nenemy(dave,george).\nfriend(dave,bob).\nlikes(carol,phone).\nfriend(alice,eve).\ntall(carol).",
    "natural language": "You are given the following information:\nIf alice is an enemy of frank, then alice is tall.\nIf alice is tall, then ball is wet.\nIf ball is wet, then frank is sad.\nIf frank is sad, then george owns book.\nIf pencil is wet and george likes ball, then dave is tall.\nIf frank likes phone and dave is a friend of carol, then george is tall.\nIf it is cold and it is sunny and frank owns ball, then apple is wet.\nIf it is sunny, then car is wet.\nIf it is sunny and it is cold, then book is small.\n\nAnd the following facts:\nalice is an enemy of frank.\nalice is tall.\nalice owns apple.\ncarol is an enemy of dave.\nfrank owns car.\ncarol owns ball.\nbob owns apple.\ndave owns apple.\nit is sunny.\ngeorge is a friend of dave.\ngeorge likes eve.\ndave is an enemy of george.\ndave is a friend of bob.\ncarol likes phone.\nalice is a friend of eve.\ncarol is tall.\n\nQUESTION:\nIs alice likes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(alice).",
    "c": "tall(alice) :- enemy(alice,frank).\nwet(ball) :- tall(alice).\nsad(frank) :- wet(ball).\nowns(george,book) :- sad(frank).\ntall(dave) :- wet(pencil), likes(george,ball).\ntall(george) :- likes(frank,phone), friend(dave,carol).\nwet(apple) :- cold, sunny, owns(frank,ball).\nwet(car) :- sunny.\nsmall(book) :- sunny, cold.\nenemy(alice,frank).\nowns(alice,apple).\nenemy(carol,dave).\nowns(frank,car).\nowns(carol,ball).\nowns(bob,apple).\nowns(dave,apple).\nsunny.\nfriend(george,dave).\nlikes(george,eve).\nenemy(dave,george).\nfriend(dave,bob).\nlikes(carol,phone).\nfriend(alice,eve).\ntall(carol).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of frank, then alice is tall.\nIf alice is tall, then ball is wet.\nIf ball is wet, then frank is sad.\nIf frank is sad, then george owns book.\nIf pencil is wet and george likes ball, then dave is tall.\nIf frank likes phone and dave is a friend of carol, then george is tall.\nIf it is cold and it is sunny and frank owns ball, then apple is wet.\nIf it is sunny, then car is wet.\nIf it is sunny and it is cold, then book is small.\n\nAnd the following facts:\nalice is an enemy of frank.\nalice is tall.\nalice owns apple.\ncarol is an enemy of dave.\nfrank owns car.\ncarol owns ball.\nbob owns apple.\ndave owns apple.\nit is sunny.\ngeorge is a friend of dave.\ngeorge likes eve.\ndave is an enemy of george.\ndave is a friend of bob.\ncarol likes phone.\nalice is a friend of eve.\ncarol is tall.\n\nOBSERVATION: george owns book is true.\n\nQUESTION:\nCould alice is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "tall(alice) :- enemy(alice,frank).\nwet(ball) :- tall(alice).\nsad(frank) :- wet(ball).\nowns(george,book) :- sad(frank).\ntall(dave) :- wet(pencil), likes(george,ball).\ntall(george) :- likes(frank,phone), friend(dave,carol).\nwet(apple) :- cold, sunny, owns(frank,ball).\nwet(car) :- sunny.\nsmall(book) :- sunny, cold.\nenemy(alice,frank).\ntall(alice).\nowns(alice,apple).\nenemy(carol,dave).\nowns(frank,car).\nowns(carol,ball).\nowns(bob,apple).\nowns(dave,apple).\nsunny.\nfriend(george,dave).\nlikes(george,eve).\nfriend(dave,bob).\nlikes(carol,phone).\nfriend(alice,eve).\ntall(carol).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of frank, then alice is tall.\nIf alice is tall, then ball is wet.\nIf ball is wet, then frank is sad.\nIf frank is sad, then george owns book.\nIf pencil is wet and george likes ball, then dave is tall.\nIf frank likes phone and dave is a friend of carol, then george is tall.\nIf it is cold and it is sunny and frank owns ball, then apple is wet.\nIf it is sunny, then car is wet.\nIf it is sunny and it is cold, then book is small.\n\nAnd the following facts:\nalice is an enemy of frank.\nalice is tall.\nalice owns apple.\ncarol is an enemy of dave.\nfrank owns car.\ncarol owns ball.\nbob owns apple.\ndave owns apple.\nit is sunny.\ngeorge is a friend of dave.\ngeorge likes eve.\ndave is an enemy of george.\ndave is a friend of bob.\ncarol likes phone.\nalice is a friend of eve.\ncarol is tall.\n\nOBSERVATION: george owns book is true.\n\nQUESTION:\nCould dave is an enemy of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(bob,apple).",
    "c": "tall(alice) :- enemy(alice,frank).\nwet(ball) :- tall(alice).\nsad(frank) :- wet(ball).\nowns(george,book) :- sad(frank).\ntall(dave) :- wet(pencil), likes(george,ball).\ntall(george) :- likes(frank,phone), friend(dave,carol).\nwet(apple) :- cold, sunny, owns(frank,ball).\nwet(car) :- sunny.\nsmall(book) :- sunny, cold.\nenemy(alice,frank).\ntall(alice).\nowns(alice,apple).\nenemy(carol,dave).\nowns(frank,car).\nowns(carol,ball).\nowns(dave,apple).\nsunny.\nfriend(george,dave).\nlikes(george,eve).\nenemy(dave,george).\nfriend(dave,bob).\nlikes(carol,phone).\nfriend(alice,eve).\ntall(carol).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of frank, then alice is tall.\nIf alice is tall, then ball is wet.\nIf ball is wet, then frank is sad.\nIf frank is sad, then george owns book.\nIf pencil is wet and george likes ball, then dave is tall.\nIf frank likes phone and dave is a friend of carol, then george is tall.\nIf it is cold and it is sunny and frank owns ball, then apple is wet.\nIf it is sunny, then car is wet.\nIf it is sunny and it is cold, then book is small.\n\nAnd the following facts:\nalice is an enemy of frank.\nalice is tall.\nalice owns apple.\ncarol is an enemy of dave.\nfrank owns car.\ncarol owns ball.\nbob owns apple.\ndave owns apple.\nit is sunny.\ngeorge is a friend of dave.\ngeorge likes eve.\ndave is an enemy of george.\ndave is a friend of bob.\ncarol likes phone.\nalice is a friend of eve.\ncarol is tall.\n\nOBSERVATION: george owns book is true.\n\nQUESTION:\nCould bob owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(dave,dave).",
    "c": "big(pencil) :- tall(eve).\nsunny :- big(pencil).\nlikes(alice,car) :- sunny.\nhot :- likes(alice,car).\nparent(dave,dave) :- hot.\nenemy(eve,george) :- parent(dave,dave).\nsmall(car) :- big(pencil), cold, small(book).\nbig(apple) :- happy(carol), wet(car), big(apple).\nwet(car) :- likes(frank,carol).\ntall(eve).\nlikes(frank,eve).\nlikes(frank,pencil).\nlikes(eve,book).\nenemy(frank,bob).\nlikes(eve,alice).\nparent(carol,alice).\nhappy(george).\nlikes(bob,george).\nparent(eve,alice).\nlikes(dave,car).\nlikes(george,apple).\nenemy(alice,george).\nparent(eve,frank).\nenemy(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf eve is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then alice likes car.\nIf alice likes car, then it is hot.\nIf it is hot, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is an enemy of george.\nIf pencil is big and it is cold and book is small, then car is small.\nIf carol is happy and car is wet and apple is big, then apple is big.\nIf frank likes carol, then car is wet.\n\nAnd the following facts:\neve is tall.\nfrank likes eve.\nfrank likes pencil.\neve likes book.\nfrank is an enemy of bob.\neve likes alice.\ncarol is a parent of alice.\ngeorge is happy.\nbob likes george.\neve is a parent of alice.\ndave likes car.\ngeorge likes apple.\nalice is an enemy of george.\neve is a parent of frank.\nalice is an enemy of dave.\ncarol likes book.\n\nQUESTION:\nIs dave is a parent of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,car).",
    "c": "big(pencil) :- tall(eve).\nsunny :- big(pencil).\nlikes(alice,car) :- sunny.\nhot :- likes(alice,car).\nparent(dave,dave) :- hot.\nenemy(eve,george) :- parent(dave,dave).\nsmall(car) :- big(pencil), cold, small(book).\nbig(apple) :- happy(carol), wet(car), big(apple).\nwet(car) :- likes(frank,carol).\ntall(eve).\nlikes(frank,eve).\nlikes(frank,pencil).\nlikes(eve,book).\nenemy(frank,bob).\nlikes(eve,alice).\nparent(carol,alice).\nhappy(george).\nlikes(bob,george).\nparent(eve,alice).\nlikes(dave,car).\nlikes(george,apple).\nenemy(alice,george).\nparent(eve,frank).\nenemy(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf eve is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then alice likes car.\nIf alice likes car, then it is hot.\nIf it is hot, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is an enemy of george.\nIf pencil is big and it is cold and book is small, then car is small.\nIf carol is happy and car is wet and apple is big, then apple is big.\nIf frank likes carol, then car is wet.\n\nAnd the following facts:\neve is tall.\nfrank likes eve.\nfrank likes pencil.\neve likes book.\nfrank is an enemy of bob.\neve likes alice.\ncarol is a parent of alice.\ngeorge is happy.\nbob likes george.\neve is a parent of alice.\ndave likes car.\ngeorge likes apple.\nalice is an enemy of george.\neve is a parent of frank.\nalice is an enemy of dave.\ncarol likes book.\n\nQUESTION:\nIs dave likes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,pencil).",
    "c": "big(pencil) :- tall(eve).\nsunny :- big(pencil).\nlikes(alice,car) :- sunny.\nhot :- likes(alice,car).\nparent(dave,dave) :- hot.\nenemy(eve,george) :- parent(dave,dave).\nsmall(car) :- big(pencil), cold, small(book).\nbig(apple) :- happy(carol), wet(car), big(apple).\nwet(car) :- likes(frank,carol).\ntall(eve).\nlikes(frank,eve).\nlikes(frank,pencil).\nlikes(eve,book).\nenemy(frank,bob).\nlikes(eve,alice).\nparent(carol,alice).\nhappy(george).\nlikes(bob,george).\nparent(eve,alice).\nlikes(dave,car).\nlikes(george,apple).\nenemy(alice,george).\nparent(eve,frank).\nenemy(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf eve is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then alice likes car.\nIf alice likes car, then it is hot.\nIf it is hot, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is an enemy of george.\nIf pencil is big and it is cold and book is small, then car is small.\nIf carol is happy and car is wet and apple is big, then apple is big.\nIf frank likes carol, then car is wet.\n\nAnd the following facts:\neve is tall.\nfrank likes eve.\nfrank likes pencil.\neve likes book.\nfrank is an enemy of bob.\neve likes alice.\ncarol is a parent of alice.\ngeorge is happy.\nbob likes george.\neve is a parent of alice.\ndave likes car.\ngeorge likes apple.\nalice is an enemy of george.\neve is a parent of frank.\nalice is an enemy of dave.\ncarol likes book.\n\nQUESTION:\nIs frank likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "big(pencil) :- tall(eve).\nsunny :- big(pencil).\nlikes(alice,car) :- sunny.\nhot :- likes(alice,car).\nparent(dave,dave) :- hot.\nenemy(eve,george) :- parent(dave,dave).\nsmall(car) :- big(pencil), cold, small(book).\nbig(apple) :- happy(carol), wet(car), big(apple).\nwet(car) :- likes(frank,carol).\ntall(eve).\nlikes(frank,eve).\nlikes(frank,pencil).\nlikes(eve,book).\nenemy(frank,bob).\nlikes(eve,alice).\nparent(carol,alice).\nhappy(george).\nlikes(bob,george).\nparent(eve,alice).\nlikes(dave,car).\nlikes(george,apple).\nenemy(alice,george).\nparent(eve,frank).\nenemy(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf eve is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then alice likes car.\nIf alice likes car, then it is hot.\nIf it is hot, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is an enemy of george.\nIf pencil is big and it is cold and book is small, then car is small.\nIf carol is happy and car is wet and apple is big, then apple is big.\nIf frank likes carol, then car is wet.\n\nAnd the following facts:\neve is tall.\nfrank likes eve.\nfrank likes pencil.\neve likes book.\nfrank is an enemy of bob.\neve likes alice.\ncarol is a parent of alice.\ngeorge is happy.\nbob likes george.\neve is a parent of alice.\ndave likes car.\ngeorge likes apple.\nalice is an enemy of george.\neve is a parent of frank.\nalice is an enemy of dave.\ncarol likes book.\n\nQUESTION:\nIs dave is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,car).",
    "c": "big(pencil) :- tall(eve).\nsunny :- big(pencil).\nlikes(alice,car) :- sunny.\nhot :- likes(alice,car).\nparent(dave,dave) :- hot.\nenemy(eve,george) :- parent(dave,dave).\nsmall(car) :- big(pencil), cold, small(book).\nbig(apple) :- happy(carol), wet(car), big(apple).\nwet(car) :- likes(frank,carol).\ntall(eve).\nlikes(frank,eve).\nlikes(frank,pencil).\nlikes(eve,book).\nenemy(frank,bob).\nlikes(eve,alice).\nparent(carol,alice).\nhappy(george).\nlikes(bob,george).\nparent(eve,alice).\nlikes(dave,car).\nlikes(george,apple).\nenemy(alice,george).\nparent(eve,frank).\nenemy(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf eve is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then alice likes car.\nIf alice likes car, then it is hot.\nIf it is hot, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is an enemy of george.\nIf pencil is big and it is cold and book is small, then car is small.\nIf carol is happy and car is wet and apple is big, then apple is big.\nIf frank likes carol, then car is wet.\n\nAnd the following facts:\neve is tall.\nfrank likes eve.\nfrank likes pencil.\neve likes book.\nfrank is an enemy of bob.\neve likes alice.\ncarol is a parent of alice.\ngeorge is happy.\nbob likes george.\neve is a parent of alice.\ndave likes car.\ngeorge likes apple.\nalice is an enemy of george.\neve is a parent of frank.\nalice is an enemy of dave.\ncarol likes book.\n\nQUESTION:\nIs eve likes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(eve).",
    "c": "big(pencil) :- tall(eve).\nsunny :- big(pencil).\nlikes(alice,car) :- sunny.\nhot :- likes(alice,car).\nparent(dave,dave) :- hot.\nenemy(eve,george) :- parent(dave,dave).\nsmall(car) :- big(pencil), cold, small(book).\nbig(apple) :- happy(carol), wet(car), big(apple).\nwet(car) :- likes(frank,carol).\nlikes(frank,eve).\nlikes(frank,pencil).\nlikes(eve,book).\nenemy(frank,bob).\nlikes(eve,alice).\nparent(carol,alice).\nhappy(george).\nlikes(bob,george).\nparent(eve,alice).\nlikes(dave,car).\nlikes(george,apple).\nenemy(alice,george).\nparent(eve,frank).\nenemy(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf eve is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then alice likes car.\nIf alice likes car, then it is hot.\nIf it is hot, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is an enemy of george.\nIf pencil is big and it is cold and book is small, then car is small.\nIf carol is happy and car is wet and apple is big, then apple is big.\nIf frank likes carol, then car is wet.\n\nAnd the following facts:\neve is tall.\nfrank likes eve.\nfrank likes pencil.\neve likes book.\nfrank is an enemy of bob.\neve likes alice.\ncarol is a parent of alice.\ngeorge is happy.\nbob likes george.\neve is a parent of alice.\ndave likes car.\ngeorge likes apple.\nalice is an enemy of george.\neve is a parent of frank.\nalice is an enemy of dave.\ncarol likes book.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould eve is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,frank).",
    "c": "big(pencil) :- tall(eve).\nsunny :- big(pencil).\nlikes(alice,car) :- sunny.\nhot :- likes(alice,car).\nparent(dave,dave) :- hot.\nenemy(eve,george) :- parent(dave,dave).\nsmall(car) :- big(pencil), cold, small(book).\nbig(apple) :- happy(carol), wet(car), big(apple).\nwet(car) :- likes(frank,carol).\ntall(eve).\nlikes(frank,eve).\nlikes(frank,pencil).\nlikes(eve,book).\nenemy(frank,bob).\nlikes(eve,alice).\nparent(carol,alice).\nhappy(george).\nlikes(bob,george).\nparent(eve,alice).\nlikes(dave,car).\nlikes(george,apple).\nenemy(alice,george).\nenemy(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf eve is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then alice likes car.\nIf alice likes car, then it is hot.\nIf it is hot, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is an enemy of george.\nIf pencil is big and it is cold and book is small, then car is small.\nIf carol is happy and car is wet and apple is big, then apple is big.\nIf frank likes carol, then car is wet.\n\nAnd the following facts:\neve is tall.\nfrank likes eve.\nfrank likes pencil.\neve likes book.\nfrank is an enemy of bob.\neve likes alice.\ncarol is a parent of alice.\ngeorge is happy.\nbob likes george.\neve is a parent of alice.\ndave likes car.\ngeorge likes apple.\nalice is an enemy of george.\neve is a parent of frank.\nalice is an enemy of dave.\ncarol likes book.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould eve is a parent of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,alice).",
    "c": "big(pencil) :- tall(eve).\nsunny :- big(pencil).\nlikes(alice,car) :- sunny.\nhot :- likes(alice,car).\nparent(dave,dave) :- hot.\nenemy(eve,george) :- parent(dave,dave).\nsmall(car) :- big(pencil), cold, small(book).\nbig(apple) :- happy(carol), wet(car), big(apple).\nwet(car) :- likes(frank,carol).\ntall(eve).\nlikes(frank,eve).\nlikes(frank,pencil).\nlikes(eve,book).\nenemy(frank,bob).\nparent(carol,alice).\nhappy(george).\nlikes(bob,george).\nparent(eve,alice).\nlikes(dave,car).\nlikes(george,apple).\nenemy(alice,george).\nparent(eve,frank).\nenemy(alice,dave).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf eve is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then alice likes car.\nIf alice likes car, then it is hot.\nIf it is hot, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is an enemy of george.\nIf pencil is big and it is cold and book is small, then car is small.\nIf carol is happy and car is wet and apple is big, then apple is big.\nIf frank likes carol, then car is wet.\n\nAnd the following facts:\neve is tall.\nfrank likes eve.\nfrank likes pencil.\neve likes book.\nfrank is an enemy of bob.\neve likes alice.\ncarol is a parent of alice.\ngeorge is happy.\nbob likes george.\neve is a parent of alice.\ndave likes car.\ngeorge likes apple.\nalice is an enemy of george.\neve is a parent of frank.\nalice is an enemy of dave.\ncarol likes book.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould eve likes alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "friend(george,carol) :- owns(george,car).\nsunny :- friend(george,carol).\nwet(apple) :- sunny.\nparent(carol,george) :- wet(apple).\nparent(dave,alice) :- parent(carol,george).\nenemy(eve,eve) :- parent(dave,alice).\ntall(george) :- sibling(george,bob), big(car), likes(george,bob).\nhungry(dave) :- sad(george).\nsad(bob) :- wet(ball).\nowns(george,car).\nlikes(frank,apple).\nlikes(carol,dave).\nsibling(carol,dave).\nsibling(frank,bob).\nsunny.\nowns(dave,ball).\nfriend(frank,george).\nowns(eve,apple).\nlikes(carol,bob).\nparent(george,frank).\nsibling(carol,george).\nowns(carol,book).\nlikes(dave,frank).\nfriend(bob,dave).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then george is a friend of carol.\nIf george is a friend of carol, then it is sunny.\nIf it is sunny, then apple is wet.\nIf apple is wet, then carol is a parent of george.\nIf carol is a parent of george, then dave is a parent of alice.\nIf dave is a parent of alice, then eve is an enemy of eve.\nIf george is a sibling of bob and car is big and george likes bob, then george is tall.\nIf george is sad, then dave is hungry.\nIf ball is wet, then bob is sad.\n\nAnd the following facts:\ngeorge owns car.\nfrank likes apple.\ncarol likes dave.\ncarol is a sibling of dave.\nfrank is a sibling of bob.\nit is sunny.\ndave owns ball.\nfrank is a friend of george.\neve owns apple.\ncarol likes bob.\ngeorge is a parent of frank.\ncarol is a sibling of george.\ncarol owns book.\ndave likes frank.\nbob is a friend of dave.\ngeorge is a parent of carol.\n\nQUESTION:\nIs carol is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "friend(george,carol) :- owns(george,car).\nsunny :- friend(george,carol).\nwet(apple) :- sunny.\nparent(carol,george) :- wet(apple).\nparent(dave,alice) :- parent(carol,george).\nenemy(eve,eve) :- parent(dave,alice).\ntall(george) :- sibling(george,bob), big(car), likes(george,bob).\nhungry(dave) :- sad(george).\nsad(bob) :- wet(ball).\nowns(george,car).\nlikes(frank,apple).\nlikes(carol,dave).\nsibling(carol,dave).\nsibling(frank,bob).\nsunny.\nowns(dave,ball).\nfriend(frank,george).\nowns(eve,apple).\nlikes(carol,bob).\nparent(george,frank).\nsibling(carol,george).\nowns(carol,book).\nlikes(dave,frank).\nfriend(bob,dave).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then george is a friend of carol.\nIf george is a friend of carol, then it is sunny.\nIf it is sunny, then apple is wet.\nIf apple is wet, then carol is a parent of george.\nIf carol is a parent of george, then dave is a parent of alice.\nIf dave is a parent of alice, then eve is an enemy of eve.\nIf george is a sibling of bob and car is big and george likes bob, then george is tall.\nIf george is sad, then dave is hungry.\nIf ball is wet, then bob is sad.\n\nAnd the following facts:\ngeorge owns car.\nfrank likes apple.\ncarol likes dave.\ncarol is a sibling of dave.\nfrank is a sibling of bob.\nit is sunny.\ndave owns ball.\nfrank is a friend of george.\neve owns apple.\ncarol likes bob.\ngeorge is a parent of frank.\ncarol is a sibling of george.\ncarol owns book.\ndave likes frank.\nbob is a friend of dave.\ngeorge is a parent of carol.\n\nQUESTION:\nIs dave is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,carol).",
    "c": "friend(george,carol) :- owns(george,car).\nsunny :- friend(george,carol).\nwet(apple) :- sunny.\nparent(carol,george) :- wet(apple).\nparent(dave,alice) :- parent(carol,george).\nenemy(eve,eve) :- parent(dave,alice).\ntall(george) :- sibling(george,bob), big(car), likes(george,bob).\nhungry(dave) :- sad(george).\nsad(bob) :- wet(ball).\nowns(george,car).\nlikes(frank,apple).\nlikes(carol,dave).\nsibling(carol,dave).\nsibling(frank,bob).\nsunny.\nowns(dave,ball).\nfriend(frank,george).\nowns(eve,apple).\nlikes(carol,bob).\nparent(george,frank).\nsibling(carol,george).\nowns(carol,book).\nlikes(dave,frank).\nfriend(bob,dave).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then george is a friend of carol.\nIf george is a friend of carol, then it is sunny.\nIf it is sunny, then apple is wet.\nIf apple is wet, then carol is a parent of george.\nIf carol is a parent of george, then dave is a parent of alice.\nIf dave is a parent of alice, then eve is an enemy of eve.\nIf george is a sibling of bob and car is big and george likes bob, then george is tall.\nIf george is sad, then dave is hungry.\nIf ball is wet, then bob is sad.\n\nAnd the following facts:\ngeorge owns car.\nfrank likes apple.\ncarol likes dave.\ncarol is a sibling of dave.\nfrank is a sibling of bob.\nit is sunny.\ndave owns ball.\nfrank is a friend of george.\neve owns apple.\ncarol likes bob.\ngeorge is a parent of frank.\ncarol is a sibling of george.\ncarol owns book.\ndave likes frank.\nbob is a friend of dave.\ngeorge is a parent of carol.\n\nQUESTION:\nIs george is a parent of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,book).",
    "c": "friend(george,carol) :- owns(george,car).\nsunny :- friend(george,carol).\nwet(apple) :- sunny.\nparent(carol,george) :- wet(apple).\nparent(dave,alice) :- parent(carol,george).\nenemy(eve,eve) :- parent(dave,alice).\ntall(george) :- sibling(george,bob), big(car), likes(george,bob).\nhungry(dave) :- sad(george).\nsad(bob) :- wet(ball).\nowns(george,car).\nlikes(frank,apple).\nlikes(carol,dave).\nsibling(carol,dave).\nsibling(frank,bob).\nsunny.\nowns(dave,ball).\nfriend(frank,george).\nowns(eve,apple).\nlikes(carol,bob).\nparent(george,frank).\nsibling(carol,george).\nowns(carol,book).\nlikes(dave,frank).\nfriend(bob,dave).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then george is a friend of carol.\nIf george is a friend of carol, then it is sunny.\nIf it is sunny, then apple is wet.\nIf apple is wet, then carol is a parent of george.\nIf carol is a parent of george, then dave is a parent of alice.\nIf dave is a parent of alice, then eve is an enemy of eve.\nIf george is a sibling of bob and car is big and george likes bob, then george is tall.\nIf george is sad, then dave is hungry.\nIf ball is wet, then bob is sad.\n\nAnd the following facts:\ngeorge owns car.\nfrank likes apple.\ncarol likes dave.\ncarol is a sibling of dave.\nfrank is a sibling of bob.\nit is sunny.\ndave owns ball.\nfrank is a friend of george.\neve owns apple.\ncarol likes bob.\ngeorge is a parent of frank.\ncarol is a sibling of george.\ncarol owns book.\ndave likes frank.\nbob is a friend of dave.\ngeorge is a parent of carol.\n\nQUESTION:\nIs dave likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,car).",
    "c": "friend(george,carol) :- owns(george,car).\nsunny :- friend(george,carol).\nwet(apple) :- sunny.\nparent(carol,george) :- wet(apple).\nparent(dave,alice) :- parent(carol,george).\nenemy(eve,eve) :- parent(dave,alice).\ntall(george) :- sibling(george,bob), big(car), likes(george,bob).\nhungry(dave) :- sad(george).\nsad(bob) :- wet(ball).\nowns(george,car).\nlikes(frank,apple).\nlikes(carol,dave).\nsibling(carol,dave).\nsibling(frank,bob).\nsunny.\nowns(dave,ball).\nfriend(frank,george).\nowns(eve,apple).\nlikes(carol,bob).\nparent(george,frank).\nsibling(carol,george).\nowns(carol,book).\nlikes(dave,frank).\nfriend(bob,dave).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then george is a friend of carol.\nIf george is a friend of carol, then it is sunny.\nIf it is sunny, then apple is wet.\nIf apple is wet, then carol is a parent of george.\nIf carol is a parent of george, then dave is a parent of alice.\nIf dave is a parent of alice, then eve is an enemy of eve.\nIf george is a sibling of bob and car is big and george likes bob, then george is tall.\nIf george is sad, then dave is hungry.\nIf ball is wet, then bob is sad.\n\nAnd the following facts:\ngeorge owns car.\nfrank likes apple.\ncarol likes dave.\ncarol is a sibling of dave.\nfrank is a sibling of bob.\nit is sunny.\ndave owns ball.\nfrank is a friend of george.\neve owns apple.\ncarol likes bob.\ngeorge is a parent of frank.\ncarol is a sibling of george.\ncarol owns book.\ndave likes frank.\nbob is a friend of dave.\ngeorge is a parent of carol.\n\nQUESTION:\nIs dave likes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "friend(george,carol) :- owns(george,car).\nsunny :- friend(george,carol).\nwet(apple) :- sunny.\nparent(carol,george) :- wet(apple).\nparent(dave,alice) :- parent(carol,george).\nenemy(eve,eve) :- parent(dave,alice).\ntall(george) :- sibling(george,bob), big(car), likes(george,bob).\nhungry(dave) :- sad(george).\nsad(bob) :- wet(ball).\nowns(george,car).\nlikes(frank,apple).\nlikes(carol,dave).\nsibling(carol,dave).\nsibling(frank,bob).\nowns(dave,ball).\nfriend(frank,george).\nowns(eve,apple).\nlikes(carol,bob).\nparent(george,frank).\nsibling(carol,george).\nowns(carol,book).\nlikes(dave,frank).\nfriend(bob,dave).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf george owns car, then george is a friend of carol.\nIf george is a friend of carol, then it is sunny.\nIf it is sunny, then apple is wet.\nIf apple is wet, then carol is a parent of george.\nIf carol is a parent of george, then dave is a parent of alice.\nIf dave is a parent of alice, then eve is an enemy of eve.\nIf george is a sibling of bob and car is big and george likes bob, then george is tall.\nIf george is sad, then dave is hungry.\nIf ball is wet, then bob is sad.\n\nAnd the following facts:\ngeorge owns car.\nfrank likes apple.\ncarol likes dave.\ncarol is a sibling of dave.\nfrank is a sibling of bob.\nit is sunny.\ndave owns ball.\nfrank is a friend of george.\neve owns apple.\ncarol likes bob.\ngeorge is a parent of frank.\ncarol is a sibling of george.\ncarol owns book.\ndave likes frank.\nbob is a friend of dave.\ngeorge is a parent of carol.\n\nOBSERVATION: eve is an enemy of eve is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(carol,dave).",
    "c": "friend(george,carol) :- owns(george,car).\nsunny :- friend(george,carol).\nwet(apple) :- sunny.\nparent(carol,george) :- wet(apple).\nparent(dave,alice) :- parent(carol,george).\nenemy(eve,eve) :- parent(dave,alice).\ntall(george) :- sibling(george,bob), big(car), likes(george,bob).\nhungry(dave) :- sad(george).\nsad(bob) :- wet(ball).\nowns(george,car).\nlikes(frank,apple).\nlikes(carol,dave).\nsibling(frank,bob).\nsunny.\nowns(dave,ball).\nfriend(frank,george).\nowns(eve,apple).\nlikes(carol,bob).\nparent(george,frank).\nsibling(carol,george).\nowns(carol,book).\nlikes(dave,frank).\nfriend(bob,dave).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf george owns car, then george is a friend of carol.\nIf george is a friend of carol, then it is sunny.\nIf it is sunny, then apple is wet.\nIf apple is wet, then carol is a parent of george.\nIf carol is a parent of george, then dave is a parent of alice.\nIf dave is a parent of alice, then eve is an enemy of eve.\nIf george is a sibling of bob and car is big and george likes bob, then george is tall.\nIf george is sad, then dave is hungry.\nIf ball is wet, then bob is sad.\n\nAnd the following facts:\ngeorge owns car.\nfrank likes apple.\ncarol likes dave.\ncarol is a sibling of dave.\nfrank is a sibling of bob.\nit is sunny.\ndave owns ball.\nfrank is a friend of george.\neve owns apple.\ncarol likes bob.\ngeorge is a parent of frank.\ncarol is a sibling of george.\ncarol owns book.\ndave likes frank.\nbob is a friend of dave.\ngeorge is a parent of carol.\n\nOBSERVATION: eve is an enemy of eve is true.\n\nQUESTION:\nCould carol is a sibling of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,bob).",
    "c": "friend(george,carol) :- owns(george,car).\nsunny :- friend(george,carol).\nwet(apple) :- sunny.\nparent(carol,george) :- wet(apple).\nparent(dave,alice) :- parent(carol,george).\nenemy(eve,eve) :- parent(dave,alice).\ntall(george) :- sibling(george,bob), big(car), likes(george,bob).\nhungry(dave) :- sad(george).\nsad(bob) :- wet(ball).\nowns(george,car).\nlikes(frank,apple).\nlikes(carol,dave).\nsibling(carol,dave).\nsibling(frank,bob).\nsunny.\nowns(dave,ball).\nfriend(frank,george).\nowns(eve,apple).\nparent(george,frank).\nsibling(carol,george).\nowns(carol,book).\nlikes(dave,frank).\nfriend(bob,dave).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf george owns car, then george is a friend of carol.\nIf george is a friend of carol, then it is sunny.\nIf it is sunny, then apple is wet.\nIf apple is wet, then carol is a parent of george.\nIf carol is a parent of george, then dave is a parent of alice.\nIf dave is a parent of alice, then eve is an enemy of eve.\nIf george is a sibling of bob and car is big and george likes bob, then george is tall.\nIf george is sad, then dave is hungry.\nIf ball is wet, then bob is sad.\n\nAnd the following facts:\ngeorge owns car.\nfrank likes apple.\ncarol likes dave.\ncarol is a sibling of dave.\nfrank is a sibling of bob.\nit is sunny.\ndave owns ball.\nfrank is a friend of george.\neve owns apple.\ncarol likes bob.\ngeorge is a parent of frank.\ncarol is a sibling of george.\ncarol owns book.\ndave likes frank.\nbob is a friend of dave.\ngeorge is a parent of carol.\n\nOBSERVATION: eve is an enemy of eve is true.\n\nQUESTION:\nCould carol likes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "happy(carol) :- happy(bob).\ncold :- happy(carol).\ntall(frank) :- cold.\nsibling(alice,frank) :- tall(frank).\nsmall(apple) :- sibling(alice,frank).\ncold :- small(apple).\nsmall(book) :- cold.\nparent(carol,dave) :- small(book).\nhot :- friend(alice,george), hot, big(apple).\nhappy(bob).\nfriend(carol,eve).\ncold.\nfriend(alice,bob).\nsibling(dave,george).\nparent(bob,carol).\nfriend(alice,frank).\nsibling(eve,bob).\nfriend(dave,bob).\nfriend(george,dave).\nsibling(dave,frank).\nhappy(alice).\nsibling(eve,frank).\nfriend(dave,alice).\nsibling(dave,eve).\nsibling(alice,carol).",
    "natural language": "You are given the following information:\nIf bob is happy, then carol is happy.\nIf carol is happy, then it is cold.\nIf it is cold, then frank is tall.\nIf frank is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then book is small.\nIf book is small, then carol is a parent of dave.\nIf alice is a friend of george and it is hot and apple is big, then it is hot.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of eve.\nit is cold.\nalice is a friend of bob.\ndave is a sibling of george.\nbob is a parent of carol.\nalice is a friend of frank.\neve is a sibling of bob.\ndave is a friend of bob.\ngeorge is a friend of dave.\ndave is a sibling of frank.\nalice is happy.\neve is a sibling of frank.\ndave is a friend of alice.\ndave is a sibling of eve.\nalice is a sibling of carol.\n\nQUESTION:\nIs bob is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(carol).",
    "c": "happy(carol) :- happy(bob).\ncold :- happy(carol).\ntall(frank) :- cold.\nsibling(alice,frank) :- tall(frank).\nsmall(apple) :- sibling(alice,frank).\ncold :- small(apple).\nsmall(book) :- cold.\nparent(carol,dave) :- small(book).\nhot :- friend(alice,george), hot, big(apple).\nhappy(bob).\nfriend(carol,eve).\ncold.\nfriend(alice,bob).\nsibling(dave,george).\nparent(bob,carol).\nfriend(alice,frank).\nsibling(eve,bob).\nfriend(dave,bob).\nfriend(george,dave).\nsibling(dave,frank).\nhappy(alice).\nsibling(eve,frank).\nfriend(dave,alice).\nsibling(dave,eve).\nsibling(alice,carol).",
    "natural language": "You are given the following information:\nIf bob is happy, then carol is happy.\nIf carol is happy, then it is cold.\nIf it is cold, then frank is tall.\nIf frank is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then book is small.\nIf book is small, then carol is a parent of dave.\nIf alice is a friend of george and it is hot and apple is big, then it is hot.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of eve.\nit is cold.\nalice is a friend of bob.\ndave is a sibling of george.\nbob is a parent of carol.\nalice is a friend of frank.\neve is a sibling of bob.\ndave is a friend of bob.\ngeorge is a friend of dave.\ndave is a sibling of frank.\nalice is happy.\neve is a sibling of frank.\ndave is a friend of alice.\ndave is a sibling of eve.\nalice is a sibling of carol.\n\nQUESTION:\nIs carol is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,bob).",
    "c": "happy(carol) :- happy(bob).\ncold :- happy(carol).\ntall(frank) :- cold.\nsibling(alice,frank) :- tall(frank).\nsmall(apple) :- sibling(alice,frank).\ncold :- small(apple).\nsmall(book) :- cold.\nparent(carol,dave) :- small(book).\nhot :- friend(alice,george), hot, big(apple).\nhappy(bob).\nfriend(carol,eve).\ncold.\nfriend(alice,bob).\nsibling(dave,george).\nparent(bob,carol).\nfriend(alice,frank).\nsibling(eve,bob).\nfriend(dave,bob).\nfriend(george,dave).\nsibling(dave,frank).\nhappy(alice).\nsibling(eve,frank).\nfriend(dave,alice).\nsibling(dave,eve).\nsibling(alice,carol).",
    "natural language": "You are given the following information:\nIf bob is happy, then carol is happy.\nIf carol is happy, then it is cold.\nIf it is cold, then frank is tall.\nIf frank is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then book is small.\nIf book is small, then carol is a parent of dave.\nIf alice is a friend of george and it is hot and apple is big, then it is hot.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of eve.\nit is cold.\nalice is a friend of bob.\ndave is a sibling of george.\nbob is a parent of carol.\nalice is a friend of frank.\neve is a sibling of bob.\ndave is a friend of bob.\ngeorge is a friend of dave.\ndave is a sibling of frank.\nalice is happy.\neve is a sibling of frank.\ndave is a friend of alice.\ndave is a sibling of eve.\nalice is a sibling of carol.\n\nQUESTION:\nIs alice is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,bob).",
    "c": "happy(carol) :- happy(bob).\ncold :- happy(carol).\ntall(frank) :- cold.\nsibling(alice,frank) :- tall(frank).\nsmall(apple) :- sibling(alice,frank).\ncold :- small(apple).\nsmall(book) :- cold.\nparent(carol,dave) :- small(book).\nhot :- friend(alice,george), hot, big(apple).\nhappy(bob).\nfriend(carol,eve).\ncold.\nfriend(alice,bob).\nsibling(dave,george).\nparent(bob,carol).\nfriend(alice,frank).\nsibling(eve,bob).\nfriend(dave,bob).\nfriend(george,dave).\nsibling(dave,frank).\nhappy(alice).\nsibling(eve,frank).\nfriend(dave,alice).\nsibling(dave,eve).\nsibling(alice,carol).",
    "natural language": "You are given the following information:\nIf bob is happy, then carol is happy.\nIf carol is happy, then it is cold.\nIf it is cold, then frank is tall.\nIf frank is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then book is small.\nIf book is small, then carol is a parent of dave.\nIf alice is a friend of george and it is hot and apple is big, then it is hot.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of eve.\nit is cold.\nalice is a friend of bob.\ndave is a sibling of george.\nbob is a parent of carol.\nalice is a friend of frank.\neve is a sibling of bob.\ndave is a friend of bob.\ngeorge is a friend of dave.\ndave is a sibling of frank.\nalice is happy.\neve is a sibling of frank.\ndave is a friend of alice.\ndave is a sibling of eve.\nalice is a sibling of carol.\n\nQUESTION:\nIs carol is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(book).",
    "c": "happy(carol) :- happy(bob).\ncold :- happy(carol).\ntall(frank) :- cold.\nsibling(alice,frank) :- tall(frank).\nsmall(apple) :- sibling(alice,frank).\ncold :- small(apple).\nsmall(book) :- cold.\nparent(carol,dave) :- small(book).\nhot :- friend(alice,george), hot, big(apple).\nhappy(bob).\nfriend(carol,eve).\ncold.\nfriend(alice,bob).\nsibling(dave,george).\nparent(bob,carol).\nfriend(alice,frank).\nsibling(eve,bob).\nfriend(dave,bob).\nfriend(george,dave).\nsibling(dave,frank).\nhappy(alice).\nsibling(eve,frank).\nfriend(dave,alice).\nsibling(dave,eve).\nsibling(alice,carol).",
    "natural language": "You are given the following information:\nIf bob is happy, then carol is happy.\nIf carol is happy, then it is cold.\nIf it is cold, then frank is tall.\nIf frank is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then book is small.\nIf book is small, then carol is a parent of dave.\nIf alice is a friend of george and it is hot and apple is big, then it is hot.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of eve.\nit is cold.\nalice is a friend of bob.\ndave is a sibling of george.\nbob is a parent of carol.\nalice is a friend of frank.\neve is a sibling of bob.\ndave is a friend of bob.\ngeorge is a friend of dave.\ndave is a sibling of frank.\nalice is happy.\neve is a sibling of frank.\ndave is a friend of alice.\ndave is a sibling of eve.\nalice is a sibling of carol.\n\nQUESTION:\nIs book is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "happy(carol) :- happy(bob).\ncold :- happy(carol).\ntall(frank) :- cold.\nsibling(alice,frank) :- tall(frank).\nsmall(apple) :- sibling(alice,frank).\ncold :- small(apple).\nsmall(book) :- cold.\nparent(carol,dave) :- small(book).\nhot :- friend(alice,george), hot, big(apple).\nhappy(bob).\nfriend(carol,eve).\nfriend(alice,bob).\nsibling(dave,george).\nparent(bob,carol).\nfriend(alice,frank).\nsibling(eve,bob).\nfriend(dave,bob).\nfriend(george,dave).\nsibling(dave,frank).\nhappy(alice).\nsibling(eve,frank).\nfriend(dave,alice).\nsibling(dave,eve).\nsibling(alice,carol).",
    "natural language": "You are given the following rules:\nIf bob is happy, then carol is happy.\nIf carol is happy, then it is cold.\nIf it is cold, then frank is tall.\nIf frank is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then book is small.\nIf book is small, then carol is a parent of dave.\nIf alice is a friend of george and it is hot and apple is big, then it is hot.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of eve.\nit is cold.\nalice is a friend of bob.\ndave is a sibling of george.\nbob is a parent of carol.\nalice is a friend of frank.\neve is a sibling of bob.\ndave is a friend of bob.\ngeorge is a friend of dave.\ndave is a sibling of frank.\nalice is happy.\neve is a sibling of frank.\ndave is a friend of alice.\ndave is a sibling of eve.\nalice is a sibling of carol.\n\nOBSERVATION: carol is a parent of dave is true.\n\nQUESTION:\nCould it is cold be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,carol).",
    "c": "happy(carol) :- happy(bob).\ncold :- happy(carol).\ntall(frank) :- cold.\nsibling(alice,frank) :- tall(frank).\nsmall(apple) :- sibling(alice,frank).\ncold :- small(apple).\nsmall(book) :- cold.\nparent(carol,dave) :- small(book).\nhot :- friend(alice,george), hot, big(apple).\nhappy(bob).\nfriend(carol,eve).\ncold.\nfriend(alice,bob).\nsibling(dave,george).\nparent(bob,carol).\nfriend(alice,frank).\nsibling(eve,bob).\nfriend(dave,bob).\nfriend(george,dave).\nsibling(dave,frank).\nhappy(alice).\nsibling(eve,frank).\nfriend(dave,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf bob is happy, then carol is happy.\nIf carol is happy, then it is cold.\nIf it is cold, then frank is tall.\nIf frank is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then book is small.\nIf book is small, then carol is a parent of dave.\nIf alice is a friend of george and it is hot and apple is big, then it is hot.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of eve.\nit is cold.\nalice is a friend of bob.\ndave is a sibling of george.\nbob is a parent of carol.\nalice is a friend of frank.\neve is a sibling of bob.\ndave is a friend of bob.\ngeorge is a friend of dave.\ndave is a sibling of frank.\nalice is happy.\neve is a sibling of frank.\ndave is a friend of alice.\ndave is a sibling of eve.\nalice is a sibling of carol.\n\nOBSERVATION: carol is a parent of dave is true.\n\nQUESTION:\nCould alice is a sibling of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,eve).",
    "c": "happy(carol) :- happy(bob).\ncold :- happy(carol).\ntall(frank) :- cold.\nsibling(alice,frank) :- tall(frank).\nsmall(apple) :- sibling(alice,frank).\ncold :- small(apple).\nsmall(book) :- cold.\nparent(carol,dave) :- small(book).\nhot :- friend(alice,george), hot, big(apple).\nhappy(bob).\nfriend(carol,eve).\ncold.\nfriend(alice,bob).\nsibling(dave,george).\nparent(bob,carol).\nfriend(alice,frank).\nsibling(eve,bob).\nfriend(dave,bob).\nfriend(george,dave).\nsibling(dave,frank).\nhappy(alice).\nsibling(eve,frank).\nfriend(dave,alice).\nsibling(alice,carol).",
    "natural language": "You are given the following rules:\nIf bob is happy, then carol is happy.\nIf carol is happy, then it is cold.\nIf it is cold, then frank is tall.\nIf frank is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then book is small.\nIf book is small, then carol is a parent of dave.\nIf alice is a friend of george and it is hot and apple is big, then it is hot.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of eve.\nit is cold.\nalice is a friend of bob.\ndave is a sibling of george.\nbob is a parent of carol.\nalice is a friend of frank.\neve is a sibling of bob.\ndave is a friend of bob.\ngeorge is a friend of dave.\ndave is a sibling of frank.\nalice is happy.\neve is a sibling of frank.\ndave is a friend of alice.\ndave is a sibling of eve.\nalice is a sibling of carol.\n\nOBSERVATION: carol is a parent of dave is true.\n\nQUESTION:\nCould dave is a sibling of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,phone).",
    "c": "owns(george,pencil) :- happy(eve).\nsmall(book) :- owns(george,pencil).\ndislikes(dave,apple) :- small(book).\ntall(dave) :- dislikes(dave,apple).\nsibling(frank,frank) :- tall(dave).\nowns(carol,phone) :- sibling(frank,frank).\nbig(pencil) :- owns(carol,phone).\nsmall(apple) :- big(pencil).\nhungry(carol) :- hungry(eve), likes(alice,alice).\nhappy(eve).\nowns(frank,car).\nsibling(george,eve).\nowns(frank,ball).\nowns(bob,car).\nsibling(george,bob).\ndislikes(george,book).\nlikes(bob,phone).\ndislikes(frank,eve).\nlikes(eve,phone).\ndislikes(carol,phone).\nsibling(frank,dave).\ndislikes(bob,phone).\nlikes(dave,eve).\nowns(george,book).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf eve is happy, then george owns pencil.\nIf george owns pencil, then book is small.\nIf book is small, then dave dislikes apple.\nIf dave dislikes apple, then dave is tall.\nIf dave is tall, then frank is a sibling of frank.\nIf frank is a sibling of frank, then carol owns phone.\nIf carol owns phone, then pencil is big.\nIf pencil is big, then apple is small.\nIf eve is hungry and alice likes alice, then carol is hungry.\n\nAnd the following facts:\neve is happy.\nfrank owns car.\ngeorge is a sibling of eve.\nfrank owns ball.\nbob owns car.\ngeorge is a sibling of bob.\ngeorge dislikes book.\nbob likes phone.\nfrank dislikes eve.\neve likes phone.\ncarol dislikes phone.\nfrank is a sibling of dave.\nbob dislikes phone.\ndave likes eve.\ngeorge owns book.\nphone is small.\n\nQUESTION:\nIs bob dislikes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(pencil).",
    "c": "owns(george,pencil) :- happy(eve).\nsmall(book) :- owns(george,pencil).\ndislikes(dave,apple) :- small(book).\ntall(dave) :- dislikes(dave,apple).\nsibling(frank,frank) :- tall(dave).\nowns(carol,phone) :- sibling(frank,frank).\nbig(pencil) :- owns(carol,phone).\nsmall(apple) :- big(pencil).\nhungry(carol) :- hungry(eve), likes(alice,alice).\nhappy(eve).\nowns(frank,car).\nsibling(george,eve).\nowns(frank,ball).\nowns(bob,car).\nsibling(george,bob).\ndislikes(george,book).\nlikes(bob,phone).\ndislikes(frank,eve).\nlikes(eve,phone).\ndislikes(carol,phone).\nsibling(frank,dave).\ndislikes(bob,phone).\nlikes(dave,eve).\nowns(george,book).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf eve is happy, then george owns pencil.\nIf george owns pencil, then book is small.\nIf book is small, then dave dislikes apple.\nIf dave dislikes apple, then dave is tall.\nIf dave is tall, then frank is a sibling of frank.\nIf frank is a sibling of frank, then carol owns phone.\nIf carol owns phone, then pencil is big.\nIf pencil is big, then apple is small.\nIf eve is hungry and alice likes alice, then carol is hungry.\n\nAnd the following facts:\neve is happy.\nfrank owns car.\ngeorge is a sibling of eve.\nfrank owns ball.\nbob owns car.\ngeorge is a sibling of bob.\ngeorge dislikes book.\nbob likes phone.\nfrank dislikes eve.\neve likes phone.\ncarol dislikes phone.\nfrank is a sibling of dave.\nbob dislikes phone.\ndave likes eve.\ngeorge owns book.\nphone is small.\n\nQUESTION:\nIs pencil is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,book).",
    "c": "owns(george,pencil) :- happy(eve).\nsmall(book) :- owns(george,pencil).\ndislikes(dave,apple) :- small(book).\ntall(dave) :- dislikes(dave,apple).\nsibling(frank,frank) :- tall(dave).\nowns(carol,phone) :- sibling(frank,frank).\nbig(pencil) :- owns(carol,phone).\nsmall(apple) :- big(pencil).\nhungry(carol) :- hungry(eve), likes(alice,alice).\nhappy(eve).\nowns(frank,car).\nsibling(george,eve).\nowns(frank,ball).\nowns(bob,car).\nsibling(george,bob).\ndislikes(george,book).\nlikes(bob,phone).\ndislikes(frank,eve).\nlikes(eve,phone).\ndislikes(carol,phone).\nsibling(frank,dave).\ndislikes(bob,phone).\nlikes(dave,eve).\nowns(george,book).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf eve is happy, then george owns pencil.\nIf george owns pencil, then book is small.\nIf book is small, then dave dislikes apple.\nIf dave dislikes apple, then dave is tall.\nIf dave is tall, then frank is a sibling of frank.\nIf frank is a sibling of frank, then carol owns phone.\nIf carol owns phone, then pencil is big.\nIf pencil is big, then apple is small.\nIf eve is hungry and alice likes alice, then carol is hungry.\n\nAnd the following facts:\neve is happy.\nfrank owns car.\ngeorge is a sibling of eve.\nfrank owns ball.\nbob owns car.\ngeorge is a sibling of bob.\ngeorge dislikes book.\nbob likes phone.\nfrank dislikes eve.\neve likes phone.\ncarol dislikes phone.\nfrank is a sibling of dave.\nbob dislikes phone.\ndave likes eve.\ngeorge owns book.\nphone is small.\n\nQUESTION:\nIs george dislikes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,book).",
    "c": "owns(george,pencil) :- happy(eve).\nsmall(book) :- owns(george,pencil).\ndislikes(dave,apple) :- small(book).\ntall(dave) :- dislikes(dave,apple).\nsibling(frank,frank) :- tall(dave).\nowns(carol,phone) :- sibling(frank,frank).\nbig(pencil) :- owns(carol,phone).\nsmall(apple) :- big(pencil).\nhungry(carol) :- hungry(eve), likes(alice,alice).\nhappy(eve).\nowns(frank,car).\nsibling(george,eve).\nowns(frank,ball).\nowns(bob,car).\nsibling(george,bob).\ndislikes(george,book).\nlikes(bob,phone).\ndislikes(frank,eve).\nlikes(eve,phone).\ndislikes(carol,phone).\nsibling(frank,dave).\ndislikes(bob,phone).\nlikes(dave,eve).\nowns(george,book).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf eve is happy, then george owns pencil.\nIf george owns pencil, then book is small.\nIf book is small, then dave dislikes apple.\nIf dave dislikes apple, then dave is tall.\nIf dave is tall, then frank is a sibling of frank.\nIf frank is a sibling of frank, then carol owns phone.\nIf carol owns phone, then pencil is big.\nIf pencil is big, then apple is small.\nIf eve is hungry and alice likes alice, then carol is hungry.\n\nAnd the following facts:\neve is happy.\nfrank owns car.\ngeorge is a sibling of eve.\nfrank owns ball.\nbob owns car.\ngeorge is a sibling of bob.\ngeorge dislikes book.\nbob likes phone.\nfrank dislikes eve.\neve likes phone.\ncarol dislikes phone.\nfrank is a sibling of dave.\nbob dislikes phone.\ndave likes eve.\ngeorge owns book.\nphone is small.\n\nQUESTION:\nIs alice likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(alice).",
    "c": "owns(george,pencil) :- happy(eve).\nsmall(book) :- owns(george,pencil).\ndislikes(dave,apple) :- small(book).\ntall(dave) :- dislikes(dave,apple).\nsibling(frank,frank) :- tall(dave).\nowns(carol,phone) :- sibling(frank,frank).\nbig(pencil) :- owns(carol,phone).\nsmall(apple) :- big(pencil).\nhungry(carol) :- hungry(eve), likes(alice,alice).\nhappy(eve).\nowns(frank,car).\nsibling(george,eve).\nowns(frank,ball).\nowns(bob,car).\nsibling(george,bob).\ndislikes(george,book).\nlikes(bob,phone).\ndislikes(frank,eve).\nlikes(eve,phone).\ndislikes(carol,phone).\nsibling(frank,dave).\ndislikes(bob,phone).\nlikes(dave,eve).\nowns(george,book).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf eve is happy, then george owns pencil.\nIf george owns pencil, then book is small.\nIf book is small, then dave dislikes apple.\nIf dave dislikes apple, then dave is tall.\nIf dave is tall, then frank is a sibling of frank.\nIf frank is a sibling of frank, then carol owns phone.\nIf carol owns phone, then pencil is big.\nIf pencil is big, then apple is small.\nIf eve is hungry and alice likes alice, then carol is hungry.\n\nAnd the following facts:\neve is happy.\nfrank owns car.\ngeorge is a sibling of eve.\nfrank owns ball.\nbob owns car.\ngeorge is a sibling of bob.\ngeorge dislikes book.\nbob likes phone.\nfrank dislikes eve.\neve likes phone.\ncarol dislikes phone.\nfrank is a sibling of dave.\nbob dislikes phone.\ndave likes eve.\ngeorge owns book.\nphone is small.\n\nQUESTION:\nIs alice is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(eve).",
    "c": "owns(george,pencil) :- happy(eve).\nsmall(book) :- owns(george,pencil).\ndislikes(dave,apple) :- small(book).\ntall(dave) :- dislikes(dave,apple).\nsibling(frank,frank) :- tall(dave).\nowns(carol,phone) :- sibling(frank,frank).\nbig(pencil) :- owns(carol,phone).\nsmall(apple) :- big(pencil).\nhungry(carol) :- hungry(eve), likes(alice,alice).\nowns(frank,car).\nsibling(george,eve).\nowns(frank,ball).\nowns(bob,car).\nsibling(george,bob).\ndislikes(george,book).\nlikes(bob,phone).\ndislikes(frank,eve).\nlikes(eve,phone).\ndislikes(carol,phone).\nsibling(frank,dave).\ndislikes(bob,phone).\nlikes(dave,eve).\nowns(george,book).\nsmall(phone).",
    "natural language": "You are given the following rules:\nIf eve is happy, then george owns pencil.\nIf george owns pencil, then book is small.\nIf book is small, then dave dislikes apple.\nIf dave dislikes apple, then dave is tall.\nIf dave is tall, then frank is a sibling of frank.\nIf frank is a sibling of frank, then carol owns phone.\nIf carol owns phone, then pencil is big.\nIf pencil is big, then apple is small.\nIf eve is hungry and alice likes alice, then carol is hungry.\n\nAnd the following facts:\neve is happy.\nfrank owns car.\ngeorge is a sibling of eve.\nfrank owns ball.\nbob owns car.\ngeorge is a sibling of bob.\ngeorge dislikes book.\nbob likes phone.\nfrank dislikes eve.\neve likes phone.\ncarol dislikes phone.\nfrank is a sibling of dave.\nbob dislikes phone.\ndave likes eve.\ngeorge owns book.\nphone is small.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould eve is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(frank,eve).",
    "c": "owns(george,pencil) :- happy(eve).\nsmall(book) :- owns(george,pencil).\ndislikes(dave,apple) :- small(book).\ntall(dave) :- dislikes(dave,apple).\nsibling(frank,frank) :- tall(dave).\nowns(carol,phone) :- sibling(frank,frank).\nbig(pencil) :- owns(carol,phone).\nsmall(apple) :- big(pencil).\nhungry(carol) :- hungry(eve), likes(alice,alice).\nhappy(eve).\nowns(frank,car).\nsibling(george,eve).\nowns(frank,ball).\nowns(bob,car).\nsibling(george,bob).\ndislikes(george,book).\nlikes(bob,phone).\nlikes(eve,phone).\ndislikes(carol,phone).\nsibling(frank,dave).\ndislikes(bob,phone).\nlikes(dave,eve).\nowns(george,book).\nsmall(phone).",
    "natural language": "You are given the following rules:\nIf eve is happy, then george owns pencil.\nIf george owns pencil, then book is small.\nIf book is small, then dave dislikes apple.\nIf dave dislikes apple, then dave is tall.\nIf dave is tall, then frank is a sibling of frank.\nIf frank is a sibling of frank, then carol owns phone.\nIf carol owns phone, then pencil is big.\nIf pencil is big, then apple is small.\nIf eve is hungry and alice likes alice, then carol is hungry.\n\nAnd the following facts:\neve is happy.\nfrank owns car.\ngeorge is a sibling of eve.\nfrank owns ball.\nbob owns car.\ngeorge is a sibling of bob.\ngeorge dislikes book.\nbob likes phone.\nfrank dislikes eve.\neve likes phone.\ncarol dislikes phone.\nfrank is a sibling of dave.\nbob dislikes phone.\ndave likes eve.\ngeorge owns book.\nphone is small.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould frank dislikes eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(frank,dave).",
    "c": "owns(george,pencil) :- happy(eve).\nsmall(book) :- owns(george,pencil).\ndislikes(dave,apple) :- small(book).\ntall(dave) :- dislikes(dave,apple).\nsibling(frank,frank) :- tall(dave).\nowns(carol,phone) :- sibling(frank,frank).\nbig(pencil) :- owns(carol,phone).\nsmall(apple) :- big(pencil).\nhungry(carol) :- hungry(eve), likes(alice,alice).\nhappy(eve).\nowns(frank,car).\nsibling(george,eve).\nowns(frank,ball).\nowns(bob,car).\nsibling(george,bob).\ndislikes(george,book).\nlikes(bob,phone).\ndislikes(frank,eve).\nlikes(eve,phone).\ndislikes(carol,phone).\ndislikes(bob,phone).\nlikes(dave,eve).\nowns(george,book).\nsmall(phone).",
    "natural language": "You are given the following rules:\nIf eve is happy, then george owns pencil.\nIf george owns pencil, then book is small.\nIf book is small, then dave dislikes apple.\nIf dave dislikes apple, then dave is tall.\nIf dave is tall, then frank is a sibling of frank.\nIf frank is a sibling of frank, then carol owns phone.\nIf carol owns phone, then pencil is big.\nIf pencil is big, then apple is small.\nIf eve is hungry and alice likes alice, then carol is hungry.\n\nAnd the following facts:\neve is happy.\nfrank owns car.\ngeorge is a sibling of eve.\nfrank owns ball.\nbob owns car.\ngeorge is a sibling of bob.\ngeorge dislikes book.\nbob likes phone.\nfrank dislikes eve.\neve likes phone.\ncarol dislikes phone.\nfrank is a sibling of dave.\nbob dislikes phone.\ndave likes eve.\ngeorge owns book.\nphone is small.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould frank is a sibling of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(carol,car).",
    "c": "hot :- small(pencil).\nsibling(dave,frank) :- hot.\nlikes(george,ball) :- sibling(dave,frank).\ndislikes(frank,ball) :- likes(george,ball).\nsmall(ball) :- dislikes(frank,ball).\nlikes(george,eve) :- small(ball).\nsmall(phone) :- likes(george,eve).\nfriend(bob,alice) :- small(phone).\nhungry(carol) :- friend(bob,alice).\nowns(carol,book) :- hungry(carol).\nsmall(pencil).\nowns(alice,car).\nfriend(george,carol).\nfriend(frank,eve).\ndislikes(frank,alice).\nowns(frank,ball).\nfriend(carol,alice).\nowns(dave,apple).\nsibling(dave,carol).\ndislikes(frank,bob).\nfriend(dave,alice).\nlikes(frank,carol).\ndislikes(frank,ball).\nowns(carol,car).\nlikes(george,eve).\nlikes(bob,phone).",
    "natural language": "You are given the following information:\nIf pencil is small, then it is hot.\nIf it is hot, then dave is a sibling of frank.\nIf dave is a sibling of frank, then george likes ball.\nIf george likes ball, then frank dislikes ball.\nIf frank dislikes ball, then ball is small.\nIf ball is small, then george likes eve.\nIf george likes eve, then phone is small.\nIf phone is small, then bob is a friend of alice.\nIf bob is a friend of alice, then carol is hungry.\nIf carol is hungry, then carol owns book.\n\nAnd the following facts:\npencil is small.\nalice owns car.\ngeorge is a friend of carol.\nfrank is a friend of eve.\nfrank dislikes alice.\nfrank owns ball.\ncarol is a friend of alice.\ndave owns apple.\ndave is a sibling of carol.\nfrank dislikes bob.\ndave is a friend of alice.\nfrank likes carol.\nfrank dislikes ball.\ncarol owns car.\ngeorge likes eve.\nbob likes phone.\n\nQUESTION:\nIs carol owns car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,car).",
    "c": "hot :- small(pencil).\nsibling(dave,frank) :- hot.\nlikes(george,ball) :- sibling(dave,frank).\ndislikes(frank,ball) :- likes(george,ball).\nsmall(ball) :- dislikes(frank,ball).\nlikes(george,eve) :- small(ball).\nsmall(phone) :- likes(george,eve).\nfriend(bob,alice) :- small(phone).\nhungry(carol) :- friend(bob,alice).\nowns(carol,book) :- hungry(carol).\nsmall(pencil).\nowns(alice,car).\nfriend(george,carol).\nfriend(frank,eve).\ndislikes(frank,alice).\nowns(frank,ball).\nfriend(carol,alice).\nowns(dave,apple).\nsibling(dave,carol).\ndislikes(frank,bob).\nfriend(dave,alice).\nlikes(frank,carol).\ndislikes(frank,ball).\nowns(carol,car).\nlikes(george,eve).\nlikes(bob,phone).",
    "natural language": "You are given the following information:\nIf pencil is small, then it is hot.\nIf it is hot, then dave is a sibling of frank.\nIf dave is a sibling of frank, then george likes ball.\nIf george likes ball, then frank dislikes ball.\nIf frank dislikes ball, then ball is small.\nIf ball is small, then george likes eve.\nIf george likes eve, then phone is small.\nIf phone is small, then bob is a friend of alice.\nIf bob is a friend of alice, then carol is hungry.\nIf carol is hungry, then carol owns book.\n\nAnd the following facts:\npencil is small.\nalice owns car.\ngeorge is a friend of carol.\nfrank is a friend of eve.\nfrank dislikes alice.\nfrank owns ball.\ncarol is a friend of alice.\ndave owns apple.\ndave is a sibling of carol.\nfrank dislikes bob.\ndave is a friend of alice.\nfrank likes carol.\nfrank dislikes ball.\ncarol owns car.\ngeorge likes eve.\nbob likes phone.\n\nQUESTION:\nIs alice owns car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "hot :- small(pencil).\nsibling(dave,frank) :- hot.\nlikes(george,ball) :- sibling(dave,frank).\ndislikes(frank,ball) :- likes(george,ball).\nsmall(ball) :- dislikes(frank,ball).\nlikes(george,eve) :- small(ball).\nsmall(phone) :- likes(george,eve).\nfriend(bob,alice) :- small(phone).\nhungry(carol) :- friend(bob,alice).\nowns(carol,book) :- hungry(carol).\nsmall(pencil).\nowns(alice,car).\nfriend(george,carol).\nfriend(frank,eve).\ndislikes(frank,alice).\nowns(frank,ball).\nfriend(carol,alice).\nowns(dave,apple).\nsibling(dave,carol).\ndislikes(frank,bob).\nfriend(dave,alice).\nlikes(frank,carol).\ndislikes(frank,ball).\nowns(carol,car).\nlikes(george,eve).\nlikes(bob,phone).",
    "natural language": "You are given the following information:\nIf pencil is small, then it is hot.\nIf it is hot, then dave is a sibling of frank.\nIf dave is a sibling of frank, then george likes ball.\nIf george likes ball, then frank dislikes ball.\nIf frank dislikes ball, then ball is small.\nIf ball is small, then george likes eve.\nIf george likes eve, then phone is small.\nIf phone is small, then bob is a friend of alice.\nIf bob is a friend of alice, then carol is hungry.\nIf carol is hungry, then carol owns book.\n\nAnd the following facts:\npencil is small.\nalice owns car.\ngeorge is a friend of carol.\nfrank is a friend of eve.\nfrank dislikes alice.\nfrank owns ball.\ncarol is a friend of alice.\ndave owns apple.\ndave is a sibling of carol.\nfrank dislikes bob.\ndave is a friend of alice.\nfrank likes carol.\nfrank dislikes ball.\ncarol owns car.\ngeorge likes eve.\nbob likes phone.\n\nQUESTION:\nIs it is hot true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "hot :- small(pencil).\nsibling(dave,frank) :- hot.\nlikes(george,ball) :- sibling(dave,frank).\ndislikes(frank,ball) :- likes(george,ball).\nsmall(ball) :- dislikes(frank,ball).\nlikes(george,eve) :- small(ball).\nsmall(phone) :- likes(george,eve).\nfriend(bob,alice) :- small(phone).\nhungry(carol) :- friend(bob,alice).\nowns(carol,book) :- hungry(carol).\nsmall(pencil).\nowns(alice,car).\nfriend(george,carol).\nfriend(frank,eve).\ndislikes(frank,alice).\nowns(frank,ball).\nfriend(carol,alice).\nowns(dave,apple).\nsibling(dave,carol).\ndislikes(frank,bob).\nfriend(dave,alice).\nlikes(frank,carol).\ndislikes(frank,ball).\nowns(carol,car).\nlikes(george,eve).\nlikes(bob,phone).",
    "natural language": "You are given the following information:\nIf pencil is small, then it is hot.\nIf it is hot, then dave is a sibling of frank.\nIf dave is a sibling of frank, then george likes ball.\nIf george likes ball, then frank dislikes ball.\nIf frank dislikes ball, then ball is small.\nIf ball is small, then george likes eve.\nIf george likes eve, then phone is small.\nIf phone is small, then bob is a friend of alice.\nIf bob is a friend of alice, then carol is hungry.\nIf carol is hungry, then carol owns book.\n\nAnd the following facts:\npencil is small.\nalice owns car.\ngeorge is a friend of carol.\nfrank is a friend of eve.\nfrank dislikes alice.\nfrank owns ball.\ncarol is a friend of alice.\ndave owns apple.\ndave is a sibling of carol.\nfrank dislikes bob.\ndave is a friend of alice.\nfrank likes carol.\nfrank dislikes ball.\ncarol owns car.\ngeorge likes eve.\nbob likes phone.\n\nQUESTION:\nIs carol likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,alice).",
    "c": "hot :- small(pencil).\nsibling(dave,frank) :- hot.\nlikes(george,ball) :- sibling(dave,frank).\ndislikes(frank,ball) :- likes(george,ball).\nsmall(ball) :- dislikes(frank,ball).\nlikes(george,eve) :- small(ball).\nsmall(phone) :- likes(george,eve).\nfriend(bob,alice) :- small(phone).\nhungry(carol) :- friend(bob,alice).\nowns(carol,book) :- hungry(carol).\nsmall(pencil).\nowns(alice,car).\nfriend(george,carol).\nfriend(frank,eve).\ndislikes(frank,alice).\nowns(frank,ball).\nfriend(carol,alice).\nowns(dave,apple).\nsibling(dave,carol).\ndislikes(frank,bob).\nfriend(dave,alice).\nlikes(frank,carol).\ndislikes(frank,ball).\nowns(carol,car).\nlikes(george,eve).\nlikes(bob,phone).",
    "natural language": "You are given the following information:\nIf pencil is small, then it is hot.\nIf it is hot, then dave is a sibling of frank.\nIf dave is a sibling of frank, then george likes ball.\nIf george likes ball, then frank dislikes ball.\nIf frank dislikes ball, then ball is small.\nIf ball is small, then george likes eve.\nIf george likes eve, then phone is small.\nIf phone is small, then bob is a friend of alice.\nIf bob is a friend of alice, then carol is hungry.\nIf carol is hungry, then carol owns book.\n\nAnd the following facts:\npencil is small.\nalice owns car.\ngeorge is a friend of carol.\nfrank is a friend of eve.\nfrank dislikes alice.\nfrank owns ball.\ncarol is a friend of alice.\ndave owns apple.\ndave is a sibling of carol.\nfrank dislikes bob.\ndave is a friend of alice.\nfrank likes carol.\nfrank dislikes ball.\ncarol owns car.\ngeorge likes eve.\nbob likes phone.\n\nQUESTION:\nIs frank is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,eve).",
    "c": "hot :- small(pencil).\nsibling(dave,frank) :- hot.\nlikes(george,ball) :- sibling(dave,frank).\ndislikes(frank,ball) :- likes(george,ball).\nsmall(ball) :- dislikes(frank,ball).\nlikes(george,eve) :- small(ball).\nsmall(phone) :- likes(george,eve).\nfriend(bob,alice) :- small(phone).\nhungry(carol) :- friend(bob,alice).\nowns(carol,book) :- hungry(carol).\nsmall(pencil).\nowns(alice,car).\nfriend(george,carol).\nfriend(frank,eve).\ndislikes(frank,alice).\nowns(frank,ball).\nfriend(carol,alice).\nowns(dave,apple).\nsibling(dave,carol).\ndislikes(frank,bob).\nfriend(dave,alice).\nlikes(frank,carol).\ndislikes(frank,ball).\nowns(carol,car).\nlikes(bob,phone).",
    "natural language": "You are given the following rules:\nIf pencil is small, then it is hot.\nIf it is hot, then dave is a sibling of frank.\nIf dave is a sibling of frank, then george likes ball.\nIf george likes ball, then frank dislikes ball.\nIf frank dislikes ball, then ball is small.\nIf ball is small, then george likes eve.\nIf george likes eve, then phone is small.\nIf phone is small, then bob is a friend of alice.\nIf bob is a friend of alice, then carol is hungry.\nIf carol is hungry, then carol owns book.\n\nAnd the following facts:\npencil is small.\nalice owns car.\ngeorge is a friend of carol.\nfrank is a friend of eve.\nfrank dislikes alice.\nfrank owns ball.\ncarol is a friend of alice.\ndave owns apple.\ndave is a sibling of carol.\nfrank dislikes bob.\ndave is a friend of alice.\nfrank likes carol.\nfrank dislikes ball.\ncarol owns car.\ngeorge likes eve.\nbob likes phone.\n\nOBSERVATION: carol owns book is true.\n\nQUESTION:\nCould george likes eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(frank,carol).",
    "c": "hot :- small(pencil).\nsibling(dave,frank) :- hot.\nlikes(george,ball) :- sibling(dave,frank).\ndislikes(frank,ball) :- likes(george,ball).\nsmall(ball) :- dislikes(frank,ball).\nlikes(george,eve) :- small(ball).\nsmall(phone) :- likes(george,eve).\nfriend(bob,alice) :- small(phone).\nhungry(carol) :- friend(bob,alice).\nowns(carol,book) :- hungry(carol).\nsmall(pencil).\nowns(alice,car).\nfriend(george,carol).\nfriend(frank,eve).\ndislikes(frank,alice).\nowns(frank,ball).\nfriend(carol,alice).\nowns(dave,apple).\nsibling(dave,carol).\ndislikes(frank,bob).\nfriend(dave,alice).\ndislikes(frank,ball).\nowns(carol,car).\nlikes(george,eve).\nlikes(bob,phone).",
    "natural language": "You are given the following rules:\nIf pencil is small, then it is hot.\nIf it is hot, then dave is a sibling of frank.\nIf dave is a sibling of frank, then george likes ball.\nIf george likes ball, then frank dislikes ball.\nIf frank dislikes ball, then ball is small.\nIf ball is small, then george likes eve.\nIf george likes eve, then phone is small.\nIf phone is small, then bob is a friend of alice.\nIf bob is a friend of alice, then carol is hungry.\nIf carol is hungry, then carol owns book.\n\nAnd the following facts:\npencil is small.\nalice owns car.\ngeorge is a friend of carol.\nfrank is a friend of eve.\nfrank dislikes alice.\nfrank owns ball.\ncarol is a friend of alice.\ndave owns apple.\ndave is a sibling of carol.\nfrank dislikes bob.\ndave is a friend of alice.\nfrank likes carol.\nfrank dislikes ball.\ncarol owns car.\ngeorge likes eve.\nbob likes phone.\n\nOBSERVATION: carol owns book is true.\n\nQUESTION:\nCould frank likes carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(dave,alice).",
    "c": "hot :- small(pencil).\nsibling(dave,frank) :- hot.\nlikes(george,ball) :- sibling(dave,frank).\ndislikes(frank,ball) :- likes(george,ball).\nsmall(ball) :- dislikes(frank,ball).\nlikes(george,eve) :- small(ball).\nsmall(phone) :- likes(george,eve).\nfriend(bob,alice) :- small(phone).\nhungry(carol) :- friend(bob,alice).\nowns(carol,book) :- hungry(carol).\nsmall(pencil).\nowns(alice,car).\nfriend(george,carol).\nfriend(frank,eve).\ndislikes(frank,alice).\nowns(frank,ball).\nfriend(carol,alice).\nowns(dave,apple).\nsibling(dave,carol).\ndislikes(frank,bob).\nlikes(frank,carol).\ndislikes(frank,ball).\nowns(carol,car).\nlikes(george,eve).\nlikes(bob,phone).",
    "natural language": "You are given the following rules:\nIf pencil is small, then it is hot.\nIf it is hot, then dave is a sibling of frank.\nIf dave is a sibling of frank, then george likes ball.\nIf george likes ball, then frank dislikes ball.\nIf frank dislikes ball, then ball is small.\nIf ball is small, then george likes eve.\nIf george likes eve, then phone is small.\nIf phone is small, then bob is a friend of alice.\nIf bob is a friend of alice, then carol is hungry.\nIf carol is hungry, then carol owns book.\n\nAnd the following facts:\npencil is small.\nalice owns car.\ngeorge is a friend of carol.\nfrank is a friend of eve.\nfrank dislikes alice.\nfrank owns ball.\ncarol is a friend of alice.\ndave owns apple.\ndave is a sibling of carol.\nfrank dislikes bob.\ndave is a friend of alice.\nfrank likes carol.\nfrank dislikes ball.\ncarol owns car.\ngeorge likes eve.\nbob likes phone.\n\nOBSERVATION: carol owns book is true.\n\nQUESTION:\nCould dave is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(george,bob).",
    "c": "likes(george,car) :- wet(car).\nhappy(eve) :- likes(george,car).\nsibling(alice,eve) :- happy(eve).\nsunny :- sibling(alice,eve).\nbig(apple) :- sunny.\nsmall(ball) :- big(apple).\nsad(bob) :- small(ball).\ntall(carol) :- sad(bob).\nhungry(frank) :- tall(carol).\nhot :- hungry(frank).\nwet(car).\nhungry(bob).\nlikes(carol,phone).\nsibling(frank,eve).\nlikes(george,bob).\nbig(ball).\nlikes(carol,car).\nwet(pencil).\nsad(george).\nlikes(carol,george).\nsibling(carol,bob).\nsibling(bob,george).\nlikes(frank,george).\nlikes(bob,book).\nsad(alice).\nlikes(george,apple).",
    "natural language": "You are given the following information:\nIf car is wet, then george likes car.\nIf george likes car, then eve is happy.\nIf eve is happy, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then bob is sad.\nIf bob is sad, then carol is tall.\nIf carol is tall, then frank is hungry.\nIf frank is hungry, then it is hot.\n\nAnd the following facts:\ncar is wet.\nbob is hungry.\ncarol likes phone.\nfrank is a sibling of eve.\ngeorge likes bob.\nball is big.\ncarol likes car.\npencil is wet.\ngeorge is sad.\ncarol likes george.\ncarol is a sibling of bob.\nbob is a sibling of george.\nfrank likes george.\nbob likes book.\nalice is sad.\ngeorge likes apple.\n\nQUESTION:\nIs george likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,book).",
    "c": "likes(george,car) :- wet(car).\nhappy(eve) :- likes(george,car).\nsibling(alice,eve) :- happy(eve).\nsunny :- sibling(alice,eve).\nbig(apple) :- sunny.\nsmall(ball) :- big(apple).\nsad(bob) :- small(ball).\ntall(carol) :- sad(bob).\nhungry(frank) :- tall(carol).\nhot :- hungry(frank).\nwet(car).\nhungry(bob).\nlikes(carol,phone).\nsibling(frank,eve).\nlikes(george,bob).\nbig(ball).\nlikes(carol,car).\nwet(pencil).\nsad(george).\nlikes(carol,george).\nsibling(carol,bob).\nsibling(bob,george).\nlikes(frank,george).\nlikes(bob,book).\nsad(alice).\nlikes(george,apple).",
    "natural language": "You are given the following information:\nIf car is wet, then george likes car.\nIf george likes car, then eve is happy.\nIf eve is happy, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then bob is sad.\nIf bob is sad, then carol is tall.\nIf carol is tall, then frank is hungry.\nIf frank is hungry, then it is hot.\n\nAnd the following facts:\ncar is wet.\nbob is hungry.\ncarol likes phone.\nfrank is a sibling of eve.\ngeorge likes bob.\nball is big.\ncarol likes car.\npencil is wet.\ngeorge is sad.\ncarol likes george.\ncarol is a sibling of bob.\nbob is a sibling of george.\nfrank likes george.\nbob likes book.\nalice is sad.\ngeorge likes apple.\n\nQUESTION:\nIs bob likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,eve).",
    "c": "likes(george,car) :- wet(car).\nhappy(eve) :- likes(george,car).\nsibling(alice,eve) :- happy(eve).\nsunny :- sibling(alice,eve).\nbig(apple) :- sunny.\nsmall(ball) :- big(apple).\nsad(bob) :- small(ball).\ntall(carol) :- sad(bob).\nhungry(frank) :- tall(carol).\nhot :- hungry(frank).\nwet(car).\nhungry(bob).\nlikes(carol,phone).\nsibling(frank,eve).\nlikes(george,bob).\nbig(ball).\nlikes(carol,car).\nwet(pencil).\nsad(george).\nlikes(carol,george).\nsibling(carol,bob).\nsibling(bob,george).\nlikes(frank,george).\nlikes(bob,book).\nsad(alice).\nlikes(george,apple).",
    "natural language": "You are given the following information:\nIf car is wet, then george likes car.\nIf george likes car, then eve is happy.\nIf eve is happy, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then bob is sad.\nIf bob is sad, then carol is tall.\nIf carol is tall, then frank is hungry.\nIf frank is hungry, then it is hot.\n\nAnd the following facts:\ncar is wet.\nbob is hungry.\ncarol likes phone.\nfrank is a sibling of eve.\ngeorge likes bob.\nball is big.\ncarol likes car.\npencil is wet.\ngeorge is sad.\ncarol likes george.\ncarol is a sibling of bob.\nbob is a sibling of george.\nfrank likes george.\nbob likes book.\nalice is sad.\ngeorge likes apple.\n\nQUESTION:\nIs alice is a sibling of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,frank).",
    "c": "likes(george,car) :- wet(car).\nhappy(eve) :- likes(george,car).\nsibling(alice,eve) :- happy(eve).\nsunny :- sibling(alice,eve).\nbig(apple) :- sunny.\nsmall(ball) :- big(apple).\nsad(bob) :- small(ball).\ntall(carol) :- sad(bob).\nhungry(frank) :- tall(carol).\nhot :- hungry(frank).\nwet(car).\nhungry(bob).\nlikes(carol,phone).\nsibling(frank,eve).\nlikes(george,bob).\nbig(ball).\nlikes(carol,car).\nwet(pencil).\nsad(george).\nlikes(carol,george).\nsibling(carol,bob).\nsibling(bob,george).\nlikes(frank,george).\nlikes(bob,book).\nsad(alice).\nlikes(george,apple).",
    "natural language": "You are given the following information:\nIf car is wet, then george likes car.\nIf george likes car, then eve is happy.\nIf eve is happy, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then bob is sad.\nIf bob is sad, then carol is tall.\nIf carol is tall, then frank is hungry.\nIf frank is hungry, then it is hot.\n\nAnd the following facts:\ncar is wet.\nbob is hungry.\ncarol likes phone.\nfrank is a sibling of eve.\ngeorge likes bob.\nball is big.\ncarol likes car.\npencil is wet.\ngeorge is sad.\ncarol likes george.\ncarol is a sibling of bob.\nbob is a sibling of george.\nfrank likes george.\nbob likes book.\nalice is sad.\ngeorge likes apple.\n\nQUESTION:\nIs eve is a sibling of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,dave).",
    "c": "likes(george,car) :- wet(car).\nhappy(eve) :- likes(george,car).\nsibling(alice,eve) :- happy(eve).\nsunny :- sibling(alice,eve).\nbig(apple) :- sunny.\nsmall(ball) :- big(apple).\nsad(bob) :- small(ball).\ntall(carol) :- sad(bob).\nhungry(frank) :- tall(carol).\nhot :- hungry(frank).\nwet(car).\nhungry(bob).\nlikes(carol,phone).\nsibling(frank,eve).\nlikes(george,bob).\nbig(ball).\nlikes(carol,car).\nwet(pencil).\nsad(george).\nlikes(carol,george).\nsibling(carol,bob).\nsibling(bob,george).\nlikes(frank,george).\nlikes(bob,book).\nsad(alice).\nlikes(george,apple).",
    "natural language": "You are given the following information:\nIf car is wet, then george likes car.\nIf george likes car, then eve is happy.\nIf eve is happy, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then bob is sad.\nIf bob is sad, then carol is tall.\nIf carol is tall, then frank is hungry.\nIf frank is hungry, then it is hot.\n\nAnd the following facts:\ncar is wet.\nbob is hungry.\ncarol likes phone.\nfrank is a sibling of eve.\ngeorge likes bob.\nball is big.\ncarol likes car.\npencil is wet.\ngeorge is sad.\ncarol likes george.\ncarol is a sibling of bob.\nbob is a sibling of george.\nfrank likes george.\nbob likes book.\nalice is sad.\ngeorge likes apple.\n\nQUESTION:\nIs alice likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "likes(george,car) :- wet(car).\nhappy(eve) :- likes(george,car).\nsibling(alice,eve) :- happy(eve).\nsunny :- sibling(alice,eve).\nbig(apple) :- sunny.\nsmall(ball) :- big(apple).\nsad(bob) :- small(ball).\ntall(carol) :- sad(bob).\nhungry(frank) :- tall(carol).\nhot :- hungry(frank).\nhungry(bob).\nlikes(carol,phone).\nsibling(frank,eve).\nlikes(george,bob).\nbig(ball).\nlikes(carol,car).\nwet(pencil).\nsad(george).\nlikes(carol,george).\nsibling(carol,bob).\nsibling(bob,george).\nlikes(frank,george).\nlikes(bob,book).\nsad(alice).\nlikes(george,apple).",
    "natural language": "You are given the following rules:\nIf car is wet, then george likes car.\nIf george likes car, then eve is happy.\nIf eve is happy, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then bob is sad.\nIf bob is sad, then carol is tall.\nIf carol is tall, then frank is hungry.\nIf frank is hungry, then it is hot.\n\nAnd the following facts:\ncar is wet.\nbob is hungry.\ncarol likes phone.\nfrank is a sibling of eve.\ngeorge likes bob.\nball is big.\ncarol likes car.\npencil is wet.\ngeorge is sad.\ncarol likes george.\ncarol is a sibling of bob.\nbob is a sibling of george.\nfrank likes george.\nbob likes book.\nalice is sad.\ngeorge likes apple.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould car is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sad(george).",
    "c": "likes(george,car) :- wet(car).\nhappy(eve) :- likes(george,car).\nsibling(alice,eve) :- happy(eve).\nsunny :- sibling(alice,eve).\nbig(apple) :- sunny.\nsmall(ball) :- big(apple).\nsad(bob) :- small(ball).\ntall(carol) :- sad(bob).\nhungry(frank) :- tall(carol).\nhot :- hungry(frank).\nwet(car).\nhungry(bob).\nlikes(carol,phone).\nsibling(frank,eve).\nlikes(george,bob).\nbig(ball).\nlikes(carol,car).\nwet(pencil).\nlikes(carol,george).\nsibling(carol,bob).\nsibling(bob,george).\nlikes(frank,george).\nlikes(bob,book).\nsad(alice).\nlikes(george,apple).",
    "natural language": "You are given the following rules:\nIf car is wet, then george likes car.\nIf george likes car, then eve is happy.\nIf eve is happy, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then bob is sad.\nIf bob is sad, then carol is tall.\nIf carol is tall, then frank is hungry.\nIf frank is hungry, then it is hot.\n\nAnd the following facts:\ncar is wet.\nbob is hungry.\ncarol likes phone.\nfrank is a sibling of eve.\ngeorge likes bob.\nball is big.\ncarol likes car.\npencil is wet.\ngeorge is sad.\ncarol likes george.\ncarol is a sibling of bob.\nbob is a sibling of george.\nfrank likes george.\nbob likes book.\nalice is sad.\ngeorge likes apple.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould george is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,phone).",
    "c": "likes(george,car) :- wet(car).\nhappy(eve) :- likes(george,car).\nsibling(alice,eve) :- happy(eve).\nsunny :- sibling(alice,eve).\nbig(apple) :- sunny.\nsmall(ball) :- big(apple).\nsad(bob) :- small(ball).\ntall(carol) :- sad(bob).\nhungry(frank) :- tall(carol).\nhot :- hungry(frank).\nwet(car).\nhungry(bob).\nsibling(frank,eve).\nlikes(george,bob).\nbig(ball).\nlikes(carol,car).\nwet(pencil).\nsad(george).\nlikes(carol,george).\nsibling(carol,bob).\nsibling(bob,george).\nlikes(frank,george).\nlikes(bob,book).\nsad(alice).\nlikes(george,apple).",
    "natural language": "You are given the following rules:\nIf car is wet, then george likes car.\nIf george likes car, then eve is happy.\nIf eve is happy, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then bob is sad.\nIf bob is sad, then carol is tall.\nIf carol is tall, then frank is hungry.\nIf frank is hungry, then it is hot.\n\nAnd the following facts:\ncar is wet.\nbob is hungry.\ncarol likes phone.\nfrank is a sibling of eve.\ngeorge likes bob.\nball is big.\ncarol likes car.\npencil is wet.\ngeorge is sad.\ncarol likes george.\ncarol is a sibling of bob.\nbob is a sibling of george.\nfrank likes george.\nbob likes book.\nalice is sad.\ngeorge likes apple.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould carol likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 10,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "friend(frank,bob) :- happy(bob).\nenemy(eve,eve) :- friend(frank,bob).\nsmall(phone) :- parent(frank,alice), sad(frank), enemy(frank,george).\nsibling(dave,george) :- owns(bob,car), sibling(bob,eve), sibling(dave,dave).\nsmall(ball) :- tall(eve).\nsibling(carol,george) :- dislikes(dave,pencil), happy(alice).\nenemy(bob,frank) :- tall(george), hot, dislikes(alice,eve).\nsibling(eve,bob) :- hot, happy(carol).\nenemy(dave,alice) :- hungry(dave), enemy(carol,dave).\nsibling(dave,bob) :- sibling(eve,dave), sibling(frank,dave).\nsad(eve) :- sad(frank), big(book).\nsad(dave) :- likes(bob,pencil), tall(dave).\nwet(apple) :- small(book), wet(book), wet(ball).\ncold :- cold, cold.\nhappy(bob).\nlikes(bob,phone).\nenemy(george,carol).\nsibling(dave,frank).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is a friend of bob.\nIf frank is a friend of bob, then eve is an enemy of eve.\nIf frank is a parent of alice and frank is sad and frank is an enemy of george, then phone is small.\nIf bob owns car and bob is a sibling of eve and dave is a sibling of dave, then dave is a sibling of george.\nIf eve is tall, then ball is small.\nIf dave dislikes pencil and alice is happy, then carol is a sibling of george.\nIf george is tall and it is hot and alice dislikes eve, then bob is an enemy of frank.\nIf it is hot and carol is happy, then eve is a sibling of bob.\nIf dave is hungry and carol is an enemy of dave, then dave is an enemy of alice.\nIf eve is a sibling of dave and frank is a sibling of dave, then dave is a sibling of bob.\nIf frank is sad and book is big, then eve is sad.\nIf bob likes pencil and dave is tall, then dave is sad.\nIf book is small and book is wet and ball is wet, then apple is wet.\nIf it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob likes phone.\ngeorge is an enemy of carol.\ndave is a sibling of frank.\n\nQUESTION:\nIs bob likes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "friend(frank,bob) :- happy(bob).\nenemy(eve,eve) :- friend(frank,bob).\nsmall(phone) :- parent(frank,alice), sad(frank), enemy(frank,george).\nsibling(dave,george) :- owns(bob,car), sibling(bob,eve), sibling(dave,dave).\nsmall(ball) :- tall(eve).\nsibling(carol,george) :- dislikes(dave,pencil), happy(alice).\nenemy(bob,frank) :- tall(george), hot, dislikes(alice,eve).\nsibling(eve,bob) :- hot, happy(carol).\nenemy(dave,alice) :- hungry(dave), enemy(carol,dave).\nsibling(dave,bob) :- sibling(eve,dave), sibling(frank,dave).\nsad(eve) :- sad(frank), big(book).\nsad(dave) :- likes(bob,pencil), tall(dave).\nwet(apple) :- small(book), wet(book), wet(ball).\ncold :- cold, cold.\nhappy(bob).\nlikes(bob,phone).\nenemy(george,carol).\nsibling(dave,frank).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is a friend of bob.\nIf frank is a friend of bob, then eve is an enemy of eve.\nIf frank is a parent of alice and frank is sad and frank is an enemy of george, then phone is small.\nIf bob owns car and bob is a sibling of eve and dave is a sibling of dave, then dave is a sibling of george.\nIf eve is tall, then ball is small.\nIf dave dislikes pencil and alice is happy, then carol is a sibling of george.\nIf george is tall and it is hot and alice dislikes eve, then bob is an enemy of frank.\nIf it is hot and carol is happy, then eve is a sibling of bob.\nIf dave is hungry and carol is an enemy of dave, then dave is an enemy of alice.\nIf eve is a sibling of dave and frank is a sibling of dave, then dave is a sibling of bob.\nIf frank is sad and book is big, then eve is sad.\nIf bob likes pencil and dave is tall, then dave is sad.\nIf book is small and book is wet and ball is wet, then apple is wet.\nIf it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob likes phone.\ngeorge is an enemy of carol.\ndave is a sibling of frank.\n\nQUESTION:\nIs bob is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,frank).",
    "c": "friend(frank,bob) :- happy(bob).\nenemy(eve,eve) :- friend(frank,bob).\nsmall(phone) :- parent(frank,alice), sad(frank), enemy(frank,george).\nsibling(dave,george) :- owns(bob,car), sibling(bob,eve), sibling(dave,dave).\nsmall(ball) :- tall(eve).\nsibling(carol,george) :- dislikes(dave,pencil), happy(alice).\nenemy(bob,frank) :- tall(george), hot, dislikes(alice,eve).\nsibling(eve,bob) :- hot, happy(carol).\nenemy(dave,alice) :- hungry(dave), enemy(carol,dave).\nsibling(dave,bob) :- sibling(eve,dave), sibling(frank,dave).\nsad(eve) :- sad(frank), big(book).\nsad(dave) :- likes(bob,pencil), tall(dave).\nwet(apple) :- small(book), wet(book), wet(ball).\ncold :- cold, cold.\nhappy(bob).\nlikes(bob,phone).\nenemy(george,carol).\nsibling(dave,frank).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is a friend of bob.\nIf frank is a friend of bob, then eve is an enemy of eve.\nIf frank is a parent of alice and frank is sad and frank is an enemy of george, then phone is small.\nIf bob owns car and bob is a sibling of eve and dave is a sibling of dave, then dave is a sibling of george.\nIf eve is tall, then ball is small.\nIf dave dislikes pencil and alice is happy, then carol is a sibling of george.\nIf george is tall and it is hot and alice dislikes eve, then bob is an enemy of frank.\nIf it is hot and carol is happy, then eve is a sibling of bob.\nIf dave is hungry and carol is an enemy of dave, then dave is an enemy of alice.\nIf eve is a sibling of dave and frank is a sibling of dave, then dave is a sibling of bob.\nIf frank is sad and book is big, then eve is sad.\nIf bob likes pencil and dave is tall, then dave is sad.\nIf book is small and book is wet and ball is wet, then apple is wet.\nIf it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob likes phone.\ngeorge is an enemy of carol.\ndave is a sibling of frank.\n\nQUESTION:\nIs dave is a sibling of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,ball).",
    "c": "friend(frank,bob) :- happy(bob).\nenemy(eve,eve) :- friend(frank,bob).\nsmall(phone) :- parent(frank,alice), sad(frank), enemy(frank,george).\nsibling(dave,george) :- owns(bob,car), sibling(bob,eve), sibling(dave,dave).\nsmall(ball) :- tall(eve).\nsibling(carol,george) :- dislikes(dave,pencil), happy(alice).\nenemy(bob,frank) :- tall(george), hot, dislikes(alice,eve).\nsibling(eve,bob) :- hot, happy(carol).\nenemy(dave,alice) :- hungry(dave), enemy(carol,dave).\nsibling(dave,bob) :- sibling(eve,dave), sibling(frank,dave).\nsad(eve) :- sad(frank), big(book).\nsad(dave) :- likes(bob,pencil), tall(dave).\nwet(apple) :- small(book), wet(book), wet(ball).\ncold :- cold, cold.\nhappy(bob).\nlikes(bob,phone).\nenemy(george,carol).\nsibling(dave,frank).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is a friend of bob.\nIf frank is a friend of bob, then eve is an enemy of eve.\nIf frank is a parent of alice and frank is sad and frank is an enemy of george, then phone is small.\nIf bob owns car and bob is a sibling of eve and dave is a sibling of dave, then dave is a sibling of george.\nIf eve is tall, then ball is small.\nIf dave dislikes pencil and alice is happy, then carol is a sibling of george.\nIf george is tall and it is hot and alice dislikes eve, then bob is an enemy of frank.\nIf it is hot and carol is happy, then eve is a sibling of bob.\nIf dave is hungry and carol is an enemy of dave, then dave is an enemy of alice.\nIf eve is a sibling of dave and frank is a sibling of dave, then dave is a sibling of bob.\nIf frank is sad and book is big, then eve is sad.\nIf bob likes pencil and dave is tall, then dave is sad.\nIf book is small and book is wet and ball is wet, then apple is wet.\nIf it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob likes phone.\ngeorge is an enemy of carol.\ndave is a sibling of frank.\n\nQUESTION:\nIs frank dislikes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(bob).",
    "c": "friend(frank,bob) :- happy(bob).\nenemy(eve,eve) :- friend(frank,bob).\nsmall(phone) :- parent(frank,alice), sad(frank), enemy(frank,george).\nsibling(dave,george) :- owns(bob,car), sibling(bob,eve), sibling(dave,dave).\nsmall(ball) :- tall(eve).\nsibling(carol,george) :- dislikes(dave,pencil), happy(alice).\nenemy(bob,frank) :- tall(george), hot, dislikes(alice,eve).\nsibling(eve,bob) :- hot, happy(carol).\nenemy(dave,alice) :- hungry(dave), enemy(carol,dave).\nsibling(dave,bob) :- sibling(eve,dave), sibling(frank,dave).\nsad(eve) :- sad(frank), big(book).\nsad(dave) :- likes(bob,pencil), tall(dave).\nwet(apple) :- small(book), wet(book), wet(ball).\ncold :- cold, cold.\nhappy(bob).\nlikes(bob,phone).\nenemy(george,carol).\nsibling(dave,frank).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is a friend of bob.\nIf frank is a friend of bob, then eve is an enemy of eve.\nIf frank is a parent of alice and frank is sad and frank is an enemy of george, then phone is small.\nIf bob owns car and bob is a sibling of eve and dave is a sibling of dave, then dave is a sibling of george.\nIf eve is tall, then ball is small.\nIf dave dislikes pencil and alice is happy, then carol is a sibling of george.\nIf george is tall and it is hot and alice dislikes eve, then bob is an enemy of frank.\nIf it is hot and carol is happy, then eve is a sibling of bob.\nIf dave is hungry and carol is an enemy of dave, then dave is an enemy of alice.\nIf eve is a sibling of dave and frank is a sibling of dave, then dave is a sibling of bob.\nIf frank is sad and book is big, then eve is sad.\nIf bob likes pencil and dave is tall, then dave is sad.\nIf book is small and book is wet and ball is wet, then apple is wet.\nIf it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob likes phone.\ngeorge is an enemy of carol.\ndave is a sibling of frank.\n\nQUESTION:\nIs bob is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "friend(frank,bob) :- happy(bob).\nenemy(eve,eve) :- friend(frank,bob).\nsmall(phone) :- parent(frank,alice), sad(frank), enemy(frank,george).\nsibling(dave,george) :- owns(bob,car), sibling(bob,eve), sibling(dave,dave).\nsmall(ball) :- tall(eve).\nsibling(carol,george) :- dislikes(dave,pencil), happy(alice).\nenemy(bob,frank) :- tall(george), hot, dislikes(alice,eve).\nsibling(eve,bob) :- hot, happy(carol).\nenemy(dave,alice) :- hungry(dave), enemy(carol,dave).\nsibling(dave,bob) :- sibling(eve,dave), sibling(frank,dave).\nsad(eve) :- sad(frank), big(book).\nsad(dave) :- likes(bob,pencil), tall(dave).\nwet(apple) :- small(book), wet(book), wet(ball).\ncold :- cold, cold.\nlikes(bob,phone).\nenemy(george,carol).\nsibling(dave,frank).",
    "natural language": "You are given the following rules:\nIf bob is happy, then frank is a friend of bob.\nIf frank is a friend of bob, then eve is an enemy of eve.\nIf frank is a parent of alice and frank is sad and frank is an enemy of george, then phone is small.\nIf bob owns car and bob is a sibling of eve and dave is a sibling of dave, then dave is a sibling of george.\nIf eve is tall, then ball is small.\nIf dave dislikes pencil and alice is happy, then carol is a sibling of george.\nIf george is tall and it is hot and alice dislikes eve, then bob is an enemy of frank.\nIf it is hot and carol is happy, then eve is a sibling of bob.\nIf dave is hungry and carol is an enemy of dave, then dave is an enemy of alice.\nIf eve is a sibling of dave and frank is a sibling of dave, then dave is a sibling of bob.\nIf frank is sad and book is big, then eve is sad.\nIf bob likes pencil and dave is tall, then dave is sad.\nIf book is small and book is wet and ball is wet, then apple is wet.\nIf it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob likes phone.\ngeorge is an enemy of carol.\ndave is a sibling of frank.\n\nOBSERVATION: eve is an enemy of eve is true.\n\nQUESTION:\nCould bob is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "friend(frank,bob) :- happy(bob).\nenemy(eve,eve) :- friend(frank,bob).\nsmall(phone) :- parent(frank,alice), sad(frank), enemy(frank,george).\nsibling(dave,george) :- owns(bob,car), sibling(bob,eve), sibling(dave,dave).\nsmall(ball) :- tall(eve).\nsibling(carol,george) :- dislikes(dave,pencil), happy(alice).\nenemy(bob,frank) :- tall(george), hot, dislikes(alice,eve).\nsibling(eve,bob) :- hot, happy(carol).\nenemy(dave,alice) :- hungry(dave), enemy(carol,dave).\nsibling(dave,bob) :- sibling(eve,dave), sibling(frank,dave).\nsad(eve) :- sad(frank), big(book).\nsad(dave) :- likes(bob,pencil), tall(dave).\nwet(apple) :- small(book), wet(book), wet(ball).\ncold :- cold, cold.\nhappy(bob).\nenemy(george,carol).\nsibling(dave,frank).",
    "natural language": "You are given the following rules:\nIf bob is happy, then frank is a friend of bob.\nIf frank is a friend of bob, then eve is an enemy of eve.\nIf frank is a parent of alice and frank is sad and frank is an enemy of george, then phone is small.\nIf bob owns car and bob is a sibling of eve and dave is a sibling of dave, then dave is a sibling of george.\nIf eve is tall, then ball is small.\nIf dave dislikes pencil and alice is happy, then carol is a sibling of george.\nIf george is tall and it is hot and alice dislikes eve, then bob is an enemy of frank.\nIf it is hot and carol is happy, then eve is a sibling of bob.\nIf dave is hungry and carol is an enemy of dave, then dave is an enemy of alice.\nIf eve is a sibling of dave and frank is a sibling of dave, then dave is a sibling of bob.\nIf frank is sad and book is big, then eve is sad.\nIf bob likes pencil and dave is tall, then dave is sad.\nIf book is small and book is wet and ball is wet, then apple is wet.\nIf it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob likes phone.\ngeorge is an enemy of carol.\ndave is a sibling of frank.\n\nOBSERVATION: eve is an enemy of eve is true.\n\nQUESTION:\nCould bob likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(george,carol).",
    "c": "friend(frank,bob) :- happy(bob).\nenemy(eve,eve) :- friend(frank,bob).\nsmall(phone) :- parent(frank,alice), sad(frank), enemy(frank,george).\nsibling(dave,george) :- owns(bob,car), sibling(bob,eve), sibling(dave,dave).\nsmall(ball) :- tall(eve).\nsibling(carol,george) :- dislikes(dave,pencil), happy(alice).\nenemy(bob,frank) :- tall(george), hot, dislikes(alice,eve).\nsibling(eve,bob) :- hot, happy(carol).\nenemy(dave,alice) :- hungry(dave), enemy(carol,dave).\nsibling(dave,bob) :- sibling(eve,dave), sibling(frank,dave).\nsad(eve) :- sad(frank), big(book).\nsad(dave) :- likes(bob,pencil), tall(dave).\nwet(apple) :- small(book), wet(book), wet(ball).\ncold :- cold, cold.\nhappy(bob).\nlikes(bob,phone).\nsibling(dave,frank).",
    "natural language": "You are given the following rules:\nIf bob is happy, then frank is a friend of bob.\nIf frank is a friend of bob, then eve is an enemy of eve.\nIf frank is a parent of alice and frank is sad and frank is an enemy of george, then phone is small.\nIf bob owns car and bob is a sibling of eve and dave is a sibling of dave, then dave is a sibling of george.\nIf eve is tall, then ball is small.\nIf dave dislikes pencil and alice is happy, then carol is a sibling of george.\nIf george is tall and it is hot and alice dislikes eve, then bob is an enemy of frank.\nIf it is hot and carol is happy, then eve is a sibling of bob.\nIf dave is hungry and carol is an enemy of dave, then dave is an enemy of alice.\nIf eve is a sibling of dave and frank is a sibling of dave, then dave is a sibling of bob.\nIf frank is sad and book is big, then eve is sad.\nIf bob likes pencil and dave is tall, then dave is sad.\nIf book is small and book is wet and ball is wet, then apple is wet.\nIf it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob likes phone.\ngeorge is an enemy of carol.\ndave is a sibling of frank.\n\nOBSERVATION: eve is an enemy of eve is true.\n\nQUESTION:\nCould george is an enemy of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,carol).",
    "c": "happy(george) :- sibling(george,frank).\nsad(alice) :- happy(george).\nhungry(george) :- sibling(dave,frank).\nhungry(eve) :- likes(dave,book), wet(car), friend(frank,carol).\nhungry(dave) :- wet(phone).\nsmall(ball) :- tall(frank), parent(george,frank), parent(bob,eve).\nsmall(apple) :- hungry(eve).\nlikes(eve,alice) :- sad(eve), wet(phone).\nlikes(george,car) :- tall(dave).\nsunny :- hungry(dave), sunny, tall(eve).\nhot :- enemy(dave,dave), sunny.\nwet(phone) :- cold, owns(bob,pencil).\nhot :- happy(carol), likes(carol,car), enemy(frank,bob).\nwet(ball) :- sunny, hot.\nsibling(george,frank).\nsibling(alice,carol).\nhappy(frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of frank, then george is happy.\nIf george is happy, then alice is sad.\nIf dave is a sibling of frank, then george is hungry.\nIf dave likes book and car is wet and frank is a friend of carol, then eve is hungry.\nIf phone is wet, then dave is hungry.\nIf frank is tall and george is a parent of frank and bob is a parent of eve, then ball is small.\nIf eve is hungry, then apple is small.\nIf eve is sad and phone is wet, then eve likes alice.\nIf dave is tall, then george likes car.\nIf dave is hungry and it is sunny and eve is tall, then it is sunny.\nIf dave is an enemy of dave and it is sunny, then it is hot.\nIf it is cold and bob owns pencil, then phone is wet.\nIf carol is happy and carol likes car and frank is an enemy of bob, then it is hot.\nIf it is sunny and it is hot, then ball is wet.\n\nAnd the following facts:\ngeorge is a sibling of frank.\nalice is a sibling of carol.\nfrank is happy.\nalice is an enemy of carol.\n\nQUESTION:\nIs alice is an enemy of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(george).",
    "c": "happy(george) :- sibling(george,frank).\nsad(alice) :- happy(george).\nhungry(george) :- sibling(dave,frank).\nhungry(eve) :- likes(dave,book), wet(car), friend(frank,carol).\nhungry(dave) :- wet(phone).\nsmall(ball) :- tall(frank), parent(george,frank), parent(bob,eve).\nsmall(apple) :- hungry(eve).\nlikes(eve,alice) :- sad(eve), wet(phone).\nlikes(george,car) :- tall(dave).\nsunny :- hungry(dave), sunny, tall(eve).\nhot :- enemy(dave,dave), sunny.\nwet(phone) :- cold, owns(bob,pencil).\nhot :- happy(carol), likes(carol,car), enemy(frank,bob).\nwet(ball) :- sunny, hot.\nsibling(george,frank).\nsibling(alice,carol).\nhappy(frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of frank, then george is happy.\nIf george is happy, then alice is sad.\nIf dave is a sibling of frank, then george is hungry.\nIf dave likes book and car is wet and frank is a friend of carol, then eve is hungry.\nIf phone is wet, then dave is hungry.\nIf frank is tall and george is a parent of frank and bob is a parent of eve, then ball is small.\nIf eve is hungry, then apple is small.\nIf eve is sad and phone is wet, then eve likes alice.\nIf dave is tall, then george likes car.\nIf dave is hungry and it is sunny and eve is tall, then it is sunny.\nIf dave is an enemy of dave and it is sunny, then it is hot.\nIf it is cold and bob owns pencil, then phone is wet.\nIf carol is happy and carol likes car and frank is an enemy of bob, then it is hot.\nIf it is sunny and it is hot, then ball is wet.\n\nAnd the following facts:\ngeorge is a sibling of frank.\nalice is a sibling of carol.\nfrank is happy.\nalice is an enemy of carol.\n\nQUESTION:\nIs george is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(alice).",
    "c": "happy(george) :- sibling(george,frank).\nsad(alice) :- happy(george).\nhungry(george) :- sibling(dave,frank).\nhungry(eve) :- likes(dave,book), wet(car), friend(frank,carol).\nhungry(dave) :- wet(phone).\nsmall(ball) :- tall(frank), parent(george,frank), parent(bob,eve).\nsmall(apple) :- hungry(eve).\nlikes(eve,alice) :- sad(eve), wet(phone).\nlikes(george,car) :- tall(dave).\nsunny :- hungry(dave), sunny, tall(eve).\nhot :- enemy(dave,dave), sunny.\nwet(phone) :- cold, owns(bob,pencil).\nhot :- happy(carol), likes(carol,car), enemy(frank,bob).\nwet(ball) :- sunny, hot.\nsibling(george,frank).\nsibling(alice,carol).\nhappy(frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of frank, then george is happy.\nIf george is happy, then alice is sad.\nIf dave is a sibling of frank, then george is hungry.\nIf dave likes book and car is wet and frank is a friend of carol, then eve is hungry.\nIf phone is wet, then dave is hungry.\nIf frank is tall and george is a parent of frank and bob is a parent of eve, then ball is small.\nIf eve is hungry, then apple is small.\nIf eve is sad and phone is wet, then eve likes alice.\nIf dave is tall, then george likes car.\nIf dave is hungry and it is sunny and eve is tall, then it is sunny.\nIf dave is an enemy of dave and it is sunny, then it is hot.\nIf it is cold and bob owns pencil, then phone is wet.\nIf carol is happy and carol likes car and frank is an enemy of bob, then it is hot.\nIf it is sunny and it is hot, then ball is wet.\n\nAnd the following facts:\ngeorge is a sibling of frank.\nalice is a sibling of carol.\nfrank is happy.\nalice is an enemy of carol.\n\nQUESTION:\nIs alice is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,apple).",
    "c": "happy(george) :- sibling(george,frank).\nsad(alice) :- happy(george).\nhungry(george) :- sibling(dave,frank).\nhungry(eve) :- likes(dave,book), wet(car), friend(frank,carol).\nhungry(dave) :- wet(phone).\nsmall(ball) :- tall(frank), parent(george,frank), parent(bob,eve).\nsmall(apple) :- hungry(eve).\nlikes(eve,alice) :- sad(eve), wet(phone).\nlikes(george,car) :- tall(dave).\nsunny :- hungry(dave), sunny, tall(eve).\nhot :- enemy(dave,dave), sunny.\nwet(phone) :- cold, owns(bob,pencil).\nhot :- happy(carol), likes(carol,car), enemy(frank,bob).\nwet(ball) :- sunny, hot.\nsibling(george,frank).\nsibling(alice,carol).\nhappy(frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of frank, then george is happy.\nIf george is happy, then alice is sad.\nIf dave is a sibling of frank, then george is hungry.\nIf dave likes book and car is wet and frank is a friend of carol, then eve is hungry.\nIf phone is wet, then dave is hungry.\nIf frank is tall and george is a parent of frank and bob is a parent of eve, then ball is small.\nIf eve is hungry, then apple is small.\nIf eve is sad and phone is wet, then eve likes alice.\nIf dave is tall, then george likes car.\nIf dave is hungry and it is sunny and eve is tall, then it is sunny.\nIf dave is an enemy of dave and it is sunny, then it is hot.\nIf it is cold and bob owns pencil, then phone is wet.\nIf carol is happy and carol likes car and frank is an enemy of bob, then it is hot.\nIf it is sunny and it is hot, then ball is wet.\n\nAnd the following facts:\ngeorge is a sibling of frank.\nalice is a sibling of carol.\nfrank is happy.\nalice is an enemy of carol.\n\nQUESTION:\nIs alice likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(dave).",
    "c": "happy(george) :- sibling(george,frank).\nsad(alice) :- happy(george).\nhungry(george) :- sibling(dave,frank).\nhungry(eve) :- likes(dave,book), wet(car), friend(frank,carol).\nhungry(dave) :- wet(phone).\nsmall(ball) :- tall(frank), parent(george,frank), parent(bob,eve).\nsmall(apple) :- hungry(eve).\nlikes(eve,alice) :- sad(eve), wet(phone).\nlikes(george,car) :- tall(dave).\nsunny :- hungry(dave), sunny, tall(eve).\nhot :- enemy(dave,dave), sunny.\nwet(phone) :- cold, owns(bob,pencil).\nhot :- happy(carol), likes(carol,car), enemy(frank,bob).\nwet(ball) :- sunny, hot.\nsibling(george,frank).\nsibling(alice,carol).\nhappy(frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of frank, then george is happy.\nIf george is happy, then alice is sad.\nIf dave is a sibling of frank, then george is hungry.\nIf dave likes book and car is wet and frank is a friend of carol, then eve is hungry.\nIf phone is wet, then dave is hungry.\nIf frank is tall and george is a parent of frank and bob is a parent of eve, then ball is small.\nIf eve is hungry, then apple is small.\nIf eve is sad and phone is wet, then eve likes alice.\nIf dave is tall, then george likes car.\nIf dave is hungry and it is sunny and eve is tall, then it is sunny.\nIf dave is an enemy of dave and it is sunny, then it is hot.\nIf it is cold and bob owns pencil, then phone is wet.\nIf carol is happy and carol likes car and frank is an enemy of bob, then it is hot.\nIf it is sunny and it is hot, then ball is wet.\n\nAnd the following facts:\ngeorge is a sibling of frank.\nalice is a sibling of carol.\nfrank is happy.\nalice is an enemy of carol.\n\nQUESTION:\nIs dave is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,frank).",
    "c": "happy(george) :- sibling(george,frank).\nsad(alice) :- happy(george).\nhungry(george) :- sibling(dave,frank).\nhungry(eve) :- likes(dave,book), wet(car), friend(frank,carol).\nhungry(dave) :- wet(phone).\nsmall(ball) :- tall(frank), parent(george,frank), parent(bob,eve).\nsmall(apple) :- hungry(eve).\nlikes(eve,alice) :- sad(eve), wet(phone).\nlikes(george,car) :- tall(dave).\nsunny :- hungry(dave), sunny, tall(eve).\nhot :- enemy(dave,dave), sunny.\nwet(phone) :- cold, owns(bob,pencil).\nhot :- happy(carol), likes(carol,car), enemy(frank,bob).\nwet(ball) :- sunny, hot.\nsibling(alice,carol).\nhappy(frank).\nenemy(alice,carol).",
    "natural language": "You are given the following rules:\nIf george is a sibling of frank, then george is happy.\nIf george is happy, then alice is sad.\nIf dave is a sibling of frank, then george is hungry.\nIf dave likes book and car is wet and frank is a friend of carol, then eve is hungry.\nIf phone is wet, then dave is hungry.\nIf frank is tall and george is a parent of frank and bob is a parent of eve, then ball is small.\nIf eve is hungry, then apple is small.\nIf eve is sad and phone is wet, then eve likes alice.\nIf dave is tall, then george likes car.\nIf dave is hungry and it is sunny and eve is tall, then it is sunny.\nIf dave is an enemy of dave and it is sunny, then it is hot.\nIf it is cold and bob owns pencil, then phone is wet.\nIf carol is happy and carol likes car and frank is an enemy of bob, then it is hot.\nIf it is sunny and it is hot, then ball is wet.\n\nAnd the following facts:\ngeorge is a sibling of frank.\nalice is a sibling of carol.\nfrank is happy.\nalice is an enemy of carol.\n\nOBSERVATION: alice is sad is true.\n\nQUESTION:\nCould george is a sibling of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,carol).",
    "c": "happy(george) :- sibling(george,frank).\nsad(alice) :- happy(george).\nhungry(george) :- sibling(dave,frank).\nhungry(eve) :- likes(dave,book), wet(car), friend(frank,carol).\nhungry(dave) :- wet(phone).\nsmall(ball) :- tall(frank), parent(george,frank), parent(bob,eve).\nsmall(apple) :- hungry(eve).\nlikes(eve,alice) :- sad(eve), wet(phone).\nlikes(george,car) :- tall(dave).\nsunny :- hungry(dave), sunny, tall(eve).\nhot :- enemy(dave,dave), sunny.\nwet(phone) :- cold, owns(bob,pencil).\nhot :- happy(carol), likes(carol,car), enemy(frank,bob).\nwet(ball) :- sunny, hot.\nsibling(george,frank).\nhappy(frank).\nenemy(alice,carol).",
    "natural language": "You are given the following rules:\nIf george is a sibling of frank, then george is happy.\nIf george is happy, then alice is sad.\nIf dave is a sibling of frank, then george is hungry.\nIf dave likes book and car is wet and frank is a friend of carol, then eve is hungry.\nIf phone is wet, then dave is hungry.\nIf frank is tall and george is a parent of frank and bob is a parent of eve, then ball is small.\nIf eve is hungry, then apple is small.\nIf eve is sad and phone is wet, then eve likes alice.\nIf dave is tall, then george likes car.\nIf dave is hungry and it is sunny and eve is tall, then it is sunny.\nIf dave is an enemy of dave and it is sunny, then it is hot.\nIf it is cold and bob owns pencil, then phone is wet.\nIf carol is happy and carol likes car and frank is an enemy of bob, then it is hot.\nIf it is sunny and it is hot, then ball is wet.\n\nAnd the following facts:\ngeorge is a sibling of frank.\nalice is a sibling of carol.\nfrank is happy.\nalice is an enemy of carol.\n\nOBSERVATION: alice is sad is true.\n\nQUESTION:\nCould alice is a sibling of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "happy(george) :- sibling(george,frank).\nsad(alice) :- happy(george).\nhungry(george) :- sibling(dave,frank).\nhungry(eve) :- likes(dave,book), wet(car), friend(frank,carol).\nhungry(dave) :- wet(phone).\nsmall(ball) :- tall(frank), parent(george,frank), parent(bob,eve).\nsmall(apple) :- hungry(eve).\nlikes(eve,alice) :- sad(eve), wet(phone).\nlikes(george,car) :- tall(dave).\nsunny :- hungry(dave), sunny, tall(eve).\nhot :- enemy(dave,dave), sunny.\nwet(phone) :- cold, owns(bob,pencil).\nhot :- happy(carol), likes(carol,car), enemy(frank,bob).\nwet(ball) :- sunny, hot.\nsibling(george,frank).\nsibling(alice,carol).\nenemy(alice,carol).",
    "natural language": "You are given the following rules:\nIf george is a sibling of frank, then george is happy.\nIf george is happy, then alice is sad.\nIf dave is a sibling of frank, then george is hungry.\nIf dave likes book and car is wet and frank is a friend of carol, then eve is hungry.\nIf phone is wet, then dave is hungry.\nIf frank is tall and george is a parent of frank and bob is a parent of eve, then ball is small.\nIf eve is hungry, then apple is small.\nIf eve is sad and phone is wet, then eve likes alice.\nIf dave is tall, then george likes car.\nIf dave is hungry and it is sunny and eve is tall, then it is sunny.\nIf dave is an enemy of dave and it is sunny, then it is hot.\nIf it is cold and bob owns pencil, then phone is wet.\nIf carol is happy and carol likes car and frank is an enemy of bob, then it is hot.\nIf it is sunny and it is hot, then ball is wet.\n\nAnd the following facts:\ngeorge is a sibling of frank.\nalice is a sibling of carol.\nfrank is happy.\nalice is an enemy of carol.\n\nOBSERVATION: alice is sad is true.\n\nQUESTION:\nCould frank is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "cold.",
    "c": "cold :- happy(frank).\nwet(phone) :- cold.\nfriend(carol,alice) :- wet(phone).\ndislikes(eve,phone) :- friend(carol,alice).\nowns(alice,pencil) :- owns(bob,book), small(phone).\nsibling(frank,george) :- cold, sibling(dave,carol), sunny.\nsibling(dave,bob) :- sibling(george,george), wet(car), sibling(george,eve).\nbig(car) :- cold, owns(bob,phone), big(car).\nbig(apple) :- hot, cold.\ntall(eve) :- sunny, hungry(alice), tall(eve).\nowns(frank,ball) :- wet(car), wet(ball), sunny.\ntall(dave) :- enemy(bob,frank), dislikes(george,eve).\nsmall(phone) :- wet(car), small(pencil), small(ball).\nfriend(carol,eve) :- friend(bob,george), cold.\nhappy(frank).\nenemy(bob,eve).\ndislikes(george,alice).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then it is cold.\nIf it is cold, then phone is wet.\nIf phone is wet, then carol is a friend of alice.\nIf carol is a friend of alice, then eve dislikes phone.\nIf bob owns book and phone is small, then alice owns pencil.\nIf it is cold and dave is a sibling of carol and it is sunny, then frank is a sibling of george.\nIf george is a sibling of george and car is wet and george is a sibling of eve, then dave is a sibling of bob.\nIf it is cold and bob owns phone and car is big, then car is big.\nIf it is hot and it is cold, then apple is big.\nIf it is sunny and alice is hungry and eve is tall, then eve is tall.\nIf car is wet and ball is wet and it is sunny, then frank owns ball.\nIf bob is an enemy of frank and george dislikes eve, then dave is tall.\nIf car is wet and pencil is small and ball is small, then phone is small.\nIf bob is a friend of george and it is cold, then carol is a friend of eve.\n\nAnd the following facts:\nfrank is happy.\nbob is an enemy of eve.\ngeorge dislikes alice.\nphone is small.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "cold :- happy(frank).\nwet(phone) :- cold.\nfriend(carol,alice) :- wet(phone).\ndislikes(eve,phone) :- friend(carol,alice).\nowns(alice,pencil) :- owns(bob,book), small(phone).\nsibling(frank,george) :- cold, sibling(dave,carol), sunny.\nsibling(dave,bob) :- sibling(george,george), wet(car), sibling(george,eve).\nbig(car) :- cold, owns(bob,phone), big(car).\nbig(apple) :- hot, cold.\ntall(eve) :- sunny, hungry(alice), tall(eve).\nowns(frank,ball) :- wet(car), wet(ball), sunny.\ntall(dave) :- enemy(bob,frank), dislikes(george,eve).\nsmall(phone) :- wet(car), small(pencil), small(ball).\nfriend(carol,eve) :- friend(bob,george), cold.\nhappy(frank).\nenemy(bob,eve).\ndislikes(george,alice).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then it is cold.\nIf it is cold, then phone is wet.\nIf phone is wet, then carol is a friend of alice.\nIf carol is a friend of alice, then eve dislikes phone.\nIf bob owns book and phone is small, then alice owns pencil.\nIf it is cold and dave is a sibling of carol and it is sunny, then frank is a sibling of george.\nIf george is a sibling of george and car is wet and george is a sibling of eve, then dave is a sibling of bob.\nIf it is cold and bob owns phone and car is big, then car is big.\nIf it is hot and it is cold, then apple is big.\nIf it is sunny and alice is hungry and eve is tall, then eve is tall.\nIf car is wet and ball is wet and it is sunny, then frank owns ball.\nIf bob is an enemy of frank and george dislikes eve, then dave is tall.\nIf car is wet and pencil is small and ball is small, then phone is small.\nIf bob is a friend of george and it is cold, then carol is a friend of eve.\n\nAnd the following facts:\nfrank is happy.\nbob is an enemy of eve.\ngeorge dislikes alice.\nphone is small.\n\nQUESTION:\nIs phone is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,eve).",
    "c": "cold :- happy(frank).\nwet(phone) :- cold.\nfriend(carol,alice) :- wet(phone).\ndislikes(eve,phone) :- friend(carol,alice).\nowns(alice,pencil) :- owns(bob,book), small(phone).\nsibling(frank,george) :- cold, sibling(dave,carol), sunny.\nsibling(dave,bob) :- sibling(george,george), wet(car), sibling(george,eve).\nbig(car) :- cold, owns(bob,phone), big(car).\nbig(apple) :- hot, cold.\ntall(eve) :- sunny, hungry(alice), tall(eve).\nowns(frank,ball) :- wet(car), wet(ball), sunny.\ntall(dave) :- enemy(bob,frank), dislikes(george,eve).\nsmall(phone) :- wet(car), small(pencil), small(ball).\nfriend(carol,eve) :- friend(bob,george), cold.\nhappy(frank).\nenemy(bob,eve).\ndislikes(george,alice).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then it is cold.\nIf it is cold, then phone is wet.\nIf phone is wet, then carol is a friend of alice.\nIf carol is a friend of alice, then eve dislikes phone.\nIf bob owns book and phone is small, then alice owns pencil.\nIf it is cold and dave is a sibling of carol and it is sunny, then frank is a sibling of george.\nIf george is a sibling of george and car is wet and george is a sibling of eve, then dave is a sibling of bob.\nIf it is cold and bob owns phone and car is big, then car is big.\nIf it is hot and it is cold, then apple is big.\nIf it is sunny and alice is hungry and eve is tall, then eve is tall.\nIf car is wet and ball is wet and it is sunny, then frank owns ball.\nIf bob is an enemy of frank and george dislikes eve, then dave is tall.\nIf car is wet and pencil is small and ball is small, then phone is small.\nIf bob is a friend of george and it is cold, then carol is a friend of eve.\n\nAnd the following facts:\nfrank is happy.\nbob is an enemy of eve.\ngeorge dislikes alice.\nphone is small.\n\nQUESTION:\nIs bob is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,carol).",
    "c": "cold :- happy(frank).\nwet(phone) :- cold.\nfriend(carol,alice) :- wet(phone).\ndislikes(eve,phone) :- friend(carol,alice).\nowns(alice,pencil) :- owns(bob,book), small(phone).\nsibling(frank,george) :- cold, sibling(dave,carol), sunny.\nsibling(dave,bob) :- sibling(george,george), wet(car), sibling(george,eve).\nbig(car) :- cold, owns(bob,phone), big(car).\nbig(apple) :- hot, cold.\ntall(eve) :- sunny, hungry(alice), tall(eve).\nowns(frank,ball) :- wet(car), wet(ball), sunny.\ntall(dave) :- enemy(bob,frank), dislikes(george,eve).\nsmall(phone) :- wet(car), small(pencil), small(ball).\nfriend(carol,eve) :- friend(bob,george), cold.\nhappy(frank).\nenemy(bob,eve).\ndislikes(george,alice).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then it is cold.\nIf it is cold, then phone is wet.\nIf phone is wet, then carol is a friend of alice.\nIf carol is a friend of alice, then eve dislikes phone.\nIf bob owns book and phone is small, then alice owns pencil.\nIf it is cold and dave is a sibling of carol and it is sunny, then frank is a sibling of george.\nIf george is a sibling of george and car is wet and george is a sibling of eve, then dave is a sibling of bob.\nIf it is cold and bob owns phone and car is big, then car is big.\nIf it is hot and it is cold, then apple is big.\nIf it is sunny and alice is hungry and eve is tall, then eve is tall.\nIf car is wet and ball is wet and it is sunny, then frank owns ball.\nIf bob is an enemy of frank and george dislikes eve, then dave is tall.\nIf car is wet and pencil is small and ball is small, then phone is small.\nIf bob is a friend of george and it is cold, then carol is a friend of eve.\n\nAnd the following facts:\nfrank is happy.\nbob is an enemy of eve.\ngeorge dislikes alice.\nphone is small.\n\nQUESTION:\nIs eve is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,book).",
    "c": "cold :- happy(frank).\nwet(phone) :- cold.\nfriend(carol,alice) :- wet(phone).\ndislikes(eve,phone) :- friend(carol,alice).\nowns(alice,pencil) :- owns(bob,book), small(phone).\nsibling(frank,george) :- cold, sibling(dave,carol), sunny.\nsibling(dave,bob) :- sibling(george,george), wet(car), sibling(george,eve).\nbig(car) :- cold, owns(bob,phone), big(car).\nbig(apple) :- hot, cold.\ntall(eve) :- sunny, hungry(alice), tall(eve).\nowns(frank,ball) :- wet(car), wet(ball), sunny.\ntall(dave) :- enemy(bob,frank), dislikes(george,eve).\nsmall(phone) :- wet(car), small(pencil), small(ball).\nfriend(carol,eve) :- friend(bob,george), cold.\nhappy(frank).\nenemy(bob,eve).\ndislikes(george,alice).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then it is cold.\nIf it is cold, then phone is wet.\nIf phone is wet, then carol is a friend of alice.\nIf carol is a friend of alice, then eve dislikes phone.\nIf bob owns book and phone is small, then alice owns pencil.\nIf it is cold and dave is a sibling of carol and it is sunny, then frank is a sibling of george.\nIf george is a sibling of george and car is wet and george is a sibling of eve, then dave is a sibling of bob.\nIf it is cold and bob owns phone and car is big, then car is big.\nIf it is hot and it is cold, then apple is big.\nIf it is sunny and alice is hungry and eve is tall, then eve is tall.\nIf car is wet and ball is wet and it is sunny, then frank owns ball.\nIf bob is an enemy of frank and george dislikes eve, then dave is tall.\nIf car is wet and pencil is small and ball is small, then phone is small.\nIf bob is a friend of george and it is cold, then carol is a friend of eve.\n\nAnd the following facts:\nfrank is happy.\nbob is an enemy of eve.\ngeorge dislikes alice.\nphone is small.\n\nQUESTION:\nIs carol dislikes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "cold :- happy(frank).\nwet(phone) :- cold.\nfriend(carol,alice) :- wet(phone).\ndislikes(eve,phone) :- friend(carol,alice).\nowns(alice,pencil) :- owns(bob,book), small(phone).\nsibling(frank,george) :- cold, sibling(dave,carol), sunny.\nsibling(dave,bob) :- sibling(george,george), wet(car), sibling(george,eve).\nbig(car) :- cold, owns(bob,phone), big(car).\nbig(apple) :- hot, cold.\ntall(eve) :- sunny, hungry(alice), tall(eve).\nowns(frank,ball) :- wet(car), wet(ball), sunny.\ntall(dave) :- enemy(bob,frank), dislikes(george,eve).\nsmall(phone) :- wet(car), small(pencil), small(ball).\nfriend(carol,eve) :- friend(bob,george), cold.\nenemy(bob,eve).\ndislikes(george,alice).\nsmall(phone).",
    "natural language": "You are given the following rules:\nIf frank is happy, then it is cold.\nIf it is cold, then phone is wet.\nIf phone is wet, then carol is a friend of alice.\nIf carol is a friend of alice, then eve dislikes phone.\nIf bob owns book and phone is small, then alice owns pencil.\nIf it is cold and dave is a sibling of carol and it is sunny, then frank is a sibling of george.\nIf george is a sibling of george and car is wet and george is a sibling of eve, then dave is a sibling of bob.\nIf it is cold and bob owns phone and car is big, then car is big.\nIf it is hot and it is cold, then apple is big.\nIf it is sunny and alice is hungry and eve is tall, then eve is tall.\nIf car is wet and ball is wet and it is sunny, then frank owns ball.\nIf bob is an enemy of frank and george dislikes eve, then dave is tall.\nIf car is wet and pencil is small and ball is small, then phone is small.\nIf bob is a friend of george and it is cold, then carol is a friend of eve.\n\nAnd the following facts:\nfrank is happy.\nbob is an enemy of eve.\ngeorge dislikes alice.\nphone is small.\n\nOBSERVATION: eve dislikes phone is true.\n\nQUESTION:\nCould frank is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(phone).",
    "c": "cold :- happy(frank).\nwet(phone) :- cold.\nfriend(carol,alice) :- wet(phone).\ndislikes(eve,phone) :- friend(carol,alice).\nowns(alice,pencil) :- owns(bob,book), small(phone).\nsibling(frank,george) :- cold, sibling(dave,carol), sunny.\nsibling(dave,bob) :- sibling(george,george), wet(car), sibling(george,eve).\nbig(car) :- cold, owns(bob,phone), big(car).\nbig(apple) :- hot, cold.\ntall(eve) :- sunny, hungry(alice), tall(eve).\nowns(frank,ball) :- wet(car), wet(ball), sunny.\ntall(dave) :- enemy(bob,frank), dislikes(george,eve).\nsmall(phone) :- wet(car), small(pencil), small(ball).\nfriend(carol,eve) :- friend(bob,george), cold.\nhappy(frank).\nenemy(bob,eve).\ndislikes(george,alice).",
    "natural language": "You are given the following rules:\nIf frank is happy, then it is cold.\nIf it is cold, then phone is wet.\nIf phone is wet, then carol is a friend of alice.\nIf carol is a friend of alice, then eve dislikes phone.\nIf bob owns book and phone is small, then alice owns pencil.\nIf it is cold and dave is a sibling of carol and it is sunny, then frank is a sibling of george.\nIf george is a sibling of george and car is wet and george is a sibling of eve, then dave is a sibling of bob.\nIf it is cold and bob owns phone and car is big, then car is big.\nIf it is hot and it is cold, then apple is big.\nIf it is sunny and alice is hungry and eve is tall, then eve is tall.\nIf car is wet and ball is wet and it is sunny, then frank owns ball.\nIf bob is an enemy of frank and george dislikes eve, then dave is tall.\nIf car is wet and pencil is small and ball is small, then phone is small.\nIf bob is a friend of george and it is cold, then carol is a friend of eve.\n\nAnd the following facts:\nfrank is happy.\nbob is an enemy of eve.\ngeorge dislikes alice.\nphone is small.\n\nOBSERVATION: eve dislikes phone is true.\n\nQUESTION:\nCould phone is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(bob,eve).",
    "c": "cold :- happy(frank).\nwet(phone) :- cold.\nfriend(carol,alice) :- wet(phone).\ndislikes(eve,phone) :- friend(carol,alice).\nowns(alice,pencil) :- owns(bob,book), small(phone).\nsibling(frank,george) :- cold, sibling(dave,carol), sunny.\nsibling(dave,bob) :- sibling(george,george), wet(car), sibling(george,eve).\nbig(car) :- cold, owns(bob,phone), big(car).\nbig(apple) :- hot, cold.\ntall(eve) :- sunny, hungry(alice), tall(eve).\nowns(frank,ball) :- wet(car), wet(ball), sunny.\ntall(dave) :- enemy(bob,frank), dislikes(george,eve).\nsmall(phone) :- wet(car), small(pencil), small(ball).\nfriend(carol,eve) :- friend(bob,george), cold.\nhappy(frank).\ndislikes(george,alice).\nsmall(phone).",
    "natural language": "You are given the following rules:\nIf frank is happy, then it is cold.\nIf it is cold, then phone is wet.\nIf phone is wet, then carol is a friend of alice.\nIf carol is a friend of alice, then eve dislikes phone.\nIf bob owns book and phone is small, then alice owns pencil.\nIf it is cold and dave is a sibling of carol and it is sunny, then frank is a sibling of george.\nIf george is a sibling of george and car is wet and george is a sibling of eve, then dave is a sibling of bob.\nIf it is cold and bob owns phone and car is big, then car is big.\nIf it is hot and it is cold, then apple is big.\nIf it is sunny and alice is hungry and eve is tall, then eve is tall.\nIf car is wet and ball is wet and it is sunny, then frank owns ball.\nIf bob is an enemy of frank and george dislikes eve, then dave is tall.\nIf car is wet and pencil is small and ball is small, then phone is small.\nIf bob is a friend of george and it is cold, then carol is a friend of eve.\n\nAnd the following facts:\nfrank is happy.\nbob is an enemy of eve.\ngeorge dislikes alice.\nphone is small.\n\nOBSERVATION: eve dislikes phone is true.\n\nQUESTION:\nCould bob is an enemy of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(george,book).",
    "c": "sibling(alice,alice) :- hungry(dave).\nsad(frank) :- sibling(alice,alice).\nsibling(carol,alice) :- sad(frank).\nbig(pencil) :- sibling(carol,alice).\nfriend(alice,george) :- cold.\nfriend(bob,frank) :- tall(eve), wet(phone).\nlikes(carol,ball) :- tall(alice).\nlikes(carol,pencil) :- tall(frank), cold, happy(eve).\nwet(phone) :- dislikes(george,apple), happy(dave).\nwet(ball) :- likes(carol,bob).\nsmall(phone) :- hot.\nsmall(apple) :- cold, cold.\nhappy(alice) :- hungry(george).\nwet(apple) :- dislikes(bob,alice).\nhungry(dave).\nlikes(george,book).\nbig(ball).\nlikes(frank,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then alice is a sibling of alice.\nIf alice is a sibling of alice, then frank is sad.\nIf frank is sad, then carol is a sibling of alice.\nIf carol is a sibling of alice, then pencil is big.\nIf it is cold, then alice is a friend of george.\nIf eve is tall and phone is wet, then bob is a friend of frank.\nIf alice is tall, then carol likes ball.\nIf frank is tall and it is cold and eve is happy, then carol likes pencil.\nIf george dislikes apple and dave is happy, then phone is wet.\nIf carol likes bob, then ball is wet.\nIf it is hot, then phone is small.\nIf it is cold and it is cold, then apple is small.\nIf george is hungry, then alice is happy.\nIf bob dislikes alice, then apple is wet.\n\nAnd the following facts:\ndave is hungry.\ngeorge likes book.\nball is big.\nfrank likes bob.\n\nQUESTION:\nIs george likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,alice).",
    "c": "sibling(alice,alice) :- hungry(dave).\nsad(frank) :- sibling(alice,alice).\nsibling(carol,alice) :- sad(frank).\nbig(pencil) :- sibling(carol,alice).\nfriend(alice,george) :- cold.\nfriend(bob,frank) :- tall(eve), wet(phone).\nlikes(carol,ball) :- tall(alice).\nlikes(carol,pencil) :- tall(frank), cold, happy(eve).\nwet(phone) :- dislikes(george,apple), happy(dave).\nwet(ball) :- likes(carol,bob).\nsmall(phone) :- hot.\nsmall(apple) :- cold, cold.\nhappy(alice) :- hungry(george).\nwet(apple) :- dislikes(bob,alice).\nhungry(dave).\nlikes(george,book).\nbig(ball).\nlikes(frank,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then alice is a sibling of alice.\nIf alice is a sibling of alice, then frank is sad.\nIf frank is sad, then carol is a sibling of alice.\nIf carol is a sibling of alice, then pencil is big.\nIf it is cold, then alice is a friend of george.\nIf eve is tall and phone is wet, then bob is a friend of frank.\nIf alice is tall, then carol likes ball.\nIf frank is tall and it is cold and eve is happy, then carol likes pencil.\nIf george dislikes apple and dave is happy, then phone is wet.\nIf carol likes bob, then ball is wet.\nIf it is hot, then phone is small.\nIf it is cold and it is cold, then apple is small.\nIf george is hungry, then alice is happy.\nIf bob dislikes alice, then apple is wet.\n\nAnd the following facts:\ndave is hungry.\ngeorge likes book.\nball is big.\nfrank likes bob.\n\nQUESTION:\nIs alice is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,alice).",
    "c": "sibling(alice,alice) :- hungry(dave).\nsad(frank) :- sibling(alice,alice).\nsibling(carol,alice) :- sad(frank).\nbig(pencil) :- sibling(carol,alice).\nfriend(alice,george) :- cold.\nfriend(bob,frank) :- tall(eve), wet(phone).\nlikes(carol,ball) :- tall(alice).\nlikes(carol,pencil) :- tall(frank), cold, happy(eve).\nwet(phone) :- dislikes(george,apple), happy(dave).\nwet(ball) :- likes(carol,bob).\nsmall(phone) :- hot.\nsmall(apple) :- cold, cold.\nhappy(alice) :- hungry(george).\nwet(apple) :- dislikes(bob,alice).\nhungry(dave).\nlikes(george,book).\nbig(ball).\nlikes(frank,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then alice is a sibling of alice.\nIf alice is a sibling of alice, then frank is sad.\nIf frank is sad, then carol is a sibling of alice.\nIf carol is a sibling of alice, then pencil is big.\nIf it is cold, then alice is a friend of george.\nIf eve is tall and phone is wet, then bob is a friend of frank.\nIf alice is tall, then carol likes ball.\nIf frank is tall and it is cold and eve is happy, then carol likes pencil.\nIf george dislikes apple and dave is happy, then phone is wet.\nIf carol likes bob, then ball is wet.\nIf it is hot, then phone is small.\nIf it is cold and it is cold, then apple is small.\nIf george is hungry, then alice is happy.\nIf bob dislikes alice, then apple is wet.\n\nAnd the following facts:\ndave is hungry.\ngeorge likes book.\nball is big.\nfrank likes bob.\n\nQUESTION:\nIs carol is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,alice).",
    "c": "sibling(alice,alice) :- hungry(dave).\nsad(frank) :- sibling(alice,alice).\nsibling(carol,alice) :- sad(frank).\nbig(pencil) :- sibling(carol,alice).\nfriend(alice,george) :- cold.\nfriend(bob,frank) :- tall(eve), wet(phone).\nlikes(carol,ball) :- tall(alice).\nlikes(carol,pencil) :- tall(frank), cold, happy(eve).\nwet(phone) :- dislikes(george,apple), happy(dave).\nwet(ball) :- likes(carol,bob).\nsmall(phone) :- hot.\nsmall(apple) :- cold, cold.\nhappy(alice) :- hungry(george).\nwet(apple) :- dislikes(bob,alice).\nhungry(dave).\nlikes(george,book).\nbig(ball).\nlikes(frank,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then alice is a sibling of alice.\nIf alice is a sibling of alice, then frank is sad.\nIf frank is sad, then carol is a sibling of alice.\nIf carol is a sibling of alice, then pencil is big.\nIf it is cold, then alice is a friend of george.\nIf eve is tall and phone is wet, then bob is a friend of frank.\nIf alice is tall, then carol likes ball.\nIf frank is tall and it is cold and eve is happy, then carol likes pencil.\nIf george dislikes apple and dave is happy, then phone is wet.\nIf carol likes bob, then ball is wet.\nIf it is hot, then phone is small.\nIf it is cold and it is cold, then apple is small.\nIf george is hungry, then alice is happy.\nIf bob dislikes alice, then apple is wet.\n\nAnd the following facts:\ndave is hungry.\ngeorge likes book.\nball is big.\nfrank likes bob.\n\nQUESTION:\nIs george dislikes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,pencil).",
    "c": "sibling(alice,alice) :- hungry(dave).\nsad(frank) :- sibling(alice,alice).\nsibling(carol,alice) :- sad(frank).\nbig(pencil) :- sibling(carol,alice).\nfriend(alice,george) :- cold.\nfriend(bob,frank) :- tall(eve), wet(phone).\nlikes(carol,ball) :- tall(alice).\nlikes(carol,pencil) :- tall(frank), cold, happy(eve).\nwet(phone) :- dislikes(george,apple), happy(dave).\nwet(ball) :- likes(carol,bob).\nsmall(phone) :- hot.\nsmall(apple) :- cold, cold.\nhappy(alice) :- hungry(george).\nwet(apple) :- dislikes(bob,alice).\nhungry(dave).\nlikes(george,book).\nbig(ball).\nlikes(frank,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then alice is a sibling of alice.\nIf alice is a sibling of alice, then frank is sad.\nIf frank is sad, then carol is a sibling of alice.\nIf carol is a sibling of alice, then pencil is big.\nIf it is cold, then alice is a friend of george.\nIf eve is tall and phone is wet, then bob is a friend of frank.\nIf alice is tall, then carol likes ball.\nIf frank is tall and it is cold and eve is happy, then carol likes pencil.\nIf george dislikes apple and dave is happy, then phone is wet.\nIf carol likes bob, then ball is wet.\nIf it is hot, then phone is small.\nIf it is cold and it is cold, then apple is small.\nIf george is hungry, then alice is happy.\nIf bob dislikes alice, then apple is wet.\n\nAnd the following facts:\ndave is hungry.\ngeorge likes book.\nball is big.\nfrank likes bob.\n\nQUESTION:\nIs carol likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(dave).",
    "c": "sibling(alice,alice) :- hungry(dave).\nsad(frank) :- sibling(alice,alice).\nsibling(carol,alice) :- sad(frank).\nbig(pencil) :- sibling(carol,alice).\nfriend(alice,george) :- cold.\nfriend(bob,frank) :- tall(eve), wet(phone).\nlikes(carol,ball) :- tall(alice).\nlikes(carol,pencil) :- tall(frank), cold, happy(eve).\nwet(phone) :- dislikes(george,apple), happy(dave).\nwet(ball) :- likes(carol,bob).\nsmall(phone) :- hot.\nsmall(apple) :- cold, cold.\nhappy(alice) :- hungry(george).\nwet(apple) :- dislikes(bob,alice).\nlikes(george,book).\nbig(ball).\nlikes(frank,bob).",
    "natural language": "You are given the following rules:\nIf dave is hungry, then alice is a sibling of alice.\nIf alice is a sibling of alice, then frank is sad.\nIf frank is sad, then carol is a sibling of alice.\nIf carol is a sibling of alice, then pencil is big.\nIf it is cold, then alice is a friend of george.\nIf eve is tall and phone is wet, then bob is a friend of frank.\nIf alice is tall, then carol likes ball.\nIf frank is tall and it is cold and eve is happy, then carol likes pencil.\nIf george dislikes apple and dave is happy, then phone is wet.\nIf carol likes bob, then ball is wet.\nIf it is hot, then phone is small.\nIf it is cold and it is cold, then apple is small.\nIf george is hungry, then alice is happy.\nIf bob dislikes alice, then apple is wet.\n\nAnd the following facts:\ndave is hungry.\ngeorge likes book.\nball is big.\nfrank likes bob.\n\nOBSERVATION: pencil is big is true.\n\nQUESTION:\nCould dave is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "sibling(alice,alice) :- hungry(dave).\nsad(frank) :- sibling(alice,alice).\nsibling(carol,alice) :- sad(frank).\nbig(pencil) :- sibling(carol,alice).\nfriend(alice,george) :- cold.\nfriend(bob,frank) :- tall(eve), wet(phone).\nlikes(carol,ball) :- tall(alice).\nlikes(carol,pencil) :- tall(frank), cold, happy(eve).\nwet(phone) :- dislikes(george,apple), happy(dave).\nwet(ball) :- likes(carol,bob).\nsmall(phone) :- hot.\nsmall(apple) :- cold, cold.\nhappy(alice) :- hungry(george).\nwet(apple) :- dislikes(bob,alice).\nhungry(dave).\nlikes(george,book).\nlikes(frank,bob).",
    "natural language": "You are given the following rules:\nIf dave is hungry, then alice is a sibling of alice.\nIf alice is a sibling of alice, then frank is sad.\nIf frank is sad, then carol is a sibling of alice.\nIf carol is a sibling of alice, then pencil is big.\nIf it is cold, then alice is a friend of george.\nIf eve is tall and phone is wet, then bob is a friend of frank.\nIf alice is tall, then carol likes ball.\nIf frank is tall and it is cold and eve is happy, then carol likes pencil.\nIf george dislikes apple and dave is happy, then phone is wet.\nIf carol likes bob, then ball is wet.\nIf it is hot, then phone is small.\nIf it is cold and it is cold, then apple is small.\nIf george is hungry, then alice is happy.\nIf bob dislikes alice, then apple is wet.\n\nAnd the following facts:\ndave is hungry.\ngeorge likes book.\nball is big.\nfrank likes bob.\n\nOBSERVATION: pencil is big is true.\n\nQUESTION:\nCould ball is big be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(george,book).",
    "c": "sibling(alice,alice) :- hungry(dave).\nsad(frank) :- sibling(alice,alice).\nsibling(carol,alice) :- sad(frank).\nbig(pencil) :- sibling(carol,alice).\nfriend(alice,george) :- cold.\nfriend(bob,frank) :- tall(eve), wet(phone).\nlikes(carol,ball) :- tall(alice).\nlikes(carol,pencil) :- tall(frank), cold, happy(eve).\nwet(phone) :- dislikes(george,apple), happy(dave).\nwet(ball) :- likes(carol,bob).\nsmall(phone) :- hot.\nsmall(apple) :- cold, cold.\nhappy(alice) :- hungry(george).\nwet(apple) :- dislikes(bob,alice).\nhungry(dave).\nbig(ball).\nlikes(frank,bob).",
    "natural language": "You are given the following rules:\nIf dave is hungry, then alice is a sibling of alice.\nIf alice is a sibling of alice, then frank is sad.\nIf frank is sad, then carol is a sibling of alice.\nIf carol is a sibling of alice, then pencil is big.\nIf it is cold, then alice is a friend of george.\nIf eve is tall and phone is wet, then bob is a friend of frank.\nIf alice is tall, then carol likes ball.\nIf frank is tall and it is cold and eve is happy, then carol likes pencil.\nIf george dislikes apple and dave is happy, then phone is wet.\nIf carol likes bob, then ball is wet.\nIf it is hot, then phone is small.\nIf it is cold and it is cold, then apple is small.\nIf george is hungry, then alice is happy.\nIf bob dislikes alice, then apple is wet.\n\nAnd the following facts:\ndave is hungry.\ngeorge likes book.\nball is big.\nfrank likes bob.\n\nOBSERVATION: pencil is big is true.\n\nQUESTION:\nCould george likes book be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "dislikes(eve,phone) :- small(pencil).\nsad(dave) :- dislikes(eve,phone).\nsmall(apple) :- sad(dave).\nwet(phone) :- small(apple).\nsad(frank) :- wet(phone).\nenemy(eve,george) :- sad(frank).\nfriend(eve,dave) :- friend(dave,george), friend(alice,eve), dislikes(eve,carol).\nfriend(eve,frank) :- likes(frank,george), sibling(eve,carol).\ncold :- likes(frank,apple), hot.\nsad(alice) :- sad(eve), owns(frank,car), dislikes(bob,alice).\nowns(frank,pencil) :- tall(george).\nfriend(george,bob) :- friend(dave,eve), happy(frank).\nhungry(eve) :- tall(alice).\nowns(eve,phone) :- parent(frank,alice).\nsmall(pencil).\nenemy(dave,george).\nlikes(frank,carol).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf pencil is small, then eve dislikes phone.\nIf eve dislikes phone, then dave is sad.\nIf dave is sad, then apple is small.\nIf apple is small, then phone is wet.\nIf phone is wet, then frank is sad.\nIf frank is sad, then eve is an enemy of george.\nIf dave is a friend of george and alice is a friend of eve and eve dislikes carol, then eve is a friend of dave.\nIf frank likes george and eve is a sibling of carol, then eve is a friend of frank.\nIf frank likes apple and it is hot, then it is cold.\nIf eve is sad and frank owns car and bob dislikes alice, then alice is sad.\nIf george is tall, then frank owns pencil.\nIf dave is a friend of eve and frank is happy, then george is a friend of bob.\nIf alice is tall, then eve is hungry.\nIf frank is a parent of alice, then eve owns phone.\n\nAnd the following facts:\npencil is small.\ndave is an enemy of george.\nfrank likes carol.\nalice is a friend of dave.\n\nQUESTION:\nIs alice is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "dislikes(eve,phone) :- small(pencil).\nsad(dave) :- dislikes(eve,phone).\nsmall(apple) :- sad(dave).\nwet(phone) :- small(apple).\nsad(frank) :- wet(phone).\nenemy(eve,george) :- sad(frank).\nfriend(eve,dave) :- friend(dave,george), friend(alice,eve), dislikes(eve,carol).\nfriend(eve,frank) :- likes(frank,george), sibling(eve,carol).\ncold :- likes(frank,apple), hot.\nsad(alice) :- sad(eve), owns(frank,car), dislikes(bob,alice).\nowns(frank,pencil) :- tall(george).\nfriend(george,bob) :- friend(dave,eve), happy(frank).\nhungry(eve) :- tall(alice).\nowns(eve,phone) :- parent(frank,alice).\nsmall(pencil).\nenemy(dave,george).\nlikes(frank,carol).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf pencil is small, then eve dislikes phone.\nIf eve dislikes phone, then dave is sad.\nIf dave is sad, then apple is small.\nIf apple is small, then phone is wet.\nIf phone is wet, then frank is sad.\nIf frank is sad, then eve is an enemy of george.\nIf dave is a friend of george and alice is a friend of eve and eve dislikes carol, then eve is a friend of dave.\nIf frank likes george and eve is a sibling of carol, then eve is a friend of frank.\nIf frank likes apple and it is hot, then it is cold.\nIf eve is sad and frank owns car and bob dislikes alice, then alice is sad.\nIf george is tall, then frank owns pencil.\nIf dave is a friend of eve and frank is happy, then george is a friend of bob.\nIf alice is tall, then eve is hungry.\nIf frank is a parent of alice, then eve owns phone.\n\nAnd the following facts:\npencil is small.\ndave is an enemy of george.\nfrank likes carol.\nalice is a friend of dave.\n\nQUESTION:\nIs phone is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(dave).",
    "c": "dislikes(eve,phone) :- small(pencil).\nsad(dave) :- dislikes(eve,phone).\nsmall(apple) :- sad(dave).\nwet(phone) :- small(apple).\nsad(frank) :- wet(phone).\nenemy(eve,george) :- sad(frank).\nfriend(eve,dave) :- friend(dave,george), friend(alice,eve), dislikes(eve,carol).\nfriend(eve,frank) :- likes(frank,george), sibling(eve,carol).\ncold :- likes(frank,apple), hot.\nsad(alice) :- sad(eve), owns(frank,car), dislikes(bob,alice).\nowns(frank,pencil) :- tall(george).\nfriend(george,bob) :- friend(dave,eve), happy(frank).\nhungry(eve) :- tall(alice).\nowns(eve,phone) :- parent(frank,alice).\nsmall(pencil).\nenemy(dave,george).\nlikes(frank,carol).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf pencil is small, then eve dislikes phone.\nIf eve dislikes phone, then dave is sad.\nIf dave is sad, then apple is small.\nIf apple is small, then phone is wet.\nIf phone is wet, then frank is sad.\nIf frank is sad, then eve is an enemy of george.\nIf dave is a friend of george and alice is a friend of eve and eve dislikes carol, then eve is a friend of dave.\nIf frank likes george and eve is a sibling of carol, then eve is a friend of frank.\nIf frank likes apple and it is hot, then it is cold.\nIf eve is sad and frank owns car and bob dislikes alice, then alice is sad.\nIf george is tall, then frank owns pencil.\nIf dave is a friend of eve and frank is happy, then george is a friend of bob.\nIf alice is tall, then eve is hungry.\nIf frank is a parent of alice, then eve owns phone.\n\nAnd the following facts:\npencil is small.\ndave is an enemy of george.\nfrank likes carol.\nalice is a friend of dave.\n\nQUESTION:\nIs dave is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,carol).",
    "c": "dislikes(eve,phone) :- small(pencil).\nsad(dave) :- dislikes(eve,phone).\nsmall(apple) :- sad(dave).\nwet(phone) :- small(apple).\nsad(frank) :- wet(phone).\nenemy(eve,george) :- sad(frank).\nfriend(eve,dave) :- friend(dave,george), friend(alice,eve), dislikes(eve,carol).\nfriend(eve,frank) :- likes(frank,george), sibling(eve,carol).\ncold :- likes(frank,apple), hot.\nsad(alice) :- sad(eve), owns(frank,car), dislikes(bob,alice).\nowns(frank,pencil) :- tall(george).\nfriend(george,bob) :- friend(dave,eve), happy(frank).\nhungry(eve) :- tall(alice).\nowns(eve,phone) :- parent(frank,alice).\nsmall(pencil).\nenemy(dave,george).\nlikes(frank,carol).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf pencil is small, then eve dislikes phone.\nIf eve dislikes phone, then dave is sad.\nIf dave is sad, then apple is small.\nIf apple is small, then phone is wet.\nIf phone is wet, then frank is sad.\nIf frank is sad, then eve is an enemy of george.\nIf dave is a friend of george and alice is a friend of eve and eve dislikes carol, then eve is a friend of dave.\nIf frank likes george and eve is a sibling of carol, then eve is a friend of frank.\nIf frank likes apple and it is hot, then it is cold.\nIf eve is sad and frank owns car and bob dislikes alice, then alice is sad.\nIf george is tall, then frank owns pencil.\nIf dave is a friend of eve and frank is happy, then george is a friend of bob.\nIf alice is tall, then eve is hungry.\nIf frank is a parent of alice, then eve owns phone.\n\nAnd the following facts:\npencil is small.\ndave is an enemy of george.\nfrank likes carol.\nalice is a friend of dave.\n\nQUESTION:\nIs eve is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,book).",
    "c": "dislikes(eve,phone) :- small(pencil).\nsad(dave) :- dislikes(eve,phone).\nsmall(apple) :- sad(dave).\nwet(phone) :- small(apple).\nsad(frank) :- wet(phone).\nenemy(eve,george) :- sad(frank).\nfriend(eve,dave) :- friend(dave,george), friend(alice,eve), dislikes(eve,carol).\nfriend(eve,frank) :- likes(frank,george), sibling(eve,carol).\ncold :- likes(frank,apple), hot.\nsad(alice) :- sad(eve), owns(frank,car), dislikes(bob,alice).\nowns(frank,pencil) :- tall(george).\nfriend(george,bob) :- friend(dave,eve), happy(frank).\nhungry(eve) :- tall(alice).\nowns(eve,phone) :- parent(frank,alice).\nsmall(pencil).\nenemy(dave,george).\nlikes(frank,carol).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf pencil is small, then eve dislikes phone.\nIf eve dislikes phone, then dave is sad.\nIf dave is sad, then apple is small.\nIf apple is small, then phone is wet.\nIf phone is wet, then frank is sad.\nIf frank is sad, then eve is an enemy of george.\nIf dave is a friend of george and alice is a friend of eve and eve dislikes carol, then eve is a friend of dave.\nIf frank likes george and eve is a sibling of carol, then eve is a friend of frank.\nIf frank likes apple and it is hot, then it is cold.\nIf eve is sad and frank owns car and bob dislikes alice, then alice is sad.\nIf george is tall, then frank owns pencil.\nIf dave is a friend of eve and frank is happy, then george is a friend of bob.\nIf alice is tall, then eve is hungry.\nIf frank is a parent of alice, then eve owns phone.\n\nAnd the following facts:\npencil is small.\ndave is an enemy of george.\nfrank likes carol.\nalice is a friend of dave.\n\nQUESTION:\nIs bob dislikes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "dislikes(eve,phone) :- small(pencil).\nsad(dave) :- dislikes(eve,phone).\nsmall(apple) :- sad(dave).\nwet(phone) :- small(apple).\nsad(frank) :- wet(phone).\nenemy(eve,george) :- sad(frank).\nfriend(eve,dave) :- friend(dave,george), friend(alice,eve), dislikes(eve,carol).\nfriend(eve,frank) :- likes(frank,george), sibling(eve,carol).\ncold :- likes(frank,apple), hot.\nsad(alice) :- sad(eve), owns(frank,car), dislikes(bob,alice).\nowns(frank,pencil) :- tall(george).\nfriend(george,bob) :- friend(dave,eve), happy(frank).\nhungry(eve) :- tall(alice).\nowns(eve,phone) :- parent(frank,alice).\nenemy(dave,george).\nlikes(frank,carol).\nfriend(alice,dave).",
    "natural language": "You are given the following rules:\nIf pencil is small, then eve dislikes phone.\nIf eve dislikes phone, then dave is sad.\nIf dave is sad, then apple is small.\nIf apple is small, then phone is wet.\nIf phone is wet, then frank is sad.\nIf frank is sad, then eve is an enemy of george.\nIf dave is a friend of george and alice is a friend of eve and eve dislikes carol, then eve is a friend of dave.\nIf frank likes george and eve is a sibling of carol, then eve is a friend of frank.\nIf frank likes apple and it is hot, then it is cold.\nIf eve is sad and frank owns car and bob dislikes alice, then alice is sad.\nIf george is tall, then frank owns pencil.\nIf dave is a friend of eve and frank is happy, then george is a friend of bob.\nIf alice is tall, then eve is hungry.\nIf frank is a parent of alice, then eve owns phone.\n\nAnd the following facts:\npencil is small.\ndave is an enemy of george.\nfrank likes carol.\nalice is a friend of dave.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould pencil is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "dislikes(eve,phone) :- small(pencil).\nsad(dave) :- dislikes(eve,phone).\nsmall(apple) :- sad(dave).\nwet(phone) :- small(apple).\nsad(frank) :- wet(phone).\nenemy(eve,george) :- sad(frank).\nfriend(eve,dave) :- friend(dave,george), friend(alice,eve), dislikes(eve,carol).\nfriend(eve,frank) :- likes(frank,george), sibling(eve,carol).\ncold :- likes(frank,apple), hot.\nsad(alice) :- sad(eve), owns(frank,car), dislikes(bob,alice).\nowns(frank,pencil) :- tall(george).\nfriend(george,bob) :- friend(dave,eve), happy(frank).\nhungry(eve) :- tall(alice).\nowns(eve,phone) :- parent(frank,alice).\nsmall(pencil).\nlikes(frank,carol).\nfriend(alice,dave).",
    "natural language": "You are given the following rules:\nIf pencil is small, then eve dislikes phone.\nIf eve dislikes phone, then dave is sad.\nIf dave is sad, then apple is small.\nIf apple is small, then phone is wet.\nIf phone is wet, then frank is sad.\nIf frank is sad, then eve is an enemy of george.\nIf dave is a friend of george and alice is a friend of eve and eve dislikes carol, then eve is a friend of dave.\nIf frank likes george and eve is a sibling of carol, then eve is a friend of frank.\nIf frank likes apple and it is hot, then it is cold.\nIf eve is sad and frank owns car and bob dislikes alice, then alice is sad.\nIf george is tall, then frank owns pencil.\nIf dave is a friend of eve and frank is happy, then george is a friend of bob.\nIf alice is tall, then eve is hungry.\nIf frank is a parent of alice, then eve owns phone.\n\nAnd the following facts:\npencil is small.\ndave is an enemy of george.\nfrank likes carol.\nalice is a friend of dave.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould dave is an enemy of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "dislikes(eve,phone) :- small(pencil).\nsad(dave) :- dislikes(eve,phone).\nsmall(apple) :- sad(dave).\nwet(phone) :- small(apple).\nsad(frank) :- wet(phone).\nenemy(eve,george) :- sad(frank).\nfriend(eve,dave) :- friend(dave,george), friend(alice,eve), dislikes(eve,carol).\nfriend(eve,frank) :- likes(frank,george), sibling(eve,carol).\ncold :- likes(frank,apple), hot.\nsad(alice) :- sad(eve), owns(frank,car), dislikes(bob,alice).\nowns(frank,pencil) :- tall(george).\nfriend(george,bob) :- friend(dave,eve), happy(frank).\nhungry(eve) :- tall(alice).\nowns(eve,phone) :- parent(frank,alice).\nsmall(pencil).\nenemy(dave,george).\nlikes(frank,carol).",
    "natural language": "You are given the following rules:\nIf pencil is small, then eve dislikes phone.\nIf eve dislikes phone, then dave is sad.\nIf dave is sad, then apple is small.\nIf apple is small, then phone is wet.\nIf phone is wet, then frank is sad.\nIf frank is sad, then eve is an enemy of george.\nIf dave is a friend of george and alice is a friend of eve and eve dislikes carol, then eve is a friend of dave.\nIf frank likes george and eve is a sibling of carol, then eve is a friend of frank.\nIf frank likes apple and it is hot, then it is cold.\nIf eve is sad and frank owns car and bob dislikes alice, then alice is sad.\nIf george is tall, then frank owns pencil.\nIf dave is a friend of eve and frank is happy, then george is a friend of bob.\nIf alice is tall, then eve is hungry.\nIf frank is a parent of alice, then eve owns phone.\n\nAnd the following facts:\npencil is small.\ndave is an enemy of george.\nfrank likes carol.\nalice is a friend of dave.\n\nOBSERVATION: eve is an enemy of george is true.\n\nQUESTION:\nCould alice is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "happy(frank) :- happy(bob).\nlikes(eve,alice) :- happy(frank).\nsunny :- likes(eve,alice).\nlikes(dave,carol) :- sunny.\nbig(phone) :- likes(dave,carol).\nsad(carol) :- big(phone).\nwet(apple) :- big(apple), sunny, tall(alice).\nwet(car) :- friend(alice,dave), enemy(frank,eve), tall(george).\nparent(carol,alice) :- hot, happy(frank).\nparent(eve,alice) :- enemy(alice,george).\nhungry(george) :- enemy(bob,george).\nhot :- sunny.\nhungry(alice) :- friend(carol,frank).\nhot :- sibling(george,carol).\nhappy(bob).\nparent(eve,carol).\nenemy(dave,frank).\nwet(phone).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is happy.\nIf frank is happy, then eve likes alice.\nIf eve likes alice, then it is sunny.\nIf it is sunny, then dave likes carol.\nIf dave likes carol, then phone is big.\nIf phone is big, then carol is sad.\nIf apple is big and it is sunny and alice is tall, then apple is wet.\nIf alice is a friend of dave and frank is an enemy of eve and george is tall, then car is wet.\nIf it is hot and frank is happy, then carol is a parent of alice.\nIf alice is an enemy of george, then eve is a parent of alice.\nIf bob is an enemy of george, then george is hungry.\nIf it is sunny, then it is hot.\nIf carol is a friend of frank, then alice is hungry.\nIf george is a sibling of carol, then it is hot.\n\nAnd the following facts:\nbob is happy.\neve is a parent of carol.\ndave is an enemy of frank.\nphone is wet.\n\nQUESTION:\nIs bob is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "happy(frank) :- happy(bob).\nlikes(eve,alice) :- happy(frank).\nsunny :- likes(eve,alice).\nlikes(dave,carol) :- sunny.\nbig(phone) :- likes(dave,carol).\nsad(carol) :- big(phone).\nwet(apple) :- big(apple), sunny, tall(alice).\nwet(car) :- friend(alice,dave), enemy(frank,eve), tall(george).\nparent(carol,alice) :- hot, happy(frank).\nparent(eve,alice) :- enemy(alice,george).\nhungry(george) :- enemy(bob,george).\nhot :- sunny.\nhungry(alice) :- friend(carol,frank).\nhot :- sibling(george,carol).\nhappy(bob).\nparent(eve,carol).\nenemy(dave,frank).\nwet(phone).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is happy.\nIf frank is happy, then eve likes alice.\nIf eve likes alice, then it is sunny.\nIf it is sunny, then dave likes carol.\nIf dave likes carol, then phone is big.\nIf phone is big, then carol is sad.\nIf apple is big and it is sunny and alice is tall, then apple is wet.\nIf alice is a friend of dave and frank is an enemy of eve and george is tall, then car is wet.\nIf it is hot and frank is happy, then carol is a parent of alice.\nIf alice is an enemy of george, then eve is a parent of alice.\nIf bob is an enemy of george, then george is hungry.\nIf it is sunny, then it is hot.\nIf carol is a friend of frank, then alice is hungry.\nIf george is a sibling of carol, then it is hot.\n\nAnd the following facts:\nbob is happy.\neve is a parent of carol.\ndave is an enemy of frank.\nphone is wet.\n\nQUESTION:\nIs frank is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(phone).",
    "c": "happy(frank) :- happy(bob).\nlikes(eve,alice) :- happy(frank).\nsunny :- likes(eve,alice).\nlikes(dave,carol) :- sunny.\nbig(phone) :- likes(dave,carol).\nsad(carol) :- big(phone).\nwet(apple) :- big(apple), sunny, tall(alice).\nwet(car) :- friend(alice,dave), enemy(frank,eve), tall(george).\nparent(carol,alice) :- hot, happy(frank).\nparent(eve,alice) :- enemy(alice,george).\nhungry(george) :- enemy(bob,george).\nhot :- sunny.\nhungry(alice) :- friend(carol,frank).\nhot :- sibling(george,carol).\nhappy(bob).\nparent(eve,carol).\nenemy(dave,frank).\nwet(phone).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is happy.\nIf frank is happy, then eve likes alice.\nIf eve likes alice, then it is sunny.\nIf it is sunny, then dave likes carol.\nIf dave likes carol, then phone is big.\nIf phone is big, then carol is sad.\nIf apple is big and it is sunny and alice is tall, then apple is wet.\nIf alice is a friend of dave and frank is an enemy of eve and george is tall, then car is wet.\nIf it is hot and frank is happy, then carol is a parent of alice.\nIf alice is an enemy of george, then eve is a parent of alice.\nIf bob is an enemy of george, then george is hungry.\nIf it is sunny, then it is hot.\nIf carol is a friend of frank, then alice is hungry.\nIf george is a sibling of carol, then it is hot.\n\nAnd the following facts:\nbob is happy.\neve is a parent of carol.\ndave is an enemy of frank.\nphone is wet.\n\nQUESTION:\nIs phone is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,alice).",
    "c": "happy(frank) :- happy(bob).\nlikes(eve,alice) :- happy(frank).\nsunny :- likes(eve,alice).\nlikes(dave,carol) :- sunny.\nbig(phone) :- likes(dave,carol).\nsad(carol) :- big(phone).\nwet(apple) :- big(apple), sunny, tall(alice).\nwet(car) :- friend(alice,dave), enemy(frank,eve), tall(george).\nparent(carol,alice) :- hot, happy(frank).\nparent(eve,alice) :- enemy(alice,george).\nhungry(george) :- enemy(bob,george).\nhot :- sunny.\nhungry(alice) :- friend(carol,frank).\nhot :- sibling(george,carol).\nhappy(bob).\nparent(eve,carol).\nenemy(dave,frank).\nwet(phone).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is happy.\nIf frank is happy, then eve likes alice.\nIf eve likes alice, then it is sunny.\nIf it is sunny, then dave likes carol.\nIf dave likes carol, then phone is big.\nIf phone is big, then carol is sad.\nIf apple is big and it is sunny and alice is tall, then apple is wet.\nIf alice is a friend of dave and frank is an enemy of eve and george is tall, then car is wet.\nIf it is hot and frank is happy, then carol is a parent of alice.\nIf alice is an enemy of george, then eve is a parent of alice.\nIf bob is an enemy of george, then george is hungry.\nIf it is sunny, then it is hot.\nIf carol is a friend of frank, then alice is hungry.\nIf george is a sibling of carol, then it is hot.\n\nAnd the following facts:\nbob is happy.\neve is a parent of carol.\ndave is an enemy of frank.\nphone is wet.\n\nQUESTION:\nIs bob likes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,george).",
    "c": "happy(frank) :- happy(bob).\nlikes(eve,alice) :- happy(frank).\nsunny :- likes(eve,alice).\nlikes(dave,carol) :- sunny.\nbig(phone) :- likes(dave,carol).\nsad(carol) :- big(phone).\nwet(apple) :- big(apple), sunny, tall(alice).\nwet(car) :- friend(alice,dave), enemy(frank,eve), tall(george).\nparent(carol,alice) :- hot, happy(frank).\nparent(eve,alice) :- enemy(alice,george).\nhungry(george) :- enemy(bob,george).\nhot :- sunny.\nhungry(alice) :- friend(carol,frank).\nhot :- sibling(george,carol).\nhappy(bob).\nparent(eve,carol).\nenemy(dave,frank).\nwet(phone).",
    "natural language": "You are given the following information:\nIf bob is happy, then frank is happy.\nIf frank is happy, then eve likes alice.\nIf eve likes alice, then it is sunny.\nIf it is sunny, then dave likes carol.\nIf dave likes carol, then phone is big.\nIf phone is big, then carol is sad.\nIf apple is big and it is sunny and alice is tall, then apple is wet.\nIf alice is a friend of dave and frank is an enemy of eve and george is tall, then car is wet.\nIf it is hot and frank is happy, then carol is a parent of alice.\nIf alice is an enemy of george, then eve is a parent of alice.\nIf bob is an enemy of george, then george is hungry.\nIf it is sunny, then it is hot.\nIf carol is a friend of frank, then alice is hungry.\nIf george is a sibling of carol, then it is hot.\n\nAnd the following facts:\nbob is happy.\neve is a parent of carol.\ndave is an enemy of frank.\nphone is wet.\n\nQUESTION:\nIs eve likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "happy(frank) :- happy(bob).\nlikes(eve,alice) :- happy(frank).\nsunny :- likes(eve,alice).\nlikes(dave,carol) :- sunny.\nbig(phone) :- likes(dave,carol).\nsad(carol) :- big(phone).\nwet(apple) :- big(apple), sunny, tall(alice).\nwet(car) :- friend(alice,dave), enemy(frank,eve), tall(george).\nparent(carol,alice) :- hot, happy(frank).\nparent(eve,alice) :- enemy(alice,george).\nhungry(george) :- enemy(bob,george).\nhot :- sunny.\nhungry(alice) :- friend(carol,frank).\nhot :- sibling(george,carol).\nparent(eve,carol).\nenemy(dave,frank).\nwet(phone).",
    "natural language": "You are given the following rules:\nIf bob is happy, then frank is happy.\nIf frank is happy, then eve likes alice.\nIf eve likes alice, then it is sunny.\nIf it is sunny, then dave likes carol.\nIf dave likes carol, then phone is big.\nIf phone is big, then carol is sad.\nIf apple is big and it is sunny and alice is tall, then apple is wet.\nIf alice is a friend of dave and frank is an enemy of eve and george is tall, then car is wet.\nIf it is hot and frank is happy, then carol is a parent of alice.\nIf alice is an enemy of george, then eve is a parent of alice.\nIf bob is an enemy of george, then george is hungry.\nIf it is sunny, then it is hot.\nIf carol is a friend of frank, then alice is hungry.\nIf george is a sibling of carol, then it is hot.\n\nAnd the following facts:\nbob is happy.\neve is a parent of carol.\ndave is an enemy of frank.\nphone is wet.\n\nOBSERVATION: carol is sad is true.\n\nQUESTION:\nCould bob is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "happy(frank) :- happy(bob).\nlikes(eve,alice) :- happy(frank).\nsunny :- likes(eve,alice).\nlikes(dave,carol) :- sunny.\nbig(phone) :- likes(dave,carol).\nsad(carol) :- big(phone).\nwet(apple) :- big(apple), sunny, tall(alice).\nwet(car) :- friend(alice,dave), enemy(frank,eve), tall(george).\nparent(carol,alice) :- hot, happy(frank).\nparent(eve,alice) :- enemy(alice,george).\nhungry(george) :- enemy(bob,george).\nhot :- sunny.\nhungry(alice) :- friend(carol,frank).\nhot :- sibling(george,carol).\nhappy(bob).\nparent(eve,carol).\nwet(phone).",
    "natural language": "You are given the following rules:\nIf bob is happy, then frank is happy.\nIf frank is happy, then eve likes alice.\nIf eve likes alice, then it is sunny.\nIf it is sunny, then dave likes carol.\nIf dave likes carol, then phone is big.\nIf phone is big, then carol is sad.\nIf apple is big and it is sunny and alice is tall, then apple is wet.\nIf alice is a friend of dave and frank is an enemy of eve and george is tall, then car is wet.\nIf it is hot and frank is happy, then carol is a parent of alice.\nIf alice is an enemy of george, then eve is a parent of alice.\nIf bob is an enemy of george, then george is hungry.\nIf it is sunny, then it is hot.\nIf carol is a friend of frank, then alice is hungry.\nIf george is a sibling of carol, then it is hot.\n\nAnd the following facts:\nbob is happy.\neve is a parent of carol.\ndave is an enemy of frank.\nphone is wet.\n\nOBSERVATION: carol is sad is true.\n\nQUESTION:\nCould dave is an enemy of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "happy(frank) :- happy(bob).\nlikes(eve,alice) :- happy(frank).\nsunny :- likes(eve,alice).\nlikes(dave,carol) :- sunny.\nbig(phone) :- likes(dave,carol).\nsad(carol) :- big(phone).\nwet(apple) :- big(apple), sunny, tall(alice).\nwet(car) :- friend(alice,dave), enemy(frank,eve), tall(george).\nparent(carol,alice) :- hot, happy(frank).\nparent(eve,alice) :- enemy(alice,george).\nhungry(george) :- enemy(bob,george).\nhot :- sunny.\nhungry(alice) :- friend(carol,frank).\nhot :- sibling(george,carol).\nhappy(bob).\nparent(eve,carol).\nenemy(dave,frank).",
    "natural language": "You are given the following rules:\nIf bob is happy, then frank is happy.\nIf frank is happy, then eve likes alice.\nIf eve likes alice, then it is sunny.\nIf it is sunny, then dave likes carol.\nIf dave likes carol, then phone is big.\nIf phone is big, then carol is sad.\nIf apple is big and it is sunny and alice is tall, then apple is wet.\nIf alice is a friend of dave and frank is an enemy of eve and george is tall, then car is wet.\nIf it is hot and frank is happy, then carol is a parent of alice.\nIf alice is an enemy of george, then eve is a parent of alice.\nIf bob is an enemy of george, then george is hungry.\nIf it is sunny, then it is hot.\nIf carol is a friend of frank, then alice is hungry.\nIf george is a sibling of carol, then it is hot.\n\nAnd the following facts:\nbob is happy.\neve is a parent of carol.\ndave is an enemy of frank.\nphone is wet.\n\nOBSERVATION: carol is sad is true.\n\nQUESTION:\nCould phone is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(alice,carol).",
    "c": "parent(alice,dave) :- hungry(alice).\ncold :- parent(alice,dave).\nbig(book) :- cold.\nowns(alice,ball) :- big(book).\nparent(eve,george) :- owns(alice,ball).\nparent(alice,carol) :- parent(eve,george).\nfriend(carol,alice) :- parent(alice,carol).\nfriend(carol,bob) :- friend(carol,alice).\nlikes(george,george) :- likes(bob,frank), likes(carol,carol).\nlikes(carol,carol) :- likes(carol,bob).\nhappy(george) :- happy(carol).\nhappy(alice) :- cold, sunny, small(ball).\nenemy(eve,carol) :- sad(alice).\nlikes(dave,frank) :- parent(eve,bob), dislikes(eve,book).\nhungry(alice).\ndislikes(bob,george).\nlikes(george,bob).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nIf alice is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then alice owns ball.\nIf alice owns ball, then eve is a parent of george.\nIf eve is a parent of george, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a friend of alice.\nIf carol is a friend of alice, then carol is a friend of bob.\nIf bob likes frank and carol likes carol, then george likes george.\nIf carol likes bob, then carol likes carol.\nIf carol is happy, then george is happy.\nIf it is cold and it is sunny and ball is small, then alice is happy.\nIf alice is sad, then eve is an enemy of carol.\nIf eve is a parent of bob and eve dislikes book, then dave likes frank.\n\nAnd the following facts:\nalice is hungry.\nbob dislikes george.\ngeorge likes bob.\neve is an enemy of bob.\n\nQUESTION:\nIs alice is a parent of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,george).",
    "c": "parent(alice,dave) :- hungry(alice).\ncold :- parent(alice,dave).\nbig(book) :- cold.\nowns(alice,ball) :- big(book).\nparent(eve,george) :- owns(alice,ball).\nparent(alice,carol) :- parent(eve,george).\nfriend(carol,alice) :- parent(alice,carol).\nfriend(carol,bob) :- friend(carol,alice).\nlikes(george,george) :- likes(bob,frank), likes(carol,carol).\nlikes(carol,carol) :- likes(carol,bob).\nhappy(george) :- happy(carol).\nhappy(alice) :- cold, sunny, small(ball).\nenemy(eve,carol) :- sad(alice).\nlikes(dave,frank) :- parent(eve,bob), dislikes(eve,book).\nhungry(alice).\ndislikes(bob,george).\nlikes(george,bob).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nIf alice is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then alice owns ball.\nIf alice owns ball, then eve is a parent of george.\nIf eve is a parent of george, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a friend of alice.\nIf carol is a friend of alice, then carol is a friend of bob.\nIf bob likes frank and carol likes carol, then george likes george.\nIf carol likes bob, then carol likes carol.\nIf carol is happy, then george is happy.\nIf it is cold and it is sunny and ball is small, then alice is happy.\nIf alice is sad, then eve is an enemy of carol.\nIf eve is a parent of bob and eve dislikes book, then dave likes frank.\n\nAnd the following facts:\nalice is hungry.\nbob dislikes george.\ngeorge likes bob.\neve is an enemy of bob.\n\nQUESTION:\nIs eve is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "parent(alice,dave) :- hungry(alice).\ncold :- parent(alice,dave).\nbig(book) :- cold.\nowns(alice,ball) :- big(book).\nparent(eve,george) :- owns(alice,ball).\nparent(alice,carol) :- parent(eve,george).\nfriend(carol,alice) :- parent(alice,carol).\nfriend(carol,bob) :- friend(carol,alice).\nlikes(george,george) :- likes(bob,frank), likes(carol,carol).\nlikes(carol,carol) :- likes(carol,bob).\nhappy(george) :- happy(carol).\nhappy(alice) :- cold, sunny, small(ball).\nenemy(eve,carol) :- sad(alice).\nlikes(dave,frank) :- parent(eve,bob), dislikes(eve,book).\nhungry(alice).\ndislikes(bob,george).\nlikes(george,bob).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nIf alice is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then alice owns ball.\nIf alice owns ball, then eve is a parent of george.\nIf eve is a parent of george, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a friend of alice.\nIf carol is a friend of alice, then carol is a friend of bob.\nIf bob likes frank and carol likes carol, then george likes george.\nIf carol likes bob, then carol likes carol.\nIf carol is happy, then george is happy.\nIf it is cold and it is sunny and ball is small, then alice is happy.\nIf alice is sad, then eve is an enemy of carol.\nIf eve is a parent of bob and eve dislikes book, then dave likes frank.\n\nAnd the following facts:\nalice is hungry.\nbob dislikes george.\ngeorge likes bob.\neve is an enemy of bob.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,phone).",
    "c": "parent(alice,dave) :- hungry(alice).\ncold :- parent(alice,dave).\nbig(book) :- cold.\nowns(alice,ball) :- big(book).\nparent(eve,george) :- owns(alice,ball).\nparent(alice,carol) :- parent(eve,george).\nfriend(carol,alice) :- parent(alice,carol).\nfriend(carol,bob) :- friend(carol,alice).\nlikes(george,george) :- likes(bob,frank), likes(carol,carol).\nlikes(carol,carol) :- likes(carol,bob).\nhappy(george) :- happy(carol).\nhappy(alice) :- cold, sunny, small(ball).\nenemy(eve,carol) :- sad(alice).\nlikes(dave,frank) :- parent(eve,bob), dislikes(eve,book).\nhungry(alice).\ndislikes(bob,george).\nlikes(george,bob).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nIf alice is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then alice owns ball.\nIf alice owns ball, then eve is a parent of george.\nIf eve is a parent of george, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a friend of alice.\nIf carol is a friend of alice, then carol is a friend of bob.\nIf bob likes frank and carol likes carol, then george likes george.\nIf carol likes bob, then carol likes carol.\nIf carol is happy, then george is happy.\nIf it is cold and it is sunny and ball is small, then alice is happy.\nIf alice is sad, then eve is an enemy of carol.\nIf eve is a parent of bob and eve dislikes book, then dave likes frank.\n\nAnd the following facts:\nalice is hungry.\nbob dislikes george.\ngeorge likes bob.\neve is an enemy of bob.\n\nQUESTION:\nIs alice likes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,book).",
    "c": "parent(alice,dave) :- hungry(alice).\ncold :- parent(alice,dave).\nbig(book) :- cold.\nowns(alice,ball) :- big(book).\nparent(eve,george) :- owns(alice,ball).\nparent(alice,carol) :- parent(eve,george).\nfriend(carol,alice) :- parent(alice,carol).\nfriend(carol,bob) :- friend(carol,alice).\nlikes(george,george) :- likes(bob,frank), likes(carol,carol).\nlikes(carol,carol) :- likes(carol,bob).\nhappy(george) :- happy(carol).\nhappy(alice) :- cold, sunny, small(ball).\nenemy(eve,carol) :- sad(alice).\nlikes(dave,frank) :- parent(eve,bob), dislikes(eve,book).\nhungry(alice).\ndislikes(bob,george).\nlikes(george,bob).\nenemy(eve,bob).",
    "natural language": "You are given the following information:\nIf alice is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then alice owns ball.\nIf alice owns ball, then eve is a parent of george.\nIf eve is a parent of george, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a friend of alice.\nIf carol is a friend of alice, then carol is a friend of bob.\nIf bob likes frank and carol likes carol, then george likes george.\nIf carol likes bob, then carol likes carol.\nIf carol is happy, then george is happy.\nIf it is cold and it is sunny and ball is small, then alice is happy.\nIf alice is sad, then eve is an enemy of carol.\nIf eve is a parent of bob and eve dislikes book, then dave likes frank.\n\nAnd the following facts:\nalice is hungry.\nbob dislikes george.\ngeorge likes bob.\neve is an enemy of bob.\n\nQUESTION:\nIs carol dislikes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "parent(alice,dave) :- hungry(alice).\ncold :- parent(alice,dave).\nbig(book) :- cold.\nowns(alice,ball) :- big(book).\nparent(eve,george) :- owns(alice,ball).\nparent(alice,carol) :- parent(eve,george).\nfriend(carol,alice) :- parent(alice,carol).\nfriend(carol,bob) :- friend(carol,alice).\nlikes(george,george) :- likes(bob,frank), likes(carol,carol).\nlikes(carol,carol) :- likes(carol,bob).\nhappy(george) :- happy(carol).\nhappy(alice) :- cold, sunny, small(ball).\nenemy(eve,carol) :- sad(alice).\nlikes(dave,frank) :- parent(eve,bob), dislikes(eve,book).\ndislikes(bob,george).\nlikes(george,bob).\nenemy(eve,bob).",
    "natural language": "You are given the following rules:\nIf alice is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then alice owns ball.\nIf alice owns ball, then eve is a parent of george.\nIf eve is a parent of george, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a friend of alice.\nIf carol is a friend of alice, then carol is a friend of bob.\nIf bob likes frank and carol likes carol, then george likes george.\nIf carol likes bob, then carol likes carol.\nIf carol is happy, then george is happy.\nIf it is cold and it is sunny and ball is small, then alice is happy.\nIf alice is sad, then eve is an enemy of carol.\nIf eve is a parent of bob and eve dislikes book, then dave likes frank.\n\nAnd the following facts:\nalice is hungry.\nbob dislikes george.\ngeorge likes bob.\neve is an enemy of bob.\n\nOBSERVATION: carol is a friend of bob is true.\n\nQUESTION:\nCould alice is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,george).",
    "c": "parent(alice,dave) :- hungry(alice).\ncold :- parent(alice,dave).\nbig(book) :- cold.\nowns(alice,ball) :- big(book).\nparent(eve,george) :- owns(alice,ball).\nparent(alice,carol) :- parent(eve,george).\nfriend(carol,alice) :- parent(alice,carol).\nfriend(carol,bob) :- friend(carol,alice).\nlikes(george,george) :- likes(bob,frank), likes(carol,carol).\nlikes(carol,carol) :- likes(carol,bob).\nhappy(george) :- happy(carol).\nhappy(alice) :- cold, sunny, small(ball).\nenemy(eve,carol) :- sad(alice).\nlikes(dave,frank) :- parent(eve,bob), dislikes(eve,book).\nhungry(alice).\nlikes(george,bob).\nenemy(eve,bob).",
    "natural language": "You are given the following rules:\nIf alice is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then alice owns ball.\nIf alice owns ball, then eve is a parent of george.\nIf eve is a parent of george, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a friend of alice.\nIf carol is a friend of alice, then carol is a friend of bob.\nIf bob likes frank and carol likes carol, then george likes george.\nIf carol likes bob, then carol likes carol.\nIf carol is happy, then george is happy.\nIf it is cold and it is sunny and ball is small, then alice is happy.\nIf alice is sad, then eve is an enemy of carol.\nIf eve is a parent of bob and eve dislikes book, then dave likes frank.\n\nAnd the following facts:\nalice is hungry.\nbob dislikes george.\ngeorge likes bob.\neve is an enemy of bob.\n\nOBSERVATION: carol is a friend of bob is true.\n\nQUESTION:\nCould bob dislikes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(george,bob).",
    "c": "parent(alice,dave) :- hungry(alice).\ncold :- parent(alice,dave).\nbig(book) :- cold.\nowns(alice,ball) :- big(book).\nparent(eve,george) :- owns(alice,ball).\nparent(alice,carol) :- parent(eve,george).\nfriend(carol,alice) :- parent(alice,carol).\nfriend(carol,bob) :- friend(carol,alice).\nlikes(george,george) :- likes(bob,frank), likes(carol,carol).\nlikes(carol,carol) :- likes(carol,bob).\nhappy(george) :- happy(carol).\nhappy(alice) :- cold, sunny, small(ball).\nenemy(eve,carol) :- sad(alice).\nlikes(dave,frank) :- parent(eve,bob), dislikes(eve,book).\nhungry(alice).\ndislikes(bob,george).\nenemy(eve,bob).",
    "natural language": "You are given the following rules:\nIf alice is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then alice owns ball.\nIf alice owns ball, then eve is a parent of george.\nIf eve is a parent of george, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a friend of alice.\nIf carol is a friend of alice, then carol is a friend of bob.\nIf bob likes frank and carol likes carol, then george likes george.\nIf carol likes bob, then carol likes carol.\nIf carol is happy, then george is happy.\nIf it is cold and it is sunny and ball is small, then alice is happy.\nIf alice is sad, then eve is an enemy of carol.\nIf eve is a parent of bob and eve dislikes book, then dave likes frank.\n\nAnd the following facts:\nalice is hungry.\nbob dislikes george.\ngeorge likes bob.\neve is an enemy of bob.\n\nOBSERVATION: carol is a friend of bob is true.\n\nQUESTION:\nCould george likes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "tall(dave).",
    "c": "likes(eve,pencil) :- friend(dave,eve).\nowns(george,car) :- likes(eve,pencil).\nhot :- owns(george,car).\nsad(dave) :- hot.\nowns(carol,ball) :- sad(dave).\ntall(dave) :- owns(carol,ball).\nlikes(carol,apple) :- tall(dave).\nenemy(dave,alice) :- likes(carol,apple).\nparent(eve,frank) :- cold.\nparent(dave,frank) :- tall(frank).\nsmall(pencil) :- small(ball), cold, happy(carol).\nsmall(ball) :- owns(carol,phone), parent(alice,frank), small(car).\nsad(frank) :- big(apple), sad(dave), happy(alice).\nhungry(dave) :- happy(bob).\nfriend(dave,eve).\nenemy(george,bob).\nlikes(alice,ball).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nIf dave is a friend of eve, then eve likes pencil.\nIf eve likes pencil, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then dave is sad.\nIf dave is sad, then carol owns ball.\nIf carol owns ball, then dave is tall.\nIf dave is tall, then carol likes apple.\nIf carol likes apple, then dave is an enemy of alice.\nIf it is cold, then eve is a parent of frank.\nIf frank is tall, then dave is a parent of frank.\nIf ball is small and it is cold and carol is happy, then pencil is small.\nIf carol owns phone and alice is a parent of frank and car is small, then ball is small.\nIf apple is big and dave is sad and alice is happy, then frank is sad.\nIf bob is happy, then dave is hungry.\n\nAnd the following facts:\ndave is a friend of eve.\ngeorge is an enemy of bob.\nalice likes ball.\neve is a friend of alice.\n\nQUESTION:\nIs dave is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,ball).",
    "c": "likes(eve,pencil) :- friend(dave,eve).\nowns(george,car) :- likes(eve,pencil).\nhot :- owns(george,car).\nsad(dave) :- hot.\nowns(carol,ball) :- sad(dave).\ntall(dave) :- owns(carol,ball).\nlikes(carol,apple) :- tall(dave).\nenemy(dave,alice) :- likes(carol,apple).\nparent(eve,frank) :- cold.\nparent(dave,frank) :- tall(frank).\nsmall(pencil) :- small(ball), cold, happy(carol).\nsmall(ball) :- owns(carol,phone), parent(alice,frank), small(car).\nsad(frank) :- big(apple), sad(dave), happy(alice).\nhungry(dave) :- happy(bob).\nfriend(dave,eve).\nenemy(george,bob).\nlikes(alice,ball).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nIf dave is a friend of eve, then eve likes pencil.\nIf eve likes pencil, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then dave is sad.\nIf dave is sad, then carol owns ball.\nIf carol owns ball, then dave is tall.\nIf dave is tall, then carol likes apple.\nIf carol likes apple, then dave is an enemy of alice.\nIf it is cold, then eve is a parent of frank.\nIf frank is tall, then dave is a parent of frank.\nIf ball is small and it is cold and carol is happy, then pencil is small.\nIf carol owns phone and alice is a parent of frank and car is small, then ball is small.\nIf apple is big and dave is sad and alice is happy, then frank is sad.\nIf bob is happy, then dave is hungry.\n\nAnd the following facts:\ndave is a friend of eve.\ngeorge is an enemy of bob.\nalice likes ball.\neve is a friend of alice.\n\nQUESTION:\nIs alice likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(dave).",
    "c": "likes(eve,pencil) :- friend(dave,eve).\nowns(george,car) :- likes(eve,pencil).\nhot :- owns(george,car).\nsad(dave) :- hot.\nowns(carol,ball) :- sad(dave).\ntall(dave) :- owns(carol,ball).\nlikes(carol,apple) :- tall(dave).\nenemy(dave,alice) :- likes(carol,apple).\nparent(eve,frank) :- cold.\nparent(dave,frank) :- tall(frank).\nsmall(pencil) :- small(ball), cold, happy(carol).\nsmall(ball) :- owns(carol,phone), parent(alice,frank), small(car).\nsad(frank) :- big(apple), sad(dave), happy(alice).\nhungry(dave) :- happy(bob).\nfriend(dave,eve).\nenemy(george,bob).\nlikes(alice,ball).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nIf dave is a friend of eve, then eve likes pencil.\nIf eve likes pencil, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then dave is sad.\nIf dave is sad, then carol owns ball.\nIf carol owns ball, then dave is tall.\nIf dave is tall, then carol likes apple.\nIf carol likes apple, then dave is an enemy of alice.\nIf it is cold, then eve is a parent of frank.\nIf frank is tall, then dave is a parent of frank.\nIf ball is small and it is cold and carol is happy, then pencil is small.\nIf carol owns phone and alice is a parent of frank and car is small, then ball is small.\nIf apple is big and dave is sad and alice is happy, then frank is sad.\nIf bob is happy, then dave is hungry.\n\nAnd the following facts:\ndave is a friend of eve.\ngeorge is an enemy of bob.\nalice likes ball.\neve is a friend of alice.\n\nQUESTION:\nIs dave is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,alice).",
    "c": "likes(eve,pencil) :- friend(dave,eve).\nowns(george,car) :- likes(eve,pencil).\nhot :- owns(george,car).\nsad(dave) :- hot.\nowns(carol,ball) :- sad(dave).\ntall(dave) :- owns(carol,ball).\nlikes(carol,apple) :- tall(dave).\nenemy(dave,alice) :- likes(carol,apple).\nparent(eve,frank) :- cold.\nparent(dave,frank) :- tall(frank).\nsmall(pencil) :- small(ball), cold, happy(carol).\nsmall(ball) :- owns(carol,phone), parent(alice,frank), small(car).\nsad(frank) :- big(apple), sad(dave), happy(alice).\nhungry(dave) :- happy(bob).\nfriend(dave,eve).\nenemy(george,bob).\nlikes(alice,ball).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nIf dave is a friend of eve, then eve likes pencil.\nIf eve likes pencil, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then dave is sad.\nIf dave is sad, then carol owns ball.\nIf carol owns ball, then dave is tall.\nIf dave is tall, then carol likes apple.\nIf carol likes apple, then dave is an enemy of alice.\nIf it is cold, then eve is a parent of frank.\nIf frank is tall, then dave is a parent of frank.\nIf ball is small and it is cold and carol is happy, then pencil is small.\nIf carol owns phone and alice is a parent of frank and car is small, then ball is small.\nIf apple is big and dave is sad and alice is happy, then frank is sad.\nIf bob is happy, then dave is hungry.\n\nAnd the following facts:\ndave is a friend of eve.\ngeorge is an enemy of bob.\nalice likes ball.\neve is a friend of alice.\n\nQUESTION:\nIs eve likes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "likes(eve,pencil) :- friend(dave,eve).\nowns(george,car) :- likes(eve,pencil).\nhot :- owns(george,car).\nsad(dave) :- hot.\nowns(carol,ball) :- sad(dave).\ntall(dave) :- owns(carol,ball).\nlikes(carol,apple) :- tall(dave).\nenemy(dave,alice) :- likes(carol,apple).\nparent(eve,frank) :- cold.\nparent(dave,frank) :- tall(frank).\nsmall(pencil) :- small(ball), cold, happy(carol).\nsmall(ball) :- owns(carol,phone), parent(alice,frank), small(car).\nsad(frank) :- big(apple), sad(dave), happy(alice).\nhungry(dave) :- happy(bob).\nfriend(dave,eve).\nenemy(george,bob).\nlikes(alice,ball).\nfriend(eve,alice).",
    "natural language": "You are given the following information:\nIf dave is a friend of eve, then eve likes pencil.\nIf eve likes pencil, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then dave is sad.\nIf dave is sad, then carol owns ball.\nIf carol owns ball, then dave is tall.\nIf dave is tall, then carol likes apple.\nIf carol likes apple, then dave is an enemy of alice.\nIf it is cold, then eve is a parent of frank.\nIf frank is tall, then dave is a parent of frank.\nIf ball is small and it is cold and carol is happy, then pencil is small.\nIf carol owns phone and alice is a parent of frank and car is small, then ball is small.\nIf apple is big and dave is sad and alice is happy, then frank is sad.\nIf bob is happy, then dave is hungry.\n\nAnd the following facts:\ndave is a friend of eve.\ngeorge is an enemy of bob.\nalice likes ball.\neve is a friend of alice.\n\nQUESTION:\nIs eve is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,eve).",
    "c": "likes(eve,pencil) :- friend(dave,eve).\nowns(george,car) :- likes(eve,pencil).\nhot :- owns(george,car).\nsad(dave) :- hot.\nowns(carol,ball) :- sad(dave).\ntall(dave) :- owns(carol,ball).\nlikes(carol,apple) :- tall(dave).\nenemy(dave,alice) :- likes(carol,apple).\nparent(eve,frank) :- cold.\nparent(dave,frank) :- tall(frank).\nsmall(pencil) :- small(ball), cold, happy(carol).\nsmall(ball) :- owns(carol,phone), parent(alice,frank), small(car).\nsad(frank) :- big(apple), sad(dave), happy(alice).\nhungry(dave) :- happy(bob).\nenemy(george,bob).\nlikes(alice,ball).\nfriend(eve,alice).",
    "natural language": "You are given the following rules:\nIf dave is a friend of eve, then eve likes pencil.\nIf eve likes pencil, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then dave is sad.\nIf dave is sad, then carol owns ball.\nIf carol owns ball, then dave is tall.\nIf dave is tall, then carol likes apple.\nIf carol likes apple, then dave is an enemy of alice.\nIf it is cold, then eve is a parent of frank.\nIf frank is tall, then dave is a parent of frank.\nIf ball is small and it is cold and carol is happy, then pencil is small.\nIf carol owns phone and alice is a parent of frank and car is small, then ball is small.\nIf apple is big and dave is sad and alice is happy, then frank is sad.\nIf bob is happy, then dave is hungry.\n\nAnd the following facts:\ndave is a friend of eve.\ngeorge is an enemy of bob.\nalice likes ball.\neve is a friend of alice.\n\nOBSERVATION: dave is an enemy of alice is true.\n\nQUESTION:\nCould dave is a friend of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,ball).",
    "c": "likes(eve,pencil) :- friend(dave,eve).\nowns(george,car) :- likes(eve,pencil).\nhot :- owns(george,car).\nsad(dave) :- hot.\nowns(carol,ball) :- sad(dave).\ntall(dave) :- owns(carol,ball).\nlikes(carol,apple) :- tall(dave).\nenemy(dave,alice) :- likes(carol,apple).\nparent(eve,frank) :- cold.\nparent(dave,frank) :- tall(frank).\nsmall(pencil) :- small(ball), cold, happy(carol).\nsmall(ball) :- owns(carol,phone), parent(alice,frank), small(car).\nsad(frank) :- big(apple), sad(dave), happy(alice).\nhungry(dave) :- happy(bob).\nfriend(dave,eve).\nenemy(george,bob).\nfriend(eve,alice).",
    "natural language": "You are given the following rules:\nIf dave is a friend of eve, then eve likes pencil.\nIf eve likes pencil, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then dave is sad.\nIf dave is sad, then carol owns ball.\nIf carol owns ball, then dave is tall.\nIf dave is tall, then carol likes apple.\nIf carol likes apple, then dave is an enemy of alice.\nIf it is cold, then eve is a parent of frank.\nIf frank is tall, then dave is a parent of frank.\nIf ball is small and it is cold and carol is happy, then pencil is small.\nIf carol owns phone and alice is a parent of frank and car is small, then ball is small.\nIf apple is big and dave is sad and alice is happy, then frank is sad.\nIf bob is happy, then dave is hungry.\n\nAnd the following facts:\ndave is a friend of eve.\ngeorge is an enemy of bob.\nalice likes ball.\neve is a friend of alice.\n\nOBSERVATION: dave is an enemy of alice is true.\n\nQUESTION:\nCould alice likes ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "likes(eve,pencil) :- friend(dave,eve).\nowns(george,car) :- likes(eve,pencil).\nhot :- owns(george,car).\nsad(dave) :- hot.\nowns(carol,ball) :- sad(dave).\ntall(dave) :- owns(carol,ball).\nlikes(carol,apple) :- tall(dave).\nenemy(dave,alice) :- likes(carol,apple).\nparent(eve,frank) :- cold.\nparent(dave,frank) :- tall(frank).\nsmall(pencil) :- small(ball), cold, happy(carol).\nsmall(ball) :- owns(carol,phone), parent(alice,frank), small(car).\nsad(frank) :- big(apple), sad(dave), happy(alice).\nhungry(dave) :- happy(bob).\nfriend(dave,eve).\nenemy(george,bob).\nlikes(alice,ball).",
    "natural language": "You are given the following rules:\nIf dave is a friend of eve, then eve likes pencil.\nIf eve likes pencil, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then dave is sad.\nIf dave is sad, then carol owns ball.\nIf carol owns ball, then dave is tall.\nIf dave is tall, then carol likes apple.\nIf carol likes apple, then dave is an enemy of alice.\nIf it is cold, then eve is a parent of frank.\nIf frank is tall, then dave is a parent of frank.\nIf ball is small and it is cold and carol is happy, then pencil is small.\nIf carol owns phone and alice is a parent of frank and car is small, then ball is small.\nIf apple is big and dave is sad and alice is happy, then frank is sad.\nIf bob is happy, then dave is hungry.\n\nAnd the following facts:\ndave is a friend of eve.\ngeorge is an enemy of bob.\nalice likes ball.\neve is a friend of alice.\n\nOBSERVATION: dave is an enemy of alice is true.\n\nQUESTION:\nCould eve is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "cold.",
    "c": "big(apple) :- cold.\nenemy(eve,bob) :- big(apple).\nwet(car) :- enemy(eve,bob).\ntall(frank) :- wet(car).\nfriend(eve,bob) :- tall(frank).\ncold :- friend(eve,bob).\nsad(dave) :- cold.\nhungry(alice) :- sad(dave).\nsmall(car) :- hungry(alice).\nsad(alice) :- small(car).\nenemy(frank,bob) :- big(phone).\nenemy(carol,dave) :- hot, enemy(dave,george), parent(alice,alice).\nsibling(george,alice) :- wet(apple), hot, hungry(frank).\nsad(dave) :- hungry(george).\ncold.\nfriend(eve,carol).\nsad(dave).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is cold, then apple is big.\nIf apple is big, then eve is an enemy of bob.\nIf eve is an enemy of bob, then car is wet.\nIf car is wet, then frank is tall.\nIf frank is tall, then eve is a friend of bob.\nIf eve is a friend of bob, then it is cold.\nIf it is cold, then dave is sad.\nIf dave is sad, then alice is hungry.\nIf alice is hungry, then car is small.\nIf car is small, then alice is sad.\nIf phone is big, then frank is an enemy of bob.\nIf it is hot and dave is an enemy of george and alice is a parent of alice, then carol is an enemy of dave.\nIf apple is wet and it is hot and frank is hungry, then george is a sibling of alice.\nIf george is hungry, then dave is sad.\n\nAnd the following facts:\nit is cold.\neve is a friend of carol.\ndave is sad.\nphone is wet.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "big(apple) :- cold.\nenemy(eve,bob) :- big(apple).\nwet(car) :- enemy(eve,bob).\ntall(frank) :- wet(car).\nfriend(eve,bob) :- tall(frank).\ncold :- friend(eve,bob).\nsad(dave) :- cold.\nhungry(alice) :- sad(dave).\nsmall(car) :- hungry(alice).\nsad(alice) :- small(car).\nenemy(frank,bob) :- big(phone).\nenemy(carol,dave) :- hot, enemy(dave,george), parent(alice,alice).\nsibling(george,alice) :- wet(apple), hot, hungry(frank).\nsad(dave) :- hungry(george).\ncold.\nfriend(eve,carol).\nsad(dave).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is cold, then apple is big.\nIf apple is big, then eve is an enemy of bob.\nIf eve is an enemy of bob, then car is wet.\nIf car is wet, then frank is tall.\nIf frank is tall, then eve is a friend of bob.\nIf eve is a friend of bob, then it is cold.\nIf it is cold, then dave is sad.\nIf dave is sad, then alice is hungry.\nIf alice is hungry, then car is small.\nIf car is small, then alice is sad.\nIf phone is big, then frank is an enemy of bob.\nIf it is hot and dave is an enemy of george and alice is a parent of alice, then carol is an enemy of dave.\nIf apple is wet and it is hot and frank is hungry, then george is a sibling of alice.\nIf george is hungry, then dave is sad.\n\nAnd the following facts:\nit is cold.\neve is a friend of carol.\ndave is sad.\nphone is wet.\n\nQUESTION:\nIs alice is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,bob).",
    "c": "big(apple) :- cold.\nenemy(eve,bob) :- big(apple).\nwet(car) :- enemy(eve,bob).\ntall(frank) :- wet(car).\nfriend(eve,bob) :- tall(frank).\ncold :- friend(eve,bob).\nsad(dave) :- cold.\nhungry(alice) :- sad(dave).\nsmall(car) :- hungry(alice).\nsad(alice) :- small(car).\nenemy(frank,bob) :- big(phone).\nenemy(carol,dave) :- hot, enemy(dave,george), parent(alice,alice).\nsibling(george,alice) :- wet(apple), hot, hungry(frank).\nsad(dave) :- hungry(george).\ncold.\nfriend(eve,carol).\nsad(dave).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is cold, then apple is big.\nIf apple is big, then eve is an enemy of bob.\nIf eve is an enemy of bob, then car is wet.\nIf car is wet, then frank is tall.\nIf frank is tall, then eve is a friend of bob.\nIf eve is a friend of bob, then it is cold.\nIf it is cold, then dave is sad.\nIf dave is sad, then alice is hungry.\nIf alice is hungry, then car is small.\nIf car is small, then alice is sad.\nIf phone is big, then frank is an enemy of bob.\nIf it is hot and dave is an enemy of george and alice is a parent of alice, then carol is an enemy of dave.\nIf apple is wet and it is hot and frank is hungry, then george is a sibling of alice.\nIf george is hungry, then dave is sad.\n\nAnd the following facts:\nit is cold.\neve is a friend of carol.\ndave is sad.\nphone is wet.\n\nQUESTION:\nIs eve is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,dave).",
    "c": "big(apple) :- cold.\nenemy(eve,bob) :- big(apple).\nwet(car) :- enemy(eve,bob).\ntall(frank) :- wet(car).\nfriend(eve,bob) :- tall(frank).\ncold :- friend(eve,bob).\nsad(dave) :- cold.\nhungry(alice) :- sad(dave).\nsmall(car) :- hungry(alice).\nsad(alice) :- small(car).\nenemy(frank,bob) :- big(phone).\nenemy(carol,dave) :- hot, enemy(dave,george), parent(alice,alice).\nsibling(george,alice) :- wet(apple), hot, hungry(frank).\nsad(dave) :- hungry(george).\ncold.\nfriend(eve,carol).\nsad(dave).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is cold, then apple is big.\nIf apple is big, then eve is an enemy of bob.\nIf eve is an enemy of bob, then car is wet.\nIf car is wet, then frank is tall.\nIf frank is tall, then eve is a friend of bob.\nIf eve is a friend of bob, then it is cold.\nIf it is cold, then dave is sad.\nIf dave is sad, then alice is hungry.\nIf alice is hungry, then car is small.\nIf car is small, then alice is sad.\nIf phone is big, then frank is an enemy of bob.\nIf it is hot and dave is an enemy of george and alice is a parent of alice, then carol is an enemy of dave.\nIf apple is wet and it is hot and frank is hungry, then george is a sibling of alice.\nIf george is hungry, then dave is sad.\n\nAnd the following facts:\nit is cold.\neve is a friend of carol.\ndave is sad.\nphone is wet.\n\nQUESTION:\nIs george is an enemy of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,alice).",
    "c": "big(apple) :- cold.\nenemy(eve,bob) :- big(apple).\nwet(car) :- enemy(eve,bob).\ntall(frank) :- wet(car).\nfriend(eve,bob) :- tall(frank).\ncold :- friend(eve,bob).\nsad(dave) :- cold.\nhungry(alice) :- sad(dave).\nsmall(car) :- hungry(alice).\nsad(alice) :- small(car).\nenemy(frank,bob) :- big(phone).\nenemy(carol,dave) :- hot, enemy(dave,george), parent(alice,alice).\nsibling(george,alice) :- wet(apple), hot, hungry(frank).\nsad(dave) :- hungry(george).\ncold.\nfriend(eve,carol).\nsad(dave).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is cold, then apple is big.\nIf apple is big, then eve is an enemy of bob.\nIf eve is an enemy of bob, then car is wet.\nIf car is wet, then frank is tall.\nIf frank is tall, then eve is a friend of bob.\nIf eve is a friend of bob, then it is cold.\nIf it is cold, then dave is sad.\nIf dave is sad, then alice is hungry.\nIf alice is hungry, then car is small.\nIf car is small, then alice is sad.\nIf phone is big, then frank is an enemy of bob.\nIf it is hot and dave is an enemy of george and alice is a parent of alice, then carol is an enemy of dave.\nIf apple is wet and it is hot and frank is hungry, then george is a sibling of alice.\nIf george is hungry, then dave is sad.\n\nAnd the following facts:\nit is cold.\neve is a friend of carol.\ndave is sad.\nphone is wet.\n\nQUESTION:\nIs carol is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(dave).",
    "c": "big(apple) :- cold.\nenemy(eve,bob) :- big(apple).\nwet(car) :- enemy(eve,bob).\ntall(frank) :- wet(car).\nfriend(eve,bob) :- tall(frank).\ncold :- friend(eve,bob).\nsad(dave) :- cold.\nhungry(alice) :- sad(dave).\nsmall(car) :- hungry(alice).\nsad(alice) :- small(car).\nenemy(frank,bob) :- big(phone).\nenemy(carol,dave) :- hot, enemy(dave,george), parent(alice,alice).\nsibling(george,alice) :- wet(apple), hot, hungry(frank).\nsad(dave) :- hungry(george).\ncold.\nfriend(eve,carol).\nwet(phone).",
    "natural language": "You are given the following rules:\nIf it is cold, then apple is big.\nIf apple is big, then eve is an enemy of bob.\nIf eve is an enemy of bob, then car is wet.\nIf car is wet, then frank is tall.\nIf frank is tall, then eve is a friend of bob.\nIf eve is a friend of bob, then it is cold.\nIf it is cold, then dave is sad.\nIf dave is sad, then alice is hungry.\nIf alice is hungry, then car is small.\nIf car is small, then alice is sad.\nIf phone is big, then frank is an enemy of bob.\nIf it is hot and dave is an enemy of george and alice is a parent of alice, then carol is an enemy of dave.\nIf apple is wet and it is hot and frank is hungry, then george is a sibling of alice.\nIf george is hungry, then dave is sad.\n\nAnd the following facts:\nit is cold.\neve is a friend of carol.\ndave is sad.\nphone is wet.\n\nOBSERVATION: alice is sad is true.\n\nQUESTION:\nCould dave is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "big(apple) :- cold.\nenemy(eve,bob) :- big(apple).\nwet(car) :- enemy(eve,bob).\ntall(frank) :- wet(car).\nfriend(eve,bob) :- tall(frank).\ncold :- friend(eve,bob).\nsad(dave) :- cold.\nhungry(alice) :- sad(dave).\nsmall(car) :- hungry(alice).\nsad(alice) :- small(car).\nenemy(frank,bob) :- big(phone).\nenemy(carol,dave) :- hot, enemy(dave,george), parent(alice,alice).\nsibling(george,alice) :- wet(apple), hot, hungry(frank).\nsad(dave) :- hungry(george).\ncold.\nfriend(eve,carol).\nsad(dave).",
    "natural language": "You are given the following rules:\nIf it is cold, then apple is big.\nIf apple is big, then eve is an enemy of bob.\nIf eve is an enemy of bob, then car is wet.\nIf car is wet, then frank is tall.\nIf frank is tall, then eve is a friend of bob.\nIf eve is a friend of bob, then it is cold.\nIf it is cold, then dave is sad.\nIf dave is sad, then alice is hungry.\nIf alice is hungry, then car is small.\nIf car is small, then alice is sad.\nIf phone is big, then frank is an enemy of bob.\nIf it is hot and dave is an enemy of george and alice is a parent of alice, then carol is an enemy of dave.\nIf apple is wet and it is hot and frank is hungry, then george is a sibling of alice.\nIf george is hungry, then dave is sad.\n\nAnd the following facts:\nit is cold.\neve is a friend of carol.\ndave is sad.\nphone is wet.\n\nOBSERVATION: alice is sad is true.\n\nQUESTION:\nCould phone is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "cold.",
    "c": "big(apple) :- cold.\nenemy(eve,bob) :- big(apple).\nwet(car) :- enemy(eve,bob).\ntall(frank) :- wet(car).\nfriend(eve,bob) :- tall(frank).\ncold :- friend(eve,bob).\nsad(dave) :- cold.\nhungry(alice) :- sad(dave).\nsmall(car) :- hungry(alice).\nsad(alice) :- small(car).\nenemy(frank,bob) :- big(phone).\nenemy(carol,dave) :- hot, enemy(dave,george), parent(alice,alice).\nsibling(george,alice) :- wet(apple), hot, hungry(frank).\nsad(dave) :- hungry(george).\nfriend(eve,carol).\nsad(dave).\nwet(phone).",
    "natural language": "You are given the following rules:\nIf it is cold, then apple is big.\nIf apple is big, then eve is an enemy of bob.\nIf eve is an enemy of bob, then car is wet.\nIf car is wet, then frank is tall.\nIf frank is tall, then eve is a friend of bob.\nIf eve is a friend of bob, then it is cold.\nIf it is cold, then dave is sad.\nIf dave is sad, then alice is hungry.\nIf alice is hungry, then car is small.\nIf car is small, then alice is sad.\nIf phone is big, then frank is an enemy of bob.\nIf it is hot and dave is an enemy of george and alice is a parent of alice, then carol is an enemy of dave.\nIf apple is wet and it is hot and frank is hungry, then george is a sibling of alice.\nIf george is hungry, then dave is sad.\n\nAnd the following facts:\nit is cold.\neve is a friend of carol.\ndave is sad.\nphone is wet.\n\nOBSERVATION: alice is sad is true.\n\nQUESTION:\nCould it is cold be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,bob).",
    "c": "tall(carol) :- hot.\nsunny :- tall(carol).\nhappy(frank) :- sunny.\ntall(carol) :- happy(frank).\nsibling(alice,eve) :- tall(carol).\ncold :- sibling(alice,eve).\nfriend(alice,eve) :- cold.\nsibling(eve,frank) :- friend(alice,eve).\nparent(bob,bob) :- sibling(eve,frank).\nbig(book) :- parent(bob,bob).\ntall(frank) :- happy(dave).\nenemy(eve,dave) :- enemy(carol,dave), owns(alice,apple), sunny.\nenemy(dave,eve) :- sibling(carol,george).\nhungry(george) :- sibling(frank,eve).\nhot.\nparent(dave,bob).\nfriend(frank,alice).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then carol is tall.\nIf carol is tall, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is cold.\nIf it is cold, then alice is a friend of eve.\nIf alice is a friend of eve, then eve is a sibling of frank.\nIf eve is a sibling of frank, then bob is a parent of bob.\nIf bob is a parent of bob, then book is big.\nIf dave is happy, then frank is tall.\nIf carol is an enemy of dave and alice owns apple and it is sunny, then eve is an enemy of dave.\nIf carol is a sibling of george, then dave is an enemy of eve.\nIf frank is a sibling of eve, then george is hungry.\n\nAnd the following facts:\nit is hot.\ndave is a parent of bob.\nfrank is a friend of alice.\nalice is an enemy of bob.\n\nQUESTION:\nIs alice is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "tall(carol) :- hot.\nsunny :- tall(carol).\nhappy(frank) :- sunny.\ntall(carol) :- happy(frank).\nsibling(alice,eve) :- tall(carol).\ncold :- sibling(alice,eve).\nfriend(alice,eve) :- cold.\nsibling(eve,frank) :- friend(alice,eve).\nparent(bob,bob) :- sibling(eve,frank).\nbig(book) :- parent(bob,bob).\ntall(frank) :- happy(dave).\nenemy(eve,dave) :- enemy(carol,dave), owns(alice,apple), sunny.\nenemy(dave,eve) :- sibling(carol,george).\nhungry(george) :- sibling(frank,eve).\nhot.\nparent(dave,bob).\nfriend(frank,alice).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then carol is tall.\nIf carol is tall, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is cold.\nIf it is cold, then alice is a friend of eve.\nIf alice is a friend of eve, then eve is a sibling of frank.\nIf eve is a sibling of frank, then bob is a parent of bob.\nIf bob is a parent of bob, then book is big.\nIf dave is happy, then frank is tall.\nIf carol is an enemy of dave and alice owns apple and it is sunny, then eve is an enemy of dave.\nIf carol is a sibling of george, then dave is an enemy of eve.\nIf frank is a sibling of eve, then george is hungry.\n\nAnd the following facts:\nit is hot.\ndave is a parent of bob.\nfrank is a friend of alice.\nalice is an enemy of bob.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "tall(carol) :- hot.\nsunny :- tall(carol).\nhappy(frank) :- sunny.\ntall(carol) :- happy(frank).\nsibling(alice,eve) :- tall(carol).\ncold :- sibling(alice,eve).\nfriend(alice,eve) :- cold.\nsibling(eve,frank) :- friend(alice,eve).\nparent(bob,bob) :- sibling(eve,frank).\nbig(book) :- parent(bob,bob).\ntall(frank) :- happy(dave).\nenemy(eve,dave) :- enemy(carol,dave), owns(alice,apple), sunny.\nenemy(dave,eve) :- sibling(carol,george).\nhungry(george) :- sibling(frank,eve).\nhot.\nparent(dave,bob).\nfriend(frank,alice).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then carol is tall.\nIf carol is tall, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is cold.\nIf it is cold, then alice is a friend of eve.\nIf alice is a friend of eve, then eve is a sibling of frank.\nIf eve is a sibling of frank, then bob is a parent of bob.\nIf bob is a parent of bob, then book is big.\nIf dave is happy, then frank is tall.\nIf carol is an enemy of dave and alice owns apple and it is sunny, then eve is an enemy of dave.\nIf carol is a sibling of george, then dave is an enemy of eve.\nIf frank is a sibling of eve, then george is hungry.\n\nAnd the following facts:\nit is hot.\ndave is a parent of bob.\nfrank is a friend of alice.\nalice is an enemy of bob.\n\nQUESTION:\nIs alice is a friend of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,apple).",
    "c": "tall(carol) :- hot.\nsunny :- tall(carol).\nhappy(frank) :- sunny.\ntall(carol) :- happy(frank).\nsibling(alice,eve) :- tall(carol).\ncold :- sibling(alice,eve).\nfriend(alice,eve) :- cold.\nsibling(eve,frank) :- friend(alice,eve).\nparent(bob,bob) :- sibling(eve,frank).\nbig(book) :- parent(bob,bob).\ntall(frank) :- happy(dave).\nenemy(eve,dave) :- enemy(carol,dave), owns(alice,apple), sunny.\nenemy(dave,eve) :- sibling(carol,george).\nhungry(george) :- sibling(frank,eve).\nhot.\nparent(dave,bob).\nfriend(frank,alice).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then carol is tall.\nIf carol is tall, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is cold.\nIf it is cold, then alice is a friend of eve.\nIf alice is a friend of eve, then eve is a sibling of frank.\nIf eve is a sibling of frank, then bob is a parent of bob.\nIf bob is a parent of bob, then book is big.\nIf dave is happy, then frank is tall.\nIf carol is an enemy of dave and alice owns apple and it is sunny, then eve is an enemy of dave.\nIf carol is a sibling of george, then dave is an enemy of eve.\nIf frank is a sibling of eve, then george is hungry.\n\nAnd the following facts:\nit is hot.\ndave is a parent of bob.\nfrank is a friend of alice.\nalice is an enemy of bob.\n\nQUESTION:\nIs frank owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,car).",
    "c": "tall(carol) :- hot.\nsunny :- tall(carol).\nhappy(frank) :- sunny.\ntall(carol) :- happy(frank).\nsibling(alice,eve) :- tall(carol).\ncold :- sibling(alice,eve).\nfriend(alice,eve) :- cold.\nsibling(eve,frank) :- friend(alice,eve).\nparent(bob,bob) :- sibling(eve,frank).\nbig(book) :- parent(bob,bob).\ntall(frank) :- happy(dave).\nenemy(eve,dave) :- enemy(carol,dave), owns(alice,apple), sunny.\nenemy(dave,eve) :- sibling(carol,george).\nhungry(george) :- sibling(frank,eve).\nhot.\nparent(dave,bob).\nfriend(frank,alice).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then carol is tall.\nIf carol is tall, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is cold.\nIf it is cold, then alice is a friend of eve.\nIf alice is a friend of eve, then eve is a sibling of frank.\nIf eve is a sibling of frank, then bob is a parent of bob.\nIf bob is a parent of bob, then book is big.\nIf dave is happy, then frank is tall.\nIf carol is an enemy of dave and alice owns apple and it is sunny, then eve is an enemy of dave.\nIf carol is a sibling of george, then dave is an enemy of eve.\nIf frank is a sibling of eve, then george is hungry.\n\nAnd the following facts:\nit is hot.\ndave is a parent of bob.\nfrank is a friend of alice.\nalice is an enemy of bob.\n\nQUESTION:\nIs alice owns car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "tall(carol) :- hot.\nsunny :- tall(carol).\nhappy(frank) :- sunny.\ntall(carol) :- happy(frank).\nsibling(alice,eve) :- tall(carol).\ncold :- sibling(alice,eve).\nfriend(alice,eve) :- cold.\nsibling(eve,frank) :- friend(alice,eve).\nparent(bob,bob) :- sibling(eve,frank).\nbig(book) :- parent(bob,bob).\ntall(frank) :- happy(dave).\nenemy(eve,dave) :- enemy(carol,dave), owns(alice,apple), sunny.\nenemy(dave,eve) :- sibling(carol,george).\nhungry(george) :- sibling(frank,eve).\nparent(dave,bob).\nfriend(frank,alice).\nenemy(alice,bob).",
    "natural language": "You are given the following rules:\nIf it is hot, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then carol is tall.\nIf carol is tall, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is cold.\nIf it is cold, then alice is a friend of eve.\nIf alice is a friend of eve, then eve is a sibling of frank.\nIf eve is a sibling of frank, then bob is a parent of bob.\nIf bob is a parent of bob, then book is big.\nIf dave is happy, then frank is tall.\nIf carol is an enemy of dave and alice owns apple and it is sunny, then eve is an enemy of dave.\nIf carol is a sibling of george, then dave is an enemy of eve.\nIf frank is a sibling of eve, then george is hungry.\n\nAnd the following facts:\nit is hot.\ndave is a parent of bob.\nfrank is a friend of alice.\nalice is an enemy of bob.\n\nOBSERVATION: book is big is true.\n\nQUESTION:\nCould it is hot be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "tall(carol) :- hot.\nsunny :- tall(carol).\nhappy(frank) :- sunny.\ntall(carol) :- happy(frank).\nsibling(alice,eve) :- tall(carol).\ncold :- sibling(alice,eve).\nfriend(alice,eve) :- cold.\nsibling(eve,frank) :- friend(alice,eve).\nparent(bob,bob) :- sibling(eve,frank).\nbig(book) :- parent(bob,bob).\ntall(frank) :- happy(dave).\nenemy(eve,dave) :- enemy(carol,dave), owns(alice,apple), sunny.\nenemy(dave,eve) :- sibling(carol,george).\nhungry(george) :- sibling(frank,eve).\nhot.\nfriend(frank,alice).\nenemy(alice,bob).",
    "natural language": "You are given the following rules:\nIf it is hot, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then carol is tall.\nIf carol is tall, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is cold.\nIf it is cold, then alice is a friend of eve.\nIf alice is a friend of eve, then eve is a sibling of frank.\nIf eve is a sibling of frank, then bob is a parent of bob.\nIf bob is a parent of bob, then book is big.\nIf dave is happy, then frank is tall.\nIf carol is an enemy of dave and alice owns apple and it is sunny, then eve is an enemy of dave.\nIf carol is a sibling of george, then dave is an enemy of eve.\nIf frank is a sibling of eve, then george is hungry.\n\nAnd the following facts:\nit is hot.\ndave is a parent of bob.\nfrank is a friend of alice.\nalice is an enemy of bob.\n\nOBSERVATION: book is big is true.\n\nQUESTION:\nCould dave is a parent of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(frank,alice).",
    "c": "tall(carol) :- hot.\nsunny :- tall(carol).\nhappy(frank) :- sunny.\ntall(carol) :- happy(frank).\nsibling(alice,eve) :- tall(carol).\ncold :- sibling(alice,eve).\nfriend(alice,eve) :- cold.\nsibling(eve,frank) :- friend(alice,eve).\nparent(bob,bob) :- sibling(eve,frank).\nbig(book) :- parent(bob,bob).\ntall(frank) :- happy(dave).\nenemy(eve,dave) :- enemy(carol,dave), owns(alice,apple), sunny.\nenemy(dave,eve) :- sibling(carol,george).\nhungry(george) :- sibling(frank,eve).\nhot.\nparent(dave,bob).\nenemy(alice,bob).",
    "natural language": "You are given the following rules:\nIf it is hot, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then carol is tall.\nIf carol is tall, then alice is a sibling of eve.\nIf alice is a sibling of eve, then it is cold.\nIf it is cold, then alice is a friend of eve.\nIf alice is a friend of eve, then eve is a sibling of frank.\nIf eve is a sibling of frank, then bob is a parent of bob.\nIf bob is a parent of bob, then book is big.\nIf dave is happy, then frank is tall.\nIf carol is an enemy of dave and alice owns apple and it is sunny, then eve is an enemy of dave.\nIf carol is a sibling of george, then dave is an enemy of eve.\nIf frank is a sibling of eve, then george is hungry.\n\nAnd the following facts:\nit is hot.\ndave is a parent of bob.\nfrank is a friend of alice.\nalice is an enemy of bob.\n\nOBSERVATION: book is big is true.\n\nQUESTION:\nCould frank is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(carol,carol).",
    "c": "sibling(carol,carol) :- sad(alice).\ntall(frank) :- sibling(carol,carol).\nhappy(george) :- small(pencil).\ntall(frank) :- tall(bob), small(apple).\nhappy(frank) :- sibling(frank,bob), happy(bob), big(apple).\ntall(frank) :- hungry(george).\nparent(carol,george) :- parent(carol,carol), parent(dave,george), sad(carol).\nparent(carol,carol) :- wet(ball).\ntall(george) :- sad(eve).\nowns(alice,pencil) :- sunny, owns(carol,apple), wet(car).\nowns(eve,phone) :- owns(carol,apple), friend(dave,george).\nhot :- hot, enemy(bob,bob), parent(frank,george).\nhot :- hungry(carol), cold, sunny.\nowns(carol,book) :- owns(carol,apple), sibling(eve,frank).\nsad(alice).\nsibling(dave,alice).\nowns(carol,book).\nparent(dave,eve).\nenemy(george,frank).\nparent(alice,carol).\nsad(george).\nenemy(eve,dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then carol is a sibling of carol.\nIf carol is a sibling of carol, then frank is tall.\nIf pencil is small, then george is happy.\nIf bob is tall and apple is small, then frank is tall.\nIf frank is a sibling of bob and bob is happy and apple is big, then frank is happy.\nIf george is hungry, then frank is tall.\nIf carol is a parent of carol and dave is a parent of george and carol is sad, then carol is a parent of george.\nIf ball is wet, then carol is a parent of carol.\nIf eve is sad, then george is tall.\nIf it is sunny and carol owns apple and car is wet, then alice owns pencil.\nIf carol owns apple and dave is a friend of george, then eve owns phone.\nIf it is hot and bob is an enemy of bob and frank is a parent of george, then it is hot.\nIf carol is hungry and it is cold and it is sunny, then it is hot.\nIf carol owns apple and eve is a sibling of frank, then carol owns book.\n\nAnd the following facts:\nalice is sad.\ndave is a sibling of alice.\ncarol owns book.\ndave is a parent of eve.\ngeorge is an enemy of frank.\nalice is a parent of carol.\ngeorge is sad.\neve is an enemy of dave.\n\nQUESTION:\nIs carol is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(alice).",
    "c": "sibling(carol,carol) :- sad(alice).\ntall(frank) :- sibling(carol,carol).\nhappy(george) :- small(pencil).\ntall(frank) :- tall(bob), small(apple).\nhappy(frank) :- sibling(frank,bob), happy(bob), big(apple).\ntall(frank) :- hungry(george).\nparent(carol,george) :- parent(carol,carol), parent(dave,george), sad(carol).\nparent(carol,carol) :- wet(ball).\ntall(george) :- sad(eve).\nowns(alice,pencil) :- sunny, owns(carol,apple), wet(car).\nowns(eve,phone) :- owns(carol,apple), friend(dave,george).\nhot :- hot, enemy(bob,bob), parent(frank,george).\nhot :- hungry(carol), cold, sunny.\nowns(carol,book) :- owns(carol,apple), sibling(eve,frank).\nsad(alice).\nsibling(dave,alice).\nowns(carol,book).\nparent(dave,eve).\nenemy(george,frank).\nparent(alice,carol).\nsad(george).\nenemy(eve,dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then carol is a sibling of carol.\nIf carol is a sibling of carol, then frank is tall.\nIf pencil is small, then george is happy.\nIf bob is tall and apple is small, then frank is tall.\nIf frank is a sibling of bob and bob is happy and apple is big, then frank is happy.\nIf george is hungry, then frank is tall.\nIf carol is a parent of carol and dave is a parent of george and carol is sad, then carol is a parent of george.\nIf ball is wet, then carol is a parent of carol.\nIf eve is sad, then george is tall.\nIf it is sunny and carol owns apple and car is wet, then alice owns pencil.\nIf carol owns apple and dave is a friend of george, then eve owns phone.\nIf it is hot and bob is an enemy of bob and frank is a parent of george, then it is hot.\nIf carol is hungry and it is cold and it is sunny, then it is hot.\nIf carol owns apple and eve is a sibling of frank, then carol owns book.\n\nAnd the following facts:\nalice is sad.\ndave is a sibling of alice.\ncarol owns book.\ndave is a parent of eve.\ngeorge is an enemy of frank.\nalice is a parent of carol.\ngeorge is sad.\neve is an enemy of dave.\n\nQUESTION:\nIs alice is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,eve).",
    "c": "sibling(carol,carol) :- sad(alice).\ntall(frank) :- sibling(carol,carol).\nhappy(george) :- small(pencil).\ntall(frank) :- tall(bob), small(apple).\nhappy(frank) :- sibling(frank,bob), happy(bob), big(apple).\ntall(frank) :- hungry(george).\nparent(carol,george) :- parent(carol,carol), parent(dave,george), sad(carol).\nparent(carol,carol) :- wet(ball).\ntall(george) :- sad(eve).\nowns(alice,pencil) :- sunny, owns(carol,apple), wet(car).\nowns(eve,phone) :- owns(carol,apple), friend(dave,george).\nhot :- hot, enemy(bob,bob), parent(frank,george).\nhot :- hungry(carol), cold, sunny.\nowns(carol,book) :- owns(carol,apple), sibling(eve,frank).\nsad(alice).\nsibling(dave,alice).\nowns(carol,book).\nparent(dave,eve).\nenemy(george,frank).\nparent(alice,carol).\nsad(george).\nenemy(eve,dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then carol is a sibling of carol.\nIf carol is a sibling of carol, then frank is tall.\nIf pencil is small, then george is happy.\nIf bob is tall and apple is small, then frank is tall.\nIf frank is a sibling of bob and bob is happy and apple is big, then frank is happy.\nIf george is hungry, then frank is tall.\nIf carol is a parent of carol and dave is a parent of george and carol is sad, then carol is a parent of george.\nIf ball is wet, then carol is a parent of carol.\nIf eve is sad, then george is tall.\nIf it is sunny and carol owns apple and car is wet, then alice owns pencil.\nIf carol owns apple and dave is a friend of george, then eve owns phone.\nIf it is hot and bob is an enemy of bob and frank is a parent of george, then it is hot.\nIf carol is hungry and it is cold and it is sunny, then it is hot.\nIf carol owns apple and eve is a sibling of frank, then carol owns book.\n\nAnd the following facts:\nalice is sad.\ndave is a sibling of alice.\ncarol owns book.\ndave is a parent of eve.\ngeorge is an enemy of frank.\nalice is a parent of carol.\ngeorge is sad.\neve is an enemy of dave.\n\nQUESTION:\nIs dave is a parent of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,alice).",
    "c": "sibling(carol,carol) :- sad(alice).\ntall(frank) :- sibling(carol,carol).\nhappy(george) :- small(pencil).\ntall(frank) :- tall(bob), small(apple).\nhappy(frank) :- sibling(frank,bob), happy(bob), big(apple).\ntall(frank) :- hungry(george).\nparent(carol,george) :- parent(carol,carol), parent(dave,george), sad(carol).\nparent(carol,carol) :- wet(ball).\ntall(george) :- sad(eve).\nowns(alice,pencil) :- sunny, owns(carol,apple), wet(car).\nowns(eve,phone) :- owns(carol,apple), friend(dave,george).\nhot :- hot, enemy(bob,bob), parent(frank,george).\nhot :- hungry(carol), cold, sunny.\nowns(carol,book) :- owns(carol,apple), sibling(eve,frank).\nsad(alice).\nsibling(dave,alice).\nowns(carol,book).\nparent(dave,eve).\nenemy(george,frank).\nparent(alice,carol).\nsad(george).\nenemy(eve,dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then carol is a sibling of carol.\nIf carol is a sibling of carol, then frank is tall.\nIf pencil is small, then george is happy.\nIf bob is tall and apple is small, then frank is tall.\nIf frank is a sibling of bob and bob is happy and apple is big, then frank is happy.\nIf george is hungry, then frank is tall.\nIf carol is a parent of carol and dave is a parent of george and carol is sad, then carol is a parent of george.\nIf ball is wet, then carol is a parent of carol.\nIf eve is sad, then george is tall.\nIf it is sunny and carol owns apple and car is wet, then alice owns pencil.\nIf carol owns apple and dave is a friend of george, then eve owns phone.\nIf it is hot and bob is an enemy of bob and frank is a parent of george, then it is hot.\nIf carol is hungry and it is cold and it is sunny, then it is hot.\nIf carol owns apple and eve is a sibling of frank, then carol owns book.\n\nAnd the following facts:\nalice is sad.\ndave is a sibling of alice.\ncarol owns book.\ndave is a parent of eve.\ngeorge is an enemy of frank.\nalice is a parent of carol.\ngeorge is sad.\neve is an enemy of dave.\n\nQUESTION:\nIs bob is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "sibling(carol,carol) :- sad(alice).\ntall(frank) :- sibling(carol,carol).\nhappy(george) :- small(pencil).\ntall(frank) :- tall(bob), small(apple).\nhappy(frank) :- sibling(frank,bob), happy(bob), big(apple).\ntall(frank) :- hungry(george).\nparent(carol,george) :- parent(carol,carol), parent(dave,george), sad(carol).\nparent(carol,carol) :- wet(ball).\ntall(george) :- sad(eve).\nowns(alice,pencil) :- sunny, owns(carol,apple), wet(car).\nowns(eve,phone) :- owns(carol,apple), friend(dave,george).\nhot :- hot, enemy(bob,bob), parent(frank,george).\nhot :- hungry(carol), cold, sunny.\nowns(carol,book) :- owns(carol,apple), sibling(eve,frank).\nsad(alice).\nsibling(dave,alice).\nowns(carol,book).\nparent(dave,eve).\nenemy(george,frank).\nparent(alice,carol).\nsad(george).\nenemy(eve,dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then carol is a sibling of carol.\nIf carol is a sibling of carol, then frank is tall.\nIf pencil is small, then george is happy.\nIf bob is tall and apple is small, then frank is tall.\nIf frank is a sibling of bob and bob is happy and apple is big, then frank is happy.\nIf george is hungry, then frank is tall.\nIf carol is a parent of carol and dave is a parent of george and carol is sad, then carol is a parent of george.\nIf ball is wet, then carol is a parent of carol.\nIf eve is sad, then george is tall.\nIf it is sunny and carol owns apple and car is wet, then alice owns pencil.\nIf carol owns apple and dave is a friend of george, then eve owns phone.\nIf it is hot and bob is an enemy of bob and frank is a parent of george, then it is hot.\nIf carol is hungry and it is cold and it is sunny, then it is hot.\nIf carol owns apple and eve is a sibling of frank, then carol owns book.\n\nAnd the following facts:\nalice is sad.\ndave is a sibling of alice.\ncarol owns book.\ndave is a parent of eve.\ngeorge is an enemy of frank.\nalice is a parent of carol.\ngeorge is sad.\neve is an enemy of dave.\n\nQUESTION:\nIs alice is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(alice).",
    "c": "sibling(carol,carol) :- sad(alice).\ntall(frank) :- sibling(carol,carol).\nhappy(george) :- small(pencil).\ntall(frank) :- tall(bob), small(apple).\nhappy(frank) :- sibling(frank,bob), happy(bob), big(apple).\ntall(frank) :- hungry(george).\nparent(carol,george) :- parent(carol,carol), parent(dave,george), sad(carol).\nparent(carol,carol) :- wet(ball).\ntall(george) :- sad(eve).\nowns(alice,pencil) :- sunny, owns(carol,apple), wet(car).\nowns(eve,phone) :- owns(carol,apple), friend(dave,george).\nhot :- hot, enemy(bob,bob), parent(frank,george).\nhot :- hungry(carol), cold, sunny.\nowns(carol,book) :- owns(carol,apple), sibling(eve,frank).\nsibling(dave,alice).\nowns(carol,book).\nparent(dave,eve).\nenemy(george,frank).\nparent(alice,carol).\nsad(george).\nenemy(eve,dave).",
    "natural language": "You are given the following rules:\nIf alice is sad, then carol is a sibling of carol.\nIf carol is a sibling of carol, then frank is tall.\nIf pencil is small, then george is happy.\nIf bob is tall and apple is small, then frank is tall.\nIf frank is a sibling of bob and bob is happy and apple is big, then frank is happy.\nIf george is hungry, then frank is tall.\nIf carol is a parent of carol and dave is a parent of george and carol is sad, then carol is a parent of george.\nIf ball is wet, then carol is a parent of carol.\nIf eve is sad, then george is tall.\nIf it is sunny and carol owns apple and car is wet, then alice owns pencil.\nIf carol owns apple and dave is a friend of george, then eve owns phone.\nIf it is hot and bob is an enemy of bob and frank is a parent of george, then it is hot.\nIf carol is hungry and it is cold and it is sunny, then it is hot.\nIf carol owns apple and eve is a sibling of frank, then carol owns book.\n\nAnd the following facts:\nalice is sad.\ndave is a sibling of alice.\ncarol owns book.\ndave is a parent of eve.\ngeorge is an enemy of frank.\nalice is a parent of carol.\ngeorge is sad.\neve is an enemy of dave.\n\nOBSERVATION: frank is tall is true.\n\nQUESTION:\nCould alice is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(alice,carol).",
    "c": "sibling(carol,carol) :- sad(alice).\ntall(frank) :- sibling(carol,carol).\nhappy(george) :- small(pencil).\ntall(frank) :- tall(bob), small(apple).\nhappy(frank) :- sibling(frank,bob), happy(bob), big(apple).\ntall(frank) :- hungry(george).\nparent(carol,george) :- parent(carol,carol), parent(dave,george), sad(carol).\nparent(carol,carol) :- wet(ball).\ntall(george) :- sad(eve).\nowns(alice,pencil) :- sunny, owns(carol,apple), wet(car).\nowns(eve,phone) :- owns(carol,apple), friend(dave,george).\nhot :- hot, enemy(bob,bob), parent(frank,george).\nhot :- hungry(carol), cold, sunny.\nowns(carol,book) :- owns(carol,apple), sibling(eve,frank).\nsad(alice).\nsibling(dave,alice).\nowns(carol,book).\nparent(dave,eve).\nenemy(george,frank).\nsad(george).\nenemy(eve,dave).",
    "natural language": "You are given the following rules:\nIf alice is sad, then carol is a sibling of carol.\nIf carol is a sibling of carol, then frank is tall.\nIf pencil is small, then george is happy.\nIf bob is tall and apple is small, then frank is tall.\nIf frank is a sibling of bob and bob is happy and apple is big, then frank is happy.\nIf george is hungry, then frank is tall.\nIf carol is a parent of carol and dave is a parent of george and carol is sad, then carol is a parent of george.\nIf ball is wet, then carol is a parent of carol.\nIf eve is sad, then george is tall.\nIf it is sunny and carol owns apple and car is wet, then alice owns pencil.\nIf carol owns apple and dave is a friend of george, then eve owns phone.\nIf it is hot and bob is an enemy of bob and frank is a parent of george, then it is hot.\nIf carol is hungry and it is cold and it is sunny, then it is hot.\nIf carol owns apple and eve is a sibling of frank, then carol owns book.\n\nAnd the following facts:\nalice is sad.\ndave is a sibling of alice.\ncarol owns book.\ndave is a parent of eve.\ngeorge is an enemy of frank.\nalice is a parent of carol.\ngeorge is sad.\neve is an enemy of dave.\n\nOBSERVATION: frank is tall is true.\n\nQUESTION:\nCould alice is a parent of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,alice).",
    "c": "sibling(carol,carol) :- sad(alice).\ntall(frank) :- sibling(carol,carol).\nhappy(george) :- small(pencil).\ntall(frank) :- tall(bob), small(apple).\nhappy(frank) :- sibling(frank,bob), happy(bob), big(apple).\ntall(frank) :- hungry(george).\nparent(carol,george) :- parent(carol,carol), parent(dave,george), sad(carol).\nparent(carol,carol) :- wet(ball).\ntall(george) :- sad(eve).\nowns(alice,pencil) :- sunny, owns(carol,apple), wet(car).\nowns(eve,phone) :- owns(carol,apple), friend(dave,george).\nhot :- hot, enemy(bob,bob), parent(frank,george).\nhot :- hungry(carol), cold, sunny.\nowns(carol,book) :- owns(carol,apple), sibling(eve,frank).\nsad(alice).\nowns(carol,book).\nparent(dave,eve).\nenemy(george,frank).\nparent(alice,carol).\nsad(george).\nenemy(eve,dave).",
    "natural language": "You are given the following rules:\nIf alice is sad, then carol is a sibling of carol.\nIf carol is a sibling of carol, then frank is tall.\nIf pencil is small, then george is happy.\nIf bob is tall and apple is small, then frank is tall.\nIf frank is a sibling of bob and bob is happy and apple is big, then frank is happy.\nIf george is hungry, then frank is tall.\nIf carol is a parent of carol and dave is a parent of george and carol is sad, then carol is a parent of george.\nIf ball is wet, then carol is a parent of carol.\nIf eve is sad, then george is tall.\nIf it is sunny and carol owns apple and car is wet, then alice owns pencil.\nIf carol owns apple and dave is a friend of george, then eve owns phone.\nIf it is hot and bob is an enemy of bob and frank is a parent of george, then it is hot.\nIf carol is hungry and it is cold and it is sunny, then it is hot.\nIf carol owns apple and eve is a sibling of frank, then carol owns book.\n\nAnd the following facts:\nalice is sad.\ndave is a sibling of alice.\ncarol owns book.\ndave is a parent of eve.\ngeorge is an enemy of frank.\nalice is a parent of carol.\ngeorge is sad.\neve is an enemy of dave.\n\nOBSERVATION: frank is tall is true.\n\nQUESTION:\nCould dave is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "wet(phone) :- sunny.\nhungry(eve) :- wet(phone).\nwet(book) :- small(apple), tall(eve), dislikes(frank,alice).\nwet(pencil) :- cold.\nparent(bob,eve) :- likes(eve,alice).\ndislikes(frank,pencil) :- big(phone), big(car), wet(pencil).\nparent(alice,bob) :- small(ball), wet(apple), owns(carol,phone).\nlikes(alice,bob) :- hungry(bob).\nlikes(dave,phone) :- parent(dave,frank), dislikes(alice,pencil), enemy(alice,frank).\nfriend(george,alice) :- owns(george,pencil), enemy(frank,frank).\ndislikes(george,car) :- wet(apple), dislikes(bob,frank).\nfriend(carol,frank) :- small(car).\nhungry(frank) :- small(ball), tall(carol).\nhot :- tall(alice), likes(eve,george).\nsunny.\nowns(alice,phone).\nlikes(bob,phone).\nowns(carol,apple).\nlikes(dave,car).\ntall(frank).\ndislikes(frank,eve).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then phone is wet.\nIf phone is wet, then eve is hungry.\nIf apple is small and eve is tall and frank dislikes alice, then book is wet.\nIf it is cold, then pencil is wet.\nIf eve likes alice, then bob is a parent of eve.\nIf phone is big and car is big and pencil is wet, then frank dislikes pencil.\nIf ball is small and apple is wet and carol owns phone, then alice is a parent of bob.\nIf bob is hungry, then alice likes bob.\nIf dave is a parent of frank and alice dislikes pencil and alice is an enemy of frank, then dave likes phone.\nIf george owns pencil and frank is an enemy of frank, then george is a friend of alice.\nIf apple is wet and bob dislikes frank, then george dislikes car.\nIf car is small, then carol is a friend of frank.\nIf ball is small and carol is tall, then frank is hungry.\nIf alice is tall and eve likes george, then it is hot.\n\nAnd the following facts:\nit is sunny.\nalice owns phone.\nbob likes phone.\ncarol owns apple.\ndave likes car.\nfrank is tall.\nfrank dislikes eve.\ngeorge is a friend of frank.\n\nQUESTION:\nIs phone is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "wet(phone) :- sunny.\nhungry(eve) :- wet(phone).\nwet(book) :- small(apple), tall(eve), dislikes(frank,alice).\nwet(pencil) :- cold.\nparent(bob,eve) :- likes(eve,alice).\ndislikes(frank,pencil) :- big(phone), big(car), wet(pencil).\nparent(alice,bob) :- small(ball), wet(apple), owns(carol,phone).\nlikes(alice,bob) :- hungry(bob).\nlikes(dave,phone) :- parent(dave,frank), dislikes(alice,pencil), enemy(alice,frank).\nfriend(george,alice) :- owns(george,pencil), enemy(frank,frank).\ndislikes(george,car) :- wet(apple), dislikes(bob,frank).\nfriend(carol,frank) :- small(car).\nhungry(frank) :- small(ball), tall(carol).\nhot :- tall(alice), likes(eve,george).\nsunny.\nowns(alice,phone).\nlikes(bob,phone).\nowns(carol,apple).\nlikes(dave,car).\ntall(frank).\ndislikes(frank,eve).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then phone is wet.\nIf phone is wet, then eve is hungry.\nIf apple is small and eve is tall and frank dislikes alice, then book is wet.\nIf it is cold, then pencil is wet.\nIf eve likes alice, then bob is a parent of eve.\nIf phone is big and car is big and pencil is wet, then frank dislikes pencil.\nIf ball is small and apple is wet and carol owns phone, then alice is a parent of bob.\nIf bob is hungry, then alice likes bob.\nIf dave is a parent of frank and alice dislikes pencil and alice is an enemy of frank, then dave likes phone.\nIf george owns pencil and frank is an enemy of frank, then george is a friend of alice.\nIf apple is wet and bob dislikes frank, then george dislikes car.\nIf car is small, then carol is a friend of frank.\nIf ball is small and carol is tall, then frank is hungry.\nIf alice is tall and eve likes george, then it is hot.\n\nAnd the following facts:\nit is sunny.\nalice owns phone.\nbob likes phone.\ncarol owns apple.\ndave likes car.\nfrank is tall.\nfrank dislikes eve.\ngeorge is a friend of frank.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,frank).",
    "c": "wet(phone) :- sunny.\nhungry(eve) :- wet(phone).\nwet(book) :- small(apple), tall(eve), dislikes(frank,alice).\nwet(pencil) :- cold.\nparent(bob,eve) :- likes(eve,alice).\ndislikes(frank,pencil) :- big(phone), big(car), wet(pencil).\nparent(alice,bob) :- small(ball), wet(apple), owns(carol,phone).\nlikes(alice,bob) :- hungry(bob).\nlikes(dave,phone) :- parent(dave,frank), dislikes(alice,pencil), enemy(alice,frank).\nfriend(george,alice) :- owns(george,pencil), enemy(frank,frank).\ndislikes(george,car) :- wet(apple), dislikes(bob,frank).\nfriend(carol,frank) :- small(car).\nhungry(frank) :- small(ball), tall(carol).\nhot :- tall(alice), likes(eve,george).\nsunny.\nowns(alice,phone).\nlikes(bob,phone).\nowns(carol,apple).\nlikes(dave,car).\ntall(frank).\ndislikes(frank,eve).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then phone is wet.\nIf phone is wet, then eve is hungry.\nIf apple is small and eve is tall and frank dislikes alice, then book is wet.\nIf it is cold, then pencil is wet.\nIf eve likes alice, then bob is a parent of eve.\nIf phone is big and car is big and pencil is wet, then frank dislikes pencil.\nIf ball is small and apple is wet and carol owns phone, then alice is a parent of bob.\nIf bob is hungry, then alice likes bob.\nIf dave is a parent of frank and alice dislikes pencil and alice is an enemy of frank, then dave likes phone.\nIf george owns pencil and frank is an enemy of frank, then george is a friend of alice.\nIf apple is wet and bob dislikes frank, then george dislikes car.\nIf car is small, then carol is a friend of frank.\nIf ball is small and carol is tall, then frank is hungry.\nIf alice is tall and eve likes george, then it is hot.\n\nAnd the following facts:\nit is sunny.\nalice owns phone.\nbob likes phone.\ncarol owns apple.\ndave likes car.\nfrank is tall.\nfrank dislikes eve.\ngeorge is a friend of frank.\n\nQUESTION:\nIs george is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,phone).",
    "c": "wet(phone) :- sunny.\nhungry(eve) :- wet(phone).\nwet(book) :- small(apple), tall(eve), dislikes(frank,alice).\nwet(pencil) :- cold.\nparent(bob,eve) :- likes(eve,alice).\ndislikes(frank,pencil) :- big(phone), big(car), wet(pencil).\nparent(alice,bob) :- small(ball), wet(apple), owns(carol,phone).\nlikes(alice,bob) :- hungry(bob).\nlikes(dave,phone) :- parent(dave,frank), dislikes(alice,pencil), enemy(alice,frank).\nfriend(george,alice) :- owns(george,pencil), enemy(frank,frank).\ndislikes(george,car) :- wet(apple), dislikes(bob,frank).\nfriend(carol,frank) :- small(car).\nhungry(frank) :- small(ball), tall(carol).\nhot :- tall(alice), likes(eve,george).\nsunny.\nowns(alice,phone).\nlikes(bob,phone).\nowns(carol,apple).\nlikes(dave,car).\ntall(frank).\ndislikes(frank,eve).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then phone is wet.\nIf phone is wet, then eve is hungry.\nIf apple is small and eve is tall and frank dislikes alice, then book is wet.\nIf it is cold, then pencil is wet.\nIf eve likes alice, then bob is a parent of eve.\nIf phone is big and car is big and pencil is wet, then frank dislikes pencil.\nIf ball is small and apple is wet and carol owns phone, then alice is a parent of bob.\nIf bob is hungry, then alice likes bob.\nIf dave is a parent of frank and alice dislikes pencil and alice is an enemy of frank, then dave likes phone.\nIf george owns pencil and frank is an enemy of frank, then george is a friend of alice.\nIf apple is wet and bob dislikes frank, then george dislikes car.\nIf car is small, then carol is a friend of frank.\nIf ball is small and carol is tall, then frank is hungry.\nIf alice is tall and eve likes george, then it is hot.\n\nAnd the following facts:\nit is sunny.\nalice owns phone.\nbob likes phone.\ncarol owns apple.\ndave likes car.\nfrank is tall.\nfrank dislikes eve.\ngeorge is a friend of frank.\n\nQUESTION:\nIs carol likes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,carol).",
    "c": "wet(phone) :- sunny.\nhungry(eve) :- wet(phone).\nwet(book) :- small(apple), tall(eve), dislikes(frank,alice).\nwet(pencil) :- cold.\nparent(bob,eve) :- likes(eve,alice).\ndislikes(frank,pencil) :- big(phone), big(car), wet(pencil).\nparent(alice,bob) :- small(ball), wet(apple), owns(carol,phone).\nlikes(alice,bob) :- hungry(bob).\nlikes(dave,phone) :- parent(dave,frank), dislikes(alice,pencil), enemy(alice,frank).\nfriend(george,alice) :- owns(george,pencil), enemy(frank,frank).\ndislikes(george,car) :- wet(apple), dislikes(bob,frank).\nfriend(carol,frank) :- small(car).\nhungry(frank) :- small(ball), tall(carol).\nhot :- tall(alice), likes(eve,george).\nsunny.\nowns(alice,phone).\nlikes(bob,phone).\nowns(carol,apple).\nlikes(dave,car).\ntall(frank).\ndislikes(frank,eve).\nfriend(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then phone is wet.\nIf phone is wet, then eve is hungry.\nIf apple is small and eve is tall and frank dislikes alice, then book is wet.\nIf it is cold, then pencil is wet.\nIf eve likes alice, then bob is a parent of eve.\nIf phone is big and car is big and pencil is wet, then frank dislikes pencil.\nIf ball is small and apple is wet and carol owns phone, then alice is a parent of bob.\nIf bob is hungry, then alice likes bob.\nIf dave is a parent of frank and alice dislikes pencil and alice is an enemy of frank, then dave likes phone.\nIf george owns pencil and frank is an enemy of frank, then george is a friend of alice.\nIf apple is wet and bob dislikes frank, then george dislikes car.\nIf car is small, then carol is a friend of frank.\nIf ball is small and carol is tall, then frank is hungry.\nIf alice is tall and eve likes george, then it is hot.\n\nAnd the following facts:\nit is sunny.\nalice owns phone.\nbob likes phone.\ncarol owns apple.\ndave likes car.\nfrank is tall.\nfrank dislikes eve.\ngeorge is a friend of frank.\n\nQUESTION:\nIs george is a parent of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "wet(phone) :- sunny.\nhungry(eve) :- wet(phone).\nwet(book) :- small(apple), tall(eve), dislikes(frank,alice).\nwet(pencil) :- cold.\nparent(bob,eve) :- likes(eve,alice).\ndislikes(frank,pencil) :- big(phone), big(car), wet(pencil).\nparent(alice,bob) :- small(ball), wet(apple), owns(carol,phone).\nlikes(alice,bob) :- hungry(bob).\nlikes(dave,phone) :- parent(dave,frank), dislikes(alice,pencil), enemy(alice,frank).\nfriend(george,alice) :- owns(george,pencil), enemy(frank,frank).\ndislikes(george,car) :- wet(apple), dislikes(bob,frank).\nfriend(carol,frank) :- small(car).\nhungry(frank) :- small(ball), tall(carol).\nhot :- tall(alice), likes(eve,george).\nowns(alice,phone).\nlikes(bob,phone).\nowns(carol,apple).\nlikes(dave,car).\ntall(frank).\ndislikes(frank,eve).\nfriend(george,frank).",
    "natural language": "You are given the following rules:\nIf it is sunny, then phone is wet.\nIf phone is wet, then eve is hungry.\nIf apple is small and eve is tall and frank dislikes alice, then book is wet.\nIf it is cold, then pencil is wet.\nIf eve likes alice, then bob is a parent of eve.\nIf phone is big and car is big and pencil is wet, then frank dislikes pencil.\nIf ball is small and apple is wet and carol owns phone, then alice is a parent of bob.\nIf bob is hungry, then alice likes bob.\nIf dave is a parent of frank and alice dislikes pencil and alice is an enemy of frank, then dave likes phone.\nIf george owns pencil and frank is an enemy of frank, then george is a friend of alice.\nIf apple is wet and bob dislikes frank, then george dislikes car.\nIf car is small, then carol is a friend of frank.\nIf ball is small and carol is tall, then frank is hungry.\nIf alice is tall and eve likes george, then it is hot.\n\nAnd the following facts:\nit is sunny.\nalice owns phone.\nbob likes phone.\ncarol owns apple.\ndave likes car.\nfrank is tall.\nfrank dislikes eve.\ngeorge is a friend of frank.\n\nOBSERVATION: eve is hungry is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(carol,apple).",
    "c": "wet(phone) :- sunny.\nhungry(eve) :- wet(phone).\nwet(book) :- small(apple), tall(eve), dislikes(frank,alice).\nwet(pencil) :- cold.\nparent(bob,eve) :- likes(eve,alice).\ndislikes(frank,pencil) :- big(phone), big(car), wet(pencil).\nparent(alice,bob) :- small(ball), wet(apple), owns(carol,phone).\nlikes(alice,bob) :- hungry(bob).\nlikes(dave,phone) :- parent(dave,frank), dislikes(alice,pencil), enemy(alice,frank).\nfriend(george,alice) :- owns(george,pencil), enemy(frank,frank).\ndislikes(george,car) :- wet(apple), dislikes(bob,frank).\nfriend(carol,frank) :- small(car).\nhungry(frank) :- small(ball), tall(carol).\nhot :- tall(alice), likes(eve,george).\nsunny.\nowns(alice,phone).\nlikes(bob,phone).\nlikes(dave,car).\ntall(frank).\ndislikes(frank,eve).\nfriend(george,frank).",
    "natural language": "You are given the following rules:\nIf it is sunny, then phone is wet.\nIf phone is wet, then eve is hungry.\nIf apple is small and eve is tall and frank dislikes alice, then book is wet.\nIf it is cold, then pencil is wet.\nIf eve likes alice, then bob is a parent of eve.\nIf phone is big and car is big and pencil is wet, then frank dislikes pencil.\nIf ball is small and apple is wet and carol owns phone, then alice is a parent of bob.\nIf bob is hungry, then alice likes bob.\nIf dave is a parent of frank and alice dislikes pencil and alice is an enemy of frank, then dave likes phone.\nIf george owns pencil and frank is an enemy of frank, then george is a friend of alice.\nIf apple is wet and bob dislikes frank, then george dislikes car.\nIf car is small, then carol is a friend of frank.\nIf ball is small and carol is tall, then frank is hungry.\nIf alice is tall and eve likes george, then it is hot.\n\nAnd the following facts:\nit is sunny.\nalice owns phone.\nbob likes phone.\ncarol owns apple.\ndave likes car.\nfrank is tall.\nfrank dislikes eve.\ngeorge is a friend of frank.\n\nOBSERVATION: eve is hungry is true.\n\nQUESTION:\nCould carol owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "wet(phone) :- sunny.\nhungry(eve) :- wet(phone).\nwet(book) :- small(apple), tall(eve), dislikes(frank,alice).\nwet(pencil) :- cold.\nparent(bob,eve) :- likes(eve,alice).\ndislikes(frank,pencil) :- big(phone), big(car), wet(pencil).\nparent(alice,bob) :- small(ball), wet(apple), owns(carol,phone).\nlikes(alice,bob) :- hungry(bob).\nlikes(dave,phone) :- parent(dave,frank), dislikes(alice,pencil), enemy(alice,frank).\nfriend(george,alice) :- owns(george,pencil), enemy(frank,frank).\ndislikes(george,car) :- wet(apple), dislikes(bob,frank).\nfriend(carol,frank) :- small(car).\nhungry(frank) :- small(ball), tall(carol).\nhot :- tall(alice), likes(eve,george).\nsunny.\nowns(alice,phone).\nowns(carol,apple).\nlikes(dave,car).\ntall(frank).\ndislikes(frank,eve).\nfriend(george,frank).",
    "natural language": "You are given the following rules:\nIf it is sunny, then phone is wet.\nIf phone is wet, then eve is hungry.\nIf apple is small and eve is tall and frank dislikes alice, then book is wet.\nIf it is cold, then pencil is wet.\nIf eve likes alice, then bob is a parent of eve.\nIf phone is big and car is big and pencil is wet, then frank dislikes pencil.\nIf ball is small and apple is wet and carol owns phone, then alice is a parent of bob.\nIf bob is hungry, then alice likes bob.\nIf dave is a parent of frank and alice dislikes pencil and alice is an enemy of frank, then dave likes phone.\nIf george owns pencil and frank is an enemy of frank, then george is a friend of alice.\nIf apple is wet and bob dislikes frank, then george dislikes car.\nIf car is small, then carol is a friend of frank.\nIf ball is small and carol is tall, then frank is hungry.\nIf alice is tall and eve likes george, then it is hot.\n\nAnd the following facts:\nit is sunny.\nalice owns phone.\nbob likes phone.\ncarol owns apple.\ndave likes car.\nfrank is tall.\nfrank dislikes eve.\ngeorge is a friend of frank.\n\nOBSERVATION: eve is hungry is true.\n\nQUESTION:\nCould bob likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(alice,george).",
    "c": "cold :- hungry(dave).\nbig(phone) :- cold.\nhot :- big(phone).\nlikes(bob,frank) :- hot.\ndislikes(george,alice) :- dislikes(eve,dave), sad(dave), wet(phone).\ndislikes(bob,phone) :- hungry(bob), cold.\nbig(ball) :- enemy(frank,bob).\nbig(book) :- hot, happy(george), sad(frank).\ncold :- small(car), enemy(george,eve).\nparent(alice,george) :- sibling(carol,frank), wet(ball).\nparent(dave,bob) :- big(pencil), parent(alice,frank).\nparent(george,george) :- hungry(carol).\ncold :- friend(dave,eve), cold.\ntall(dave) :- tall(george).\nhungry(dave).\nfriend(bob,dave).\nhungry(george).\nsibling(carol,frank).\nsibling(bob,dave).\nwet(ball).\ndislikes(dave,car).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is big.\nIf phone is big, then it is hot.\nIf it is hot, then bob likes frank.\nIf eve dislikes dave and dave is sad and phone is wet, then george dislikes alice.\nIf bob is hungry and it is cold, then bob dislikes phone.\nIf frank is an enemy of bob, then ball is big.\nIf it is hot and george is happy and frank is sad, then book is big.\nIf car is small and george is an enemy of eve, then it is cold.\nIf carol is a sibling of frank and ball is wet, then alice is a parent of george.\nIf pencil is big and alice is a parent of frank, then dave is a parent of bob.\nIf carol is hungry, then george is a parent of george.\nIf dave is a friend of eve and it is cold, then it is cold.\nIf george is tall, then dave is tall.\n\nAnd the following facts:\ndave is hungry.\nbob is a friend of dave.\ngeorge is hungry.\ncarol is a sibling of frank.\nbob is a sibling of dave.\nball is wet.\ndave dislikes car.\ncarol is an enemy of bob.\n\nQUESTION:\nIs alice is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,dave).",
    "c": "cold :- hungry(dave).\nbig(phone) :- cold.\nhot :- big(phone).\nlikes(bob,frank) :- hot.\ndislikes(george,alice) :- dislikes(eve,dave), sad(dave), wet(phone).\ndislikes(bob,phone) :- hungry(bob), cold.\nbig(ball) :- enemy(frank,bob).\nbig(book) :- hot, happy(george), sad(frank).\ncold :- small(car), enemy(george,eve).\nparent(alice,george) :- sibling(carol,frank), wet(ball).\nparent(dave,bob) :- big(pencil), parent(alice,frank).\nparent(george,george) :- hungry(carol).\ncold :- friend(dave,eve), cold.\ntall(dave) :- tall(george).\nhungry(dave).\nfriend(bob,dave).\nhungry(george).\nsibling(carol,frank).\nsibling(bob,dave).\nwet(ball).\ndislikes(dave,car).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is big.\nIf phone is big, then it is hot.\nIf it is hot, then bob likes frank.\nIf eve dislikes dave and dave is sad and phone is wet, then george dislikes alice.\nIf bob is hungry and it is cold, then bob dislikes phone.\nIf frank is an enemy of bob, then ball is big.\nIf it is hot and george is happy and frank is sad, then book is big.\nIf car is small and george is an enemy of eve, then it is cold.\nIf carol is a sibling of frank and ball is wet, then alice is a parent of george.\nIf pencil is big and alice is a parent of frank, then dave is a parent of bob.\nIf carol is hungry, then george is a parent of george.\nIf dave is a friend of eve and it is cold, then it is cold.\nIf george is tall, then dave is tall.\n\nAnd the following facts:\ndave is hungry.\nbob is a friend of dave.\ngeorge is hungry.\ncarol is a sibling of frank.\nbob is a sibling of dave.\nball is wet.\ndave dislikes car.\ncarol is an enemy of bob.\n\nQUESTION:\nIs bob is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,dave).",
    "c": "cold :- hungry(dave).\nbig(phone) :- cold.\nhot :- big(phone).\nlikes(bob,frank) :- hot.\ndislikes(george,alice) :- dislikes(eve,dave), sad(dave), wet(phone).\ndislikes(bob,phone) :- hungry(bob), cold.\nbig(ball) :- enemy(frank,bob).\nbig(book) :- hot, happy(george), sad(frank).\ncold :- small(car), enemy(george,eve).\nparent(alice,george) :- sibling(carol,frank), wet(ball).\nparent(dave,bob) :- big(pencil), parent(alice,frank).\nparent(george,george) :- hungry(carol).\ncold :- friend(dave,eve), cold.\ntall(dave) :- tall(george).\nhungry(dave).\nfriend(bob,dave).\nhungry(george).\nsibling(carol,frank).\nsibling(bob,dave).\nwet(ball).\ndislikes(dave,car).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is big.\nIf phone is big, then it is hot.\nIf it is hot, then bob likes frank.\nIf eve dislikes dave and dave is sad and phone is wet, then george dislikes alice.\nIf bob is hungry and it is cold, then bob dislikes phone.\nIf frank is an enemy of bob, then ball is big.\nIf it is hot and george is happy and frank is sad, then book is big.\nIf car is small and george is an enemy of eve, then it is cold.\nIf carol is a sibling of frank and ball is wet, then alice is a parent of george.\nIf pencil is big and alice is a parent of frank, then dave is a parent of bob.\nIf carol is hungry, then george is a parent of george.\nIf dave is a friend of eve and it is cold, then it is cold.\nIf george is tall, then dave is tall.\n\nAnd the following facts:\ndave is hungry.\nbob is a friend of dave.\ngeorge is hungry.\ncarol is a sibling of frank.\nbob is a sibling of dave.\nball is wet.\ndave dislikes car.\ncarol is an enemy of bob.\n\nQUESTION:\nIs bob is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,ball).",
    "c": "cold :- hungry(dave).\nbig(phone) :- cold.\nhot :- big(phone).\nlikes(bob,frank) :- hot.\ndislikes(george,alice) :- dislikes(eve,dave), sad(dave), wet(phone).\ndislikes(bob,phone) :- hungry(bob), cold.\nbig(ball) :- enemy(frank,bob).\nbig(book) :- hot, happy(george), sad(frank).\ncold :- small(car), enemy(george,eve).\nparent(alice,george) :- sibling(carol,frank), wet(ball).\nparent(dave,bob) :- big(pencil), parent(alice,frank).\nparent(george,george) :- hungry(carol).\ncold :- friend(dave,eve), cold.\ntall(dave) :- tall(george).\nhungry(dave).\nfriend(bob,dave).\nhungry(george).\nsibling(carol,frank).\nsibling(bob,dave).\nwet(ball).\ndislikes(dave,car).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is big.\nIf phone is big, then it is hot.\nIf it is hot, then bob likes frank.\nIf eve dislikes dave and dave is sad and phone is wet, then george dislikes alice.\nIf bob is hungry and it is cold, then bob dislikes phone.\nIf frank is an enemy of bob, then ball is big.\nIf it is hot and george is happy and frank is sad, then book is big.\nIf car is small and george is an enemy of eve, then it is cold.\nIf carol is a sibling of frank and ball is wet, then alice is a parent of george.\nIf pencil is big and alice is a parent of frank, then dave is a parent of bob.\nIf carol is hungry, then george is a parent of george.\nIf dave is a friend of eve and it is cold, then it is cold.\nIf george is tall, then dave is tall.\n\nAnd the following facts:\ndave is hungry.\nbob is a friend of dave.\ngeorge is hungry.\ncarol is a sibling of frank.\nbob is a sibling of dave.\nball is wet.\ndave dislikes car.\ncarol is an enemy of bob.\n\nQUESTION:\nIs frank likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "cold :- hungry(dave).\nbig(phone) :- cold.\nhot :- big(phone).\nlikes(bob,frank) :- hot.\ndislikes(george,alice) :- dislikes(eve,dave), sad(dave), wet(phone).\ndislikes(bob,phone) :- hungry(bob), cold.\nbig(ball) :- enemy(frank,bob).\nbig(book) :- hot, happy(george), sad(frank).\ncold :- small(car), enemy(george,eve).\nparent(alice,george) :- sibling(carol,frank), wet(ball).\nparent(dave,bob) :- big(pencil), parent(alice,frank).\nparent(george,george) :- hungry(carol).\ncold :- friend(dave,eve), cold.\ntall(dave) :- tall(george).\nhungry(dave).\nfriend(bob,dave).\nhungry(george).\nsibling(carol,frank).\nsibling(bob,dave).\nwet(ball).\ndislikes(dave,car).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is big.\nIf phone is big, then it is hot.\nIf it is hot, then bob likes frank.\nIf eve dislikes dave and dave is sad and phone is wet, then george dislikes alice.\nIf bob is hungry and it is cold, then bob dislikes phone.\nIf frank is an enemy of bob, then ball is big.\nIf it is hot and george is happy and frank is sad, then book is big.\nIf car is small and george is an enemy of eve, then it is cold.\nIf carol is a sibling of frank and ball is wet, then alice is a parent of george.\nIf pencil is big and alice is a parent of frank, then dave is a parent of bob.\nIf carol is hungry, then george is a parent of george.\nIf dave is a friend of eve and it is cold, then it is cold.\nIf george is tall, then dave is tall.\n\nAnd the following facts:\ndave is hungry.\nbob is a friend of dave.\ngeorge is hungry.\ncarol is a sibling of frank.\nbob is a sibling of dave.\nball is wet.\ndave dislikes car.\ncarol is an enemy of bob.\n\nQUESTION:\nIs bob likes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(dave).",
    "c": "cold :- hungry(dave).\nbig(phone) :- cold.\nhot :- big(phone).\nlikes(bob,frank) :- hot.\ndislikes(george,alice) :- dislikes(eve,dave), sad(dave), wet(phone).\ndislikes(bob,phone) :- hungry(bob), cold.\nbig(ball) :- enemy(frank,bob).\nbig(book) :- hot, happy(george), sad(frank).\ncold :- small(car), enemy(george,eve).\nparent(alice,george) :- sibling(carol,frank), wet(ball).\nparent(dave,bob) :- big(pencil), parent(alice,frank).\nparent(george,george) :- hungry(carol).\ncold :- friend(dave,eve), cold.\ntall(dave) :- tall(george).\nfriend(bob,dave).\nhungry(george).\nsibling(carol,frank).\nsibling(bob,dave).\nwet(ball).\ndislikes(dave,car).\nenemy(carol,bob).",
    "natural language": "You are given the following rules:\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is big.\nIf phone is big, then it is hot.\nIf it is hot, then bob likes frank.\nIf eve dislikes dave and dave is sad and phone is wet, then george dislikes alice.\nIf bob is hungry and it is cold, then bob dislikes phone.\nIf frank is an enemy of bob, then ball is big.\nIf it is hot and george is happy and frank is sad, then book is big.\nIf car is small and george is an enemy of eve, then it is cold.\nIf carol is a sibling of frank and ball is wet, then alice is a parent of george.\nIf pencil is big and alice is a parent of frank, then dave is a parent of bob.\nIf carol is hungry, then george is a parent of george.\nIf dave is a friend of eve and it is cold, then it is cold.\nIf george is tall, then dave is tall.\n\nAnd the following facts:\ndave is hungry.\nbob is a friend of dave.\ngeorge is hungry.\ncarol is a sibling of frank.\nbob is a sibling of dave.\nball is wet.\ndave dislikes car.\ncarol is an enemy of bob.\n\nOBSERVATION: bob likes frank is true.\n\nQUESTION:\nCould dave is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(bob,dave).",
    "c": "cold :- hungry(dave).\nbig(phone) :- cold.\nhot :- big(phone).\nlikes(bob,frank) :- hot.\ndislikes(george,alice) :- dislikes(eve,dave), sad(dave), wet(phone).\ndislikes(bob,phone) :- hungry(bob), cold.\nbig(ball) :- enemy(frank,bob).\nbig(book) :- hot, happy(george), sad(frank).\ncold :- small(car), enemy(george,eve).\nparent(alice,george) :- sibling(carol,frank), wet(ball).\nparent(dave,bob) :- big(pencil), parent(alice,frank).\nparent(george,george) :- hungry(carol).\ncold :- friend(dave,eve), cold.\ntall(dave) :- tall(george).\nhungry(dave).\nhungry(george).\nsibling(carol,frank).\nsibling(bob,dave).\nwet(ball).\ndislikes(dave,car).\nenemy(carol,bob).",
    "natural language": "You are given the following rules:\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is big.\nIf phone is big, then it is hot.\nIf it is hot, then bob likes frank.\nIf eve dislikes dave and dave is sad and phone is wet, then george dislikes alice.\nIf bob is hungry and it is cold, then bob dislikes phone.\nIf frank is an enemy of bob, then ball is big.\nIf it is hot and george is happy and frank is sad, then book is big.\nIf car is small and george is an enemy of eve, then it is cold.\nIf carol is a sibling of frank and ball is wet, then alice is a parent of george.\nIf pencil is big and alice is a parent of frank, then dave is a parent of bob.\nIf carol is hungry, then george is a parent of george.\nIf dave is a friend of eve and it is cold, then it is cold.\nIf george is tall, then dave is tall.\n\nAnd the following facts:\ndave is hungry.\nbob is a friend of dave.\ngeorge is hungry.\ncarol is a sibling of frank.\nbob is a sibling of dave.\nball is wet.\ndave dislikes car.\ncarol is an enemy of bob.\n\nOBSERVATION: bob likes frank is true.\n\nQUESTION:\nCould bob is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "cold :- hungry(dave).\nbig(phone) :- cold.\nhot :- big(phone).\nlikes(bob,frank) :- hot.\ndislikes(george,alice) :- dislikes(eve,dave), sad(dave), wet(phone).\ndislikes(bob,phone) :- hungry(bob), cold.\nbig(ball) :- enemy(frank,bob).\nbig(book) :- hot, happy(george), sad(frank).\ncold :- small(car), enemy(george,eve).\nparent(alice,george) :- sibling(carol,frank), wet(ball).\nparent(dave,bob) :- big(pencil), parent(alice,frank).\nparent(george,george) :- hungry(carol).\ncold :- friend(dave,eve), cold.\ntall(dave) :- tall(george).\nhungry(dave).\nfriend(bob,dave).\nhungry(george).\nsibling(carol,frank).\nsibling(bob,dave).\ndislikes(dave,car).\nenemy(carol,bob).",
    "natural language": "You are given the following rules:\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is big.\nIf phone is big, then it is hot.\nIf it is hot, then bob likes frank.\nIf eve dislikes dave and dave is sad and phone is wet, then george dislikes alice.\nIf bob is hungry and it is cold, then bob dislikes phone.\nIf frank is an enemy of bob, then ball is big.\nIf it is hot and george is happy and frank is sad, then book is big.\nIf car is small and george is an enemy of eve, then it is cold.\nIf carol is a sibling of frank and ball is wet, then alice is a parent of george.\nIf pencil is big and alice is a parent of frank, then dave is a parent of bob.\nIf carol is hungry, then george is a parent of george.\nIf dave is a friend of eve and it is cold, then it is cold.\nIf george is tall, then dave is tall.\n\nAnd the following facts:\ndave is hungry.\nbob is a friend of dave.\ngeorge is hungry.\ncarol is a sibling of frank.\nbob is a sibling of dave.\nball is wet.\ndave dislikes car.\ncarol is an enemy of bob.\n\nOBSERVATION: bob likes frank is true.\n\nQUESTION:\nCould ball is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "dislikes(eve,bob) :- tall(alice).\nsmall(apple) :- dislikes(eve,bob).\nlikes(bob,car) :- small(apple).\nlikes(bob,book) :- likes(bob,car).\nfriend(carol,carol) :- big(car).\nfriend(carol,eve) :- friend(carol,dave).\nwet(car) :- hungry(dave), sibling(eve,carol).\nwet(book) :- likes(george,book), sunny, dislikes(bob,george).\nwet(book) :- likes(eve,car).\ncold :- hungry(eve), dislikes(alice,dave), hot.\ncold :- hungry(bob).\nsunny :- dislikes(bob,dave).\nsunny :- parent(bob,bob), sibling(carol,dave).\nhot :- likes(dave,car), friend(dave,frank).\ntall(alice).\nlikes(dave,pencil).\nhungry(frank).\ndislikes(eve,bob).\ndislikes(george,pencil).\nparent(carol,alice).\nfriend(george,carol).\ntall(frank).",
    "natural language": "You are given the following information:\nIf alice is tall, then eve dislikes bob.\nIf eve dislikes bob, then apple is small.\nIf apple is small, then bob likes car.\nIf bob likes car, then bob likes book.\nIf car is big, then carol is a friend of carol.\nIf carol is a friend of dave, then carol is a friend of eve.\nIf dave is hungry and eve is a sibling of carol, then car is wet.\nIf george likes book and it is sunny and bob dislikes george, then book is wet.\nIf eve likes car, then book is wet.\nIf eve is hungry and alice dislikes dave and it is hot, then it is cold.\nIf bob is hungry, then it is cold.\nIf bob dislikes dave, then it is sunny.\nIf bob is a parent of bob and carol is a sibling of dave, then it is sunny.\nIf dave likes car and dave is a friend of frank, then it is hot.\n\nAnd the following facts:\nalice is tall.\ndave likes pencil.\nfrank is hungry.\neve dislikes bob.\ngeorge dislikes pencil.\ncarol is a parent of alice.\ngeorge is a friend of carol.\nfrank is tall.\n\nQUESTION:\nIs frank is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(alice).",
    "c": "dislikes(eve,bob) :- tall(alice).\nsmall(apple) :- dislikes(eve,bob).\nlikes(bob,car) :- small(apple).\nlikes(bob,book) :- likes(bob,car).\nfriend(carol,carol) :- big(car).\nfriend(carol,eve) :- friend(carol,dave).\nwet(car) :- hungry(dave), sibling(eve,carol).\nwet(book) :- likes(george,book), sunny, dislikes(bob,george).\nwet(book) :- likes(eve,car).\ncold :- hungry(eve), dislikes(alice,dave), hot.\ncold :- hungry(bob).\nsunny :- dislikes(bob,dave).\nsunny :- parent(bob,bob), sibling(carol,dave).\nhot :- likes(dave,car), friend(dave,frank).\ntall(alice).\nlikes(dave,pencil).\nhungry(frank).\ndislikes(eve,bob).\ndislikes(george,pencil).\nparent(carol,alice).\nfriend(george,carol).\ntall(frank).",
    "natural language": "You are given the following information:\nIf alice is tall, then eve dislikes bob.\nIf eve dislikes bob, then apple is small.\nIf apple is small, then bob likes car.\nIf bob likes car, then bob likes book.\nIf car is big, then carol is a friend of carol.\nIf carol is a friend of dave, then carol is a friend of eve.\nIf dave is hungry and eve is a sibling of carol, then car is wet.\nIf george likes book and it is sunny and bob dislikes george, then book is wet.\nIf eve likes car, then book is wet.\nIf eve is hungry and alice dislikes dave and it is hot, then it is cold.\nIf bob is hungry, then it is cold.\nIf bob dislikes dave, then it is sunny.\nIf bob is a parent of bob and carol is a sibling of dave, then it is sunny.\nIf dave likes car and dave is a friend of frank, then it is hot.\n\nAnd the following facts:\nalice is tall.\ndave likes pencil.\nfrank is hungry.\neve dislikes bob.\ngeorge dislikes pencil.\ncarol is a parent of alice.\ngeorge is a friend of carol.\nfrank is tall.\n\nQUESTION:\nIs alice is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,pencil).",
    "c": "dislikes(eve,bob) :- tall(alice).\nsmall(apple) :- dislikes(eve,bob).\nlikes(bob,car) :- small(apple).\nlikes(bob,book) :- likes(bob,car).\nfriend(carol,carol) :- big(car).\nfriend(carol,eve) :- friend(carol,dave).\nwet(car) :- hungry(dave), sibling(eve,carol).\nwet(book) :- likes(george,book), sunny, dislikes(bob,george).\nwet(book) :- likes(eve,car).\ncold :- hungry(eve), dislikes(alice,dave), hot.\ncold :- hungry(bob).\nsunny :- dislikes(bob,dave).\nsunny :- parent(bob,bob), sibling(carol,dave).\nhot :- likes(dave,car), friend(dave,frank).\ntall(alice).\nlikes(dave,pencil).\nhungry(frank).\ndislikes(eve,bob).\ndislikes(george,pencil).\nparent(carol,alice).\nfriend(george,carol).\ntall(frank).",
    "natural language": "You are given the following information:\nIf alice is tall, then eve dislikes bob.\nIf eve dislikes bob, then apple is small.\nIf apple is small, then bob likes car.\nIf bob likes car, then bob likes book.\nIf car is big, then carol is a friend of carol.\nIf carol is a friend of dave, then carol is a friend of eve.\nIf dave is hungry and eve is a sibling of carol, then car is wet.\nIf george likes book and it is sunny and bob dislikes george, then book is wet.\nIf eve likes car, then book is wet.\nIf eve is hungry and alice dislikes dave and it is hot, then it is cold.\nIf bob is hungry, then it is cold.\nIf bob dislikes dave, then it is sunny.\nIf bob is a parent of bob and carol is a sibling of dave, then it is sunny.\nIf dave likes car and dave is a friend of frank, then it is hot.\n\nAnd the following facts:\nalice is tall.\ndave likes pencil.\nfrank is hungry.\neve dislikes bob.\ngeorge dislikes pencil.\ncarol is a parent of alice.\ngeorge is a friend of carol.\nfrank is tall.\n\nQUESTION:\nIs dave likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,frank).",
    "c": "dislikes(eve,bob) :- tall(alice).\nsmall(apple) :- dislikes(eve,bob).\nlikes(bob,car) :- small(apple).\nlikes(bob,book) :- likes(bob,car).\nfriend(carol,carol) :- big(car).\nfriend(carol,eve) :- friend(carol,dave).\nwet(car) :- hungry(dave), sibling(eve,carol).\nwet(book) :- likes(george,book), sunny, dislikes(bob,george).\nwet(book) :- likes(eve,car).\ncold :- hungry(eve), dislikes(alice,dave), hot.\ncold :- hungry(bob).\nsunny :- dislikes(bob,dave).\nsunny :- parent(bob,bob), sibling(carol,dave).\nhot :- likes(dave,car), friend(dave,frank).\ntall(alice).\nlikes(dave,pencil).\nhungry(frank).\ndislikes(eve,bob).\ndislikes(george,pencil).\nparent(carol,alice).\nfriend(george,carol).\ntall(frank).",
    "natural language": "You are given the following information:\nIf alice is tall, then eve dislikes bob.\nIf eve dislikes bob, then apple is small.\nIf apple is small, then bob likes car.\nIf bob likes car, then bob likes book.\nIf car is big, then carol is a friend of carol.\nIf carol is a friend of dave, then carol is a friend of eve.\nIf dave is hungry and eve is a sibling of carol, then car is wet.\nIf george likes book and it is sunny and bob dislikes george, then book is wet.\nIf eve likes car, then book is wet.\nIf eve is hungry and alice dislikes dave and it is hot, then it is cold.\nIf bob is hungry, then it is cold.\nIf bob dislikes dave, then it is sunny.\nIf bob is a parent of bob and carol is a sibling of dave, then it is sunny.\nIf dave likes car and dave is a friend of frank, then it is hot.\n\nAnd the following facts:\nalice is tall.\ndave likes pencil.\nfrank is hungry.\neve dislikes bob.\ngeorge dislikes pencil.\ncarol is a parent of alice.\ngeorge is a friend of carol.\nfrank is tall.\n\nQUESTION:\nIs eve is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "dislikes(eve,bob) :- tall(alice).\nsmall(apple) :- dislikes(eve,bob).\nlikes(bob,car) :- small(apple).\nlikes(bob,book) :- likes(bob,car).\nfriend(carol,carol) :- big(car).\nfriend(carol,eve) :- friend(carol,dave).\nwet(car) :- hungry(dave), sibling(eve,carol).\nwet(book) :- likes(george,book), sunny, dislikes(bob,george).\nwet(book) :- likes(eve,car).\ncold :- hungry(eve), dislikes(alice,dave), hot.\ncold :- hungry(bob).\nsunny :- dislikes(bob,dave).\nsunny :- parent(bob,bob), sibling(carol,dave).\nhot :- likes(dave,car), friend(dave,frank).\ntall(alice).\nlikes(dave,pencil).\nhungry(frank).\ndislikes(eve,bob).\ndislikes(george,pencil).\nparent(carol,alice).\nfriend(george,carol).\ntall(frank).",
    "natural language": "You are given the following information:\nIf alice is tall, then eve dislikes bob.\nIf eve dislikes bob, then apple is small.\nIf apple is small, then bob likes car.\nIf bob likes car, then bob likes book.\nIf car is big, then carol is a friend of carol.\nIf carol is a friend of dave, then carol is a friend of eve.\nIf dave is hungry and eve is a sibling of carol, then car is wet.\nIf george likes book and it is sunny and bob dislikes george, then book is wet.\nIf eve likes car, then book is wet.\nIf eve is hungry and alice dislikes dave and it is hot, then it is cold.\nIf bob is hungry, then it is cold.\nIf bob dislikes dave, then it is sunny.\nIf bob is a parent of bob and carol is a sibling of dave, then it is sunny.\nIf dave likes car and dave is a friend of frank, then it is hot.\n\nAnd the following facts:\nalice is tall.\ndave likes pencil.\nfrank is hungry.\neve dislikes bob.\ngeorge dislikes pencil.\ncarol is a parent of alice.\ngeorge is a friend of carol.\nfrank is tall.\n\nQUESTION:\nIs george is a sibling of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,bob).",
    "c": "dislikes(eve,bob) :- tall(alice).\nsmall(apple) :- dislikes(eve,bob).\nlikes(bob,car) :- small(apple).\nlikes(bob,book) :- likes(bob,car).\nfriend(carol,carol) :- big(car).\nfriend(carol,eve) :- friend(carol,dave).\nwet(car) :- hungry(dave), sibling(eve,carol).\nwet(book) :- likes(george,book), sunny, dislikes(bob,george).\nwet(book) :- likes(eve,car).\ncold :- hungry(eve), dislikes(alice,dave), hot.\ncold :- hungry(bob).\nsunny :- dislikes(bob,dave).\nsunny :- parent(bob,bob), sibling(carol,dave).\nhot :- likes(dave,car), friend(dave,frank).\ntall(alice).\nlikes(dave,pencil).\nhungry(frank).\ndislikes(george,pencil).\nparent(carol,alice).\nfriend(george,carol).\ntall(frank).",
    "natural language": "You are given the following rules:\nIf alice is tall, then eve dislikes bob.\nIf eve dislikes bob, then apple is small.\nIf apple is small, then bob likes car.\nIf bob likes car, then bob likes book.\nIf car is big, then carol is a friend of carol.\nIf carol is a friend of dave, then carol is a friend of eve.\nIf dave is hungry and eve is a sibling of carol, then car is wet.\nIf george likes book and it is sunny and bob dislikes george, then book is wet.\nIf eve likes car, then book is wet.\nIf eve is hungry and alice dislikes dave and it is hot, then it is cold.\nIf bob is hungry, then it is cold.\nIf bob dislikes dave, then it is sunny.\nIf bob is a parent of bob and carol is a sibling of dave, then it is sunny.\nIf dave likes car and dave is a friend of frank, then it is hot.\n\nAnd the following facts:\nalice is tall.\ndave likes pencil.\nfrank is hungry.\neve dislikes bob.\ngeorge dislikes pencil.\ncarol is a parent of alice.\ngeorge is a friend of carol.\nfrank is tall.\n\nOBSERVATION: bob likes book is true.\n\nQUESTION:\nCould eve dislikes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(dave,pencil).",
    "c": "dislikes(eve,bob) :- tall(alice).\nsmall(apple) :- dislikes(eve,bob).\nlikes(bob,car) :- small(apple).\nlikes(bob,book) :- likes(bob,car).\nfriend(carol,carol) :- big(car).\nfriend(carol,eve) :- friend(carol,dave).\nwet(car) :- hungry(dave), sibling(eve,carol).\nwet(book) :- likes(george,book), sunny, dislikes(bob,george).\nwet(book) :- likes(eve,car).\ncold :- hungry(eve), dislikes(alice,dave), hot.\ncold :- hungry(bob).\nsunny :- dislikes(bob,dave).\nsunny :- parent(bob,bob), sibling(carol,dave).\nhot :- likes(dave,car), friend(dave,frank).\ntall(alice).\nhungry(frank).\ndislikes(eve,bob).\ndislikes(george,pencil).\nparent(carol,alice).\nfriend(george,carol).\ntall(frank).",
    "natural language": "You are given the following rules:\nIf alice is tall, then eve dislikes bob.\nIf eve dislikes bob, then apple is small.\nIf apple is small, then bob likes car.\nIf bob likes car, then bob likes book.\nIf car is big, then carol is a friend of carol.\nIf carol is a friend of dave, then carol is a friend of eve.\nIf dave is hungry and eve is a sibling of carol, then car is wet.\nIf george likes book and it is sunny and bob dislikes george, then book is wet.\nIf eve likes car, then book is wet.\nIf eve is hungry and alice dislikes dave and it is hot, then it is cold.\nIf bob is hungry, then it is cold.\nIf bob dislikes dave, then it is sunny.\nIf bob is a parent of bob and carol is a sibling of dave, then it is sunny.\nIf dave likes car and dave is a friend of frank, then it is hot.\n\nAnd the following facts:\nalice is tall.\ndave likes pencil.\nfrank is hungry.\neve dislikes bob.\ngeorge dislikes pencil.\ncarol is a parent of alice.\ngeorge is a friend of carol.\nfrank is tall.\n\nOBSERVATION: bob likes book is true.\n\nQUESTION:\nCould dave likes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,pencil).",
    "c": "dislikes(eve,bob) :- tall(alice).\nsmall(apple) :- dislikes(eve,bob).\nlikes(bob,car) :- small(apple).\nlikes(bob,book) :- likes(bob,car).\nfriend(carol,carol) :- big(car).\nfriend(carol,eve) :- friend(carol,dave).\nwet(car) :- hungry(dave), sibling(eve,carol).\nwet(book) :- likes(george,book), sunny, dislikes(bob,george).\nwet(book) :- likes(eve,car).\ncold :- hungry(eve), dislikes(alice,dave), hot.\ncold :- hungry(bob).\nsunny :- dislikes(bob,dave).\nsunny :- parent(bob,bob), sibling(carol,dave).\nhot :- likes(dave,car), friend(dave,frank).\ntall(alice).\nlikes(dave,pencil).\nhungry(frank).\ndislikes(eve,bob).\nparent(carol,alice).\nfriend(george,carol).\ntall(frank).",
    "natural language": "You are given the following rules:\nIf alice is tall, then eve dislikes bob.\nIf eve dislikes bob, then apple is small.\nIf apple is small, then bob likes car.\nIf bob likes car, then bob likes book.\nIf car is big, then carol is a friend of carol.\nIf carol is a friend of dave, then carol is a friend of eve.\nIf dave is hungry and eve is a sibling of carol, then car is wet.\nIf george likes book and it is sunny and bob dislikes george, then book is wet.\nIf eve likes car, then book is wet.\nIf eve is hungry and alice dislikes dave and it is hot, then it is cold.\nIf bob is hungry, then it is cold.\nIf bob dislikes dave, then it is sunny.\nIf bob is a parent of bob and carol is a sibling of dave, then it is sunny.\nIf dave likes car and dave is a friend of frank, then it is hot.\n\nAnd the following facts:\nalice is tall.\ndave likes pencil.\nfrank is hungry.\neve dislikes bob.\ngeorge dislikes pencil.\ncarol is a parent of alice.\ngeorge is a friend of carol.\nfrank is tall.\n\nOBSERVATION: bob likes book is true.\n\nQUESTION:\nCould george dislikes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(eve,frank).",
    "c": "likes(alice,ball) :- wet(phone).\nsibling(george,alice) :- likes(alice,ball).\nsmall(ball) :- sibling(george,alice).\nfriend(frank,frank) :- small(ball).\ndislikes(carol,dave) :- friend(frank,frank).\nparent(dave,carol) :- dislikes(carol,dave).\nbig(ball) :- friend(dave,dave), sibling(carol,alice).\nbig(phone) :- big(phone), hungry(frank), dislikes(eve,phone).\nhappy(carol) :- big(apple).\nhappy(carol) :- happy(frank), sibling(carol,dave).\nfriend(alice,george) :- friend(dave,frank), big(book).\nfriend(frank,bob) :- parent(carol,dave), cold.\nbig(phone) :- dislikes(frank,car), hot, friend(carol,frank).\nsad(george) :- enemy(bob,alice).\nwet(phone).\nlikes(bob,phone).\nparent(eve,dave).\nsibling(eve,frank).\nenemy(dave,frank).\nparent(dave,eve).\nsad(alice).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then alice likes ball.\nIf alice likes ball, then george is a sibling of alice.\nIf george is a sibling of alice, then ball is small.\nIf ball is small, then frank is a friend of frank.\nIf frank is a friend of frank, then carol dislikes dave.\nIf carol dislikes dave, then dave is a parent of carol.\nIf dave is a friend of dave and carol is a sibling of alice, then ball is big.\nIf phone is big and frank is hungry and eve dislikes phone, then phone is big.\nIf apple is big, then carol is happy.\nIf frank is happy and carol is a sibling of dave, then carol is happy.\nIf dave is a friend of frank and book is big, then alice is a friend of george.\nIf carol is a parent of dave and it is cold, then frank is a friend of bob.\nIf frank dislikes car and it is hot and carol is a friend of frank, then phone is big.\nIf bob is an enemy of alice, then george is sad.\n\nAnd the following facts:\nphone is wet.\nbob likes phone.\neve is a parent of dave.\neve is a sibling of frank.\ndave is an enemy of frank.\ndave is a parent of eve.\nalice is sad.\ngeorge likes phone.\n\nQUESTION:\nIs eve is a sibling of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,carol).",
    "c": "likes(alice,ball) :- wet(phone).\nsibling(george,alice) :- likes(alice,ball).\nsmall(ball) :- sibling(george,alice).\nfriend(frank,frank) :- small(ball).\ndislikes(carol,dave) :- friend(frank,frank).\nparent(dave,carol) :- dislikes(carol,dave).\nbig(ball) :- friend(dave,dave), sibling(carol,alice).\nbig(phone) :- big(phone), hungry(frank), dislikes(eve,phone).\nhappy(carol) :- big(apple).\nhappy(carol) :- happy(frank), sibling(carol,dave).\nfriend(alice,george) :- friend(dave,frank), big(book).\nfriend(frank,bob) :- parent(carol,dave), cold.\nbig(phone) :- dislikes(frank,car), hot, friend(carol,frank).\nsad(george) :- enemy(bob,alice).\nwet(phone).\nlikes(bob,phone).\nparent(eve,dave).\nsibling(eve,frank).\nenemy(dave,frank).\nparent(dave,eve).\nsad(alice).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then alice likes ball.\nIf alice likes ball, then george is a sibling of alice.\nIf george is a sibling of alice, then ball is small.\nIf ball is small, then frank is a friend of frank.\nIf frank is a friend of frank, then carol dislikes dave.\nIf carol dislikes dave, then dave is a parent of carol.\nIf dave is a friend of dave and carol is a sibling of alice, then ball is big.\nIf phone is big and frank is hungry and eve dislikes phone, then phone is big.\nIf apple is big, then carol is happy.\nIf frank is happy and carol is a sibling of dave, then carol is happy.\nIf dave is a friend of frank and book is big, then alice is a friend of george.\nIf carol is a parent of dave and it is cold, then frank is a friend of bob.\nIf frank dislikes car and it is hot and carol is a friend of frank, then phone is big.\nIf bob is an enemy of alice, then george is sad.\n\nAnd the following facts:\nphone is wet.\nbob likes phone.\neve is a parent of dave.\neve is a sibling of frank.\ndave is an enemy of frank.\ndave is a parent of eve.\nalice is sad.\ngeorge likes phone.\n\nQUESTION:\nIs dave is a parent of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,ball).",
    "c": "likes(alice,ball) :- wet(phone).\nsibling(george,alice) :- likes(alice,ball).\nsmall(ball) :- sibling(george,alice).\nfriend(frank,frank) :- small(ball).\ndislikes(carol,dave) :- friend(frank,frank).\nparent(dave,carol) :- dislikes(carol,dave).\nbig(ball) :- friend(dave,dave), sibling(carol,alice).\nbig(phone) :- big(phone), hungry(frank), dislikes(eve,phone).\nhappy(carol) :- big(apple).\nhappy(carol) :- happy(frank), sibling(carol,dave).\nfriend(alice,george) :- friend(dave,frank), big(book).\nfriend(frank,bob) :- parent(carol,dave), cold.\nbig(phone) :- dislikes(frank,car), hot, friend(carol,frank).\nsad(george) :- enemy(bob,alice).\nwet(phone).\nlikes(bob,phone).\nparent(eve,dave).\nsibling(eve,frank).\nenemy(dave,frank).\nparent(dave,eve).\nsad(alice).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then alice likes ball.\nIf alice likes ball, then george is a sibling of alice.\nIf george is a sibling of alice, then ball is small.\nIf ball is small, then frank is a friend of frank.\nIf frank is a friend of frank, then carol dislikes dave.\nIf carol dislikes dave, then dave is a parent of carol.\nIf dave is a friend of dave and carol is a sibling of alice, then ball is big.\nIf phone is big and frank is hungry and eve dislikes phone, then phone is big.\nIf apple is big, then carol is happy.\nIf frank is happy and carol is a sibling of dave, then carol is happy.\nIf dave is a friend of frank and book is big, then alice is a friend of george.\nIf carol is a parent of dave and it is cold, then frank is a friend of bob.\nIf frank dislikes car and it is hot and carol is a friend of frank, then phone is big.\nIf bob is an enemy of alice, then george is sad.\n\nAnd the following facts:\nphone is wet.\nbob likes phone.\neve is a parent of dave.\neve is a sibling of frank.\ndave is an enemy of frank.\ndave is a parent of eve.\nalice is sad.\ngeorge likes phone.\n\nQUESTION:\nIs alice likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,ball).",
    "c": "likes(alice,ball) :- wet(phone).\nsibling(george,alice) :- likes(alice,ball).\nsmall(ball) :- sibling(george,alice).\nfriend(frank,frank) :- small(ball).\ndislikes(carol,dave) :- friend(frank,frank).\nparent(dave,carol) :- dislikes(carol,dave).\nbig(ball) :- friend(dave,dave), sibling(carol,alice).\nbig(phone) :- big(phone), hungry(frank), dislikes(eve,phone).\nhappy(carol) :- big(apple).\nhappy(carol) :- happy(frank), sibling(carol,dave).\nfriend(alice,george) :- friend(dave,frank), big(book).\nfriend(frank,bob) :- parent(carol,dave), cold.\nbig(phone) :- dislikes(frank,car), hot, friend(carol,frank).\nsad(george) :- enemy(bob,alice).\nwet(phone).\nlikes(bob,phone).\nparent(eve,dave).\nsibling(eve,frank).\nenemy(dave,frank).\nparent(dave,eve).\nsad(alice).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then alice likes ball.\nIf alice likes ball, then george is a sibling of alice.\nIf george is a sibling of alice, then ball is small.\nIf ball is small, then frank is a friend of frank.\nIf frank is a friend of frank, then carol dislikes dave.\nIf carol dislikes dave, then dave is a parent of carol.\nIf dave is a friend of dave and carol is a sibling of alice, then ball is big.\nIf phone is big and frank is hungry and eve dislikes phone, then phone is big.\nIf apple is big, then carol is happy.\nIf frank is happy and carol is a sibling of dave, then carol is happy.\nIf dave is a friend of frank and book is big, then alice is a friend of george.\nIf carol is a parent of dave and it is cold, then frank is a friend of bob.\nIf frank dislikes car and it is hot and carol is a friend of frank, then phone is big.\nIf bob is an enemy of alice, then george is sad.\n\nAnd the following facts:\nphone is wet.\nbob likes phone.\neve is a parent of dave.\neve is a sibling of frank.\ndave is an enemy of frank.\ndave is a parent of eve.\nalice is sad.\ngeorge likes phone.\n\nQUESTION:\nIs dave likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,bob).",
    "c": "likes(alice,ball) :- wet(phone).\nsibling(george,alice) :- likes(alice,ball).\nsmall(ball) :- sibling(george,alice).\nfriend(frank,frank) :- small(ball).\ndislikes(carol,dave) :- friend(frank,frank).\nparent(dave,carol) :- dislikes(carol,dave).\nbig(ball) :- friend(dave,dave), sibling(carol,alice).\nbig(phone) :- big(phone), hungry(frank), dislikes(eve,phone).\nhappy(carol) :- big(apple).\nhappy(carol) :- happy(frank), sibling(carol,dave).\nfriend(alice,george) :- friend(dave,frank), big(book).\nfriend(frank,bob) :- parent(carol,dave), cold.\nbig(phone) :- dislikes(frank,car), hot, friend(carol,frank).\nsad(george) :- enemy(bob,alice).\nwet(phone).\nlikes(bob,phone).\nparent(eve,dave).\nsibling(eve,frank).\nenemy(dave,frank).\nparent(dave,eve).\nsad(alice).\nlikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then alice likes ball.\nIf alice likes ball, then george is a sibling of alice.\nIf george is a sibling of alice, then ball is small.\nIf ball is small, then frank is a friend of frank.\nIf frank is a friend of frank, then carol dislikes dave.\nIf carol dislikes dave, then dave is a parent of carol.\nIf dave is a friend of dave and carol is a sibling of alice, then ball is big.\nIf phone is big and frank is hungry and eve dislikes phone, then phone is big.\nIf apple is big, then carol is happy.\nIf frank is happy and carol is a sibling of dave, then carol is happy.\nIf dave is a friend of frank and book is big, then alice is a friend of george.\nIf carol is a parent of dave and it is cold, then frank is a friend of bob.\nIf frank dislikes car and it is hot and carol is a friend of frank, then phone is big.\nIf bob is an enemy of alice, then george is sad.\n\nAnd the following facts:\nphone is wet.\nbob likes phone.\neve is a parent of dave.\neve is a sibling of frank.\ndave is an enemy of frank.\ndave is a parent of eve.\nalice is sad.\ngeorge likes phone.\n\nQUESTION:\nIs george dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "likes(alice,ball) :- wet(phone).\nsibling(george,alice) :- likes(alice,ball).\nsmall(ball) :- sibling(george,alice).\nfriend(frank,frank) :- small(ball).\ndislikes(carol,dave) :- friend(frank,frank).\nparent(dave,carol) :- dislikes(carol,dave).\nbig(ball) :- friend(dave,dave), sibling(carol,alice).\nbig(phone) :- big(phone), hungry(frank), dislikes(eve,phone).\nhappy(carol) :- big(apple).\nhappy(carol) :- happy(frank), sibling(carol,dave).\nfriend(alice,george) :- friend(dave,frank), big(book).\nfriend(frank,bob) :- parent(carol,dave), cold.\nbig(phone) :- dislikes(frank,car), hot, friend(carol,frank).\nsad(george) :- enemy(bob,alice).\nlikes(bob,phone).\nparent(eve,dave).\nsibling(eve,frank).\nenemy(dave,frank).\nparent(dave,eve).\nsad(alice).\nlikes(george,phone).",
    "natural language": "You are given the following rules:\nIf phone is wet, then alice likes ball.\nIf alice likes ball, then george is a sibling of alice.\nIf george is a sibling of alice, then ball is small.\nIf ball is small, then frank is a friend of frank.\nIf frank is a friend of frank, then carol dislikes dave.\nIf carol dislikes dave, then dave is a parent of carol.\nIf dave is a friend of dave and carol is a sibling of alice, then ball is big.\nIf phone is big and frank is hungry and eve dislikes phone, then phone is big.\nIf apple is big, then carol is happy.\nIf frank is happy and carol is a sibling of dave, then carol is happy.\nIf dave is a friend of frank and book is big, then alice is a friend of george.\nIf carol is a parent of dave and it is cold, then frank is a friend of bob.\nIf frank dislikes car and it is hot and carol is a friend of frank, then phone is big.\nIf bob is an enemy of alice, then george is sad.\n\nAnd the following facts:\nphone is wet.\nbob likes phone.\neve is a parent of dave.\neve is a sibling of frank.\ndave is an enemy of frank.\ndave is a parent of eve.\nalice is sad.\ngeorge likes phone.\n\nOBSERVATION: dave is a parent of carol is true.\n\nQUESTION:\nCould phone is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "likes(alice,ball) :- wet(phone).\nsibling(george,alice) :- likes(alice,ball).\nsmall(ball) :- sibling(george,alice).\nfriend(frank,frank) :- small(ball).\ndislikes(carol,dave) :- friend(frank,frank).\nparent(dave,carol) :- dislikes(carol,dave).\nbig(ball) :- friend(dave,dave), sibling(carol,alice).\nbig(phone) :- big(phone), hungry(frank), dislikes(eve,phone).\nhappy(carol) :- big(apple).\nhappy(carol) :- happy(frank), sibling(carol,dave).\nfriend(alice,george) :- friend(dave,frank), big(book).\nfriend(frank,bob) :- parent(carol,dave), cold.\nbig(phone) :- dislikes(frank,car), hot, friend(carol,frank).\nsad(george) :- enemy(bob,alice).\nwet(phone).\nparent(eve,dave).\nsibling(eve,frank).\nenemy(dave,frank).\nparent(dave,eve).\nsad(alice).\nlikes(george,phone).",
    "natural language": "You are given the following rules:\nIf phone is wet, then alice likes ball.\nIf alice likes ball, then george is a sibling of alice.\nIf george is a sibling of alice, then ball is small.\nIf ball is small, then frank is a friend of frank.\nIf frank is a friend of frank, then carol dislikes dave.\nIf carol dislikes dave, then dave is a parent of carol.\nIf dave is a friend of dave and carol is a sibling of alice, then ball is big.\nIf phone is big and frank is hungry and eve dislikes phone, then phone is big.\nIf apple is big, then carol is happy.\nIf frank is happy and carol is a sibling of dave, then carol is happy.\nIf dave is a friend of frank and book is big, then alice is a friend of george.\nIf carol is a parent of dave and it is cold, then frank is a friend of bob.\nIf frank dislikes car and it is hot and carol is a friend of frank, then phone is big.\nIf bob is an enemy of alice, then george is sad.\n\nAnd the following facts:\nphone is wet.\nbob likes phone.\neve is a parent of dave.\neve is a sibling of frank.\ndave is an enemy of frank.\ndave is a parent of eve.\nalice is sad.\ngeorge likes phone.\n\nOBSERVATION: dave is a parent of carol is true.\n\nQUESTION:\nCould bob likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "likes(alice,ball) :- wet(phone).\nsibling(george,alice) :- likes(alice,ball).\nsmall(ball) :- sibling(george,alice).\nfriend(frank,frank) :- small(ball).\ndislikes(carol,dave) :- friend(frank,frank).\nparent(dave,carol) :- dislikes(carol,dave).\nbig(ball) :- friend(dave,dave), sibling(carol,alice).\nbig(phone) :- big(phone), hungry(frank), dislikes(eve,phone).\nhappy(carol) :- big(apple).\nhappy(carol) :- happy(frank), sibling(carol,dave).\nfriend(alice,george) :- friend(dave,frank), big(book).\nfriend(frank,bob) :- parent(carol,dave), cold.\nbig(phone) :- dislikes(frank,car), hot, friend(carol,frank).\nsad(george) :- enemy(bob,alice).\nwet(phone).\nlikes(bob,phone).\nparent(eve,dave).\nsibling(eve,frank).\nparent(dave,eve).\nsad(alice).\nlikes(george,phone).",
    "natural language": "You are given the following rules:\nIf phone is wet, then alice likes ball.\nIf alice likes ball, then george is a sibling of alice.\nIf george is a sibling of alice, then ball is small.\nIf ball is small, then frank is a friend of frank.\nIf frank is a friend of frank, then carol dislikes dave.\nIf carol dislikes dave, then dave is a parent of carol.\nIf dave is a friend of dave and carol is a sibling of alice, then ball is big.\nIf phone is big and frank is hungry and eve dislikes phone, then phone is big.\nIf apple is big, then carol is happy.\nIf frank is happy and carol is a sibling of dave, then carol is happy.\nIf dave is a friend of frank and book is big, then alice is a friend of george.\nIf carol is a parent of dave and it is cold, then frank is a friend of bob.\nIf frank dislikes car and it is hot and carol is a friend of frank, then phone is big.\nIf bob is an enemy of alice, then george is sad.\n\nAnd the following facts:\nphone is wet.\nbob likes phone.\neve is a parent of dave.\neve is a sibling of frank.\ndave is an enemy of frank.\ndave is a parent of eve.\nalice is sad.\ngeorge likes phone.\n\nOBSERVATION: dave is a parent of carol is true.\n\nQUESTION:\nCould dave is an enemy of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "hot :- cold.\nhungry(dave) :- hot.\nsunny :- hungry(dave).\nhot :- sunny.\nsad(bob) :- hot.\nhappy(george) :- sad(bob).\nsmall(ball) :- friend(dave,carol), dislikes(frank,george).\nowns(george,apple) :- wet(book), sibling(alice,carol), happy(carol).\nsmall(book) :- dislikes(dave,george).\nlikes(eve,dave) :- cold, big(phone).\nowns(eve,apple) :- small(apple).\nlikes(eve,dave) :- cold, dislikes(frank,eve).\nhappy(george) :- dislikes(george,ball), wet(pencil), dislikes(frank,bob).\nsad(bob) :- small(ball).\ncold.\nlikes(alice,carol).\nlikes(dave,pencil).\nowns(bob,phone).\ndislikes(bob,book).\nwet(pencil).\ndislikes(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then dave is hungry.\nIf dave is hungry, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is sad.\nIf bob is sad, then george is happy.\nIf dave is a friend of carol and frank dislikes george, then ball is small.\nIf book is wet and alice is a sibling of carol and carol is happy, then george owns apple.\nIf dave dislikes george, then book is small.\nIf it is cold and phone is big, then eve likes dave.\nIf apple is small, then eve owns apple.\nIf it is cold and frank dislikes eve, then eve likes dave.\nIf george dislikes ball and pencil is wet and frank dislikes bob, then george is happy.\nIf ball is small, then bob is sad.\n\nAnd the following facts:\nit is cold.\nalice likes carol.\ndave likes pencil.\nbob owns phone.\nbob dislikes book.\npencil is wet.\neve dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs carol is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "hot :- cold.\nhungry(dave) :- hot.\nsunny :- hungry(dave).\nhot :- sunny.\nsad(bob) :- hot.\nhappy(george) :- sad(bob).\nsmall(ball) :- friend(dave,carol), dislikes(frank,george).\nowns(george,apple) :- wet(book), sibling(alice,carol), happy(carol).\nsmall(book) :- dislikes(dave,george).\nlikes(eve,dave) :- cold, big(phone).\nowns(eve,apple) :- small(apple).\nlikes(eve,dave) :- cold, dislikes(frank,eve).\nhappy(george) :- dislikes(george,ball), wet(pencil), dislikes(frank,bob).\nsad(bob) :- small(ball).\ncold.\nlikes(alice,carol).\nlikes(dave,pencil).\nowns(bob,phone).\ndislikes(bob,book).\nwet(pencil).\ndislikes(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then dave is hungry.\nIf dave is hungry, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is sad.\nIf bob is sad, then george is happy.\nIf dave is a friend of carol and frank dislikes george, then ball is small.\nIf book is wet and alice is a sibling of carol and carol is happy, then george owns apple.\nIf dave dislikes george, then book is small.\nIf it is cold and phone is big, then eve likes dave.\nIf apple is small, then eve owns apple.\nIf it is cold and frank dislikes eve, then eve likes dave.\nIf george dislikes ball and pencil is wet and frank dislikes bob, then george is happy.\nIf ball is small, then bob is sad.\n\nAnd the following facts:\nit is cold.\nalice likes carol.\ndave likes pencil.\nbob owns phone.\nbob dislikes book.\npencil is wet.\neve dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "hot :- cold.\nhungry(dave) :- hot.\nsunny :- hungry(dave).\nhot :- sunny.\nsad(bob) :- hot.\nhappy(george) :- sad(bob).\nsmall(ball) :- friend(dave,carol), dislikes(frank,george).\nowns(george,apple) :- wet(book), sibling(alice,carol), happy(carol).\nsmall(book) :- dislikes(dave,george).\nlikes(eve,dave) :- cold, big(phone).\nowns(eve,apple) :- small(apple).\nlikes(eve,dave) :- cold, dislikes(frank,eve).\nhappy(george) :- dislikes(george,ball), wet(pencil), dislikes(frank,bob).\nsad(bob) :- small(ball).\ncold.\nlikes(alice,carol).\nlikes(dave,pencil).\nowns(bob,phone).\ndislikes(bob,book).\nwet(pencil).\ndislikes(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then dave is hungry.\nIf dave is hungry, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is sad.\nIf bob is sad, then george is happy.\nIf dave is a friend of carol and frank dislikes george, then ball is small.\nIf book is wet and alice is a sibling of carol and carol is happy, then george owns apple.\nIf dave dislikes george, then book is small.\nIf it is cold and phone is big, then eve likes dave.\nIf apple is small, then eve owns apple.\nIf it is cold and frank dislikes eve, then eve likes dave.\nIf george dislikes ball and pencil is wet and frank dislikes bob, then george is happy.\nIf ball is small, then bob is sad.\n\nAnd the following facts:\nit is cold.\nalice likes carol.\ndave likes pencil.\nbob owns phone.\nbob dislikes book.\npencil is wet.\neve dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs bob owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "hot :- cold.\nhungry(dave) :- hot.\nsunny :- hungry(dave).\nhot :- sunny.\nsad(bob) :- hot.\nhappy(george) :- sad(bob).\nsmall(ball) :- friend(dave,carol), dislikes(frank,george).\nowns(george,apple) :- wet(book), sibling(alice,carol), happy(carol).\nsmall(book) :- dislikes(dave,george).\nlikes(eve,dave) :- cold, big(phone).\nowns(eve,apple) :- small(apple).\nlikes(eve,dave) :- cold, dislikes(frank,eve).\nhappy(george) :- dislikes(george,ball), wet(pencil), dislikes(frank,bob).\nsad(bob) :- small(ball).\ncold.\nlikes(alice,carol).\nlikes(dave,pencil).\nowns(bob,phone).\ndislikes(bob,book).\nwet(pencil).\ndislikes(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then dave is hungry.\nIf dave is hungry, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is sad.\nIf bob is sad, then george is happy.\nIf dave is a friend of carol and frank dislikes george, then ball is small.\nIf book is wet and alice is a sibling of carol and carol is happy, then george owns apple.\nIf dave dislikes george, then book is small.\nIf it is cold and phone is big, then eve likes dave.\nIf apple is small, then eve owns apple.\nIf it is cold and frank dislikes eve, then eve likes dave.\nIf george dislikes ball and pencil is wet and frank dislikes bob, then george is happy.\nIf ball is small, then bob is sad.\n\nAnd the following facts:\nit is cold.\nalice likes carol.\ndave likes pencil.\nbob owns phone.\nbob dislikes book.\npencil is wet.\neve dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs pencil is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,george).",
    "c": "hot :- cold.\nhungry(dave) :- hot.\nsunny :- hungry(dave).\nhot :- sunny.\nsad(bob) :- hot.\nhappy(george) :- sad(bob).\nsmall(ball) :- friend(dave,carol), dislikes(frank,george).\nowns(george,apple) :- wet(book), sibling(alice,carol), happy(carol).\nsmall(book) :- dislikes(dave,george).\nlikes(eve,dave) :- cold, big(phone).\nowns(eve,apple) :- small(apple).\nlikes(eve,dave) :- cold, dislikes(frank,eve).\nhappy(george) :- dislikes(george,ball), wet(pencil), dislikes(frank,bob).\nsad(bob) :- small(ball).\ncold.\nlikes(alice,carol).\nlikes(dave,pencil).\nowns(bob,phone).\ndislikes(bob,book).\nwet(pencil).\ndislikes(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then dave is hungry.\nIf dave is hungry, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is sad.\nIf bob is sad, then george is happy.\nIf dave is a friend of carol and frank dislikes george, then ball is small.\nIf book is wet and alice is a sibling of carol and carol is happy, then george owns apple.\nIf dave dislikes george, then book is small.\nIf it is cold and phone is big, then eve likes dave.\nIf apple is small, then eve owns apple.\nIf it is cold and frank dislikes eve, then eve likes dave.\nIf george dislikes ball and pencil is wet and frank dislikes bob, then george is happy.\nIf ball is small, then bob is sad.\n\nAnd the following facts:\nit is cold.\nalice likes carol.\ndave likes pencil.\nbob owns phone.\nbob dislikes book.\npencil is wet.\neve dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs eve is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "hot :- cold.\nhungry(dave) :- hot.\nsunny :- hungry(dave).\nhot :- sunny.\nsad(bob) :- hot.\nhappy(george) :- sad(bob).\nsmall(ball) :- friend(dave,carol), dislikes(frank,george).\nowns(george,apple) :- wet(book), sibling(alice,carol), happy(carol).\nsmall(book) :- dislikes(dave,george).\nlikes(eve,dave) :- cold, big(phone).\nowns(eve,apple) :- small(apple).\nlikes(eve,dave) :- cold, dislikes(frank,eve).\nhappy(george) :- dislikes(george,ball), wet(pencil), dislikes(frank,bob).\nsad(bob) :- small(ball).\nlikes(alice,carol).\nlikes(dave,pencil).\nowns(bob,phone).\ndislikes(bob,book).\nwet(pencil).\ndislikes(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is hot.\nIf it is hot, then dave is hungry.\nIf dave is hungry, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is sad.\nIf bob is sad, then george is happy.\nIf dave is a friend of carol and frank dislikes george, then ball is small.\nIf book is wet and alice is a sibling of carol and carol is happy, then george owns apple.\nIf dave dislikes george, then book is small.\nIf it is cold and phone is big, then eve likes dave.\nIf apple is small, then eve owns apple.\nIf it is cold and frank dislikes eve, then eve likes dave.\nIf george dislikes ball and pencil is wet and frank dislikes bob, then george is happy.\nIf ball is small, then bob is sad.\n\nAnd the following facts:\nit is cold.\nalice likes carol.\ndave likes pencil.\nbob owns phone.\nbob dislikes book.\npencil is wet.\neve dislikes apple.\ncarol is a sibling of george.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould it is cold be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(dave,pencil).",
    "c": "hot :- cold.\nhungry(dave) :- hot.\nsunny :- hungry(dave).\nhot :- sunny.\nsad(bob) :- hot.\nhappy(george) :- sad(bob).\nsmall(ball) :- friend(dave,carol), dislikes(frank,george).\nowns(george,apple) :- wet(book), sibling(alice,carol), happy(carol).\nsmall(book) :- dislikes(dave,george).\nlikes(eve,dave) :- cold, big(phone).\nowns(eve,apple) :- small(apple).\nlikes(eve,dave) :- cold, dislikes(frank,eve).\nhappy(george) :- dislikes(george,ball), wet(pencil), dislikes(frank,bob).\nsad(bob) :- small(ball).\ncold.\nlikes(alice,carol).\nowns(bob,phone).\ndislikes(bob,book).\nwet(pencil).\ndislikes(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is hot.\nIf it is hot, then dave is hungry.\nIf dave is hungry, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is sad.\nIf bob is sad, then george is happy.\nIf dave is a friend of carol and frank dislikes george, then ball is small.\nIf book is wet and alice is a sibling of carol and carol is happy, then george owns apple.\nIf dave dislikes george, then book is small.\nIf it is cold and phone is big, then eve likes dave.\nIf apple is small, then eve owns apple.\nIf it is cold and frank dislikes eve, then eve likes dave.\nIf george dislikes ball and pencil is wet and frank dislikes bob, then george is happy.\nIf ball is small, then bob is sad.\n\nAnd the following facts:\nit is cold.\nalice likes carol.\ndave likes pencil.\nbob owns phone.\nbob dislikes book.\npencil is wet.\neve dislikes apple.\ncarol is a sibling of george.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould dave likes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "hot :- cold.\nhungry(dave) :- hot.\nsunny :- hungry(dave).\nhot :- sunny.\nsad(bob) :- hot.\nhappy(george) :- sad(bob).\nsmall(ball) :- friend(dave,carol), dislikes(frank,george).\nowns(george,apple) :- wet(book), sibling(alice,carol), happy(carol).\nsmall(book) :- dislikes(dave,george).\nlikes(eve,dave) :- cold, big(phone).\nowns(eve,apple) :- small(apple).\nlikes(eve,dave) :- cold, dislikes(frank,eve).\nhappy(george) :- dislikes(george,ball), wet(pencil), dislikes(frank,bob).\nsad(bob) :- small(ball).\ncold.\nlikes(alice,carol).\nlikes(dave,pencil).\ndislikes(bob,book).\nwet(pencil).\ndislikes(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is hot.\nIf it is hot, then dave is hungry.\nIf dave is hungry, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is sad.\nIf bob is sad, then george is happy.\nIf dave is a friend of carol and frank dislikes george, then ball is small.\nIf book is wet and alice is a sibling of carol and carol is happy, then george owns apple.\nIf dave dislikes george, then book is small.\nIf it is cold and phone is big, then eve likes dave.\nIf apple is small, then eve owns apple.\nIf it is cold and frank dislikes eve, then eve likes dave.\nIf george dislikes ball and pencil is wet and frank dislikes bob, then george is happy.\nIf ball is small, then bob is sad.\n\nAnd the following facts:\nit is cold.\nalice likes carol.\ndave likes pencil.\nbob owns phone.\nbob dislikes book.\npencil is wet.\neve dislikes apple.\ncarol is a sibling of george.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould bob owns phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "happy(dave) :- happy(alice).\nlikes(alice,car) :- happy(dave).\nsibling(alice,eve) :- likes(alice,car).\nbig(book) :- sibling(alice,eve).\nhungry(alice) :- big(book).\nfriend(george,bob) :- hungry(alice).\nowns(dave,book) :- friend(george,bob).\nwet(car) :- owns(dave,book).\nparent(alice,frank) :- tall(carol).\nparent(bob,george) :- cold, hot, small(book).\nwet(ball) :- happy(eve), wet(car), tall(george).\nwet(ball) :- wet(car), dislikes(alice,frank), big(phone).\nparent(dave,dave) :- small(book).\nfriend(carol,alice) :- cold, tall(george), parent(dave,carol).\nhappy(alice).\nowns(carol,ball).\ndislikes(carol,car).\nowns(eve,ball).\nowns(dave,car).\nfriend(carol,george).\nfriend(alice,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is happy, then dave is happy.\nIf dave is happy, then alice likes car.\nIf alice likes car, then alice is a sibling of eve.\nIf alice is a sibling of eve, then book is big.\nIf book is big, then alice is hungry.\nIf alice is hungry, then george is a friend of bob.\nIf george is a friend of bob, then dave owns book.\nIf dave owns book, then car is wet.\nIf carol is tall, then alice is a parent of frank.\nIf it is cold and it is hot and book is small, then bob is a parent of george.\nIf eve is happy and car is wet and george is tall, then ball is wet.\nIf car is wet and alice dislikes frank and phone is big, then ball is wet.\nIf book is small, then dave is a parent of dave.\nIf it is cold and george is tall and dave is a parent of carol, then carol is a friend of alice.\n\nAnd the following facts:\nalice is happy.\ncarol owns ball.\ncarol dislikes car.\neve owns ball.\ndave owns car.\ncarol is a friend of george.\nalice is a friend of frank.\neve likes pencil.\n\nQUESTION:\nIs alice is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,frank).",
    "c": "happy(dave) :- happy(alice).\nlikes(alice,car) :- happy(dave).\nsibling(alice,eve) :- likes(alice,car).\nbig(book) :- sibling(alice,eve).\nhungry(alice) :- big(book).\nfriend(george,bob) :- hungry(alice).\nowns(dave,book) :- friend(george,bob).\nwet(car) :- owns(dave,book).\nparent(alice,frank) :- tall(carol).\nparent(bob,george) :- cold, hot, small(book).\nwet(ball) :- happy(eve), wet(car), tall(george).\nwet(ball) :- wet(car), dislikes(alice,frank), big(phone).\nparent(dave,dave) :- small(book).\nfriend(carol,alice) :- cold, tall(george), parent(dave,carol).\nhappy(alice).\nowns(carol,ball).\ndislikes(carol,car).\nowns(eve,ball).\nowns(dave,car).\nfriend(carol,george).\nfriend(alice,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is happy, then dave is happy.\nIf dave is happy, then alice likes car.\nIf alice likes car, then alice is a sibling of eve.\nIf alice is a sibling of eve, then book is big.\nIf book is big, then alice is hungry.\nIf alice is hungry, then george is a friend of bob.\nIf george is a friend of bob, then dave owns book.\nIf dave owns book, then car is wet.\nIf carol is tall, then alice is a parent of frank.\nIf it is cold and it is hot and book is small, then bob is a parent of george.\nIf eve is happy and car is wet and george is tall, then ball is wet.\nIf car is wet and alice dislikes frank and phone is big, then ball is wet.\nIf book is small, then dave is a parent of dave.\nIf it is cold and george is tall and dave is a parent of carol, then carol is a friend of alice.\n\nAnd the following facts:\nalice is happy.\ncarol owns ball.\ncarol dislikes car.\neve owns ball.\ndave owns car.\ncarol is a friend of george.\nalice is a friend of frank.\neve likes pencil.\n\nQUESTION:\nIs alice is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,eve).",
    "c": "happy(dave) :- happy(alice).\nlikes(alice,car) :- happy(dave).\nsibling(alice,eve) :- likes(alice,car).\nbig(book) :- sibling(alice,eve).\nhungry(alice) :- big(book).\nfriend(george,bob) :- hungry(alice).\nowns(dave,book) :- friend(george,bob).\nwet(car) :- owns(dave,book).\nparent(alice,frank) :- tall(carol).\nparent(bob,george) :- cold, hot, small(book).\nwet(ball) :- happy(eve), wet(car), tall(george).\nwet(ball) :- wet(car), dislikes(alice,frank), big(phone).\nparent(dave,dave) :- small(book).\nfriend(carol,alice) :- cold, tall(george), parent(dave,carol).\nhappy(alice).\nowns(carol,ball).\ndislikes(carol,car).\nowns(eve,ball).\nowns(dave,car).\nfriend(carol,george).\nfriend(alice,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is happy, then dave is happy.\nIf dave is happy, then alice likes car.\nIf alice likes car, then alice is a sibling of eve.\nIf alice is a sibling of eve, then book is big.\nIf book is big, then alice is hungry.\nIf alice is hungry, then george is a friend of bob.\nIf george is a friend of bob, then dave owns book.\nIf dave owns book, then car is wet.\nIf carol is tall, then alice is a parent of frank.\nIf it is cold and it is hot and book is small, then bob is a parent of george.\nIf eve is happy and car is wet and george is tall, then ball is wet.\nIf car is wet and alice dislikes frank and phone is big, then ball is wet.\nIf book is small, then dave is a parent of dave.\nIf it is cold and george is tall and dave is a parent of carol, then carol is a friend of alice.\n\nAnd the following facts:\nalice is happy.\ncarol owns ball.\ncarol dislikes car.\neve owns ball.\ndave owns car.\ncarol is a friend of george.\nalice is a friend of frank.\neve likes pencil.\n\nQUESTION:\nIs alice is a sibling of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(dave).",
    "c": "happy(dave) :- happy(alice).\nlikes(alice,car) :- happy(dave).\nsibling(alice,eve) :- likes(alice,car).\nbig(book) :- sibling(alice,eve).\nhungry(alice) :- big(book).\nfriend(george,bob) :- hungry(alice).\nowns(dave,book) :- friend(george,bob).\nwet(car) :- owns(dave,book).\nparent(alice,frank) :- tall(carol).\nparent(bob,george) :- cold, hot, small(book).\nwet(ball) :- happy(eve), wet(car), tall(george).\nwet(ball) :- wet(car), dislikes(alice,frank), big(phone).\nparent(dave,dave) :- small(book).\nfriend(carol,alice) :- cold, tall(george), parent(dave,carol).\nhappy(alice).\nowns(carol,ball).\ndislikes(carol,car).\nowns(eve,ball).\nowns(dave,car).\nfriend(carol,george).\nfriend(alice,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is happy, then dave is happy.\nIf dave is happy, then alice likes car.\nIf alice likes car, then alice is a sibling of eve.\nIf alice is a sibling of eve, then book is big.\nIf book is big, then alice is hungry.\nIf alice is hungry, then george is a friend of bob.\nIf george is a friend of bob, then dave owns book.\nIf dave owns book, then car is wet.\nIf carol is tall, then alice is a parent of frank.\nIf it is cold and it is hot and book is small, then bob is a parent of george.\nIf eve is happy and car is wet and george is tall, then ball is wet.\nIf car is wet and alice dislikes frank and phone is big, then ball is wet.\nIf book is small, then dave is a parent of dave.\nIf it is cold and george is tall and dave is a parent of carol, then carol is a friend of alice.\n\nAnd the following facts:\nalice is happy.\ncarol owns ball.\ncarol dislikes car.\neve owns ball.\ndave owns car.\ncarol is a friend of george.\nalice is a friend of frank.\neve likes pencil.\n\nQUESTION:\nIs dave is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,alice).",
    "c": "happy(dave) :- happy(alice).\nlikes(alice,car) :- happy(dave).\nsibling(alice,eve) :- likes(alice,car).\nbig(book) :- sibling(alice,eve).\nhungry(alice) :- big(book).\nfriend(george,bob) :- hungry(alice).\nowns(dave,book) :- friend(george,bob).\nwet(car) :- owns(dave,book).\nparent(alice,frank) :- tall(carol).\nparent(bob,george) :- cold, hot, small(book).\nwet(ball) :- happy(eve), wet(car), tall(george).\nwet(ball) :- wet(car), dislikes(alice,frank), big(phone).\nparent(dave,dave) :- small(book).\nfriend(carol,alice) :- cold, tall(george), parent(dave,carol).\nhappy(alice).\nowns(carol,ball).\ndislikes(carol,car).\nowns(eve,ball).\nowns(dave,car).\nfriend(carol,george).\nfriend(alice,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is happy, then dave is happy.\nIf dave is happy, then alice likes car.\nIf alice likes car, then alice is a sibling of eve.\nIf alice is a sibling of eve, then book is big.\nIf book is big, then alice is hungry.\nIf alice is hungry, then george is a friend of bob.\nIf george is a friend of bob, then dave owns book.\nIf dave owns book, then car is wet.\nIf carol is tall, then alice is a parent of frank.\nIf it is cold and it is hot and book is small, then bob is a parent of george.\nIf eve is happy and car is wet and george is tall, then ball is wet.\nIf car is wet and alice dislikes frank and phone is big, then ball is wet.\nIf book is small, then dave is a parent of dave.\nIf it is cold and george is tall and dave is a parent of carol, then carol is a friend of alice.\n\nAnd the following facts:\nalice is happy.\ncarol owns ball.\ncarol dislikes car.\neve owns ball.\ndave owns car.\ncarol is a friend of george.\nalice is a friend of frank.\neve likes pencil.\n\nQUESTION:\nIs carol is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(alice).",
    "c": "happy(dave) :- happy(alice).\nlikes(alice,car) :- happy(dave).\nsibling(alice,eve) :- likes(alice,car).\nbig(book) :- sibling(alice,eve).\nhungry(alice) :- big(book).\nfriend(george,bob) :- hungry(alice).\nowns(dave,book) :- friend(george,bob).\nwet(car) :- owns(dave,book).\nparent(alice,frank) :- tall(carol).\nparent(bob,george) :- cold, hot, small(book).\nwet(ball) :- happy(eve), wet(car), tall(george).\nwet(ball) :- wet(car), dislikes(alice,frank), big(phone).\nparent(dave,dave) :- small(book).\nfriend(carol,alice) :- cold, tall(george), parent(dave,carol).\nowns(carol,ball).\ndislikes(carol,car).\nowns(eve,ball).\nowns(dave,car).\nfriend(carol,george).\nfriend(alice,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following rules:\nIf alice is happy, then dave is happy.\nIf dave is happy, then alice likes car.\nIf alice likes car, then alice is a sibling of eve.\nIf alice is a sibling of eve, then book is big.\nIf book is big, then alice is hungry.\nIf alice is hungry, then george is a friend of bob.\nIf george is a friend of bob, then dave owns book.\nIf dave owns book, then car is wet.\nIf carol is tall, then alice is a parent of frank.\nIf it is cold and it is hot and book is small, then bob is a parent of george.\nIf eve is happy and car is wet and george is tall, then ball is wet.\nIf car is wet and alice dislikes frank and phone is big, then ball is wet.\nIf book is small, then dave is a parent of dave.\nIf it is cold and george is tall and dave is a parent of carol, then carol is a friend of alice.\n\nAnd the following facts:\nalice is happy.\ncarol owns ball.\ncarol dislikes car.\neve owns ball.\ndave owns car.\ncarol is a friend of george.\nalice is a friend of frank.\neve likes pencil.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould alice is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,car).",
    "c": "happy(dave) :- happy(alice).\nlikes(alice,car) :- happy(dave).\nsibling(alice,eve) :- likes(alice,car).\nbig(book) :- sibling(alice,eve).\nhungry(alice) :- big(book).\nfriend(george,bob) :- hungry(alice).\nowns(dave,book) :- friend(george,bob).\nwet(car) :- owns(dave,book).\nparent(alice,frank) :- tall(carol).\nparent(bob,george) :- cold, hot, small(book).\nwet(ball) :- happy(eve), wet(car), tall(george).\nwet(ball) :- wet(car), dislikes(alice,frank), big(phone).\nparent(dave,dave) :- small(book).\nfriend(carol,alice) :- cold, tall(george), parent(dave,carol).\nhappy(alice).\nowns(carol,ball).\ndislikes(carol,car).\nowns(eve,ball).\nfriend(carol,george).\nfriend(alice,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following rules:\nIf alice is happy, then dave is happy.\nIf dave is happy, then alice likes car.\nIf alice likes car, then alice is a sibling of eve.\nIf alice is a sibling of eve, then book is big.\nIf book is big, then alice is hungry.\nIf alice is hungry, then george is a friend of bob.\nIf george is a friend of bob, then dave owns book.\nIf dave owns book, then car is wet.\nIf carol is tall, then alice is a parent of frank.\nIf it is cold and it is hot and book is small, then bob is a parent of george.\nIf eve is happy and car is wet and george is tall, then ball is wet.\nIf car is wet and alice dislikes frank and phone is big, then ball is wet.\nIf book is small, then dave is a parent of dave.\nIf it is cold and george is tall and dave is a parent of carol, then carol is a friend of alice.\n\nAnd the following facts:\nalice is happy.\ncarol owns ball.\ncarol dislikes car.\neve owns ball.\ndave owns car.\ncarol is a friend of george.\nalice is a friend of frank.\neve likes pencil.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould dave owns car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(eve,ball).",
    "c": "happy(dave) :- happy(alice).\nlikes(alice,car) :- happy(dave).\nsibling(alice,eve) :- likes(alice,car).\nbig(book) :- sibling(alice,eve).\nhungry(alice) :- big(book).\nfriend(george,bob) :- hungry(alice).\nowns(dave,book) :- friend(george,bob).\nwet(car) :- owns(dave,book).\nparent(alice,frank) :- tall(carol).\nparent(bob,george) :- cold, hot, small(book).\nwet(ball) :- happy(eve), wet(car), tall(george).\nwet(ball) :- wet(car), dislikes(alice,frank), big(phone).\nparent(dave,dave) :- small(book).\nfriend(carol,alice) :- cold, tall(george), parent(dave,carol).\nhappy(alice).\nowns(carol,ball).\ndislikes(carol,car).\nowns(dave,car).\nfriend(carol,george).\nfriend(alice,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following rules:\nIf alice is happy, then dave is happy.\nIf dave is happy, then alice likes car.\nIf alice likes car, then alice is a sibling of eve.\nIf alice is a sibling of eve, then book is big.\nIf book is big, then alice is hungry.\nIf alice is hungry, then george is a friend of bob.\nIf george is a friend of bob, then dave owns book.\nIf dave owns book, then car is wet.\nIf carol is tall, then alice is a parent of frank.\nIf it is cold and it is hot and book is small, then bob is a parent of george.\nIf eve is happy and car is wet and george is tall, then ball is wet.\nIf car is wet and alice dislikes frank and phone is big, then ball is wet.\nIf book is small, then dave is a parent of dave.\nIf it is cold and george is tall and dave is a parent of carol, then carol is a friend of alice.\n\nAnd the following facts:\nalice is happy.\ncarol owns ball.\ncarol dislikes car.\neve owns ball.\ndave owns car.\ncarol is a friend of george.\nalice is a friend of frank.\neve likes pencil.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould eve owns ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(frank,george).",
    "c": "hot :- sunny.\nowns(george,car) :- hot.\nbig(car) :- owns(george,car).\nenemy(alice,eve) :- big(car).\nsibling(dave,george) :- enemy(alice,eve).\ndislikes(alice,pencil) :- sibling(dave,george).\nparent(frank,george) :- dislikes(alice,pencil).\nsibling(carol,george) :- parent(frank,george).\nhot :- wet(phone), happy(eve).\nhot :- happy(frank), sibling(dave,carol), hungry(carol).\nenemy(alice,alice) :- parent(bob,eve), friend(alice,carol), sad(bob).\nenemy(bob,carol) :- sunny, owns(bob,pencil).\nlikes(bob,george) :- hungry(dave).\ndislikes(eve,dave) :- hungry(george), happy(carol), hungry(bob).\nsunny.\nlikes(carol,apple).\nlikes(carol,ball).\nowns(eve,ball).\ndislikes(bob,book).\nfriend(alice,eve).\ndislikes(carol,frank).\nfriend(dave,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is hot.\nIf it is hot, then george owns car.\nIf george owns car, then car is big.\nIf car is big, then alice is an enemy of eve.\nIf alice is an enemy of eve, then dave is a sibling of george.\nIf dave is a sibling of george, then alice dislikes pencil.\nIf alice dislikes pencil, then frank is a parent of george.\nIf frank is a parent of george, then carol is a sibling of george.\nIf phone is wet and eve is happy, then it is hot.\nIf frank is happy and dave is a sibling of carol and carol is hungry, then it is hot.\nIf bob is a parent of eve and alice is a friend of carol and bob is sad, then alice is an enemy of alice.\nIf it is sunny and bob owns pencil, then bob is an enemy of carol.\nIf dave is hungry, then bob likes george.\nIf george is hungry and carol is happy and bob is hungry, then eve dislikes dave.\n\nAnd the following facts:\nit is sunny.\ncarol likes apple.\ncarol likes ball.\neve owns ball.\nbob dislikes book.\nalice is a friend of eve.\ncarol dislikes frank.\ndave is a friend of alice.\n\nQUESTION:\nIs frank is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,pencil).",
    "c": "hot :- sunny.\nowns(george,car) :- hot.\nbig(car) :- owns(george,car).\nenemy(alice,eve) :- big(car).\nsibling(dave,george) :- enemy(alice,eve).\ndislikes(alice,pencil) :- sibling(dave,george).\nparent(frank,george) :- dislikes(alice,pencil).\nsibling(carol,george) :- parent(frank,george).\nhot :- wet(phone), happy(eve).\nhot :- happy(frank), sibling(dave,carol), hungry(carol).\nenemy(alice,alice) :- parent(bob,eve), friend(alice,carol), sad(bob).\nenemy(bob,carol) :- sunny, owns(bob,pencil).\nlikes(bob,george) :- hungry(dave).\ndislikes(eve,dave) :- hungry(george), happy(carol), hungry(bob).\nsunny.\nlikes(carol,apple).\nlikes(carol,ball).\nowns(eve,ball).\ndislikes(bob,book).\nfriend(alice,eve).\ndislikes(carol,frank).\nfriend(dave,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is hot.\nIf it is hot, then george owns car.\nIf george owns car, then car is big.\nIf car is big, then alice is an enemy of eve.\nIf alice is an enemy of eve, then dave is a sibling of george.\nIf dave is a sibling of george, then alice dislikes pencil.\nIf alice dislikes pencil, then frank is a parent of george.\nIf frank is a parent of george, then carol is a sibling of george.\nIf phone is wet and eve is happy, then it is hot.\nIf frank is happy and dave is a sibling of carol and carol is hungry, then it is hot.\nIf bob is a parent of eve and alice is a friend of carol and bob is sad, then alice is an enemy of alice.\nIf it is sunny and bob owns pencil, then bob is an enemy of carol.\nIf dave is hungry, then bob likes george.\nIf george is hungry and carol is happy and bob is hungry, then eve dislikes dave.\n\nAnd the following facts:\nit is sunny.\ncarol likes apple.\ncarol likes ball.\neve owns ball.\nbob dislikes book.\nalice is a friend of eve.\ncarol dislikes frank.\ndave is a friend of alice.\n\nQUESTION:\nIs alice dislikes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,ball).",
    "c": "hot :- sunny.\nowns(george,car) :- hot.\nbig(car) :- owns(george,car).\nenemy(alice,eve) :- big(car).\nsibling(dave,george) :- enemy(alice,eve).\ndislikes(alice,pencil) :- sibling(dave,george).\nparent(frank,george) :- dislikes(alice,pencil).\nsibling(carol,george) :- parent(frank,george).\nhot :- wet(phone), happy(eve).\nhot :- happy(frank), sibling(dave,carol), hungry(carol).\nenemy(alice,alice) :- parent(bob,eve), friend(alice,carol), sad(bob).\nenemy(bob,carol) :- sunny, owns(bob,pencil).\nlikes(bob,george) :- hungry(dave).\ndislikes(eve,dave) :- hungry(george), happy(carol), hungry(bob).\nsunny.\nlikes(carol,apple).\nlikes(carol,ball).\nowns(eve,ball).\ndislikes(bob,book).\nfriend(alice,eve).\ndislikes(carol,frank).\nfriend(dave,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is hot.\nIf it is hot, then george owns car.\nIf george owns car, then car is big.\nIf car is big, then alice is an enemy of eve.\nIf alice is an enemy of eve, then dave is a sibling of george.\nIf dave is a sibling of george, then alice dislikes pencil.\nIf alice dislikes pencil, then frank is a parent of george.\nIf frank is a parent of george, then carol is a sibling of george.\nIf phone is wet and eve is happy, then it is hot.\nIf frank is happy and dave is a sibling of carol and carol is hungry, then it is hot.\nIf bob is a parent of eve and alice is a friend of carol and bob is sad, then alice is an enemy of alice.\nIf it is sunny and bob owns pencil, then bob is an enemy of carol.\nIf dave is hungry, then bob likes george.\nIf george is hungry and carol is happy and bob is hungry, then eve dislikes dave.\n\nAnd the following facts:\nit is sunny.\ncarol likes apple.\ncarol likes ball.\neve owns ball.\nbob dislikes book.\nalice is a friend of eve.\ncarol dislikes frank.\ndave is a friend of alice.\n\nQUESTION:\nIs eve owns ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,alice).",
    "c": "hot :- sunny.\nowns(george,car) :- hot.\nbig(car) :- owns(george,car).\nenemy(alice,eve) :- big(car).\nsibling(dave,george) :- enemy(alice,eve).\ndislikes(alice,pencil) :- sibling(dave,george).\nparent(frank,george) :- dislikes(alice,pencil).\nsibling(carol,george) :- parent(frank,george).\nhot :- wet(phone), happy(eve).\nhot :- happy(frank), sibling(dave,carol), hungry(carol).\nenemy(alice,alice) :- parent(bob,eve), friend(alice,carol), sad(bob).\nenemy(bob,carol) :- sunny, owns(bob,pencil).\nlikes(bob,george) :- hungry(dave).\ndislikes(eve,dave) :- hungry(george), happy(carol), hungry(bob).\nsunny.\nlikes(carol,apple).\nlikes(carol,ball).\nowns(eve,ball).\ndislikes(bob,book).\nfriend(alice,eve).\ndislikes(carol,frank).\nfriend(dave,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is hot.\nIf it is hot, then george owns car.\nIf george owns car, then car is big.\nIf car is big, then alice is an enemy of eve.\nIf alice is an enemy of eve, then dave is a sibling of george.\nIf dave is a sibling of george, then alice dislikes pencil.\nIf alice dislikes pencil, then frank is a parent of george.\nIf frank is a parent of george, then carol is a sibling of george.\nIf phone is wet and eve is happy, then it is hot.\nIf frank is happy and dave is a sibling of carol and carol is hungry, then it is hot.\nIf bob is a parent of eve and alice is a friend of carol and bob is sad, then alice is an enemy of alice.\nIf it is sunny and bob owns pencil, then bob is an enemy of carol.\nIf dave is hungry, then bob likes george.\nIf george is hungry and carol is happy and bob is hungry, then eve dislikes dave.\n\nAnd the following facts:\nit is sunny.\ncarol likes apple.\ncarol likes ball.\neve owns ball.\nbob dislikes book.\nalice is a friend of eve.\ncarol dislikes frank.\ndave is a friend of alice.\n\nQUESTION:\nIs dave is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,eve).",
    "c": "hot :- sunny.\nowns(george,car) :- hot.\nbig(car) :- owns(george,car).\nenemy(alice,eve) :- big(car).\nsibling(dave,george) :- enemy(alice,eve).\ndislikes(alice,pencil) :- sibling(dave,george).\nparent(frank,george) :- dislikes(alice,pencil).\nsibling(carol,george) :- parent(frank,george).\nhot :- wet(phone), happy(eve).\nhot :- happy(frank), sibling(dave,carol), hungry(carol).\nenemy(alice,alice) :- parent(bob,eve), friend(alice,carol), sad(bob).\nenemy(bob,carol) :- sunny, owns(bob,pencil).\nlikes(bob,george) :- hungry(dave).\ndislikes(eve,dave) :- hungry(george), happy(carol), hungry(bob).\nsunny.\nlikes(carol,apple).\nlikes(carol,ball).\nowns(eve,ball).\ndislikes(bob,book).\nfriend(alice,eve).\ndislikes(carol,frank).\nfriend(dave,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is hot.\nIf it is hot, then george owns car.\nIf george owns car, then car is big.\nIf car is big, then alice is an enemy of eve.\nIf alice is an enemy of eve, then dave is a sibling of george.\nIf dave is a sibling of george, then alice dislikes pencil.\nIf alice dislikes pencil, then frank is a parent of george.\nIf frank is a parent of george, then carol is a sibling of george.\nIf phone is wet and eve is happy, then it is hot.\nIf frank is happy and dave is a sibling of carol and carol is hungry, then it is hot.\nIf bob is a parent of eve and alice is a friend of carol and bob is sad, then alice is an enemy of alice.\nIf it is sunny and bob owns pencil, then bob is an enemy of carol.\nIf dave is hungry, then bob likes george.\nIf george is hungry and carol is happy and bob is hungry, then eve dislikes dave.\n\nAnd the following facts:\nit is sunny.\ncarol likes apple.\ncarol likes ball.\neve owns ball.\nbob dislikes book.\nalice is a friend of eve.\ncarol dislikes frank.\ndave is a friend of alice.\n\nQUESTION:\nIs dave dislikes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "hot :- sunny.\nowns(george,car) :- hot.\nbig(car) :- owns(george,car).\nenemy(alice,eve) :- big(car).\nsibling(dave,george) :- enemy(alice,eve).\ndislikes(alice,pencil) :- sibling(dave,george).\nparent(frank,george) :- dislikes(alice,pencil).\nsibling(carol,george) :- parent(frank,george).\nhot :- wet(phone), happy(eve).\nhot :- happy(frank), sibling(dave,carol), hungry(carol).\nenemy(alice,alice) :- parent(bob,eve), friend(alice,carol), sad(bob).\nenemy(bob,carol) :- sunny, owns(bob,pencil).\nlikes(bob,george) :- hungry(dave).\ndislikes(eve,dave) :- hungry(george), happy(carol), hungry(bob).\nlikes(carol,apple).\nlikes(carol,ball).\nowns(eve,ball).\ndislikes(bob,book).\nfriend(alice,eve).\ndislikes(carol,frank).\nfriend(dave,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then it is hot.\nIf it is hot, then george owns car.\nIf george owns car, then car is big.\nIf car is big, then alice is an enemy of eve.\nIf alice is an enemy of eve, then dave is a sibling of george.\nIf dave is a sibling of george, then alice dislikes pencil.\nIf alice dislikes pencil, then frank is a parent of george.\nIf frank is a parent of george, then carol is a sibling of george.\nIf phone is wet and eve is happy, then it is hot.\nIf frank is happy and dave is a sibling of carol and carol is hungry, then it is hot.\nIf bob is a parent of eve and alice is a friend of carol and bob is sad, then alice is an enemy of alice.\nIf it is sunny and bob owns pencil, then bob is an enemy of carol.\nIf dave is hungry, then bob likes george.\nIf george is hungry and carol is happy and bob is hungry, then eve dislikes dave.\n\nAnd the following facts:\nit is sunny.\ncarol likes apple.\ncarol likes ball.\neve owns ball.\nbob dislikes book.\nalice is a friend of eve.\ncarol dislikes frank.\ndave is a friend of alice.\n\nOBSERVATION: carol is a sibling of george is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(eve,ball).",
    "c": "hot :- sunny.\nowns(george,car) :- hot.\nbig(car) :- owns(george,car).\nenemy(alice,eve) :- big(car).\nsibling(dave,george) :- enemy(alice,eve).\ndislikes(alice,pencil) :- sibling(dave,george).\nparent(frank,george) :- dislikes(alice,pencil).\nsibling(carol,george) :- parent(frank,george).\nhot :- wet(phone), happy(eve).\nhot :- happy(frank), sibling(dave,carol), hungry(carol).\nenemy(alice,alice) :- parent(bob,eve), friend(alice,carol), sad(bob).\nenemy(bob,carol) :- sunny, owns(bob,pencil).\nlikes(bob,george) :- hungry(dave).\ndislikes(eve,dave) :- hungry(george), happy(carol), hungry(bob).\nsunny.\nlikes(carol,apple).\nlikes(carol,ball).\ndislikes(bob,book).\nfriend(alice,eve).\ndislikes(carol,frank).\nfriend(dave,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then it is hot.\nIf it is hot, then george owns car.\nIf george owns car, then car is big.\nIf car is big, then alice is an enemy of eve.\nIf alice is an enemy of eve, then dave is a sibling of george.\nIf dave is a sibling of george, then alice dislikes pencil.\nIf alice dislikes pencil, then frank is a parent of george.\nIf frank is a parent of george, then carol is a sibling of george.\nIf phone is wet and eve is happy, then it is hot.\nIf frank is happy and dave is a sibling of carol and carol is hungry, then it is hot.\nIf bob is a parent of eve and alice is a friend of carol and bob is sad, then alice is an enemy of alice.\nIf it is sunny and bob owns pencil, then bob is an enemy of carol.\nIf dave is hungry, then bob likes george.\nIf george is hungry and carol is happy and bob is hungry, then eve dislikes dave.\n\nAnd the following facts:\nit is sunny.\ncarol likes apple.\ncarol likes ball.\neve owns ball.\nbob dislikes book.\nalice is a friend of eve.\ncarol dislikes frank.\ndave is a friend of alice.\n\nOBSERVATION: carol is a sibling of george is true.\n\nQUESTION:\nCould eve owns ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(carol,frank).",
    "c": "hot :- sunny.\nowns(george,car) :- hot.\nbig(car) :- owns(george,car).\nenemy(alice,eve) :- big(car).\nsibling(dave,george) :- enemy(alice,eve).\ndislikes(alice,pencil) :- sibling(dave,george).\nparent(frank,george) :- dislikes(alice,pencil).\nsibling(carol,george) :- parent(frank,george).\nhot :- wet(phone), happy(eve).\nhot :- happy(frank), sibling(dave,carol), hungry(carol).\nenemy(alice,alice) :- parent(bob,eve), friend(alice,carol), sad(bob).\nenemy(bob,carol) :- sunny, owns(bob,pencil).\nlikes(bob,george) :- hungry(dave).\ndislikes(eve,dave) :- hungry(george), happy(carol), hungry(bob).\nsunny.\nlikes(carol,apple).\nlikes(carol,ball).\nowns(eve,ball).\ndislikes(bob,book).\nfriend(alice,eve).\nfriend(dave,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then it is hot.\nIf it is hot, then george owns car.\nIf george owns car, then car is big.\nIf car is big, then alice is an enemy of eve.\nIf alice is an enemy of eve, then dave is a sibling of george.\nIf dave is a sibling of george, then alice dislikes pencil.\nIf alice dislikes pencil, then frank is a parent of george.\nIf frank is a parent of george, then carol is a sibling of george.\nIf phone is wet and eve is happy, then it is hot.\nIf frank is happy and dave is a sibling of carol and carol is hungry, then it is hot.\nIf bob is a parent of eve and alice is a friend of carol and bob is sad, then alice is an enemy of alice.\nIf it is sunny and bob owns pencil, then bob is an enemy of carol.\nIf dave is hungry, then bob likes george.\nIf george is hungry and carol is happy and bob is hungry, then eve dislikes dave.\n\nAnd the following facts:\nit is sunny.\ncarol likes apple.\ncarol likes ball.\neve owns ball.\nbob dislikes book.\nalice is a friend of eve.\ncarol dislikes frank.\ndave is a friend of alice.\n\nOBSERVATION: carol is a sibling of george is true.\n\nQUESTION:\nCould carol dislikes frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(carol,phone).",
    "c": "sibling(alice,frank) :- tall(eve).\nsunny :- sibling(alice,frank).\nwet(book) :- sunny.\nowns(carol,pencil) :- wet(book).\ndislikes(carol,phone) :- owns(carol,pencil).\ncold :- dislikes(carol,phone).\nwet(book) :- cold.\nwet(ball) :- wet(book).\nsad(dave) :- wet(ball).\nhot :- sad(dave).\nhot :- sad(carol), hot.\nhot :- hot, owns(carol,ball).\ndislikes(frank,bob) :- enemy(carol,carol).\ndislikes(carol,pencil) :- likes(carol,pencil).\ntall(eve).\nsibling(george,dave).\nenemy(dave,bob).\nwet(ball).\nlikes(dave,phone).\nsibling(bob,alice).\nlikes(bob,frank).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf eve is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then carol owns pencil.\nIf carol owns pencil, then carol dislikes phone.\nIf carol dislikes phone, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then ball is wet.\nIf ball is wet, then dave is sad.\nIf dave is sad, then it is hot.\nIf carol is sad and it is hot, then it is hot.\nIf it is hot and carol owns ball, then it is hot.\nIf carol is an enemy of carol, then frank dislikes bob.\nIf carol likes pencil, then carol dislikes pencil.\n\nAnd the following facts:\neve is tall.\ngeorge is a sibling of dave.\ndave is an enemy of bob.\nball is wet.\ndave likes phone.\nbob is a sibling of alice.\nbob likes frank.\nfrank is an enemy of dave.\n\nQUESTION:\nIs carol dislikes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "sibling(alice,frank) :- tall(eve).\nsunny :- sibling(alice,frank).\nwet(book) :- sunny.\nowns(carol,pencil) :- wet(book).\ndislikes(carol,phone) :- owns(carol,pencil).\ncold :- dislikes(carol,phone).\nwet(book) :- cold.\nwet(ball) :- wet(book).\nsad(dave) :- wet(ball).\nhot :- sad(dave).\nhot :- sad(carol), hot.\nhot :- hot, owns(carol,ball).\ndislikes(frank,bob) :- enemy(carol,carol).\ndislikes(carol,pencil) :- likes(carol,pencil).\ntall(eve).\nsibling(george,dave).\nenemy(dave,bob).\nwet(ball).\nlikes(dave,phone).\nsibling(bob,alice).\nlikes(bob,frank).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf eve is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then carol owns pencil.\nIf carol owns pencil, then carol dislikes phone.\nIf carol dislikes phone, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then ball is wet.\nIf ball is wet, then dave is sad.\nIf dave is sad, then it is hot.\nIf carol is sad and it is hot, then it is hot.\nIf it is hot and carol owns ball, then it is hot.\nIf carol is an enemy of carol, then frank dislikes bob.\nIf carol likes pencil, then carol dislikes pencil.\n\nAnd the following facts:\neve is tall.\ngeorge is a sibling of dave.\ndave is an enemy of bob.\nball is wet.\ndave likes phone.\nbob is a sibling of alice.\nbob likes frank.\nfrank is an enemy of dave.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,dave).",
    "c": "sibling(alice,frank) :- tall(eve).\nsunny :- sibling(alice,frank).\nwet(book) :- sunny.\nowns(carol,pencil) :- wet(book).\ndislikes(carol,phone) :- owns(carol,pencil).\ncold :- dislikes(carol,phone).\nwet(book) :- cold.\nwet(ball) :- wet(book).\nsad(dave) :- wet(ball).\nhot :- sad(dave).\nhot :- sad(carol), hot.\nhot :- hot, owns(carol,ball).\ndislikes(frank,bob) :- enemy(carol,carol).\ndislikes(carol,pencil) :- likes(carol,pencil).\ntall(eve).\nsibling(george,dave).\nenemy(dave,bob).\nwet(ball).\nlikes(dave,phone).\nsibling(bob,alice).\nlikes(bob,frank).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf eve is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then carol owns pencil.\nIf carol owns pencil, then carol dislikes phone.\nIf carol dislikes phone, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then ball is wet.\nIf ball is wet, then dave is sad.\nIf dave is sad, then it is hot.\nIf carol is sad and it is hot, then it is hot.\nIf it is hot and carol owns ball, then it is hot.\nIf carol is an enemy of carol, then frank dislikes bob.\nIf carol likes pencil, then carol dislikes pencil.\n\nAnd the following facts:\neve is tall.\ngeorge is a sibling of dave.\ndave is an enemy of bob.\nball is wet.\ndave likes phone.\nbob is a sibling of alice.\nbob likes frank.\nfrank is an enemy of dave.\n\nQUESTION:\nIs frank is an enemy of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,book).",
    "c": "sibling(alice,frank) :- tall(eve).\nsunny :- sibling(alice,frank).\nwet(book) :- sunny.\nowns(carol,pencil) :- wet(book).\ndislikes(carol,phone) :- owns(carol,pencil).\ncold :- dislikes(carol,phone).\nwet(book) :- cold.\nwet(ball) :- wet(book).\nsad(dave) :- wet(ball).\nhot :- sad(dave).\nhot :- sad(carol), hot.\nhot :- hot, owns(carol,ball).\ndislikes(frank,bob) :- enemy(carol,carol).\ndislikes(carol,pencil) :- likes(carol,pencil).\ntall(eve).\nsibling(george,dave).\nenemy(dave,bob).\nwet(ball).\nlikes(dave,phone).\nsibling(bob,alice).\nlikes(bob,frank).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf eve is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then carol owns pencil.\nIf carol owns pencil, then carol dislikes phone.\nIf carol dislikes phone, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then ball is wet.\nIf ball is wet, then dave is sad.\nIf dave is sad, then it is hot.\nIf carol is sad and it is hot, then it is hot.\nIf it is hot and carol owns ball, then it is hot.\nIf carol is an enemy of carol, then frank dislikes bob.\nIf carol likes pencil, then carol dislikes pencil.\n\nAnd the following facts:\neve is tall.\ngeorge is a sibling of dave.\ndave is an enemy of bob.\nball is wet.\ndave likes phone.\nbob is a sibling of alice.\nbob likes frank.\nfrank is an enemy of dave.\n\nQUESTION:\nIs bob dislikes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,book).",
    "c": "sibling(alice,frank) :- tall(eve).\nsunny :- sibling(alice,frank).\nwet(book) :- sunny.\nowns(carol,pencil) :- wet(book).\ndislikes(carol,phone) :- owns(carol,pencil).\ncold :- dislikes(carol,phone).\nwet(book) :- cold.\nwet(ball) :- wet(book).\nsad(dave) :- wet(ball).\nhot :- sad(dave).\nhot :- sad(carol), hot.\nhot :- hot, owns(carol,ball).\ndislikes(frank,bob) :- enemy(carol,carol).\ndislikes(carol,pencil) :- likes(carol,pencil).\ntall(eve).\nsibling(george,dave).\nenemy(dave,bob).\nwet(ball).\nlikes(dave,phone).\nsibling(bob,alice).\nlikes(bob,frank).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf eve is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then carol owns pencil.\nIf carol owns pencil, then carol dislikes phone.\nIf carol dislikes phone, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then ball is wet.\nIf ball is wet, then dave is sad.\nIf dave is sad, then it is hot.\nIf carol is sad and it is hot, then it is hot.\nIf it is hot and carol owns ball, then it is hot.\nIf carol is an enemy of carol, then frank dislikes bob.\nIf carol likes pencil, then carol dislikes pencil.\n\nAnd the following facts:\neve is tall.\ngeorge is a sibling of dave.\ndave is an enemy of bob.\nball is wet.\ndave likes phone.\nbob is a sibling of alice.\nbob likes frank.\nfrank is an enemy of dave.\n\nQUESTION:\nIs george likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "sibling(alice,frank) :- tall(eve).\nsunny :- sibling(alice,frank).\nwet(book) :- sunny.\nowns(carol,pencil) :- wet(book).\ndislikes(carol,phone) :- owns(carol,pencil).\ncold :- dislikes(carol,phone).\nwet(book) :- cold.\nwet(ball) :- wet(book).\nsad(dave) :- wet(ball).\nhot :- sad(dave).\nhot :- sad(carol), hot.\nhot :- hot, owns(carol,ball).\ndislikes(frank,bob) :- enemy(carol,carol).\ndislikes(carol,pencil) :- likes(carol,pencil).\ntall(eve).\nsibling(george,dave).\nenemy(dave,bob).\nlikes(dave,phone).\nsibling(bob,alice).\nlikes(bob,frank).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf eve is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then carol owns pencil.\nIf carol owns pencil, then carol dislikes phone.\nIf carol dislikes phone, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then ball is wet.\nIf ball is wet, then dave is sad.\nIf dave is sad, then it is hot.\nIf carol is sad and it is hot, then it is hot.\nIf it is hot and carol owns ball, then it is hot.\nIf carol is an enemy of carol, then frank dislikes bob.\nIf carol likes pencil, then carol dislikes pencil.\n\nAnd the following facts:\neve is tall.\ngeorge is a sibling of dave.\ndave is an enemy of bob.\nball is wet.\ndave likes phone.\nbob is a sibling of alice.\nbob likes frank.\nfrank is an enemy of dave.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould ball is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(bob,alice).",
    "c": "sibling(alice,frank) :- tall(eve).\nsunny :- sibling(alice,frank).\nwet(book) :- sunny.\nowns(carol,pencil) :- wet(book).\ndislikes(carol,phone) :- owns(carol,pencil).\ncold :- dislikes(carol,phone).\nwet(book) :- cold.\nwet(ball) :- wet(book).\nsad(dave) :- wet(ball).\nhot :- sad(dave).\nhot :- sad(carol), hot.\nhot :- hot, owns(carol,ball).\ndislikes(frank,bob) :- enemy(carol,carol).\ndislikes(carol,pencil) :- likes(carol,pencil).\ntall(eve).\nsibling(george,dave).\nenemy(dave,bob).\nwet(ball).\nlikes(dave,phone).\nlikes(bob,frank).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf eve is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then carol owns pencil.\nIf carol owns pencil, then carol dislikes phone.\nIf carol dislikes phone, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then ball is wet.\nIf ball is wet, then dave is sad.\nIf dave is sad, then it is hot.\nIf carol is sad and it is hot, then it is hot.\nIf it is hot and carol owns ball, then it is hot.\nIf carol is an enemy of carol, then frank dislikes bob.\nIf carol likes pencil, then carol dislikes pencil.\n\nAnd the following facts:\neve is tall.\ngeorge is a sibling of dave.\ndave is an enemy of bob.\nball is wet.\ndave likes phone.\nbob is a sibling of alice.\nbob likes frank.\nfrank is an enemy of dave.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould bob is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,frank).",
    "c": "sibling(alice,frank) :- tall(eve).\nsunny :- sibling(alice,frank).\nwet(book) :- sunny.\nowns(carol,pencil) :- wet(book).\ndislikes(carol,phone) :- owns(carol,pencil).\ncold :- dislikes(carol,phone).\nwet(book) :- cold.\nwet(ball) :- wet(book).\nsad(dave) :- wet(ball).\nhot :- sad(dave).\nhot :- sad(carol), hot.\nhot :- hot, owns(carol,ball).\ndislikes(frank,bob) :- enemy(carol,carol).\ndislikes(carol,pencil) :- likes(carol,pencil).\ntall(eve).\nsibling(george,dave).\nenemy(dave,bob).\nwet(ball).\nlikes(dave,phone).\nsibling(bob,alice).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf eve is tall, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then carol owns pencil.\nIf carol owns pencil, then carol dislikes phone.\nIf carol dislikes phone, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then ball is wet.\nIf ball is wet, then dave is sad.\nIf dave is sad, then it is hot.\nIf carol is sad and it is hot, then it is hot.\nIf it is hot and carol owns ball, then it is hot.\nIf carol is an enemy of carol, then frank dislikes bob.\nIf carol likes pencil, then carol dislikes pencil.\n\nAnd the following facts:\neve is tall.\ngeorge is a sibling of dave.\ndave is an enemy of bob.\nball is wet.\ndave likes phone.\nbob is a sibling of alice.\nbob likes frank.\nfrank is an enemy of dave.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould bob likes frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "happy(dave) :- parent(dave,dave).\nhungry(george) :- happy(dave).\nsmall(apple) :- hungry(george).\nsibling(frank,dave) :- small(apple).\ntall(carol) :- sibling(frank,dave).\nsunny :- tall(carol).\nbig(apple) :- sunny.\nsunny :- big(apple).\ndislikes(eve,pencil) :- sunny.\nwet(ball) :- dislikes(eve,pencil).\nsibling(eve,frank) :- hot.\nsad(alice) :- cold, dislikes(frank,car).\nsmall(book) :- hungry(bob), hot.\nsibling(frank,bob) :- happy(alice), likes(george,eve).\nparent(dave,dave).\nparent(alice,carol).\nsibling(eve,alice).\nparent(carol,frank).\nsibling(dave,alice).\nsibling(frank,carol).\nlikes(carol,bob).\nsad(frank).",
    "natural language": "You are given the following information:\nIf dave is a parent of dave, then dave is happy.\nIf dave is happy, then george is hungry.\nIf george is hungry, then apple is small.\nIf apple is small, then frank is a sibling of dave.\nIf frank is a sibling of dave, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then it is sunny.\nIf it is sunny, then eve dislikes pencil.\nIf eve dislikes pencil, then ball is wet.\nIf it is hot, then eve is a sibling of frank.\nIf it is cold and frank dislikes car, then alice is sad.\nIf bob is hungry and it is hot, then book is small.\nIf alice is happy and george likes eve, then frank is a sibling of bob.\n\nAnd the following facts:\ndave is a parent of dave.\nalice is a parent of carol.\neve is a sibling of alice.\ncarol is a parent of frank.\ndave is a sibling of alice.\nfrank is a sibling of carol.\ncarol likes bob.\nfrank is sad.\n\nQUESTION:\nIs frank is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "happy(dave) :- parent(dave,dave).\nhungry(george) :- happy(dave).\nsmall(apple) :- hungry(george).\nsibling(frank,dave) :- small(apple).\ntall(carol) :- sibling(frank,dave).\nsunny :- tall(carol).\nbig(apple) :- sunny.\nsunny :- big(apple).\ndislikes(eve,pencil) :- sunny.\nwet(ball) :- dislikes(eve,pencil).\nsibling(eve,frank) :- hot.\nsad(alice) :- cold, dislikes(frank,car).\nsmall(book) :- hungry(bob), hot.\nsibling(frank,bob) :- happy(alice), likes(george,eve).\nparent(dave,dave).\nparent(alice,carol).\nsibling(eve,alice).\nparent(carol,frank).\nsibling(dave,alice).\nsibling(frank,carol).\nlikes(carol,bob).\nsad(frank).",
    "natural language": "You are given the following information:\nIf dave is a parent of dave, then dave is happy.\nIf dave is happy, then george is hungry.\nIf george is hungry, then apple is small.\nIf apple is small, then frank is a sibling of dave.\nIf frank is a sibling of dave, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then it is sunny.\nIf it is sunny, then eve dislikes pencil.\nIf eve dislikes pencil, then ball is wet.\nIf it is hot, then eve is a sibling of frank.\nIf it is cold and frank dislikes car, then alice is sad.\nIf bob is hungry and it is hot, then book is small.\nIf alice is happy and george likes eve, then frank is a sibling of bob.\n\nAnd the following facts:\ndave is a parent of dave.\nalice is a parent of carol.\neve is a sibling of alice.\ncarol is a parent of frank.\ndave is a sibling of alice.\nfrank is a sibling of carol.\ncarol likes bob.\nfrank is sad.\n\nQUESTION:\nIs ball is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(apple).",
    "c": "happy(dave) :- parent(dave,dave).\nhungry(george) :- happy(dave).\nsmall(apple) :- hungry(george).\nsibling(frank,dave) :- small(apple).\ntall(carol) :- sibling(frank,dave).\nsunny :- tall(carol).\nbig(apple) :- sunny.\nsunny :- big(apple).\ndislikes(eve,pencil) :- sunny.\nwet(ball) :- dislikes(eve,pencil).\nsibling(eve,frank) :- hot.\nsad(alice) :- cold, dislikes(frank,car).\nsmall(book) :- hungry(bob), hot.\nsibling(frank,bob) :- happy(alice), likes(george,eve).\nparent(dave,dave).\nparent(alice,carol).\nsibling(eve,alice).\nparent(carol,frank).\nsibling(dave,alice).\nsibling(frank,carol).\nlikes(carol,bob).\nsad(frank).",
    "natural language": "You are given the following information:\nIf dave is a parent of dave, then dave is happy.\nIf dave is happy, then george is hungry.\nIf george is hungry, then apple is small.\nIf apple is small, then frank is a sibling of dave.\nIf frank is a sibling of dave, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then it is sunny.\nIf it is sunny, then eve dislikes pencil.\nIf eve dislikes pencil, then ball is wet.\nIf it is hot, then eve is a sibling of frank.\nIf it is cold and frank dislikes car, then alice is sad.\nIf bob is hungry and it is hot, then book is small.\nIf alice is happy and george likes eve, then frank is a sibling of bob.\n\nAnd the following facts:\ndave is a parent of dave.\nalice is a parent of carol.\neve is a sibling of alice.\ncarol is a parent of frank.\ndave is a sibling of alice.\nfrank is a sibling of carol.\ncarol likes bob.\nfrank is sad.\n\nQUESTION:\nIs apple is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,dave).",
    "c": "happy(dave) :- parent(dave,dave).\nhungry(george) :- happy(dave).\nsmall(apple) :- hungry(george).\nsibling(frank,dave) :- small(apple).\ntall(carol) :- sibling(frank,dave).\nsunny :- tall(carol).\nbig(apple) :- sunny.\nsunny :- big(apple).\ndislikes(eve,pencil) :- sunny.\nwet(ball) :- dislikes(eve,pencil).\nsibling(eve,frank) :- hot.\nsad(alice) :- cold, dislikes(frank,car).\nsmall(book) :- hungry(bob), hot.\nsibling(frank,bob) :- happy(alice), likes(george,eve).\nparent(dave,dave).\nparent(alice,carol).\nsibling(eve,alice).\nparent(carol,frank).\nsibling(dave,alice).\nsibling(frank,carol).\nlikes(carol,bob).\nsad(frank).",
    "natural language": "You are given the following information:\nIf dave is a parent of dave, then dave is happy.\nIf dave is happy, then george is hungry.\nIf george is hungry, then apple is small.\nIf apple is small, then frank is a sibling of dave.\nIf frank is a sibling of dave, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then it is sunny.\nIf it is sunny, then eve dislikes pencil.\nIf eve dislikes pencil, then ball is wet.\nIf it is hot, then eve is a sibling of frank.\nIf it is cold and frank dislikes car, then alice is sad.\nIf bob is hungry and it is hot, then book is small.\nIf alice is happy and george likes eve, then frank is a sibling of bob.\n\nAnd the following facts:\ndave is a parent of dave.\nalice is a parent of carol.\neve is a sibling of alice.\ncarol is a parent of frank.\ndave is a sibling of alice.\nfrank is a sibling of carol.\ncarol likes bob.\nfrank is sad.\n\nQUESTION:\nIs alice is a parent of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(phone).",
    "c": "happy(dave) :- parent(dave,dave).\nhungry(george) :- happy(dave).\nsmall(apple) :- hungry(george).\nsibling(frank,dave) :- small(apple).\ntall(carol) :- sibling(frank,dave).\nsunny :- tall(carol).\nbig(apple) :- sunny.\nsunny :- big(apple).\ndislikes(eve,pencil) :- sunny.\nwet(ball) :- dislikes(eve,pencil).\nsibling(eve,frank) :- hot.\nsad(alice) :- cold, dislikes(frank,car).\nsmall(book) :- hungry(bob), hot.\nsibling(frank,bob) :- happy(alice), likes(george,eve).\nparent(dave,dave).\nparent(alice,carol).\nsibling(eve,alice).\nparent(carol,frank).\nsibling(dave,alice).\nsibling(frank,carol).\nlikes(carol,bob).\nsad(frank).",
    "natural language": "You are given the following information:\nIf dave is a parent of dave, then dave is happy.\nIf dave is happy, then george is hungry.\nIf george is hungry, then apple is small.\nIf apple is small, then frank is a sibling of dave.\nIf frank is a sibling of dave, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then it is sunny.\nIf it is sunny, then eve dislikes pencil.\nIf eve dislikes pencil, then ball is wet.\nIf it is hot, then eve is a sibling of frank.\nIf it is cold and frank dislikes car, then alice is sad.\nIf bob is hungry and it is hot, then book is small.\nIf alice is happy and george likes eve, then frank is a sibling of bob.\n\nAnd the following facts:\ndave is a parent of dave.\nalice is a parent of carol.\neve is a sibling of alice.\ncarol is a parent of frank.\ndave is a sibling of alice.\nfrank is a sibling of carol.\ncarol likes bob.\nfrank is sad.\n\nQUESTION:\nIs phone is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,dave).",
    "c": "happy(dave) :- parent(dave,dave).\nhungry(george) :- happy(dave).\nsmall(apple) :- hungry(george).\nsibling(frank,dave) :- small(apple).\ntall(carol) :- sibling(frank,dave).\nsunny :- tall(carol).\nbig(apple) :- sunny.\nsunny :- big(apple).\ndislikes(eve,pencil) :- sunny.\nwet(ball) :- dislikes(eve,pencil).\nsibling(eve,frank) :- hot.\nsad(alice) :- cold, dislikes(frank,car).\nsmall(book) :- hungry(bob), hot.\nsibling(frank,bob) :- happy(alice), likes(george,eve).\nparent(alice,carol).\nsibling(eve,alice).\nparent(carol,frank).\nsibling(dave,alice).\nsibling(frank,carol).\nlikes(carol,bob).\nsad(frank).",
    "natural language": "You are given the following rules:\nIf dave is a parent of dave, then dave is happy.\nIf dave is happy, then george is hungry.\nIf george is hungry, then apple is small.\nIf apple is small, then frank is a sibling of dave.\nIf frank is a sibling of dave, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then it is sunny.\nIf it is sunny, then eve dislikes pencil.\nIf eve dislikes pencil, then ball is wet.\nIf it is hot, then eve is a sibling of frank.\nIf it is cold and frank dislikes car, then alice is sad.\nIf bob is hungry and it is hot, then book is small.\nIf alice is happy and george likes eve, then frank is a sibling of bob.\n\nAnd the following facts:\ndave is a parent of dave.\nalice is a parent of carol.\neve is a sibling of alice.\ncarol is a parent of frank.\ndave is a sibling of alice.\nfrank is a sibling of carol.\ncarol likes bob.\nfrank is sad.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould dave is a parent of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(carol,frank).",
    "c": "happy(dave) :- parent(dave,dave).\nhungry(george) :- happy(dave).\nsmall(apple) :- hungry(george).\nsibling(frank,dave) :- small(apple).\ntall(carol) :- sibling(frank,dave).\nsunny :- tall(carol).\nbig(apple) :- sunny.\nsunny :- big(apple).\ndislikes(eve,pencil) :- sunny.\nwet(ball) :- dislikes(eve,pencil).\nsibling(eve,frank) :- hot.\nsad(alice) :- cold, dislikes(frank,car).\nsmall(book) :- hungry(bob), hot.\nsibling(frank,bob) :- happy(alice), likes(george,eve).\nparent(dave,dave).\nparent(alice,carol).\nsibling(eve,alice).\nsibling(dave,alice).\nsibling(frank,carol).\nlikes(carol,bob).\nsad(frank).",
    "natural language": "You are given the following rules:\nIf dave is a parent of dave, then dave is happy.\nIf dave is happy, then george is hungry.\nIf george is hungry, then apple is small.\nIf apple is small, then frank is a sibling of dave.\nIf frank is a sibling of dave, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then it is sunny.\nIf it is sunny, then eve dislikes pencil.\nIf eve dislikes pencil, then ball is wet.\nIf it is hot, then eve is a sibling of frank.\nIf it is cold and frank dislikes car, then alice is sad.\nIf bob is hungry and it is hot, then book is small.\nIf alice is happy and george likes eve, then frank is a sibling of bob.\n\nAnd the following facts:\ndave is a parent of dave.\nalice is a parent of carol.\neve is a sibling of alice.\ncarol is a parent of frank.\ndave is a sibling of alice.\nfrank is a sibling of carol.\ncarol likes bob.\nfrank is sad.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould carol is a parent of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(eve,alice).",
    "c": "happy(dave) :- parent(dave,dave).\nhungry(george) :- happy(dave).\nsmall(apple) :- hungry(george).\nsibling(frank,dave) :- small(apple).\ntall(carol) :- sibling(frank,dave).\nsunny :- tall(carol).\nbig(apple) :- sunny.\nsunny :- big(apple).\ndislikes(eve,pencil) :- sunny.\nwet(ball) :- dislikes(eve,pencil).\nsibling(eve,frank) :- hot.\nsad(alice) :- cold, dislikes(frank,car).\nsmall(book) :- hungry(bob), hot.\nsibling(frank,bob) :- happy(alice), likes(george,eve).\nparent(dave,dave).\nparent(alice,carol).\nparent(carol,frank).\nsibling(dave,alice).\nsibling(frank,carol).\nlikes(carol,bob).\nsad(frank).",
    "natural language": "You are given the following rules:\nIf dave is a parent of dave, then dave is happy.\nIf dave is happy, then george is hungry.\nIf george is hungry, then apple is small.\nIf apple is small, then frank is a sibling of dave.\nIf frank is a sibling of dave, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then it is sunny.\nIf it is sunny, then eve dislikes pencil.\nIf eve dislikes pencil, then ball is wet.\nIf it is hot, then eve is a sibling of frank.\nIf it is cold and frank dislikes car, then alice is sad.\nIf bob is hungry and it is hot, then book is small.\nIf alice is happy and george likes eve, then frank is a sibling of bob.\n\nAnd the following facts:\ndave is a parent of dave.\nalice is a parent of carol.\neve is a sibling of alice.\ncarol is a parent of frank.\ndave is a sibling of alice.\nfrank is a sibling of carol.\ncarol likes bob.\nfrank is sad.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould eve is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "tall(george) :- tall(eve).\nsad(frank) :- tall(george).\nbig(apple) :- likes(george,car), small(phone).\ntall(carol) :- tall(bob).\nsunny :- small(apple).\ncold :- sad(carol).\ntall(bob) :- owns(carol,book), friend(eve,eve).\nparent(bob,eve) :- parent(alice,dave), parent(eve,frank).\nowns(alice,ball) :- sad(carol).\nbig(book) :- enemy(bob,carol).\nsunny :- parent(alice,eve), big(pencil), hot.\nsmall(ball) :- sunny, small(pencil).\nhungry(dave) :- tall(george), friend(frank,frank), cold.\nlikes(dave,dave) :- likes(frank,apple).\ntall(eve).\nenemy(frank,dave).\nfriend(frank,alice).\nenemy(dave,bob).\nowns(dave,apple).\nowns(bob,apple).\nowns(carol,car).\nlikes(bob,dave).\nenemy(eve,bob).\nparent(carol,dave).\nlikes(eve,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then frank is sad.\nIf george likes car and phone is small, then apple is big.\nIf bob is tall, then carol is tall.\nIf apple is small, then it is sunny.\nIf carol is sad, then it is cold.\nIf carol owns book and eve is a friend of eve, then bob is tall.\nIf alice is a parent of dave and eve is a parent of frank, then bob is a parent of eve.\nIf carol is sad, then alice owns ball.\nIf bob is an enemy of carol, then book is big.\nIf alice is a parent of eve and pencil is big and it is hot, then it is sunny.\nIf it is sunny and pencil is small, then ball is small.\nIf george is tall and frank is a friend of frank and it is cold, then dave is hungry.\nIf frank likes apple, then dave likes dave.\n\nAnd the following facts:\neve is tall.\nfrank is an enemy of dave.\nfrank is a friend of alice.\ndave is an enemy of bob.\ndave owns apple.\nbob owns apple.\ncarol owns car.\nbob likes dave.\neve is an enemy of bob.\ncarol is a parent of dave.\neve likes bob.\npencil is small.\n\nQUESTION:\nIs pencil is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(eve).",
    "c": "tall(george) :- tall(eve).\nsad(frank) :- tall(george).\nbig(apple) :- likes(george,car), small(phone).\ntall(carol) :- tall(bob).\nsunny :- small(apple).\ncold :- sad(carol).\ntall(bob) :- owns(carol,book), friend(eve,eve).\nparent(bob,eve) :- parent(alice,dave), parent(eve,frank).\nowns(alice,ball) :- sad(carol).\nbig(book) :- enemy(bob,carol).\nsunny :- parent(alice,eve), big(pencil), hot.\nsmall(ball) :- sunny, small(pencil).\nhungry(dave) :- tall(george), friend(frank,frank), cold.\nlikes(dave,dave) :- likes(frank,apple).\ntall(eve).\nenemy(frank,dave).\nfriend(frank,alice).\nenemy(dave,bob).\nowns(dave,apple).\nowns(bob,apple).\nowns(carol,car).\nlikes(bob,dave).\nenemy(eve,bob).\nparent(carol,dave).\nlikes(eve,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then frank is sad.\nIf george likes car and phone is small, then apple is big.\nIf bob is tall, then carol is tall.\nIf apple is small, then it is sunny.\nIf carol is sad, then it is cold.\nIf carol owns book and eve is a friend of eve, then bob is tall.\nIf alice is a parent of dave and eve is a parent of frank, then bob is a parent of eve.\nIf carol is sad, then alice owns ball.\nIf bob is an enemy of carol, then book is big.\nIf alice is a parent of eve and pencil is big and it is hot, then it is sunny.\nIf it is sunny and pencil is small, then ball is small.\nIf george is tall and frank is a friend of frank and it is cold, then dave is hungry.\nIf frank likes apple, then dave likes dave.\n\nAnd the following facts:\neve is tall.\nfrank is an enemy of dave.\nfrank is a friend of alice.\ndave is an enemy of bob.\ndave owns apple.\nbob owns apple.\ncarol owns car.\nbob likes dave.\neve is an enemy of bob.\ncarol is a parent of dave.\neve likes bob.\npencil is small.\n\nQUESTION:\nIs eve is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,dave).",
    "c": "tall(george) :- tall(eve).\nsad(frank) :- tall(george).\nbig(apple) :- likes(george,car), small(phone).\ntall(carol) :- tall(bob).\nsunny :- small(apple).\ncold :- sad(carol).\ntall(bob) :- owns(carol,book), friend(eve,eve).\nparent(bob,eve) :- parent(alice,dave), parent(eve,frank).\nowns(alice,ball) :- sad(carol).\nbig(book) :- enemy(bob,carol).\nsunny :- parent(alice,eve), big(pencil), hot.\nsmall(ball) :- sunny, small(pencil).\nhungry(dave) :- tall(george), friend(frank,frank), cold.\nlikes(dave,dave) :- likes(frank,apple).\ntall(eve).\nenemy(frank,dave).\nfriend(frank,alice).\nenemy(dave,bob).\nowns(dave,apple).\nowns(bob,apple).\nowns(carol,car).\nlikes(bob,dave).\nenemy(eve,bob).\nparent(carol,dave).\nlikes(eve,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then frank is sad.\nIf george likes car and phone is small, then apple is big.\nIf bob is tall, then carol is tall.\nIf apple is small, then it is sunny.\nIf carol is sad, then it is cold.\nIf carol owns book and eve is a friend of eve, then bob is tall.\nIf alice is a parent of dave and eve is a parent of frank, then bob is a parent of eve.\nIf carol is sad, then alice owns ball.\nIf bob is an enemy of carol, then book is big.\nIf alice is a parent of eve and pencil is big and it is hot, then it is sunny.\nIf it is sunny and pencil is small, then ball is small.\nIf george is tall and frank is a friend of frank and it is cold, then dave is hungry.\nIf frank likes apple, then dave likes dave.\n\nAnd the following facts:\neve is tall.\nfrank is an enemy of dave.\nfrank is a friend of alice.\ndave is an enemy of bob.\ndave owns apple.\nbob owns apple.\ncarol owns car.\nbob likes dave.\neve is an enemy of bob.\ncarol is a parent of dave.\neve likes bob.\npencil is small.\n\nQUESTION:\nIs bob likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,eve).",
    "c": "tall(george) :- tall(eve).\nsad(frank) :- tall(george).\nbig(apple) :- likes(george,car), small(phone).\ntall(carol) :- tall(bob).\nsunny :- small(apple).\ncold :- sad(carol).\ntall(bob) :- owns(carol,book), friend(eve,eve).\nparent(bob,eve) :- parent(alice,dave), parent(eve,frank).\nowns(alice,ball) :- sad(carol).\nbig(book) :- enemy(bob,carol).\nsunny :- parent(alice,eve), big(pencil), hot.\nsmall(ball) :- sunny, small(pencil).\nhungry(dave) :- tall(george), friend(frank,frank), cold.\nlikes(dave,dave) :- likes(frank,apple).\ntall(eve).\nenemy(frank,dave).\nfriend(frank,alice).\nenemy(dave,bob).\nowns(dave,apple).\nowns(bob,apple).\nowns(carol,car).\nlikes(bob,dave).\nenemy(eve,bob).\nparent(carol,dave).\nlikes(eve,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then frank is sad.\nIf george likes car and phone is small, then apple is big.\nIf bob is tall, then carol is tall.\nIf apple is small, then it is sunny.\nIf carol is sad, then it is cold.\nIf carol owns book and eve is a friend of eve, then bob is tall.\nIf alice is a parent of dave and eve is a parent of frank, then bob is a parent of eve.\nIf carol is sad, then alice owns ball.\nIf bob is an enemy of carol, then book is big.\nIf alice is a parent of eve and pencil is big and it is hot, then it is sunny.\nIf it is sunny and pencil is small, then ball is small.\nIf george is tall and frank is a friend of frank and it is cold, then dave is hungry.\nIf frank likes apple, then dave likes dave.\n\nAnd the following facts:\neve is tall.\nfrank is an enemy of dave.\nfrank is a friend of alice.\ndave is an enemy of bob.\ndave owns apple.\nbob owns apple.\ncarol owns car.\nbob likes dave.\neve is an enemy of bob.\ncarol is a parent of dave.\neve likes bob.\npencil is small.\n\nQUESTION:\nIs dave likes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(phone).",
    "c": "tall(george) :- tall(eve).\nsad(frank) :- tall(george).\nbig(apple) :- likes(george,car), small(phone).\ntall(carol) :- tall(bob).\nsunny :- small(apple).\ncold :- sad(carol).\ntall(bob) :- owns(carol,book), friend(eve,eve).\nparent(bob,eve) :- parent(alice,dave), parent(eve,frank).\nowns(alice,ball) :- sad(carol).\nbig(book) :- enemy(bob,carol).\nsunny :- parent(alice,eve), big(pencil), hot.\nsmall(ball) :- sunny, small(pencil).\nhungry(dave) :- tall(george), friend(frank,frank), cold.\nlikes(dave,dave) :- likes(frank,apple).\ntall(eve).\nenemy(frank,dave).\nfriend(frank,alice).\nenemy(dave,bob).\nowns(dave,apple).\nowns(bob,apple).\nowns(carol,car).\nlikes(bob,dave).\nenemy(eve,bob).\nparent(carol,dave).\nlikes(eve,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then frank is sad.\nIf george likes car and phone is small, then apple is big.\nIf bob is tall, then carol is tall.\nIf apple is small, then it is sunny.\nIf carol is sad, then it is cold.\nIf carol owns book and eve is a friend of eve, then bob is tall.\nIf alice is a parent of dave and eve is a parent of frank, then bob is a parent of eve.\nIf carol is sad, then alice owns ball.\nIf bob is an enemy of carol, then book is big.\nIf alice is a parent of eve and pencil is big and it is hot, then it is sunny.\nIf it is sunny and pencil is small, then ball is small.\nIf george is tall and frank is a friend of frank and it is cold, then dave is hungry.\nIf frank likes apple, then dave likes dave.\n\nAnd the following facts:\neve is tall.\nfrank is an enemy of dave.\nfrank is a friend of alice.\ndave is an enemy of bob.\ndave owns apple.\nbob owns apple.\ncarol owns car.\nbob likes dave.\neve is an enemy of bob.\ncarol is a parent of dave.\neve likes bob.\npencil is small.\n\nQUESTION:\nIs phone is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(eve).",
    "c": "tall(george) :- tall(eve).\nsad(frank) :- tall(george).\nbig(apple) :- likes(george,car), small(phone).\ntall(carol) :- tall(bob).\nsunny :- small(apple).\ncold :- sad(carol).\ntall(bob) :- owns(carol,book), friend(eve,eve).\nparent(bob,eve) :- parent(alice,dave), parent(eve,frank).\nowns(alice,ball) :- sad(carol).\nbig(book) :- enemy(bob,carol).\nsunny :- parent(alice,eve), big(pencil), hot.\nsmall(ball) :- sunny, small(pencil).\nhungry(dave) :- tall(george), friend(frank,frank), cold.\nlikes(dave,dave) :- likes(frank,apple).\nenemy(frank,dave).\nfriend(frank,alice).\nenemy(dave,bob).\nowns(dave,apple).\nowns(bob,apple).\nowns(carol,car).\nlikes(bob,dave).\nenemy(eve,bob).\nparent(carol,dave).\nlikes(eve,bob).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf eve is tall, then george is tall.\nIf george is tall, then frank is sad.\nIf george likes car and phone is small, then apple is big.\nIf bob is tall, then carol is tall.\nIf apple is small, then it is sunny.\nIf carol is sad, then it is cold.\nIf carol owns book and eve is a friend of eve, then bob is tall.\nIf alice is a parent of dave and eve is a parent of frank, then bob is a parent of eve.\nIf carol is sad, then alice owns ball.\nIf bob is an enemy of carol, then book is big.\nIf alice is a parent of eve and pencil is big and it is hot, then it is sunny.\nIf it is sunny and pencil is small, then ball is small.\nIf george is tall and frank is a friend of frank and it is cold, then dave is hungry.\nIf frank likes apple, then dave likes dave.\n\nAnd the following facts:\neve is tall.\nfrank is an enemy of dave.\nfrank is a friend of alice.\ndave is an enemy of bob.\ndave owns apple.\nbob owns apple.\ncarol owns car.\nbob likes dave.\neve is an enemy of bob.\ncarol is a parent of dave.\neve likes bob.\npencil is small.\n\nOBSERVATION: frank is sad is true.\n\nQUESTION:\nCould eve is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(bob,apple).",
    "c": "tall(george) :- tall(eve).\nsad(frank) :- tall(george).\nbig(apple) :- likes(george,car), small(phone).\ntall(carol) :- tall(bob).\nsunny :- small(apple).\ncold :- sad(carol).\ntall(bob) :- owns(carol,book), friend(eve,eve).\nparent(bob,eve) :- parent(alice,dave), parent(eve,frank).\nowns(alice,ball) :- sad(carol).\nbig(book) :- enemy(bob,carol).\nsunny :- parent(alice,eve), big(pencil), hot.\nsmall(ball) :- sunny, small(pencil).\nhungry(dave) :- tall(george), friend(frank,frank), cold.\nlikes(dave,dave) :- likes(frank,apple).\ntall(eve).\nenemy(frank,dave).\nfriend(frank,alice).\nenemy(dave,bob).\nowns(dave,apple).\nowns(carol,car).\nlikes(bob,dave).\nenemy(eve,bob).\nparent(carol,dave).\nlikes(eve,bob).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf eve is tall, then george is tall.\nIf george is tall, then frank is sad.\nIf george likes car and phone is small, then apple is big.\nIf bob is tall, then carol is tall.\nIf apple is small, then it is sunny.\nIf carol is sad, then it is cold.\nIf carol owns book and eve is a friend of eve, then bob is tall.\nIf alice is a parent of dave and eve is a parent of frank, then bob is a parent of eve.\nIf carol is sad, then alice owns ball.\nIf bob is an enemy of carol, then book is big.\nIf alice is a parent of eve and pencil is big and it is hot, then it is sunny.\nIf it is sunny and pencil is small, then ball is small.\nIf george is tall and frank is a friend of frank and it is cold, then dave is hungry.\nIf frank likes apple, then dave likes dave.\n\nAnd the following facts:\neve is tall.\nfrank is an enemy of dave.\nfrank is a friend of alice.\ndave is an enemy of bob.\ndave owns apple.\nbob owns apple.\ncarol owns car.\nbob likes dave.\neve is an enemy of bob.\ncarol is a parent of dave.\neve likes bob.\npencil is small.\n\nOBSERVATION: frank is sad is true.\n\nQUESTION:\nCould bob owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,apple).",
    "c": "tall(george) :- tall(eve).\nsad(frank) :- tall(george).\nbig(apple) :- likes(george,car), small(phone).\ntall(carol) :- tall(bob).\nsunny :- small(apple).\ncold :- sad(carol).\ntall(bob) :- owns(carol,book), friend(eve,eve).\nparent(bob,eve) :- parent(alice,dave), parent(eve,frank).\nowns(alice,ball) :- sad(carol).\nbig(book) :- enemy(bob,carol).\nsunny :- parent(alice,eve), big(pencil), hot.\nsmall(ball) :- sunny, small(pencil).\nhungry(dave) :- tall(george), friend(frank,frank), cold.\nlikes(dave,dave) :- likes(frank,apple).\ntall(eve).\nenemy(frank,dave).\nfriend(frank,alice).\nenemy(dave,bob).\nowns(bob,apple).\nowns(carol,car).\nlikes(bob,dave).\nenemy(eve,bob).\nparent(carol,dave).\nlikes(eve,bob).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf eve is tall, then george is tall.\nIf george is tall, then frank is sad.\nIf george likes car and phone is small, then apple is big.\nIf bob is tall, then carol is tall.\nIf apple is small, then it is sunny.\nIf carol is sad, then it is cold.\nIf carol owns book and eve is a friend of eve, then bob is tall.\nIf alice is a parent of dave and eve is a parent of frank, then bob is a parent of eve.\nIf carol is sad, then alice owns ball.\nIf bob is an enemy of carol, then book is big.\nIf alice is a parent of eve and pencil is big and it is hot, then it is sunny.\nIf it is sunny and pencil is small, then ball is small.\nIf george is tall and frank is a friend of frank and it is cold, then dave is hungry.\nIf frank likes apple, then dave likes dave.\n\nAnd the following facts:\neve is tall.\nfrank is an enemy of dave.\nfrank is a friend of alice.\ndave is an enemy of bob.\ndave owns apple.\nbob owns apple.\ncarol owns car.\nbob likes dave.\neve is an enemy of bob.\ncarol is a parent of dave.\neve likes bob.\npencil is small.\n\nOBSERVATION: frank is sad is true.\n\nQUESTION:\nCould dave owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(carol,frank).",
    "c": "likes(george,bob) :- friend(carol,alice).\nwet(book) :- likes(george,bob).\nsmall(book) :- friend(carol,carol).\nsmall(apple) :- wet(car), happy(dave).\nenemy(eve,alice) :- owns(alice,book), hot, cold.\nhungry(bob) :- owns(frank,apple).\nhungry(bob) :- likes(alice,frank), friend(alice,bob), dislikes(dave,car).\nhappy(bob) :- sad(frank), likes(frank,phone), small(pencil).\nenemy(dave,alice) :- likes(george,car).\nowns(george,book) :- parent(alice,eve), dislikes(alice,pencil), wet(pencil).\nhappy(dave) :- big(phone), sad(carol).\ntall(george) :- friend(frank,bob).\nsmall(ball) :- sunny, small(book), owns(carol,pencil).\ncold :- parent(frank,frank).\nfriend(carol,alice).\nparent(bob,dave).\ndislikes(alice,book).\ndislikes(alice,dave).\nowns(carol,ball).\nenemy(carol,frank).\nlikes(eve,george).\nlikes(bob,car).\nfriend(george,bob).\ndislikes(george,book).\ndislikes(alice,ball).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf carol is a friend of alice, then george likes bob.\nIf george likes bob, then book is wet.\nIf carol is a friend of carol, then book is small.\nIf car is wet and dave is happy, then apple is small.\nIf alice owns book and it is hot and it is cold, then eve is an enemy of alice.\nIf frank owns apple, then bob is hungry.\nIf alice likes frank and alice is a friend of bob and dave dislikes car, then bob is hungry.\nIf frank is sad and frank likes phone and pencil is small, then bob is happy.\nIf george likes car, then dave is an enemy of alice.\nIf alice is a parent of eve and alice dislikes pencil and pencil is wet, then george owns book.\nIf phone is big and carol is sad, then dave is happy.\nIf frank is a friend of bob, then george is tall.\nIf it is sunny and book is small and carol owns pencil, then ball is small.\nIf frank is a parent of frank, then it is cold.\n\nAnd the following facts:\ncarol is a friend of alice.\nbob is a parent of dave.\nalice dislikes book.\nalice dislikes dave.\ncarol owns ball.\ncarol is an enemy of frank.\neve likes george.\nbob likes car.\ngeorge is a friend of bob.\ngeorge dislikes book.\nalice dislikes ball.\nalice is a friend of dave.\n\nQUESTION:\nIs carol is an enemy of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,ball).",
    "c": "likes(george,bob) :- friend(carol,alice).\nwet(book) :- likes(george,bob).\nsmall(book) :- friend(carol,carol).\nsmall(apple) :- wet(car), happy(dave).\nenemy(eve,alice) :- owns(alice,book), hot, cold.\nhungry(bob) :- owns(frank,apple).\nhungry(bob) :- likes(alice,frank), friend(alice,bob), dislikes(dave,car).\nhappy(bob) :- sad(frank), likes(frank,phone), small(pencil).\nenemy(dave,alice) :- likes(george,car).\nowns(george,book) :- parent(alice,eve), dislikes(alice,pencil), wet(pencil).\nhappy(dave) :- big(phone), sad(carol).\ntall(george) :- friend(frank,bob).\nsmall(ball) :- sunny, small(book), owns(carol,pencil).\ncold :- parent(frank,frank).\nfriend(carol,alice).\nparent(bob,dave).\ndislikes(alice,book).\ndislikes(alice,dave).\nowns(carol,ball).\nenemy(carol,frank).\nlikes(eve,george).\nlikes(bob,car).\nfriend(george,bob).\ndislikes(george,book).\ndislikes(alice,ball).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf carol is a friend of alice, then george likes bob.\nIf george likes bob, then book is wet.\nIf carol is a friend of carol, then book is small.\nIf car is wet and dave is happy, then apple is small.\nIf alice owns book and it is hot and it is cold, then eve is an enemy of alice.\nIf frank owns apple, then bob is hungry.\nIf alice likes frank and alice is a friend of bob and dave dislikes car, then bob is hungry.\nIf frank is sad and frank likes phone and pencil is small, then bob is happy.\nIf george likes car, then dave is an enemy of alice.\nIf alice is a parent of eve and alice dislikes pencil and pencil is wet, then george owns book.\nIf phone is big and carol is sad, then dave is happy.\nIf frank is a friend of bob, then george is tall.\nIf it is sunny and book is small and carol owns pencil, then ball is small.\nIf frank is a parent of frank, then it is cold.\n\nAnd the following facts:\ncarol is a friend of alice.\nbob is a parent of dave.\nalice dislikes book.\nalice dislikes dave.\ncarol owns ball.\ncarol is an enemy of frank.\neve likes george.\nbob likes car.\ngeorge is a friend of bob.\ngeorge dislikes book.\nalice dislikes ball.\nalice is a friend of dave.\n\nQUESTION:\nIs alice dislikes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,bob).",
    "c": "likes(george,bob) :- friend(carol,alice).\nwet(book) :- likes(george,bob).\nsmall(book) :- friend(carol,carol).\nsmall(apple) :- wet(car), happy(dave).\nenemy(eve,alice) :- owns(alice,book), hot, cold.\nhungry(bob) :- owns(frank,apple).\nhungry(bob) :- likes(alice,frank), friend(alice,bob), dislikes(dave,car).\nhappy(bob) :- sad(frank), likes(frank,phone), small(pencil).\nenemy(dave,alice) :- likes(george,car).\nowns(george,book) :- parent(alice,eve), dislikes(alice,pencil), wet(pencil).\nhappy(dave) :- big(phone), sad(carol).\ntall(george) :- friend(frank,bob).\nsmall(ball) :- sunny, small(book), owns(carol,pencil).\ncold :- parent(frank,frank).\nfriend(carol,alice).\nparent(bob,dave).\ndislikes(alice,book).\ndislikes(alice,dave).\nowns(carol,ball).\nenemy(carol,frank).\nlikes(eve,george).\nlikes(bob,car).\nfriend(george,bob).\ndislikes(george,book).\ndislikes(alice,ball).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf carol is a friend of alice, then george likes bob.\nIf george likes bob, then book is wet.\nIf carol is a friend of carol, then book is small.\nIf car is wet and dave is happy, then apple is small.\nIf alice owns book and it is hot and it is cold, then eve is an enemy of alice.\nIf frank owns apple, then bob is hungry.\nIf alice likes frank and alice is a friend of bob and dave dislikes car, then bob is hungry.\nIf frank is sad and frank likes phone and pencil is small, then bob is happy.\nIf george likes car, then dave is an enemy of alice.\nIf alice is a parent of eve and alice dislikes pencil and pencil is wet, then george owns book.\nIf phone is big and carol is sad, then dave is happy.\nIf frank is a friend of bob, then george is tall.\nIf it is sunny and book is small and carol owns pencil, then ball is small.\nIf frank is a parent of frank, then it is cold.\n\nAnd the following facts:\ncarol is a friend of alice.\nbob is a parent of dave.\nalice dislikes book.\nalice dislikes dave.\ncarol owns ball.\ncarol is an enemy of frank.\neve likes george.\nbob likes car.\ngeorge is a friend of bob.\ngeorge dislikes book.\nalice dislikes ball.\nalice is a friend of dave.\n\nQUESTION:\nIs george is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "likes(george,bob) :- friend(carol,alice).\nwet(book) :- likes(george,bob).\nsmall(book) :- friend(carol,carol).\nsmall(apple) :- wet(car), happy(dave).\nenemy(eve,alice) :- owns(alice,book), hot, cold.\nhungry(bob) :- owns(frank,apple).\nhungry(bob) :- likes(alice,frank), friend(alice,bob), dislikes(dave,car).\nhappy(bob) :- sad(frank), likes(frank,phone), small(pencil).\nenemy(dave,alice) :- likes(george,car).\nowns(george,book) :- parent(alice,eve), dislikes(alice,pencil), wet(pencil).\nhappy(dave) :- big(phone), sad(carol).\ntall(george) :- friend(frank,bob).\nsmall(ball) :- sunny, small(book), owns(carol,pencil).\ncold :- parent(frank,frank).\nfriend(carol,alice).\nparent(bob,dave).\ndislikes(alice,book).\ndislikes(alice,dave).\nowns(carol,ball).\nenemy(carol,frank).\nlikes(eve,george).\nlikes(bob,car).\nfriend(george,bob).\ndislikes(george,book).\ndislikes(alice,ball).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf carol is a friend of alice, then george likes bob.\nIf george likes bob, then book is wet.\nIf carol is a friend of carol, then book is small.\nIf car is wet and dave is happy, then apple is small.\nIf alice owns book and it is hot and it is cold, then eve is an enemy of alice.\nIf frank owns apple, then bob is hungry.\nIf alice likes frank and alice is a friend of bob and dave dislikes car, then bob is hungry.\nIf frank is sad and frank likes phone and pencil is small, then bob is happy.\nIf george likes car, then dave is an enemy of alice.\nIf alice is a parent of eve and alice dislikes pencil and pencil is wet, then george owns book.\nIf phone is big and carol is sad, then dave is happy.\nIf frank is a friend of bob, then george is tall.\nIf it is sunny and book is small and carol owns pencil, then ball is small.\nIf frank is a parent of frank, then it is cold.\n\nAnd the following facts:\ncarol is a friend of alice.\nbob is a parent of dave.\nalice dislikes book.\nalice dislikes dave.\ncarol owns ball.\ncarol is an enemy of frank.\neve likes george.\nbob likes car.\ngeorge is a friend of bob.\ngeorge dislikes book.\nalice dislikes ball.\nalice is a friend of dave.\n\nQUESTION:\nIs bob is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "likes(george,bob) :- friend(carol,alice).\nwet(book) :- likes(george,bob).\nsmall(book) :- friend(carol,carol).\nsmall(apple) :- wet(car), happy(dave).\nenemy(eve,alice) :- owns(alice,book), hot, cold.\nhungry(bob) :- owns(frank,apple).\nhungry(bob) :- likes(alice,frank), friend(alice,bob), dislikes(dave,car).\nhappy(bob) :- sad(frank), likes(frank,phone), small(pencil).\nenemy(dave,alice) :- likes(george,car).\nowns(george,book) :- parent(alice,eve), dislikes(alice,pencil), wet(pencil).\nhappy(dave) :- big(phone), sad(carol).\ntall(george) :- friend(frank,bob).\nsmall(ball) :- sunny, small(book), owns(carol,pencil).\ncold :- parent(frank,frank).\nfriend(carol,alice).\nparent(bob,dave).\ndislikes(alice,book).\ndislikes(alice,dave).\nowns(carol,ball).\nenemy(carol,frank).\nlikes(eve,george).\nlikes(bob,car).\nfriend(george,bob).\ndislikes(george,book).\ndislikes(alice,ball).\nfriend(alice,dave).",
    "natural language": "You are given the following information:\nIf carol is a friend of alice, then george likes bob.\nIf george likes bob, then book is wet.\nIf carol is a friend of carol, then book is small.\nIf car is wet and dave is happy, then apple is small.\nIf alice owns book and it is hot and it is cold, then eve is an enemy of alice.\nIf frank owns apple, then bob is hungry.\nIf alice likes frank and alice is a friend of bob and dave dislikes car, then bob is hungry.\nIf frank is sad and frank likes phone and pencil is small, then bob is happy.\nIf george likes car, then dave is an enemy of alice.\nIf alice is a parent of eve and alice dislikes pencil and pencil is wet, then george owns book.\nIf phone is big and carol is sad, then dave is happy.\nIf frank is a friend of bob, then george is tall.\nIf it is sunny and book is small and carol owns pencil, then ball is small.\nIf frank is a parent of frank, then it is cold.\n\nAnd the following facts:\ncarol is a friend of alice.\nbob is a parent of dave.\nalice dislikes book.\nalice dislikes dave.\ncarol owns ball.\ncarol is an enemy of frank.\neve likes george.\nbob likes car.\ngeorge is a friend of bob.\ngeorge dislikes book.\nalice dislikes ball.\nalice is a friend of dave.\n\nQUESTION:\nIs carol likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,alice).",
    "c": "likes(george,bob) :- friend(carol,alice).\nwet(book) :- likes(george,bob).\nsmall(book) :- friend(carol,carol).\nsmall(apple) :- wet(car), happy(dave).\nenemy(eve,alice) :- owns(alice,book), hot, cold.\nhungry(bob) :- owns(frank,apple).\nhungry(bob) :- likes(alice,frank), friend(alice,bob), dislikes(dave,car).\nhappy(bob) :- sad(frank), likes(frank,phone), small(pencil).\nenemy(dave,alice) :- likes(george,car).\nowns(george,book) :- parent(alice,eve), dislikes(alice,pencil), wet(pencil).\nhappy(dave) :- big(phone), sad(carol).\ntall(george) :- friend(frank,bob).\nsmall(ball) :- sunny, small(book), owns(carol,pencil).\ncold :- parent(frank,frank).\nparent(bob,dave).\ndislikes(alice,book).\ndislikes(alice,dave).\nowns(carol,ball).\nenemy(carol,frank).\nlikes(eve,george).\nlikes(bob,car).\nfriend(george,bob).\ndislikes(george,book).\ndislikes(alice,ball).\nfriend(alice,dave).",
    "natural language": "You are given the following rules:\nIf carol is a friend of alice, then george likes bob.\nIf george likes bob, then book is wet.\nIf carol is a friend of carol, then book is small.\nIf car is wet and dave is happy, then apple is small.\nIf alice owns book and it is hot and it is cold, then eve is an enemy of alice.\nIf frank owns apple, then bob is hungry.\nIf alice likes frank and alice is a friend of bob and dave dislikes car, then bob is hungry.\nIf frank is sad and frank likes phone and pencil is small, then bob is happy.\nIf george likes car, then dave is an enemy of alice.\nIf alice is a parent of eve and alice dislikes pencil and pencil is wet, then george owns book.\nIf phone is big and carol is sad, then dave is happy.\nIf frank is a friend of bob, then george is tall.\nIf it is sunny and book is small and carol owns pencil, then ball is small.\nIf frank is a parent of frank, then it is cold.\n\nAnd the following facts:\ncarol is a friend of alice.\nbob is a parent of dave.\nalice dislikes book.\nalice dislikes dave.\ncarol owns ball.\ncarol is an enemy of frank.\neve likes george.\nbob likes car.\ngeorge is a friend of bob.\ngeorge dislikes book.\nalice dislikes ball.\nalice is a friend of dave.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould carol is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,car).",
    "c": "likes(george,bob) :- friend(carol,alice).\nwet(book) :- likes(george,bob).\nsmall(book) :- friend(carol,carol).\nsmall(apple) :- wet(car), happy(dave).\nenemy(eve,alice) :- owns(alice,book), hot, cold.\nhungry(bob) :- owns(frank,apple).\nhungry(bob) :- likes(alice,frank), friend(alice,bob), dislikes(dave,car).\nhappy(bob) :- sad(frank), likes(frank,phone), small(pencil).\nenemy(dave,alice) :- likes(george,car).\nowns(george,book) :- parent(alice,eve), dislikes(alice,pencil), wet(pencil).\nhappy(dave) :- big(phone), sad(carol).\ntall(george) :- friend(frank,bob).\nsmall(ball) :- sunny, small(book), owns(carol,pencil).\ncold :- parent(frank,frank).\nfriend(carol,alice).\nparent(bob,dave).\ndislikes(alice,book).\ndislikes(alice,dave).\nowns(carol,ball).\nenemy(carol,frank).\nlikes(eve,george).\nfriend(george,bob).\ndislikes(george,book).\ndislikes(alice,ball).\nfriend(alice,dave).",
    "natural language": "You are given the following rules:\nIf carol is a friend of alice, then george likes bob.\nIf george likes bob, then book is wet.\nIf carol is a friend of carol, then book is small.\nIf car is wet and dave is happy, then apple is small.\nIf alice owns book and it is hot and it is cold, then eve is an enemy of alice.\nIf frank owns apple, then bob is hungry.\nIf alice likes frank and alice is a friend of bob and dave dislikes car, then bob is hungry.\nIf frank is sad and frank likes phone and pencil is small, then bob is happy.\nIf george likes car, then dave is an enemy of alice.\nIf alice is a parent of eve and alice dislikes pencil and pencil is wet, then george owns book.\nIf phone is big and carol is sad, then dave is happy.\nIf frank is a friend of bob, then george is tall.\nIf it is sunny and book is small and carol owns pencil, then ball is small.\nIf frank is a parent of frank, then it is cold.\n\nAnd the following facts:\ncarol is a friend of alice.\nbob is a parent of dave.\nalice dislikes book.\nalice dislikes dave.\ncarol owns ball.\ncarol is an enemy of frank.\neve likes george.\nbob likes car.\ngeorge is a friend of bob.\ngeorge dislikes book.\nalice dislikes ball.\nalice is a friend of dave.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould bob likes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,dave).",
    "c": "likes(george,bob) :- friend(carol,alice).\nwet(book) :- likes(george,bob).\nsmall(book) :- friend(carol,carol).\nsmall(apple) :- wet(car), happy(dave).\nenemy(eve,alice) :- owns(alice,book), hot, cold.\nhungry(bob) :- owns(frank,apple).\nhungry(bob) :- likes(alice,frank), friend(alice,bob), dislikes(dave,car).\nhappy(bob) :- sad(frank), likes(frank,phone), small(pencil).\nenemy(dave,alice) :- likes(george,car).\nowns(george,book) :- parent(alice,eve), dislikes(alice,pencil), wet(pencil).\nhappy(dave) :- big(phone), sad(carol).\ntall(george) :- friend(frank,bob).\nsmall(ball) :- sunny, small(book), owns(carol,pencil).\ncold :- parent(frank,frank).\nfriend(carol,alice).\nparent(bob,dave).\ndislikes(alice,book).\nowns(carol,ball).\nenemy(carol,frank).\nlikes(eve,george).\nlikes(bob,car).\nfriend(george,bob).\ndislikes(george,book).\ndislikes(alice,ball).\nfriend(alice,dave).",
    "natural language": "You are given the following rules:\nIf carol is a friend of alice, then george likes bob.\nIf george likes bob, then book is wet.\nIf carol is a friend of carol, then book is small.\nIf car is wet and dave is happy, then apple is small.\nIf alice owns book and it is hot and it is cold, then eve is an enemy of alice.\nIf frank owns apple, then bob is hungry.\nIf alice likes frank and alice is a friend of bob and dave dislikes car, then bob is hungry.\nIf frank is sad and frank likes phone and pencil is small, then bob is happy.\nIf george likes car, then dave is an enemy of alice.\nIf alice is a parent of eve and alice dislikes pencil and pencil is wet, then george owns book.\nIf phone is big and carol is sad, then dave is happy.\nIf frank is a friend of bob, then george is tall.\nIf it is sunny and book is small and carol owns pencil, then ball is small.\nIf frank is a parent of frank, then it is cold.\n\nAnd the following facts:\ncarol is a friend of alice.\nbob is a parent of dave.\nalice dislikes book.\nalice dislikes dave.\ncarol owns ball.\ncarol is an enemy of frank.\neve likes george.\nbob likes car.\ngeorge is a friend of bob.\ngeorge dislikes book.\nalice dislikes ball.\nalice is a friend of dave.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould alice dislikes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,bob).",
    "c": "cold :- sunny.\nhot :- cold.\nhot :- hot.\nhot :- hot.\nwet(car) :- wet(book).\nhappy(carol) :- sibling(bob,carol), happy(frank).\nhappy(george) :- cold, owns(george,pencil), happy(alice).\nwet(car) :- sad(george), happy(carol).\nsmall(book) :- small(pencil), friend(carol,frank), likes(frank,book).\nsunny :- happy(eve), sunny, cold.\nhungry(bob) :- small(ball), sunny, cold.\nbig(car) :- enemy(bob,frank), cold.\nsmall(car) :- sunny.\nsad(alice) :- friend(dave,frank), dislikes(george,phone).\nsunny.\nenemy(eve,george).\nlikes(carol,bob).\nlikes(bob,dave).\nsibling(eve,alice).\ndislikes(dave,carol).\nsmall(book).\ncold.\ndislikes(frank,bob).\nfriend(alice,eve).\ndislikes(alice,car).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then it is hot.\nIf book is wet, then car is wet.\nIf bob is a sibling of carol and frank is happy, then carol is happy.\nIf it is cold and george owns pencil and alice is happy, then george is happy.\nIf george is sad and carol is happy, then car is wet.\nIf pencil is small and carol is a friend of frank and frank likes book, then book is small.\nIf eve is happy and it is sunny and it is cold, then it is sunny.\nIf ball is small and it is sunny and it is cold, then bob is hungry.\nIf bob is an enemy of frank and it is cold, then car is big.\nIf it is sunny, then car is small.\nIf dave is a friend of frank and george dislikes phone, then alice is sad.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of george.\ncarol likes bob.\nbob likes dave.\neve is a sibling of alice.\ndave dislikes carol.\nbook is small.\nit is cold.\nfrank dislikes bob.\nalice is a friend of eve.\nalice dislikes car.\nphone is wet.\n\nQUESTION:\nIs carol likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "cold :- sunny.\nhot :- cold.\nhot :- hot.\nhot :- hot.\nwet(car) :- wet(book).\nhappy(carol) :- sibling(bob,carol), happy(frank).\nhappy(george) :- cold, owns(george,pencil), happy(alice).\nwet(car) :- sad(george), happy(carol).\nsmall(book) :- small(pencil), friend(carol,frank), likes(frank,book).\nsunny :- happy(eve), sunny, cold.\nhungry(bob) :- small(ball), sunny, cold.\nbig(car) :- enemy(bob,frank), cold.\nsmall(car) :- sunny.\nsad(alice) :- friend(dave,frank), dislikes(george,phone).\nsunny.\nenemy(eve,george).\nlikes(carol,bob).\nlikes(bob,dave).\nsibling(eve,alice).\ndislikes(dave,carol).\nsmall(book).\ncold.\ndislikes(frank,bob).\nfriend(alice,eve).\ndislikes(alice,car).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then it is hot.\nIf book is wet, then car is wet.\nIf bob is a sibling of carol and frank is happy, then carol is happy.\nIf it is cold and george owns pencil and alice is happy, then george is happy.\nIf george is sad and carol is happy, then car is wet.\nIf pencil is small and carol is a friend of frank and frank likes book, then book is small.\nIf eve is happy and it is sunny and it is cold, then it is sunny.\nIf ball is small and it is sunny and it is cold, then bob is hungry.\nIf bob is an enemy of frank and it is cold, then car is big.\nIf it is sunny, then car is small.\nIf dave is a friend of frank and george dislikes phone, then alice is sad.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of george.\ncarol likes bob.\nbob likes dave.\neve is a sibling of alice.\ndave dislikes carol.\nbook is small.\nit is cold.\nfrank dislikes bob.\nalice is a friend of eve.\nalice dislikes car.\nphone is wet.\n\nQUESTION:\nIs it is hot true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "cold :- sunny.\nhot :- cold.\nhot :- hot.\nhot :- hot.\nwet(car) :- wet(book).\nhappy(carol) :- sibling(bob,carol), happy(frank).\nhappy(george) :- cold, owns(george,pencil), happy(alice).\nwet(car) :- sad(george), happy(carol).\nsmall(book) :- small(pencil), friend(carol,frank), likes(frank,book).\nsunny :- happy(eve), sunny, cold.\nhungry(bob) :- small(ball), sunny, cold.\nbig(car) :- enemy(bob,frank), cold.\nsmall(car) :- sunny.\nsad(alice) :- friend(dave,frank), dislikes(george,phone).\nsunny.\nenemy(eve,george).\nlikes(carol,bob).\nlikes(bob,dave).\nsibling(eve,alice).\ndislikes(dave,carol).\nsmall(book).\ncold.\ndislikes(frank,bob).\nfriend(alice,eve).\ndislikes(alice,car).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then it is hot.\nIf book is wet, then car is wet.\nIf bob is a sibling of carol and frank is happy, then carol is happy.\nIf it is cold and george owns pencil and alice is happy, then george is happy.\nIf george is sad and carol is happy, then car is wet.\nIf pencil is small and carol is a friend of frank and frank likes book, then book is small.\nIf eve is happy and it is sunny and it is cold, then it is sunny.\nIf ball is small and it is sunny and it is cold, then bob is hungry.\nIf bob is an enemy of frank and it is cold, then car is big.\nIf it is sunny, then car is small.\nIf dave is a friend of frank and george dislikes phone, then alice is sad.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of george.\ncarol likes bob.\nbob likes dave.\neve is a sibling of alice.\ndave dislikes carol.\nbook is small.\nit is cold.\nfrank dislikes bob.\nalice is a friend of eve.\nalice dislikes car.\nphone is wet.\n\nQUESTION:\nIs alice is a friend of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,phone).",
    "c": "cold :- sunny.\nhot :- cold.\nhot :- hot.\nhot :- hot.\nwet(car) :- wet(book).\nhappy(carol) :- sibling(bob,carol), happy(frank).\nhappy(george) :- cold, owns(george,pencil), happy(alice).\nwet(car) :- sad(george), happy(carol).\nsmall(book) :- small(pencil), friend(carol,frank), likes(frank,book).\nsunny :- happy(eve), sunny, cold.\nhungry(bob) :- small(ball), sunny, cold.\nbig(car) :- enemy(bob,frank), cold.\nsmall(car) :- sunny.\nsad(alice) :- friend(dave,frank), dislikes(george,phone).\nsunny.\nenemy(eve,george).\nlikes(carol,bob).\nlikes(bob,dave).\nsibling(eve,alice).\ndislikes(dave,carol).\nsmall(book).\ncold.\ndislikes(frank,bob).\nfriend(alice,eve).\ndislikes(alice,car).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then it is hot.\nIf book is wet, then car is wet.\nIf bob is a sibling of carol and frank is happy, then carol is happy.\nIf it is cold and george owns pencil and alice is happy, then george is happy.\nIf george is sad and carol is happy, then car is wet.\nIf pencil is small and carol is a friend of frank and frank likes book, then book is small.\nIf eve is happy and it is sunny and it is cold, then it is sunny.\nIf ball is small and it is sunny and it is cold, then bob is hungry.\nIf bob is an enemy of frank and it is cold, then car is big.\nIf it is sunny, then car is small.\nIf dave is a friend of frank and george dislikes phone, then alice is sad.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of george.\ncarol likes bob.\nbob likes dave.\neve is a sibling of alice.\ndave dislikes carol.\nbook is small.\nit is cold.\nfrank dislikes bob.\nalice is a friend of eve.\nalice dislikes car.\nphone is wet.\n\nQUESTION:\nIs alice owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,eve).",
    "c": "cold :- sunny.\nhot :- cold.\nhot :- hot.\nhot :- hot.\nwet(car) :- wet(book).\nhappy(carol) :- sibling(bob,carol), happy(frank).\nhappy(george) :- cold, owns(george,pencil), happy(alice).\nwet(car) :- sad(george), happy(carol).\nsmall(book) :- small(pencil), friend(carol,frank), likes(frank,book).\nsunny :- happy(eve), sunny, cold.\nhungry(bob) :- small(ball), sunny, cold.\nbig(car) :- enemy(bob,frank), cold.\nsmall(car) :- sunny.\nsad(alice) :- friend(dave,frank), dislikes(george,phone).\nsunny.\nenemy(eve,george).\nlikes(carol,bob).\nlikes(bob,dave).\nsibling(eve,alice).\ndislikes(dave,carol).\nsmall(book).\ncold.\ndislikes(frank,bob).\nfriend(alice,eve).\ndislikes(alice,car).\nwet(phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then it is hot.\nIf book is wet, then car is wet.\nIf bob is a sibling of carol and frank is happy, then carol is happy.\nIf it is cold and george owns pencil and alice is happy, then george is happy.\nIf george is sad and carol is happy, then car is wet.\nIf pencil is small and carol is a friend of frank and frank likes book, then book is small.\nIf eve is happy and it is sunny and it is cold, then it is sunny.\nIf ball is small and it is sunny and it is cold, then bob is hungry.\nIf bob is an enemy of frank and it is cold, then car is big.\nIf it is sunny, then car is small.\nIf dave is a friend of frank and george dislikes phone, then alice is sad.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of george.\ncarol likes bob.\nbob likes dave.\neve is a sibling of alice.\ndave dislikes carol.\nbook is small.\nit is cold.\nfrank dislikes bob.\nalice is a friend of eve.\nalice dislikes car.\nphone is wet.\n\nQUESTION:\nIs bob is a sibling of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "cold :- sunny.\nhot :- cold.\nhot :- hot.\nhot :- hot.\nwet(car) :- wet(book).\nhappy(carol) :- sibling(bob,carol), happy(frank).\nhappy(george) :- cold, owns(george,pencil), happy(alice).\nwet(car) :- sad(george), happy(carol).\nsmall(book) :- small(pencil), friend(carol,frank), likes(frank,book).\nsunny :- happy(eve), sunny, cold.\nhungry(bob) :- small(ball), sunny, cold.\nbig(car) :- enemy(bob,frank), cold.\nsmall(car) :- sunny.\nsad(alice) :- friend(dave,frank), dislikes(george,phone).\nsunny.\nenemy(eve,george).\nlikes(carol,bob).\nlikes(bob,dave).\nsibling(eve,alice).\ndislikes(dave,carol).\nsmall(book).\ndislikes(frank,bob).\nfriend(alice,eve).\ndislikes(alice,car).\nwet(phone).",
    "natural language": "You are given the following rules:\nIf it is sunny, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then it is hot.\nIf book is wet, then car is wet.\nIf bob is a sibling of carol and frank is happy, then carol is happy.\nIf it is cold and george owns pencil and alice is happy, then george is happy.\nIf george is sad and carol is happy, then car is wet.\nIf pencil is small and carol is a friend of frank and frank likes book, then book is small.\nIf eve is happy and it is sunny and it is cold, then it is sunny.\nIf ball is small and it is sunny and it is cold, then bob is hungry.\nIf bob is an enemy of frank and it is cold, then car is big.\nIf it is sunny, then car is small.\nIf dave is a friend of frank and george dislikes phone, then alice is sad.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of george.\ncarol likes bob.\nbob likes dave.\neve is a sibling of alice.\ndave dislikes carol.\nbook is small.\nit is cold.\nfrank dislikes bob.\nalice is a friend of eve.\nalice dislikes car.\nphone is wet.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould it is cold be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sunny.",
    "c": "cold :- sunny.\nhot :- cold.\nhot :- hot.\nhot :- hot.\nwet(car) :- wet(book).\nhappy(carol) :- sibling(bob,carol), happy(frank).\nhappy(george) :- cold, owns(george,pencil), happy(alice).\nwet(car) :- sad(george), happy(carol).\nsmall(book) :- small(pencil), friend(carol,frank), likes(frank,book).\nsunny :- happy(eve), sunny, cold.\nhungry(bob) :- small(ball), sunny, cold.\nbig(car) :- enemy(bob,frank), cold.\nsmall(car) :- sunny.\nsad(alice) :- friend(dave,frank), dislikes(george,phone).\nenemy(eve,george).\nlikes(carol,bob).\nlikes(bob,dave).\nsibling(eve,alice).\ndislikes(dave,carol).\nsmall(book).\ncold.\ndislikes(frank,bob).\nfriend(alice,eve).\ndislikes(alice,car).\nwet(phone).",
    "natural language": "You are given the following rules:\nIf it is sunny, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then it is hot.\nIf book is wet, then car is wet.\nIf bob is a sibling of carol and frank is happy, then carol is happy.\nIf it is cold and george owns pencil and alice is happy, then george is happy.\nIf george is sad and carol is happy, then car is wet.\nIf pencil is small and carol is a friend of frank and frank likes book, then book is small.\nIf eve is happy and it is sunny and it is cold, then it is sunny.\nIf ball is small and it is sunny and it is cold, then bob is hungry.\nIf bob is an enemy of frank and it is cold, then car is big.\nIf it is sunny, then car is small.\nIf dave is a friend of frank and george dislikes phone, then alice is sad.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of george.\ncarol likes bob.\nbob likes dave.\neve is a sibling of alice.\ndave dislikes carol.\nbook is small.\nit is cold.\nfrank dislikes bob.\nalice is a friend of eve.\nalice dislikes car.\nphone is wet.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(eve,alice).",
    "c": "cold :- sunny.\nhot :- cold.\nhot :- hot.\nhot :- hot.\nwet(car) :- wet(book).\nhappy(carol) :- sibling(bob,carol), happy(frank).\nhappy(george) :- cold, owns(george,pencil), happy(alice).\nwet(car) :- sad(george), happy(carol).\nsmall(book) :- small(pencil), friend(carol,frank), likes(frank,book).\nsunny :- happy(eve), sunny, cold.\nhungry(bob) :- small(ball), sunny, cold.\nbig(car) :- enemy(bob,frank), cold.\nsmall(car) :- sunny.\nsad(alice) :- friend(dave,frank), dislikes(george,phone).\nsunny.\nenemy(eve,george).\nlikes(carol,bob).\nlikes(bob,dave).\ndislikes(dave,carol).\nsmall(book).\ncold.\ndislikes(frank,bob).\nfriend(alice,eve).\ndislikes(alice,car).\nwet(phone).",
    "natural language": "You are given the following rules:\nIf it is sunny, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then it is hot.\nIf book is wet, then car is wet.\nIf bob is a sibling of carol and frank is happy, then carol is happy.\nIf it is cold and george owns pencil and alice is happy, then george is happy.\nIf george is sad and carol is happy, then car is wet.\nIf pencil is small and carol is a friend of frank and frank likes book, then book is small.\nIf eve is happy and it is sunny and it is cold, then it is sunny.\nIf ball is small and it is sunny and it is cold, then bob is hungry.\nIf bob is an enemy of frank and it is cold, then car is big.\nIf it is sunny, then car is small.\nIf dave is a friend of frank and george dislikes phone, then alice is sad.\n\nAnd the following facts:\nit is sunny.\neve is an enemy of george.\ncarol likes bob.\nbob likes dave.\neve is a sibling of alice.\ndave dislikes carol.\nbook is small.\nit is cold.\nfrank dislikes bob.\nalice is a friend of eve.\nalice dislikes car.\nphone is wet.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould eve is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(bob,carol).",
    "c": "tall(bob) :- enemy(dave,frank).\nbig(apple) :- tall(bob).\nowns(frank,ball) :- big(apple).\ntall(dave) :- owns(frank,ball).\nowns(eve,book) :- sunny.\nowns(eve,pencil) :- owns(carol,ball), owns(frank,book), sad(dave).\nfriend(carol,eve) :- friend(eve,bob), hot.\nfriend(frank,george) :- likes(bob,book), big(phone).\nhungry(carol) :- hot, hungry(george), owns(dave,car).\nhungry(dave) :- owns(bob,car), cold.\nsmall(pencil) :- big(phone), wet(car).\nsibling(george,carol) :- likes(george,george), sibling(eve,alice), cold.\nsmall(pencil) :- friend(carol,dave), enemy(eve,frank), enemy(carol,frank).\nhungry(eve) :- happy(eve), friend(dave,frank), sunny.\nenemy(dave,frank).\nowns(carol,ball).\nenemy(george,eve).\nsad(alice).\ntall(carol).\nsibling(bob,frank).\nfriend(eve,alice).\nfriend(carol,frank).\nfriend(bob,carol).\nfriend(eve,dave).\nenemy(george,dave).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is an enemy of frank, then bob is tall.\nIf bob is tall, then apple is big.\nIf apple is big, then frank owns ball.\nIf frank owns ball, then dave is tall.\nIf it is sunny, then eve owns book.\nIf carol owns ball and frank owns book and dave is sad, then eve owns pencil.\nIf eve is a friend of bob and it is hot, then carol is a friend of eve.\nIf bob likes book and phone is big, then frank is a friend of george.\nIf it is hot and george is hungry and dave owns car, then carol is hungry.\nIf bob owns car and it is cold, then dave is hungry.\nIf phone is big and car is wet, then pencil is small.\nIf george likes george and eve is a sibling of alice and it is cold, then george is a sibling of carol.\nIf carol is a friend of dave and eve is an enemy of frank and carol is an enemy of frank, then pencil is small.\nIf eve is happy and dave is a friend of frank and it is sunny, then eve is hungry.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol owns ball.\ngeorge is an enemy of eve.\nalice is sad.\ncarol is tall.\nbob is a sibling of frank.\neve is a friend of alice.\ncarol is a friend of frank.\nbob is a friend of carol.\neve is a friend of dave.\ngeorge is an enemy of dave.\ncarol is a friend of bob.\n\nQUESTION:\nIs bob is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,frank).",
    "c": "tall(bob) :- enemy(dave,frank).\nbig(apple) :- tall(bob).\nowns(frank,ball) :- big(apple).\ntall(dave) :- owns(frank,ball).\nowns(eve,book) :- sunny.\nowns(eve,pencil) :- owns(carol,ball), owns(frank,book), sad(dave).\nfriend(carol,eve) :- friend(eve,bob), hot.\nfriend(frank,george) :- likes(bob,book), big(phone).\nhungry(carol) :- hot, hungry(george), owns(dave,car).\nhungry(dave) :- owns(bob,car), cold.\nsmall(pencil) :- big(phone), wet(car).\nsibling(george,carol) :- likes(george,george), sibling(eve,alice), cold.\nsmall(pencil) :- friend(carol,dave), enemy(eve,frank), enemy(carol,frank).\nhungry(eve) :- happy(eve), friend(dave,frank), sunny.\nenemy(dave,frank).\nowns(carol,ball).\nenemy(george,eve).\nsad(alice).\ntall(carol).\nsibling(bob,frank).\nfriend(eve,alice).\nfriend(carol,frank).\nfriend(bob,carol).\nfriend(eve,dave).\nenemy(george,dave).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is an enemy of frank, then bob is tall.\nIf bob is tall, then apple is big.\nIf apple is big, then frank owns ball.\nIf frank owns ball, then dave is tall.\nIf it is sunny, then eve owns book.\nIf carol owns ball and frank owns book and dave is sad, then eve owns pencil.\nIf eve is a friend of bob and it is hot, then carol is a friend of eve.\nIf bob likes book and phone is big, then frank is a friend of george.\nIf it is hot and george is hungry and dave owns car, then carol is hungry.\nIf bob owns car and it is cold, then dave is hungry.\nIf phone is big and car is wet, then pencil is small.\nIf george likes george and eve is a sibling of alice and it is cold, then george is a sibling of carol.\nIf carol is a friend of dave and eve is an enemy of frank and carol is an enemy of frank, then pencil is small.\nIf eve is happy and dave is a friend of frank and it is sunny, then eve is hungry.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol owns ball.\ngeorge is an enemy of eve.\nalice is sad.\ncarol is tall.\nbob is a sibling of frank.\neve is a friend of alice.\ncarol is a friend of frank.\nbob is a friend of carol.\neve is a friend of dave.\ngeorge is an enemy of dave.\ncarol is a friend of bob.\n\nQUESTION:\nIs carol is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(apple).",
    "c": "tall(bob) :- enemy(dave,frank).\nbig(apple) :- tall(bob).\nowns(frank,ball) :- big(apple).\ntall(dave) :- owns(frank,ball).\nowns(eve,book) :- sunny.\nowns(eve,pencil) :- owns(carol,ball), owns(frank,book), sad(dave).\nfriend(carol,eve) :- friend(eve,bob), hot.\nfriend(frank,george) :- likes(bob,book), big(phone).\nhungry(carol) :- hot, hungry(george), owns(dave,car).\nhungry(dave) :- owns(bob,car), cold.\nsmall(pencil) :- big(phone), wet(car).\nsibling(george,carol) :- likes(george,george), sibling(eve,alice), cold.\nsmall(pencil) :- friend(carol,dave), enemy(eve,frank), enemy(carol,frank).\nhungry(eve) :- happy(eve), friend(dave,frank), sunny.\nenemy(dave,frank).\nowns(carol,ball).\nenemy(george,eve).\nsad(alice).\ntall(carol).\nsibling(bob,frank).\nfriend(eve,alice).\nfriend(carol,frank).\nfriend(bob,carol).\nfriend(eve,dave).\nenemy(george,dave).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is an enemy of frank, then bob is tall.\nIf bob is tall, then apple is big.\nIf apple is big, then frank owns ball.\nIf frank owns ball, then dave is tall.\nIf it is sunny, then eve owns book.\nIf carol owns ball and frank owns book and dave is sad, then eve owns pencil.\nIf eve is a friend of bob and it is hot, then carol is a friend of eve.\nIf bob likes book and phone is big, then frank is a friend of george.\nIf it is hot and george is hungry and dave owns car, then carol is hungry.\nIf bob owns car and it is cold, then dave is hungry.\nIf phone is big and car is wet, then pencil is small.\nIf george likes george and eve is a sibling of alice and it is cold, then george is a sibling of carol.\nIf carol is a friend of dave and eve is an enemy of frank and carol is an enemy of frank, then pencil is small.\nIf eve is happy and dave is a friend of frank and it is sunny, then eve is hungry.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol owns ball.\ngeorge is an enemy of eve.\nalice is sad.\ncarol is tall.\nbob is a sibling of frank.\neve is a friend of alice.\ncarol is a friend of frank.\nbob is a friend of carol.\neve is a friend of dave.\ngeorge is an enemy of dave.\ncarol is a friend of bob.\n\nQUESTION:\nIs apple is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,george).",
    "c": "tall(bob) :- enemy(dave,frank).\nbig(apple) :- tall(bob).\nowns(frank,ball) :- big(apple).\ntall(dave) :- owns(frank,ball).\nowns(eve,book) :- sunny.\nowns(eve,pencil) :- owns(carol,ball), owns(frank,book), sad(dave).\nfriend(carol,eve) :- friend(eve,bob), hot.\nfriend(frank,george) :- likes(bob,book), big(phone).\nhungry(carol) :- hot, hungry(george), owns(dave,car).\nhungry(dave) :- owns(bob,car), cold.\nsmall(pencil) :- big(phone), wet(car).\nsibling(george,carol) :- likes(george,george), sibling(eve,alice), cold.\nsmall(pencil) :- friend(carol,dave), enemy(eve,frank), enemy(carol,frank).\nhungry(eve) :- happy(eve), friend(dave,frank), sunny.\nenemy(dave,frank).\nowns(carol,ball).\nenemy(george,eve).\nsad(alice).\ntall(carol).\nsibling(bob,frank).\nfriend(eve,alice).\nfriend(carol,frank).\nfriend(bob,carol).\nfriend(eve,dave).\nenemy(george,dave).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is an enemy of frank, then bob is tall.\nIf bob is tall, then apple is big.\nIf apple is big, then frank owns ball.\nIf frank owns ball, then dave is tall.\nIf it is sunny, then eve owns book.\nIf carol owns ball and frank owns book and dave is sad, then eve owns pencil.\nIf eve is a friend of bob and it is hot, then carol is a friend of eve.\nIf bob likes book and phone is big, then frank is a friend of george.\nIf it is hot and george is hungry and dave owns car, then carol is hungry.\nIf bob owns car and it is cold, then dave is hungry.\nIf phone is big and car is wet, then pencil is small.\nIf george likes george and eve is a sibling of alice and it is cold, then george is a sibling of carol.\nIf carol is a friend of dave and eve is an enemy of frank and carol is an enemy of frank, then pencil is small.\nIf eve is happy and dave is a friend of frank and it is sunny, then eve is hungry.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol owns ball.\ngeorge is an enemy of eve.\nalice is sad.\ncarol is tall.\nbob is a sibling of frank.\neve is a friend of alice.\ncarol is a friend of frank.\nbob is a friend of carol.\neve is a friend of dave.\ngeorge is an enemy of dave.\ncarol is a friend of bob.\n\nQUESTION:\nIs eve is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,book).",
    "c": "tall(bob) :- enemy(dave,frank).\nbig(apple) :- tall(bob).\nowns(frank,ball) :- big(apple).\ntall(dave) :- owns(frank,ball).\nowns(eve,book) :- sunny.\nowns(eve,pencil) :- owns(carol,ball), owns(frank,book), sad(dave).\nfriend(carol,eve) :- friend(eve,bob), hot.\nfriend(frank,george) :- likes(bob,book), big(phone).\nhungry(carol) :- hot, hungry(george), owns(dave,car).\nhungry(dave) :- owns(bob,car), cold.\nsmall(pencil) :- big(phone), wet(car).\nsibling(george,carol) :- likes(george,george), sibling(eve,alice), cold.\nsmall(pencil) :- friend(carol,dave), enemy(eve,frank), enemy(carol,frank).\nhungry(eve) :- happy(eve), friend(dave,frank), sunny.\nenemy(dave,frank).\nowns(carol,ball).\nenemy(george,eve).\nsad(alice).\ntall(carol).\nsibling(bob,frank).\nfriend(eve,alice).\nfriend(carol,frank).\nfriend(bob,carol).\nfriend(eve,dave).\nenemy(george,dave).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf dave is an enemy of frank, then bob is tall.\nIf bob is tall, then apple is big.\nIf apple is big, then frank owns ball.\nIf frank owns ball, then dave is tall.\nIf it is sunny, then eve owns book.\nIf carol owns ball and frank owns book and dave is sad, then eve owns pencil.\nIf eve is a friend of bob and it is hot, then carol is a friend of eve.\nIf bob likes book and phone is big, then frank is a friend of george.\nIf it is hot and george is hungry and dave owns car, then carol is hungry.\nIf bob owns car and it is cold, then dave is hungry.\nIf phone is big and car is wet, then pencil is small.\nIf george likes george and eve is a sibling of alice and it is cold, then george is a sibling of carol.\nIf carol is a friend of dave and eve is an enemy of frank and carol is an enemy of frank, then pencil is small.\nIf eve is happy and dave is a friend of frank and it is sunny, then eve is hungry.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol owns ball.\ngeorge is an enemy of eve.\nalice is sad.\ncarol is tall.\nbob is a sibling of frank.\neve is a friend of alice.\ncarol is a friend of frank.\nbob is a friend of carol.\neve is a friend of dave.\ngeorge is an enemy of dave.\ncarol is a friend of bob.\n\nQUESTION:\nIs bob likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "tall(bob) :- enemy(dave,frank).\nbig(apple) :- tall(bob).\nowns(frank,ball) :- big(apple).\ntall(dave) :- owns(frank,ball).\nowns(eve,book) :- sunny.\nowns(eve,pencil) :- owns(carol,ball), owns(frank,book), sad(dave).\nfriend(carol,eve) :- friend(eve,bob), hot.\nfriend(frank,george) :- likes(bob,book), big(phone).\nhungry(carol) :- hot, hungry(george), owns(dave,car).\nhungry(dave) :- owns(bob,car), cold.\nsmall(pencil) :- big(phone), wet(car).\nsibling(george,carol) :- likes(george,george), sibling(eve,alice), cold.\nsmall(pencil) :- friend(carol,dave), enemy(eve,frank), enemy(carol,frank).\nhungry(eve) :- happy(eve), friend(dave,frank), sunny.\nowns(carol,ball).\nenemy(george,eve).\nsad(alice).\ntall(carol).\nsibling(bob,frank).\nfriend(eve,alice).\nfriend(carol,frank).\nfriend(bob,carol).\nfriend(eve,dave).\nenemy(george,dave).\nfriend(carol,bob).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of frank, then bob is tall.\nIf bob is tall, then apple is big.\nIf apple is big, then frank owns ball.\nIf frank owns ball, then dave is tall.\nIf it is sunny, then eve owns book.\nIf carol owns ball and frank owns book and dave is sad, then eve owns pencil.\nIf eve is a friend of bob and it is hot, then carol is a friend of eve.\nIf bob likes book and phone is big, then frank is a friend of george.\nIf it is hot and george is hungry and dave owns car, then carol is hungry.\nIf bob owns car and it is cold, then dave is hungry.\nIf phone is big and car is wet, then pencil is small.\nIf george likes george and eve is a sibling of alice and it is cold, then george is a sibling of carol.\nIf carol is a friend of dave and eve is an enemy of frank and carol is an enemy of frank, then pencil is small.\nIf eve is happy and dave is a friend of frank and it is sunny, then eve is hungry.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol owns ball.\ngeorge is an enemy of eve.\nalice is sad.\ncarol is tall.\nbob is a sibling of frank.\neve is a friend of alice.\ncarol is a friend of frank.\nbob is a friend of carol.\neve is a friend of dave.\ngeorge is an enemy of dave.\ncarol is a friend of bob.\n\nOBSERVATION: dave is tall is true.\n\nQUESTION:\nCould dave is an enemy of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(carol,bob).",
    "c": "tall(bob) :- enemy(dave,frank).\nbig(apple) :- tall(bob).\nowns(frank,ball) :- big(apple).\ntall(dave) :- owns(frank,ball).\nowns(eve,book) :- sunny.\nowns(eve,pencil) :- owns(carol,ball), owns(frank,book), sad(dave).\nfriend(carol,eve) :- friend(eve,bob), hot.\nfriend(frank,george) :- likes(bob,book), big(phone).\nhungry(carol) :- hot, hungry(george), owns(dave,car).\nhungry(dave) :- owns(bob,car), cold.\nsmall(pencil) :- big(phone), wet(car).\nsibling(george,carol) :- likes(george,george), sibling(eve,alice), cold.\nsmall(pencil) :- friend(carol,dave), enemy(eve,frank), enemy(carol,frank).\nhungry(eve) :- happy(eve), friend(dave,frank), sunny.\nenemy(dave,frank).\nowns(carol,ball).\nenemy(george,eve).\nsad(alice).\ntall(carol).\nsibling(bob,frank).\nfriend(eve,alice).\nfriend(carol,frank).\nfriend(bob,carol).\nfriend(eve,dave).\nenemy(george,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of frank, then bob is tall.\nIf bob is tall, then apple is big.\nIf apple is big, then frank owns ball.\nIf frank owns ball, then dave is tall.\nIf it is sunny, then eve owns book.\nIf carol owns ball and frank owns book and dave is sad, then eve owns pencil.\nIf eve is a friend of bob and it is hot, then carol is a friend of eve.\nIf bob likes book and phone is big, then frank is a friend of george.\nIf it is hot and george is hungry and dave owns car, then carol is hungry.\nIf bob owns car and it is cold, then dave is hungry.\nIf phone is big and car is wet, then pencil is small.\nIf george likes george and eve is a sibling of alice and it is cold, then george is a sibling of carol.\nIf carol is a friend of dave and eve is an enemy of frank and carol is an enemy of frank, then pencil is small.\nIf eve is happy and dave is a friend of frank and it is sunny, then eve is hungry.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol owns ball.\ngeorge is an enemy of eve.\nalice is sad.\ncarol is tall.\nbob is a sibling of frank.\neve is a friend of alice.\ncarol is a friend of frank.\nbob is a friend of carol.\neve is a friend of dave.\ngeorge is an enemy of dave.\ncarol is a friend of bob.\n\nOBSERVATION: dave is tall is true.\n\nQUESTION:\nCould carol is a friend of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(eve,dave).",
    "c": "tall(bob) :- enemy(dave,frank).\nbig(apple) :- tall(bob).\nowns(frank,ball) :- big(apple).\ntall(dave) :- owns(frank,ball).\nowns(eve,book) :- sunny.\nowns(eve,pencil) :- owns(carol,ball), owns(frank,book), sad(dave).\nfriend(carol,eve) :- friend(eve,bob), hot.\nfriend(frank,george) :- likes(bob,book), big(phone).\nhungry(carol) :- hot, hungry(george), owns(dave,car).\nhungry(dave) :- owns(bob,car), cold.\nsmall(pencil) :- big(phone), wet(car).\nsibling(george,carol) :- likes(george,george), sibling(eve,alice), cold.\nsmall(pencil) :- friend(carol,dave), enemy(eve,frank), enemy(carol,frank).\nhungry(eve) :- happy(eve), friend(dave,frank), sunny.\nenemy(dave,frank).\nowns(carol,ball).\nenemy(george,eve).\nsad(alice).\ntall(carol).\nsibling(bob,frank).\nfriend(eve,alice).\nfriend(carol,frank).\nfriend(bob,carol).\nenemy(george,dave).\nfriend(carol,bob).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of frank, then bob is tall.\nIf bob is tall, then apple is big.\nIf apple is big, then frank owns ball.\nIf frank owns ball, then dave is tall.\nIf it is sunny, then eve owns book.\nIf carol owns ball and frank owns book and dave is sad, then eve owns pencil.\nIf eve is a friend of bob and it is hot, then carol is a friend of eve.\nIf bob likes book and phone is big, then frank is a friend of george.\nIf it is hot and george is hungry and dave owns car, then carol is hungry.\nIf bob owns car and it is cold, then dave is hungry.\nIf phone is big and car is wet, then pencil is small.\nIf george likes george and eve is a sibling of alice and it is cold, then george is a sibling of carol.\nIf carol is a friend of dave and eve is an enemy of frank and carol is an enemy of frank, then pencil is small.\nIf eve is happy and dave is a friend of frank and it is sunny, then eve is hungry.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol owns ball.\ngeorge is an enemy of eve.\nalice is sad.\ncarol is tall.\nbob is a sibling of frank.\neve is a friend of alice.\ncarol is a friend of frank.\nbob is a friend of carol.\neve is a friend of dave.\ngeorge is an enemy of dave.\ncarol is a friend of bob.\n\nOBSERVATION: dave is tall is true.\n\nQUESTION:\nCould eve is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(carol,dave).",
    "c": "tall(bob) :- enemy(george,george).\nsunny :- tall(bob).\nsmall(phone) :- sunny.\ncold :- small(phone).\nsmall(phone) :- cold.\nenemy(frank,george) :- small(phone).\nsibling(bob,dave) :- tall(alice).\nsibling(eve,dave) :- parent(dave,alice), tall(carol).\nsmall(phone) :- tall(eve).\nsmall(pencil) :- parent(carol,dave), small(car), friend(dave,bob).\nhungry(dave) :- hungry(bob).\nhappy(carol) :- happy(eve), owns(carol,book), enemy(frank,alice).\nhungry(carol) :- hungry(frank).\nhungry(dave) :- big(pencil), hungry(carol).\nenemy(george,george).\nenemy(carol,dave).\nfriend(dave,george).\nowns(carol,apple).\nenemy(bob,dave).\nsibling(alice,dave).\nenemy(alice,carol).\nparent(eve,bob).\nowns(alice,pencil).\nparent(dave,george).\nfriend(alice,eve).\nowns(carol,car).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then phone is small.\nIf phone is small, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then frank is an enemy of george.\nIf alice is tall, then bob is a sibling of dave.\nIf dave is a parent of alice and carol is tall, then eve is a sibling of dave.\nIf eve is tall, then phone is small.\nIf carol is a parent of dave and car is small and dave is a friend of bob, then pencil is small.\nIf bob is hungry, then dave is hungry.\nIf eve is happy and carol owns book and frank is an enemy of alice, then carol is happy.\nIf frank is hungry, then carol is hungry.\nIf pencil is big and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ngeorge is an enemy of george.\ncarol is an enemy of dave.\ndave is a friend of george.\ncarol owns apple.\nbob is an enemy of dave.\nalice is a sibling of dave.\nalice is an enemy of carol.\neve is a parent of bob.\nalice owns pencil.\ndave is a parent of george.\nalice is a friend of eve.\ncarol owns car.\n\nQUESTION:\nIs carol is an enemy of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,george).",
    "c": "tall(bob) :- enemy(george,george).\nsunny :- tall(bob).\nsmall(phone) :- sunny.\ncold :- small(phone).\nsmall(phone) :- cold.\nenemy(frank,george) :- small(phone).\nsibling(bob,dave) :- tall(alice).\nsibling(eve,dave) :- parent(dave,alice), tall(carol).\nsmall(phone) :- tall(eve).\nsmall(pencil) :- parent(carol,dave), small(car), friend(dave,bob).\nhungry(dave) :- hungry(bob).\nhappy(carol) :- happy(eve), owns(carol,book), enemy(frank,alice).\nhungry(carol) :- hungry(frank).\nhungry(dave) :- big(pencil), hungry(carol).\nenemy(george,george).\nenemy(carol,dave).\nfriend(dave,george).\nowns(carol,apple).\nenemy(bob,dave).\nsibling(alice,dave).\nenemy(alice,carol).\nparent(eve,bob).\nowns(alice,pencil).\nparent(dave,george).\nfriend(alice,eve).\nowns(carol,car).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then phone is small.\nIf phone is small, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then frank is an enemy of george.\nIf alice is tall, then bob is a sibling of dave.\nIf dave is a parent of alice and carol is tall, then eve is a sibling of dave.\nIf eve is tall, then phone is small.\nIf carol is a parent of dave and car is small and dave is a friend of bob, then pencil is small.\nIf bob is hungry, then dave is hungry.\nIf eve is happy and carol owns book and frank is an enemy of alice, then carol is happy.\nIf frank is hungry, then carol is hungry.\nIf pencil is big and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ngeorge is an enemy of george.\ncarol is an enemy of dave.\ndave is a friend of george.\ncarol owns apple.\nbob is an enemy of dave.\nalice is a sibling of dave.\nalice is an enemy of carol.\neve is a parent of bob.\nalice owns pencil.\ndave is a parent of george.\nalice is a friend of eve.\ncarol owns car.\n\nQUESTION:\nIs dave is a friend of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "tall(bob) :- enemy(george,george).\nsunny :- tall(bob).\nsmall(phone) :- sunny.\ncold :- small(phone).\nsmall(phone) :- cold.\nenemy(frank,george) :- small(phone).\nsibling(bob,dave) :- tall(alice).\nsibling(eve,dave) :- parent(dave,alice), tall(carol).\nsmall(phone) :- tall(eve).\nsmall(pencil) :- parent(carol,dave), small(car), friend(dave,bob).\nhungry(dave) :- hungry(bob).\nhappy(carol) :- happy(eve), owns(carol,book), enemy(frank,alice).\nhungry(carol) :- hungry(frank).\nhungry(dave) :- big(pencil), hungry(carol).\nenemy(george,george).\nenemy(carol,dave).\nfriend(dave,george).\nowns(carol,apple).\nenemy(bob,dave).\nsibling(alice,dave).\nenemy(alice,carol).\nparent(eve,bob).\nowns(alice,pencil).\nparent(dave,george).\nfriend(alice,eve).\nowns(carol,car).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then phone is small.\nIf phone is small, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then frank is an enemy of george.\nIf alice is tall, then bob is a sibling of dave.\nIf dave is a parent of alice and carol is tall, then eve is a sibling of dave.\nIf eve is tall, then phone is small.\nIf carol is a parent of dave and car is small and dave is a friend of bob, then pencil is small.\nIf bob is hungry, then dave is hungry.\nIf eve is happy and carol owns book and frank is an enemy of alice, then carol is happy.\nIf frank is hungry, then carol is hungry.\nIf pencil is big and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ngeorge is an enemy of george.\ncarol is an enemy of dave.\ndave is a friend of george.\ncarol owns apple.\nbob is an enemy of dave.\nalice is a sibling of dave.\nalice is an enemy of carol.\neve is a parent of bob.\nalice owns pencil.\ndave is a parent of george.\nalice is a friend of eve.\ncarol owns car.\n\nQUESTION:\nIs alice is a friend of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,carol).",
    "c": "tall(bob) :- enemy(george,george).\nsunny :- tall(bob).\nsmall(phone) :- sunny.\ncold :- small(phone).\nsmall(phone) :- cold.\nenemy(frank,george) :- small(phone).\nsibling(bob,dave) :- tall(alice).\nsibling(eve,dave) :- parent(dave,alice), tall(carol).\nsmall(phone) :- tall(eve).\nsmall(pencil) :- parent(carol,dave), small(car), friend(dave,bob).\nhungry(dave) :- hungry(bob).\nhappy(carol) :- happy(eve), owns(carol,book), enemy(frank,alice).\nhungry(carol) :- hungry(frank).\nhungry(dave) :- big(pencil), hungry(carol).\nenemy(george,george).\nenemy(carol,dave).\nfriend(dave,george).\nowns(carol,apple).\nenemy(bob,dave).\nsibling(alice,dave).\nenemy(alice,carol).\nparent(eve,bob).\nowns(alice,pencil).\nparent(dave,george).\nfriend(alice,eve).\nowns(carol,car).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then phone is small.\nIf phone is small, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then frank is an enemy of george.\nIf alice is tall, then bob is a sibling of dave.\nIf dave is a parent of alice and carol is tall, then eve is a sibling of dave.\nIf eve is tall, then phone is small.\nIf carol is a parent of dave and car is small and dave is a friend of bob, then pencil is small.\nIf bob is hungry, then dave is hungry.\nIf eve is happy and carol owns book and frank is an enemy of alice, then carol is happy.\nIf frank is hungry, then carol is hungry.\nIf pencil is big and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ngeorge is an enemy of george.\ncarol is an enemy of dave.\ndave is a friend of george.\ncarol owns apple.\nbob is an enemy of dave.\nalice is a sibling of dave.\nalice is an enemy of carol.\neve is a parent of bob.\nalice owns pencil.\ndave is a parent of george.\nalice is a friend of eve.\ncarol owns car.\n\nQUESTION:\nIs eve is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,george).",
    "c": "tall(bob) :- enemy(george,george).\nsunny :- tall(bob).\nsmall(phone) :- sunny.\ncold :- small(phone).\nsmall(phone) :- cold.\nenemy(frank,george) :- small(phone).\nsibling(bob,dave) :- tall(alice).\nsibling(eve,dave) :- parent(dave,alice), tall(carol).\nsmall(phone) :- tall(eve).\nsmall(pencil) :- parent(carol,dave), small(car), friend(dave,bob).\nhungry(dave) :- hungry(bob).\nhappy(carol) :- happy(eve), owns(carol,book), enemy(frank,alice).\nhungry(carol) :- hungry(frank).\nhungry(dave) :- big(pencil), hungry(carol).\nenemy(george,george).\nenemy(carol,dave).\nfriend(dave,george).\nowns(carol,apple).\nenemy(bob,dave).\nsibling(alice,dave).\nenemy(alice,carol).\nparent(eve,bob).\nowns(alice,pencil).\nparent(dave,george).\nfriend(alice,eve).\nowns(carol,car).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then phone is small.\nIf phone is small, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then frank is an enemy of george.\nIf alice is tall, then bob is a sibling of dave.\nIf dave is a parent of alice and carol is tall, then eve is a sibling of dave.\nIf eve is tall, then phone is small.\nIf carol is a parent of dave and car is small and dave is a friend of bob, then pencil is small.\nIf bob is hungry, then dave is hungry.\nIf eve is happy and carol owns book and frank is an enemy of alice, then carol is happy.\nIf frank is hungry, then carol is hungry.\nIf pencil is big and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ngeorge is an enemy of george.\ncarol is an enemy of dave.\ndave is a friend of george.\ncarol owns apple.\nbob is an enemy of dave.\nalice is a sibling of dave.\nalice is an enemy of carol.\neve is a parent of bob.\nalice owns pencil.\ndave is a parent of george.\nalice is a friend of eve.\ncarol owns car.\n\nQUESTION:\nIs alice is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,george).",
    "c": "tall(bob) :- enemy(george,george).\nsunny :- tall(bob).\nsmall(phone) :- sunny.\ncold :- small(phone).\nsmall(phone) :- cold.\nenemy(frank,george) :- small(phone).\nsibling(bob,dave) :- tall(alice).\nsibling(eve,dave) :- parent(dave,alice), tall(carol).\nsmall(phone) :- tall(eve).\nsmall(pencil) :- parent(carol,dave), small(car), friend(dave,bob).\nhungry(dave) :- hungry(bob).\nhappy(carol) :- happy(eve), owns(carol,book), enemy(frank,alice).\nhungry(carol) :- hungry(frank).\nhungry(dave) :- big(pencil), hungry(carol).\nenemy(carol,dave).\nfriend(dave,george).\nowns(carol,apple).\nenemy(bob,dave).\nsibling(alice,dave).\nenemy(alice,carol).\nparent(eve,bob).\nowns(alice,pencil).\nparent(dave,george).\nfriend(alice,eve).\nowns(carol,car).",
    "natural language": "You are given the following rules:\nIf george is an enemy of george, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then phone is small.\nIf phone is small, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then frank is an enemy of george.\nIf alice is tall, then bob is a sibling of dave.\nIf dave is a parent of alice and carol is tall, then eve is a sibling of dave.\nIf eve is tall, then phone is small.\nIf carol is a parent of dave and car is small and dave is a friend of bob, then pencil is small.\nIf bob is hungry, then dave is hungry.\nIf eve is happy and carol owns book and frank is an enemy of alice, then carol is happy.\nIf frank is hungry, then carol is hungry.\nIf pencil is big and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ngeorge is an enemy of george.\ncarol is an enemy of dave.\ndave is a friend of george.\ncarol owns apple.\nbob is an enemy of dave.\nalice is a sibling of dave.\nalice is an enemy of carol.\neve is a parent of bob.\nalice owns pencil.\ndave is a parent of george.\nalice is a friend of eve.\ncarol owns car.\n\nOBSERVATION: frank is an enemy of george is true.\n\nQUESTION:\nCould george is an enemy of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(dave,george).",
    "c": "tall(bob) :- enemy(george,george).\nsunny :- tall(bob).\nsmall(phone) :- sunny.\ncold :- small(phone).\nsmall(phone) :- cold.\nenemy(frank,george) :- small(phone).\nsibling(bob,dave) :- tall(alice).\nsibling(eve,dave) :- parent(dave,alice), tall(carol).\nsmall(phone) :- tall(eve).\nsmall(pencil) :- parent(carol,dave), small(car), friend(dave,bob).\nhungry(dave) :- hungry(bob).\nhappy(carol) :- happy(eve), owns(carol,book), enemy(frank,alice).\nhungry(carol) :- hungry(frank).\nhungry(dave) :- big(pencil), hungry(carol).\nenemy(george,george).\nenemy(carol,dave).\nowns(carol,apple).\nenemy(bob,dave).\nsibling(alice,dave).\nenemy(alice,carol).\nparent(eve,bob).\nowns(alice,pencil).\nparent(dave,george).\nfriend(alice,eve).\nowns(carol,car).",
    "natural language": "You are given the following rules:\nIf george is an enemy of george, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then phone is small.\nIf phone is small, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then frank is an enemy of george.\nIf alice is tall, then bob is a sibling of dave.\nIf dave is a parent of alice and carol is tall, then eve is a sibling of dave.\nIf eve is tall, then phone is small.\nIf carol is a parent of dave and car is small and dave is a friend of bob, then pencil is small.\nIf bob is hungry, then dave is hungry.\nIf eve is happy and carol owns book and frank is an enemy of alice, then carol is happy.\nIf frank is hungry, then carol is hungry.\nIf pencil is big and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ngeorge is an enemy of george.\ncarol is an enemy of dave.\ndave is a friend of george.\ncarol owns apple.\nbob is an enemy of dave.\nalice is a sibling of dave.\nalice is an enemy of carol.\neve is a parent of bob.\nalice owns pencil.\ndave is a parent of george.\nalice is a friend of eve.\ncarol owns car.\n\nOBSERVATION: frank is an enemy of george is true.\n\nQUESTION:\nCould dave is a friend of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "tall(bob) :- enemy(george,george).\nsunny :- tall(bob).\nsmall(phone) :- sunny.\ncold :- small(phone).\nsmall(phone) :- cold.\nenemy(frank,george) :- small(phone).\nsibling(bob,dave) :- tall(alice).\nsibling(eve,dave) :- parent(dave,alice), tall(carol).\nsmall(phone) :- tall(eve).\nsmall(pencil) :- parent(carol,dave), small(car), friend(dave,bob).\nhungry(dave) :- hungry(bob).\nhappy(carol) :- happy(eve), owns(carol,book), enemy(frank,alice).\nhungry(carol) :- hungry(frank).\nhungry(dave) :- big(pencil), hungry(carol).\nenemy(george,george).\nenemy(carol,dave).\nfriend(dave,george).\nowns(carol,apple).\nenemy(bob,dave).\nsibling(alice,dave).\nenemy(alice,carol).\nparent(eve,bob).\nowns(alice,pencil).\nparent(dave,george).\nowns(carol,car).",
    "natural language": "You are given the following rules:\nIf george is an enemy of george, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then phone is small.\nIf phone is small, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then frank is an enemy of george.\nIf alice is tall, then bob is a sibling of dave.\nIf dave is a parent of alice and carol is tall, then eve is a sibling of dave.\nIf eve is tall, then phone is small.\nIf carol is a parent of dave and car is small and dave is a friend of bob, then pencil is small.\nIf bob is hungry, then dave is hungry.\nIf eve is happy and carol owns book and frank is an enemy of alice, then carol is happy.\nIf frank is hungry, then carol is hungry.\nIf pencil is big and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ngeorge is an enemy of george.\ncarol is an enemy of dave.\ndave is a friend of george.\ncarol owns apple.\nbob is an enemy of dave.\nalice is a sibling of dave.\nalice is an enemy of carol.\neve is a parent of bob.\nalice owns pencil.\ndave is a parent of george.\nalice is a friend of eve.\ncarol owns car.\n\nOBSERVATION: frank is an enemy of george is true.\n\nQUESTION:\nCould alice is a friend of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,phone).",
    "c": "dislikes(bob,apple) :- likes(george,george).\nsunny :- dislikes(bob,apple).\nowns(alice,car) :- sunny.\nsmall(phone) :- owns(alice,car).\nfriend(bob,bob) :- small(phone).\nfriend(alice,alice) :- friend(bob,bob).\nwet(pencil) :- wet(book), friend(eve,eve), dislikes(bob,eve).\nwet(phone) :- owns(george,ball), small(pencil).\nsmall(book) :- dislikes(bob,carol), cold, owns(alice,apple).\nsmall(ball) :- sunny, sibling(eve,bob).\nlikes(frank,car) :- parent(frank,george), big(phone), sunny.\nlikes(eve,carol) :- happy(alice), small(phone), sad(george).\nwet(phone) :- likes(frank,book), big(ball).\nsmall(apple) :- likes(eve,frank), tall(eve).\nlikes(george,george).\nsibling(frank,carol).\ndislikes(frank,george).\ndislikes(dave,ball).\nowns(dave,book).\nlikes(carol,ball).\nlikes(bob,frank).\nowns(dave,phone).\ndislikes(bob,george).\nsibling(eve,frank).\nfriend(bob,dave).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf george likes george, then bob dislikes apple.\nIf bob dislikes apple, then it is sunny.\nIf it is sunny, then alice owns car.\nIf alice owns car, then phone is small.\nIf phone is small, then bob is a friend of bob.\nIf bob is a friend of bob, then alice is a friend of alice.\nIf book is wet and eve is a friend of eve and bob dislikes eve, then pencil is wet.\nIf george owns ball and pencil is small, then phone is wet.\nIf bob dislikes carol and it is cold and alice owns apple, then book is small.\nIf it is sunny and eve is a sibling of bob, then ball is small.\nIf frank is a parent of george and phone is big and it is sunny, then frank likes car.\nIf alice is happy and phone is small and george is sad, then eve likes carol.\nIf frank likes book and ball is big, then phone is wet.\nIf eve likes frank and eve is tall, then apple is small.\n\nAnd the following facts:\ngeorge likes george.\nfrank is a sibling of carol.\nfrank dislikes george.\ndave dislikes ball.\ndave owns book.\ncarol likes ball.\nbob likes frank.\ndave owns phone.\nbob dislikes george.\neve is a sibling of frank.\nbob is a friend of dave.\ngeorge is a parent of dave.\n\nQUESTION:\nIs dave owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(phone).",
    "c": "dislikes(bob,apple) :- likes(george,george).\nsunny :- dislikes(bob,apple).\nowns(alice,car) :- sunny.\nsmall(phone) :- owns(alice,car).\nfriend(bob,bob) :- small(phone).\nfriend(alice,alice) :- friend(bob,bob).\nwet(pencil) :- wet(book), friend(eve,eve), dislikes(bob,eve).\nwet(phone) :- owns(george,ball), small(pencil).\nsmall(book) :- dislikes(bob,carol), cold, owns(alice,apple).\nsmall(ball) :- sunny, sibling(eve,bob).\nlikes(frank,car) :- parent(frank,george), big(phone), sunny.\nlikes(eve,carol) :- happy(alice), small(phone), sad(george).\nwet(phone) :- likes(frank,book), big(ball).\nsmall(apple) :- likes(eve,frank), tall(eve).\nlikes(george,george).\nsibling(frank,carol).\ndislikes(frank,george).\ndislikes(dave,ball).\nowns(dave,book).\nlikes(carol,ball).\nlikes(bob,frank).\nowns(dave,phone).\ndislikes(bob,george).\nsibling(eve,frank).\nfriend(bob,dave).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf george likes george, then bob dislikes apple.\nIf bob dislikes apple, then it is sunny.\nIf it is sunny, then alice owns car.\nIf alice owns car, then phone is small.\nIf phone is small, then bob is a friend of bob.\nIf bob is a friend of bob, then alice is a friend of alice.\nIf book is wet and eve is a friend of eve and bob dislikes eve, then pencil is wet.\nIf george owns ball and pencil is small, then phone is wet.\nIf bob dislikes carol and it is cold and alice owns apple, then book is small.\nIf it is sunny and eve is a sibling of bob, then ball is small.\nIf frank is a parent of george and phone is big and it is sunny, then frank likes car.\nIf alice is happy and phone is small and george is sad, then eve likes carol.\nIf frank likes book and ball is big, then phone is wet.\nIf eve likes frank and eve is tall, then apple is small.\n\nAnd the following facts:\ngeorge likes george.\nfrank is a sibling of carol.\nfrank dislikes george.\ndave dislikes ball.\ndave owns book.\ncarol likes ball.\nbob likes frank.\ndave owns phone.\nbob dislikes george.\neve is a sibling of frank.\nbob is a friend of dave.\ngeorge is a parent of dave.\n\nQUESTION:\nIs phone is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,book).",
    "c": "dislikes(bob,apple) :- likes(george,george).\nsunny :- dislikes(bob,apple).\nowns(alice,car) :- sunny.\nsmall(phone) :- owns(alice,car).\nfriend(bob,bob) :- small(phone).\nfriend(alice,alice) :- friend(bob,bob).\nwet(pencil) :- wet(book), friend(eve,eve), dislikes(bob,eve).\nwet(phone) :- owns(george,ball), small(pencil).\nsmall(book) :- dislikes(bob,carol), cold, owns(alice,apple).\nsmall(ball) :- sunny, sibling(eve,bob).\nlikes(frank,car) :- parent(frank,george), big(phone), sunny.\nlikes(eve,carol) :- happy(alice), small(phone), sad(george).\nwet(phone) :- likes(frank,book), big(ball).\nsmall(apple) :- likes(eve,frank), tall(eve).\nlikes(george,george).\nsibling(frank,carol).\ndislikes(frank,george).\ndislikes(dave,ball).\nowns(dave,book).\nlikes(carol,ball).\nlikes(bob,frank).\nowns(dave,phone).\ndislikes(bob,george).\nsibling(eve,frank).\nfriend(bob,dave).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf george likes george, then bob dislikes apple.\nIf bob dislikes apple, then it is sunny.\nIf it is sunny, then alice owns car.\nIf alice owns car, then phone is small.\nIf phone is small, then bob is a friend of bob.\nIf bob is a friend of bob, then alice is a friend of alice.\nIf book is wet and eve is a friend of eve and bob dislikes eve, then pencil is wet.\nIf george owns ball and pencil is small, then phone is wet.\nIf bob dislikes carol and it is cold and alice owns apple, then book is small.\nIf it is sunny and eve is a sibling of bob, then ball is small.\nIf frank is a parent of george and phone is big and it is sunny, then frank likes car.\nIf alice is happy and phone is small and george is sad, then eve likes carol.\nIf frank likes book and ball is big, then phone is wet.\nIf eve likes frank and eve is tall, then apple is small.\n\nAnd the following facts:\ngeorge likes george.\nfrank is a sibling of carol.\nfrank dislikes george.\ndave dislikes ball.\ndave owns book.\ncarol likes ball.\nbob likes frank.\ndave owns phone.\nbob dislikes george.\neve is a sibling of frank.\nbob is a friend of dave.\ngeorge is a parent of dave.\n\nQUESTION:\nIs dave owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,dave).",
    "c": "dislikes(bob,apple) :- likes(george,george).\nsunny :- dislikes(bob,apple).\nowns(alice,car) :- sunny.\nsmall(phone) :- owns(alice,car).\nfriend(bob,bob) :- small(phone).\nfriend(alice,alice) :- friend(bob,bob).\nwet(pencil) :- wet(book), friend(eve,eve), dislikes(bob,eve).\nwet(phone) :- owns(george,ball), small(pencil).\nsmall(book) :- dislikes(bob,carol), cold, owns(alice,apple).\nsmall(ball) :- sunny, sibling(eve,bob).\nlikes(frank,car) :- parent(frank,george), big(phone), sunny.\nlikes(eve,carol) :- happy(alice), small(phone), sad(george).\nwet(phone) :- likes(frank,book), big(ball).\nsmall(apple) :- likes(eve,frank), tall(eve).\nlikes(george,george).\nsibling(frank,carol).\ndislikes(frank,george).\ndislikes(dave,ball).\nowns(dave,book).\nlikes(carol,ball).\nlikes(bob,frank).\nowns(dave,phone).\ndislikes(bob,george).\nsibling(eve,frank).\nfriend(bob,dave).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf george likes george, then bob dislikes apple.\nIf bob dislikes apple, then it is sunny.\nIf it is sunny, then alice owns car.\nIf alice owns car, then phone is small.\nIf phone is small, then bob is a friend of bob.\nIf bob is a friend of bob, then alice is a friend of alice.\nIf book is wet and eve is a friend of eve and bob dislikes eve, then pencil is wet.\nIf george owns ball and pencil is small, then phone is wet.\nIf bob dislikes carol and it is cold and alice owns apple, then book is small.\nIf it is sunny and eve is a sibling of bob, then ball is small.\nIf frank is a parent of george and phone is big and it is sunny, then frank likes car.\nIf alice is happy and phone is small and george is sad, then eve likes carol.\nIf frank likes book and ball is big, then phone is wet.\nIf eve likes frank and eve is tall, then apple is small.\n\nAnd the following facts:\ngeorge likes george.\nfrank is a sibling of carol.\nfrank dislikes george.\ndave dislikes ball.\ndave owns book.\ncarol likes ball.\nbob likes frank.\ndave owns phone.\nbob dislikes george.\neve is a sibling of frank.\nbob is a friend of dave.\ngeorge is a parent of dave.\n\nQUESTION:\nIs george is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,frank).",
    "c": "dislikes(bob,apple) :- likes(george,george).\nsunny :- dislikes(bob,apple).\nowns(alice,car) :- sunny.\nsmall(phone) :- owns(alice,car).\nfriend(bob,bob) :- small(phone).\nfriend(alice,alice) :- friend(bob,bob).\nwet(pencil) :- wet(book), friend(eve,eve), dislikes(bob,eve).\nwet(phone) :- owns(george,ball), small(pencil).\nsmall(book) :- dislikes(bob,carol), cold, owns(alice,apple).\nsmall(ball) :- sunny, sibling(eve,bob).\nlikes(frank,car) :- parent(frank,george), big(phone), sunny.\nlikes(eve,carol) :- happy(alice), small(phone), sad(george).\nwet(phone) :- likes(frank,book), big(ball).\nsmall(apple) :- likes(eve,frank), tall(eve).\nlikes(george,george).\nsibling(frank,carol).\ndislikes(frank,george).\ndislikes(dave,ball).\nowns(dave,book).\nlikes(carol,ball).\nlikes(bob,frank).\nowns(dave,phone).\ndislikes(bob,george).\nsibling(eve,frank).\nfriend(bob,dave).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf george likes george, then bob dislikes apple.\nIf bob dislikes apple, then it is sunny.\nIf it is sunny, then alice owns car.\nIf alice owns car, then phone is small.\nIf phone is small, then bob is a friend of bob.\nIf bob is a friend of bob, then alice is a friend of alice.\nIf book is wet and eve is a friend of eve and bob dislikes eve, then pencil is wet.\nIf george owns ball and pencil is small, then phone is wet.\nIf bob dislikes carol and it is cold and alice owns apple, then book is small.\nIf it is sunny and eve is a sibling of bob, then ball is small.\nIf frank is a parent of george and phone is big and it is sunny, then frank likes car.\nIf alice is happy and phone is small and george is sad, then eve likes carol.\nIf frank likes book and ball is big, then phone is wet.\nIf eve likes frank and eve is tall, then apple is small.\n\nAnd the following facts:\ngeorge likes george.\nfrank is a sibling of carol.\nfrank dislikes george.\ndave dislikes ball.\ndave owns book.\ncarol likes ball.\nbob likes frank.\ndave owns phone.\nbob dislikes george.\neve is a sibling of frank.\nbob is a friend of dave.\ngeorge is a parent of dave.\n\nQUESTION:\nIs eve likes frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,george).",
    "c": "dislikes(bob,apple) :- likes(george,george).\nsunny :- dislikes(bob,apple).\nowns(alice,car) :- sunny.\nsmall(phone) :- owns(alice,car).\nfriend(bob,bob) :- small(phone).\nfriend(alice,alice) :- friend(bob,bob).\nwet(pencil) :- wet(book), friend(eve,eve), dislikes(bob,eve).\nwet(phone) :- owns(george,ball), small(pencil).\nsmall(book) :- dislikes(bob,carol), cold, owns(alice,apple).\nsmall(ball) :- sunny, sibling(eve,bob).\nlikes(frank,car) :- parent(frank,george), big(phone), sunny.\nlikes(eve,carol) :- happy(alice), small(phone), sad(george).\nwet(phone) :- likes(frank,book), big(ball).\nsmall(apple) :- likes(eve,frank), tall(eve).\nsibling(frank,carol).\ndislikes(frank,george).\ndislikes(dave,ball).\nowns(dave,book).\nlikes(carol,ball).\nlikes(bob,frank).\nowns(dave,phone).\ndislikes(bob,george).\nsibling(eve,frank).\nfriend(bob,dave).\nparent(george,dave).",
    "natural language": "You are given the following rules:\nIf george likes george, then bob dislikes apple.\nIf bob dislikes apple, then it is sunny.\nIf it is sunny, then alice owns car.\nIf alice owns car, then phone is small.\nIf phone is small, then bob is a friend of bob.\nIf bob is a friend of bob, then alice is a friend of alice.\nIf book is wet and eve is a friend of eve and bob dislikes eve, then pencil is wet.\nIf george owns ball and pencil is small, then phone is wet.\nIf bob dislikes carol and it is cold and alice owns apple, then book is small.\nIf it is sunny and eve is a sibling of bob, then ball is small.\nIf frank is a parent of george and phone is big and it is sunny, then frank likes car.\nIf alice is happy and phone is small and george is sad, then eve likes carol.\nIf frank likes book and ball is big, then phone is wet.\nIf eve likes frank and eve is tall, then apple is small.\n\nAnd the following facts:\ngeorge likes george.\nfrank is a sibling of carol.\nfrank dislikes george.\ndave dislikes ball.\ndave owns book.\ncarol likes ball.\nbob likes frank.\ndave owns phone.\nbob dislikes george.\neve is a sibling of frank.\nbob is a friend of dave.\ngeorge is a parent of dave.\n\nOBSERVATION: alice is a friend of alice is true.\n\nQUESTION:\nCould george likes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,phone).",
    "c": "dislikes(bob,apple) :- likes(george,george).\nsunny :- dislikes(bob,apple).\nowns(alice,car) :- sunny.\nsmall(phone) :- owns(alice,car).\nfriend(bob,bob) :- small(phone).\nfriend(alice,alice) :- friend(bob,bob).\nwet(pencil) :- wet(book), friend(eve,eve), dislikes(bob,eve).\nwet(phone) :- owns(george,ball), small(pencil).\nsmall(book) :- dislikes(bob,carol), cold, owns(alice,apple).\nsmall(ball) :- sunny, sibling(eve,bob).\nlikes(frank,car) :- parent(frank,george), big(phone), sunny.\nlikes(eve,carol) :- happy(alice), small(phone), sad(george).\nwet(phone) :- likes(frank,book), big(ball).\nsmall(apple) :- likes(eve,frank), tall(eve).\nlikes(george,george).\nsibling(frank,carol).\ndislikes(frank,george).\ndislikes(dave,ball).\nowns(dave,book).\nlikes(carol,ball).\nlikes(bob,frank).\ndislikes(bob,george).\nsibling(eve,frank).\nfriend(bob,dave).\nparent(george,dave).",
    "natural language": "You are given the following rules:\nIf george likes george, then bob dislikes apple.\nIf bob dislikes apple, then it is sunny.\nIf it is sunny, then alice owns car.\nIf alice owns car, then phone is small.\nIf phone is small, then bob is a friend of bob.\nIf bob is a friend of bob, then alice is a friend of alice.\nIf book is wet and eve is a friend of eve and bob dislikes eve, then pencil is wet.\nIf george owns ball and pencil is small, then phone is wet.\nIf bob dislikes carol and it is cold and alice owns apple, then book is small.\nIf it is sunny and eve is a sibling of bob, then ball is small.\nIf frank is a parent of george and phone is big and it is sunny, then frank likes car.\nIf alice is happy and phone is small and george is sad, then eve likes carol.\nIf frank likes book and ball is big, then phone is wet.\nIf eve likes frank and eve is tall, then apple is small.\n\nAnd the following facts:\ngeorge likes george.\nfrank is a sibling of carol.\nfrank dislikes george.\ndave dislikes ball.\ndave owns book.\ncarol likes ball.\nbob likes frank.\ndave owns phone.\nbob dislikes george.\neve is a sibling of frank.\nbob is a friend of dave.\ngeorge is a parent of dave.\n\nOBSERVATION: alice is a friend of alice is true.\n\nQUESTION:\nCould dave owns phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,ball).",
    "c": "dislikes(bob,apple) :- likes(george,george).\nsunny :- dislikes(bob,apple).\nowns(alice,car) :- sunny.\nsmall(phone) :- owns(alice,car).\nfriend(bob,bob) :- small(phone).\nfriend(alice,alice) :- friend(bob,bob).\nwet(pencil) :- wet(book), friend(eve,eve), dislikes(bob,eve).\nwet(phone) :- owns(george,ball), small(pencil).\nsmall(book) :- dislikes(bob,carol), cold, owns(alice,apple).\nsmall(ball) :- sunny, sibling(eve,bob).\nlikes(frank,car) :- parent(frank,george), big(phone), sunny.\nlikes(eve,carol) :- happy(alice), small(phone), sad(george).\nwet(phone) :- likes(frank,book), big(ball).\nsmall(apple) :- likes(eve,frank), tall(eve).\nlikes(george,george).\nsibling(frank,carol).\ndislikes(frank,george).\ndislikes(dave,ball).\nowns(dave,book).\nlikes(bob,frank).\nowns(dave,phone).\ndislikes(bob,george).\nsibling(eve,frank).\nfriend(bob,dave).\nparent(george,dave).",
    "natural language": "You are given the following rules:\nIf george likes george, then bob dislikes apple.\nIf bob dislikes apple, then it is sunny.\nIf it is sunny, then alice owns car.\nIf alice owns car, then phone is small.\nIf phone is small, then bob is a friend of bob.\nIf bob is a friend of bob, then alice is a friend of alice.\nIf book is wet and eve is a friend of eve and bob dislikes eve, then pencil is wet.\nIf george owns ball and pencil is small, then phone is wet.\nIf bob dislikes carol and it is cold and alice owns apple, then book is small.\nIf it is sunny and eve is a sibling of bob, then ball is small.\nIf frank is a parent of george and phone is big and it is sunny, then frank likes car.\nIf alice is happy and phone is small and george is sad, then eve likes carol.\nIf frank likes book and ball is big, then phone is wet.\nIf eve likes frank and eve is tall, then apple is small.\n\nAnd the following facts:\ngeorge likes george.\nfrank is a sibling of carol.\nfrank dislikes george.\ndave dislikes ball.\ndave owns book.\ncarol likes ball.\nbob likes frank.\ndave owns phone.\nbob dislikes george.\neve is a sibling of frank.\nbob is a friend of dave.\ngeorge is a parent of dave.\n\nOBSERVATION: alice is a friend of alice is true.\n\nQUESTION:\nCould carol likes ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,ball).",
    "c": "sunny :- sad(bob).\nfriend(eve,frank) :- sunny.\nhot :- friend(eve,frank).\ncold :- hot.\nhungry(carol) :- cold.\nhappy(dave) :- hungry(carol).\ncold :- happy(dave).\nsmall(apple) :- cold.\nparent(dave,george) :- owns(eve,phone).\nparent(george,frank) :- friend(carol,dave), cold.\nwet(phone) :- sunny, hot.\nwet(pencil) :- hot, hot.\nparent(bob,frank) :- parent(eve,dave), parent(frank,frank).\nsad(bob) :- sad(bob).\nsad(bob).\nparent(alice,george).\nowns(frank,phone).\nhappy(dave).\nhungry(eve).\nowns(dave,ball).\nfriend(alice,george).\nparent(george,bob).\nowns(alice,apple).\nfriend(carol,bob).\nfriend(dave,frank).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nIf bob is sad, then it is sunny.\nIf it is sunny, then eve is a friend of frank.\nIf eve is a friend of frank, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is hungry.\nIf carol is hungry, then dave is happy.\nIf dave is happy, then it is cold.\nIf it is cold, then apple is small.\nIf eve owns phone, then dave is a parent of george.\nIf carol is a friend of dave and it is cold, then george is a parent of frank.\nIf it is sunny and it is hot, then phone is wet.\nIf it is hot and it is hot, then pencil is wet.\nIf eve is a parent of dave and frank is a parent of frank, then bob is a parent of frank.\nIf bob is sad, then bob is sad.\n\nAnd the following facts:\nbob is sad.\nalice is a parent of george.\nfrank owns phone.\ndave is happy.\neve is hungry.\ndave owns ball.\nalice is a friend of george.\ngeorge is a parent of bob.\nalice owns apple.\ncarol is a friend of bob.\ndave is a friend of frank.\nbob is a friend of frank.\n\nQUESTION:\nIs dave owns ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,apple).",
    "c": "sunny :- sad(bob).\nfriend(eve,frank) :- sunny.\nhot :- friend(eve,frank).\ncold :- hot.\nhungry(carol) :- cold.\nhappy(dave) :- hungry(carol).\ncold :- happy(dave).\nsmall(apple) :- cold.\nparent(dave,george) :- owns(eve,phone).\nparent(george,frank) :- friend(carol,dave), cold.\nwet(phone) :- sunny, hot.\nwet(pencil) :- hot, hot.\nparent(bob,frank) :- parent(eve,dave), parent(frank,frank).\nsad(bob) :- sad(bob).\nsad(bob).\nparent(alice,george).\nowns(frank,phone).\nhappy(dave).\nhungry(eve).\nowns(dave,ball).\nfriend(alice,george).\nparent(george,bob).\nowns(alice,apple).\nfriend(carol,bob).\nfriend(dave,frank).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nIf bob is sad, then it is sunny.\nIf it is sunny, then eve is a friend of frank.\nIf eve is a friend of frank, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is hungry.\nIf carol is hungry, then dave is happy.\nIf dave is happy, then it is cold.\nIf it is cold, then apple is small.\nIf eve owns phone, then dave is a parent of george.\nIf carol is a friend of dave and it is cold, then george is a parent of frank.\nIf it is sunny and it is hot, then phone is wet.\nIf it is hot and it is hot, then pencil is wet.\nIf eve is a parent of dave and frank is a parent of frank, then bob is a parent of frank.\nIf bob is sad, then bob is sad.\n\nAnd the following facts:\nbob is sad.\nalice is a parent of george.\nfrank owns phone.\ndave is happy.\neve is hungry.\ndave owns ball.\nalice is a friend of george.\ngeorge is a parent of bob.\nalice owns apple.\ncarol is a friend of bob.\ndave is a friend of frank.\nbob is a friend of frank.\n\nQUESTION:\nIs alice owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,frank).",
    "c": "sunny :- sad(bob).\nfriend(eve,frank) :- sunny.\nhot :- friend(eve,frank).\ncold :- hot.\nhungry(carol) :- cold.\nhappy(dave) :- hungry(carol).\ncold :- happy(dave).\nsmall(apple) :- cold.\nparent(dave,george) :- owns(eve,phone).\nparent(george,frank) :- friend(carol,dave), cold.\nwet(phone) :- sunny, hot.\nwet(pencil) :- hot, hot.\nparent(bob,frank) :- parent(eve,dave), parent(frank,frank).\nsad(bob) :- sad(bob).\nsad(bob).\nparent(alice,george).\nowns(frank,phone).\nhappy(dave).\nhungry(eve).\nowns(dave,ball).\nfriend(alice,george).\nparent(george,bob).\nowns(alice,apple).\nfriend(carol,bob).\nfriend(dave,frank).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nIf bob is sad, then it is sunny.\nIf it is sunny, then eve is a friend of frank.\nIf eve is a friend of frank, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is hungry.\nIf carol is hungry, then dave is happy.\nIf dave is happy, then it is cold.\nIf it is cold, then apple is small.\nIf eve owns phone, then dave is a parent of george.\nIf carol is a friend of dave and it is cold, then george is a parent of frank.\nIf it is sunny and it is hot, then phone is wet.\nIf it is hot and it is hot, then pencil is wet.\nIf eve is a parent of dave and frank is a parent of frank, then bob is a parent of frank.\nIf bob is sad, then bob is sad.\n\nAnd the following facts:\nbob is sad.\nalice is a parent of george.\nfrank owns phone.\ndave is happy.\neve is hungry.\ndave owns ball.\nalice is a friend of george.\ngeorge is a parent of bob.\nalice owns apple.\ncarol is a friend of bob.\ndave is a friend of frank.\nbob is a friend of frank.\n\nQUESTION:\nIs dave is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,book).",
    "c": "sunny :- sad(bob).\nfriend(eve,frank) :- sunny.\nhot :- friend(eve,frank).\ncold :- hot.\nhungry(carol) :- cold.\nhappy(dave) :- hungry(carol).\ncold :- happy(dave).\nsmall(apple) :- cold.\nparent(dave,george) :- owns(eve,phone).\nparent(george,frank) :- friend(carol,dave), cold.\nwet(phone) :- sunny, hot.\nwet(pencil) :- hot, hot.\nparent(bob,frank) :- parent(eve,dave), parent(frank,frank).\nsad(bob) :- sad(bob).\nsad(bob).\nparent(alice,george).\nowns(frank,phone).\nhappy(dave).\nhungry(eve).\nowns(dave,ball).\nfriend(alice,george).\nparent(george,bob).\nowns(alice,apple).\nfriend(carol,bob).\nfriend(dave,frank).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nIf bob is sad, then it is sunny.\nIf it is sunny, then eve is a friend of frank.\nIf eve is a friend of frank, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is hungry.\nIf carol is hungry, then dave is happy.\nIf dave is happy, then it is cold.\nIf it is cold, then apple is small.\nIf eve owns phone, then dave is a parent of george.\nIf carol is a friend of dave and it is cold, then george is a parent of frank.\nIf it is sunny and it is hot, then phone is wet.\nIf it is hot and it is hot, then pencil is wet.\nIf eve is a parent of dave and frank is a parent of frank, then bob is a parent of frank.\nIf bob is sad, then bob is sad.\n\nAnd the following facts:\nbob is sad.\nalice is a parent of george.\nfrank owns phone.\ndave is happy.\neve is hungry.\ndave owns ball.\nalice is a friend of george.\ngeorge is a parent of bob.\nalice owns apple.\ncarol is a friend of bob.\ndave is a friend of frank.\nbob is a friend of frank.\n\nQUESTION:\nIs carol owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,george).",
    "c": "sunny :- sad(bob).\nfriend(eve,frank) :- sunny.\nhot :- friend(eve,frank).\ncold :- hot.\nhungry(carol) :- cold.\nhappy(dave) :- hungry(carol).\ncold :- happy(dave).\nsmall(apple) :- cold.\nparent(dave,george) :- owns(eve,phone).\nparent(george,frank) :- friend(carol,dave), cold.\nwet(phone) :- sunny, hot.\nwet(pencil) :- hot, hot.\nparent(bob,frank) :- parent(eve,dave), parent(frank,frank).\nsad(bob) :- sad(bob).\nsad(bob).\nparent(alice,george).\nowns(frank,phone).\nhappy(dave).\nhungry(eve).\nowns(dave,ball).\nfriend(alice,george).\nparent(george,bob).\nowns(alice,apple).\nfriend(carol,bob).\nfriend(dave,frank).\nfriend(bob,frank).",
    "natural language": "You are given the following information:\nIf bob is sad, then it is sunny.\nIf it is sunny, then eve is a friend of frank.\nIf eve is a friend of frank, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is hungry.\nIf carol is hungry, then dave is happy.\nIf dave is happy, then it is cold.\nIf it is cold, then apple is small.\nIf eve owns phone, then dave is a parent of george.\nIf carol is a friend of dave and it is cold, then george is a parent of frank.\nIf it is sunny and it is hot, then phone is wet.\nIf it is hot and it is hot, then pencil is wet.\nIf eve is a parent of dave and frank is a parent of frank, then bob is a parent of frank.\nIf bob is sad, then bob is sad.\n\nAnd the following facts:\nbob is sad.\nalice is a parent of george.\nfrank owns phone.\ndave is happy.\neve is hungry.\ndave owns ball.\nalice is a friend of george.\ngeorge is a parent of bob.\nalice owns apple.\ncarol is a friend of bob.\ndave is a friend of frank.\nbob is a friend of frank.\n\nQUESTION:\nIs eve is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "sunny :- sad(bob).\nfriend(eve,frank) :- sunny.\nhot :- friend(eve,frank).\ncold :- hot.\nhungry(carol) :- cold.\nhappy(dave) :- hungry(carol).\ncold :- happy(dave).\nsmall(apple) :- cold.\nparent(dave,george) :- owns(eve,phone).\nparent(george,frank) :- friend(carol,dave), cold.\nwet(phone) :- sunny, hot.\nwet(pencil) :- hot, hot.\nparent(bob,frank) :- parent(eve,dave), parent(frank,frank).\nsad(bob) :- sad(bob).\nsad(bob).\nparent(alice,george).\nowns(frank,phone).\nhungry(eve).\nowns(dave,ball).\nfriend(alice,george).\nparent(george,bob).\nowns(alice,apple).\nfriend(carol,bob).\nfriend(dave,frank).\nfriend(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob is sad, then it is sunny.\nIf it is sunny, then eve is a friend of frank.\nIf eve is a friend of frank, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is hungry.\nIf carol is hungry, then dave is happy.\nIf dave is happy, then it is cold.\nIf it is cold, then apple is small.\nIf eve owns phone, then dave is a parent of george.\nIf carol is a friend of dave and it is cold, then george is a parent of frank.\nIf it is sunny and it is hot, then phone is wet.\nIf it is hot and it is hot, then pencil is wet.\nIf eve is a parent of dave and frank is a parent of frank, then bob is a parent of frank.\nIf bob is sad, then bob is sad.\n\nAnd the following facts:\nbob is sad.\nalice is a parent of george.\nfrank owns phone.\ndave is happy.\neve is hungry.\ndave owns ball.\nalice is a friend of george.\ngeorge is a parent of bob.\nalice owns apple.\ncarol is a friend of bob.\ndave is a friend of frank.\nbob is a friend of frank.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould dave is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "sunny :- sad(bob).\nfriend(eve,frank) :- sunny.\nhot :- friend(eve,frank).\ncold :- hot.\nhungry(carol) :- cold.\nhappy(dave) :- hungry(carol).\ncold :- happy(dave).\nsmall(apple) :- cold.\nparent(dave,george) :- owns(eve,phone).\nparent(george,frank) :- friend(carol,dave), cold.\nwet(phone) :- sunny, hot.\nwet(pencil) :- hot, hot.\nparent(bob,frank) :- parent(eve,dave), parent(frank,frank).\nsad(bob) :- sad(bob).\nsad(bob).\nparent(alice,george).\nowns(frank,phone).\nhappy(dave).\nowns(dave,ball).\nfriend(alice,george).\nparent(george,bob).\nowns(alice,apple).\nfriend(carol,bob).\nfriend(dave,frank).\nfriend(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob is sad, then it is sunny.\nIf it is sunny, then eve is a friend of frank.\nIf eve is a friend of frank, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is hungry.\nIf carol is hungry, then dave is happy.\nIf dave is happy, then it is cold.\nIf it is cold, then apple is small.\nIf eve owns phone, then dave is a parent of george.\nIf carol is a friend of dave and it is cold, then george is a parent of frank.\nIf it is sunny and it is hot, then phone is wet.\nIf it is hot and it is hot, then pencil is wet.\nIf eve is a parent of dave and frank is a parent of frank, then bob is a parent of frank.\nIf bob is sad, then bob is sad.\n\nAnd the following facts:\nbob is sad.\nalice is a parent of george.\nfrank owns phone.\ndave is happy.\neve is hungry.\ndave owns ball.\nalice is a friend of george.\ngeorge is a parent of bob.\nalice owns apple.\ncarol is a friend of bob.\ndave is a friend of frank.\nbob is a friend of frank.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould eve is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,ball).",
    "c": "sunny :- sad(bob).\nfriend(eve,frank) :- sunny.\nhot :- friend(eve,frank).\ncold :- hot.\nhungry(carol) :- cold.\nhappy(dave) :- hungry(carol).\ncold :- happy(dave).\nsmall(apple) :- cold.\nparent(dave,george) :- owns(eve,phone).\nparent(george,frank) :- friend(carol,dave), cold.\nwet(phone) :- sunny, hot.\nwet(pencil) :- hot, hot.\nparent(bob,frank) :- parent(eve,dave), parent(frank,frank).\nsad(bob) :- sad(bob).\nsad(bob).\nparent(alice,george).\nowns(frank,phone).\nhappy(dave).\nhungry(eve).\nfriend(alice,george).\nparent(george,bob).\nowns(alice,apple).\nfriend(carol,bob).\nfriend(dave,frank).\nfriend(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob is sad, then it is sunny.\nIf it is sunny, then eve is a friend of frank.\nIf eve is a friend of frank, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is hungry.\nIf carol is hungry, then dave is happy.\nIf dave is happy, then it is cold.\nIf it is cold, then apple is small.\nIf eve owns phone, then dave is a parent of george.\nIf carol is a friend of dave and it is cold, then george is a parent of frank.\nIf it is sunny and it is hot, then phone is wet.\nIf it is hot and it is hot, then pencil is wet.\nIf eve is a parent of dave and frank is a parent of frank, then bob is a parent of frank.\nIf bob is sad, then bob is sad.\n\nAnd the following facts:\nbob is sad.\nalice is a parent of george.\nfrank owns phone.\ndave is happy.\neve is hungry.\ndave owns ball.\nalice is a friend of george.\ngeorge is a parent of bob.\nalice owns apple.\ncarol is a friend of bob.\ndave is a friend of frank.\nbob is a friend of frank.\n\nOBSERVATION: apple is small is true.\n\nQUESTION:\nCould dave owns ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(george).",
    "c": "sunny :- big(ball).\nbig(book) :- sunny.\nsad(george) :- big(book).\nhot :- sad(george).\nsmall(apple) :- hot.\nhungry(eve) :- small(apple).\nparent(dave,dave) :- hungry(eve).\nparent(eve,dave) :- parent(dave,dave).\ntall(dave) :- happy(carol), sibling(dave,dave).\ntall(george) :- likes(carol,frank), friend(bob,carol).\nsunny :- happy(eve), sad(george), friend(frank,alice).\nwet(ball) :- small(apple), friend(frank,bob), sad(alice).\nsad(alice) :- parent(george,carol), cold.\nsunny :- sibling(george,carol).\nbig(ball).\nbig(apple).\nlikes(carol,eve).\nlikes(bob,phone).\nparent(eve,carol).\nhungry(george).\nsmall(pencil).\nparent(george,alice).\nlikes(george,frank).\nlikes(frank,car).\nhappy(carol).\nlikes(carol,frank).",
    "natural language": "You are given the following information:\nIf ball is big, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is hungry.\nIf eve is hungry, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is a parent of dave.\nIf carol is happy and dave is a sibling of dave, then dave is tall.\nIf carol likes frank and bob is a friend of carol, then george is tall.\nIf eve is happy and george is sad and frank is a friend of alice, then it is sunny.\nIf apple is small and frank is a friend of bob and alice is sad, then ball is wet.\nIf george is a parent of carol and it is cold, then alice is sad.\nIf george is a sibling of carol, then it is sunny.\n\nAnd the following facts:\nball is big.\napple is big.\ncarol likes eve.\nbob likes phone.\neve is a parent of carol.\ngeorge is hungry.\npencil is small.\ngeorge is a parent of alice.\ngeorge likes frank.\nfrank likes car.\ncarol is happy.\ncarol likes frank.\n\nQUESTION:\nIs george is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(george).",
    "c": "sunny :- big(ball).\nbig(book) :- sunny.\nsad(george) :- big(book).\nhot :- sad(george).\nsmall(apple) :- hot.\nhungry(eve) :- small(apple).\nparent(dave,dave) :- hungry(eve).\nparent(eve,dave) :- parent(dave,dave).\ntall(dave) :- happy(carol), sibling(dave,dave).\ntall(george) :- likes(carol,frank), friend(bob,carol).\nsunny :- happy(eve), sad(george), friend(frank,alice).\nwet(ball) :- small(apple), friend(frank,bob), sad(alice).\nsad(alice) :- parent(george,carol), cold.\nsunny :- sibling(george,carol).\nbig(ball).\nbig(apple).\nlikes(carol,eve).\nlikes(bob,phone).\nparent(eve,carol).\nhungry(george).\nsmall(pencil).\nparent(george,alice).\nlikes(george,frank).\nlikes(frank,car).\nhappy(carol).\nlikes(carol,frank).",
    "natural language": "You are given the following information:\nIf ball is big, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is hungry.\nIf eve is hungry, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is a parent of dave.\nIf carol is happy and dave is a sibling of dave, then dave is tall.\nIf carol likes frank and bob is a friend of carol, then george is tall.\nIf eve is happy and george is sad and frank is a friend of alice, then it is sunny.\nIf apple is small and frank is a friend of bob and alice is sad, then ball is wet.\nIf george is a parent of carol and it is cold, then alice is sad.\nIf george is a sibling of carol, then it is sunny.\n\nAnd the following facts:\nball is big.\napple is big.\ncarol likes eve.\nbob likes phone.\neve is a parent of carol.\ngeorge is hungry.\npencil is small.\ngeorge is a parent of alice.\ngeorge likes frank.\nfrank likes car.\ncarol is happy.\ncarol likes frank.\n\nQUESTION:\nIs george is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "sunny :- big(ball).\nbig(book) :- sunny.\nsad(george) :- big(book).\nhot :- sad(george).\nsmall(apple) :- hot.\nhungry(eve) :- small(apple).\nparent(dave,dave) :- hungry(eve).\nparent(eve,dave) :- parent(dave,dave).\ntall(dave) :- happy(carol), sibling(dave,dave).\ntall(george) :- likes(carol,frank), friend(bob,carol).\nsunny :- happy(eve), sad(george), friend(frank,alice).\nwet(ball) :- small(apple), friend(frank,bob), sad(alice).\nsad(alice) :- parent(george,carol), cold.\nsunny :- sibling(george,carol).\nbig(ball).\nbig(apple).\nlikes(carol,eve).\nlikes(bob,phone).\nparent(eve,carol).\nhungry(george).\nsmall(pencil).\nparent(george,alice).\nlikes(george,frank).\nlikes(frank,car).\nhappy(carol).\nlikes(carol,frank).",
    "natural language": "You are given the following information:\nIf ball is big, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is hungry.\nIf eve is hungry, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is a parent of dave.\nIf carol is happy and dave is a sibling of dave, then dave is tall.\nIf carol likes frank and bob is a friend of carol, then george is tall.\nIf eve is happy and george is sad and frank is a friend of alice, then it is sunny.\nIf apple is small and frank is a friend of bob and alice is sad, then ball is wet.\nIf george is a parent of carol and it is cold, then alice is sad.\nIf george is a sibling of carol, then it is sunny.\n\nAnd the following facts:\nball is big.\napple is big.\ncarol likes eve.\nbob likes phone.\neve is a parent of carol.\ngeorge is hungry.\npencil is small.\ngeorge is a parent of alice.\ngeorge likes frank.\nfrank likes car.\ncarol is happy.\ncarol likes frank.\n\nQUESTION:\nIs ball is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,pencil).",
    "c": "sunny :- big(ball).\nbig(book) :- sunny.\nsad(george) :- big(book).\nhot :- sad(george).\nsmall(apple) :- hot.\nhungry(eve) :- small(apple).\nparent(dave,dave) :- hungry(eve).\nparent(eve,dave) :- parent(dave,dave).\ntall(dave) :- happy(carol), sibling(dave,dave).\ntall(george) :- likes(carol,frank), friend(bob,carol).\nsunny :- happy(eve), sad(george), friend(frank,alice).\nwet(ball) :- small(apple), friend(frank,bob), sad(alice).\nsad(alice) :- parent(george,carol), cold.\nsunny :- sibling(george,carol).\nbig(ball).\nbig(apple).\nlikes(carol,eve).\nlikes(bob,phone).\nparent(eve,carol).\nhungry(george).\nsmall(pencil).\nparent(george,alice).\nlikes(george,frank).\nlikes(frank,car).\nhappy(carol).\nlikes(carol,frank).",
    "natural language": "You are given the following information:\nIf ball is big, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is hungry.\nIf eve is hungry, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is a parent of dave.\nIf carol is happy and dave is a sibling of dave, then dave is tall.\nIf carol likes frank and bob is a friend of carol, then george is tall.\nIf eve is happy and george is sad and frank is a friend of alice, then it is sunny.\nIf apple is small and frank is a friend of bob and alice is sad, then ball is wet.\nIf george is a parent of carol and it is cold, then alice is sad.\nIf george is a sibling of carol, then it is sunny.\n\nAnd the following facts:\nball is big.\napple is big.\ncarol likes eve.\nbob likes phone.\neve is a parent of carol.\ngeorge is hungry.\npencil is small.\ngeorge is a parent of alice.\ngeorge likes frank.\nfrank likes car.\ncarol is happy.\ncarol likes frank.\n\nQUESTION:\nIs george likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,frank).",
    "c": "sunny :- big(ball).\nbig(book) :- sunny.\nsad(george) :- big(book).\nhot :- sad(george).\nsmall(apple) :- hot.\nhungry(eve) :- small(apple).\nparent(dave,dave) :- hungry(eve).\nparent(eve,dave) :- parent(dave,dave).\ntall(dave) :- happy(carol), sibling(dave,dave).\ntall(george) :- likes(carol,frank), friend(bob,carol).\nsunny :- happy(eve), sad(george), friend(frank,alice).\nwet(ball) :- small(apple), friend(frank,bob), sad(alice).\nsad(alice) :- parent(george,carol), cold.\nsunny :- sibling(george,carol).\nbig(ball).\nbig(apple).\nlikes(carol,eve).\nlikes(bob,phone).\nparent(eve,carol).\nhungry(george).\nsmall(pencil).\nparent(george,alice).\nlikes(george,frank).\nlikes(frank,car).\nhappy(carol).\nlikes(carol,frank).",
    "natural language": "You are given the following information:\nIf ball is big, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is hungry.\nIf eve is hungry, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is a parent of dave.\nIf carol is happy and dave is a sibling of dave, then dave is tall.\nIf carol likes frank and bob is a friend of carol, then george is tall.\nIf eve is happy and george is sad and frank is a friend of alice, then it is sunny.\nIf apple is small and frank is a friend of bob and alice is sad, then ball is wet.\nIf george is a parent of carol and it is cold, then alice is sad.\nIf george is a sibling of carol, then it is sunny.\n\nAnd the following facts:\nball is big.\napple is big.\ncarol likes eve.\nbob likes phone.\neve is a parent of carol.\ngeorge is hungry.\npencil is small.\ngeorge is a parent of alice.\ngeorge likes frank.\nfrank likes car.\ncarol is happy.\ncarol likes frank.\n\nQUESTION:\nIs alice is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "sunny :- big(ball).\nbig(book) :- sunny.\nsad(george) :- big(book).\nhot :- sad(george).\nsmall(apple) :- hot.\nhungry(eve) :- small(apple).\nparent(dave,dave) :- hungry(eve).\nparent(eve,dave) :- parent(dave,dave).\ntall(dave) :- happy(carol), sibling(dave,dave).\ntall(george) :- likes(carol,frank), friend(bob,carol).\nsunny :- happy(eve), sad(george), friend(frank,alice).\nwet(ball) :- small(apple), friend(frank,bob), sad(alice).\nsad(alice) :- parent(george,carol), cold.\nsunny :- sibling(george,carol).\nbig(apple).\nlikes(carol,eve).\nlikes(bob,phone).\nparent(eve,carol).\nhungry(george).\nsmall(pencil).\nparent(george,alice).\nlikes(george,frank).\nlikes(frank,car).\nhappy(carol).\nlikes(carol,frank).",
    "natural language": "You are given the following rules:\nIf ball is big, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is hungry.\nIf eve is hungry, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is a parent of dave.\nIf carol is happy and dave is a sibling of dave, then dave is tall.\nIf carol likes frank and bob is a friend of carol, then george is tall.\nIf eve is happy and george is sad and frank is a friend of alice, then it is sunny.\nIf apple is small and frank is a friend of bob and alice is sad, then ball is wet.\nIf george is a parent of carol and it is cold, then alice is sad.\nIf george is a sibling of carol, then it is sunny.\n\nAnd the following facts:\nball is big.\napple is big.\ncarol likes eve.\nbob likes phone.\neve is a parent of carol.\ngeorge is hungry.\npencil is small.\ngeorge is a parent of alice.\ngeorge likes frank.\nfrank likes car.\ncarol is happy.\ncarol likes frank.\n\nOBSERVATION: eve is a parent of dave is true.\n\nQUESTION:\nCould ball is big be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "sunny :- big(ball).\nbig(book) :- sunny.\nsad(george) :- big(book).\nhot :- sad(george).\nsmall(apple) :- hot.\nhungry(eve) :- small(apple).\nparent(dave,dave) :- hungry(eve).\nparent(eve,dave) :- parent(dave,dave).\ntall(dave) :- happy(carol), sibling(dave,dave).\ntall(george) :- likes(carol,frank), friend(bob,carol).\nsunny :- happy(eve), sad(george), friend(frank,alice).\nwet(ball) :- small(apple), friend(frank,bob), sad(alice).\nsad(alice) :- parent(george,carol), cold.\nsunny :- sibling(george,carol).\nbig(ball).\nbig(apple).\nlikes(carol,eve).\nparent(eve,carol).\nhungry(george).\nsmall(pencil).\nparent(george,alice).\nlikes(george,frank).\nlikes(frank,car).\nhappy(carol).\nlikes(carol,frank).",
    "natural language": "You are given the following rules:\nIf ball is big, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is hungry.\nIf eve is hungry, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is a parent of dave.\nIf carol is happy and dave is a sibling of dave, then dave is tall.\nIf carol likes frank and bob is a friend of carol, then george is tall.\nIf eve is happy and george is sad and frank is a friend of alice, then it is sunny.\nIf apple is small and frank is a friend of bob and alice is sad, then ball is wet.\nIf george is a parent of carol and it is cold, then alice is sad.\nIf george is a sibling of carol, then it is sunny.\n\nAnd the following facts:\nball is big.\napple is big.\ncarol likes eve.\nbob likes phone.\neve is a parent of carol.\ngeorge is hungry.\npencil is small.\ngeorge is a parent of alice.\ngeorge likes frank.\nfrank likes car.\ncarol is happy.\ncarol likes frank.\n\nOBSERVATION: eve is a parent of dave is true.\n\nQUESTION:\nCould bob likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(george,alice).",
    "c": "sunny :- big(ball).\nbig(book) :- sunny.\nsad(george) :- big(book).\nhot :- sad(george).\nsmall(apple) :- hot.\nhungry(eve) :- small(apple).\nparent(dave,dave) :- hungry(eve).\nparent(eve,dave) :- parent(dave,dave).\ntall(dave) :- happy(carol), sibling(dave,dave).\ntall(george) :- likes(carol,frank), friend(bob,carol).\nsunny :- happy(eve), sad(george), friend(frank,alice).\nwet(ball) :- small(apple), friend(frank,bob), sad(alice).\nsad(alice) :- parent(george,carol), cold.\nsunny :- sibling(george,carol).\nbig(ball).\nbig(apple).\nlikes(carol,eve).\nlikes(bob,phone).\nparent(eve,carol).\nhungry(george).\nsmall(pencil).\nlikes(george,frank).\nlikes(frank,car).\nhappy(carol).\nlikes(carol,frank).",
    "natural language": "You are given the following rules:\nIf ball is big, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is hungry.\nIf eve is hungry, then dave is a parent of dave.\nIf dave is a parent of dave, then eve is a parent of dave.\nIf carol is happy and dave is a sibling of dave, then dave is tall.\nIf carol likes frank and bob is a friend of carol, then george is tall.\nIf eve is happy and george is sad and frank is a friend of alice, then it is sunny.\nIf apple is small and frank is a friend of bob and alice is sad, then ball is wet.\nIf george is a parent of carol and it is cold, then alice is sad.\nIf george is a sibling of carol, then it is sunny.\n\nAnd the following facts:\nball is big.\napple is big.\ncarol likes eve.\nbob likes phone.\neve is a parent of carol.\ngeorge is hungry.\npencil is small.\ngeorge is a parent of alice.\ngeorge likes frank.\nfrank likes car.\ncarol is happy.\ncarol likes frank.\n\nOBSERVATION: eve is a parent of dave is true.\n\nQUESTION:\nCould george is a parent of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(frank,alice).",
    "c": "enemy(bob,carol) :- parent(eve,carol).\nparent(alice,alice) :- enemy(bob,carol).\nlikes(george,eve) :- parent(alice,alice).\nhappy(george) :- likes(george,eve).\nfriend(bob,carol) :- happy(george).\nhappy(carol) :- friend(bob,carol).\nsmall(apple) :- happy(carol).\ndislikes(eve,car) :- small(apple).\nsibling(dave,carol) :- dislikes(eve,car).\ntall(frank) :- sibling(dave,carol).\nhungry(bob) :- hungry(bob), owns(frank,pencil).\nhungry(frank) :- cold.\nparent(dave,eve) :- tall(alice), wet(ball).\nparent(george,alice) :- happy(george), parent(george,eve), small(car).\nparent(eve,carol).\nparent(frank,carol).\nenemy(frank,alice).\nenemy(bob,eve).\nlikes(eve,carol).\nparent(alice,dave).\nenemy(frank,george).\nparent(frank,george).\nowns(alice,ball).\nenemy(carol,george).\nenemy(alice,carol).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf eve is a parent of carol, then bob is an enemy of carol.\nIf bob is an enemy of carol, then alice is a parent of alice.\nIf alice is a parent of alice, then george likes eve.\nIf george likes eve, then george is happy.\nIf george is happy, then bob is a friend of carol.\nIf bob is a friend of carol, then carol is happy.\nIf carol is happy, then apple is small.\nIf apple is small, then eve dislikes car.\nIf eve dislikes car, then dave is a sibling of carol.\nIf dave is a sibling of carol, then frank is tall.\nIf bob is hungry and frank owns pencil, then bob is hungry.\nIf it is cold, then frank is hungry.\nIf alice is tall and ball is wet, then dave is a parent of eve.\nIf george is happy and george is a parent of eve and car is small, then george is a parent of alice.\n\nAnd the following facts:\neve is a parent of carol.\nfrank is a parent of carol.\nfrank is an enemy of alice.\nbob is an enemy of eve.\neve likes carol.\nalice is a parent of dave.\nfrank is an enemy of george.\nfrank is a parent of george.\nalice owns ball.\ncarol is an enemy of george.\nalice is an enemy of carol.\nalice is a sibling of bob.\n\nQUESTION:\nIs frank is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(apple).",
    "c": "enemy(bob,carol) :- parent(eve,carol).\nparent(alice,alice) :- enemy(bob,carol).\nlikes(george,eve) :- parent(alice,alice).\nhappy(george) :- likes(george,eve).\nfriend(bob,carol) :- happy(george).\nhappy(carol) :- friend(bob,carol).\nsmall(apple) :- happy(carol).\ndislikes(eve,car) :- small(apple).\nsibling(dave,carol) :- dislikes(eve,car).\ntall(frank) :- sibling(dave,carol).\nhungry(bob) :- hungry(bob), owns(frank,pencil).\nhungry(frank) :- cold.\nparent(dave,eve) :- tall(alice), wet(ball).\nparent(george,alice) :- happy(george), parent(george,eve), small(car).\nparent(eve,carol).\nparent(frank,carol).\nenemy(frank,alice).\nenemy(bob,eve).\nlikes(eve,carol).\nparent(alice,dave).\nenemy(frank,george).\nparent(frank,george).\nowns(alice,ball).\nenemy(carol,george).\nenemy(alice,carol).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf eve is a parent of carol, then bob is an enemy of carol.\nIf bob is an enemy of carol, then alice is a parent of alice.\nIf alice is a parent of alice, then george likes eve.\nIf george likes eve, then george is happy.\nIf george is happy, then bob is a friend of carol.\nIf bob is a friend of carol, then carol is happy.\nIf carol is happy, then apple is small.\nIf apple is small, then eve dislikes car.\nIf eve dislikes car, then dave is a sibling of carol.\nIf dave is a sibling of carol, then frank is tall.\nIf bob is hungry and frank owns pencil, then bob is hungry.\nIf it is cold, then frank is hungry.\nIf alice is tall and ball is wet, then dave is a parent of eve.\nIf george is happy and george is a parent of eve and car is small, then george is a parent of alice.\n\nAnd the following facts:\neve is a parent of carol.\nfrank is a parent of carol.\nfrank is an enemy of alice.\nbob is an enemy of eve.\neve likes carol.\nalice is a parent of dave.\nfrank is an enemy of george.\nfrank is a parent of george.\nalice owns ball.\ncarol is an enemy of george.\nalice is an enemy of carol.\nalice is a sibling of bob.\n\nQUESTION:\nIs apple is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,george).",
    "c": "enemy(bob,carol) :- parent(eve,carol).\nparent(alice,alice) :- enemy(bob,carol).\nlikes(george,eve) :- parent(alice,alice).\nhappy(george) :- likes(george,eve).\nfriend(bob,carol) :- happy(george).\nhappy(carol) :- friend(bob,carol).\nsmall(apple) :- happy(carol).\ndislikes(eve,car) :- small(apple).\nsibling(dave,carol) :- dislikes(eve,car).\ntall(frank) :- sibling(dave,carol).\nhungry(bob) :- hungry(bob), owns(frank,pencil).\nhungry(frank) :- cold.\nparent(dave,eve) :- tall(alice), wet(ball).\nparent(george,alice) :- happy(george), parent(george,eve), small(car).\nparent(eve,carol).\nparent(frank,carol).\nenemy(frank,alice).\nenemy(bob,eve).\nlikes(eve,carol).\nparent(alice,dave).\nenemy(frank,george).\nparent(frank,george).\nowns(alice,ball).\nenemy(carol,george).\nenemy(alice,carol).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf eve is a parent of carol, then bob is an enemy of carol.\nIf bob is an enemy of carol, then alice is a parent of alice.\nIf alice is a parent of alice, then george likes eve.\nIf george likes eve, then george is happy.\nIf george is happy, then bob is a friend of carol.\nIf bob is a friend of carol, then carol is happy.\nIf carol is happy, then apple is small.\nIf apple is small, then eve dislikes car.\nIf eve dislikes car, then dave is a sibling of carol.\nIf dave is a sibling of carol, then frank is tall.\nIf bob is hungry and frank owns pencil, then bob is hungry.\nIf it is cold, then frank is hungry.\nIf alice is tall and ball is wet, then dave is a parent of eve.\nIf george is happy and george is a parent of eve and car is small, then george is a parent of alice.\n\nAnd the following facts:\neve is a parent of carol.\nfrank is a parent of carol.\nfrank is an enemy of alice.\nbob is an enemy of eve.\neve likes carol.\nalice is a parent of dave.\nfrank is an enemy of george.\nfrank is a parent of george.\nalice owns ball.\ncarol is an enemy of george.\nalice is an enemy of carol.\nalice is a sibling of bob.\n\nQUESTION:\nIs frank is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,pencil).",
    "c": "enemy(bob,carol) :- parent(eve,carol).\nparent(alice,alice) :- enemy(bob,carol).\nlikes(george,eve) :- parent(alice,alice).\nhappy(george) :- likes(george,eve).\nfriend(bob,carol) :- happy(george).\nhappy(carol) :- friend(bob,carol).\nsmall(apple) :- happy(carol).\ndislikes(eve,car) :- small(apple).\nsibling(dave,carol) :- dislikes(eve,car).\ntall(frank) :- sibling(dave,carol).\nhungry(bob) :- hungry(bob), owns(frank,pencil).\nhungry(frank) :- cold.\nparent(dave,eve) :- tall(alice), wet(ball).\nparent(george,alice) :- happy(george), parent(george,eve), small(car).\nparent(eve,carol).\nparent(frank,carol).\nenemy(frank,alice).\nenemy(bob,eve).\nlikes(eve,carol).\nparent(alice,dave).\nenemy(frank,george).\nparent(frank,george).\nowns(alice,ball).\nenemy(carol,george).\nenemy(alice,carol).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf eve is a parent of carol, then bob is an enemy of carol.\nIf bob is an enemy of carol, then alice is a parent of alice.\nIf alice is a parent of alice, then george likes eve.\nIf george likes eve, then george is happy.\nIf george is happy, then bob is a friend of carol.\nIf bob is a friend of carol, then carol is happy.\nIf carol is happy, then apple is small.\nIf apple is small, then eve dislikes car.\nIf eve dislikes car, then dave is a sibling of carol.\nIf dave is a sibling of carol, then frank is tall.\nIf bob is hungry and frank owns pencil, then bob is hungry.\nIf it is cold, then frank is hungry.\nIf alice is tall and ball is wet, then dave is a parent of eve.\nIf george is happy and george is a parent of eve and car is small, then george is a parent of alice.\n\nAnd the following facts:\neve is a parent of carol.\nfrank is a parent of carol.\nfrank is an enemy of alice.\nbob is an enemy of eve.\neve likes carol.\nalice is a parent of dave.\nfrank is an enemy of george.\nfrank is a parent of george.\nalice owns ball.\ncarol is an enemy of george.\nalice is an enemy of carol.\nalice is a sibling of bob.\n\nQUESTION:\nIs alice owns pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,george).",
    "c": "enemy(bob,carol) :- parent(eve,carol).\nparent(alice,alice) :- enemy(bob,carol).\nlikes(george,eve) :- parent(alice,alice).\nhappy(george) :- likes(george,eve).\nfriend(bob,carol) :- happy(george).\nhappy(carol) :- friend(bob,carol).\nsmall(apple) :- happy(carol).\ndislikes(eve,car) :- small(apple).\nsibling(dave,carol) :- dislikes(eve,car).\ntall(frank) :- sibling(dave,carol).\nhungry(bob) :- hungry(bob), owns(frank,pencil).\nhungry(frank) :- cold.\nparent(dave,eve) :- tall(alice), wet(ball).\nparent(george,alice) :- happy(george), parent(george,eve), small(car).\nparent(eve,carol).\nparent(frank,carol).\nenemy(frank,alice).\nenemy(bob,eve).\nlikes(eve,carol).\nparent(alice,dave).\nenemy(frank,george).\nparent(frank,george).\nowns(alice,ball).\nenemy(carol,george).\nenemy(alice,carol).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf eve is a parent of carol, then bob is an enemy of carol.\nIf bob is an enemy of carol, then alice is a parent of alice.\nIf alice is a parent of alice, then george likes eve.\nIf george likes eve, then george is happy.\nIf george is happy, then bob is a friend of carol.\nIf bob is a friend of carol, then carol is happy.\nIf carol is happy, then apple is small.\nIf apple is small, then eve dislikes car.\nIf eve dislikes car, then dave is a sibling of carol.\nIf dave is a sibling of carol, then frank is tall.\nIf bob is hungry and frank owns pencil, then bob is hungry.\nIf it is cold, then frank is hungry.\nIf alice is tall and ball is wet, then dave is a parent of eve.\nIf george is happy and george is a parent of eve and car is small, then george is a parent of alice.\n\nAnd the following facts:\neve is a parent of carol.\nfrank is a parent of carol.\nfrank is an enemy of alice.\nbob is an enemy of eve.\neve likes carol.\nalice is a parent of dave.\nfrank is an enemy of george.\nfrank is a parent of george.\nalice owns ball.\ncarol is an enemy of george.\nalice is an enemy of carol.\nalice is a sibling of bob.\n\nQUESTION:\nIs eve is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,carol).",
    "c": "enemy(bob,carol) :- parent(eve,carol).\nparent(alice,alice) :- enemy(bob,carol).\nlikes(george,eve) :- parent(alice,alice).\nhappy(george) :- likes(george,eve).\nfriend(bob,carol) :- happy(george).\nhappy(carol) :- friend(bob,carol).\nsmall(apple) :- happy(carol).\ndislikes(eve,car) :- small(apple).\nsibling(dave,carol) :- dislikes(eve,car).\ntall(frank) :- sibling(dave,carol).\nhungry(bob) :- hungry(bob), owns(frank,pencil).\nhungry(frank) :- cold.\nparent(dave,eve) :- tall(alice), wet(ball).\nparent(george,alice) :- happy(george), parent(george,eve), small(car).\nparent(frank,carol).\nenemy(frank,alice).\nenemy(bob,eve).\nlikes(eve,carol).\nparent(alice,dave).\nenemy(frank,george).\nparent(frank,george).\nowns(alice,ball).\nenemy(carol,george).\nenemy(alice,carol).\nsibling(alice,bob).",
    "natural language": "You are given the following rules:\nIf eve is a parent of carol, then bob is an enemy of carol.\nIf bob is an enemy of carol, then alice is a parent of alice.\nIf alice is a parent of alice, then george likes eve.\nIf george likes eve, then george is happy.\nIf george is happy, then bob is a friend of carol.\nIf bob is a friend of carol, then carol is happy.\nIf carol is happy, then apple is small.\nIf apple is small, then eve dislikes car.\nIf eve dislikes car, then dave is a sibling of carol.\nIf dave is a sibling of carol, then frank is tall.\nIf bob is hungry and frank owns pencil, then bob is hungry.\nIf it is cold, then frank is hungry.\nIf alice is tall and ball is wet, then dave is a parent of eve.\nIf george is happy and george is a parent of eve and car is small, then george is a parent of alice.\n\nAnd the following facts:\neve is a parent of carol.\nfrank is a parent of carol.\nfrank is an enemy of alice.\nbob is an enemy of eve.\neve likes carol.\nalice is a parent of dave.\nfrank is an enemy of george.\nfrank is a parent of george.\nalice owns ball.\ncarol is an enemy of george.\nalice is an enemy of carol.\nalice is a sibling of bob.\n\nOBSERVATION: frank is tall is true.\n\nQUESTION:\nCould eve is a parent of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(bob,eve).",
    "c": "enemy(bob,carol) :- parent(eve,carol).\nparent(alice,alice) :- enemy(bob,carol).\nlikes(george,eve) :- parent(alice,alice).\nhappy(george) :- likes(george,eve).\nfriend(bob,carol) :- happy(george).\nhappy(carol) :- friend(bob,carol).\nsmall(apple) :- happy(carol).\ndislikes(eve,car) :- small(apple).\nsibling(dave,carol) :- dislikes(eve,car).\ntall(frank) :- sibling(dave,carol).\nhungry(bob) :- hungry(bob), owns(frank,pencil).\nhungry(frank) :- cold.\nparent(dave,eve) :- tall(alice), wet(ball).\nparent(george,alice) :- happy(george), parent(george,eve), small(car).\nparent(eve,carol).\nparent(frank,carol).\nenemy(frank,alice).\nlikes(eve,carol).\nparent(alice,dave).\nenemy(frank,george).\nparent(frank,george).\nowns(alice,ball).\nenemy(carol,george).\nenemy(alice,carol).\nsibling(alice,bob).",
    "natural language": "You are given the following rules:\nIf eve is a parent of carol, then bob is an enemy of carol.\nIf bob is an enemy of carol, then alice is a parent of alice.\nIf alice is a parent of alice, then george likes eve.\nIf george likes eve, then george is happy.\nIf george is happy, then bob is a friend of carol.\nIf bob is a friend of carol, then carol is happy.\nIf carol is happy, then apple is small.\nIf apple is small, then eve dislikes car.\nIf eve dislikes car, then dave is a sibling of carol.\nIf dave is a sibling of carol, then frank is tall.\nIf bob is hungry and frank owns pencil, then bob is hungry.\nIf it is cold, then frank is hungry.\nIf alice is tall and ball is wet, then dave is a parent of eve.\nIf george is happy and george is a parent of eve and car is small, then george is a parent of alice.\n\nAnd the following facts:\neve is a parent of carol.\nfrank is a parent of carol.\nfrank is an enemy of alice.\nbob is an enemy of eve.\neve likes carol.\nalice is a parent of dave.\nfrank is an enemy of george.\nfrank is a parent of george.\nalice owns ball.\ncarol is an enemy of george.\nalice is an enemy of carol.\nalice is a sibling of bob.\n\nOBSERVATION: frank is tall is true.\n\nQUESTION:\nCould bob is an enemy of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,carol).",
    "c": "enemy(bob,carol) :- parent(eve,carol).\nparent(alice,alice) :- enemy(bob,carol).\nlikes(george,eve) :- parent(alice,alice).\nhappy(george) :- likes(george,eve).\nfriend(bob,carol) :- happy(george).\nhappy(carol) :- friend(bob,carol).\nsmall(apple) :- happy(carol).\ndislikes(eve,car) :- small(apple).\nsibling(dave,carol) :- dislikes(eve,car).\ntall(frank) :- sibling(dave,carol).\nhungry(bob) :- hungry(bob), owns(frank,pencil).\nhungry(frank) :- cold.\nparent(dave,eve) :- tall(alice), wet(ball).\nparent(george,alice) :- happy(george), parent(george,eve), small(car).\nparent(eve,carol).\nparent(frank,carol).\nenemy(frank,alice).\nenemy(bob,eve).\nlikes(eve,carol).\nparent(alice,dave).\nenemy(frank,george).\nparent(frank,george).\nowns(alice,ball).\nenemy(carol,george).\nsibling(alice,bob).",
    "natural language": "You are given the following rules:\nIf eve is a parent of carol, then bob is an enemy of carol.\nIf bob is an enemy of carol, then alice is a parent of alice.\nIf alice is a parent of alice, then george likes eve.\nIf george likes eve, then george is happy.\nIf george is happy, then bob is a friend of carol.\nIf bob is a friend of carol, then carol is happy.\nIf carol is happy, then apple is small.\nIf apple is small, then eve dislikes car.\nIf eve dislikes car, then dave is a sibling of carol.\nIf dave is a sibling of carol, then frank is tall.\nIf bob is hungry and frank owns pencil, then bob is hungry.\nIf it is cold, then frank is hungry.\nIf alice is tall and ball is wet, then dave is a parent of eve.\nIf george is happy and george is a parent of eve and car is small, then george is a parent of alice.\n\nAnd the following facts:\neve is a parent of carol.\nfrank is a parent of carol.\nfrank is an enemy of alice.\nbob is an enemy of eve.\neve likes carol.\nalice is a parent of dave.\nfrank is an enemy of george.\nfrank is a parent of george.\nalice owns ball.\ncarol is an enemy of george.\nalice is an enemy of carol.\nalice is a sibling of bob.\n\nOBSERVATION: frank is tall is true.\n\nQUESTION:\nCould alice is an enemy of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "cold.",
    "c": "sunny :- cold.\nhungry(george) :- sunny.\nsmall(book) :- hungry(george).\ndislikes(carol,car) :- small(book).\nhungry(frank) :- dislikes(carol,car).\nhungry(dave) :- hungry(frank).\nsmall(pencil) :- hungry(dave).\nsibling(george,george) :- small(pencil).\nhappy(george) :- sibling(george,george).\nhappy(george) :- happy(george).\nparent(carol,dave) :- friend(frank,george).\nfriend(frank,dave) :- likes(george,carol), likes(frank,bob), sibling(alice,carol).\nparent(eve,eve) :- wet(ball), happy(dave).\nfriend(bob,carol) :- hungry(eve).\ncold.\nsibling(bob,alice).\ndislikes(bob,pencil).\nlikes(bob,carol).\nparent(frank,carol).\nlikes(george,dave).\ndislikes(bob,book).\nparent(bob,eve).\ndislikes(george,dave).\nlikes(alice,phone).\nlikes(alice,carol).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then book is small.\nIf book is small, then carol dislikes car.\nIf carol dislikes car, then frank is hungry.\nIf frank is hungry, then dave is hungry.\nIf dave is hungry, then pencil is small.\nIf pencil is small, then george is a sibling of george.\nIf george is a sibling of george, then george is happy.\nIf george is happy, then george is happy.\nIf frank is a friend of george, then carol is a parent of dave.\nIf george likes carol and frank likes bob and alice is a sibling of carol, then frank is a friend of dave.\nIf ball is wet and dave is happy, then eve is a parent of eve.\nIf eve is hungry, then bob is a friend of carol.\n\nAnd the following facts:\nit is cold.\nbob is a sibling of alice.\nbob dislikes pencil.\nbob likes carol.\nfrank is a parent of carol.\ngeorge likes dave.\nbob dislikes book.\nbob is a parent of eve.\ngeorge dislikes dave.\nalice likes phone.\nalice likes carol.\neve is a sibling of alice.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,dave).",
    "c": "sunny :- cold.\nhungry(george) :- sunny.\nsmall(book) :- hungry(george).\ndislikes(carol,car) :- small(book).\nhungry(frank) :- dislikes(carol,car).\nhungry(dave) :- hungry(frank).\nsmall(pencil) :- hungry(dave).\nsibling(george,george) :- small(pencil).\nhappy(george) :- sibling(george,george).\nhappy(george) :- happy(george).\nparent(carol,dave) :- friend(frank,george).\nfriend(frank,dave) :- likes(george,carol), likes(frank,bob), sibling(alice,carol).\nparent(eve,eve) :- wet(ball), happy(dave).\nfriend(bob,carol) :- hungry(eve).\ncold.\nsibling(bob,alice).\ndislikes(bob,pencil).\nlikes(bob,carol).\nparent(frank,carol).\nlikes(george,dave).\ndislikes(bob,book).\nparent(bob,eve).\ndislikes(george,dave).\nlikes(alice,phone).\nlikes(alice,carol).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then book is small.\nIf book is small, then carol dislikes car.\nIf carol dislikes car, then frank is hungry.\nIf frank is hungry, then dave is hungry.\nIf dave is hungry, then pencil is small.\nIf pencil is small, then george is a sibling of george.\nIf george is a sibling of george, then george is happy.\nIf george is happy, then george is happy.\nIf frank is a friend of george, then carol is a parent of dave.\nIf george likes carol and frank likes bob and alice is a sibling of carol, then frank is a friend of dave.\nIf ball is wet and dave is happy, then eve is a parent of eve.\nIf eve is hungry, then bob is a friend of carol.\n\nAnd the following facts:\nit is cold.\nbob is a sibling of alice.\nbob dislikes pencil.\nbob likes carol.\nfrank is a parent of carol.\ngeorge likes dave.\nbob dislikes book.\nbob is a parent of eve.\ngeorge dislikes dave.\nalice likes phone.\nalice likes carol.\neve is a sibling of alice.\n\nQUESTION:\nIs george dislikes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,alice).",
    "c": "sunny :- cold.\nhungry(george) :- sunny.\nsmall(book) :- hungry(george).\ndislikes(carol,car) :- small(book).\nhungry(frank) :- dislikes(carol,car).\nhungry(dave) :- hungry(frank).\nsmall(pencil) :- hungry(dave).\nsibling(george,george) :- small(pencil).\nhappy(george) :- sibling(george,george).\nhappy(george) :- happy(george).\nparent(carol,dave) :- friend(frank,george).\nfriend(frank,dave) :- likes(george,carol), likes(frank,bob), sibling(alice,carol).\nparent(eve,eve) :- wet(ball), happy(dave).\nfriend(bob,carol) :- hungry(eve).\ncold.\nsibling(bob,alice).\ndislikes(bob,pencil).\nlikes(bob,carol).\nparent(frank,carol).\nlikes(george,dave).\ndislikes(bob,book).\nparent(bob,eve).\ndislikes(george,dave).\nlikes(alice,phone).\nlikes(alice,carol).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then book is small.\nIf book is small, then carol dislikes car.\nIf carol dislikes car, then frank is hungry.\nIf frank is hungry, then dave is hungry.\nIf dave is hungry, then pencil is small.\nIf pencil is small, then george is a sibling of george.\nIf george is a sibling of george, then george is happy.\nIf george is happy, then george is happy.\nIf frank is a friend of george, then carol is a parent of dave.\nIf george likes carol and frank likes bob and alice is a sibling of carol, then frank is a friend of dave.\nIf ball is wet and dave is happy, then eve is a parent of eve.\nIf eve is hungry, then bob is a friend of carol.\n\nAnd the following facts:\nit is cold.\nbob is a sibling of alice.\nbob dislikes pencil.\nbob likes carol.\nfrank is a parent of carol.\ngeorge likes dave.\nbob dislikes book.\nbob is a parent of eve.\ngeorge dislikes dave.\nalice likes phone.\nalice likes carol.\neve is a sibling of alice.\n\nQUESTION:\nIs bob is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,bob).",
    "c": "sunny :- cold.\nhungry(george) :- sunny.\nsmall(book) :- hungry(george).\ndislikes(carol,car) :- small(book).\nhungry(frank) :- dislikes(carol,car).\nhungry(dave) :- hungry(frank).\nsmall(pencil) :- hungry(dave).\nsibling(george,george) :- small(pencil).\nhappy(george) :- sibling(george,george).\nhappy(george) :- happy(george).\nparent(carol,dave) :- friend(frank,george).\nfriend(frank,dave) :- likes(george,carol), likes(frank,bob), sibling(alice,carol).\nparent(eve,eve) :- wet(ball), happy(dave).\nfriend(bob,carol) :- hungry(eve).\ncold.\nsibling(bob,alice).\ndislikes(bob,pencil).\nlikes(bob,carol).\nparent(frank,carol).\nlikes(george,dave).\ndislikes(bob,book).\nparent(bob,eve).\ndislikes(george,dave).\nlikes(alice,phone).\nlikes(alice,carol).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then book is small.\nIf book is small, then carol dislikes car.\nIf carol dislikes car, then frank is hungry.\nIf frank is hungry, then dave is hungry.\nIf dave is hungry, then pencil is small.\nIf pencil is small, then george is a sibling of george.\nIf george is a sibling of george, then george is happy.\nIf george is happy, then george is happy.\nIf frank is a friend of george, then carol is a parent of dave.\nIf george likes carol and frank likes bob and alice is a sibling of carol, then frank is a friend of dave.\nIf ball is wet and dave is happy, then eve is a parent of eve.\nIf eve is hungry, then bob is a friend of carol.\n\nAnd the following facts:\nit is cold.\nbob is a sibling of alice.\nbob dislikes pencil.\nbob likes carol.\nfrank is a parent of carol.\ngeorge likes dave.\nbob dislikes book.\nbob is a parent of eve.\ngeorge dislikes dave.\nalice likes phone.\nalice likes carol.\neve is a sibling of alice.\n\nQUESTION:\nIs dave is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,dave).",
    "c": "sunny :- cold.\nhungry(george) :- sunny.\nsmall(book) :- hungry(george).\ndislikes(carol,car) :- small(book).\nhungry(frank) :- dislikes(carol,car).\nhungry(dave) :- hungry(frank).\nsmall(pencil) :- hungry(dave).\nsibling(george,george) :- small(pencil).\nhappy(george) :- sibling(george,george).\nhappy(george) :- happy(george).\nparent(carol,dave) :- friend(frank,george).\nfriend(frank,dave) :- likes(george,carol), likes(frank,bob), sibling(alice,carol).\nparent(eve,eve) :- wet(ball), happy(dave).\nfriend(bob,carol) :- hungry(eve).\ncold.\nsibling(bob,alice).\ndislikes(bob,pencil).\nlikes(bob,carol).\nparent(frank,carol).\nlikes(george,dave).\ndislikes(bob,book).\nparent(bob,eve).\ndislikes(george,dave).\nlikes(alice,phone).\nlikes(alice,carol).\nsibling(eve,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then book is small.\nIf book is small, then carol dislikes car.\nIf carol dislikes car, then frank is hungry.\nIf frank is hungry, then dave is hungry.\nIf dave is hungry, then pencil is small.\nIf pencil is small, then george is a sibling of george.\nIf george is a sibling of george, then george is happy.\nIf george is happy, then george is happy.\nIf frank is a friend of george, then carol is a parent of dave.\nIf george likes carol and frank likes bob and alice is a sibling of carol, then frank is a friend of dave.\nIf ball is wet and dave is happy, then eve is a parent of eve.\nIf eve is hungry, then bob is a friend of carol.\n\nAnd the following facts:\nit is cold.\nbob is a sibling of alice.\nbob dislikes pencil.\nbob likes carol.\nfrank is a parent of carol.\ngeorge likes dave.\nbob dislikes book.\nbob is a parent of eve.\ngeorge dislikes dave.\nalice likes phone.\nalice likes carol.\neve is a sibling of alice.\n\nQUESTION:\nIs bob is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "sunny :- cold.\nhungry(george) :- sunny.\nsmall(book) :- hungry(george).\ndislikes(carol,car) :- small(book).\nhungry(frank) :- dislikes(carol,car).\nhungry(dave) :- hungry(frank).\nsmall(pencil) :- hungry(dave).\nsibling(george,george) :- small(pencil).\nhappy(george) :- sibling(george,george).\nhappy(george) :- happy(george).\nparent(carol,dave) :- friend(frank,george).\nfriend(frank,dave) :- likes(george,carol), likes(frank,bob), sibling(alice,carol).\nparent(eve,eve) :- wet(ball), happy(dave).\nfriend(bob,carol) :- hungry(eve).\nsibling(bob,alice).\ndislikes(bob,pencil).\nlikes(bob,carol).\nparent(frank,carol).\nlikes(george,dave).\ndislikes(bob,book).\nparent(bob,eve).\ndislikes(george,dave).\nlikes(alice,phone).\nlikes(alice,carol).\nsibling(eve,alice).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then book is small.\nIf book is small, then carol dislikes car.\nIf carol dislikes car, then frank is hungry.\nIf frank is hungry, then dave is hungry.\nIf dave is hungry, then pencil is small.\nIf pencil is small, then george is a sibling of george.\nIf george is a sibling of george, then george is happy.\nIf george is happy, then george is happy.\nIf frank is a friend of george, then carol is a parent of dave.\nIf george likes carol and frank likes bob and alice is a sibling of carol, then frank is a friend of dave.\nIf ball is wet and dave is happy, then eve is a parent of eve.\nIf eve is hungry, then bob is a friend of carol.\n\nAnd the following facts:\nit is cold.\nbob is a sibling of alice.\nbob dislikes pencil.\nbob likes carol.\nfrank is a parent of carol.\ngeorge likes dave.\nbob dislikes book.\nbob is a parent of eve.\ngeorge dislikes dave.\nalice likes phone.\nalice likes carol.\neve is a sibling of alice.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould it is cold be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(frank,carol).",
    "c": "sunny :- cold.\nhungry(george) :- sunny.\nsmall(book) :- hungry(george).\ndislikes(carol,car) :- small(book).\nhungry(frank) :- dislikes(carol,car).\nhungry(dave) :- hungry(frank).\nsmall(pencil) :- hungry(dave).\nsibling(george,george) :- small(pencil).\nhappy(george) :- sibling(george,george).\nhappy(george) :- happy(george).\nparent(carol,dave) :- friend(frank,george).\nfriend(frank,dave) :- likes(george,carol), likes(frank,bob), sibling(alice,carol).\nparent(eve,eve) :- wet(ball), happy(dave).\nfriend(bob,carol) :- hungry(eve).\ncold.\nsibling(bob,alice).\ndislikes(bob,pencil).\nlikes(bob,carol).\nlikes(george,dave).\ndislikes(bob,book).\nparent(bob,eve).\ndislikes(george,dave).\nlikes(alice,phone).\nlikes(alice,carol).\nsibling(eve,alice).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then book is small.\nIf book is small, then carol dislikes car.\nIf carol dislikes car, then frank is hungry.\nIf frank is hungry, then dave is hungry.\nIf dave is hungry, then pencil is small.\nIf pencil is small, then george is a sibling of george.\nIf george is a sibling of george, then george is happy.\nIf george is happy, then george is happy.\nIf frank is a friend of george, then carol is a parent of dave.\nIf george likes carol and frank likes bob and alice is a sibling of carol, then frank is a friend of dave.\nIf ball is wet and dave is happy, then eve is a parent of eve.\nIf eve is hungry, then bob is a friend of carol.\n\nAnd the following facts:\nit is cold.\nbob is a sibling of alice.\nbob dislikes pencil.\nbob likes carol.\nfrank is a parent of carol.\ngeorge likes dave.\nbob dislikes book.\nbob is a parent of eve.\ngeorge dislikes dave.\nalice likes phone.\nalice likes carol.\neve is a sibling of alice.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould frank is a parent of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,phone).",
    "c": "sunny :- cold.\nhungry(george) :- sunny.\nsmall(book) :- hungry(george).\ndislikes(carol,car) :- small(book).\nhungry(frank) :- dislikes(carol,car).\nhungry(dave) :- hungry(frank).\nsmall(pencil) :- hungry(dave).\nsibling(george,george) :- small(pencil).\nhappy(george) :- sibling(george,george).\nhappy(george) :- happy(george).\nparent(carol,dave) :- friend(frank,george).\nfriend(frank,dave) :- likes(george,carol), likes(frank,bob), sibling(alice,carol).\nparent(eve,eve) :- wet(ball), happy(dave).\nfriend(bob,carol) :- hungry(eve).\ncold.\nsibling(bob,alice).\ndislikes(bob,pencil).\nlikes(bob,carol).\nparent(frank,carol).\nlikes(george,dave).\ndislikes(bob,book).\nparent(bob,eve).\ndislikes(george,dave).\nlikes(alice,carol).\nsibling(eve,alice).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then book is small.\nIf book is small, then carol dislikes car.\nIf carol dislikes car, then frank is hungry.\nIf frank is hungry, then dave is hungry.\nIf dave is hungry, then pencil is small.\nIf pencil is small, then george is a sibling of george.\nIf george is a sibling of george, then george is happy.\nIf george is happy, then george is happy.\nIf frank is a friend of george, then carol is a parent of dave.\nIf george likes carol and frank likes bob and alice is a sibling of carol, then frank is a friend of dave.\nIf ball is wet and dave is happy, then eve is a parent of eve.\nIf eve is hungry, then bob is a friend of carol.\n\nAnd the following facts:\nit is cold.\nbob is a sibling of alice.\nbob dislikes pencil.\nbob likes carol.\nfrank is a parent of carol.\ngeorge likes dave.\nbob dislikes book.\nbob is a parent of eve.\ngeorge dislikes dave.\nalice likes phone.\nalice likes carol.\neve is a sibling of alice.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould alice likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(carol,dave).",
    "c": "parent(dave,eve) :- likes(alice,ball).\nlikes(frank,car) :- parent(dave,eve).\nhungry(eve) :- hungry(frank), sad(eve), cold.\nhungry(george) :- happy(dave), hungry(carol).\nwet(ball) :- hungry(alice), hungry(dave).\nwet(ball) :- happy(frank), wet(pencil).\nlikes(eve,dave) :- likes(bob,book), likes(george,pencil), sad(dave).\nlikes(dave,book) :- likes(dave,apple), dislikes(george,pencil), sunny.\ntall(frank) :- dislikes(eve,bob).\ntall(dave) :- sad(dave), sad(alice), tall(bob).\nenemy(bob,carol) :- parent(dave,bob), owns(alice,book), friend(alice,frank).\nenemy(frank,bob) :- hot, sad(bob).\nlikes(alice,dave) :- likes(frank,carol), sibling(george,eve).\nbig(pencil) :- likes(dave,eve), big(phone), parent(carol,eve).\nlikes(alice,ball).\nsibling(george,frank).\nparent(alice,dave).\nhappy(dave).\nowns(george,phone).\ntall(dave).\nsibling(carol,dave).\nlikes(bob,carol).\nenemy(bob,george).\nsibling(bob,carol).\nparent(frank,george).\ntall(george).\nlikes(eve,george).\nsibling(eve,carol).\nsibling(bob,frank).\ndislikes(frank,george).",
    "natural language": "You are given the following information:\nIf alice likes ball, then dave is a parent of eve.\nIf dave is a parent of eve, then frank likes car.\nIf frank is hungry and eve is sad and it is cold, then eve is hungry.\nIf dave is happy and carol is hungry, then george is hungry.\nIf alice is hungry and dave is hungry, then ball is wet.\nIf frank is happy and pencil is wet, then ball is wet.\nIf bob likes book and george likes pencil and dave is sad, then eve likes dave.\nIf dave likes apple and george dislikes pencil and it is sunny, then dave likes book.\nIf eve dislikes bob, then frank is tall.\nIf dave is sad and alice is sad and bob is tall, then dave is tall.\nIf dave is a parent of bob and alice owns book and alice is a friend of frank, then bob is an enemy of carol.\nIf it is hot and bob is sad, then frank is an enemy of bob.\nIf frank likes carol and george is a sibling of eve, then alice likes dave.\nIf dave likes eve and phone is big and carol is a parent of eve, then pencil is big.\n\nAnd the following facts:\nalice likes ball.\ngeorge is a sibling of frank.\nalice is a parent of dave.\ndave is happy.\ngeorge owns phone.\ndave is tall.\ncarol is a sibling of dave.\nbob likes carol.\nbob is an enemy of george.\nbob is a sibling of carol.\nfrank is a parent of george.\ngeorge is tall.\neve likes george.\neve is a sibling of carol.\nbob is a sibling of frank.\nfrank dislikes george.\n\nQUESTION:\nIs carol is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(dave).",
    "c": "parent(dave,eve) :- likes(alice,ball).\nlikes(frank,car) :- parent(dave,eve).\nhungry(eve) :- hungry(frank), sad(eve), cold.\nhungry(george) :- happy(dave), hungry(carol).\nwet(ball) :- hungry(alice), hungry(dave).\nwet(ball) :- happy(frank), wet(pencil).\nlikes(eve,dave) :- likes(bob,book), likes(george,pencil), sad(dave).\nlikes(dave,book) :- likes(dave,apple), dislikes(george,pencil), sunny.\ntall(frank) :- dislikes(eve,bob).\ntall(dave) :- sad(dave), sad(alice), tall(bob).\nenemy(bob,carol) :- parent(dave,bob), owns(alice,book), friend(alice,frank).\nenemy(frank,bob) :- hot, sad(bob).\nlikes(alice,dave) :- likes(frank,carol), sibling(george,eve).\nbig(pencil) :- likes(dave,eve), big(phone), parent(carol,eve).\nlikes(alice,ball).\nsibling(george,frank).\nparent(alice,dave).\nhappy(dave).\nowns(george,phone).\ntall(dave).\nsibling(carol,dave).\nlikes(bob,carol).\nenemy(bob,george).\nsibling(bob,carol).\nparent(frank,george).\ntall(george).\nlikes(eve,george).\nsibling(eve,carol).\nsibling(bob,frank).\ndislikes(frank,george).",
    "natural language": "You are given the following information:\nIf alice likes ball, then dave is a parent of eve.\nIf dave is a parent of eve, then frank likes car.\nIf frank is hungry and eve is sad and it is cold, then eve is hungry.\nIf dave is happy and carol is hungry, then george is hungry.\nIf alice is hungry and dave is hungry, then ball is wet.\nIf frank is happy and pencil is wet, then ball is wet.\nIf bob likes book and george likes pencil and dave is sad, then eve likes dave.\nIf dave likes apple and george dislikes pencil and it is sunny, then dave likes book.\nIf eve dislikes bob, then frank is tall.\nIf dave is sad and alice is sad and bob is tall, then dave is tall.\nIf dave is a parent of bob and alice owns book and alice is a friend of frank, then bob is an enemy of carol.\nIf it is hot and bob is sad, then frank is an enemy of bob.\nIf frank likes carol and george is a sibling of eve, then alice likes dave.\nIf dave likes eve and phone is big and carol is a parent of eve, then pencil is big.\n\nAnd the following facts:\nalice likes ball.\ngeorge is a sibling of frank.\nalice is a parent of dave.\ndave is happy.\ngeorge owns phone.\ndave is tall.\ncarol is a sibling of dave.\nbob likes carol.\nbob is an enemy of george.\nbob is a sibling of carol.\nfrank is a parent of george.\ngeorge is tall.\neve likes george.\neve is a sibling of carol.\nbob is a sibling of frank.\nfrank dislikes george.\n\nQUESTION:\nIs dave is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,george).",
    "c": "parent(dave,eve) :- likes(alice,ball).\nlikes(frank,car) :- parent(dave,eve).\nhungry(eve) :- hungry(frank), sad(eve), cold.\nhungry(george) :- happy(dave), hungry(carol).\nwet(ball) :- hungry(alice), hungry(dave).\nwet(ball) :- happy(frank), wet(pencil).\nlikes(eve,dave) :- likes(bob,book), likes(george,pencil), sad(dave).\nlikes(dave,book) :- likes(dave,apple), dislikes(george,pencil), sunny.\ntall(frank) :- dislikes(eve,bob).\ntall(dave) :- sad(dave), sad(alice), tall(bob).\nenemy(bob,carol) :- parent(dave,bob), owns(alice,book), friend(alice,frank).\nenemy(frank,bob) :- hot, sad(bob).\nlikes(alice,dave) :- likes(frank,carol), sibling(george,eve).\nbig(pencil) :- likes(dave,eve), big(phone), parent(carol,eve).\nlikes(alice,ball).\nsibling(george,frank).\nparent(alice,dave).\nhappy(dave).\nowns(george,phone).\ntall(dave).\nsibling(carol,dave).\nlikes(bob,carol).\nenemy(bob,george).\nsibling(bob,carol).\nparent(frank,george).\ntall(george).\nlikes(eve,george).\nsibling(eve,carol).\nsibling(bob,frank).\ndislikes(frank,george).",
    "natural language": "You are given the following information:\nIf alice likes ball, then dave is a parent of eve.\nIf dave is a parent of eve, then frank likes car.\nIf frank is hungry and eve is sad and it is cold, then eve is hungry.\nIf dave is happy and carol is hungry, then george is hungry.\nIf alice is hungry and dave is hungry, then ball is wet.\nIf frank is happy and pencil is wet, then ball is wet.\nIf bob likes book and george likes pencil and dave is sad, then eve likes dave.\nIf dave likes apple and george dislikes pencil and it is sunny, then dave likes book.\nIf eve dislikes bob, then frank is tall.\nIf dave is sad and alice is sad and bob is tall, then dave is tall.\nIf dave is a parent of bob and alice owns book and alice is a friend of frank, then bob is an enemy of carol.\nIf it is hot and bob is sad, then frank is an enemy of bob.\nIf frank likes carol and george is a sibling of eve, then alice likes dave.\nIf dave likes eve and phone is big and carol is a parent of eve, then pencil is big.\n\nAnd the following facts:\nalice likes ball.\ngeorge is a sibling of frank.\nalice is a parent of dave.\ndave is happy.\ngeorge owns phone.\ndave is tall.\ncarol is a sibling of dave.\nbob likes carol.\nbob is an enemy of george.\nbob is a sibling of carol.\nfrank is a parent of george.\ngeorge is tall.\neve likes george.\neve is a sibling of carol.\nbob is a sibling of frank.\nfrank dislikes george.\n\nQUESTION:\nIs bob is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,dave).",
    "c": "parent(dave,eve) :- likes(alice,ball).\nlikes(frank,car) :- parent(dave,eve).\nhungry(eve) :- hungry(frank), sad(eve), cold.\nhungry(george) :- happy(dave), hungry(carol).\nwet(ball) :- hungry(alice), hungry(dave).\nwet(ball) :- happy(frank), wet(pencil).\nlikes(eve,dave) :- likes(bob,book), likes(george,pencil), sad(dave).\nlikes(dave,book) :- likes(dave,apple), dislikes(george,pencil), sunny.\ntall(frank) :- dislikes(eve,bob).\ntall(dave) :- sad(dave), sad(alice), tall(bob).\nenemy(bob,carol) :- parent(dave,bob), owns(alice,book), friend(alice,frank).\nenemy(frank,bob) :- hot, sad(bob).\nlikes(alice,dave) :- likes(frank,carol), sibling(george,eve).\nbig(pencil) :- likes(dave,eve), big(phone), parent(carol,eve).\nlikes(alice,ball).\nsibling(george,frank).\nparent(alice,dave).\nhappy(dave).\nowns(george,phone).\ntall(dave).\nsibling(carol,dave).\nlikes(bob,carol).\nenemy(bob,george).\nsibling(bob,carol).\nparent(frank,george).\ntall(george).\nlikes(eve,george).\nsibling(eve,carol).\nsibling(bob,frank).\ndislikes(frank,george).",
    "natural language": "You are given the following information:\nIf alice likes ball, then dave is a parent of eve.\nIf dave is a parent of eve, then frank likes car.\nIf frank is hungry and eve is sad and it is cold, then eve is hungry.\nIf dave is happy and carol is hungry, then george is hungry.\nIf alice is hungry and dave is hungry, then ball is wet.\nIf frank is happy and pencil is wet, then ball is wet.\nIf bob likes book and george likes pencil and dave is sad, then eve likes dave.\nIf dave likes apple and george dislikes pencil and it is sunny, then dave likes book.\nIf eve dislikes bob, then frank is tall.\nIf dave is sad and alice is sad and bob is tall, then dave is tall.\nIf dave is a parent of bob and alice owns book and alice is a friend of frank, then bob is an enemy of carol.\nIf it is hot and bob is sad, then frank is an enemy of bob.\nIf frank likes carol and george is a sibling of eve, then alice likes dave.\nIf dave likes eve and phone is big and carol is a parent of eve, then pencil is big.\n\nAnd the following facts:\nalice likes ball.\ngeorge is a sibling of frank.\nalice is a parent of dave.\ndave is happy.\ngeorge owns phone.\ndave is tall.\ncarol is a sibling of dave.\nbob likes carol.\nbob is an enemy of george.\nbob is a sibling of carol.\nfrank is a parent of george.\ngeorge is tall.\neve likes george.\neve is a sibling of carol.\nbob is a sibling of frank.\nfrank dislikes george.\n\nQUESTION:\nIs alice dislikes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,apple).",
    "c": "parent(dave,eve) :- likes(alice,ball).\nlikes(frank,car) :- parent(dave,eve).\nhungry(eve) :- hungry(frank), sad(eve), cold.\nhungry(george) :- happy(dave), hungry(carol).\nwet(ball) :- hungry(alice), hungry(dave).\nwet(ball) :- happy(frank), wet(pencil).\nlikes(eve,dave) :- likes(bob,book), likes(george,pencil), sad(dave).\nlikes(dave,book) :- likes(dave,apple), dislikes(george,pencil), sunny.\ntall(frank) :- dislikes(eve,bob).\ntall(dave) :- sad(dave), sad(alice), tall(bob).\nenemy(bob,carol) :- parent(dave,bob), owns(alice,book), friend(alice,frank).\nenemy(frank,bob) :- hot, sad(bob).\nlikes(alice,dave) :- likes(frank,carol), sibling(george,eve).\nbig(pencil) :- likes(dave,eve), big(phone), parent(carol,eve).\nlikes(alice,ball).\nsibling(george,frank).\nparent(alice,dave).\nhappy(dave).\nowns(george,phone).\ntall(dave).\nsibling(carol,dave).\nlikes(bob,carol).\nenemy(bob,george).\nsibling(bob,carol).\nparent(frank,george).\ntall(george).\nlikes(eve,george).\nsibling(eve,carol).\nsibling(bob,frank).\ndislikes(frank,george).",
    "natural language": "You are given the following information:\nIf alice likes ball, then dave is a parent of eve.\nIf dave is a parent of eve, then frank likes car.\nIf frank is hungry and eve is sad and it is cold, then eve is hungry.\nIf dave is happy and carol is hungry, then george is hungry.\nIf alice is hungry and dave is hungry, then ball is wet.\nIf frank is happy and pencil is wet, then ball is wet.\nIf bob likes book and george likes pencil and dave is sad, then eve likes dave.\nIf dave likes apple and george dislikes pencil and it is sunny, then dave likes book.\nIf eve dislikes bob, then frank is tall.\nIf dave is sad and alice is sad and bob is tall, then dave is tall.\nIf dave is a parent of bob and alice owns book and alice is a friend of frank, then bob is an enemy of carol.\nIf it is hot and bob is sad, then frank is an enemy of bob.\nIf frank likes carol and george is a sibling of eve, then alice likes dave.\nIf dave likes eve and phone is big and carol is a parent of eve, then pencil is big.\n\nAnd the following facts:\nalice likes ball.\ngeorge is a sibling of frank.\nalice is a parent of dave.\ndave is happy.\ngeorge owns phone.\ndave is tall.\ncarol is a sibling of dave.\nbob likes carol.\nbob is an enemy of george.\nbob is a sibling of carol.\nfrank is a parent of george.\ngeorge is tall.\neve likes george.\neve is a sibling of carol.\nbob is a sibling of frank.\nfrank dislikes george.\n\nQUESTION:\nIs frank owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,ball).",
    "c": "parent(dave,eve) :- likes(alice,ball).\nlikes(frank,car) :- parent(dave,eve).\nhungry(eve) :- hungry(frank), sad(eve), cold.\nhungry(george) :- happy(dave), hungry(carol).\nwet(ball) :- hungry(alice), hungry(dave).\nwet(ball) :- happy(frank), wet(pencil).\nlikes(eve,dave) :- likes(bob,book), likes(george,pencil), sad(dave).\nlikes(dave,book) :- likes(dave,apple), dislikes(george,pencil), sunny.\ntall(frank) :- dislikes(eve,bob).\ntall(dave) :- sad(dave), sad(alice), tall(bob).\nenemy(bob,carol) :- parent(dave,bob), owns(alice,book), friend(alice,frank).\nenemy(frank,bob) :- hot, sad(bob).\nlikes(alice,dave) :- likes(frank,carol), sibling(george,eve).\nbig(pencil) :- likes(dave,eve), big(phone), parent(carol,eve).\nsibling(george,frank).\nparent(alice,dave).\nhappy(dave).\nowns(george,phone).\ntall(dave).\nsibling(carol,dave).\nlikes(bob,carol).\nenemy(bob,george).\nsibling(bob,carol).\nparent(frank,george).\ntall(george).\nlikes(eve,george).\nsibling(eve,carol).\nsibling(bob,frank).\ndislikes(frank,george).",
    "natural language": "You are given the following rules:\nIf alice likes ball, then dave is a parent of eve.\nIf dave is a parent of eve, then frank likes car.\nIf frank is hungry and eve is sad and it is cold, then eve is hungry.\nIf dave is happy and carol is hungry, then george is hungry.\nIf alice is hungry and dave is hungry, then ball is wet.\nIf frank is happy and pencil is wet, then ball is wet.\nIf bob likes book and george likes pencil and dave is sad, then eve likes dave.\nIf dave likes apple and george dislikes pencil and it is sunny, then dave likes book.\nIf eve dislikes bob, then frank is tall.\nIf dave is sad and alice is sad and bob is tall, then dave is tall.\nIf dave is a parent of bob and alice owns book and alice is a friend of frank, then bob is an enemy of carol.\nIf it is hot and bob is sad, then frank is an enemy of bob.\nIf frank likes carol and george is a sibling of eve, then alice likes dave.\nIf dave likes eve and phone is big and carol is a parent of eve, then pencil is big.\n\nAnd the following facts:\nalice likes ball.\ngeorge is a sibling of frank.\nalice is a parent of dave.\ndave is happy.\ngeorge owns phone.\ndave is tall.\ncarol is a sibling of dave.\nbob likes carol.\nbob is an enemy of george.\nbob is a sibling of carol.\nfrank is a parent of george.\ngeorge is tall.\neve likes george.\neve is a sibling of carol.\nbob is a sibling of frank.\nfrank dislikes george.\n\nOBSERVATION: frank likes car is true.\n\nQUESTION:\nCould alice likes ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "parent(dave,eve) :- likes(alice,ball).\nlikes(frank,car) :- parent(dave,eve).\nhungry(eve) :- hungry(frank), sad(eve), cold.\nhungry(george) :- happy(dave), hungry(carol).\nwet(ball) :- hungry(alice), hungry(dave).\nwet(ball) :- happy(frank), wet(pencil).\nlikes(eve,dave) :- likes(bob,book), likes(george,pencil), sad(dave).\nlikes(dave,book) :- likes(dave,apple), dislikes(george,pencil), sunny.\ntall(frank) :- dislikes(eve,bob).\ntall(dave) :- sad(dave), sad(alice), tall(bob).\nenemy(bob,carol) :- parent(dave,bob), owns(alice,book), friend(alice,frank).\nenemy(frank,bob) :- hot, sad(bob).\nlikes(alice,dave) :- likes(frank,carol), sibling(george,eve).\nbig(pencil) :- likes(dave,eve), big(phone), parent(carol,eve).\nlikes(alice,ball).\nsibling(george,frank).\nparent(alice,dave).\nhappy(dave).\nowns(george,phone).\ntall(dave).\nsibling(carol,dave).\nlikes(bob,carol).\nenemy(bob,george).\nsibling(bob,carol).\nparent(frank,george).\nlikes(eve,george).\nsibling(eve,carol).\nsibling(bob,frank).\ndislikes(frank,george).",
    "natural language": "You are given the following rules:\nIf alice likes ball, then dave is a parent of eve.\nIf dave is a parent of eve, then frank likes car.\nIf frank is hungry and eve is sad and it is cold, then eve is hungry.\nIf dave is happy and carol is hungry, then george is hungry.\nIf alice is hungry and dave is hungry, then ball is wet.\nIf frank is happy and pencil is wet, then ball is wet.\nIf bob likes book and george likes pencil and dave is sad, then eve likes dave.\nIf dave likes apple and george dislikes pencil and it is sunny, then dave likes book.\nIf eve dislikes bob, then frank is tall.\nIf dave is sad and alice is sad and bob is tall, then dave is tall.\nIf dave is a parent of bob and alice owns book and alice is a friend of frank, then bob is an enemy of carol.\nIf it is hot and bob is sad, then frank is an enemy of bob.\nIf frank likes carol and george is a sibling of eve, then alice likes dave.\nIf dave likes eve and phone is big and carol is a parent of eve, then pencil is big.\n\nAnd the following facts:\nalice likes ball.\ngeorge is a sibling of frank.\nalice is a parent of dave.\ndave is happy.\ngeorge owns phone.\ndave is tall.\ncarol is a sibling of dave.\nbob likes carol.\nbob is an enemy of george.\nbob is a sibling of carol.\nfrank is a parent of george.\ngeorge is tall.\neve likes george.\neve is a sibling of carol.\nbob is a sibling of frank.\nfrank dislikes george.\n\nOBSERVATION: frank likes car is true.\n\nQUESTION:\nCould george is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "tall(dave).",
    "c": "parent(dave,eve) :- likes(alice,ball).\nlikes(frank,car) :- parent(dave,eve).\nhungry(eve) :- hungry(frank), sad(eve), cold.\nhungry(george) :- happy(dave), hungry(carol).\nwet(ball) :- hungry(alice), hungry(dave).\nwet(ball) :- happy(frank), wet(pencil).\nlikes(eve,dave) :- likes(bob,book), likes(george,pencil), sad(dave).\nlikes(dave,book) :- likes(dave,apple), dislikes(george,pencil), sunny.\ntall(frank) :- dislikes(eve,bob).\ntall(dave) :- sad(dave), sad(alice), tall(bob).\nenemy(bob,carol) :- parent(dave,bob), owns(alice,book), friend(alice,frank).\nenemy(frank,bob) :- hot, sad(bob).\nlikes(alice,dave) :- likes(frank,carol), sibling(george,eve).\nbig(pencil) :- likes(dave,eve), big(phone), parent(carol,eve).\nlikes(alice,ball).\nsibling(george,frank).\nparent(alice,dave).\nhappy(dave).\nowns(george,phone).\nsibling(carol,dave).\nlikes(bob,carol).\nenemy(bob,george).\nsibling(bob,carol).\nparent(frank,george).\ntall(george).\nlikes(eve,george).\nsibling(eve,carol).\nsibling(bob,frank).\ndislikes(frank,george).",
    "natural language": "You are given the following rules:\nIf alice likes ball, then dave is a parent of eve.\nIf dave is a parent of eve, then frank likes car.\nIf frank is hungry and eve is sad and it is cold, then eve is hungry.\nIf dave is happy and carol is hungry, then george is hungry.\nIf alice is hungry and dave is hungry, then ball is wet.\nIf frank is happy and pencil is wet, then ball is wet.\nIf bob likes book and george likes pencil and dave is sad, then eve likes dave.\nIf dave likes apple and george dislikes pencil and it is sunny, then dave likes book.\nIf eve dislikes bob, then frank is tall.\nIf dave is sad and alice is sad and bob is tall, then dave is tall.\nIf dave is a parent of bob and alice owns book and alice is a friend of frank, then bob is an enemy of carol.\nIf it is hot and bob is sad, then frank is an enemy of bob.\nIf frank likes carol and george is a sibling of eve, then alice likes dave.\nIf dave likes eve and phone is big and carol is a parent of eve, then pencil is big.\n\nAnd the following facts:\nalice likes ball.\ngeorge is a sibling of frank.\nalice is a parent of dave.\ndave is happy.\ngeorge owns phone.\ndave is tall.\ncarol is a sibling of dave.\nbob likes carol.\nbob is an enemy of george.\nbob is a sibling of carol.\nfrank is a parent of george.\ngeorge is tall.\neve likes george.\neve is a sibling of carol.\nbob is a sibling of frank.\nfrank dislikes george.\n\nOBSERVATION: frank likes car is true.\n\nQUESTION:\nCould dave is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,apple).",
    "c": "tall(frank) :- wet(apple).\nfriend(eve,carol) :- tall(frank).\nhot :- hungry(dave), happy(eve), friend(dave,eve).\nparent(george,alice) :- likes(george,bob).\ncold :- wet(pencil).\nsmall(ball) :- wet(car).\nowns(dave,phone) :- wet(pencil).\nparent(alice,george) :- happy(alice), enemy(dave,alice).\nowns(eve,pencil) :- big(book), likes(alice,pencil), likes(dave,carol).\nenemy(carol,frank) :- owns(frank,book), friend(dave,dave), wet(pencil).\ncold :- big(car).\nparent(bob,frank) :- tall(carol), friend(carol,eve), small(book).\nhot :- small(book).\nlikes(george,car) :- parent(alice,dave), likes(dave,phone), wet(book).\nwet(apple).\nlikes(alice,apple).\nhappy(eve).\nlikes(frank,car).\nowns(frank,pencil).\nlikes(carol,alice).\nlikes(eve,carol).\nfriend(bob,frank).\nlikes(carol,car).\nlikes(george,bob).\nenemy(dave,alice).\nlikes(eve,alice).\nparent(carol,frank).\nsmall(ball).\nlikes(carol,ball).\nsmall(book).",
    "natural language": "You are given the following information:\nIf apple is wet, then frank is tall.\nIf frank is tall, then eve is a friend of carol.\nIf dave is hungry and eve is happy and dave is a friend of eve, then it is hot.\nIf george likes bob, then george is a parent of alice.\nIf pencil is wet, then it is cold.\nIf car is wet, then ball is small.\nIf pencil is wet, then dave owns phone.\nIf alice is happy and dave is an enemy of alice, then alice is a parent of george.\nIf book is big and alice likes pencil and dave likes carol, then eve owns pencil.\nIf frank owns book and dave is a friend of dave and pencil is wet, then carol is an enemy of frank.\nIf car is big, then it is cold.\nIf carol is tall and carol is a friend of eve and book is small, then bob is a parent of frank.\nIf book is small, then it is hot.\nIf alice is a parent of dave and dave likes phone and book is wet, then george likes car.\n\nAnd the following facts:\napple is wet.\nalice likes apple.\neve is happy.\nfrank likes car.\nfrank owns pencil.\ncarol likes alice.\neve likes carol.\nbob is a friend of frank.\ncarol likes car.\ngeorge likes bob.\ndave is an enemy of alice.\neve likes alice.\ncarol is a parent of frank.\nball is small.\ncarol likes ball.\nbook is small.\n\nQUESTION:\nIs alice likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,bob).",
    "c": "tall(frank) :- wet(apple).\nfriend(eve,carol) :- tall(frank).\nhot :- hungry(dave), happy(eve), friend(dave,eve).\nparent(george,alice) :- likes(george,bob).\ncold :- wet(pencil).\nsmall(ball) :- wet(car).\nowns(dave,phone) :- wet(pencil).\nparent(alice,george) :- happy(alice), enemy(dave,alice).\nowns(eve,pencil) :- big(book), likes(alice,pencil), likes(dave,carol).\nenemy(carol,frank) :- owns(frank,book), friend(dave,dave), wet(pencil).\ncold :- big(car).\nparent(bob,frank) :- tall(carol), friend(carol,eve), small(book).\nhot :- small(book).\nlikes(george,car) :- parent(alice,dave), likes(dave,phone), wet(book).\nwet(apple).\nlikes(alice,apple).\nhappy(eve).\nlikes(frank,car).\nowns(frank,pencil).\nlikes(carol,alice).\nlikes(eve,carol).\nfriend(bob,frank).\nlikes(carol,car).\nlikes(george,bob).\nenemy(dave,alice).\nlikes(eve,alice).\nparent(carol,frank).\nsmall(ball).\nlikes(carol,ball).\nsmall(book).",
    "natural language": "You are given the following information:\nIf apple is wet, then frank is tall.\nIf frank is tall, then eve is a friend of carol.\nIf dave is hungry and eve is happy and dave is a friend of eve, then it is hot.\nIf george likes bob, then george is a parent of alice.\nIf pencil is wet, then it is cold.\nIf car is wet, then ball is small.\nIf pencil is wet, then dave owns phone.\nIf alice is happy and dave is an enemy of alice, then alice is a parent of george.\nIf book is big and alice likes pencil and dave likes carol, then eve owns pencil.\nIf frank owns book and dave is a friend of dave and pencil is wet, then carol is an enemy of frank.\nIf car is big, then it is cold.\nIf carol is tall and carol is a friend of eve and book is small, then bob is a parent of frank.\nIf book is small, then it is hot.\nIf alice is a parent of dave and dave likes phone and book is wet, then george likes car.\n\nAnd the following facts:\napple is wet.\nalice likes apple.\neve is happy.\nfrank likes car.\nfrank owns pencil.\ncarol likes alice.\neve likes carol.\nbob is a friend of frank.\ncarol likes car.\ngeorge likes bob.\ndave is an enemy of alice.\neve likes alice.\ncarol is a parent of frank.\nball is small.\ncarol likes ball.\nbook is small.\n\nQUESTION:\nIs george likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,alice).",
    "c": "tall(frank) :- wet(apple).\nfriend(eve,carol) :- tall(frank).\nhot :- hungry(dave), happy(eve), friend(dave,eve).\nparent(george,alice) :- likes(george,bob).\ncold :- wet(pencil).\nsmall(ball) :- wet(car).\nowns(dave,phone) :- wet(pencil).\nparent(alice,george) :- happy(alice), enemy(dave,alice).\nowns(eve,pencil) :- big(book), likes(alice,pencil), likes(dave,carol).\nenemy(carol,frank) :- owns(frank,book), friend(dave,dave), wet(pencil).\ncold :- big(car).\nparent(bob,frank) :- tall(carol), friend(carol,eve), small(book).\nhot :- small(book).\nlikes(george,car) :- parent(alice,dave), likes(dave,phone), wet(book).\nwet(apple).\nlikes(alice,apple).\nhappy(eve).\nlikes(frank,car).\nowns(frank,pencil).\nlikes(carol,alice).\nlikes(eve,carol).\nfriend(bob,frank).\nlikes(carol,car).\nlikes(george,bob).\nenemy(dave,alice).\nlikes(eve,alice).\nparent(carol,frank).\nsmall(ball).\nlikes(carol,ball).\nsmall(book).",
    "natural language": "You are given the following information:\nIf apple is wet, then frank is tall.\nIf frank is tall, then eve is a friend of carol.\nIf dave is hungry and eve is happy and dave is a friend of eve, then it is hot.\nIf george likes bob, then george is a parent of alice.\nIf pencil is wet, then it is cold.\nIf car is wet, then ball is small.\nIf pencil is wet, then dave owns phone.\nIf alice is happy and dave is an enemy of alice, then alice is a parent of george.\nIf book is big and alice likes pencil and dave likes carol, then eve owns pencil.\nIf frank owns book and dave is a friend of dave and pencil is wet, then carol is an enemy of frank.\nIf car is big, then it is cold.\nIf carol is tall and carol is a friend of eve and book is small, then bob is a parent of frank.\nIf book is small, then it is hot.\nIf alice is a parent of dave and dave likes phone and book is wet, then george likes car.\n\nAnd the following facts:\napple is wet.\nalice likes apple.\neve is happy.\nfrank likes car.\nfrank owns pencil.\ncarol likes alice.\neve likes carol.\nbob is a friend of frank.\ncarol likes car.\ngeorge likes bob.\ndave is an enemy of alice.\neve likes alice.\ncarol is a parent of frank.\nball is small.\ncarol likes ball.\nbook is small.\n\nQUESTION:\nIs george is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,eve).",
    "c": "tall(frank) :- wet(apple).\nfriend(eve,carol) :- tall(frank).\nhot :- hungry(dave), happy(eve), friend(dave,eve).\nparent(george,alice) :- likes(george,bob).\ncold :- wet(pencil).\nsmall(ball) :- wet(car).\nowns(dave,phone) :- wet(pencil).\nparent(alice,george) :- happy(alice), enemy(dave,alice).\nowns(eve,pencil) :- big(book), likes(alice,pencil), likes(dave,carol).\nenemy(carol,frank) :- owns(frank,book), friend(dave,dave), wet(pencil).\ncold :- big(car).\nparent(bob,frank) :- tall(carol), friend(carol,eve), small(book).\nhot :- small(book).\nlikes(george,car) :- parent(alice,dave), likes(dave,phone), wet(book).\nwet(apple).\nlikes(alice,apple).\nhappy(eve).\nlikes(frank,car).\nowns(frank,pencil).\nlikes(carol,alice).\nlikes(eve,carol).\nfriend(bob,frank).\nlikes(carol,car).\nlikes(george,bob).\nenemy(dave,alice).\nlikes(eve,alice).\nparent(carol,frank).\nsmall(ball).\nlikes(carol,ball).\nsmall(book).",
    "natural language": "You are given the following information:\nIf apple is wet, then frank is tall.\nIf frank is tall, then eve is a friend of carol.\nIf dave is hungry and eve is happy and dave is a friend of eve, then it is hot.\nIf george likes bob, then george is a parent of alice.\nIf pencil is wet, then it is cold.\nIf car is wet, then ball is small.\nIf pencil is wet, then dave owns phone.\nIf alice is happy and dave is an enemy of alice, then alice is a parent of george.\nIf book is big and alice likes pencil and dave likes carol, then eve owns pencil.\nIf frank owns book and dave is a friend of dave and pencil is wet, then carol is an enemy of frank.\nIf car is big, then it is cold.\nIf carol is tall and carol is a friend of eve and book is small, then bob is a parent of frank.\nIf book is small, then it is hot.\nIf alice is a parent of dave and dave likes phone and book is wet, then george likes car.\n\nAnd the following facts:\napple is wet.\nalice likes apple.\neve is happy.\nfrank likes car.\nfrank owns pencil.\ncarol likes alice.\neve likes carol.\nbob is a friend of frank.\ncarol likes car.\ngeorge likes bob.\ndave is an enemy of alice.\neve likes alice.\ncarol is a parent of frank.\nball is small.\ncarol likes ball.\nbook is small.\n\nQUESTION:\nIs alice is a parent of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,george).",
    "c": "tall(frank) :- wet(apple).\nfriend(eve,carol) :- tall(frank).\nhot :- hungry(dave), happy(eve), friend(dave,eve).\nparent(george,alice) :- likes(george,bob).\ncold :- wet(pencil).\nsmall(ball) :- wet(car).\nowns(dave,phone) :- wet(pencil).\nparent(alice,george) :- happy(alice), enemy(dave,alice).\nowns(eve,pencil) :- big(book), likes(alice,pencil), likes(dave,carol).\nenemy(carol,frank) :- owns(frank,book), friend(dave,dave), wet(pencil).\ncold :- big(car).\nparent(bob,frank) :- tall(carol), friend(carol,eve), small(book).\nhot :- small(book).\nlikes(george,car) :- parent(alice,dave), likes(dave,phone), wet(book).\nwet(apple).\nlikes(alice,apple).\nhappy(eve).\nlikes(frank,car).\nowns(frank,pencil).\nlikes(carol,alice).\nlikes(eve,carol).\nfriend(bob,frank).\nlikes(carol,car).\nlikes(george,bob).\nenemy(dave,alice).\nlikes(eve,alice).\nparent(carol,frank).\nsmall(ball).\nlikes(carol,ball).\nsmall(book).",
    "natural language": "You are given the following information:\nIf apple is wet, then frank is tall.\nIf frank is tall, then eve is a friend of carol.\nIf dave is hungry and eve is happy and dave is a friend of eve, then it is hot.\nIf george likes bob, then george is a parent of alice.\nIf pencil is wet, then it is cold.\nIf car is wet, then ball is small.\nIf pencil is wet, then dave owns phone.\nIf alice is happy and dave is an enemy of alice, then alice is a parent of george.\nIf book is big and alice likes pencil and dave likes carol, then eve owns pencil.\nIf frank owns book and dave is a friend of dave and pencil is wet, then carol is an enemy of frank.\nIf car is big, then it is cold.\nIf carol is tall and carol is a friend of eve and book is small, then bob is a parent of frank.\nIf book is small, then it is hot.\nIf alice is a parent of dave and dave likes phone and book is wet, then george likes car.\n\nAnd the following facts:\napple is wet.\nalice likes apple.\neve is happy.\nfrank likes car.\nfrank owns pencil.\ncarol likes alice.\neve likes carol.\nbob is a friend of frank.\ncarol likes car.\ngeorge likes bob.\ndave is an enemy of alice.\neve likes alice.\ncarol is a parent of frank.\nball is small.\ncarol likes ball.\nbook is small.\n\nQUESTION:\nIs bob is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "tall(frank) :- wet(apple).\nfriend(eve,carol) :- tall(frank).\nhot :- hungry(dave), happy(eve), friend(dave,eve).\nparent(george,alice) :- likes(george,bob).\ncold :- wet(pencil).\nsmall(ball) :- wet(car).\nowns(dave,phone) :- wet(pencil).\nparent(alice,george) :- happy(alice), enemy(dave,alice).\nowns(eve,pencil) :- big(book), likes(alice,pencil), likes(dave,carol).\nenemy(carol,frank) :- owns(frank,book), friend(dave,dave), wet(pencil).\ncold :- big(car).\nparent(bob,frank) :- tall(carol), friend(carol,eve), small(book).\nhot :- small(book).\nlikes(george,car) :- parent(alice,dave), likes(dave,phone), wet(book).\nlikes(alice,apple).\nhappy(eve).\nlikes(frank,car).\nowns(frank,pencil).\nlikes(carol,alice).\nlikes(eve,carol).\nfriend(bob,frank).\nlikes(carol,car).\nlikes(george,bob).\nenemy(dave,alice).\nlikes(eve,alice).\nparent(carol,frank).\nsmall(ball).\nlikes(carol,ball).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf apple is wet, then frank is tall.\nIf frank is tall, then eve is a friend of carol.\nIf dave is hungry and eve is happy and dave is a friend of eve, then it is hot.\nIf george likes bob, then george is a parent of alice.\nIf pencil is wet, then it is cold.\nIf car is wet, then ball is small.\nIf pencil is wet, then dave owns phone.\nIf alice is happy and dave is an enemy of alice, then alice is a parent of george.\nIf book is big and alice likes pencil and dave likes carol, then eve owns pencil.\nIf frank owns book and dave is a friend of dave and pencil is wet, then carol is an enemy of frank.\nIf car is big, then it is cold.\nIf carol is tall and carol is a friend of eve and book is small, then bob is a parent of frank.\nIf book is small, then it is hot.\nIf alice is a parent of dave and dave likes phone and book is wet, then george likes car.\n\nAnd the following facts:\napple is wet.\nalice likes apple.\neve is happy.\nfrank likes car.\nfrank owns pencil.\ncarol likes alice.\neve likes carol.\nbob is a friend of frank.\ncarol likes car.\ngeorge likes bob.\ndave is an enemy of alice.\neve likes alice.\ncarol is a parent of frank.\nball is small.\ncarol likes ball.\nbook is small.\n\nOBSERVATION: eve is a friend of carol is true.\n\nQUESTION:\nCould apple is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(frank,pencil).",
    "c": "tall(frank) :- wet(apple).\nfriend(eve,carol) :- tall(frank).\nhot :- hungry(dave), happy(eve), friend(dave,eve).\nparent(george,alice) :- likes(george,bob).\ncold :- wet(pencil).\nsmall(ball) :- wet(car).\nowns(dave,phone) :- wet(pencil).\nparent(alice,george) :- happy(alice), enemy(dave,alice).\nowns(eve,pencil) :- big(book), likes(alice,pencil), likes(dave,carol).\nenemy(carol,frank) :- owns(frank,book), friend(dave,dave), wet(pencil).\ncold :- big(car).\nparent(bob,frank) :- tall(carol), friend(carol,eve), small(book).\nhot :- small(book).\nlikes(george,car) :- parent(alice,dave), likes(dave,phone), wet(book).\nwet(apple).\nlikes(alice,apple).\nhappy(eve).\nlikes(frank,car).\nlikes(carol,alice).\nlikes(eve,carol).\nfriend(bob,frank).\nlikes(carol,car).\nlikes(george,bob).\nenemy(dave,alice).\nlikes(eve,alice).\nparent(carol,frank).\nsmall(ball).\nlikes(carol,ball).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf apple is wet, then frank is tall.\nIf frank is tall, then eve is a friend of carol.\nIf dave is hungry and eve is happy and dave is a friend of eve, then it is hot.\nIf george likes bob, then george is a parent of alice.\nIf pencil is wet, then it is cold.\nIf car is wet, then ball is small.\nIf pencil is wet, then dave owns phone.\nIf alice is happy and dave is an enemy of alice, then alice is a parent of george.\nIf book is big and alice likes pencil and dave likes carol, then eve owns pencil.\nIf frank owns book and dave is a friend of dave and pencil is wet, then carol is an enemy of frank.\nIf car is big, then it is cold.\nIf carol is tall and carol is a friend of eve and book is small, then bob is a parent of frank.\nIf book is small, then it is hot.\nIf alice is a parent of dave and dave likes phone and book is wet, then george likes car.\n\nAnd the following facts:\napple is wet.\nalice likes apple.\neve is happy.\nfrank likes car.\nfrank owns pencil.\ncarol likes alice.\neve likes carol.\nbob is a friend of frank.\ncarol likes car.\ngeorge likes bob.\ndave is an enemy of alice.\neve likes alice.\ncarol is a parent of frank.\nball is small.\ncarol likes ball.\nbook is small.\n\nOBSERVATION: eve is a friend of carol is true.\n\nQUESTION:\nCould frank owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(ball).",
    "c": "tall(frank) :- wet(apple).\nfriend(eve,carol) :- tall(frank).\nhot :- hungry(dave), happy(eve), friend(dave,eve).\nparent(george,alice) :- likes(george,bob).\ncold :- wet(pencil).\nsmall(ball) :- wet(car).\nowns(dave,phone) :- wet(pencil).\nparent(alice,george) :- happy(alice), enemy(dave,alice).\nowns(eve,pencil) :- big(book), likes(alice,pencil), likes(dave,carol).\nenemy(carol,frank) :- owns(frank,book), friend(dave,dave), wet(pencil).\ncold :- big(car).\nparent(bob,frank) :- tall(carol), friend(carol,eve), small(book).\nhot :- small(book).\nlikes(george,car) :- parent(alice,dave), likes(dave,phone), wet(book).\nwet(apple).\nlikes(alice,apple).\nhappy(eve).\nlikes(frank,car).\nowns(frank,pencil).\nlikes(carol,alice).\nlikes(eve,carol).\nfriend(bob,frank).\nlikes(carol,car).\nlikes(george,bob).\nenemy(dave,alice).\nlikes(eve,alice).\nparent(carol,frank).\nlikes(carol,ball).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf apple is wet, then frank is tall.\nIf frank is tall, then eve is a friend of carol.\nIf dave is hungry and eve is happy and dave is a friend of eve, then it is hot.\nIf george likes bob, then george is a parent of alice.\nIf pencil is wet, then it is cold.\nIf car is wet, then ball is small.\nIf pencil is wet, then dave owns phone.\nIf alice is happy and dave is an enemy of alice, then alice is a parent of george.\nIf book is big and alice likes pencil and dave likes carol, then eve owns pencil.\nIf frank owns book and dave is a friend of dave and pencil is wet, then carol is an enemy of frank.\nIf car is big, then it is cold.\nIf carol is tall and carol is a friend of eve and book is small, then bob is a parent of frank.\nIf book is small, then it is hot.\nIf alice is a parent of dave and dave likes phone and book is wet, then george likes car.\n\nAnd the following facts:\napple is wet.\nalice likes apple.\neve is happy.\nfrank likes car.\nfrank owns pencil.\ncarol likes alice.\neve likes carol.\nbob is a friend of frank.\ncarol likes car.\ngeorge likes bob.\ndave is an enemy of alice.\neve likes alice.\ncarol is a parent of frank.\nball is small.\ncarol likes ball.\nbook is small.\n\nOBSERVATION: eve is a friend of carol is true.\n\nQUESTION:\nCould ball is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(eve,phone).",
    "c": "owns(eve,phone) :- happy(bob).\nsad(carol) :- owns(eve,phone).\nhappy(bob) :- sad(carol).\nenemy(carol,eve) :- happy(bob).\nparent(eve,frank) :- sibling(dave,bob), enemy(alice,carol).\nhappy(alice) :- owns(alice,book), dislikes(carol,frank).\nhot :- hot, happy(alice), wet(pencil).\ncold :- sibling(frank,eve), cold, sunny.\nparent(alice,bob) :- parent(george,dave), sibling(eve,dave).\nsmall(car) :- small(ball).\nsad(carol) :- hot.\nsad(frank) :- sad(eve), wet(apple), big(apple).\nhappy(alice) :- tall(frank).\ncold :- likes(eve,ball), cold, cold.\nhappy(bob).\nhappy(bob).\ndislikes(dave,car).\nenemy(bob,alice).\nsmall(book).\nowns(carol,apple).\nlikes(alice,book).\nparent(george,dave).\ndislikes(eve,alice).\nenemy(dave,george).\nwet(book).\nlikes(eve,bob).\nowns(bob,pencil).\ndislikes(eve,apple).\nowns(frank,phone).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf bob is happy, then eve owns phone.\nIf eve owns phone, then carol is sad.\nIf carol is sad, then bob is happy.\nIf bob is happy, then carol is an enemy of eve.\nIf dave is a sibling of bob and alice is an enemy of carol, then eve is a parent of frank.\nIf alice owns book and carol dislikes frank, then alice is happy.\nIf it is hot and alice is happy and pencil is wet, then it is hot.\nIf frank is a sibling of eve and it is cold and it is sunny, then it is cold.\nIf george is a parent of dave and eve is a sibling of dave, then alice is a parent of bob.\nIf ball is small, then car is small.\nIf it is hot, then carol is sad.\nIf eve is sad and apple is wet and apple is big, then frank is sad.\nIf frank is tall, then alice is happy.\nIf eve likes ball and it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob is happy.\ndave dislikes car.\nbob is an enemy of alice.\nbook is small.\ncarol owns apple.\nalice likes book.\ngeorge is a parent of dave.\neve dislikes alice.\ndave is an enemy of george.\nbook is wet.\neve likes bob.\nbob owns pencil.\neve dislikes apple.\nfrank owns phone.\nbob is an enemy of eve.\n\nQUESTION:\nIs eve owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,dave).",
    "c": "owns(eve,phone) :- happy(bob).\nsad(carol) :- owns(eve,phone).\nhappy(bob) :- sad(carol).\nenemy(carol,eve) :- happy(bob).\nparent(eve,frank) :- sibling(dave,bob), enemy(alice,carol).\nhappy(alice) :- owns(alice,book), dislikes(carol,frank).\nhot :- hot, happy(alice), wet(pencil).\ncold :- sibling(frank,eve), cold, sunny.\nparent(alice,bob) :- parent(george,dave), sibling(eve,dave).\nsmall(car) :- small(ball).\nsad(carol) :- hot.\nsad(frank) :- sad(eve), wet(apple), big(apple).\nhappy(alice) :- tall(frank).\ncold :- likes(eve,ball), cold, cold.\nhappy(bob).\nhappy(bob).\ndislikes(dave,car).\nenemy(bob,alice).\nsmall(book).\nowns(carol,apple).\nlikes(alice,book).\nparent(george,dave).\ndislikes(eve,alice).\nenemy(dave,george).\nwet(book).\nlikes(eve,bob).\nowns(bob,pencil).\ndislikes(eve,apple).\nowns(frank,phone).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf bob is happy, then eve owns phone.\nIf eve owns phone, then carol is sad.\nIf carol is sad, then bob is happy.\nIf bob is happy, then carol is an enemy of eve.\nIf dave is a sibling of bob and alice is an enemy of carol, then eve is a parent of frank.\nIf alice owns book and carol dislikes frank, then alice is happy.\nIf it is hot and alice is happy and pencil is wet, then it is hot.\nIf frank is a sibling of eve and it is cold and it is sunny, then it is cold.\nIf george is a parent of dave and eve is a sibling of dave, then alice is a parent of bob.\nIf ball is small, then car is small.\nIf it is hot, then carol is sad.\nIf eve is sad and apple is wet and apple is big, then frank is sad.\nIf frank is tall, then alice is happy.\nIf eve likes ball and it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob is happy.\ndave dislikes car.\nbob is an enemy of alice.\nbook is small.\ncarol owns apple.\nalice likes book.\ngeorge is a parent of dave.\neve dislikes alice.\ndave is an enemy of george.\nbook is wet.\neve likes bob.\nbob owns pencil.\neve dislikes apple.\nfrank owns phone.\nbob is an enemy of eve.\n\nQUESTION:\nIs george is a parent of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,bob).",
    "c": "owns(eve,phone) :- happy(bob).\nsad(carol) :- owns(eve,phone).\nhappy(bob) :- sad(carol).\nenemy(carol,eve) :- happy(bob).\nparent(eve,frank) :- sibling(dave,bob), enemy(alice,carol).\nhappy(alice) :- owns(alice,book), dislikes(carol,frank).\nhot :- hot, happy(alice), wet(pencil).\ncold :- sibling(frank,eve), cold, sunny.\nparent(alice,bob) :- parent(george,dave), sibling(eve,dave).\nsmall(car) :- small(ball).\nsad(carol) :- hot.\nsad(frank) :- sad(eve), wet(apple), big(apple).\nhappy(alice) :- tall(frank).\ncold :- likes(eve,ball), cold, cold.\nhappy(bob).\nhappy(bob).\ndislikes(dave,car).\nenemy(bob,alice).\nsmall(book).\nowns(carol,apple).\nlikes(alice,book).\nparent(george,dave).\ndislikes(eve,alice).\nenemy(dave,george).\nwet(book).\nlikes(eve,bob).\nowns(bob,pencil).\ndislikes(eve,apple).\nowns(frank,phone).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf bob is happy, then eve owns phone.\nIf eve owns phone, then carol is sad.\nIf carol is sad, then bob is happy.\nIf bob is happy, then carol is an enemy of eve.\nIf dave is a sibling of bob and alice is an enemy of carol, then eve is a parent of frank.\nIf alice owns book and carol dislikes frank, then alice is happy.\nIf it is hot and alice is happy and pencil is wet, then it is hot.\nIf frank is a sibling of eve and it is cold and it is sunny, then it is cold.\nIf george is a parent of dave and eve is a sibling of dave, then alice is a parent of bob.\nIf ball is small, then car is small.\nIf it is hot, then carol is sad.\nIf eve is sad and apple is wet and apple is big, then frank is sad.\nIf frank is tall, then alice is happy.\nIf eve likes ball and it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob is happy.\ndave dislikes car.\nbob is an enemy of alice.\nbook is small.\ncarol owns apple.\nalice likes book.\ngeorge is a parent of dave.\neve dislikes alice.\ndave is an enemy of george.\nbook is wet.\neve likes bob.\nbob owns pencil.\neve dislikes apple.\nfrank owns phone.\nbob is an enemy of eve.\n\nQUESTION:\nIs eve likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,apple).",
    "c": "owns(eve,phone) :- happy(bob).\nsad(carol) :- owns(eve,phone).\nhappy(bob) :- sad(carol).\nenemy(carol,eve) :- happy(bob).\nparent(eve,frank) :- sibling(dave,bob), enemy(alice,carol).\nhappy(alice) :- owns(alice,book), dislikes(carol,frank).\nhot :- hot, happy(alice), wet(pencil).\ncold :- sibling(frank,eve), cold, sunny.\nparent(alice,bob) :- parent(george,dave), sibling(eve,dave).\nsmall(car) :- small(ball).\nsad(carol) :- hot.\nsad(frank) :- sad(eve), wet(apple), big(apple).\nhappy(alice) :- tall(frank).\ncold :- likes(eve,ball), cold, cold.\nhappy(bob).\nhappy(bob).\ndislikes(dave,car).\nenemy(bob,alice).\nsmall(book).\nowns(carol,apple).\nlikes(alice,book).\nparent(george,dave).\ndislikes(eve,alice).\nenemy(dave,george).\nwet(book).\nlikes(eve,bob).\nowns(bob,pencil).\ndislikes(eve,apple).\nowns(frank,phone).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf bob is happy, then eve owns phone.\nIf eve owns phone, then carol is sad.\nIf carol is sad, then bob is happy.\nIf bob is happy, then carol is an enemy of eve.\nIf dave is a sibling of bob and alice is an enemy of carol, then eve is a parent of frank.\nIf alice owns book and carol dislikes frank, then alice is happy.\nIf it is hot and alice is happy and pencil is wet, then it is hot.\nIf frank is a sibling of eve and it is cold and it is sunny, then it is cold.\nIf george is a parent of dave and eve is a sibling of dave, then alice is a parent of bob.\nIf ball is small, then car is small.\nIf it is hot, then carol is sad.\nIf eve is sad and apple is wet and apple is big, then frank is sad.\nIf frank is tall, then alice is happy.\nIf eve likes ball and it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob is happy.\ndave dislikes car.\nbob is an enemy of alice.\nbook is small.\ncarol owns apple.\nalice likes book.\ngeorge is a parent of dave.\neve dislikes alice.\ndave is an enemy of george.\nbook is wet.\neve likes bob.\nbob owns pencil.\neve dislikes apple.\nfrank owns phone.\nbob is an enemy of eve.\n\nQUESTION:\nIs bob likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,bob).",
    "c": "owns(eve,phone) :- happy(bob).\nsad(carol) :- owns(eve,phone).\nhappy(bob) :- sad(carol).\nenemy(carol,eve) :- happy(bob).\nparent(eve,frank) :- sibling(dave,bob), enemy(alice,carol).\nhappy(alice) :- owns(alice,book), dislikes(carol,frank).\nhot :- hot, happy(alice), wet(pencil).\ncold :- sibling(frank,eve), cold, sunny.\nparent(alice,bob) :- parent(george,dave), sibling(eve,dave).\nsmall(car) :- small(ball).\nsad(carol) :- hot.\nsad(frank) :- sad(eve), wet(apple), big(apple).\nhappy(alice) :- tall(frank).\ncold :- likes(eve,ball), cold, cold.\nhappy(bob).\nhappy(bob).\ndislikes(dave,car).\nenemy(bob,alice).\nsmall(book).\nowns(carol,apple).\nlikes(alice,book).\nparent(george,dave).\ndislikes(eve,alice).\nenemy(dave,george).\nwet(book).\nlikes(eve,bob).\nowns(bob,pencil).\ndislikes(eve,apple).\nowns(frank,phone).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf bob is happy, then eve owns phone.\nIf eve owns phone, then carol is sad.\nIf carol is sad, then bob is happy.\nIf bob is happy, then carol is an enemy of eve.\nIf dave is a sibling of bob and alice is an enemy of carol, then eve is a parent of frank.\nIf alice owns book and carol dislikes frank, then alice is happy.\nIf it is hot and alice is happy and pencil is wet, then it is hot.\nIf frank is a sibling of eve and it is cold and it is sunny, then it is cold.\nIf george is a parent of dave and eve is a sibling of dave, then alice is a parent of bob.\nIf ball is small, then car is small.\nIf it is hot, then carol is sad.\nIf eve is sad and apple is wet and apple is big, then frank is sad.\nIf frank is tall, then alice is happy.\nIf eve likes ball and it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob is happy.\ndave dislikes car.\nbob is an enemy of alice.\nbook is small.\ncarol owns apple.\nalice likes book.\ngeorge is a parent of dave.\neve dislikes alice.\ndave is an enemy of george.\nbook is wet.\neve likes bob.\nbob owns pencil.\neve dislikes apple.\nfrank owns phone.\nbob is an enemy of eve.\n\nQUESTION:\nIs frank likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "owns(eve,phone) :- happy(bob).\nsad(carol) :- owns(eve,phone).\nhappy(bob) :- sad(carol).\nenemy(carol,eve) :- happy(bob).\nparent(eve,frank) :- sibling(dave,bob), enemy(alice,carol).\nhappy(alice) :- owns(alice,book), dislikes(carol,frank).\nhot :- hot, happy(alice), wet(pencil).\ncold :- sibling(frank,eve), cold, sunny.\nparent(alice,bob) :- parent(george,dave), sibling(eve,dave).\nsmall(car) :- small(ball).\nsad(carol) :- hot.\nsad(frank) :- sad(eve), wet(apple), big(apple).\nhappy(alice) :- tall(frank).\ncold :- likes(eve,ball), cold, cold.\ndislikes(dave,car).\nenemy(bob,alice).\nsmall(book).\nowns(carol,apple).\nlikes(alice,book).\nparent(george,dave).\ndislikes(eve,alice).\nenemy(dave,george).\nwet(book).\nlikes(eve,bob).\nowns(bob,pencil).\ndislikes(eve,apple).\nowns(frank,phone).\nenemy(bob,eve).",
    "natural language": "You are given the following rules:\nIf bob is happy, then eve owns phone.\nIf eve owns phone, then carol is sad.\nIf carol is sad, then bob is happy.\nIf bob is happy, then carol is an enemy of eve.\nIf dave is a sibling of bob and alice is an enemy of carol, then eve is a parent of frank.\nIf alice owns book and carol dislikes frank, then alice is happy.\nIf it is hot and alice is happy and pencil is wet, then it is hot.\nIf frank is a sibling of eve and it is cold and it is sunny, then it is cold.\nIf george is a parent of dave and eve is a sibling of dave, then alice is a parent of bob.\nIf ball is small, then car is small.\nIf it is hot, then carol is sad.\nIf eve is sad and apple is wet and apple is big, then frank is sad.\nIf frank is tall, then alice is happy.\nIf eve likes ball and it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob is happy.\ndave dislikes car.\nbob is an enemy of alice.\nbook is small.\ncarol owns apple.\nalice likes book.\ngeorge is a parent of dave.\neve dislikes alice.\ndave is an enemy of george.\nbook is wet.\neve likes bob.\nbob owns pencil.\neve dislikes apple.\nfrank owns phone.\nbob is an enemy of eve.\n\nOBSERVATION: carol is an enemy of eve is true.\n\nQUESTION:\nCould bob is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,bob).",
    "c": "owns(eve,phone) :- happy(bob).\nsad(carol) :- owns(eve,phone).\nhappy(bob) :- sad(carol).\nenemy(carol,eve) :- happy(bob).\nparent(eve,frank) :- sibling(dave,bob), enemy(alice,carol).\nhappy(alice) :- owns(alice,book), dislikes(carol,frank).\nhot :- hot, happy(alice), wet(pencil).\ncold :- sibling(frank,eve), cold, sunny.\nparent(alice,bob) :- parent(george,dave), sibling(eve,dave).\nsmall(car) :- small(ball).\nsad(carol) :- hot.\nsad(frank) :- sad(eve), wet(apple), big(apple).\nhappy(alice) :- tall(frank).\ncold :- likes(eve,ball), cold, cold.\nhappy(bob).\nhappy(bob).\ndislikes(dave,car).\nenemy(bob,alice).\nsmall(book).\nowns(carol,apple).\nlikes(alice,book).\nparent(george,dave).\ndislikes(eve,alice).\nenemy(dave,george).\nwet(book).\nowns(bob,pencil).\ndislikes(eve,apple).\nowns(frank,phone).\nenemy(bob,eve).",
    "natural language": "You are given the following rules:\nIf bob is happy, then eve owns phone.\nIf eve owns phone, then carol is sad.\nIf carol is sad, then bob is happy.\nIf bob is happy, then carol is an enemy of eve.\nIf dave is a sibling of bob and alice is an enemy of carol, then eve is a parent of frank.\nIf alice owns book and carol dislikes frank, then alice is happy.\nIf it is hot and alice is happy and pencil is wet, then it is hot.\nIf frank is a sibling of eve and it is cold and it is sunny, then it is cold.\nIf george is a parent of dave and eve is a sibling of dave, then alice is a parent of bob.\nIf ball is small, then car is small.\nIf it is hot, then carol is sad.\nIf eve is sad and apple is wet and apple is big, then frank is sad.\nIf frank is tall, then alice is happy.\nIf eve likes ball and it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob is happy.\ndave dislikes car.\nbob is an enemy of alice.\nbook is small.\ncarol owns apple.\nalice likes book.\ngeorge is a parent of dave.\neve dislikes alice.\ndave is an enemy of george.\nbook is wet.\neve likes bob.\nbob owns pencil.\neve dislikes apple.\nfrank owns phone.\nbob is an enemy of eve.\n\nOBSERVATION: carol is an enemy of eve is true.\n\nQUESTION:\nCould eve likes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(eve,alice).",
    "c": "owns(eve,phone) :- happy(bob).\nsad(carol) :- owns(eve,phone).\nhappy(bob) :- sad(carol).\nenemy(carol,eve) :- happy(bob).\nparent(eve,frank) :- sibling(dave,bob), enemy(alice,carol).\nhappy(alice) :- owns(alice,book), dislikes(carol,frank).\nhot :- hot, happy(alice), wet(pencil).\ncold :- sibling(frank,eve), cold, sunny.\nparent(alice,bob) :- parent(george,dave), sibling(eve,dave).\nsmall(car) :- small(ball).\nsad(carol) :- hot.\nsad(frank) :- sad(eve), wet(apple), big(apple).\nhappy(alice) :- tall(frank).\ncold :- likes(eve,ball), cold, cold.\nhappy(bob).\nhappy(bob).\ndislikes(dave,car).\nenemy(bob,alice).\nsmall(book).\nowns(carol,apple).\nlikes(alice,book).\nparent(george,dave).\nenemy(dave,george).\nwet(book).\nlikes(eve,bob).\nowns(bob,pencil).\ndislikes(eve,apple).\nowns(frank,phone).\nenemy(bob,eve).",
    "natural language": "You are given the following rules:\nIf bob is happy, then eve owns phone.\nIf eve owns phone, then carol is sad.\nIf carol is sad, then bob is happy.\nIf bob is happy, then carol is an enemy of eve.\nIf dave is a sibling of bob and alice is an enemy of carol, then eve is a parent of frank.\nIf alice owns book and carol dislikes frank, then alice is happy.\nIf it is hot and alice is happy and pencil is wet, then it is hot.\nIf frank is a sibling of eve and it is cold and it is sunny, then it is cold.\nIf george is a parent of dave and eve is a sibling of dave, then alice is a parent of bob.\nIf ball is small, then car is small.\nIf it is hot, then carol is sad.\nIf eve is sad and apple is wet and apple is big, then frank is sad.\nIf frank is tall, then alice is happy.\nIf eve likes ball and it is cold and it is cold, then it is cold.\n\nAnd the following facts:\nbob is happy.\nbob is happy.\ndave dislikes car.\nbob is an enemy of alice.\nbook is small.\ncarol owns apple.\nalice likes book.\ngeorge is a parent of dave.\neve dislikes alice.\ndave is an enemy of george.\nbook is wet.\neve likes bob.\nbob owns pencil.\neve dislikes apple.\nfrank owns phone.\nbob is an enemy of eve.\n\nOBSERVATION: carol is an enemy of eve is true.\n\nQUESTION:\nCould eve dislikes alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(eve,bob).",
    "c": "hungry(bob) :- likes(bob,carol).\nhappy(frank) :- hungry(bob).\nbig(ball) :- happy(frank).\nsad(george) :- big(ball).\nfriend(frank,frank) :- tall(frank), sad(george).\nenemy(dave,george) :- cold.\nenemy(frank,alice) :- sunny, sibling(frank,alice), likes(dave,carol).\nsad(george) :- likes(george,bob), tall(george), big(car).\nsad(frank) :- friend(eve,alice).\nfriend(dave,alice) :- parent(eve,alice), wet(car).\nparent(bob,eve) :- hungry(george), parent(bob,carol), owns(carol,car).\nparent(eve,dave) :- wet(phone).\ndislikes(george,ball) :- sunny, small(ball), parent(dave,eve).\ndislikes(frank,pencil) :- hungry(alice).\nlikes(bob,carol).\ndislikes(bob,phone).\nsibling(alice,carol).\nsibling(frank,eve).\nowns(george,car).\nlikes(alice,carol).\nsmall(car).\nlikes(george,ball).\nlikes(alice,eve).\nenemy(dave,frank).\nenemy(eve,bob).\nlikes(carol,eve).\ntall(bob).\nlikes(george,eve).\nparent(bob,dave).\nbig(apple).",
    "natural language": "You are given the following information:\nIf bob likes carol, then bob is hungry.\nIf bob is hungry, then frank is happy.\nIf frank is happy, then ball is big.\nIf ball is big, then george is sad.\nIf frank is tall and george is sad, then frank is a friend of frank.\nIf it is cold, then dave is an enemy of george.\nIf it is sunny and frank is a sibling of alice and dave likes carol, then frank is an enemy of alice.\nIf george likes bob and george is tall and car is big, then george is sad.\nIf eve is a friend of alice, then frank is sad.\nIf eve is a parent of alice and car is wet, then dave is a friend of alice.\nIf george is hungry and bob is a parent of carol and carol owns car, then bob is a parent of eve.\nIf phone is wet, then eve is a parent of dave.\nIf it is sunny and ball is small and dave is a parent of eve, then george dislikes ball.\nIf alice is hungry, then frank dislikes pencil.\n\nAnd the following facts:\nbob likes carol.\nbob dislikes phone.\nalice is a sibling of carol.\nfrank is a sibling of eve.\ngeorge owns car.\nalice likes carol.\ncar is small.\ngeorge likes ball.\nalice likes eve.\ndave is an enemy of frank.\neve is an enemy of bob.\ncarol likes eve.\nbob is tall.\ngeorge likes eve.\nbob is a parent of dave.\napple is big.\n\nQUESTION:\nIs eve is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,eve).",
    "c": "hungry(bob) :- likes(bob,carol).\nhappy(frank) :- hungry(bob).\nbig(ball) :- happy(frank).\nsad(george) :- big(ball).\nfriend(frank,frank) :- tall(frank), sad(george).\nenemy(dave,george) :- cold.\nenemy(frank,alice) :- sunny, sibling(frank,alice), likes(dave,carol).\nsad(george) :- likes(george,bob), tall(george), big(car).\nsad(frank) :- friend(eve,alice).\nfriend(dave,alice) :- parent(eve,alice), wet(car).\nparent(bob,eve) :- hungry(george), parent(bob,carol), owns(carol,car).\nparent(eve,dave) :- wet(phone).\ndislikes(george,ball) :- sunny, small(ball), parent(dave,eve).\ndislikes(frank,pencil) :- hungry(alice).\nlikes(bob,carol).\ndislikes(bob,phone).\nsibling(alice,carol).\nsibling(frank,eve).\nowns(george,car).\nlikes(alice,carol).\nsmall(car).\nlikes(george,ball).\nlikes(alice,eve).\nenemy(dave,frank).\nenemy(eve,bob).\nlikes(carol,eve).\ntall(bob).\nlikes(george,eve).\nparent(bob,dave).\nbig(apple).",
    "natural language": "You are given the following information:\nIf bob likes carol, then bob is hungry.\nIf bob is hungry, then frank is happy.\nIf frank is happy, then ball is big.\nIf ball is big, then george is sad.\nIf frank is tall and george is sad, then frank is a friend of frank.\nIf it is cold, then dave is an enemy of george.\nIf it is sunny and frank is a sibling of alice and dave likes carol, then frank is an enemy of alice.\nIf george likes bob and george is tall and car is big, then george is sad.\nIf eve is a friend of alice, then frank is sad.\nIf eve is a parent of alice and car is wet, then dave is a friend of alice.\nIf george is hungry and bob is a parent of carol and carol owns car, then bob is a parent of eve.\nIf phone is wet, then eve is a parent of dave.\nIf it is sunny and ball is small and dave is a parent of eve, then george dislikes ball.\nIf alice is hungry, then frank dislikes pencil.\n\nAnd the following facts:\nbob likes carol.\nbob dislikes phone.\nalice is a sibling of carol.\nfrank is a sibling of eve.\ngeorge owns car.\nalice likes carol.\ncar is small.\ngeorge likes ball.\nalice likes eve.\ndave is an enemy of frank.\neve is an enemy of bob.\ncarol likes eve.\nbob is tall.\ngeorge likes eve.\nbob is a parent of dave.\napple is big.\n\nQUESTION:\nIs alice likes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(george).",
    "c": "hungry(bob) :- likes(bob,carol).\nhappy(frank) :- hungry(bob).\nbig(ball) :- happy(frank).\nsad(george) :- big(ball).\nfriend(frank,frank) :- tall(frank), sad(george).\nenemy(dave,george) :- cold.\nenemy(frank,alice) :- sunny, sibling(frank,alice), likes(dave,carol).\nsad(george) :- likes(george,bob), tall(george), big(car).\nsad(frank) :- friend(eve,alice).\nfriend(dave,alice) :- parent(eve,alice), wet(car).\nparent(bob,eve) :- hungry(george), parent(bob,carol), owns(carol,car).\nparent(eve,dave) :- wet(phone).\ndislikes(george,ball) :- sunny, small(ball), parent(dave,eve).\ndislikes(frank,pencil) :- hungry(alice).\nlikes(bob,carol).\ndislikes(bob,phone).\nsibling(alice,carol).\nsibling(frank,eve).\nowns(george,car).\nlikes(alice,carol).\nsmall(car).\nlikes(george,ball).\nlikes(alice,eve).\nenemy(dave,frank).\nenemy(eve,bob).\nlikes(carol,eve).\ntall(bob).\nlikes(george,eve).\nparent(bob,dave).\nbig(apple).",
    "natural language": "You are given the following information:\nIf bob likes carol, then bob is hungry.\nIf bob is hungry, then frank is happy.\nIf frank is happy, then ball is big.\nIf ball is big, then george is sad.\nIf frank is tall and george is sad, then frank is a friend of frank.\nIf it is cold, then dave is an enemy of george.\nIf it is sunny and frank is a sibling of alice and dave likes carol, then frank is an enemy of alice.\nIf george likes bob and george is tall and car is big, then george is sad.\nIf eve is a friend of alice, then frank is sad.\nIf eve is a parent of alice and car is wet, then dave is a friend of alice.\nIf george is hungry and bob is a parent of carol and carol owns car, then bob is a parent of eve.\nIf phone is wet, then eve is a parent of dave.\nIf it is sunny and ball is small and dave is a parent of eve, then george dislikes ball.\nIf alice is hungry, then frank dislikes pencil.\n\nAnd the following facts:\nbob likes carol.\nbob dislikes phone.\nalice is a sibling of carol.\nfrank is a sibling of eve.\ngeorge owns car.\nalice likes carol.\ncar is small.\ngeorge likes ball.\nalice likes eve.\ndave is an enemy of frank.\neve is an enemy of bob.\ncarol likes eve.\nbob is tall.\ngeorge likes eve.\nbob is a parent of dave.\napple is big.\n\nQUESTION:\nIs george is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,carol).",
    "c": "hungry(bob) :- likes(bob,carol).\nhappy(frank) :- hungry(bob).\nbig(ball) :- happy(frank).\nsad(george) :- big(ball).\nfriend(frank,frank) :- tall(frank), sad(george).\nenemy(dave,george) :- cold.\nenemy(frank,alice) :- sunny, sibling(frank,alice), likes(dave,carol).\nsad(george) :- likes(george,bob), tall(george), big(car).\nsad(frank) :- friend(eve,alice).\nfriend(dave,alice) :- parent(eve,alice), wet(car).\nparent(bob,eve) :- hungry(george), parent(bob,carol), owns(carol,car).\nparent(eve,dave) :- wet(phone).\ndislikes(george,ball) :- sunny, small(ball), parent(dave,eve).\ndislikes(frank,pencil) :- hungry(alice).\nlikes(bob,carol).\ndislikes(bob,phone).\nsibling(alice,carol).\nsibling(frank,eve).\nowns(george,car).\nlikes(alice,carol).\nsmall(car).\nlikes(george,ball).\nlikes(alice,eve).\nenemy(dave,frank).\nenemy(eve,bob).\nlikes(carol,eve).\ntall(bob).\nlikes(george,eve).\nparent(bob,dave).\nbig(apple).",
    "natural language": "You are given the following information:\nIf bob likes carol, then bob is hungry.\nIf bob is hungry, then frank is happy.\nIf frank is happy, then ball is big.\nIf ball is big, then george is sad.\nIf frank is tall and george is sad, then frank is a friend of frank.\nIf it is cold, then dave is an enemy of george.\nIf it is sunny and frank is a sibling of alice and dave likes carol, then frank is an enemy of alice.\nIf george likes bob and george is tall and car is big, then george is sad.\nIf eve is a friend of alice, then frank is sad.\nIf eve is a parent of alice and car is wet, then dave is a friend of alice.\nIf george is hungry and bob is a parent of carol and carol owns car, then bob is a parent of eve.\nIf phone is wet, then eve is a parent of dave.\nIf it is sunny and ball is small and dave is a parent of eve, then george dislikes ball.\nIf alice is hungry, then frank dislikes pencil.\n\nAnd the following facts:\nbob likes carol.\nbob dislikes phone.\nalice is a sibling of carol.\nfrank is a sibling of eve.\ngeorge owns car.\nalice likes carol.\ncar is small.\ngeorge likes ball.\nalice likes eve.\ndave is an enemy of frank.\neve is an enemy of bob.\ncarol likes eve.\nbob is tall.\ngeorge likes eve.\nbob is a parent of dave.\napple is big.\n\nQUESTION:\nIs eve is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,alice).",
    "c": "hungry(bob) :- likes(bob,carol).\nhappy(frank) :- hungry(bob).\nbig(ball) :- happy(frank).\nsad(george) :- big(ball).\nfriend(frank,frank) :- tall(frank), sad(george).\nenemy(dave,george) :- cold.\nenemy(frank,alice) :- sunny, sibling(frank,alice), likes(dave,carol).\nsad(george) :- likes(george,bob), tall(george), big(car).\nsad(frank) :- friend(eve,alice).\nfriend(dave,alice) :- parent(eve,alice), wet(car).\nparent(bob,eve) :- hungry(george), parent(bob,carol), owns(carol,car).\nparent(eve,dave) :- wet(phone).\ndislikes(george,ball) :- sunny, small(ball), parent(dave,eve).\ndislikes(frank,pencil) :- hungry(alice).\nlikes(bob,carol).\ndislikes(bob,phone).\nsibling(alice,carol).\nsibling(frank,eve).\nowns(george,car).\nlikes(alice,carol).\nsmall(car).\nlikes(george,ball).\nlikes(alice,eve).\nenemy(dave,frank).\nenemy(eve,bob).\nlikes(carol,eve).\ntall(bob).\nlikes(george,eve).\nparent(bob,dave).\nbig(apple).",
    "natural language": "You are given the following information:\nIf bob likes carol, then bob is hungry.\nIf bob is hungry, then frank is happy.\nIf frank is happy, then ball is big.\nIf ball is big, then george is sad.\nIf frank is tall and george is sad, then frank is a friend of frank.\nIf it is cold, then dave is an enemy of george.\nIf it is sunny and frank is a sibling of alice and dave likes carol, then frank is an enemy of alice.\nIf george likes bob and george is tall and car is big, then george is sad.\nIf eve is a friend of alice, then frank is sad.\nIf eve is a parent of alice and car is wet, then dave is a friend of alice.\nIf george is hungry and bob is a parent of carol and carol owns car, then bob is a parent of eve.\nIf phone is wet, then eve is a parent of dave.\nIf it is sunny and ball is small and dave is a parent of eve, then george dislikes ball.\nIf alice is hungry, then frank dislikes pencil.\n\nAnd the following facts:\nbob likes carol.\nbob dislikes phone.\nalice is a sibling of carol.\nfrank is a sibling of eve.\ngeorge owns car.\nalice likes carol.\ncar is small.\ngeorge likes ball.\nalice likes eve.\ndave is an enemy of frank.\neve is an enemy of bob.\ncarol likes eve.\nbob is tall.\ngeorge likes eve.\nbob is a parent of dave.\napple is big.\n\nQUESTION:\nIs carol is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,carol).",
    "c": "hungry(bob) :- likes(bob,carol).\nhappy(frank) :- hungry(bob).\nbig(ball) :- happy(frank).\nsad(george) :- big(ball).\nfriend(frank,frank) :- tall(frank), sad(george).\nenemy(dave,george) :- cold.\nenemy(frank,alice) :- sunny, sibling(frank,alice), likes(dave,carol).\nsad(george) :- likes(george,bob), tall(george), big(car).\nsad(frank) :- friend(eve,alice).\nfriend(dave,alice) :- parent(eve,alice), wet(car).\nparent(bob,eve) :- hungry(george), parent(bob,carol), owns(carol,car).\nparent(eve,dave) :- wet(phone).\ndislikes(george,ball) :- sunny, small(ball), parent(dave,eve).\ndislikes(frank,pencil) :- hungry(alice).\ndislikes(bob,phone).\nsibling(alice,carol).\nsibling(frank,eve).\nowns(george,car).\nlikes(alice,carol).\nsmall(car).\nlikes(george,ball).\nlikes(alice,eve).\nenemy(dave,frank).\nenemy(eve,bob).\nlikes(carol,eve).\ntall(bob).\nlikes(george,eve).\nparent(bob,dave).\nbig(apple).",
    "natural language": "You are given the following rules:\nIf bob likes carol, then bob is hungry.\nIf bob is hungry, then frank is happy.\nIf frank is happy, then ball is big.\nIf ball is big, then george is sad.\nIf frank is tall and george is sad, then frank is a friend of frank.\nIf it is cold, then dave is an enemy of george.\nIf it is sunny and frank is a sibling of alice and dave likes carol, then frank is an enemy of alice.\nIf george likes bob and george is tall and car is big, then george is sad.\nIf eve is a friend of alice, then frank is sad.\nIf eve is a parent of alice and car is wet, then dave is a friend of alice.\nIf george is hungry and bob is a parent of carol and carol owns car, then bob is a parent of eve.\nIf phone is wet, then eve is a parent of dave.\nIf it is sunny and ball is small and dave is a parent of eve, then george dislikes ball.\nIf alice is hungry, then frank dislikes pencil.\n\nAnd the following facts:\nbob likes carol.\nbob dislikes phone.\nalice is a sibling of carol.\nfrank is a sibling of eve.\ngeorge owns car.\nalice likes carol.\ncar is small.\ngeorge likes ball.\nalice likes eve.\ndave is an enemy of frank.\neve is an enemy of bob.\ncarol likes eve.\nbob is tall.\ngeorge likes eve.\nbob is a parent of dave.\napple is big.\n\nOBSERVATION: george is sad is true.\n\nQUESTION:\nCould bob likes carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(bob,dave).",
    "c": "hungry(bob) :- likes(bob,carol).\nhappy(frank) :- hungry(bob).\nbig(ball) :- happy(frank).\nsad(george) :- big(ball).\nfriend(frank,frank) :- tall(frank), sad(george).\nenemy(dave,george) :- cold.\nenemy(frank,alice) :- sunny, sibling(frank,alice), likes(dave,carol).\nsad(george) :- likes(george,bob), tall(george), big(car).\nsad(frank) :- friend(eve,alice).\nfriend(dave,alice) :- parent(eve,alice), wet(car).\nparent(bob,eve) :- hungry(george), parent(bob,carol), owns(carol,car).\nparent(eve,dave) :- wet(phone).\ndislikes(george,ball) :- sunny, small(ball), parent(dave,eve).\ndislikes(frank,pencil) :- hungry(alice).\nlikes(bob,carol).\ndislikes(bob,phone).\nsibling(alice,carol).\nsibling(frank,eve).\nowns(george,car).\nlikes(alice,carol).\nsmall(car).\nlikes(george,ball).\nlikes(alice,eve).\nenemy(dave,frank).\nenemy(eve,bob).\nlikes(carol,eve).\ntall(bob).\nlikes(george,eve).\nbig(apple).",
    "natural language": "You are given the following rules:\nIf bob likes carol, then bob is hungry.\nIf bob is hungry, then frank is happy.\nIf frank is happy, then ball is big.\nIf ball is big, then george is sad.\nIf frank is tall and george is sad, then frank is a friend of frank.\nIf it is cold, then dave is an enemy of george.\nIf it is sunny and frank is a sibling of alice and dave likes carol, then frank is an enemy of alice.\nIf george likes bob and george is tall and car is big, then george is sad.\nIf eve is a friend of alice, then frank is sad.\nIf eve is a parent of alice and car is wet, then dave is a friend of alice.\nIf george is hungry and bob is a parent of carol and carol owns car, then bob is a parent of eve.\nIf phone is wet, then eve is a parent of dave.\nIf it is sunny and ball is small and dave is a parent of eve, then george dislikes ball.\nIf alice is hungry, then frank dislikes pencil.\n\nAnd the following facts:\nbob likes carol.\nbob dislikes phone.\nalice is a sibling of carol.\nfrank is a sibling of eve.\ngeorge owns car.\nalice likes carol.\ncar is small.\ngeorge likes ball.\nalice likes eve.\ndave is an enemy of frank.\neve is an enemy of bob.\ncarol likes eve.\nbob is tall.\ngeorge likes eve.\nbob is a parent of dave.\napple is big.\n\nOBSERVATION: george is sad is true.\n\nQUESTION:\nCould bob is a parent of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(frank,eve).",
    "c": "hungry(bob) :- likes(bob,carol).\nhappy(frank) :- hungry(bob).\nbig(ball) :- happy(frank).\nsad(george) :- big(ball).\nfriend(frank,frank) :- tall(frank), sad(george).\nenemy(dave,george) :- cold.\nenemy(frank,alice) :- sunny, sibling(frank,alice), likes(dave,carol).\nsad(george) :- likes(george,bob), tall(george), big(car).\nsad(frank) :- friend(eve,alice).\nfriend(dave,alice) :- parent(eve,alice), wet(car).\nparent(bob,eve) :- hungry(george), parent(bob,carol), owns(carol,car).\nparent(eve,dave) :- wet(phone).\ndislikes(george,ball) :- sunny, small(ball), parent(dave,eve).\ndislikes(frank,pencil) :- hungry(alice).\nlikes(bob,carol).\ndislikes(bob,phone).\nsibling(alice,carol).\nowns(george,car).\nlikes(alice,carol).\nsmall(car).\nlikes(george,ball).\nlikes(alice,eve).\nenemy(dave,frank).\nenemy(eve,bob).\nlikes(carol,eve).\ntall(bob).\nlikes(george,eve).\nparent(bob,dave).\nbig(apple).",
    "natural language": "You are given the following rules:\nIf bob likes carol, then bob is hungry.\nIf bob is hungry, then frank is happy.\nIf frank is happy, then ball is big.\nIf ball is big, then george is sad.\nIf frank is tall and george is sad, then frank is a friend of frank.\nIf it is cold, then dave is an enemy of george.\nIf it is sunny and frank is a sibling of alice and dave likes carol, then frank is an enemy of alice.\nIf george likes bob and george is tall and car is big, then george is sad.\nIf eve is a friend of alice, then frank is sad.\nIf eve is a parent of alice and car is wet, then dave is a friend of alice.\nIf george is hungry and bob is a parent of carol and carol owns car, then bob is a parent of eve.\nIf phone is wet, then eve is a parent of dave.\nIf it is sunny and ball is small and dave is a parent of eve, then george dislikes ball.\nIf alice is hungry, then frank dislikes pencil.\n\nAnd the following facts:\nbob likes carol.\nbob dislikes phone.\nalice is a sibling of carol.\nfrank is a sibling of eve.\ngeorge owns car.\nalice likes carol.\ncar is small.\ngeorge likes ball.\nalice likes eve.\ndave is an enemy of frank.\neve is an enemy of bob.\ncarol likes eve.\nbob is tall.\ngeorge likes eve.\nbob is a parent of dave.\napple is big.\n\nOBSERVATION: george is sad is true.\n\nQUESTION:\nCould frank is a sibling of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(frank,ball).",
    "c": "wet(apple) :- tall(george).\ncold :- wet(apple).\ndislikes(dave,apple) :- cold.\nhappy(bob) :- dislikes(dave,apple).\nparent(dave,bob) :- happy(bob).\nsad(george) :- parent(dave,bob).\nhot :- dislikes(carol,apple), cold.\ntall(eve) :- cold, tall(dave).\nhappy(carol) :- likes(frank,phone), likes(eve,pencil), happy(eve).\nhappy(george) :- tall(carol), hungry(george).\nsunny :- small(car), sunny, big(pencil).\nhot :- happy(frank), cold, sad(frank).\nparent(bob,carol) :- dislikes(bob,phone), parent(alice,george), parent(eve,carol).\nsmall(apple) :- sad(bob).\ntall(george).\ndislikes(eve,carol).\nlikes(eve,frank).\nlikes(frank,phone).\nlikes(frank,ball).\ncold.\ndislikes(frank,book).\nhappy(alice).\nparent(dave,george).\ndislikes(dave,phone).\nbig(pencil).\ndislikes(bob,dave).\nparent(dave,alice).\ndislikes(eve,apple).\nhappy(george).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf george is tall, then apple is wet.\nIf apple is wet, then it is cold.\nIf it is cold, then dave dislikes apple.\nIf dave dislikes apple, then bob is happy.\nIf bob is happy, then dave is a parent of bob.\nIf dave is a parent of bob, then george is sad.\nIf carol dislikes apple and it is cold, then it is hot.\nIf it is cold and dave is tall, then eve is tall.\nIf frank likes phone and eve likes pencil and eve is happy, then carol is happy.\nIf carol is tall and george is hungry, then george is happy.\nIf car is small and it is sunny and pencil is big, then it is sunny.\nIf frank is happy and it is cold and frank is sad, then it is hot.\nIf bob dislikes phone and alice is a parent of george and eve is a parent of carol, then bob is a parent of carol.\nIf bob is sad, then apple is small.\n\nAnd the following facts:\ngeorge is tall.\neve dislikes carol.\neve likes frank.\nfrank likes phone.\nfrank likes ball.\nit is cold.\nfrank dislikes book.\nalice is happy.\ndave is a parent of george.\ndave dislikes phone.\npencil is big.\nbob dislikes dave.\ndave is a parent of alice.\neve dislikes apple.\ngeorge is happy.\ndave likes alice.\n\nQUESTION:\nIs frank likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(alice).",
    "c": "wet(apple) :- tall(george).\ncold :- wet(apple).\ndislikes(dave,apple) :- cold.\nhappy(bob) :- dislikes(dave,apple).\nparent(dave,bob) :- happy(bob).\nsad(george) :- parent(dave,bob).\nhot :- dislikes(carol,apple), cold.\ntall(eve) :- cold, tall(dave).\nhappy(carol) :- likes(frank,phone), likes(eve,pencil), happy(eve).\nhappy(george) :- tall(carol), hungry(george).\nsunny :- small(car), sunny, big(pencil).\nhot :- happy(frank), cold, sad(frank).\nparent(bob,carol) :- dislikes(bob,phone), parent(alice,george), parent(eve,carol).\nsmall(apple) :- sad(bob).\ntall(george).\ndislikes(eve,carol).\nlikes(eve,frank).\nlikes(frank,phone).\nlikes(frank,ball).\ncold.\ndislikes(frank,book).\nhappy(alice).\nparent(dave,george).\ndislikes(dave,phone).\nbig(pencil).\ndislikes(bob,dave).\nparent(dave,alice).\ndislikes(eve,apple).\nhappy(george).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf george is tall, then apple is wet.\nIf apple is wet, then it is cold.\nIf it is cold, then dave dislikes apple.\nIf dave dislikes apple, then bob is happy.\nIf bob is happy, then dave is a parent of bob.\nIf dave is a parent of bob, then george is sad.\nIf carol dislikes apple and it is cold, then it is hot.\nIf it is cold and dave is tall, then eve is tall.\nIf frank likes phone and eve likes pencil and eve is happy, then carol is happy.\nIf carol is tall and george is hungry, then george is happy.\nIf car is small and it is sunny and pencil is big, then it is sunny.\nIf frank is happy and it is cold and frank is sad, then it is hot.\nIf bob dislikes phone and alice is a parent of george and eve is a parent of carol, then bob is a parent of carol.\nIf bob is sad, then apple is small.\n\nAnd the following facts:\ngeorge is tall.\neve dislikes carol.\neve likes frank.\nfrank likes phone.\nfrank likes ball.\nit is cold.\nfrank dislikes book.\nalice is happy.\ndave is a parent of george.\ndave dislikes phone.\npencil is big.\nbob dislikes dave.\ndave is a parent of alice.\neve dislikes apple.\ngeorge is happy.\ndave likes alice.\n\nQUESTION:\nIs alice is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(george).",
    "c": "wet(apple) :- tall(george).\ncold :- wet(apple).\ndislikes(dave,apple) :- cold.\nhappy(bob) :- dislikes(dave,apple).\nparent(dave,bob) :- happy(bob).\nsad(george) :- parent(dave,bob).\nhot :- dislikes(carol,apple), cold.\ntall(eve) :- cold, tall(dave).\nhappy(carol) :- likes(frank,phone), likes(eve,pencil), happy(eve).\nhappy(george) :- tall(carol), hungry(george).\nsunny :- small(car), sunny, big(pencil).\nhot :- happy(frank), cold, sad(frank).\nparent(bob,carol) :- dislikes(bob,phone), parent(alice,george), parent(eve,carol).\nsmall(apple) :- sad(bob).\ntall(george).\ndislikes(eve,carol).\nlikes(eve,frank).\nlikes(frank,phone).\nlikes(frank,ball).\ncold.\ndislikes(frank,book).\nhappy(alice).\nparent(dave,george).\ndislikes(dave,phone).\nbig(pencil).\ndislikes(bob,dave).\nparent(dave,alice).\ndislikes(eve,apple).\nhappy(george).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf george is tall, then apple is wet.\nIf apple is wet, then it is cold.\nIf it is cold, then dave dislikes apple.\nIf dave dislikes apple, then bob is happy.\nIf bob is happy, then dave is a parent of bob.\nIf dave is a parent of bob, then george is sad.\nIf carol dislikes apple and it is cold, then it is hot.\nIf it is cold and dave is tall, then eve is tall.\nIf frank likes phone and eve likes pencil and eve is happy, then carol is happy.\nIf carol is tall and george is hungry, then george is happy.\nIf car is small and it is sunny and pencil is big, then it is sunny.\nIf frank is happy and it is cold and frank is sad, then it is hot.\nIf bob dislikes phone and alice is a parent of george and eve is a parent of carol, then bob is a parent of carol.\nIf bob is sad, then apple is small.\n\nAnd the following facts:\ngeorge is tall.\neve dislikes carol.\neve likes frank.\nfrank likes phone.\nfrank likes ball.\nit is cold.\nfrank dislikes book.\nalice is happy.\ndave is a parent of george.\ndave dislikes phone.\npencil is big.\nbob dislikes dave.\ndave is a parent of alice.\neve dislikes apple.\ngeorge is happy.\ndave likes alice.\n\nQUESTION:\nIs george is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,george).",
    "c": "wet(apple) :- tall(george).\ncold :- wet(apple).\ndislikes(dave,apple) :- cold.\nhappy(bob) :- dislikes(dave,apple).\nparent(dave,bob) :- happy(bob).\nsad(george) :- parent(dave,bob).\nhot :- dislikes(carol,apple), cold.\ntall(eve) :- cold, tall(dave).\nhappy(carol) :- likes(frank,phone), likes(eve,pencil), happy(eve).\nhappy(george) :- tall(carol), hungry(george).\nsunny :- small(car), sunny, big(pencil).\nhot :- happy(frank), cold, sad(frank).\nparent(bob,carol) :- dislikes(bob,phone), parent(alice,george), parent(eve,carol).\nsmall(apple) :- sad(bob).\ntall(george).\ndislikes(eve,carol).\nlikes(eve,frank).\nlikes(frank,phone).\nlikes(frank,ball).\ncold.\ndislikes(frank,book).\nhappy(alice).\nparent(dave,george).\ndislikes(dave,phone).\nbig(pencil).\ndislikes(bob,dave).\nparent(dave,alice).\ndislikes(eve,apple).\nhappy(george).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf george is tall, then apple is wet.\nIf apple is wet, then it is cold.\nIf it is cold, then dave dislikes apple.\nIf dave dislikes apple, then bob is happy.\nIf bob is happy, then dave is a parent of bob.\nIf dave is a parent of bob, then george is sad.\nIf carol dislikes apple and it is cold, then it is hot.\nIf it is cold and dave is tall, then eve is tall.\nIf frank likes phone and eve likes pencil and eve is happy, then carol is happy.\nIf carol is tall and george is hungry, then george is happy.\nIf car is small and it is sunny and pencil is big, then it is sunny.\nIf frank is happy and it is cold and frank is sad, then it is hot.\nIf bob dislikes phone and alice is a parent of george and eve is a parent of carol, then bob is a parent of carol.\nIf bob is sad, then apple is small.\n\nAnd the following facts:\ngeorge is tall.\neve dislikes carol.\neve likes frank.\nfrank likes phone.\nfrank likes ball.\nit is cold.\nfrank dislikes book.\nalice is happy.\ndave is a parent of george.\ndave dislikes phone.\npencil is big.\nbob dislikes dave.\ndave is a parent of alice.\neve dislikes apple.\ngeorge is happy.\ndave likes alice.\n\nQUESTION:\nIs dave dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,bob).",
    "c": "wet(apple) :- tall(george).\ncold :- wet(apple).\ndislikes(dave,apple) :- cold.\nhappy(bob) :- dislikes(dave,apple).\nparent(dave,bob) :- happy(bob).\nsad(george) :- parent(dave,bob).\nhot :- dislikes(carol,apple), cold.\ntall(eve) :- cold, tall(dave).\nhappy(carol) :- likes(frank,phone), likes(eve,pencil), happy(eve).\nhappy(george) :- tall(carol), hungry(george).\nsunny :- small(car), sunny, big(pencil).\nhot :- happy(frank), cold, sad(frank).\nparent(bob,carol) :- dislikes(bob,phone), parent(alice,george), parent(eve,carol).\nsmall(apple) :- sad(bob).\ntall(george).\ndislikes(eve,carol).\nlikes(eve,frank).\nlikes(frank,phone).\nlikes(frank,ball).\ncold.\ndislikes(frank,book).\nhappy(alice).\nparent(dave,george).\ndislikes(dave,phone).\nbig(pencil).\ndislikes(bob,dave).\nparent(dave,alice).\ndislikes(eve,apple).\nhappy(george).\nlikes(dave,alice).",
    "natural language": "You are given the following information:\nIf george is tall, then apple is wet.\nIf apple is wet, then it is cold.\nIf it is cold, then dave dislikes apple.\nIf dave dislikes apple, then bob is happy.\nIf bob is happy, then dave is a parent of bob.\nIf dave is a parent of bob, then george is sad.\nIf carol dislikes apple and it is cold, then it is hot.\nIf it is cold and dave is tall, then eve is tall.\nIf frank likes phone and eve likes pencil and eve is happy, then carol is happy.\nIf carol is tall and george is hungry, then george is happy.\nIf car is small and it is sunny and pencil is big, then it is sunny.\nIf frank is happy and it is cold and frank is sad, then it is hot.\nIf bob dislikes phone and alice is a parent of george and eve is a parent of carol, then bob is a parent of carol.\nIf bob is sad, then apple is small.\n\nAnd the following facts:\ngeorge is tall.\neve dislikes carol.\neve likes frank.\nfrank likes phone.\nfrank likes ball.\nit is cold.\nfrank dislikes book.\nalice is happy.\ndave is a parent of george.\ndave dislikes phone.\npencil is big.\nbob dislikes dave.\ndave is a parent of alice.\neve dislikes apple.\ngeorge is happy.\ndave likes alice.\n\nQUESTION:\nIs dave dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "wet(apple) :- tall(george).\ncold :- wet(apple).\ndislikes(dave,apple) :- cold.\nhappy(bob) :- dislikes(dave,apple).\nparent(dave,bob) :- happy(bob).\nsad(george) :- parent(dave,bob).\nhot :- dislikes(carol,apple), cold.\ntall(eve) :- cold, tall(dave).\nhappy(carol) :- likes(frank,phone), likes(eve,pencil), happy(eve).\nhappy(george) :- tall(carol), hungry(george).\nsunny :- small(car), sunny, big(pencil).\nhot :- happy(frank), cold, sad(frank).\nparent(bob,carol) :- dislikes(bob,phone), parent(alice,george), parent(eve,carol).\nsmall(apple) :- sad(bob).\ntall(george).\ndislikes(eve,carol).\nlikes(eve,frank).\nlikes(frank,phone).\nlikes(frank,ball).\ndislikes(frank,book).\nhappy(alice).\nparent(dave,george).\ndislikes(dave,phone).\nbig(pencil).\ndislikes(bob,dave).\nparent(dave,alice).\ndislikes(eve,apple).\nhappy(george).\nlikes(dave,alice).",
    "natural language": "You are given the following rules:\nIf george is tall, then apple is wet.\nIf apple is wet, then it is cold.\nIf it is cold, then dave dislikes apple.\nIf dave dislikes apple, then bob is happy.\nIf bob is happy, then dave is a parent of bob.\nIf dave is a parent of bob, then george is sad.\nIf carol dislikes apple and it is cold, then it is hot.\nIf it is cold and dave is tall, then eve is tall.\nIf frank likes phone and eve likes pencil and eve is happy, then carol is happy.\nIf carol is tall and george is hungry, then george is happy.\nIf car is small and it is sunny and pencil is big, then it is sunny.\nIf frank is happy and it is cold and frank is sad, then it is hot.\nIf bob dislikes phone and alice is a parent of george and eve is a parent of carol, then bob is a parent of carol.\nIf bob is sad, then apple is small.\n\nAnd the following facts:\ngeorge is tall.\neve dislikes carol.\neve likes frank.\nfrank likes phone.\nfrank likes ball.\nit is cold.\nfrank dislikes book.\nalice is happy.\ndave is a parent of george.\ndave dislikes phone.\npencil is big.\nbob dislikes dave.\ndave is a parent of alice.\neve dislikes apple.\ngeorge is happy.\ndave likes alice.\n\nOBSERVATION: george is sad is true.\n\nQUESTION:\nCould it is cold be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(eve,apple).",
    "c": "wet(apple) :- tall(george).\ncold :- wet(apple).\ndislikes(dave,apple) :- cold.\nhappy(bob) :- dislikes(dave,apple).\nparent(dave,bob) :- happy(bob).\nsad(george) :- parent(dave,bob).\nhot :- dislikes(carol,apple), cold.\ntall(eve) :- cold, tall(dave).\nhappy(carol) :- likes(frank,phone), likes(eve,pencil), happy(eve).\nhappy(george) :- tall(carol), hungry(george).\nsunny :- small(car), sunny, big(pencil).\nhot :- happy(frank), cold, sad(frank).\nparent(bob,carol) :- dislikes(bob,phone), parent(alice,george), parent(eve,carol).\nsmall(apple) :- sad(bob).\ntall(george).\ndislikes(eve,carol).\nlikes(eve,frank).\nlikes(frank,phone).\nlikes(frank,ball).\ncold.\ndislikes(frank,book).\nhappy(alice).\nparent(dave,george).\ndislikes(dave,phone).\nbig(pencil).\ndislikes(bob,dave).\nparent(dave,alice).\nhappy(george).\nlikes(dave,alice).",
    "natural language": "You are given the following rules:\nIf george is tall, then apple is wet.\nIf apple is wet, then it is cold.\nIf it is cold, then dave dislikes apple.\nIf dave dislikes apple, then bob is happy.\nIf bob is happy, then dave is a parent of bob.\nIf dave is a parent of bob, then george is sad.\nIf carol dislikes apple and it is cold, then it is hot.\nIf it is cold and dave is tall, then eve is tall.\nIf frank likes phone and eve likes pencil and eve is happy, then carol is happy.\nIf carol is tall and george is hungry, then george is happy.\nIf car is small and it is sunny and pencil is big, then it is sunny.\nIf frank is happy and it is cold and frank is sad, then it is hot.\nIf bob dislikes phone and alice is a parent of george and eve is a parent of carol, then bob is a parent of carol.\nIf bob is sad, then apple is small.\n\nAnd the following facts:\ngeorge is tall.\neve dislikes carol.\neve likes frank.\nfrank likes phone.\nfrank likes ball.\nit is cold.\nfrank dislikes book.\nalice is happy.\ndave is a parent of george.\ndave dislikes phone.\npencil is big.\nbob dislikes dave.\ndave is a parent of alice.\neve dislikes apple.\ngeorge is happy.\ndave likes alice.\n\nOBSERVATION: george is sad is true.\n\nQUESTION:\nCould eve dislikes apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,phone).",
    "c": "wet(apple) :- tall(george).\ncold :- wet(apple).\ndislikes(dave,apple) :- cold.\nhappy(bob) :- dislikes(dave,apple).\nparent(dave,bob) :- happy(bob).\nsad(george) :- parent(dave,bob).\nhot :- dislikes(carol,apple), cold.\ntall(eve) :- cold, tall(dave).\nhappy(carol) :- likes(frank,phone), likes(eve,pencil), happy(eve).\nhappy(george) :- tall(carol), hungry(george).\nsunny :- small(car), sunny, big(pencil).\nhot :- happy(frank), cold, sad(frank).\nparent(bob,carol) :- dislikes(bob,phone), parent(alice,george), parent(eve,carol).\nsmall(apple) :- sad(bob).\ntall(george).\ndislikes(eve,carol).\nlikes(eve,frank).\nlikes(frank,phone).\nlikes(frank,ball).\ncold.\ndislikes(frank,book).\nhappy(alice).\nparent(dave,george).\nbig(pencil).\ndislikes(bob,dave).\nparent(dave,alice).\ndislikes(eve,apple).\nhappy(george).\nlikes(dave,alice).",
    "natural language": "You are given the following rules:\nIf george is tall, then apple is wet.\nIf apple is wet, then it is cold.\nIf it is cold, then dave dislikes apple.\nIf dave dislikes apple, then bob is happy.\nIf bob is happy, then dave is a parent of bob.\nIf dave is a parent of bob, then george is sad.\nIf carol dislikes apple and it is cold, then it is hot.\nIf it is cold and dave is tall, then eve is tall.\nIf frank likes phone and eve likes pencil and eve is happy, then carol is happy.\nIf carol is tall and george is hungry, then george is happy.\nIf car is small and it is sunny and pencil is big, then it is sunny.\nIf frank is happy and it is cold and frank is sad, then it is hot.\nIf bob dislikes phone and alice is a parent of george and eve is a parent of carol, then bob is a parent of carol.\nIf bob is sad, then apple is small.\n\nAnd the following facts:\ngeorge is tall.\neve dislikes carol.\neve likes frank.\nfrank likes phone.\nfrank likes ball.\nit is cold.\nfrank dislikes book.\nalice is happy.\ndave is a parent of george.\ndave dislikes phone.\npencil is big.\nbob dislikes dave.\ndave is a parent of alice.\neve dislikes apple.\ngeorge is happy.\ndave likes alice.\n\nOBSERVATION: george is sad is true.\n\nQUESTION:\nCould dave dislikes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,george).",
    "c": "wet(pencil) :- hot.\nenemy(alice,alice) :- wet(pencil).\ntall(carol) :- enemy(alice,alice).\nowns(carol,apple) :- tall(carol).\nbig(phone) :- owns(carol,apple).\nhappy(frank) :- big(phone).\nhungry(alice) :- enemy(alice,george), hungry(alice), dislikes(carol,carol).\nhungry(carol) :- hot.\nbig(book) :- friend(carol,dave), dislikes(george,carol).\nhungry(eve) :- dislikes(george,george).\nbig(ball) :- wet(apple).\ntall(frank) :- sad(dave), friend(george,alice).\nsad(carol) :- hot.\nhungry(frank) :- enemy(dave,george), cold.\nhot.\ndislikes(george,alice).\ndislikes(alice,george).\ndislikes(frank,alice).\nenemy(bob,frank).\ndislikes(eve,car).\ndislikes(eve,phone).\ndislikes(carol,car).\ndislikes(dave,george).\nhungry(alice).\nenemy(george,carol).\nenemy(dave,eve).\ndislikes(george,phone).\nowns(eve,phone).\ntall(bob).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then pencil is wet.\nIf pencil is wet, then alice is an enemy of alice.\nIf alice is an enemy of alice, then carol is tall.\nIf carol is tall, then carol owns apple.\nIf carol owns apple, then phone is big.\nIf phone is big, then frank is happy.\nIf alice is an enemy of george and alice is hungry and carol dislikes carol, then alice is hungry.\nIf it is hot, then carol is hungry.\nIf carol is a friend of dave and george dislikes carol, then book is big.\nIf george dislikes george, then eve is hungry.\nIf apple is wet, then ball is big.\nIf dave is sad and george is a friend of alice, then frank is tall.\nIf it is hot, then carol is sad.\nIf dave is an enemy of george and it is cold, then frank is hungry.\n\nAnd the following facts:\nit is hot.\ngeorge dislikes alice.\nalice dislikes george.\nfrank dislikes alice.\nbob is an enemy of frank.\neve dislikes car.\neve dislikes phone.\ncarol dislikes car.\ndave dislikes george.\nalice is hungry.\ngeorge is an enemy of carol.\ndave is an enemy of eve.\ngeorge dislikes phone.\neve owns phone.\nbob is tall.\nalice is a friend of carol.\n\nQUESTION:\nIs dave dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(carol).",
    "c": "wet(pencil) :- hot.\nenemy(alice,alice) :- wet(pencil).\ntall(carol) :- enemy(alice,alice).\nowns(carol,apple) :- tall(carol).\nbig(phone) :- owns(carol,apple).\nhappy(frank) :- big(phone).\nhungry(alice) :- enemy(alice,george), hungry(alice), dislikes(carol,carol).\nhungry(carol) :- hot.\nbig(book) :- friend(carol,dave), dislikes(george,carol).\nhungry(eve) :- dislikes(george,george).\nbig(ball) :- wet(apple).\ntall(frank) :- sad(dave), friend(george,alice).\nsad(carol) :- hot.\nhungry(frank) :- enemy(dave,george), cold.\nhot.\ndislikes(george,alice).\ndislikes(alice,george).\ndislikes(frank,alice).\nenemy(bob,frank).\ndislikes(eve,car).\ndislikes(eve,phone).\ndislikes(carol,car).\ndislikes(dave,george).\nhungry(alice).\nenemy(george,carol).\nenemy(dave,eve).\ndislikes(george,phone).\nowns(eve,phone).\ntall(bob).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then pencil is wet.\nIf pencil is wet, then alice is an enemy of alice.\nIf alice is an enemy of alice, then carol is tall.\nIf carol is tall, then carol owns apple.\nIf carol owns apple, then phone is big.\nIf phone is big, then frank is happy.\nIf alice is an enemy of george and alice is hungry and carol dislikes carol, then alice is hungry.\nIf it is hot, then carol is hungry.\nIf carol is a friend of dave and george dislikes carol, then book is big.\nIf george dislikes george, then eve is hungry.\nIf apple is wet, then ball is big.\nIf dave is sad and george is a friend of alice, then frank is tall.\nIf it is hot, then carol is sad.\nIf dave is an enemy of george and it is cold, then frank is hungry.\n\nAnd the following facts:\nit is hot.\ngeorge dislikes alice.\nalice dislikes george.\nfrank dislikes alice.\nbob is an enemy of frank.\neve dislikes car.\neve dislikes phone.\ncarol dislikes car.\ndave dislikes george.\nalice is hungry.\ngeorge is an enemy of carol.\ndave is an enemy of eve.\ngeorge dislikes phone.\neve owns phone.\nbob is tall.\nalice is a friend of carol.\n\nQUESTION:\nIs carol is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "wet(pencil) :- hot.\nenemy(alice,alice) :- wet(pencil).\ntall(carol) :- enemy(alice,alice).\nowns(carol,apple) :- tall(carol).\nbig(phone) :- owns(carol,apple).\nhappy(frank) :- big(phone).\nhungry(alice) :- enemy(alice,george), hungry(alice), dislikes(carol,carol).\nhungry(carol) :- hot.\nbig(book) :- friend(carol,dave), dislikes(george,carol).\nhungry(eve) :- dislikes(george,george).\nbig(ball) :- wet(apple).\ntall(frank) :- sad(dave), friend(george,alice).\nsad(carol) :- hot.\nhungry(frank) :- enemy(dave,george), cold.\nhot.\ndislikes(george,alice).\ndislikes(alice,george).\ndislikes(frank,alice).\nenemy(bob,frank).\ndislikes(eve,car).\ndislikes(eve,phone).\ndislikes(carol,car).\ndislikes(dave,george).\nhungry(alice).\nenemy(george,carol).\nenemy(dave,eve).\ndislikes(george,phone).\nowns(eve,phone).\ntall(bob).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then pencil is wet.\nIf pencil is wet, then alice is an enemy of alice.\nIf alice is an enemy of alice, then carol is tall.\nIf carol is tall, then carol owns apple.\nIf carol owns apple, then phone is big.\nIf phone is big, then frank is happy.\nIf alice is an enemy of george and alice is hungry and carol dislikes carol, then alice is hungry.\nIf it is hot, then carol is hungry.\nIf carol is a friend of dave and george dislikes carol, then book is big.\nIf george dislikes george, then eve is hungry.\nIf apple is wet, then ball is big.\nIf dave is sad and george is a friend of alice, then frank is tall.\nIf it is hot, then carol is sad.\nIf dave is an enemy of george and it is cold, then frank is hungry.\n\nAnd the following facts:\nit is hot.\ngeorge dislikes alice.\nalice dislikes george.\nfrank dislikes alice.\nbob is an enemy of frank.\neve dislikes car.\neve dislikes phone.\ncarol dislikes car.\ndave dislikes george.\nalice is hungry.\ngeorge is an enemy of carol.\ndave is an enemy of eve.\ngeorge dislikes phone.\neve owns phone.\nbob is tall.\nalice is a friend of carol.\n\nQUESTION:\nIs dave is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,pencil).",
    "c": "wet(pencil) :- hot.\nenemy(alice,alice) :- wet(pencil).\ntall(carol) :- enemy(alice,alice).\nowns(carol,apple) :- tall(carol).\nbig(phone) :- owns(carol,apple).\nhappy(frank) :- big(phone).\nhungry(alice) :- enemy(alice,george), hungry(alice), dislikes(carol,carol).\nhungry(carol) :- hot.\nbig(book) :- friend(carol,dave), dislikes(george,carol).\nhungry(eve) :- dislikes(george,george).\nbig(ball) :- wet(apple).\ntall(frank) :- sad(dave), friend(george,alice).\nsad(carol) :- hot.\nhungry(frank) :- enemy(dave,george), cold.\nhot.\ndislikes(george,alice).\ndislikes(alice,george).\ndislikes(frank,alice).\nenemy(bob,frank).\ndislikes(eve,car).\ndislikes(eve,phone).\ndislikes(carol,car).\ndislikes(dave,george).\nhungry(alice).\nenemy(george,carol).\nenemy(dave,eve).\ndislikes(george,phone).\nowns(eve,phone).\ntall(bob).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then pencil is wet.\nIf pencil is wet, then alice is an enemy of alice.\nIf alice is an enemy of alice, then carol is tall.\nIf carol is tall, then carol owns apple.\nIf carol owns apple, then phone is big.\nIf phone is big, then frank is happy.\nIf alice is an enemy of george and alice is hungry and carol dislikes carol, then alice is hungry.\nIf it is hot, then carol is hungry.\nIf carol is a friend of dave and george dislikes carol, then book is big.\nIf george dislikes george, then eve is hungry.\nIf apple is wet, then ball is big.\nIf dave is sad and george is a friend of alice, then frank is tall.\nIf it is hot, then carol is sad.\nIf dave is an enemy of george and it is cold, then frank is hungry.\n\nAnd the following facts:\nit is hot.\ngeorge dislikes alice.\nalice dislikes george.\nfrank dislikes alice.\nbob is an enemy of frank.\neve dislikes car.\neve dislikes phone.\ncarol dislikes car.\ndave dislikes george.\nalice is hungry.\ngeorge is an enemy of carol.\ndave is an enemy of eve.\ngeorge dislikes phone.\neve owns phone.\nbob is tall.\nalice is a friend of carol.\n\nQUESTION:\nIs dave dislikes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,apple).",
    "c": "wet(pencil) :- hot.\nenemy(alice,alice) :- wet(pencil).\ntall(carol) :- enemy(alice,alice).\nowns(carol,apple) :- tall(carol).\nbig(phone) :- owns(carol,apple).\nhappy(frank) :- big(phone).\nhungry(alice) :- enemy(alice,george), hungry(alice), dislikes(carol,carol).\nhungry(carol) :- hot.\nbig(book) :- friend(carol,dave), dislikes(george,carol).\nhungry(eve) :- dislikes(george,george).\nbig(ball) :- wet(apple).\ntall(frank) :- sad(dave), friend(george,alice).\nsad(carol) :- hot.\nhungry(frank) :- enemy(dave,george), cold.\nhot.\ndislikes(george,alice).\ndislikes(alice,george).\ndislikes(frank,alice).\nenemy(bob,frank).\ndislikes(eve,car).\ndislikes(eve,phone).\ndislikes(carol,car).\ndislikes(dave,george).\nhungry(alice).\nenemy(george,carol).\nenemy(dave,eve).\ndislikes(george,phone).\nowns(eve,phone).\ntall(bob).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf it is hot, then pencil is wet.\nIf pencil is wet, then alice is an enemy of alice.\nIf alice is an enemy of alice, then carol is tall.\nIf carol is tall, then carol owns apple.\nIf carol owns apple, then phone is big.\nIf phone is big, then frank is happy.\nIf alice is an enemy of george and alice is hungry and carol dislikes carol, then alice is hungry.\nIf it is hot, then carol is hungry.\nIf carol is a friend of dave and george dislikes carol, then book is big.\nIf george dislikes george, then eve is hungry.\nIf apple is wet, then ball is big.\nIf dave is sad and george is a friend of alice, then frank is tall.\nIf it is hot, then carol is sad.\nIf dave is an enemy of george and it is cold, then frank is hungry.\n\nAnd the following facts:\nit is hot.\ngeorge dislikes alice.\nalice dislikes george.\nfrank dislikes alice.\nbob is an enemy of frank.\neve dislikes car.\neve dislikes phone.\ncarol dislikes car.\ndave dislikes george.\nalice is hungry.\ngeorge is an enemy of carol.\ndave is an enemy of eve.\ngeorge dislikes phone.\neve owns phone.\nbob is tall.\nalice is a friend of carol.\n\nQUESTION:\nIs frank dislikes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "wet(pencil) :- hot.\nenemy(alice,alice) :- wet(pencil).\ntall(carol) :- enemy(alice,alice).\nowns(carol,apple) :- tall(carol).\nbig(phone) :- owns(carol,apple).\nhappy(frank) :- big(phone).\nhungry(alice) :- enemy(alice,george), hungry(alice), dislikes(carol,carol).\nhungry(carol) :- hot.\nbig(book) :- friend(carol,dave), dislikes(george,carol).\nhungry(eve) :- dislikes(george,george).\nbig(ball) :- wet(apple).\ntall(frank) :- sad(dave), friend(george,alice).\nsad(carol) :- hot.\nhungry(frank) :- enemy(dave,george), cold.\ndislikes(george,alice).\ndislikes(alice,george).\ndislikes(frank,alice).\nenemy(bob,frank).\ndislikes(eve,car).\ndislikes(eve,phone).\ndislikes(carol,car).\ndislikes(dave,george).\nhungry(alice).\nenemy(george,carol).\nenemy(dave,eve).\ndislikes(george,phone).\nowns(eve,phone).\ntall(bob).\nfriend(alice,carol).",
    "natural language": "You are given the following rules:\nIf it is hot, then pencil is wet.\nIf pencil is wet, then alice is an enemy of alice.\nIf alice is an enemy of alice, then carol is tall.\nIf carol is tall, then carol owns apple.\nIf carol owns apple, then phone is big.\nIf phone is big, then frank is happy.\nIf alice is an enemy of george and alice is hungry and carol dislikes carol, then alice is hungry.\nIf it is hot, then carol is hungry.\nIf carol is a friend of dave and george dislikes carol, then book is big.\nIf george dislikes george, then eve is hungry.\nIf apple is wet, then ball is big.\nIf dave is sad and george is a friend of alice, then frank is tall.\nIf it is hot, then carol is sad.\nIf dave is an enemy of george and it is cold, then frank is hungry.\n\nAnd the following facts:\nit is hot.\ngeorge dislikes alice.\nalice dislikes george.\nfrank dislikes alice.\nbob is an enemy of frank.\neve dislikes car.\neve dislikes phone.\ncarol dislikes car.\ndave dislikes george.\nalice is hungry.\ngeorge is an enemy of carol.\ndave is an enemy of eve.\ngeorge dislikes phone.\neve owns phone.\nbob is tall.\nalice is a friend of carol.\n\nOBSERVATION: frank is happy is true.\n\nQUESTION:\nCould it is hot be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,george).",
    "c": "wet(pencil) :- hot.\nenemy(alice,alice) :- wet(pencil).\ntall(carol) :- enemy(alice,alice).\nowns(carol,apple) :- tall(carol).\nbig(phone) :- owns(carol,apple).\nhappy(frank) :- big(phone).\nhungry(alice) :- enemy(alice,george), hungry(alice), dislikes(carol,carol).\nhungry(carol) :- hot.\nbig(book) :- friend(carol,dave), dislikes(george,carol).\nhungry(eve) :- dislikes(george,george).\nbig(ball) :- wet(apple).\ntall(frank) :- sad(dave), friend(george,alice).\nsad(carol) :- hot.\nhungry(frank) :- enemy(dave,george), cold.\nhot.\ndislikes(george,alice).\ndislikes(alice,george).\ndislikes(frank,alice).\nenemy(bob,frank).\ndislikes(eve,car).\ndislikes(eve,phone).\ndislikes(carol,car).\nhungry(alice).\nenemy(george,carol).\nenemy(dave,eve).\ndislikes(george,phone).\nowns(eve,phone).\ntall(bob).\nfriend(alice,carol).",
    "natural language": "You are given the following rules:\nIf it is hot, then pencil is wet.\nIf pencil is wet, then alice is an enemy of alice.\nIf alice is an enemy of alice, then carol is tall.\nIf carol is tall, then carol owns apple.\nIf carol owns apple, then phone is big.\nIf phone is big, then frank is happy.\nIf alice is an enemy of george and alice is hungry and carol dislikes carol, then alice is hungry.\nIf it is hot, then carol is hungry.\nIf carol is a friend of dave and george dislikes carol, then book is big.\nIf george dislikes george, then eve is hungry.\nIf apple is wet, then ball is big.\nIf dave is sad and george is a friend of alice, then frank is tall.\nIf it is hot, then carol is sad.\nIf dave is an enemy of george and it is cold, then frank is hungry.\n\nAnd the following facts:\nit is hot.\ngeorge dislikes alice.\nalice dislikes george.\nfrank dislikes alice.\nbob is an enemy of frank.\neve dislikes car.\neve dislikes phone.\ncarol dislikes car.\ndave dislikes george.\nalice is hungry.\ngeorge is an enemy of carol.\ndave is an enemy of eve.\ngeorge dislikes phone.\neve owns phone.\nbob is tall.\nalice is a friend of carol.\n\nOBSERVATION: frank is happy is true.\n\nQUESTION:\nCould dave dislikes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(carol,car).",
    "c": "wet(pencil) :- hot.\nenemy(alice,alice) :- wet(pencil).\ntall(carol) :- enemy(alice,alice).\nowns(carol,apple) :- tall(carol).\nbig(phone) :- owns(carol,apple).\nhappy(frank) :- big(phone).\nhungry(alice) :- enemy(alice,george), hungry(alice), dislikes(carol,carol).\nhungry(carol) :- hot.\nbig(book) :- friend(carol,dave), dislikes(george,carol).\nhungry(eve) :- dislikes(george,george).\nbig(ball) :- wet(apple).\ntall(frank) :- sad(dave), friend(george,alice).\nsad(carol) :- hot.\nhungry(frank) :- enemy(dave,george), cold.\nhot.\ndislikes(george,alice).\ndislikes(alice,george).\ndislikes(frank,alice).\nenemy(bob,frank).\ndislikes(eve,car).\ndislikes(eve,phone).\ndislikes(dave,george).\nhungry(alice).\nenemy(george,carol).\nenemy(dave,eve).\ndislikes(george,phone).\nowns(eve,phone).\ntall(bob).\nfriend(alice,carol).",
    "natural language": "You are given the following rules:\nIf it is hot, then pencil is wet.\nIf pencil is wet, then alice is an enemy of alice.\nIf alice is an enemy of alice, then carol is tall.\nIf carol is tall, then carol owns apple.\nIf carol owns apple, then phone is big.\nIf phone is big, then frank is happy.\nIf alice is an enemy of george and alice is hungry and carol dislikes carol, then alice is hungry.\nIf it is hot, then carol is hungry.\nIf carol is a friend of dave and george dislikes carol, then book is big.\nIf george dislikes george, then eve is hungry.\nIf apple is wet, then ball is big.\nIf dave is sad and george is a friend of alice, then frank is tall.\nIf it is hot, then carol is sad.\nIf dave is an enemy of george and it is cold, then frank is hungry.\n\nAnd the following facts:\nit is hot.\ngeorge dislikes alice.\nalice dislikes george.\nfrank dislikes alice.\nbob is an enemy of frank.\neve dislikes car.\neve dislikes phone.\ncarol dislikes car.\ndave dislikes george.\nalice is hungry.\ngeorge is an enemy of carol.\ndave is an enemy of eve.\ngeorge dislikes phone.\neve owns phone.\nbob is tall.\nalice is a friend of carol.\n\nOBSERVATION: frank is happy is true.\n\nQUESTION:\nCould carol dislikes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(carol,eve).",
    "c": "sad(george) :- friend(george,dave).\nsibling(dave,frank) :- sad(george).\nhappy(frank) :- sibling(dave,frank).\nsunny :- happy(frank).\nsibling(eve,frank) :- sunny.\nlikes(dave,ball) :- sibling(eve,frank).\ndislikes(bob,phone) :- likes(dave,ball).\nwet(apple) :- dislikes(bob,phone).\nhot :- happy(bob), dislikes(carol,apple), wet(phone).\nhot :- small(phone), hot.\nsmall(car) :- sunny, tall(george), wet(apple).\nsmall(apple) :- cold, small(apple), small(car).\nsad(frank) :- sad(dave), friend(george,carol), wet(book).\nhungry(alice) :- parent(frank,george), hungry(george).\nfriend(george,dave).\nhappy(bob).\nlikes(carol,frank).\ndislikes(dave,bob).\nfriend(carol,eve).\nsibling(alice,george).\nhappy(eve).\nparent(eve,frank).\nsmall(car).\ntall(alice).\ndislikes(dave,george).\nfriend(dave,george).\nfriend(eve,alice).\ndislikes(george,ball).\ntall(dave).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then george is sad.\nIf george is sad, then dave is a sibling of frank.\nIf dave is a sibling of frank, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then dave likes ball.\nIf dave likes ball, then bob dislikes phone.\nIf bob dislikes phone, then apple is wet.\nIf bob is happy and carol dislikes apple and phone is wet, then it is hot.\nIf phone is small and it is hot, then it is hot.\nIf it is sunny and george is tall and apple is wet, then car is small.\nIf it is cold and apple is small and car is small, then apple is small.\nIf dave is sad and george is a friend of carol and book is wet, then frank is sad.\nIf frank is a parent of george and george is hungry, then alice is hungry.\n\nAnd the following facts:\ngeorge is a friend of dave.\nbob is happy.\ncarol likes frank.\ndave dislikes bob.\ncarol is a friend of eve.\nalice is a sibling of george.\neve is happy.\neve is a parent of frank.\ncar is small.\nalice is tall.\ndave dislikes george.\ndave is a friend of george.\neve is a friend of alice.\ngeorge dislikes ball.\ndave is tall.\ncarol is a parent of bob.\n\nQUESTION:\nIs carol is a friend of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "sad(george) :- friend(george,dave).\nsibling(dave,frank) :- sad(george).\nhappy(frank) :- sibling(dave,frank).\nsunny :- happy(frank).\nsibling(eve,frank) :- sunny.\nlikes(dave,ball) :- sibling(eve,frank).\ndislikes(bob,phone) :- likes(dave,ball).\nwet(apple) :- dislikes(bob,phone).\nhot :- happy(bob), dislikes(carol,apple), wet(phone).\nhot :- small(phone), hot.\nsmall(car) :- sunny, tall(george), wet(apple).\nsmall(apple) :- cold, small(apple), small(car).\nsad(frank) :- sad(dave), friend(george,carol), wet(book).\nhungry(alice) :- parent(frank,george), hungry(george).\nfriend(george,dave).\nhappy(bob).\nlikes(carol,frank).\ndislikes(dave,bob).\nfriend(carol,eve).\nsibling(alice,george).\nhappy(eve).\nparent(eve,frank).\nsmall(car).\ntall(alice).\ndislikes(dave,george).\nfriend(dave,george).\nfriend(eve,alice).\ndislikes(george,ball).\ntall(dave).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then george is sad.\nIf george is sad, then dave is a sibling of frank.\nIf dave is a sibling of frank, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then dave likes ball.\nIf dave likes ball, then bob dislikes phone.\nIf bob dislikes phone, then apple is wet.\nIf bob is happy and carol dislikes apple and phone is wet, then it is hot.\nIf phone is small and it is hot, then it is hot.\nIf it is sunny and george is tall and apple is wet, then car is small.\nIf it is cold and apple is small and car is small, then apple is small.\nIf dave is sad and george is a friend of carol and book is wet, then frank is sad.\nIf frank is a parent of george and george is hungry, then alice is hungry.\n\nAnd the following facts:\ngeorge is a friend of dave.\nbob is happy.\ncarol likes frank.\ndave dislikes bob.\ncarol is a friend of eve.\nalice is a sibling of george.\neve is happy.\neve is a parent of frank.\ncar is small.\nalice is tall.\ndave dislikes george.\ndave is a friend of george.\neve is a friend of alice.\ngeorge dislikes ball.\ndave is tall.\ncarol is a parent of bob.\n\nQUESTION:\nIs eve is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,frank).",
    "c": "sad(george) :- friend(george,dave).\nsibling(dave,frank) :- sad(george).\nhappy(frank) :- sibling(dave,frank).\nsunny :- happy(frank).\nsibling(eve,frank) :- sunny.\nlikes(dave,ball) :- sibling(eve,frank).\ndislikes(bob,phone) :- likes(dave,ball).\nwet(apple) :- dislikes(bob,phone).\nhot :- happy(bob), dislikes(carol,apple), wet(phone).\nhot :- small(phone), hot.\nsmall(car) :- sunny, tall(george), wet(apple).\nsmall(apple) :- cold, small(apple), small(car).\nsad(frank) :- sad(dave), friend(george,carol), wet(book).\nhungry(alice) :- parent(frank,george), hungry(george).\nfriend(george,dave).\nhappy(bob).\nlikes(carol,frank).\ndislikes(dave,bob).\nfriend(carol,eve).\nsibling(alice,george).\nhappy(eve).\nparent(eve,frank).\nsmall(car).\ntall(alice).\ndislikes(dave,george).\nfriend(dave,george).\nfriend(eve,alice).\ndislikes(george,ball).\ntall(dave).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then george is sad.\nIf george is sad, then dave is a sibling of frank.\nIf dave is a sibling of frank, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then dave likes ball.\nIf dave likes ball, then bob dislikes phone.\nIf bob dislikes phone, then apple is wet.\nIf bob is happy and carol dislikes apple and phone is wet, then it is hot.\nIf phone is small and it is hot, then it is hot.\nIf it is sunny and george is tall and apple is wet, then car is small.\nIf it is cold and apple is small and car is small, then apple is small.\nIf dave is sad and george is a friend of carol and book is wet, then frank is sad.\nIf frank is a parent of george and george is hungry, then alice is hungry.\n\nAnd the following facts:\ngeorge is a friend of dave.\nbob is happy.\ncarol likes frank.\ndave dislikes bob.\ncarol is a friend of eve.\nalice is a sibling of george.\neve is happy.\neve is a parent of frank.\ncar is small.\nalice is tall.\ndave dislikes george.\ndave is a friend of george.\neve is a friend of alice.\ngeorge dislikes ball.\ndave is tall.\ncarol is a parent of bob.\n\nQUESTION:\nIs dave is a sibling of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,george).",
    "c": "sad(george) :- friend(george,dave).\nsibling(dave,frank) :- sad(george).\nhappy(frank) :- sibling(dave,frank).\nsunny :- happy(frank).\nsibling(eve,frank) :- sunny.\nlikes(dave,ball) :- sibling(eve,frank).\ndislikes(bob,phone) :- likes(dave,ball).\nwet(apple) :- dislikes(bob,phone).\nhot :- happy(bob), dislikes(carol,apple), wet(phone).\nhot :- small(phone), hot.\nsmall(car) :- sunny, tall(george), wet(apple).\nsmall(apple) :- cold, small(apple), small(car).\nsad(frank) :- sad(dave), friend(george,carol), wet(book).\nhungry(alice) :- parent(frank,george), hungry(george).\nfriend(george,dave).\nhappy(bob).\nlikes(carol,frank).\ndislikes(dave,bob).\nfriend(carol,eve).\nsibling(alice,george).\nhappy(eve).\nparent(eve,frank).\nsmall(car).\ntall(alice).\ndislikes(dave,george).\nfriend(dave,george).\nfriend(eve,alice).\ndislikes(george,ball).\ntall(dave).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then george is sad.\nIf george is sad, then dave is a sibling of frank.\nIf dave is a sibling of frank, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then dave likes ball.\nIf dave likes ball, then bob dislikes phone.\nIf bob dislikes phone, then apple is wet.\nIf bob is happy and carol dislikes apple and phone is wet, then it is hot.\nIf phone is small and it is hot, then it is hot.\nIf it is sunny and george is tall and apple is wet, then car is small.\nIf it is cold and apple is small and car is small, then apple is small.\nIf dave is sad and george is a friend of carol and book is wet, then frank is sad.\nIf frank is a parent of george and george is hungry, then alice is hungry.\n\nAnd the following facts:\ngeorge is a friend of dave.\nbob is happy.\ncarol likes frank.\ndave dislikes bob.\ncarol is a friend of eve.\nalice is a sibling of george.\neve is happy.\neve is a parent of frank.\ncar is small.\nalice is tall.\ndave dislikes george.\ndave is a friend of george.\neve is a friend of alice.\ngeorge dislikes ball.\ndave is tall.\ncarol is a parent of bob.\n\nQUESTION:\nIs alice dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(alice).",
    "c": "sad(george) :- friend(george,dave).\nsibling(dave,frank) :- sad(george).\nhappy(frank) :- sibling(dave,frank).\nsunny :- happy(frank).\nsibling(eve,frank) :- sunny.\nlikes(dave,ball) :- sibling(eve,frank).\ndislikes(bob,phone) :- likes(dave,ball).\nwet(apple) :- dislikes(bob,phone).\nhot :- happy(bob), dislikes(carol,apple), wet(phone).\nhot :- small(phone), hot.\nsmall(car) :- sunny, tall(george), wet(apple).\nsmall(apple) :- cold, small(apple), small(car).\nsad(frank) :- sad(dave), friend(george,carol), wet(book).\nhungry(alice) :- parent(frank,george), hungry(george).\nfriend(george,dave).\nhappy(bob).\nlikes(carol,frank).\ndislikes(dave,bob).\nfriend(carol,eve).\nsibling(alice,george).\nhappy(eve).\nparent(eve,frank).\nsmall(car).\ntall(alice).\ndislikes(dave,george).\nfriend(dave,george).\nfriend(eve,alice).\ndislikes(george,ball).\ntall(dave).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf george is a friend of dave, then george is sad.\nIf george is sad, then dave is a sibling of frank.\nIf dave is a sibling of frank, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then dave likes ball.\nIf dave likes ball, then bob dislikes phone.\nIf bob dislikes phone, then apple is wet.\nIf bob is happy and carol dislikes apple and phone is wet, then it is hot.\nIf phone is small and it is hot, then it is hot.\nIf it is sunny and george is tall and apple is wet, then car is small.\nIf it is cold and apple is small and car is small, then apple is small.\nIf dave is sad and george is a friend of carol and book is wet, then frank is sad.\nIf frank is a parent of george and george is hungry, then alice is hungry.\n\nAnd the following facts:\ngeorge is a friend of dave.\nbob is happy.\ncarol likes frank.\ndave dislikes bob.\ncarol is a friend of eve.\nalice is a sibling of george.\neve is happy.\neve is a parent of frank.\ncar is small.\nalice is tall.\ndave dislikes george.\ndave is a friend of george.\neve is a friend of alice.\ngeorge dislikes ball.\ndave is tall.\ncarol is a parent of bob.\n\nQUESTION:\nIs alice is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "sad(george) :- friend(george,dave).\nsibling(dave,frank) :- sad(george).\nhappy(frank) :- sibling(dave,frank).\nsunny :- happy(frank).\nsibling(eve,frank) :- sunny.\nlikes(dave,ball) :- sibling(eve,frank).\ndislikes(bob,phone) :- likes(dave,ball).\nwet(apple) :- dislikes(bob,phone).\nhot :- happy(bob), dislikes(carol,apple), wet(phone).\nhot :- small(phone), hot.\nsmall(car) :- sunny, tall(george), wet(apple).\nsmall(apple) :- cold, small(apple), small(car).\nsad(frank) :- sad(dave), friend(george,carol), wet(book).\nhungry(alice) :- parent(frank,george), hungry(george).\nhappy(bob).\nlikes(carol,frank).\ndislikes(dave,bob).\nfriend(carol,eve).\nsibling(alice,george).\nhappy(eve).\nparent(eve,frank).\nsmall(car).\ntall(alice).\ndislikes(dave,george).\nfriend(dave,george).\nfriend(eve,alice).\ndislikes(george,ball).\ntall(dave).\nparent(carol,bob).",
    "natural language": "You are given the following rules:\nIf george is a friend of dave, then george is sad.\nIf george is sad, then dave is a sibling of frank.\nIf dave is a sibling of frank, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then dave likes ball.\nIf dave likes ball, then bob dislikes phone.\nIf bob dislikes phone, then apple is wet.\nIf bob is happy and carol dislikes apple and phone is wet, then it is hot.\nIf phone is small and it is hot, then it is hot.\nIf it is sunny and george is tall and apple is wet, then car is small.\nIf it is cold and apple is small and car is small, then apple is small.\nIf dave is sad and george is a friend of carol and book is wet, then frank is sad.\nIf frank is a parent of george and george is hungry, then alice is hungry.\n\nAnd the following facts:\ngeorge is a friend of dave.\nbob is happy.\ncarol likes frank.\ndave dislikes bob.\ncarol is a friend of eve.\nalice is a sibling of george.\neve is happy.\neve is a parent of frank.\ncar is small.\nalice is tall.\ndave dislikes george.\ndave is a friend of george.\neve is a friend of alice.\ngeorge dislikes ball.\ndave is tall.\ncarol is a parent of bob.\n\nOBSERVATION: apple is wet is true.\n\nQUESTION:\nCould george is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,ball).",
    "c": "sad(george) :- friend(george,dave).\nsibling(dave,frank) :- sad(george).\nhappy(frank) :- sibling(dave,frank).\nsunny :- happy(frank).\nsibling(eve,frank) :- sunny.\nlikes(dave,ball) :- sibling(eve,frank).\ndislikes(bob,phone) :- likes(dave,ball).\nwet(apple) :- dislikes(bob,phone).\nhot :- happy(bob), dislikes(carol,apple), wet(phone).\nhot :- small(phone), hot.\nsmall(car) :- sunny, tall(george), wet(apple).\nsmall(apple) :- cold, small(apple), small(car).\nsad(frank) :- sad(dave), friend(george,carol), wet(book).\nhungry(alice) :- parent(frank,george), hungry(george).\nfriend(george,dave).\nhappy(bob).\nlikes(carol,frank).\ndislikes(dave,bob).\nfriend(carol,eve).\nsibling(alice,george).\nhappy(eve).\nparent(eve,frank).\nsmall(car).\ntall(alice).\ndislikes(dave,george).\nfriend(dave,george).\nfriend(eve,alice).\ntall(dave).\nparent(carol,bob).",
    "natural language": "You are given the following rules:\nIf george is a friend of dave, then george is sad.\nIf george is sad, then dave is a sibling of frank.\nIf dave is a sibling of frank, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then dave likes ball.\nIf dave likes ball, then bob dislikes phone.\nIf bob dislikes phone, then apple is wet.\nIf bob is happy and carol dislikes apple and phone is wet, then it is hot.\nIf phone is small and it is hot, then it is hot.\nIf it is sunny and george is tall and apple is wet, then car is small.\nIf it is cold and apple is small and car is small, then apple is small.\nIf dave is sad and george is a friend of carol and book is wet, then frank is sad.\nIf frank is a parent of george and george is hungry, then alice is hungry.\n\nAnd the following facts:\ngeorge is a friend of dave.\nbob is happy.\ncarol likes frank.\ndave dislikes bob.\ncarol is a friend of eve.\nalice is a sibling of george.\neve is happy.\neve is a parent of frank.\ncar is small.\nalice is tall.\ndave dislikes george.\ndave is a friend of george.\neve is a friend of alice.\ngeorge dislikes ball.\ndave is tall.\ncarol is a parent of bob.\n\nOBSERVATION: apple is wet is true.\n\nQUESTION:\nCould george dislikes ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,frank).",
    "c": "sad(george) :- friend(george,dave).\nsibling(dave,frank) :- sad(george).\nhappy(frank) :- sibling(dave,frank).\nsunny :- happy(frank).\nsibling(eve,frank) :- sunny.\nlikes(dave,ball) :- sibling(eve,frank).\ndislikes(bob,phone) :- likes(dave,ball).\nwet(apple) :- dislikes(bob,phone).\nhot :- happy(bob), dislikes(carol,apple), wet(phone).\nhot :- small(phone), hot.\nsmall(car) :- sunny, tall(george), wet(apple).\nsmall(apple) :- cold, small(apple), small(car).\nsad(frank) :- sad(dave), friend(george,carol), wet(book).\nhungry(alice) :- parent(frank,george), hungry(george).\nfriend(george,dave).\nhappy(bob).\nlikes(carol,frank).\ndislikes(dave,bob).\nfriend(carol,eve).\nsibling(alice,george).\nhappy(eve).\nsmall(car).\ntall(alice).\ndislikes(dave,george).\nfriend(dave,george).\nfriend(eve,alice).\ndislikes(george,ball).\ntall(dave).\nparent(carol,bob).",
    "natural language": "You are given the following rules:\nIf george is a friend of dave, then george is sad.\nIf george is sad, then dave is a sibling of frank.\nIf dave is a sibling of frank, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then eve is a sibling of frank.\nIf eve is a sibling of frank, then dave likes ball.\nIf dave likes ball, then bob dislikes phone.\nIf bob dislikes phone, then apple is wet.\nIf bob is happy and carol dislikes apple and phone is wet, then it is hot.\nIf phone is small and it is hot, then it is hot.\nIf it is sunny and george is tall and apple is wet, then car is small.\nIf it is cold and apple is small and car is small, then apple is small.\nIf dave is sad and george is a friend of carol and book is wet, then frank is sad.\nIf frank is a parent of george and george is hungry, then alice is hungry.\n\nAnd the following facts:\ngeorge is a friend of dave.\nbob is happy.\ncarol likes frank.\ndave dislikes bob.\ncarol is a friend of eve.\nalice is a sibling of george.\neve is happy.\neve is a parent of frank.\ncar is small.\nalice is tall.\ndave dislikes george.\ndave is a friend of george.\neve is a friend of alice.\ngeorge dislikes ball.\ndave is tall.\ncarol is a parent of bob.\n\nOBSERVATION: apple is wet is true.\n\nQUESTION:\nCould eve is a parent of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "parent(alice,dave) :- hungry(george).\nowns(carol,pencil) :- parent(alice,dave).\nowns(carol,phone) :- owns(carol,pencil).\nsunny :- owns(carol,phone).\nenemy(george,eve) :- sunny.\nfriend(frank,carol) :- enemy(george,eve).\ncold :- friend(frank,carol).\nwet(ball) :- cold.\nparent(alice,george) :- sunny, hungry(bob), parent(dave,dave).\nparent(bob,dave) :- cold, sad(eve), sad(bob).\nfriend(alice,alice) :- owns(carol,book).\ntall(dave) :- hungry(carol), dislikes(alice,frank), hot.\nhungry(alice) :- cold.\ntall(eve) :- enemy(carol,bob), sad(george).\nhungry(george).\nfriend(dave,eve).\ndislikes(frank,car).\nowns(frank,ball).\ntall(bob).\ndislikes(carol,dave).\nowns(bob,phone).\nparent(eve,carol).\nparent(carol,dave).\nfriend(alice,dave).\ntall(frank).\nfriend(eve,frank).\nparent(george,dave).\nowns(eve,phone).\nowns(bob,car).\ntall(george).",
    "natural language": "You are given the following information:\nIf george is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then carol owns pencil.\nIf carol owns pencil, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then george is an enemy of eve.\nIf george is an enemy of eve, then frank is a friend of carol.\nIf frank is a friend of carol, then it is cold.\nIf it is cold, then ball is wet.\nIf it is sunny and bob is hungry and dave is a parent of dave, then alice is a parent of george.\nIf it is cold and eve is sad and bob is sad, then bob is a parent of dave.\nIf carol owns book, then alice is a friend of alice.\nIf carol is hungry and alice dislikes frank and it is hot, then dave is tall.\nIf it is cold, then alice is hungry.\nIf carol is an enemy of bob and george is sad, then eve is tall.\n\nAnd the following facts:\ngeorge is hungry.\ndave is a friend of eve.\nfrank dislikes car.\nfrank owns ball.\nbob is tall.\ncarol dislikes dave.\nbob owns phone.\neve is a parent of carol.\ncarol is a parent of dave.\nalice is a friend of dave.\nfrank is tall.\neve is a friend of frank.\ngeorge is a parent of dave.\neve owns phone.\nbob owns car.\ngeorge is tall.\n\nQUESTION:\nIs alice is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,eve).",
    "c": "parent(alice,dave) :- hungry(george).\nowns(carol,pencil) :- parent(alice,dave).\nowns(carol,phone) :- owns(carol,pencil).\nsunny :- owns(carol,phone).\nenemy(george,eve) :- sunny.\nfriend(frank,carol) :- enemy(george,eve).\ncold :- friend(frank,carol).\nwet(ball) :- cold.\nparent(alice,george) :- sunny, hungry(bob), parent(dave,dave).\nparent(bob,dave) :- cold, sad(eve), sad(bob).\nfriend(alice,alice) :- owns(carol,book).\ntall(dave) :- hungry(carol), dislikes(alice,frank), hot.\nhungry(alice) :- cold.\ntall(eve) :- enemy(carol,bob), sad(george).\nhungry(george).\nfriend(dave,eve).\ndislikes(frank,car).\nowns(frank,ball).\ntall(bob).\ndislikes(carol,dave).\nowns(bob,phone).\nparent(eve,carol).\nparent(carol,dave).\nfriend(alice,dave).\ntall(frank).\nfriend(eve,frank).\nparent(george,dave).\nowns(eve,phone).\nowns(bob,car).\ntall(george).",
    "natural language": "You are given the following information:\nIf george is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then carol owns pencil.\nIf carol owns pencil, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then george is an enemy of eve.\nIf george is an enemy of eve, then frank is a friend of carol.\nIf frank is a friend of carol, then it is cold.\nIf it is cold, then ball is wet.\nIf it is sunny and bob is hungry and dave is a parent of dave, then alice is a parent of george.\nIf it is cold and eve is sad and bob is sad, then bob is a parent of dave.\nIf carol owns book, then alice is a friend of alice.\nIf carol is hungry and alice dislikes frank and it is hot, then dave is tall.\nIf it is cold, then alice is hungry.\nIf carol is an enemy of bob and george is sad, then eve is tall.\n\nAnd the following facts:\ngeorge is hungry.\ndave is a friend of eve.\nfrank dislikes car.\nfrank owns ball.\nbob is tall.\ncarol dislikes dave.\nbob owns phone.\neve is a parent of carol.\ncarol is a parent of dave.\nalice is a friend of dave.\nfrank is tall.\neve is a friend of frank.\ngeorge is a parent of dave.\neve owns phone.\nbob owns car.\ngeorge is tall.\n\nQUESTION:\nIs george is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,phone).",
    "c": "parent(alice,dave) :- hungry(george).\nowns(carol,pencil) :- parent(alice,dave).\nowns(carol,phone) :- owns(carol,pencil).\nsunny :- owns(carol,phone).\nenemy(george,eve) :- sunny.\nfriend(frank,carol) :- enemy(george,eve).\ncold :- friend(frank,carol).\nwet(ball) :- cold.\nparent(alice,george) :- sunny, hungry(bob), parent(dave,dave).\nparent(bob,dave) :- cold, sad(eve), sad(bob).\nfriend(alice,alice) :- owns(carol,book).\ntall(dave) :- hungry(carol), dislikes(alice,frank), hot.\nhungry(alice) :- cold.\ntall(eve) :- enemy(carol,bob), sad(george).\nhungry(george).\nfriend(dave,eve).\ndislikes(frank,car).\nowns(frank,ball).\ntall(bob).\ndislikes(carol,dave).\nowns(bob,phone).\nparent(eve,carol).\nparent(carol,dave).\nfriend(alice,dave).\ntall(frank).\nfriend(eve,frank).\nparent(george,dave).\nowns(eve,phone).\nowns(bob,car).\ntall(george).",
    "natural language": "You are given the following information:\nIf george is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then carol owns pencil.\nIf carol owns pencil, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then george is an enemy of eve.\nIf george is an enemy of eve, then frank is a friend of carol.\nIf frank is a friend of carol, then it is cold.\nIf it is cold, then ball is wet.\nIf it is sunny and bob is hungry and dave is a parent of dave, then alice is a parent of george.\nIf it is cold and eve is sad and bob is sad, then bob is a parent of dave.\nIf carol owns book, then alice is a friend of alice.\nIf carol is hungry and alice dislikes frank and it is hot, then dave is tall.\nIf it is cold, then alice is hungry.\nIf carol is an enemy of bob and george is sad, then eve is tall.\n\nAnd the following facts:\ngeorge is hungry.\ndave is a friend of eve.\nfrank dislikes car.\nfrank owns ball.\nbob is tall.\ncarol dislikes dave.\nbob owns phone.\neve is a parent of carol.\ncarol is a parent of dave.\nalice is a friend of dave.\nfrank is tall.\neve is a friend of frank.\ngeorge is a parent of dave.\neve owns phone.\nbob owns car.\ngeorge is tall.\n\nQUESTION:\nIs carol owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,apple).",
    "c": "parent(alice,dave) :- hungry(george).\nowns(carol,pencil) :- parent(alice,dave).\nowns(carol,phone) :- owns(carol,pencil).\nsunny :- owns(carol,phone).\nenemy(george,eve) :- sunny.\nfriend(frank,carol) :- enemy(george,eve).\ncold :- friend(frank,carol).\nwet(ball) :- cold.\nparent(alice,george) :- sunny, hungry(bob), parent(dave,dave).\nparent(bob,dave) :- cold, sad(eve), sad(bob).\nfriend(alice,alice) :- owns(carol,book).\ntall(dave) :- hungry(carol), dislikes(alice,frank), hot.\nhungry(alice) :- cold.\ntall(eve) :- enemy(carol,bob), sad(george).\nhungry(george).\nfriend(dave,eve).\ndislikes(frank,car).\nowns(frank,ball).\ntall(bob).\ndislikes(carol,dave).\nowns(bob,phone).\nparent(eve,carol).\nparent(carol,dave).\nfriend(alice,dave).\ntall(frank).\nfriend(eve,frank).\nparent(george,dave).\nowns(eve,phone).\nowns(bob,car).\ntall(george).",
    "natural language": "You are given the following information:\nIf george is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then carol owns pencil.\nIf carol owns pencil, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then george is an enemy of eve.\nIf george is an enemy of eve, then frank is a friend of carol.\nIf frank is a friend of carol, then it is cold.\nIf it is cold, then ball is wet.\nIf it is sunny and bob is hungry and dave is a parent of dave, then alice is a parent of george.\nIf it is cold and eve is sad and bob is sad, then bob is a parent of dave.\nIf carol owns book, then alice is a friend of alice.\nIf carol is hungry and alice dislikes frank and it is hot, then dave is tall.\nIf it is cold, then alice is hungry.\nIf carol is an enemy of bob and george is sad, then eve is tall.\n\nAnd the following facts:\ngeorge is hungry.\ndave is a friend of eve.\nfrank dislikes car.\nfrank owns ball.\nbob is tall.\ncarol dislikes dave.\nbob owns phone.\neve is a parent of carol.\ncarol is a parent of dave.\nalice is a friend of dave.\nfrank is tall.\neve is a friend of frank.\ngeorge is a parent of dave.\neve owns phone.\nbob owns car.\ngeorge is tall.\n\nQUESTION:\nIs eve owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,alice).",
    "c": "parent(alice,dave) :- hungry(george).\nowns(carol,pencil) :- parent(alice,dave).\nowns(carol,phone) :- owns(carol,pencil).\nsunny :- owns(carol,phone).\nenemy(george,eve) :- sunny.\nfriend(frank,carol) :- enemy(george,eve).\ncold :- friend(frank,carol).\nwet(ball) :- cold.\nparent(alice,george) :- sunny, hungry(bob), parent(dave,dave).\nparent(bob,dave) :- cold, sad(eve), sad(bob).\nfriend(alice,alice) :- owns(carol,book).\ntall(dave) :- hungry(carol), dislikes(alice,frank), hot.\nhungry(alice) :- cold.\ntall(eve) :- enemy(carol,bob), sad(george).\nhungry(george).\nfriend(dave,eve).\ndislikes(frank,car).\nowns(frank,ball).\ntall(bob).\ndislikes(carol,dave).\nowns(bob,phone).\nparent(eve,carol).\nparent(carol,dave).\nfriend(alice,dave).\ntall(frank).\nfriend(eve,frank).\nparent(george,dave).\nowns(eve,phone).\nowns(bob,car).\ntall(george).",
    "natural language": "You are given the following information:\nIf george is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then carol owns pencil.\nIf carol owns pencil, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then george is an enemy of eve.\nIf george is an enemy of eve, then frank is a friend of carol.\nIf frank is a friend of carol, then it is cold.\nIf it is cold, then ball is wet.\nIf it is sunny and bob is hungry and dave is a parent of dave, then alice is a parent of george.\nIf it is cold and eve is sad and bob is sad, then bob is a parent of dave.\nIf carol owns book, then alice is a friend of alice.\nIf carol is hungry and alice dislikes frank and it is hot, then dave is tall.\nIf it is cold, then alice is hungry.\nIf carol is an enemy of bob and george is sad, then eve is tall.\n\nAnd the following facts:\ngeorge is hungry.\ndave is a friend of eve.\nfrank dislikes car.\nfrank owns ball.\nbob is tall.\ncarol dislikes dave.\nbob owns phone.\neve is a parent of carol.\ncarol is a parent of dave.\nalice is a friend of dave.\nfrank is tall.\neve is a friend of frank.\ngeorge is a parent of dave.\neve owns phone.\nbob owns car.\ngeorge is tall.\n\nQUESTION:\nIs george dislikes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(george).",
    "c": "parent(alice,dave) :- hungry(george).\nowns(carol,pencil) :- parent(alice,dave).\nowns(carol,phone) :- owns(carol,pencil).\nsunny :- owns(carol,phone).\nenemy(george,eve) :- sunny.\nfriend(frank,carol) :- enemy(george,eve).\ncold :- friend(frank,carol).\nwet(ball) :- cold.\nparent(alice,george) :- sunny, hungry(bob), parent(dave,dave).\nparent(bob,dave) :- cold, sad(eve), sad(bob).\nfriend(alice,alice) :- owns(carol,book).\ntall(dave) :- hungry(carol), dislikes(alice,frank), hot.\nhungry(alice) :- cold.\ntall(eve) :- enemy(carol,bob), sad(george).\nfriend(dave,eve).\ndislikes(frank,car).\nowns(frank,ball).\ntall(bob).\ndislikes(carol,dave).\nowns(bob,phone).\nparent(eve,carol).\nparent(carol,dave).\nfriend(alice,dave).\ntall(frank).\nfriend(eve,frank).\nparent(george,dave).\nowns(eve,phone).\nowns(bob,car).\ntall(george).",
    "natural language": "You are given the following rules:\nIf george is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then carol owns pencil.\nIf carol owns pencil, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then george is an enemy of eve.\nIf george is an enemy of eve, then frank is a friend of carol.\nIf frank is a friend of carol, then it is cold.\nIf it is cold, then ball is wet.\nIf it is sunny and bob is hungry and dave is a parent of dave, then alice is a parent of george.\nIf it is cold and eve is sad and bob is sad, then bob is a parent of dave.\nIf carol owns book, then alice is a friend of alice.\nIf carol is hungry and alice dislikes frank and it is hot, then dave is tall.\nIf it is cold, then alice is hungry.\nIf carol is an enemy of bob and george is sad, then eve is tall.\n\nAnd the following facts:\ngeorge is hungry.\ndave is a friend of eve.\nfrank dislikes car.\nfrank owns ball.\nbob is tall.\ncarol dislikes dave.\nbob owns phone.\neve is a parent of carol.\ncarol is a parent of dave.\nalice is a friend of dave.\nfrank is tall.\neve is a friend of frank.\ngeorge is a parent of dave.\neve owns phone.\nbob owns car.\ngeorge is tall.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould george is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "parent(alice,dave) :- hungry(george).\nowns(carol,pencil) :- parent(alice,dave).\nowns(carol,phone) :- owns(carol,pencil).\nsunny :- owns(carol,phone).\nenemy(george,eve) :- sunny.\nfriend(frank,carol) :- enemy(george,eve).\ncold :- friend(frank,carol).\nwet(ball) :- cold.\nparent(alice,george) :- sunny, hungry(bob), parent(dave,dave).\nparent(bob,dave) :- cold, sad(eve), sad(bob).\nfriend(alice,alice) :- owns(carol,book).\ntall(dave) :- hungry(carol), dislikes(alice,frank), hot.\nhungry(alice) :- cold.\ntall(eve) :- enemy(carol,bob), sad(george).\nhungry(george).\nfriend(dave,eve).\ndislikes(frank,car).\nowns(frank,ball).\ntall(bob).\ndislikes(carol,dave).\nowns(bob,phone).\nparent(eve,carol).\nparent(carol,dave).\ntall(frank).\nfriend(eve,frank).\nparent(george,dave).\nowns(eve,phone).\nowns(bob,car).\ntall(george).",
    "natural language": "You are given the following rules:\nIf george is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then carol owns pencil.\nIf carol owns pencil, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then george is an enemy of eve.\nIf george is an enemy of eve, then frank is a friend of carol.\nIf frank is a friend of carol, then it is cold.\nIf it is cold, then ball is wet.\nIf it is sunny and bob is hungry and dave is a parent of dave, then alice is a parent of george.\nIf it is cold and eve is sad and bob is sad, then bob is a parent of dave.\nIf carol owns book, then alice is a friend of alice.\nIf carol is hungry and alice dislikes frank and it is hot, then dave is tall.\nIf it is cold, then alice is hungry.\nIf carol is an enemy of bob and george is sad, then eve is tall.\n\nAnd the following facts:\ngeorge is hungry.\ndave is a friend of eve.\nfrank dislikes car.\nfrank owns ball.\nbob is tall.\ncarol dislikes dave.\nbob owns phone.\neve is a parent of carol.\ncarol is a parent of dave.\nalice is a friend of dave.\nfrank is tall.\neve is a friend of frank.\ngeorge is a parent of dave.\neve owns phone.\nbob owns car.\ngeorge is tall.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould alice is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(eve,frank).",
    "c": "parent(alice,dave) :- hungry(george).\nowns(carol,pencil) :- parent(alice,dave).\nowns(carol,phone) :- owns(carol,pencil).\nsunny :- owns(carol,phone).\nenemy(george,eve) :- sunny.\nfriend(frank,carol) :- enemy(george,eve).\ncold :- friend(frank,carol).\nwet(ball) :- cold.\nparent(alice,george) :- sunny, hungry(bob), parent(dave,dave).\nparent(bob,dave) :- cold, sad(eve), sad(bob).\nfriend(alice,alice) :- owns(carol,book).\ntall(dave) :- hungry(carol), dislikes(alice,frank), hot.\nhungry(alice) :- cold.\ntall(eve) :- enemy(carol,bob), sad(george).\nhungry(george).\nfriend(dave,eve).\ndislikes(frank,car).\nowns(frank,ball).\ntall(bob).\ndislikes(carol,dave).\nowns(bob,phone).\nparent(eve,carol).\nparent(carol,dave).\nfriend(alice,dave).\ntall(frank).\nparent(george,dave).\nowns(eve,phone).\nowns(bob,car).\ntall(george).",
    "natural language": "You are given the following rules:\nIf george is hungry, then alice is a parent of dave.\nIf alice is a parent of dave, then carol owns pencil.\nIf carol owns pencil, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then george is an enemy of eve.\nIf george is an enemy of eve, then frank is a friend of carol.\nIf frank is a friend of carol, then it is cold.\nIf it is cold, then ball is wet.\nIf it is sunny and bob is hungry and dave is a parent of dave, then alice is a parent of george.\nIf it is cold and eve is sad and bob is sad, then bob is a parent of dave.\nIf carol owns book, then alice is a friend of alice.\nIf carol is hungry and alice dislikes frank and it is hot, then dave is tall.\nIf it is cold, then alice is hungry.\nIf carol is an enemy of bob and george is sad, then eve is tall.\n\nAnd the following facts:\ngeorge is hungry.\ndave is a friend of eve.\nfrank dislikes car.\nfrank owns ball.\nbob is tall.\ncarol dislikes dave.\nbob owns phone.\neve is a parent of carol.\ncarol is a parent of dave.\nalice is a friend of dave.\nfrank is tall.\neve is a friend of frank.\ngeorge is a parent of dave.\neve owns phone.\nbob owns car.\ngeorge is tall.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould eve is a friend of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "cold :- owns(eve,apple).\nhappy(eve) :- cold.\nsad(dave) :- happy(eve).\nenemy(alice,george) :- sad(dave).\nparent(dave,alice) :- enemy(alice,george).\ndislikes(bob,dave) :- parent(dave,alice).\nenemy(dave,frank) :- dislikes(bob,dave).\nhungry(carol) :- enemy(dave,frank).\nsad(dave) :- hungry(carol).\nsibling(carol,frank) :- sad(dave).\nhappy(frank) :- friend(bob,carol), sibling(dave,bob), happy(bob).\nhappy(carol) :- happy(george).\nsibling(frank,frank) :- likes(frank,bob), cold.\nparent(bob,eve) :- sad(dave), parent(carol,carol), cold.\nowns(eve,apple).\nparent(carol,eve).\nparent(bob,dave).\ndislikes(george,pencil).\nfriend(frank,carol).\nowns(eve,ball).\ndislikes(frank,car).\nlikes(frank,eve).\nparent(eve,frank).\nenemy(frank,carol).\nhungry(frank).\nlikes(eve,pencil).\nowns(eve,phone).\ndislikes(eve,george).\nsibling(eve,bob).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf eve owns apple, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then dave is a parent of alice.\nIf dave is a parent of alice, then bob dislikes dave.\nIf bob dislikes dave, then dave is an enemy of frank.\nIf dave is an enemy of frank, then carol is hungry.\nIf carol is hungry, then dave is sad.\nIf dave is sad, then carol is a sibling of frank.\nIf bob is a friend of carol and dave is a sibling of bob and bob is happy, then frank is happy.\nIf george is happy, then carol is happy.\nIf frank likes bob and it is cold, then frank is a sibling of frank.\nIf dave is sad and carol is a parent of carol and it is cold, then bob is a parent of eve.\n\nAnd the following facts:\neve owns apple.\ncarol is a parent of eve.\nbob is a parent of dave.\ngeorge dislikes pencil.\nfrank is a friend of carol.\neve owns ball.\nfrank dislikes car.\nfrank likes eve.\neve is a parent of frank.\nfrank is an enemy of carol.\nfrank is hungry.\neve likes pencil.\neve owns phone.\neve dislikes george.\neve is a sibling of bob.\ncarol is an enemy of bob.\n\nQUESTION:\nIs dave is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,pencil).",
    "c": "cold :- owns(eve,apple).\nhappy(eve) :- cold.\nsad(dave) :- happy(eve).\nenemy(alice,george) :- sad(dave).\nparent(dave,alice) :- enemy(alice,george).\ndislikes(bob,dave) :- parent(dave,alice).\nenemy(dave,frank) :- dislikes(bob,dave).\nhungry(carol) :- enemy(dave,frank).\nsad(dave) :- hungry(carol).\nsibling(carol,frank) :- sad(dave).\nhappy(frank) :- friend(bob,carol), sibling(dave,bob), happy(bob).\nhappy(carol) :- happy(george).\nsibling(frank,frank) :- likes(frank,bob), cold.\nparent(bob,eve) :- sad(dave), parent(carol,carol), cold.\nowns(eve,apple).\nparent(carol,eve).\nparent(bob,dave).\ndislikes(george,pencil).\nfriend(frank,carol).\nowns(eve,ball).\ndislikes(frank,car).\nlikes(frank,eve).\nparent(eve,frank).\nenemy(frank,carol).\nhungry(frank).\nlikes(eve,pencil).\nowns(eve,phone).\ndislikes(eve,george).\nsibling(eve,bob).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf eve owns apple, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then dave is a parent of alice.\nIf dave is a parent of alice, then bob dislikes dave.\nIf bob dislikes dave, then dave is an enemy of frank.\nIf dave is an enemy of frank, then carol is hungry.\nIf carol is hungry, then dave is sad.\nIf dave is sad, then carol is a sibling of frank.\nIf bob is a friend of carol and dave is a sibling of bob and bob is happy, then frank is happy.\nIf george is happy, then carol is happy.\nIf frank likes bob and it is cold, then frank is a sibling of frank.\nIf dave is sad and carol is a parent of carol and it is cold, then bob is a parent of eve.\n\nAnd the following facts:\neve owns apple.\ncarol is a parent of eve.\nbob is a parent of dave.\ngeorge dislikes pencil.\nfrank is a friend of carol.\neve owns ball.\nfrank dislikes car.\nfrank likes eve.\neve is a parent of frank.\nfrank is an enemy of carol.\nfrank is hungry.\neve likes pencil.\neve owns phone.\neve dislikes george.\neve is a sibling of bob.\ncarol is an enemy of bob.\n\nQUESTION:\nIs george dislikes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,eve).",
    "c": "cold :- owns(eve,apple).\nhappy(eve) :- cold.\nsad(dave) :- happy(eve).\nenemy(alice,george) :- sad(dave).\nparent(dave,alice) :- enemy(alice,george).\ndislikes(bob,dave) :- parent(dave,alice).\nenemy(dave,frank) :- dislikes(bob,dave).\nhungry(carol) :- enemy(dave,frank).\nsad(dave) :- hungry(carol).\nsibling(carol,frank) :- sad(dave).\nhappy(frank) :- friend(bob,carol), sibling(dave,bob), happy(bob).\nhappy(carol) :- happy(george).\nsibling(frank,frank) :- likes(frank,bob), cold.\nparent(bob,eve) :- sad(dave), parent(carol,carol), cold.\nowns(eve,apple).\nparent(carol,eve).\nparent(bob,dave).\ndislikes(george,pencil).\nfriend(frank,carol).\nowns(eve,ball).\ndislikes(frank,car).\nlikes(frank,eve).\nparent(eve,frank).\nenemy(frank,carol).\nhungry(frank).\nlikes(eve,pencil).\nowns(eve,phone).\ndislikes(eve,george).\nsibling(eve,bob).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf eve owns apple, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then dave is a parent of alice.\nIf dave is a parent of alice, then bob dislikes dave.\nIf bob dislikes dave, then dave is an enemy of frank.\nIf dave is an enemy of frank, then carol is hungry.\nIf carol is hungry, then dave is sad.\nIf dave is sad, then carol is a sibling of frank.\nIf bob is a friend of carol and dave is a sibling of bob and bob is happy, then frank is happy.\nIf george is happy, then carol is happy.\nIf frank likes bob and it is cold, then frank is a sibling of frank.\nIf dave is sad and carol is a parent of carol and it is cold, then bob is a parent of eve.\n\nAnd the following facts:\neve owns apple.\ncarol is a parent of eve.\nbob is a parent of dave.\ngeorge dislikes pencil.\nfrank is a friend of carol.\neve owns ball.\nfrank dislikes car.\nfrank likes eve.\neve is a parent of frank.\nfrank is an enemy of carol.\nfrank is hungry.\neve likes pencil.\neve owns phone.\neve dislikes george.\neve is a sibling of bob.\ncarol is an enemy of bob.\n\nQUESTION:\nIs carol is a parent of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,frank).",
    "c": "cold :- owns(eve,apple).\nhappy(eve) :- cold.\nsad(dave) :- happy(eve).\nenemy(alice,george) :- sad(dave).\nparent(dave,alice) :- enemy(alice,george).\ndislikes(bob,dave) :- parent(dave,alice).\nenemy(dave,frank) :- dislikes(bob,dave).\nhungry(carol) :- enemy(dave,frank).\nsad(dave) :- hungry(carol).\nsibling(carol,frank) :- sad(dave).\nhappy(frank) :- friend(bob,carol), sibling(dave,bob), happy(bob).\nhappy(carol) :- happy(george).\nsibling(frank,frank) :- likes(frank,bob), cold.\nparent(bob,eve) :- sad(dave), parent(carol,carol), cold.\nowns(eve,apple).\nparent(carol,eve).\nparent(bob,dave).\ndislikes(george,pencil).\nfriend(frank,carol).\nowns(eve,ball).\ndislikes(frank,car).\nlikes(frank,eve).\nparent(eve,frank).\nenemy(frank,carol).\nhungry(frank).\nlikes(eve,pencil).\nowns(eve,phone).\ndislikes(eve,george).\nsibling(eve,bob).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf eve owns apple, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then dave is a parent of alice.\nIf dave is a parent of alice, then bob dislikes dave.\nIf bob dislikes dave, then dave is an enemy of frank.\nIf dave is an enemy of frank, then carol is hungry.\nIf carol is hungry, then dave is sad.\nIf dave is sad, then carol is a sibling of frank.\nIf bob is a friend of carol and dave is a sibling of bob and bob is happy, then frank is happy.\nIf george is happy, then carol is happy.\nIf frank likes bob and it is cold, then frank is a sibling of frank.\nIf dave is sad and carol is a parent of carol and it is cold, then bob is a parent of eve.\n\nAnd the following facts:\neve owns apple.\ncarol is a parent of eve.\nbob is a parent of dave.\ngeorge dislikes pencil.\nfrank is a friend of carol.\neve owns ball.\nfrank dislikes car.\nfrank likes eve.\neve is a parent of frank.\nfrank is an enemy of carol.\nfrank is hungry.\neve likes pencil.\neve owns phone.\neve dislikes george.\neve is a sibling of bob.\ncarol is an enemy of bob.\n\nQUESTION:\nIs bob is an enemy of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,bob).",
    "c": "cold :- owns(eve,apple).\nhappy(eve) :- cold.\nsad(dave) :- happy(eve).\nenemy(alice,george) :- sad(dave).\nparent(dave,alice) :- enemy(alice,george).\ndislikes(bob,dave) :- parent(dave,alice).\nenemy(dave,frank) :- dislikes(bob,dave).\nhungry(carol) :- enemy(dave,frank).\nsad(dave) :- hungry(carol).\nsibling(carol,frank) :- sad(dave).\nhappy(frank) :- friend(bob,carol), sibling(dave,bob), happy(bob).\nhappy(carol) :- happy(george).\nsibling(frank,frank) :- likes(frank,bob), cold.\nparent(bob,eve) :- sad(dave), parent(carol,carol), cold.\nowns(eve,apple).\nparent(carol,eve).\nparent(bob,dave).\ndislikes(george,pencil).\nfriend(frank,carol).\nowns(eve,ball).\ndislikes(frank,car).\nlikes(frank,eve).\nparent(eve,frank).\nenemy(frank,carol).\nhungry(frank).\nlikes(eve,pencil).\nowns(eve,phone).\ndislikes(eve,george).\nsibling(eve,bob).\nenemy(carol,bob).",
    "natural language": "You are given the following information:\nIf eve owns apple, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then dave is a parent of alice.\nIf dave is a parent of alice, then bob dislikes dave.\nIf bob dislikes dave, then dave is an enemy of frank.\nIf dave is an enemy of frank, then carol is hungry.\nIf carol is hungry, then dave is sad.\nIf dave is sad, then carol is a sibling of frank.\nIf bob is a friend of carol and dave is a sibling of bob and bob is happy, then frank is happy.\nIf george is happy, then carol is happy.\nIf frank likes bob and it is cold, then frank is a sibling of frank.\nIf dave is sad and carol is a parent of carol and it is cold, then bob is a parent of eve.\n\nAnd the following facts:\neve owns apple.\ncarol is a parent of eve.\nbob is a parent of dave.\ngeorge dislikes pencil.\nfrank is a friend of carol.\neve owns ball.\nfrank dislikes car.\nfrank likes eve.\neve is a parent of frank.\nfrank is an enemy of carol.\nfrank is hungry.\neve likes pencil.\neve owns phone.\neve dislikes george.\neve is a sibling of bob.\ncarol is an enemy of bob.\n\nQUESTION:\nIs carol likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,apple).",
    "c": "cold :- owns(eve,apple).\nhappy(eve) :- cold.\nsad(dave) :- happy(eve).\nenemy(alice,george) :- sad(dave).\nparent(dave,alice) :- enemy(alice,george).\ndislikes(bob,dave) :- parent(dave,alice).\nenemy(dave,frank) :- dislikes(bob,dave).\nhungry(carol) :- enemy(dave,frank).\nsad(dave) :- hungry(carol).\nsibling(carol,frank) :- sad(dave).\nhappy(frank) :- friend(bob,carol), sibling(dave,bob), happy(bob).\nhappy(carol) :- happy(george).\nsibling(frank,frank) :- likes(frank,bob), cold.\nparent(bob,eve) :- sad(dave), parent(carol,carol), cold.\nparent(carol,eve).\nparent(bob,dave).\ndislikes(george,pencil).\nfriend(frank,carol).\nowns(eve,ball).\ndislikes(frank,car).\nlikes(frank,eve).\nparent(eve,frank).\nenemy(frank,carol).\nhungry(frank).\nlikes(eve,pencil).\nowns(eve,phone).\ndislikes(eve,george).\nsibling(eve,bob).\nenemy(carol,bob).",
    "natural language": "You are given the following rules:\nIf eve owns apple, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then dave is a parent of alice.\nIf dave is a parent of alice, then bob dislikes dave.\nIf bob dislikes dave, then dave is an enemy of frank.\nIf dave is an enemy of frank, then carol is hungry.\nIf carol is hungry, then dave is sad.\nIf dave is sad, then carol is a sibling of frank.\nIf bob is a friend of carol and dave is a sibling of bob and bob is happy, then frank is happy.\nIf george is happy, then carol is happy.\nIf frank likes bob and it is cold, then frank is a sibling of frank.\nIf dave is sad and carol is a parent of carol and it is cold, then bob is a parent of eve.\n\nAnd the following facts:\neve owns apple.\ncarol is a parent of eve.\nbob is a parent of dave.\ngeorge dislikes pencil.\nfrank is a friend of carol.\neve owns ball.\nfrank dislikes car.\nfrank likes eve.\neve is a parent of frank.\nfrank is an enemy of carol.\nfrank is hungry.\neve likes pencil.\neve owns phone.\neve dislikes george.\neve is a sibling of bob.\ncarol is an enemy of bob.\n\nOBSERVATION: carol is a sibling of frank is true.\n\nQUESTION:\nCould eve owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,pencil).",
    "c": "cold :- owns(eve,apple).\nhappy(eve) :- cold.\nsad(dave) :- happy(eve).\nenemy(alice,george) :- sad(dave).\nparent(dave,alice) :- enemy(alice,george).\ndislikes(bob,dave) :- parent(dave,alice).\nenemy(dave,frank) :- dislikes(bob,dave).\nhungry(carol) :- enemy(dave,frank).\nsad(dave) :- hungry(carol).\nsibling(carol,frank) :- sad(dave).\nhappy(frank) :- friend(bob,carol), sibling(dave,bob), happy(bob).\nhappy(carol) :- happy(george).\nsibling(frank,frank) :- likes(frank,bob), cold.\nparent(bob,eve) :- sad(dave), parent(carol,carol), cold.\nowns(eve,apple).\nparent(carol,eve).\nparent(bob,dave).\nfriend(frank,carol).\nowns(eve,ball).\ndislikes(frank,car).\nlikes(frank,eve).\nparent(eve,frank).\nenemy(frank,carol).\nhungry(frank).\nlikes(eve,pencil).\nowns(eve,phone).\ndislikes(eve,george).\nsibling(eve,bob).\nenemy(carol,bob).",
    "natural language": "You are given the following rules:\nIf eve owns apple, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then dave is a parent of alice.\nIf dave is a parent of alice, then bob dislikes dave.\nIf bob dislikes dave, then dave is an enemy of frank.\nIf dave is an enemy of frank, then carol is hungry.\nIf carol is hungry, then dave is sad.\nIf dave is sad, then carol is a sibling of frank.\nIf bob is a friend of carol and dave is a sibling of bob and bob is happy, then frank is happy.\nIf george is happy, then carol is happy.\nIf frank likes bob and it is cold, then frank is a sibling of frank.\nIf dave is sad and carol is a parent of carol and it is cold, then bob is a parent of eve.\n\nAnd the following facts:\neve owns apple.\ncarol is a parent of eve.\nbob is a parent of dave.\ngeorge dislikes pencil.\nfrank is a friend of carol.\neve owns ball.\nfrank dislikes car.\nfrank likes eve.\neve is a parent of frank.\nfrank is an enemy of carol.\nfrank is hungry.\neve likes pencil.\neve owns phone.\neve dislikes george.\neve is a sibling of bob.\ncarol is an enemy of bob.\n\nOBSERVATION: carol is a sibling of frank is true.\n\nQUESTION:\nCould george dislikes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(carol,eve).",
    "c": "cold :- owns(eve,apple).\nhappy(eve) :- cold.\nsad(dave) :- happy(eve).\nenemy(alice,george) :- sad(dave).\nparent(dave,alice) :- enemy(alice,george).\ndislikes(bob,dave) :- parent(dave,alice).\nenemy(dave,frank) :- dislikes(bob,dave).\nhungry(carol) :- enemy(dave,frank).\nsad(dave) :- hungry(carol).\nsibling(carol,frank) :- sad(dave).\nhappy(frank) :- friend(bob,carol), sibling(dave,bob), happy(bob).\nhappy(carol) :- happy(george).\nsibling(frank,frank) :- likes(frank,bob), cold.\nparent(bob,eve) :- sad(dave), parent(carol,carol), cold.\nowns(eve,apple).\nparent(bob,dave).\ndislikes(george,pencil).\nfriend(frank,carol).\nowns(eve,ball).\ndislikes(frank,car).\nlikes(frank,eve).\nparent(eve,frank).\nenemy(frank,carol).\nhungry(frank).\nlikes(eve,pencil).\nowns(eve,phone).\ndislikes(eve,george).\nsibling(eve,bob).\nenemy(carol,bob).",
    "natural language": "You are given the following rules:\nIf eve owns apple, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then dave is sad.\nIf dave is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then dave is a parent of alice.\nIf dave is a parent of alice, then bob dislikes dave.\nIf bob dislikes dave, then dave is an enemy of frank.\nIf dave is an enemy of frank, then carol is hungry.\nIf carol is hungry, then dave is sad.\nIf dave is sad, then carol is a sibling of frank.\nIf bob is a friend of carol and dave is a sibling of bob and bob is happy, then frank is happy.\nIf george is happy, then carol is happy.\nIf frank likes bob and it is cold, then frank is a sibling of frank.\nIf dave is sad and carol is a parent of carol and it is cold, then bob is a parent of eve.\n\nAnd the following facts:\neve owns apple.\ncarol is a parent of eve.\nbob is a parent of dave.\ngeorge dislikes pencil.\nfrank is a friend of carol.\neve owns ball.\nfrank dislikes car.\nfrank likes eve.\neve is a parent of frank.\nfrank is an enemy of carol.\nfrank is hungry.\neve likes pencil.\neve owns phone.\neve dislikes george.\neve is a sibling of bob.\ncarol is an enemy of bob.\n\nOBSERVATION: carol is a sibling of frank is true.\n\nQUESTION:\nCould carol is a parent of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,pencil).",
    "c": "happy(bob) :- big(pencil).\nowns(bob,pencil) :- happy(bob).\nsad(dave) :- owns(bob,pencil).\nenemy(frank,carol) :- sad(dave).\nsibling(dave,alice) :- enemy(frank,carol).\nhungry(alice) :- sibling(dave,alice).\nfriend(dave,eve) :- hungry(alice).\ntall(bob) :- friend(dave,eve).\ncold :- tall(bob).\nlikes(dave,george) :- cold.\nwet(ball) :- wet(ball), small(apple).\nwet(phone) :- dislikes(carol,apple), sibling(frank,eve).\ntall(carol) :- wet(apple), small(car).\ntall(dave) :- hungry(alice), happy(eve).\nbig(pencil).\nlikes(carol,dave).\nowns(eve,book).\nhungry(dave).\nlikes(george,pencil).\nlikes(frank,bob).\ndislikes(bob,car).\nlikes(bob,alice).\nlikes(george,eve).\nsibling(eve,george).\nsibling(george,frank).\nsibling(george,dave).\nlikes(dave,apple).\nfriend(george,eve).\ndislikes(eve,book).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nIf pencil is big, then bob is happy.\nIf bob is happy, then bob owns pencil.\nIf bob owns pencil, then dave is sad.\nIf dave is sad, then frank is an enemy of carol.\nIf frank is an enemy of carol, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is hungry.\nIf alice is hungry, then dave is a friend of eve.\nIf dave is a friend of eve, then bob is tall.\nIf bob is tall, then it is cold.\nIf it is cold, then dave likes george.\nIf ball is wet and apple is small, then ball is wet.\nIf carol dislikes apple and frank is a sibling of eve, then phone is wet.\nIf apple is wet and car is small, then carol is tall.\nIf alice is hungry and eve is happy, then dave is tall.\n\nAnd the following facts:\npencil is big.\ncarol likes dave.\neve owns book.\ndave is hungry.\ngeorge likes pencil.\nfrank likes bob.\nbob dislikes car.\nbob likes alice.\ngeorge likes eve.\neve is a sibling of george.\ngeorge is a sibling of frank.\ngeorge is a sibling of dave.\ndave likes apple.\ngeorge is a friend of eve.\neve dislikes book.\nbob dislikes pencil.\n\nQUESTION:\nIs bob dislikes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,carol).",
    "c": "happy(bob) :- big(pencil).\nowns(bob,pencil) :- happy(bob).\nsad(dave) :- owns(bob,pencil).\nenemy(frank,carol) :- sad(dave).\nsibling(dave,alice) :- enemy(frank,carol).\nhungry(alice) :- sibling(dave,alice).\nfriend(dave,eve) :- hungry(alice).\ntall(bob) :- friend(dave,eve).\ncold :- tall(bob).\nlikes(dave,george) :- cold.\nwet(ball) :- wet(ball), small(apple).\nwet(phone) :- dislikes(carol,apple), sibling(frank,eve).\ntall(carol) :- wet(apple), small(car).\ntall(dave) :- hungry(alice), happy(eve).\nbig(pencil).\nlikes(carol,dave).\nowns(eve,book).\nhungry(dave).\nlikes(george,pencil).\nlikes(frank,bob).\ndislikes(bob,car).\nlikes(bob,alice).\nlikes(george,eve).\nsibling(eve,george).\nsibling(george,frank).\nsibling(george,dave).\nlikes(dave,apple).\nfriend(george,eve).\ndislikes(eve,book).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nIf pencil is big, then bob is happy.\nIf bob is happy, then bob owns pencil.\nIf bob owns pencil, then dave is sad.\nIf dave is sad, then frank is an enemy of carol.\nIf frank is an enemy of carol, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is hungry.\nIf alice is hungry, then dave is a friend of eve.\nIf dave is a friend of eve, then bob is tall.\nIf bob is tall, then it is cold.\nIf it is cold, then dave likes george.\nIf ball is wet and apple is small, then ball is wet.\nIf carol dislikes apple and frank is a sibling of eve, then phone is wet.\nIf apple is wet and car is small, then carol is tall.\nIf alice is hungry and eve is happy, then dave is tall.\n\nAnd the following facts:\npencil is big.\ncarol likes dave.\neve owns book.\ndave is hungry.\ngeorge likes pencil.\nfrank likes bob.\nbob dislikes car.\nbob likes alice.\ngeorge likes eve.\neve is a sibling of george.\ngeorge is a sibling of frank.\ngeorge is a sibling of dave.\ndave likes apple.\ngeorge is a friend of eve.\neve dislikes book.\nbob dislikes pencil.\n\nQUESTION:\nIs frank is an enemy of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,car).",
    "c": "happy(bob) :- big(pencil).\nowns(bob,pencil) :- happy(bob).\nsad(dave) :- owns(bob,pencil).\nenemy(frank,carol) :- sad(dave).\nsibling(dave,alice) :- enemy(frank,carol).\nhungry(alice) :- sibling(dave,alice).\nfriend(dave,eve) :- hungry(alice).\ntall(bob) :- friend(dave,eve).\ncold :- tall(bob).\nlikes(dave,george) :- cold.\nwet(ball) :- wet(ball), small(apple).\nwet(phone) :- dislikes(carol,apple), sibling(frank,eve).\ntall(carol) :- wet(apple), small(car).\ntall(dave) :- hungry(alice), happy(eve).\nbig(pencil).\nlikes(carol,dave).\nowns(eve,book).\nhungry(dave).\nlikes(george,pencil).\nlikes(frank,bob).\ndislikes(bob,car).\nlikes(bob,alice).\nlikes(george,eve).\nsibling(eve,george).\nsibling(george,frank).\nsibling(george,dave).\nlikes(dave,apple).\nfriend(george,eve).\ndislikes(eve,book).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nIf pencil is big, then bob is happy.\nIf bob is happy, then bob owns pencil.\nIf bob owns pencil, then dave is sad.\nIf dave is sad, then frank is an enemy of carol.\nIf frank is an enemy of carol, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is hungry.\nIf alice is hungry, then dave is a friend of eve.\nIf dave is a friend of eve, then bob is tall.\nIf bob is tall, then it is cold.\nIf it is cold, then dave likes george.\nIf ball is wet and apple is small, then ball is wet.\nIf carol dislikes apple and frank is a sibling of eve, then phone is wet.\nIf apple is wet and car is small, then carol is tall.\nIf alice is hungry and eve is happy, then dave is tall.\n\nAnd the following facts:\npencil is big.\ncarol likes dave.\neve owns book.\ndave is hungry.\ngeorge likes pencil.\nfrank likes bob.\nbob dislikes car.\nbob likes alice.\ngeorge likes eve.\neve is a sibling of george.\ngeorge is a sibling of frank.\ngeorge is a sibling of dave.\ndave likes apple.\ngeorge is a friend of eve.\neve dislikes book.\nbob dislikes pencil.\n\nQUESTION:\nIs bob dislikes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,ball).",
    "c": "happy(bob) :- big(pencil).\nowns(bob,pencil) :- happy(bob).\nsad(dave) :- owns(bob,pencil).\nenemy(frank,carol) :- sad(dave).\nsibling(dave,alice) :- enemy(frank,carol).\nhungry(alice) :- sibling(dave,alice).\nfriend(dave,eve) :- hungry(alice).\ntall(bob) :- friend(dave,eve).\ncold :- tall(bob).\nlikes(dave,george) :- cold.\nwet(ball) :- wet(ball), small(apple).\nwet(phone) :- dislikes(carol,apple), sibling(frank,eve).\ntall(carol) :- wet(apple), small(car).\ntall(dave) :- hungry(alice), happy(eve).\nbig(pencil).\nlikes(carol,dave).\nowns(eve,book).\nhungry(dave).\nlikes(george,pencil).\nlikes(frank,bob).\ndislikes(bob,car).\nlikes(bob,alice).\nlikes(george,eve).\nsibling(eve,george).\nsibling(george,frank).\nsibling(george,dave).\nlikes(dave,apple).\nfriend(george,eve).\ndislikes(eve,book).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nIf pencil is big, then bob is happy.\nIf bob is happy, then bob owns pencil.\nIf bob owns pencil, then dave is sad.\nIf dave is sad, then frank is an enemy of carol.\nIf frank is an enemy of carol, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is hungry.\nIf alice is hungry, then dave is a friend of eve.\nIf dave is a friend of eve, then bob is tall.\nIf bob is tall, then it is cold.\nIf it is cold, then dave likes george.\nIf ball is wet and apple is small, then ball is wet.\nIf carol dislikes apple and frank is a sibling of eve, then phone is wet.\nIf apple is wet and car is small, then carol is tall.\nIf alice is hungry and eve is happy, then dave is tall.\n\nAnd the following facts:\npencil is big.\ncarol likes dave.\neve owns book.\ndave is hungry.\ngeorge likes pencil.\nfrank likes bob.\nbob dislikes car.\nbob likes alice.\ngeorge likes eve.\neve is a sibling of george.\ngeorge is a sibling of frank.\ngeorge is a sibling of dave.\ndave likes apple.\ngeorge is a friend of eve.\neve dislikes book.\nbob dislikes pencil.\n\nQUESTION:\nIs frank owns ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "happy(bob) :- big(pencil).\nowns(bob,pencil) :- happy(bob).\nsad(dave) :- owns(bob,pencil).\nenemy(frank,carol) :- sad(dave).\nsibling(dave,alice) :- enemy(frank,carol).\nhungry(alice) :- sibling(dave,alice).\nfriend(dave,eve) :- hungry(alice).\ntall(bob) :- friend(dave,eve).\ncold :- tall(bob).\nlikes(dave,george) :- cold.\nwet(ball) :- wet(ball), small(apple).\nwet(phone) :- dislikes(carol,apple), sibling(frank,eve).\ntall(carol) :- wet(apple), small(car).\ntall(dave) :- hungry(alice), happy(eve).\nbig(pencil).\nlikes(carol,dave).\nowns(eve,book).\nhungry(dave).\nlikes(george,pencil).\nlikes(frank,bob).\ndislikes(bob,car).\nlikes(bob,alice).\nlikes(george,eve).\nsibling(eve,george).\nsibling(george,frank).\nsibling(george,dave).\nlikes(dave,apple).\nfriend(george,eve).\ndislikes(eve,book).\ndislikes(bob,pencil).",
    "natural language": "You are given the following information:\nIf pencil is big, then bob is happy.\nIf bob is happy, then bob owns pencil.\nIf bob owns pencil, then dave is sad.\nIf dave is sad, then frank is an enemy of carol.\nIf frank is an enemy of carol, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is hungry.\nIf alice is hungry, then dave is a friend of eve.\nIf dave is a friend of eve, then bob is tall.\nIf bob is tall, then it is cold.\nIf it is cold, then dave likes george.\nIf ball is wet and apple is small, then ball is wet.\nIf carol dislikes apple and frank is a sibling of eve, then phone is wet.\nIf apple is wet and car is small, then carol is tall.\nIf alice is hungry and eve is happy, then dave is tall.\n\nAnd the following facts:\npencil is big.\ncarol likes dave.\neve owns book.\ndave is hungry.\ngeorge likes pencil.\nfrank likes bob.\nbob dislikes car.\nbob likes alice.\ngeorge likes eve.\neve is a sibling of george.\ngeorge is a sibling of frank.\ngeorge is a sibling of dave.\ndave likes apple.\ngeorge is a friend of eve.\neve dislikes book.\nbob dislikes pencil.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(pencil).",
    "c": "happy(bob) :- big(pencil).\nowns(bob,pencil) :- happy(bob).\nsad(dave) :- owns(bob,pencil).\nenemy(frank,carol) :- sad(dave).\nsibling(dave,alice) :- enemy(frank,carol).\nhungry(alice) :- sibling(dave,alice).\nfriend(dave,eve) :- hungry(alice).\ntall(bob) :- friend(dave,eve).\ncold :- tall(bob).\nlikes(dave,george) :- cold.\nwet(ball) :- wet(ball), small(apple).\nwet(phone) :- dislikes(carol,apple), sibling(frank,eve).\ntall(carol) :- wet(apple), small(car).\ntall(dave) :- hungry(alice), happy(eve).\nlikes(carol,dave).\nowns(eve,book).\nhungry(dave).\nlikes(george,pencil).\nlikes(frank,bob).\ndislikes(bob,car).\nlikes(bob,alice).\nlikes(george,eve).\nsibling(eve,george).\nsibling(george,frank).\nsibling(george,dave).\nlikes(dave,apple).\nfriend(george,eve).\ndislikes(eve,book).\ndislikes(bob,pencil).",
    "natural language": "You are given the following rules:\nIf pencil is big, then bob is happy.\nIf bob is happy, then bob owns pencil.\nIf bob owns pencil, then dave is sad.\nIf dave is sad, then frank is an enemy of carol.\nIf frank is an enemy of carol, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is hungry.\nIf alice is hungry, then dave is a friend of eve.\nIf dave is a friend of eve, then bob is tall.\nIf bob is tall, then it is cold.\nIf it is cold, then dave likes george.\nIf ball is wet and apple is small, then ball is wet.\nIf carol dislikes apple and frank is a sibling of eve, then phone is wet.\nIf apple is wet and car is small, then carol is tall.\nIf alice is hungry and eve is happy, then dave is tall.\n\nAnd the following facts:\npencil is big.\ncarol likes dave.\neve owns book.\ndave is hungry.\ngeorge likes pencil.\nfrank likes bob.\nbob dislikes car.\nbob likes alice.\ngeorge likes eve.\neve is a sibling of george.\ngeorge is a sibling of frank.\ngeorge is a sibling of dave.\ndave likes apple.\ngeorge is a friend of eve.\neve dislikes book.\nbob dislikes pencil.\n\nOBSERVATION: dave likes george is true.\n\nQUESTION:\nCould pencil is big be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,pencil).",
    "c": "happy(bob) :- big(pencil).\nowns(bob,pencil) :- happy(bob).\nsad(dave) :- owns(bob,pencil).\nenemy(frank,carol) :- sad(dave).\nsibling(dave,alice) :- enemy(frank,carol).\nhungry(alice) :- sibling(dave,alice).\nfriend(dave,eve) :- hungry(alice).\ntall(bob) :- friend(dave,eve).\ncold :- tall(bob).\nlikes(dave,george) :- cold.\nwet(ball) :- wet(ball), small(apple).\nwet(phone) :- dislikes(carol,apple), sibling(frank,eve).\ntall(carol) :- wet(apple), small(car).\ntall(dave) :- hungry(alice), happy(eve).\nbig(pencil).\nlikes(carol,dave).\nowns(eve,book).\nhungry(dave).\nlikes(george,pencil).\nlikes(frank,bob).\ndislikes(bob,car).\nlikes(bob,alice).\nlikes(george,eve).\nsibling(eve,george).\nsibling(george,frank).\nsibling(george,dave).\nlikes(dave,apple).\nfriend(george,eve).\ndislikes(eve,book).",
    "natural language": "You are given the following rules:\nIf pencil is big, then bob is happy.\nIf bob is happy, then bob owns pencil.\nIf bob owns pencil, then dave is sad.\nIf dave is sad, then frank is an enemy of carol.\nIf frank is an enemy of carol, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is hungry.\nIf alice is hungry, then dave is a friend of eve.\nIf dave is a friend of eve, then bob is tall.\nIf bob is tall, then it is cold.\nIf it is cold, then dave likes george.\nIf ball is wet and apple is small, then ball is wet.\nIf carol dislikes apple and frank is a sibling of eve, then phone is wet.\nIf apple is wet and car is small, then carol is tall.\nIf alice is hungry and eve is happy, then dave is tall.\n\nAnd the following facts:\npencil is big.\ncarol likes dave.\neve owns book.\ndave is hungry.\ngeorge likes pencil.\nfrank likes bob.\nbob dislikes car.\nbob likes alice.\ngeorge likes eve.\neve is a sibling of george.\ngeorge is a sibling of frank.\ngeorge is a sibling of dave.\ndave likes apple.\ngeorge is a friend of eve.\neve dislikes book.\nbob dislikes pencil.\n\nOBSERVATION: dave likes george is true.\n\nQUESTION:\nCould bob dislikes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "happy(bob) :- big(pencil).\nowns(bob,pencil) :- happy(bob).\nsad(dave) :- owns(bob,pencil).\nenemy(frank,carol) :- sad(dave).\nsibling(dave,alice) :- enemy(frank,carol).\nhungry(alice) :- sibling(dave,alice).\nfriend(dave,eve) :- hungry(alice).\ntall(bob) :- friend(dave,eve).\ncold :- tall(bob).\nlikes(dave,george) :- cold.\nwet(ball) :- wet(ball), small(apple).\nwet(phone) :- dislikes(carol,apple), sibling(frank,eve).\ntall(carol) :- wet(apple), small(car).\ntall(dave) :- hungry(alice), happy(eve).\nbig(pencil).\nlikes(carol,dave).\nowns(eve,book).\nhungry(dave).\nlikes(george,pencil).\nlikes(frank,bob).\ndislikes(bob,car).\nlikes(bob,alice).\nlikes(george,eve).\nsibling(eve,george).\nsibling(george,frank).\nsibling(george,dave).\nfriend(george,eve).\ndislikes(eve,book).\ndislikes(bob,pencil).",
    "natural language": "You are given the following rules:\nIf pencil is big, then bob is happy.\nIf bob is happy, then bob owns pencil.\nIf bob owns pencil, then dave is sad.\nIf dave is sad, then frank is an enemy of carol.\nIf frank is an enemy of carol, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is hungry.\nIf alice is hungry, then dave is a friend of eve.\nIf dave is a friend of eve, then bob is tall.\nIf bob is tall, then it is cold.\nIf it is cold, then dave likes george.\nIf ball is wet and apple is small, then ball is wet.\nIf carol dislikes apple and frank is a sibling of eve, then phone is wet.\nIf apple is wet and car is small, then carol is tall.\nIf alice is hungry and eve is happy, then dave is tall.\n\nAnd the following facts:\npencil is big.\ncarol likes dave.\neve owns book.\ndave is hungry.\ngeorge likes pencil.\nfrank likes bob.\nbob dislikes car.\nbob likes alice.\ngeorge likes eve.\neve is a sibling of george.\ngeorge is a sibling of frank.\ngeorge is a sibling of dave.\ndave likes apple.\ngeorge is a friend of eve.\neve dislikes book.\nbob dislikes pencil.\n\nOBSERVATION: dave likes george is true.\n\nQUESTION:\nCould dave likes apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,george).",
    "c": "tall(bob) :- parent(frank,alice).\nowns(george,phone) :- tall(bob).\nwet(book) :- friend(carol,frank), wet(phone).\nwet(apple) :- tall(bob), wet(car).\ntall(george) :- wet(book), cold.\nwet(apple) :- cold, wet(phone), wet(pencil).\ntall(frank) :- likes(bob,apple).\ntall(bob) :- happy(george), tall(dave).\nenemy(dave,alice) :- sad(eve), sad(frank).\ndislikes(carol,phone) :- sibling(bob,carol).\ndislikes(dave,bob) :- dislikes(eve,george), owns(dave,book).\nenemy(george,carol) :- hungry(alice), small(car), owns(alice,apple).\ncold :- likes(eve,apple), friend(eve,george), cold.\ncold :- sibling(bob,carol), hungry(bob), small(book).\nsibling(george,george) :- sibling(alice,frank), hot, happy(eve).\nsibling(eve,dave) :- happy(frank).\nsunny :- likes(eve,phone).\nhungry(carol) :- hungry(george), big(ball), big(pencil).\nsad(frank) :- friend(dave,frank), sunny.\nparent(frank,alice).\nenemy(george,frank).\nsibling(frank,carol).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf frank is a parent of alice, then bob is tall.\nIf bob is tall, then george owns phone.\nIf carol is a friend of frank and phone is wet, then book is wet.\nIf bob is tall and car is wet, then apple is wet.\nIf book is wet and it is cold, then george is tall.\nIf it is cold and phone is wet and pencil is wet, then apple is wet.\nIf bob likes apple, then frank is tall.\nIf george is happy and dave is tall, then bob is tall.\nIf eve is sad and frank is sad, then dave is an enemy of alice.\nIf bob is a sibling of carol, then carol dislikes phone.\nIf eve dislikes george and dave owns book, then dave dislikes bob.\nIf alice is hungry and car is small and alice owns apple, then george is an enemy of carol.\nIf eve likes apple and eve is a friend of george and it is cold, then it is cold.\nIf bob is a sibling of carol and bob is hungry and book is small, then it is cold.\nIf alice is a sibling of frank and it is hot and eve is happy, then george is a sibling of george.\nIf frank is happy, then eve is a sibling of dave.\nIf eve likes phone, then it is sunny.\nIf george is hungry and ball is big and pencil is big, then carol is hungry.\nIf dave is a friend of frank and it is sunny, then frank is sad.\n\nAnd the following facts:\nfrank is a parent of alice.\ngeorge is an enemy of frank.\nfrank is a sibling of carol.\nalice is an enemy of george.\n\nQUESTION:\nIs alice is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,phone).",
    "c": "tall(bob) :- parent(frank,alice).\nowns(george,phone) :- tall(bob).\nwet(book) :- friend(carol,frank), wet(phone).\nwet(apple) :- tall(bob), wet(car).\ntall(george) :- wet(book), cold.\nwet(apple) :- cold, wet(phone), wet(pencil).\ntall(frank) :- likes(bob,apple).\ntall(bob) :- happy(george), tall(dave).\nenemy(dave,alice) :- sad(eve), sad(frank).\ndislikes(carol,phone) :- sibling(bob,carol).\ndislikes(dave,bob) :- dislikes(eve,george), owns(dave,book).\nenemy(george,carol) :- hungry(alice), small(car), owns(alice,apple).\ncold :- likes(eve,apple), friend(eve,george), cold.\ncold :- sibling(bob,carol), hungry(bob), small(book).\nsibling(george,george) :- sibling(alice,frank), hot, happy(eve).\nsibling(eve,dave) :- happy(frank).\nsunny :- likes(eve,phone).\nhungry(carol) :- hungry(george), big(ball), big(pencil).\nsad(frank) :- friend(dave,frank), sunny.\nparent(frank,alice).\nenemy(george,frank).\nsibling(frank,carol).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf frank is a parent of alice, then bob is tall.\nIf bob is tall, then george owns phone.\nIf carol is a friend of frank and phone is wet, then book is wet.\nIf bob is tall and car is wet, then apple is wet.\nIf book is wet and it is cold, then george is tall.\nIf it is cold and phone is wet and pencil is wet, then apple is wet.\nIf bob likes apple, then frank is tall.\nIf george is happy and dave is tall, then bob is tall.\nIf eve is sad and frank is sad, then dave is an enemy of alice.\nIf bob is a sibling of carol, then carol dislikes phone.\nIf eve dislikes george and dave owns book, then dave dislikes bob.\nIf alice is hungry and car is small and alice owns apple, then george is an enemy of carol.\nIf eve likes apple and eve is a friend of george and it is cold, then it is cold.\nIf bob is a sibling of carol and bob is hungry and book is small, then it is cold.\nIf alice is a sibling of frank and it is hot and eve is happy, then george is a sibling of george.\nIf frank is happy, then eve is a sibling of dave.\nIf eve likes phone, then it is sunny.\nIf george is hungry and ball is big and pencil is big, then carol is hungry.\nIf dave is a friend of frank and it is sunny, then frank is sad.\n\nAnd the following facts:\nfrank is a parent of alice.\ngeorge is an enemy of frank.\nfrank is a sibling of carol.\nalice is an enemy of george.\n\nQUESTION:\nIs george owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,frank).",
    "c": "tall(bob) :- parent(frank,alice).\nowns(george,phone) :- tall(bob).\nwet(book) :- friend(carol,frank), wet(phone).\nwet(apple) :- tall(bob), wet(car).\ntall(george) :- wet(book), cold.\nwet(apple) :- cold, wet(phone), wet(pencil).\ntall(frank) :- likes(bob,apple).\ntall(bob) :- happy(george), tall(dave).\nenemy(dave,alice) :- sad(eve), sad(frank).\ndislikes(carol,phone) :- sibling(bob,carol).\ndislikes(dave,bob) :- dislikes(eve,george), owns(dave,book).\nenemy(george,carol) :- hungry(alice), small(car), owns(alice,apple).\ncold :- likes(eve,apple), friend(eve,george), cold.\ncold :- sibling(bob,carol), hungry(bob), small(book).\nsibling(george,george) :- sibling(alice,frank), hot, happy(eve).\nsibling(eve,dave) :- happy(frank).\nsunny :- likes(eve,phone).\nhungry(carol) :- hungry(george), big(ball), big(pencil).\nsad(frank) :- friend(dave,frank), sunny.\nparent(frank,alice).\nenemy(george,frank).\nsibling(frank,carol).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf frank is a parent of alice, then bob is tall.\nIf bob is tall, then george owns phone.\nIf carol is a friend of frank and phone is wet, then book is wet.\nIf bob is tall and car is wet, then apple is wet.\nIf book is wet and it is cold, then george is tall.\nIf it is cold and phone is wet and pencil is wet, then apple is wet.\nIf bob likes apple, then frank is tall.\nIf george is happy and dave is tall, then bob is tall.\nIf eve is sad and frank is sad, then dave is an enemy of alice.\nIf bob is a sibling of carol, then carol dislikes phone.\nIf eve dislikes george and dave owns book, then dave dislikes bob.\nIf alice is hungry and car is small and alice owns apple, then george is an enemy of carol.\nIf eve likes apple and eve is a friend of george and it is cold, then it is cold.\nIf bob is a sibling of carol and bob is hungry and book is small, then it is cold.\nIf alice is a sibling of frank and it is hot and eve is happy, then george is a sibling of george.\nIf frank is happy, then eve is a sibling of dave.\nIf eve likes phone, then it is sunny.\nIf george is hungry and ball is big and pencil is big, then carol is hungry.\nIf dave is a friend of frank and it is sunny, then frank is sad.\n\nAnd the following facts:\nfrank is a parent of alice.\ngeorge is an enemy of frank.\nfrank is a sibling of carol.\nalice is an enemy of george.\n\nQUESTION:\nIs george is an enemy of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,bob).",
    "c": "tall(bob) :- parent(frank,alice).\nowns(george,phone) :- tall(bob).\nwet(book) :- friend(carol,frank), wet(phone).\nwet(apple) :- tall(bob), wet(car).\ntall(george) :- wet(book), cold.\nwet(apple) :- cold, wet(phone), wet(pencil).\ntall(frank) :- likes(bob,apple).\ntall(bob) :- happy(george), tall(dave).\nenemy(dave,alice) :- sad(eve), sad(frank).\ndislikes(carol,phone) :- sibling(bob,carol).\ndislikes(dave,bob) :- dislikes(eve,george), owns(dave,book).\nenemy(george,carol) :- hungry(alice), small(car), owns(alice,apple).\ncold :- likes(eve,apple), friend(eve,george), cold.\ncold :- sibling(bob,carol), hungry(bob), small(book).\nsibling(george,george) :- sibling(alice,frank), hot, happy(eve).\nsibling(eve,dave) :- happy(frank).\nsunny :- likes(eve,phone).\nhungry(carol) :- hungry(george), big(ball), big(pencil).\nsad(frank) :- friend(dave,frank), sunny.\nparent(frank,alice).\nenemy(george,frank).\nsibling(frank,carol).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf frank is a parent of alice, then bob is tall.\nIf bob is tall, then george owns phone.\nIf carol is a friend of frank and phone is wet, then book is wet.\nIf bob is tall and car is wet, then apple is wet.\nIf book is wet and it is cold, then george is tall.\nIf it is cold and phone is wet and pencil is wet, then apple is wet.\nIf bob likes apple, then frank is tall.\nIf george is happy and dave is tall, then bob is tall.\nIf eve is sad and frank is sad, then dave is an enemy of alice.\nIf bob is a sibling of carol, then carol dislikes phone.\nIf eve dislikes george and dave owns book, then dave dislikes bob.\nIf alice is hungry and car is small and alice owns apple, then george is an enemy of carol.\nIf eve likes apple and eve is a friend of george and it is cold, then it is cold.\nIf bob is a sibling of carol and bob is hungry and book is small, then it is cold.\nIf alice is a sibling of frank and it is hot and eve is happy, then george is a sibling of george.\nIf frank is happy, then eve is a sibling of dave.\nIf eve likes phone, then it is sunny.\nIf george is hungry and ball is big and pencil is big, then carol is hungry.\nIf dave is a friend of frank and it is sunny, then frank is sad.\n\nAnd the following facts:\nfrank is a parent of alice.\ngeorge is an enemy of frank.\nfrank is a sibling of carol.\nalice is an enemy of george.\n\nQUESTION:\nIs carol dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,alice).",
    "c": "tall(bob) :- parent(frank,alice).\nowns(george,phone) :- tall(bob).\nwet(book) :- friend(carol,frank), wet(phone).\nwet(apple) :- tall(bob), wet(car).\ntall(george) :- wet(book), cold.\nwet(apple) :- cold, wet(phone), wet(pencil).\ntall(frank) :- likes(bob,apple).\ntall(bob) :- happy(george), tall(dave).\nenemy(dave,alice) :- sad(eve), sad(frank).\ndislikes(carol,phone) :- sibling(bob,carol).\ndislikes(dave,bob) :- dislikes(eve,george), owns(dave,book).\nenemy(george,carol) :- hungry(alice), small(car), owns(alice,apple).\ncold :- likes(eve,apple), friend(eve,george), cold.\ncold :- sibling(bob,carol), hungry(bob), small(book).\nsibling(george,george) :- sibling(alice,frank), hot, happy(eve).\nsibling(eve,dave) :- happy(frank).\nsunny :- likes(eve,phone).\nhungry(carol) :- hungry(george), big(ball), big(pencil).\nsad(frank) :- friend(dave,frank), sunny.\nparent(frank,alice).\nenemy(george,frank).\nsibling(frank,carol).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf frank is a parent of alice, then bob is tall.\nIf bob is tall, then george owns phone.\nIf carol is a friend of frank and phone is wet, then book is wet.\nIf bob is tall and car is wet, then apple is wet.\nIf book is wet and it is cold, then george is tall.\nIf it is cold and phone is wet and pencil is wet, then apple is wet.\nIf bob likes apple, then frank is tall.\nIf george is happy and dave is tall, then bob is tall.\nIf eve is sad and frank is sad, then dave is an enemy of alice.\nIf bob is a sibling of carol, then carol dislikes phone.\nIf eve dislikes george and dave owns book, then dave dislikes bob.\nIf alice is hungry and car is small and alice owns apple, then george is an enemy of carol.\nIf eve likes apple and eve is a friend of george and it is cold, then it is cold.\nIf bob is a sibling of carol and bob is hungry and book is small, then it is cold.\nIf alice is a sibling of frank and it is hot and eve is happy, then george is a sibling of george.\nIf frank is happy, then eve is a sibling of dave.\nIf eve likes phone, then it is sunny.\nIf george is hungry and ball is big and pencil is big, then carol is hungry.\nIf dave is a friend of frank and it is sunny, then frank is sad.\n\nAnd the following facts:\nfrank is a parent of alice.\ngeorge is an enemy of frank.\nfrank is a sibling of carol.\nalice is an enemy of george.\n\nQUESTION:\nIs eve is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "tall(bob) :- parent(frank,alice).\nowns(george,phone) :- tall(bob).\nwet(book) :- friend(carol,frank), wet(phone).\nwet(apple) :- tall(bob), wet(car).\ntall(george) :- wet(book), cold.\nwet(apple) :- cold, wet(phone), wet(pencil).\ntall(frank) :- likes(bob,apple).\ntall(bob) :- happy(george), tall(dave).\nenemy(dave,alice) :- sad(eve), sad(frank).\ndislikes(carol,phone) :- sibling(bob,carol).\ndislikes(dave,bob) :- dislikes(eve,george), owns(dave,book).\nenemy(george,carol) :- hungry(alice), small(car), owns(alice,apple).\ncold :- likes(eve,apple), friend(eve,george), cold.\ncold :- sibling(bob,carol), hungry(bob), small(book).\nsibling(george,george) :- sibling(alice,frank), hot, happy(eve).\nsibling(eve,dave) :- happy(frank).\nsunny :- likes(eve,phone).\nhungry(carol) :- hungry(george), big(ball), big(pencil).\nsad(frank) :- friend(dave,frank), sunny.\nenemy(george,frank).\nsibling(frank,carol).\nenemy(alice,george).",
    "natural language": "You are given the following rules:\nIf frank is a parent of alice, then bob is tall.\nIf bob is tall, then george owns phone.\nIf carol is a friend of frank and phone is wet, then book is wet.\nIf bob is tall and car is wet, then apple is wet.\nIf book is wet and it is cold, then george is tall.\nIf it is cold and phone is wet and pencil is wet, then apple is wet.\nIf bob likes apple, then frank is tall.\nIf george is happy and dave is tall, then bob is tall.\nIf eve is sad and frank is sad, then dave is an enemy of alice.\nIf bob is a sibling of carol, then carol dislikes phone.\nIf eve dislikes george and dave owns book, then dave dislikes bob.\nIf alice is hungry and car is small and alice owns apple, then george is an enemy of carol.\nIf eve likes apple and eve is a friend of george and it is cold, then it is cold.\nIf bob is a sibling of carol and bob is hungry and book is small, then it is cold.\nIf alice is a sibling of frank and it is hot and eve is happy, then george is a sibling of george.\nIf frank is happy, then eve is a sibling of dave.\nIf eve likes phone, then it is sunny.\nIf george is hungry and ball is big and pencil is big, then carol is hungry.\nIf dave is a friend of frank and it is sunny, then frank is sad.\n\nAnd the following facts:\nfrank is a parent of alice.\ngeorge is an enemy of frank.\nfrank is a sibling of carol.\nalice is an enemy of george.\n\nOBSERVATION: george owns phone is true.\n\nQUESTION:\nCould frank is a parent of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(george,frank).",
    "c": "tall(bob) :- parent(frank,alice).\nowns(george,phone) :- tall(bob).\nwet(book) :- friend(carol,frank), wet(phone).\nwet(apple) :- tall(bob), wet(car).\ntall(george) :- wet(book), cold.\nwet(apple) :- cold, wet(phone), wet(pencil).\ntall(frank) :- likes(bob,apple).\ntall(bob) :- happy(george), tall(dave).\nenemy(dave,alice) :- sad(eve), sad(frank).\ndislikes(carol,phone) :- sibling(bob,carol).\ndislikes(dave,bob) :- dislikes(eve,george), owns(dave,book).\nenemy(george,carol) :- hungry(alice), small(car), owns(alice,apple).\ncold :- likes(eve,apple), friend(eve,george), cold.\ncold :- sibling(bob,carol), hungry(bob), small(book).\nsibling(george,george) :- sibling(alice,frank), hot, happy(eve).\nsibling(eve,dave) :- happy(frank).\nsunny :- likes(eve,phone).\nhungry(carol) :- hungry(george), big(ball), big(pencil).\nsad(frank) :- friend(dave,frank), sunny.\nparent(frank,alice).\nsibling(frank,carol).\nenemy(alice,george).",
    "natural language": "You are given the following rules:\nIf frank is a parent of alice, then bob is tall.\nIf bob is tall, then george owns phone.\nIf carol is a friend of frank and phone is wet, then book is wet.\nIf bob is tall and car is wet, then apple is wet.\nIf book is wet and it is cold, then george is tall.\nIf it is cold and phone is wet and pencil is wet, then apple is wet.\nIf bob likes apple, then frank is tall.\nIf george is happy and dave is tall, then bob is tall.\nIf eve is sad and frank is sad, then dave is an enemy of alice.\nIf bob is a sibling of carol, then carol dislikes phone.\nIf eve dislikes george and dave owns book, then dave dislikes bob.\nIf alice is hungry and car is small and alice owns apple, then george is an enemy of carol.\nIf eve likes apple and eve is a friend of george and it is cold, then it is cold.\nIf bob is a sibling of carol and bob is hungry and book is small, then it is cold.\nIf alice is a sibling of frank and it is hot and eve is happy, then george is a sibling of george.\nIf frank is happy, then eve is a sibling of dave.\nIf eve likes phone, then it is sunny.\nIf george is hungry and ball is big and pencil is big, then carol is hungry.\nIf dave is a friend of frank and it is sunny, then frank is sad.\n\nAnd the following facts:\nfrank is a parent of alice.\ngeorge is an enemy of frank.\nfrank is a sibling of carol.\nalice is an enemy of george.\n\nOBSERVATION: george owns phone is true.\n\nQUESTION:\nCould george is an enemy of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(alice,george).",
    "c": "tall(bob) :- parent(frank,alice).\nowns(george,phone) :- tall(bob).\nwet(book) :- friend(carol,frank), wet(phone).\nwet(apple) :- tall(bob), wet(car).\ntall(george) :- wet(book), cold.\nwet(apple) :- cold, wet(phone), wet(pencil).\ntall(frank) :- likes(bob,apple).\ntall(bob) :- happy(george), tall(dave).\nenemy(dave,alice) :- sad(eve), sad(frank).\ndislikes(carol,phone) :- sibling(bob,carol).\ndislikes(dave,bob) :- dislikes(eve,george), owns(dave,book).\nenemy(george,carol) :- hungry(alice), small(car), owns(alice,apple).\ncold :- likes(eve,apple), friend(eve,george), cold.\ncold :- sibling(bob,carol), hungry(bob), small(book).\nsibling(george,george) :- sibling(alice,frank), hot, happy(eve).\nsibling(eve,dave) :- happy(frank).\nsunny :- likes(eve,phone).\nhungry(carol) :- hungry(george), big(ball), big(pencil).\nsad(frank) :- friend(dave,frank), sunny.\nparent(frank,alice).\nenemy(george,frank).\nsibling(frank,carol).",
    "natural language": "You are given the following rules:\nIf frank is a parent of alice, then bob is tall.\nIf bob is tall, then george owns phone.\nIf carol is a friend of frank and phone is wet, then book is wet.\nIf bob is tall and car is wet, then apple is wet.\nIf book is wet and it is cold, then george is tall.\nIf it is cold and phone is wet and pencil is wet, then apple is wet.\nIf bob likes apple, then frank is tall.\nIf george is happy and dave is tall, then bob is tall.\nIf eve is sad and frank is sad, then dave is an enemy of alice.\nIf bob is a sibling of carol, then carol dislikes phone.\nIf eve dislikes george and dave owns book, then dave dislikes bob.\nIf alice is hungry and car is small and alice owns apple, then george is an enemy of carol.\nIf eve likes apple and eve is a friend of george and it is cold, then it is cold.\nIf bob is a sibling of carol and bob is hungry and book is small, then it is cold.\nIf alice is a sibling of frank and it is hot and eve is happy, then george is a sibling of george.\nIf frank is happy, then eve is a sibling of dave.\nIf eve likes phone, then it is sunny.\nIf george is hungry and ball is big and pencil is big, then carol is hungry.\nIf dave is a friend of frank and it is sunny, then frank is sad.\n\nAnd the following facts:\nfrank is a parent of alice.\ngeorge is an enemy of frank.\nfrank is a sibling of carol.\nalice is an enemy of george.\n\nOBSERVATION: george owns phone is true.\n\nQUESTION:\nCould alice is an enemy of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,pencil).",
    "c": "enemy(frank,eve) :- wet(pencil).\nsad(bob) :- enemy(frank,eve).\ntall(carol) :- owns(dave,car), tall(frank).\ntall(dave) :- friend(alice,carol), tall(george).\nowns(carol,ball) :- big(car).\nbig(book) :- big(pencil), likes(alice,book).\nbig(book) :- likes(george,eve).\nowns(george,pencil) :- tall(eve), enemy(carol,carol).\nhungry(george) :- tall(dave), friend(carol,bob).\nfriend(eve,frank) :- dislikes(george,eve), small(car).\nbig(pencil) :- tall(bob), sunny.\nhungry(carol) :- enemy(eve,dave), cold.\nfriend(bob,frank) :- happy(george), happy(bob).\ncold :- hot, wet(apple), sunny.\nsad(alice) :- parent(dave,alice), dislikes(frank,george), wet(ball).\nfriend(dave,frank) :- big(book), friend(george,frank).\nhungry(dave) :- happy(eve).\nsibling(carol,george) :- parent(carol,frank).\nsibling(george,bob) :- cold.\nwet(pencil).\nparent(carol,alice).\nowns(dave,pencil).\nsibling(eve,bob).",
    "natural language": "You are given the following information:\nIf pencil is wet, then frank is an enemy of eve.\nIf frank is an enemy of eve, then bob is sad.\nIf dave owns car and frank is tall, then carol is tall.\nIf alice is a friend of carol and george is tall, then dave is tall.\nIf car is big, then carol owns ball.\nIf pencil is big and alice likes book, then book is big.\nIf george likes eve, then book is big.\nIf eve is tall and carol is an enemy of carol, then george owns pencil.\nIf dave is tall and carol is a friend of bob, then george is hungry.\nIf george dislikes eve and car is small, then eve is a friend of frank.\nIf bob is tall and it is sunny, then pencil is big.\nIf eve is an enemy of dave and it is cold, then carol is hungry.\nIf george is happy and bob is happy, then bob is a friend of frank.\nIf it is hot and apple is wet and it is sunny, then it is cold.\nIf dave is a parent of alice and frank dislikes george and ball is wet, then alice is sad.\nIf book is big and george is a friend of frank, then dave is a friend of frank.\nIf eve is happy, then dave is hungry.\nIf carol is a parent of frank, then carol is a sibling of george.\nIf it is cold, then george is a sibling of bob.\n\nAnd the following facts:\npencil is wet.\ncarol is a parent of alice.\ndave owns pencil.\neve is a sibling of bob.\n\nQUESTION:\nIs dave owns pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,eve).",
    "c": "enemy(frank,eve) :- wet(pencil).\nsad(bob) :- enemy(frank,eve).\ntall(carol) :- owns(dave,car), tall(frank).\ntall(dave) :- friend(alice,carol), tall(george).\nowns(carol,ball) :- big(car).\nbig(book) :- big(pencil), likes(alice,book).\nbig(book) :- likes(george,eve).\nowns(george,pencil) :- tall(eve), enemy(carol,carol).\nhungry(george) :- tall(dave), friend(carol,bob).\nfriend(eve,frank) :- dislikes(george,eve), small(car).\nbig(pencil) :- tall(bob), sunny.\nhungry(carol) :- enemy(eve,dave), cold.\nfriend(bob,frank) :- happy(george), happy(bob).\ncold :- hot, wet(apple), sunny.\nsad(alice) :- parent(dave,alice), dislikes(frank,george), wet(ball).\nfriend(dave,frank) :- big(book), friend(george,frank).\nhungry(dave) :- happy(eve).\nsibling(carol,george) :- parent(carol,frank).\nsibling(george,bob) :- cold.\nwet(pencil).\nparent(carol,alice).\nowns(dave,pencil).\nsibling(eve,bob).",
    "natural language": "You are given the following information:\nIf pencil is wet, then frank is an enemy of eve.\nIf frank is an enemy of eve, then bob is sad.\nIf dave owns car and frank is tall, then carol is tall.\nIf alice is a friend of carol and george is tall, then dave is tall.\nIf car is big, then carol owns ball.\nIf pencil is big and alice likes book, then book is big.\nIf george likes eve, then book is big.\nIf eve is tall and carol is an enemy of carol, then george owns pencil.\nIf dave is tall and carol is a friend of bob, then george is hungry.\nIf george dislikes eve and car is small, then eve is a friend of frank.\nIf bob is tall and it is sunny, then pencil is big.\nIf eve is an enemy of dave and it is cold, then carol is hungry.\nIf george is happy and bob is happy, then bob is a friend of frank.\nIf it is hot and apple is wet and it is sunny, then it is cold.\nIf dave is a parent of alice and frank dislikes george and ball is wet, then alice is sad.\nIf book is big and george is a friend of frank, then dave is a friend of frank.\nIf eve is happy, then dave is hungry.\nIf carol is a parent of frank, then carol is a sibling of george.\nIf it is cold, then george is a sibling of bob.\n\nAnd the following facts:\npencil is wet.\ncarol is a parent of alice.\ndave owns pencil.\neve is a sibling of bob.\n\nQUESTION:\nIs frank is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "enemy(frank,eve) :- wet(pencil).\nsad(bob) :- enemy(frank,eve).\ntall(carol) :- owns(dave,car), tall(frank).\ntall(dave) :- friend(alice,carol), tall(george).\nowns(carol,ball) :- big(car).\nbig(book) :- big(pencil), likes(alice,book).\nbig(book) :- likes(george,eve).\nowns(george,pencil) :- tall(eve), enemy(carol,carol).\nhungry(george) :- tall(dave), friend(carol,bob).\nfriend(eve,frank) :- dislikes(george,eve), small(car).\nbig(pencil) :- tall(bob), sunny.\nhungry(carol) :- enemy(eve,dave), cold.\nfriend(bob,frank) :- happy(george), happy(bob).\ncold :- hot, wet(apple), sunny.\nsad(alice) :- parent(dave,alice), dislikes(frank,george), wet(ball).\nfriend(dave,frank) :- big(book), friend(george,frank).\nhungry(dave) :- happy(eve).\nsibling(carol,george) :- parent(carol,frank).\nsibling(george,bob) :- cold.\nwet(pencil).\nparent(carol,alice).\nowns(dave,pencil).\nsibling(eve,bob).",
    "natural language": "You are given the following information:\nIf pencil is wet, then frank is an enemy of eve.\nIf frank is an enemy of eve, then bob is sad.\nIf dave owns car and frank is tall, then carol is tall.\nIf alice is a friend of carol and george is tall, then dave is tall.\nIf car is big, then carol owns ball.\nIf pencil is big and alice likes book, then book is big.\nIf george likes eve, then book is big.\nIf eve is tall and carol is an enemy of carol, then george owns pencil.\nIf dave is tall and carol is a friend of bob, then george is hungry.\nIf george dislikes eve and car is small, then eve is a friend of frank.\nIf bob is tall and it is sunny, then pencil is big.\nIf eve is an enemy of dave and it is cold, then carol is hungry.\nIf george is happy and bob is happy, then bob is a friend of frank.\nIf it is hot and apple is wet and it is sunny, then it is cold.\nIf dave is a parent of alice and frank dislikes george and ball is wet, then alice is sad.\nIf book is big and george is a friend of frank, then dave is a friend of frank.\nIf eve is happy, then dave is hungry.\nIf carol is a parent of frank, then carol is a sibling of george.\nIf it is cold, then george is a sibling of bob.\n\nAnd the following facts:\npencil is wet.\ncarol is a parent of alice.\ndave owns pencil.\neve is a sibling of bob.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,bob).",
    "c": "enemy(frank,eve) :- wet(pencil).\nsad(bob) :- enemy(frank,eve).\ntall(carol) :- owns(dave,car), tall(frank).\ntall(dave) :- friend(alice,carol), tall(george).\nowns(carol,ball) :- big(car).\nbig(book) :- big(pencil), likes(alice,book).\nbig(book) :- likes(george,eve).\nowns(george,pencil) :- tall(eve), enemy(carol,carol).\nhungry(george) :- tall(dave), friend(carol,bob).\nfriend(eve,frank) :- dislikes(george,eve), small(car).\nbig(pencil) :- tall(bob), sunny.\nhungry(carol) :- enemy(eve,dave), cold.\nfriend(bob,frank) :- happy(george), happy(bob).\ncold :- hot, wet(apple), sunny.\nsad(alice) :- parent(dave,alice), dislikes(frank,george), wet(ball).\nfriend(dave,frank) :- big(book), friend(george,frank).\nhungry(dave) :- happy(eve).\nsibling(carol,george) :- parent(carol,frank).\nsibling(george,bob) :- cold.\nwet(pencil).\nparent(carol,alice).\nowns(dave,pencil).\nsibling(eve,bob).",
    "natural language": "You are given the following information:\nIf pencil is wet, then frank is an enemy of eve.\nIf frank is an enemy of eve, then bob is sad.\nIf dave owns car and frank is tall, then carol is tall.\nIf alice is a friend of carol and george is tall, then dave is tall.\nIf car is big, then carol owns ball.\nIf pencil is big and alice likes book, then book is big.\nIf george likes eve, then book is big.\nIf eve is tall and carol is an enemy of carol, then george owns pencil.\nIf dave is tall and carol is a friend of bob, then george is hungry.\nIf george dislikes eve and car is small, then eve is a friend of frank.\nIf bob is tall and it is sunny, then pencil is big.\nIf eve is an enemy of dave and it is cold, then carol is hungry.\nIf george is happy and bob is happy, then bob is a friend of frank.\nIf it is hot and apple is wet and it is sunny, then it is cold.\nIf dave is a parent of alice and frank dislikes george and ball is wet, then alice is sad.\nIf book is big and george is a friend of frank, then dave is a friend of frank.\nIf eve is happy, then dave is hungry.\nIf carol is a parent of frank, then carol is a sibling of george.\nIf it is cold, then george is a sibling of bob.\n\nAnd the following facts:\npencil is wet.\ncarol is a parent of alice.\ndave owns pencil.\neve is a sibling of bob.\n\nQUESTION:\nIs dave is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,apple).",
    "c": "enemy(frank,eve) :- wet(pencil).\nsad(bob) :- enemy(frank,eve).\ntall(carol) :- owns(dave,car), tall(frank).\ntall(dave) :- friend(alice,carol), tall(george).\nowns(carol,ball) :- big(car).\nbig(book) :- big(pencil), likes(alice,book).\nbig(book) :- likes(george,eve).\nowns(george,pencil) :- tall(eve), enemy(carol,carol).\nhungry(george) :- tall(dave), friend(carol,bob).\nfriend(eve,frank) :- dislikes(george,eve), small(car).\nbig(pencil) :- tall(bob), sunny.\nhungry(carol) :- enemy(eve,dave), cold.\nfriend(bob,frank) :- happy(george), happy(bob).\ncold :- hot, wet(apple), sunny.\nsad(alice) :- parent(dave,alice), dislikes(frank,george), wet(ball).\nfriend(dave,frank) :- big(book), friend(george,frank).\nhungry(dave) :- happy(eve).\nsibling(carol,george) :- parent(carol,frank).\nsibling(george,bob) :- cold.\nwet(pencil).\nparent(carol,alice).\nowns(dave,pencil).\nsibling(eve,bob).",
    "natural language": "You are given the following information:\nIf pencil is wet, then frank is an enemy of eve.\nIf frank is an enemy of eve, then bob is sad.\nIf dave owns car and frank is tall, then carol is tall.\nIf alice is a friend of carol and george is tall, then dave is tall.\nIf car is big, then carol owns ball.\nIf pencil is big and alice likes book, then book is big.\nIf george likes eve, then book is big.\nIf eve is tall and carol is an enemy of carol, then george owns pencil.\nIf dave is tall and carol is a friend of bob, then george is hungry.\nIf george dislikes eve and car is small, then eve is a friend of frank.\nIf bob is tall and it is sunny, then pencil is big.\nIf eve is an enemy of dave and it is cold, then carol is hungry.\nIf george is happy and bob is happy, then bob is a friend of frank.\nIf it is hot and apple is wet and it is sunny, then it is cold.\nIf dave is a parent of alice and frank dislikes george and ball is wet, then alice is sad.\nIf book is big and george is a friend of frank, then dave is a friend of frank.\nIf eve is happy, then dave is hungry.\nIf carol is a parent of frank, then carol is a sibling of george.\nIf it is cold, then george is a sibling of bob.\n\nAnd the following facts:\npencil is wet.\ncarol is a parent of alice.\ndave owns pencil.\neve is a sibling of bob.\n\nQUESTION:\nIs frank owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "enemy(frank,eve) :- wet(pencil).\nsad(bob) :- enemy(frank,eve).\ntall(carol) :- owns(dave,car), tall(frank).\ntall(dave) :- friend(alice,carol), tall(george).\nowns(carol,ball) :- big(car).\nbig(book) :- big(pencil), likes(alice,book).\nbig(book) :- likes(george,eve).\nowns(george,pencil) :- tall(eve), enemy(carol,carol).\nhungry(george) :- tall(dave), friend(carol,bob).\nfriend(eve,frank) :- dislikes(george,eve), small(car).\nbig(pencil) :- tall(bob), sunny.\nhungry(carol) :- enemy(eve,dave), cold.\nfriend(bob,frank) :- happy(george), happy(bob).\ncold :- hot, wet(apple), sunny.\nsad(alice) :- parent(dave,alice), dislikes(frank,george), wet(ball).\nfriend(dave,frank) :- big(book), friend(george,frank).\nhungry(dave) :- happy(eve).\nsibling(carol,george) :- parent(carol,frank).\nsibling(george,bob) :- cold.\nparent(carol,alice).\nowns(dave,pencil).\nsibling(eve,bob).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then frank is an enemy of eve.\nIf frank is an enemy of eve, then bob is sad.\nIf dave owns car and frank is tall, then carol is tall.\nIf alice is a friend of carol and george is tall, then dave is tall.\nIf car is big, then carol owns ball.\nIf pencil is big and alice likes book, then book is big.\nIf george likes eve, then book is big.\nIf eve is tall and carol is an enemy of carol, then george owns pencil.\nIf dave is tall and carol is a friend of bob, then george is hungry.\nIf george dislikes eve and car is small, then eve is a friend of frank.\nIf bob is tall and it is sunny, then pencil is big.\nIf eve is an enemy of dave and it is cold, then carol is hungry.\nIf george is happy and bob is happy, then bob is a friend of frank.\nIf it is hot and apple is wet and it is sunny, then it is cold.\nIf dave is a parent of alice and frank dislikes george and ball is wet, then alice is sad.\nIf book is big and george is a friend of frank, then dave is a friend of frank.\nIf eve is happy, then dave is hungry.\nIf carol is a parent of frank, then carol is a sibling of george.\nIf it is cold, then george is a sibling of bob.\n\nAnd the following facts:\npencil is wet.\ncarol is a parent of alice.\ndave owns pencil.\neve is a sibling of bob.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould pencil is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,pencil).",
    "c": "enemy(frank,eve) :- wet(pencil).\nsad(bob) :- enemy(frank,eve).\ntall(carol) :- owns(dave,car), tall(frank).\ntall(dave) :- friend(alice,carol), tall(george).\nowns(carol,ball) :- big(car).\nbig(book) :- big(pencil), likes(alice,book).\nbig(book) :- likes(george,eve).\nowns(george,pencil) :- tall(eve), enemy(carol,carol).\nhungry(george) :- tall(dave), friend(carol,bob).\nfriend(eve,frank) :- dislikes(george,eve), small(car).\nbig(pencil) :- tall(bob), sunny.\nhungry(carol) :- enemy(eve,dave), cold.\nfriend(bob,frank) :- happy(george), happy(bob).\ncold :- hot, wet(apple), sunny.\nsad(alice) :- parent(dave,alice), dislikes(frank,george), wet(ball).\nfriend(dave,frank) :- big(book), friend(george,frank).\nhungry(dave) :- happy(eve).\nsibling(carol,george) :- parent(carol,frank).\nsibling(george,bob) :- cold.\nwet(pencil).\nparent(carol,alice).\nsibling(eve,bob).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then frank is an enemy of eve.\nIf frank is an enemy of eve, then bob is sad.\nIf dave owns car and frank is tall, then carol is tall.\nIf alice is a friend of carol and george is tall, then dave is tall.\nIf car is big, then carol owns ball.\nIf pencil is big and alice likes book, then book is big.\nIf george likes eve, then book is big.\nIf eve is tall and carol is an enemy of carol, then george owns pencil.\nIf dave is tall and carol is a friend of bob, then george is hungry.\nIf george dislikes eve and car is small, then eve is a friend of frank.\nIf bob is tall and it is sunny, then pencil is big.\nIf eve is an enemy of dave and it is cold, then carol is hungry.\nIf george is happy and bob is happy, then bob is a friend of frank.\nIf it is hot and apple is wet and it is sunny, then it is cold.\nIf dave is a parent of alice and frank dislikes george and ball is wet, then alice is sad.\nIf book is big and george is a friend of frank, then dave is a friend of frank.\nIf eve is happy, then dave is hungry.\nIf carol is a parent of frank, then carol is a sibling of george.\nIf it is cold, then george is a sibling of bob.\n\nAnd the following facts:\npencil is wet.\ncarol is a parent of alice.\ndave owns pencil.\neve is a sibling of bob.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould dave owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(eve,bob).",
    "c": "enemy(frank,eve) :- wet(pencil).\nsad(bob) :- enemy(frank,eve).\ntall(carol) :- owns(dave,car), tall(frank).\ntall(dave) :- friend(alice,carol), tall(george).\nowns(carol,ball) :- big(car).\nbig(book) :- big(pencil), likes(alice,book).\nbig(book) :- likes(george,eve).\nowns(george,pencil) :- tall(eve), enemy(carol,carol).\nhungry(george) :- tall(dave), friend(carol,bob).\nfriend(eve,frank) :- dislikes(george,eve), small(car).\nbig(pencil) :- tall(bob), sunny.\nhungry(carol) :- enemy(eve,dave), cold.\nfriend(bob,frank) :- happy(george), happy(bob).\ncold :- hot, wet(apple), sunny.\nsad(alice) :- parent(dave,alice), dislikes(frank,george), wet(ball).\nfriend(dave,frank) :- big(book), friend(george,frank).\nhungry(dave) :- happy(eve).\nsibling(carol,george) :- parent(carol,frank).\nsibling(george,bob) :- cold.\nwet(pencil).\nparent(carol,alice).\nowns(dave,pencil).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then frank is an enemy of eve.\nIf frank is an enemy of eve, then bob is sad.\nIf dave owns car and frank is tall, then carol is tall.\nIf alice is a friend of carol and george is tall, then dave is tall.\nIf car is big, then carol owns ball.\nIf pencil is big and alice likes book, then book is big.\nIf george likes eve, then book is big.\nIf eve is tall and carol is an enemy of carol, then george owns pencil.\nIf dave is tall and carol is a friend of bob, then george is hungry.\nIf george dislikes eve and car is small, then eve is a friend of frank.\nIf bob is tall and it is sunny, then pencil is big.\nIf eve is an enemy of dave and it is cold, then carol is hungry.\nIf george is happy and bob is happy, then bob is a friend of frank.\nIf it is hot and apple is wet and it is sunny, then it is cold.\nIf dave is a parent of alice and frank dislikes george and ball is wet, then alice is sad.\nIf book is big and george is a friend of frank, then dave is a friend of frank.\nIf eve is happy, then dave is hungry.\nIf carol is a parent of frank, then carol is a sibling of george.\nIf it is cold, then george is a sibling of bob.\n\nAnd the following facts:\npencil is wet.\ncarol is a parent of alice.\ndave owns pencil.\neve is a sibling of bob.\n\nOBSERVATION: bob is sad is true.\n\nQUESTION:\nCould eve is a sibling of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(eve).",
    "c": "small(phone) :- enemy(alice,eve).\ndislikes(alice,george) :- small(phone).\ntall(bob) :- dislikes(alice,george).\nwet(pencil) :- tall(bob).\ntall(alice) :- sibling(carol,eve), tall(eve), tall(frank).\ncold :- likes(bob,george).\ncold :- cold, cold, parent(frank,eve).\nwet(car) :- hot.\nwet(phone) :- big(phone), wet(ball).\nhappy(george) :- parent(george,dave), hot.\ntall(george) :- hot, hungry(bob), parent(eve,george).\nhappy(eve) :- wet(pencil).\nbig(book) :- big(ball).\nowns(george,book) :- owns(dave,car).\nowns(eve,phone) :- owns(frank,apple), owns(alice,phone).\ntall(frank) :- hot, friend(george,dave), tall(carol).\nbig(ball) :- big(car), big(apple).\nhot :- hot, sibling(george,dave).\nenemy(george,alice) :- hungry(carol), hot.\nenemy(alice,eve).\nsibling(dave,alice).\nowns(alice,book).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then phone is small.\nIf phone is small, then alice dislikes george.\nIf alice dislikes george, then bob is tall.\nIf bob is tall, then pencil is wet.\nIf carol is a sibling of eve and eve is tall and frank is tall, then alice is tall.\nIf bob likes george, then it is cold.\nIf it is cold and it is cold and frank is a parent of eve, then it is cold.\nIf it is hot, then car is wet.\nIf phone is big and ball is wet, then phone is wet.\nIf george is a parent of dave and it is hot, then george is happy.\nIf it is hot and bob is hungry and eve is a parent of george, then george is tall.\nIf pencil is wet, then eve is happy.\nIf ball is big, then book is big.\nIf dave owns car, then george owns book.\nIf frank owns apple and alice owns phone, then eve owns phone.\nIf it is hot and george is a friend of dave and carol is tall, then frank is tall.\nIf car is big and apple is big, then ball is big.\nIf it is hot and george is a sibling of dave, then it is hot.\nIf carol is hungry and it is hot, then george is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ndave is a sibling of alice.\nalice owns book.\ndave is a friend of frank.\n\nQUESTION:\nIs eve is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,book).",
    "c": "small(phone) :- enemy(alice,eve).\ndislikes(alice,george) :- small(phone).\ntall(bob) :- dislikes(alice,george).\nwet(pencil) :- tall(bob).\ntall(alice) :- sibling(carol,eve), tall(eve), tall(frank).\ncold :- likes(bob,george).\ncold :- cold, cold, parent(frank,eve).\nwet(car) :- hot.\nwet(phone) :- big(phone), wet(ball).\nhappy(george) :- parent(george,dave), hot.\ntall(george) :- hot, hungry(bob), parent(eve,george).\nhappy(eve) :- wet(pencil).\nbig(book) :- big(ball).\nowns(george,book) :- owns(dave,car).\nowns(eve,phone) :- owns(frank,apple), owns(alice,phone).\ntall(frank) :- hot, friend(george,dave), tall(carol).\nbig(ball) :- big(car), big(apple).\nhot :- hot, sibling(george,dave).\nenemy(george,alice) :- hungry(carol), hot.\nenemy(alice,eve).\nsibling(dave,alice).\nowns(alice,book).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then phone is small.\nIf phone is small, then alice dislikes george.\nIf alice dislikes george, then bob is tall.\nIf bob is tall, then pencil is wet.\nIf carol is a sibling of eve and eve is tall and frank is tall, then alice is tall.\nIf bob likes george, then it is cold.\nIf it is cold and it is cold and frank is a parent of eve, then it is cold.\nIf it is hot, then car is wet.\nIf phone is big and ball is wet, then phone is wet.\nIf george is a parent of dave and it is hot, then george is happy.\nIf it is hot and bob is hungry and eve is a parent of george, then george is tall.\nIf pencil is wet, then eve is happy.\nIf ball is big, then book is big.\nIf dave owns car, then george owns book.\nIf frank owns apple and alice owns phone, then eve owns phone.\nIf it is hot and george is a friend of dave and carol is tall, then frank is tall.\nIf car is big and apple is big, then ball is big.\nIf it is hot and george is a sibling of dave, then it is hot.\nIf carol is hungry and it is hot, then george is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ndave is a sibling of alice.\nalice owns book.\ndave is a friend of frank.\n\nQUESTION:\nIs alice owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "small(phone) :- enemy(alice,eve).\ndislikes(alice,george) :- small(phone).\ntall(bob) :- dislikes(alice,george).\nwet(pencil) :- tall(bob).\ntall(alice) :- sibling(carol,eve), tall(eve), tall(frank).\ncold :- likes(bob,george).\ncold :- cold, cold, parent(frank,eve).\nwet(car) :- hot.\nwet(phone) :- big(phone), wet(ball).\nhappy(george) :- parent(george,dave), hot.\ntall(george) :- hot, hungry(bob), parent(eve,george).\nhappy(eve) :- wet(pencil).\nbig(book) :- big(ball).\nowns(george,book) :- owns(dave,car).\nowns(eve,phone) :- owns(frank,apple), owns(alice,phone).\ntall(frank) :- hot, friend(george,dave), tall(carol).\nbig(ball) :- big(car), big(apple).\nhot :- hot, sibling(george,dave).\nenemy(george,alice) :- hungry(carol), hot.\nenemy(alice,eve).\nsibling(dave,alice).\nowns(alice,book).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then phone is small.\nIf phone is small, then alice dislikes george.\nIf alice dislikes george, then bob is tall.\nIf bob is tall, then pencil is wet.\nIf carol is a sibling of eve and eve is tall and frank is tall, then alice is tall.\nIf bob likes george, then it is cold.\nIf it is cold and it is cold and frank is a parent of eve, then it is cold.\nIf it is hot, then car is wet.\nIf phone is big and ball is wet, then phone is wet.\nIf george is a parent of dave and it is hot, then george is happy.\nIf it is hot and bob is hungry and eve is a parent of george, then george is tall.\nIf pencil is wet, then eve is happy.\nIf ball is big, then book is big.\nIf dave owns car, then george owns book.\nIf frank owns apple and alice owns phone, then eve owns phone.\nIf it is hot and george is a friend of dave and carol is tall, then frank is tall.\nIf car is big and apple is big, then ball is big.\nIf it is hot and george is a sibling of dave, then it is hot.\nIf carol is hungry and it is hot, then george is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ndave is a sibling of alice.\nalice owns book.\ndave is a friend of frank.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,ball).",
    "c": "small(phone) :- enemy(alice,eve).\ndislikes(alice,george) :- small(phone).\ntall(bob) :- dislikes(alice,george).\nwet(pencil) :- tall(bob).\ntall(alice) :- sibling(carol,eve), tall(eve), tall(frank).\ncold :- likes(bob,george).\ncold :- cold, cold, parent(frank,eve).\nwet(car) :- hot.\nwet(phone) :- big(phone), wet(ball).\nhappy(george) :- parent(george,dave), hot.\ntall(george) :- hot, hungry(bob), parent(eve,george).\nhappy(eve) :- wet(pencil).\nbig(book) :- big(ball).\nowns(george,book) :- owns(dave,car).\nowns(eve,phone) :- owns(frank,apple), owns(alice,phone).\ntall(frank) :- hot, friend(george,dave), tall(carol).\nbig(ball) :- big(car), big(apple).\nhot :- hot, sibling(george,dave).\nenemy(george,alice) :- hungry(carol), hot.\nenemy(alice,eve).\nsibling(dave,alice).\nowns(alice,book).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then phone is small.\nIf phone is small, then alice dislikes george.\nIf alice dislikes george, then bob is tall.\nIf bob is tall, then pencil is wet.\nIf carol is a sibling of eve and eve is tall and frank is tall, then alice is tall.\nIf bob likes george, then it is cold.\nIf it is cold and it is cold and frank is a parent of eve, then it is cold.\nIf it is hot, then car is wet.\nIf phone is big and ball is wet, then phone is wet.\nIf george is a parent of dave and it is hot, then george is happy.\nIf it is hot and bob is hungry and eve is a parent of george, then george is tall.\nIf pencil is wet, then eve is happy.\nIf ball is big, then book is big.\nIf dave owns car, then george owns book.\nIf frank owns apple and alice owns phone, then eve owns phone.\nIf it is hot and george is a friend of dave and carol is tall, then frank is tall.\nIf car is big and apple is big, then ball is big.\nIf it is hot and george is a sibling of dave, then it is hot.\nIf carol is hungry and it is hot, then george is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ndave is a sibling of alice.\nalice owns book.\ndave is a friend of frank.\n\nQUESTION:\nIs george likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,carol).",
    "c": "small(phone) :- enemy(alice,eve).\ndislikes(alice,george) :- small(phone).\ntall(bob) :- dislikes(alice,george).\nwet(pencil) :- tall(bob).\ntall(alice) :- sibling(carol,eve), tall(eve), tall(frank).\ncold :- likes(bob,george).\ncold :- cold, cold, parent(frank,eve).\nwet(car) :- hot.\nwet(phone) :- big(phone), wet(ball).\nhappy(george) :- parent(george,dave), hot.\ntall(george) :- hot, hungry(bob), parent(eve,george).\nhappy(eve) :- wet(pencil).\nbig(book) :- big(ball).\nowns(george,book) :- owns(dave,car).\nowns(eve,phone) :- owns(frank,apple), owns(alice,phone).\ntall(frank) :- hot, friend(george,dave), tall(carol).\nbig(ball) :- big(car), big(apple).\nhot :- hot, sibling(george,dave).\nenemy(george,alice) :- hungry(carol), hot.\nenemy(alice,eve).\nsibling(dave,alice).\nowns(alice,book).\nfriend(dave,frank).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then phone is small.\nIf phone is small, then alice dislikes george.\nIf alice dislikes george, then bob is tall.\nIf bob is tall, then pencil is wet.\nIf carol is a sibling of eve and eve is tall and frank is tall, then alice is tall.\nIf bob likes george, then it is cold.\nIf it is cold and it is cold and frank is a parent of eve, then it is cold.\nIf it is hot, then car is wet.\nIf phone is big and ball is wet, then phone is wet.\nIf george is a parent of dave and it is hot, then george is happy.\nIf it is hot and bob is hungry and eve is a parent of george, then george is tall.\nIf pencil is wet, then eve is happy.\nIf ball is big, then book is big.\nIf dave owns car, then george owns book.\nIf frank owns apple and alice owns phone, then eve owns phone.\nIf it is hot and george is a friend of dave and carol is tall, then frank is tall.\nIf car is big and apple is big, then ball is big.\nIf it is hot and george is a sibling of dave, then it is hot.\nIf carol is hungry and it is hot, then george is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ndave is a sibling of alice.\nalice owns book.\ndave is a friend of frank.\n\nQUESTION:\nIs bob is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,eve).",
    "c": "small(phone) :- enemy(alice,eve).\ndislikes(alice,george) :- small(phone).\ntall(bob) :- dislikes(alice,george).\nwet(pencil) :- tall(bob).\ntall(alice) :- sibling(carol,eve), tall(eve), tall(frank).\ncold :- likes(bob,george).\ncold :- cold, cold, parent(frank,eve).\nwet(car) :- hot.\nwet(phone) :- big(phone), wet(ball).\nhappy(george) :- parent(george,dave), hot.\ntall(george) :- hot, hungry(bob), parent(eve,george).\nhappy(eve) :- wet(pencil).\nbig(book) :- big(ball).\nowns(george,book) :- owns(dave,car).\nowns(eve,phone) :- owns(frank,apple), owns(alice,phone).\ntall(frank) :- hot, friend(george,dave), tall(carol).\nbig(ball) :- big(car), big(apple).\nhot :- hot, sibling(george,dave).\nenemy(george,alice) :- hungry(carol), hot.\nsibling(dave,alice).\nowns(alice,book).\nfriend(dave,frank).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of eve, then phone is small.\nIf phone is small, then alice dislikes george.\nIf alice dislikes george, then bob is tall.\nIf bob is tall, then pencil is wet.\nIf carol is a sibling of eve and eve is tall and frank is tall, then alice is tall.\nIf bob likes george, then it is cold.\nIf it is cold and it is cold and frank is a parent of eve, then it is cold.\nIf it is hot, then car is wet.\nIf phone is big and ball is wet, then phone is wet.\nIf george is a parent of dave and it is hot, then george is happy.\nIf it is hot and bob is hungry and eve is a parent of george, then george is tall.\nIf pencil is wet, then eve is happy.\nIf ball is big, then book is big.\nIf dave owns car, then george owns book.\nIf frank owns apple and alice owns phone, then eve owns phone.\nIf it is hot and george is a friend of dave and carol is tall, then frank is tall.\nIf car is big and apple is big, then ball is big.\nIf it is hot and george is a sibling of dave, then it is hot.\nIf carol is hungry and it is hot, then george is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ndave is a sibling of alice.\nalice owns book.\ndave is a friend of frank.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould alice is an enemy of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,alice).",
    "c": "small(phone) :- enemy(alice,eve).\ndislikes(alice,george) :- small(phone).\ntall(bob) :- dislikes(alice,george).\nwet(pencil) :- tall(bob).\ntall(alice) :- sibling(carol,eve), tall(eve), tall(frank).\ncold :- likes(bob,george).\ncold :- cold, cold, parent(frank,eve).\nwet(car) :- hot.\nwet(phone) :- big(phone), wet(ball).\nhappy(george) :- parent(george,dave), hot.\ntall(george) :- hot, hungry(bob), parent(eve,george).\nhappy(eve) :- wet(pencil).\nbig(book) :- big(ball).\nowns(george,book) :- owns(dave,car).\nowns(eve,phone) :- owns(frank,apple), owns(alice,phone).\ntall(frank) :- hot, friend(george,dave), tall(carol).\nbig(ball) :- big(car), big(apple).\nhot :- hot, sibling(george,dave).\nenemy(george,alice) :- hungry(carol), hot.\nenemy(alice,eve).\nowns(alice,book).\nfriend(dave,frank).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of eve, then phone is small.\nIf phone is small, then alice dislikes george.\nIf alice dislikes george, then bob is tall.\nIf bob is tall, then pencil is wet.\nIf carol is a sibling of eve and eve is tall and frank is tall, then alice is tall.\nIf bob likes george, then it is cold.\nIf it is cold and it is cold and frank is a parent of eve, then it is cold.\nIf it is hot, then car is wet.\nIf phone is big and ball is wet, then phone is wet.\nIf george is a parent of dave and it is hot, then george is happy.\nIf it is hot and bob is hungry and eve is a parent of george, then george is tall.\nIf pencil is wet, then eve is happy.\nIf ball is big, then book is big.\nIf dave owns car, then george owns book.\nIf frank owns apple and alice owns phone, then eve owns phone.\nIf it is hot and george is a friend of dave and carol is tall, then frank is tall.\nIf car is big and apple is big, then ball is big.\nIf it is hot and george is a sibling of dave, then it is hot.\nIf carol is hungry and it is hot, then george is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ndave is a sibling of alice.\nalice owns book.\ndave is a friend of frank.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould dave is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(alice,book).",
    "c": "small(phone) :- enemy(alice,eve).\ndislikes(alice,george) :- small(phone).\ntall(bob) :- dislikes(alice,george).\nwet(pencil) :- tall(bob).\ntall(alice) :- sibling(carol,eve), tall(eve), tall(frank).\ncold :- likes(bob,george).\ncold :- cold, cold, parent(frank,eve).\nwet(car) :- hot.\nwet(phone) :- big(phone), wet(ball).\nhappy(george) :- parent(george,dave), hot.\ntall(george) :- hot, hungry(bob), parent(eve,george).\nhappy(eve) :- wet(pencil).\nbig(book) :- big(ball).\nowns(george,book) :- owns(dave,car).\nowns(eve,phone) :- owns(frank,apple), owns(alice,phone).\ntall(frank) :- hot, friend(george,dave), tall(carol).\nbig(ball) :- big(car), big(apple).\nhot :- hot, sibling(george,dave).\nenemy(george,alice) :- hungry(carol), hot.\nenemy(alice,eve).\nsibling(dave,alice).\nfriend(dave,frank).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of eve, then phone is small.\nIf phone is small, then alice dislikes george.\nIf alice dislikes george, then bob is tall.\nIf bob is tall, then pencil is wet.\nIf carol is a sibling of eve and eve is tall and frank is tall, then alice is tall.\nIf bob likes george, then it is cold.\nIf it is cold and it is cold and frank is a parent of eve, then it is cold.\nIf it is hot, then car is wet.\nIf phone is big and ball is wet, then phone is wet.\nIf george is a parent of dave and it is hot, then george is happy.\nIf it is hot and bob is hungry and eve is a parent of george, then george is tall.\nIf pencil is wet, then eve is happy.\nIf ball is big, then book is big.\nIf dave owns car, then george owns book.\nIf frank owns apple and alice owns phone, then eve owns phone.\nIf it is hot and george is a friend of dave and carol is tall, then frank is tall.\nIf car is big and apple is big, then ball is big.\nIf it is hot and george is a sibling of dave, then it is hot.\nIf carol is hungry and it is hot, then george is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ndave is a sibling of alice.\nalice owns book.\ndave is a friend of frank.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould alice owns book be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "big(ball) :- tall(carol).\nsmall(car) :- big(ball).\nsmall(phone) :- small(car).\nhappy(george) :- small(phone).\nwet(book) :- owns(bob,apple), happy(dave).\nwet(ball) :- parent(george,eve), parent(bob,george), sunny.\ntall(alice) :- likes(george,george).\nfriend(carol,bob) :- cold.\ntall(frank) :- likes(george,phone), hot, likes(alice,alice).\nsibling(dave,alice) :- owns(carol,apple).\nsibling(frank,carol) :- tall(eve), sad(dave), happy(eve).\nfriend(dave,bob) :- sibling(carol,dave), small(car), hungry(dave).\nhappy(george) :- enemy(alice,alice).\ndislikes(alice,book) :- happy(george).\nsad(bob) :- owns(eve,apple), friend(alice,eve), dislikes(dave,pencil).\nsad(dave) :- dislikes(bob,pencil).\ndislikes(frank,pencil) :- parent(carol,dave).\nhappy(eve) :- wet(phone), likes(george,carol), happy(carol).\nsibling(carol,eve) :- sibling(george,dave), owns(bob,phone).\ntall(carol).\ndislikes(bob,car).\nsibling(carol,frank).\ndislikes(eve,ball).",
    "natural language": "You are given the following information:\nIf carol is tall, then ball is big.\nIf ball is big, then car is small.\nIf car is small, then phone is small.\nIf phone is small, then george is happy.\nIf bob owns apple and dave is happy, then book is wet.\nIf george is a parent of eve and bob is a parent of george and it is sunny, then ball is wet.\nIf george likes george, then alice is tall.\nIf it is cold, then carol is a friend of bob.\nIf george likes phone and it is hot and alice likes alice, then frank is tall.\nIf carol owns apple, then dave is a sibling of alice.\nIf eve is tall and dave is sad and eve is happy, then frank is a sibling of carol.\nIf carol is a sibling of dave and car is small and dave is hungry, then dave is a friend of bob.\nIf alice is an enemy of alice, then george is happy.\nIf george is happy, then alice dislikes book.\nIf eve owns apple and alice is a friend of eve and dave dislikes pencil, then bob is sad.\nIf bob dislikes pencil, then dave is sad.\nIf carol is a parent of dave, then frank dislikes pencil.\nIf phone is wet and george likes carol and carol is happy, then eve is happy.\nIf george is a sibling of dave and bob owns phone, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is tall.\nbob dislikes car.\ncarol is a sibling of frank.\neve dislikes ball.\n\nQUESTION:\nIs ball is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(carol).",
    "c": "big(ball) :- tall(carol).\nsmall(car) :- big(ball).\nsmall(phone) :- small(car).\nhappy(george) :- small(phone).\nwet(book) :- owns(bob,apple), happy(dave).\nwet(ball) :- parent(george,eve), parent(bob,george), sunny.\ntall(alice) :- likes(george,george).\nfriend(carol,bob) :- cold.\ntall(frank) :- likes(george,phone), hot, likes(alice,alice).\nsibling(dave,alice) :- owns(carol,apple).\nsibling(frank,carol) :- tall(eve), sad(dave), happy(eve).\nfriend(dave,bob) :- sibling(carol,dave), small(car), hungry(dave).\nhappy(george) :- enemy(alice,alice).\ndislikes(alice,book) :- happy(george).\nsad(bob) :- owns(eve,apple), friend(alice,eve), dislikes(dave,pencil).\nsad(dave) :- dislikes(bob,pencil).\ndislikes(frank,pencil) :- parent(carol,dave).\nhappy(eve) :- wet(phone), likes(george,carol), happy(carol).\nsibling(carol,eve) :- sibling(george,dave), owns(bob,phone).\ntall(carol).\ndislikes(bob,car).\nsibling(carol,frank).\ndislikes(eve,ball).",
    "natural language": "You are given the following information:\nIf carol is tall, then ball is big.\nIf ball is big, then car is small.\nIf car is small, then phone is small.\nIf phone is small, then george is happy.\nIf bob owns apple and dave is happy, then book is wet.\nIf george is a parent of eve and bob is a parent of george and it is sunny, then ball is wet.\nIf george likes george, then alice is tall.\nIf it is cold, then carol is a friend of bob.\nIf george likes phone and it is hot and alice likes alice, then frank is tall.\nIf carol owns apple, then dave is a sibling of alice.\nIf eve is tall and dave is sad and eve is happy, then frank is a sibling of carol.\nIf carol is a sibling of dave and car is small and dave is hungry, then dave is a friend of bob.\nIf alice is an enemy of alice, then george is happy.\nIf george is happy, then alice dislikes book.\nIf eve owns apple and alice is a friend of eve and dave dislikes pencil, then bob is sad.\nIf bob dislikes pencil, then dave is sad.\nIf carol is a parent of dave, then frank dislikes pencil.\nIf phone is wet and george likes carol and carol is happy, then eve is happy.\nIf george is a sibling of dave and bob owns phone, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is tall.\nbob dislikes car.\ncarol is a sibling of frank.\neve dislikes ball.\n\nQUESTION:\nIs carol is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,car).",
    "c": "big(ball) :- tall(carol).\nsmall(car) :- big(ball).\nsmall(phone) :- small(car).\nhappy(george) :- small(phone).\nwet(book) :- owns(bob,apple), happy(dave).\nwet(ball) :- parent(george,eve), parent(bob,george), sunny.\ntall(alice) :- likes(george,george).\nfriend(carol,bob) :- cold.\ntall(frank) :- likes(george,phone), hot, likes(alice,alice).\nsibling(dave,alice) :- owns(carol,apple).\nsibling(frank,carol) :- tall(eve), sad(dave), happy(eve).\nfriend(dave,bob) :- sibling(carol,dave), small(car), hungry(dave).\nhappy(george) :- enemy(alice,alice).\ndislikes(alice,book) :- happy(george).\nsad(bob) :- owns(eve,apple), friend(alice,eve), dislikes(dave,pencil).\nsad(dave) :- dislikes(bob,pencil).\ndislikes(frank,pencil) :- parent(carol,dave).\nhappy(eve) :- wet(phone), likes(george,carol), happy(carol).\nsibling(carol,eve) :- sibling(george,dave), owns(bob,phone).\ntall(carol).\ndislikes(bob,car).\nsibling(carol,frank).\ndislikes(eve,ball).",
    "natural language": "You are given the following information:\nIf carol is tall, then ball is big.\nIf ball is big, then car is small.\nIf car is small, then phone is small.\nIf phone is small, then george is happy.\nIf bob owns apple and dave is happy, then book is wet.\nIf george is a parent of eve and bob is a parent of george and it is sunny, then ball is wet.\nIf george likes george, then alice is tall.\nIf it is cold, then carol is a friend of bob.\nIf george likes phone and it is hot and alice likes alice, then frank is tall.\nIf carol owns apple, then dave is a sibling of alice.\nIf eve is tall and dave is sad and eve is happy, then frank is a sibling of carol.\nIf carol is a sibling of dave and car is small and dave is hungry, then dave is a friend of bob.\nIf alice is an enemy of alice, then george is happy.\nIf george is happy, then alice dislikes book.\nIf eve owns apple and alice is a friend of eve and dave dislikes pencil, then bob is sad.\nIf bob dislikes pencil, then dave is sad.\nIf carol is a parent of dave, then frank dislikes pencil.\nIf phone is wet and george likes carol and carol is happy, then eve is happy.\nIf george is a sibling of dave and bob owns phone, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is tall.\nbob dislikes car.\ncarol is a sibling of frank.\neve dislikes ball.\n\nQUESTION:\nIs bob dislikes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,george).",
    "c": "big(ball) :- tall(carol).\nsmall(car) :- big(ball).\nsmall(phone) :- small(car).\nhappy(george) :- small(phone).\nwet(book) :- owns(bob,apple), happy(dave).\nwet(ball) :- parent(george,eve), parent(bob,george), sunny.\ntall(alice) :- likes(george,george).\nfriend(carol,bob) :- cold.\ntall(frank) :- likes(george,phone), hot, likes(alice,alice).\nsibling(dave,alice) :- owns(carol,apple).\nsibling(frank,carol) :- tall(eve), sad(dave), happy(eve).\nfriend(dave,bob) :- sibling(carol,dave), small(car), hungry(dave).\nhappy(george) :- enemy(alice,alice).\ndislikes(alice,book) :- happy(george).\nsad(bob) :- owns(eve,apple), friend(alice,eve), dislikes(dave,pencil).\nsad(dave) :- dislikes(bob,pencil).\ndislikes(frank,pencil) :- parent(carol,dave).\nhappy(eve) :- wet(phone), likes(george,carol), happy(carol).\nsibling(carol,eve) :- sibling(george,dave), owns(bob,phone).\ntall(carol).\ndislikes(bob,car).\nsibling(carol,frank).\ndislikes(eve,ball).",
    "natural language": "You are given the following information:\nIf carol is tall, then ball is big.\nIf ball is big, then car is small.\nIf car is small, then phone is small.\nIf phone is small, then george is happy.\nIf bob owns apple and dave is happy, then book is wet.\nIf george is a parent of eve and bob is a parent of george and it is sunny, then ball is wet.\nIf george likes george, then alice is tall.\nIf it is cold, then carol is a friend of bob.\nIf george likes phone and it is hot and alice likes alice, then frank is tall.\nIf carol owns apple, then dave is a sibling of alice.\nIf eve is tall and dave is sad and eve is happy, then frank is a sibling of carol.\nIf carol is a sibling of dave and car is small and dave is hungry, then dave is a friend of bob.\nIf alice is an enemy of alice, then george is happy.\nIf george is happy, then alice dislikes book.\nIf eve owns apple and alice is a friend of eve and dave dislikes pencil, then bob is sad.\nIf bob dislikes pencil, then dave is sad.\nIf carol is a parent of dave, then frank dislikes pencil.\nIf phone is wet and george likes carol and carol is happy, then eve is happy.\nIf george is a sibling of dave and bob owns phone, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is tall.\nbob dislikes car.\ncarol is a sibling of frank.\neve dislikes ball.\n\nQUESTION:\nIs bob dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,eve).",
    "c": "big(ball) :- tall(carol).\nsmall(car) :- big(ball).\nsmall(phone) :- small(car).\nhappy(george) :- small(phone).\nwet(book) :- owns(bob,apple), happy(dave).\nwet(ball) :- parent(george,eve), parent(bob,george), sunny.\ntall(alice) :- likes(george,george).\nfriend(carol,bob) :- cold.\ntall(frank) :- likes(george,phone), hot, likes(alice,alice).\nsibling(dave,alice) :- owns(carol,apple).\nsibling(frank,carol) :- tall(eve), sad(dave), happy(eve).\nfriend(dave,bob) :- sibling(carol,dave), small(car), hungry(dave).\nhappy(george) :- enemy(alice,alice).\ndislikes(alice,book) :- happy(george).\nsad(bob) :- owns(eve,apple), friend(alice,eve), dislikes(dave,pencil).\nsad(dave) :- dislikes(bob,pencil).\ndislikes(frank,pencil) :- parent(carol,dave).\nhappy(eve) :- wet(phone), likes(george,carol), happy(carol).\nsibling(carol,eve) :- sibling(george,dave), owns(bob,phone).\ntall(carol).\ndislikes(bob,car).\nsibling(carol,frank).\ndislikes(eve,ball).",
    "natural language": "You are given the following information:\nIf carol is tall, then ball is big.\nIf ball is big, then car is small.\nIf car is small, then phone is small.\nIf phone is small, then george is happy.\nIf bob owns apple and dave is happy, then book is wet.\nIf george is a parent of eve and bob is a parent of george and it is sunny, then ball is wet.\nIf george likes george, then alice is tall.\nIf it is cold, then carol is a friend of bob.\nIf george likes phone and it is hot and alice likes alice, then frank is tall.\nIf carol owns apple, then dave is a sibling of alice.\nIf eve is tall and dave is sad and eve is happy, then frank is a sibling of carol.\nIf carol is a sibling of dave and car is small and dave is hungry, then dave is a friend of bob.\nIf alice is an enemy of alice, then george is happy.\nIf george is happy, then alice dislikes book.\nIf eve owns apple and alice is a friend of eve and dave dislikes pencil, then bob is sad.\nIf bob dislikes pencil, then dave is sad.\nIf carol is a parent of dave, then frank dislikes pencil.\nIf phone is wet and george likes carol and carol is happy, then eve is happy.\nIf george is a sibling of dave and bob owns phone, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is tall.\nbob dislikes car.\ncarol is a sibling of frank.\neve dislikes ball.\n\nQUESTION:\nIs george dislikes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(carol).",
    "c": "big(ball) :- tall(carol).\nsmall(car) :- big(ball).\nsmall(phone) :- small(car).\nhappy(george) :- small(phone).\nwet(book) :- owns(bob,apple), happy(dave).\nwet(ball) :- parent(george,eve), parent(bob,george), sunny.\ntall(alice) :- likes(george,george).\nfriend(carol,bob) :- cold.\ntall(frank) :- likes(george,phone), hot, likes(alice,alice).\nsibling(dave,alice) :- owns(carol,apple).\nsibling(frank,carol) :- tall(eve), sad(dave), happy(eve).\nfriend(dave,bob) :- sibling(carol,dave), small(car), hungry(dave).\nhappy(george) :- enemy(alice,alice).\ndislikes(alice,book) :- happy(george).\nsad(bob) :- owns(eve,apple), friend(alice,eve), dislikes(dave,pencil).\nsad(dave) :- dislikes(bob,pencil).\ndislikes(frank,pencil) :- parent(carol,dave).\nhappy(eve) :- wet(phone), likes(george,carol), happy(carol).\nsibling(carol,eve) :- sibling(george,dave), owns(bob,phone).\ndislikes(bob,car).\nsibling(carol,frank).\ndislikes(eve,ball).",
    "natural language": "You are given the following rules:\nIf carol is tall, then ball is big.\nIf ball is big, then car is small.\nIf car is small, then phone is small.\nIf phone is small, then george is happy.\nIf bob owns apple and dave is happy, then book is wet.\nIf george is a parent of eve and bob is a parent of george and it is sunny, then ball is wet.\nIf george likes george, then alice is tall.\nIf it is cold, then carol is a friend of bob.\nIf george likes phone and it is hot and alice likes alice, then frank is tall.\nIf carol owns apple, then dave is a sibling of alice.\nIf eve is tall and dave is sad and eve is happy, then frank is a sibling of carol.\nIf carol is a sibling of dave and car is small and dave is hungry, then dave is a friend of bob.\nIf alice is an enemy of alice, then george is happy.\nIf george is happy, then alice dislikes book.\nIf eve owns apple and alice is a friend of eve and dave dislikes pencil, then bob is sad.\nIf bob dislikes pencil, then dave is sad.\nIf carol is a parent of dave, then frank dislikes pencil.\nIf phone is wet and george likes carol and carol is happy, then eve is happy.\nIf george is a sibling of dave and bob owns phone, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is tall.\nbob dislikes car.\ncarol is a sibling of frank.\neve dislikes ball.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould carol is tall be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,car).",
    "c": "big(ball) :- tall(carol).\nsmall(car) :- big(ball).\nsmall(phone) :- small(car).\nhappy(george) :- small(phone).\nwet(book) :- owns(bob,apple), happy(dave).\nwet(ball) :- parent(george,eve), parent(bob,george), sunny.\ntall(alice) :- likes(george,george).\nfriend(carol,bob) :- cold.\ntall(frank) :- likes(george,phone), hot, likes(alice,alice).\nsibling(dave,alice) :- owns(carol,apple).\nsibling(frank,carol) :- tall(eve), sad(dave), happy(eve).\nfriend(dave,bob) :- sibling(carol,dave), small(car), hungry(dave).\nhappy(george) :- enemy(alice,alice).\ndislikes(alice,book) :- happy(george).\nsad(bob) :- owns(eve,apple), friend(alice,eve), dislikes(dave,pencil).\nsad(dave) :- dislikes(bob,pencil).\ndislikes(frank,pencil) :- parent(carol,dave).\nhappy(eve) :- wet(phone), likes(george,carol), happy(carol).\nsibling(carol,eve) :- sibling(george,dave), owns(bob,phone).\ntall(carol).\nsibling(carol,frank).\ndislikes(eve,ball).",
    "natural language": "You are given the following rules:\nIf carol is tall, then ball is big.\nIf ball is big, then car is small.\nIf car is small, then phone is small.\nIf phone is small, then george is happy.\nIf bob owns apple and dave is happy, then book is wet.\nIf george is a parent of eve and bob is a parent of george and it is sunny, then ball is wet.\nIf george likes george, then alice is tall.\nIf it is cold, then carol is a friend of bob.\nIf george likes phone and it is hot and alice likes alice, then frank is tall.\nIf carol owns apple, then dave is a sibling of alice.\nIf eve is tall and dave is sad and eve is happy, then frank is a sibling of carol.\nIf carol is a sibling of dave and car is small and dave is hungry, then dave is a friend of bob.\nIf alice is an enemy of alice, then george is happy.\nIf george is happy, then alice dislikes book.\nIf eve owns apple and alice is a friend of eve and dave dislikes pencil, then bob is sad.\nIf bob dislikes pencil, then dave is sad.\nIf carol is a parent of dave, then frank dislikes pencil.\nIf phone is wet and george likes carol and carol is happy, then eve is happy.\nIf george is a sibling of dave and bob owns phone, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is tall.\nbob dislikes car.\ncarol is a sibling of frank.\neve dislikes ball.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould bob dislikes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(carol,frank).",
    "c": "big(ball) :- tall(carol).\nsmall(car) :- big(ball).\nsmall(phone) :- small(car).\nhappy(george) :- small(phone).\nwet(book) :- owns(bob,apple), happy(dave).\nwet(ball) :- parent(george,eve), parent(bob,george), sunny.\ntall(alice) :- likes(george,george).\nfriend(carol,bob) :- cold.\ntall(frank) :- likes(george,phone), hot, likes(alice,alice).\nsibling(dave,alice) :- owns(carol,apple).\nsibling(frank,carol) :- tall(eve), sad(dave), happy(eve).\nfriend(dave,bob) :- sibling(carol,dave), small(car), hungry(dave).\nhappy(george) :- enemy(alice,alice).\ndislikes(alice,book) :- happy(george).\nsad(bob) :- owns(eve,apple), friend(alice,eve), dislikes(dave,pencil).\nsad(dave) :- dislikes(bob,pencil).\ndislikes(frank,pencil) :- parent(carol,dave).\nhappy(eve) :- wet(phone), likes(george,carol), happy(carol).\nsibling(carol,eve) :- sibling(george,dave), owns(bob,phone).\ntall(carol).\ndislikes(bob,car).\ndislikes(eve,ball).",
    "natural language": "You are given the following rules:\nIf carol is tall, then ball is big.\nIf ball is big, then car is small.\nIf car is small, then phone is small.\nIf phone is small, then george is happy.\nIf bob owns apple and dave is happy, then book is wet.\nIf george is a parent of eve and bob is a parent of george and it is sunny, then ball is wet.\nIf george likes george, then alice is tall.\nIf it is cold, then carol is a friend of bob.\nIf george likes phone and it is hot and alice likes alice, then frank is tall.\nIf carol owns apple, then dave is a sibling of alice.\nIf eve is tall and dave is sad and eve is happy, then frank is a sibling of carol.\nIf carol is a sibling of dave and car is small and dave is hungry, then dave is a friend of bob.\nIf alice is an enemy of alice, then george is happy.\nIf george is happy, then alice dislikes book.\nIf eve owns apple and alice is a friend of eve and dave dislikes pencil, then bob is sad.\nIf bob dislikes pencil, then dave is sad.\nIf carol is a parent of dave, then frank dislikes pencil.\nIf phone is wet and george likes carol and carol is happy, then eve is happy.\nIf george is a sibling of dave and bob owns phone, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is tall.\nbob dislikes car.\ncarol is a sibling of frank.\neve dislikes ball.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould carol is a sibling of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,george).",
    "c": "sad(frank) :- wet(car).\nparent(bob,frank) :- sad(frank).\ndislikes(frank,book) :- parent(bob,frank).\nlikes(frank,frank) :- dislikes(frank,book).\ncold :- likes(frank,frank).\nwet(car) :- cold.\nsunny :- sad(george), big(car), sunny.\nsunny :- parent(frank,alice), sunny, sunny.\nhappy(dave) :- happy(alice).\nhappy(eve) :- happy(carol), happy(dave), happy(eve).\nsibling(dave,george) :- owns(george,apple), likes(alice,eve).\nsunny :- likes(carol,pencil).\nsibling(alice,eve) :- hot, sibling(eve,eve).\nhappy(frank) :- cold, enemy(eve,carol).\nhot :- sunny.\nhot :- owns(frank,phone), sibling(bob,frank).\nsad(carol) :- owns(dave,pencil), sad(bob), sunny.\nsad(alice) :- likes(alice,dave).\nowns(frank,phone) :- happy(frank), wet(car).\nwet(car).\nlikes(bob,alice).\ndislikes(dave,george).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then frank is sad.\nIf frank is sad, then bob is a parent of frank.\nIf bob is a parent of frank, then frank dislikes book.\nIf frank dislikes book, then frank likes frank.\nIf frank likes frank, then it is cold.\nIf it is cold, then car is wet.\nIf george is sad and car is big and it is sunny, then it is sunny.\nIf frank is a parent of alice and it is sunny and it is sunny, then it is sunny.\nIf alice is happy, then dave is happy.\nIf carol is happy and dave is happy and eve is happy, then eve is happy.\nIf george owns apple and alice likes eve, then dave is a sibling of george.\nIf carol likes pencil, then it is sunny.\nIf it is hot and eve is a sibling of eve, then alice is a sibling of eve.\nIf it is cold and eve is an enemy of carol, then frank is happy.\nIf it is sunny, then it is hot.\nIf frank owns phone and bob is a sibling of frank, then it is hot.\nIf dave owns pencil and bob is sad and it is sunny, then carol is sad.\nIf alice likes dave, then alice is sad.\nIf frank is happy and car is wet, then frank owns phone.\n\nAnd the following facts:\ncar is wet.\nbob likes alice.\ndave dislikes george.\nbob likes ball.\n\nQUESTION:\nIs dave dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "sad(frank) :- wet(car).\nparent(bob,frank) :- sad(frank).\ndislikes(frank,book) :- parent(bob,frank).\nlikes(frank,frank) :- dislikes(frank,book).\ncold :- likes(frank,frank).\nwet(car) :- cold.\nsunny :- sad(george), big(car), sunny.\nsunny :- parent(frank,alice), sunny, sunny.\nhappy(dave) :- happy(alice).\nhappy(eve) :- happy(carol), happy(dave), happy(eve).\nsibling(dave,george) :- owns(george,apple), likes(alice,eve).\nsunny :- likes(carol,pencil).\nsibling(alice,eve) :- hot, sibling(eve,eve).\nhappy(frank) :- cold, enemy(eve,carol).\nhot :- sunny.\nhot :- owns(frank,phone), sibling(bob,frank).\nsad(carol) :- owns(dave,pencil), sad(bob), sunny.\nsad(alice) :- likes(alice,dave).\nowns(frank,phone) :- happy(frank), wet(car).\nwet(car).\nlikes(bob,alice).\ndislikes(dave,george).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then frank is sad.\nIf frank is sad, then bob is a parent of frank.\nIf bob is a parent of frank, then frank dislikes book.\nIf frank dislikes book, then frank likes frank.\nIf frank likes frank, then it is cold.\nIf it is cold, then car is wet.\nIf george is sad and car is big and it is sunny, then it is sunny.\nIf frank is a parent of alice and it is sunny and it is sunny, then it is sunny.\nIf alice is happy, then dave is happy.\nIf carol is happy and dave is happy and eve is happy, then eve is happy.\nIf george owns apple and alice likes eve, then dave is a sibling of george.\nIf carol likes pencil, then it is sunny.\nIf it is hot and eve is a sibling of eve, then alice is a sibling of eve.\nIf it is cold and eve is an enemy of carol, then frank is happy.\nIf it is sunny, then it is hot.\nIf frank owns phone and bob is a sibling of frank, then it is hot.\nIf dave owns pencil and bob is sad and it is sunny, then carol is sad.\nIf alice likes dave, then alice is sad.\nIf frank is happy and car is wet, then frank owns phone.\n\nAnd the following facts:\ncar is wet.\nbob likes alice.\ndave dislikes george.\nbob likes ball.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,alice).",
    "c": "sad(frank) :- wet(car).\nparent(bob,frank) :- sad(frank).\ndislikes(frank,book) :- parent(bob,frank).\nlikes(frank,frank) :- dislikes(frank,book).\ncold :- likes(frank,frank).\nwet(car) :- cold.\nsunny :- sad(george), big(car), sunny.\nsunny :- parent(frank,alice), sunny, sunny.\nhappy(dave) :- happy(alice).\nhappy(eve) :- happy(carol), happy(dave), happy(eve).\nsibling(dave,george) :- owns(george,apple), likes(alice,eve).\nsunny :- likes(carol,pencil).\nsibling(alice,eve) :- hot, sibling(eve,eve).\nhappy(frank) :- cold, enemy(eve,carol).\nhot :- sunny.\nhot :- owns(frank,phone), sibling(bob,frank).\nsad(carol) :- owns(dave,pencil), sad(bob), sunny.\nsad(alice) :- likes(alice,dave).\nowns(frank,phone) :- happy(frank), wet(car).\nwet(car).\nlikes(bob,alice).\ndislikes(dave,george).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then frank is sad.\nIf frank is sad, then bob is a parent of frank.\nIf bob is a parent of frank, then frank dislikes book.\nIf frank dislikes book, then frank likes frank.\nIf frank likes frank, then it is cold.\nIf it is cold, then car is wet.\nIf george is sad and car is big and it is sunny, then it is sunny.\nIf frank is a parent of alice and it is sunny and it is sunny, then it is sunny.\nIf alice is happy, then dave is happy.\nIf carol is happy and dave is happy and eve is happy, then eve is happy.\nIf george owns apple and alice likes eve, then dave is a sibling of george.\nIf carol likes pencil, then it is sunny.\nIf it is hot and eve is a sibling of eve, then alice is a sibling of eve.\nIf it is cold and eve is an enemy of carol, then frank is happy.\nIf it is sunny, then it is hot.\nIf frank owns phone and bob is a sibling of frank, then it is hot.\nIf dave owns pencil and bob is sad and it is sunny, then carol is sad.\nIf alice likes dave, then alice is sad.\nIf frank is happy and car is wet, then frank owns phone.\n\nAnd the following facts:\ncar is wet.\nbob likes alice.\ndave dislikes george.\nbob likes ball.\n\nQUESTION:\nIs bob likes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,eve).",
    "c": "sad(frank) :- wet(car).\nparent(bob,frank) :- sad(frank).\ndislikes(frank,book) :- parent(bob,frank).\nlikes(frank,frank) :- dislikes(frank,book).\ncold :- likes(frank,frank).\nwet(car) :- cold.\nsunny :- sad(george), big(car), sunny.\nsunny :- parent(frank,alice), sunny, sunny.\nhappy(dave) :- happy(alice).\nhappy(eve) :- happy(carol), happy(dave), happy(eve).\nsibling(dave,george) :- owns(george,apple), likes(alice,eve).\nsunny :- likes(carol,pencil).\nsibling(alice,eve) :- hot, sibling(eve,eve).\nhappy(frank) :- cold, enemy(eve,carol).\nhot :- sunny.\nhot :- owns(frank,phone), sibling(bob,frank).\nsad(carol) :- owns(dave,pencil), sad(bob), sunny.\nsad(alice) :- likes(alice,dave).\nowns(frank,phone) :- happy(frank), wet(car).\nwet(car).\nlikes(bob,alice).\ndislikes(dave,george).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then frank is sad.\nIf frank is sad, then bob is a parent of frank.\nIf bob is a parent of frank, then frank dislikes book.\nIf frank dislikes book, then frank likes frank.\nIf frank likes frank, then it is cold.\nIf it is cold, then car is wet.\nIf george is sad and car is big and it is sunny, then it is sunny.\nIf frank is a parent of alice and it is sunny and it is sunny, then it is sunny.\nIf alice is happy, then dave is happy.\nIf carol is happy and dave is happy and eve is happy, then eve is happy.\nIf george owns apple and alice likes eve, then dave is a sibling of george.\nIf carol likes pencil, then it is sunny.\nIf it is hot and eve is a sibling of eve, then alice is a sibling of eve.\nIf it is cold and eve is an enemy of carol, then frank is happy.\nIf it is sunny, then it is hot.\nIf frank owns phone and bob is a sibling of frank, then it is hot.\nIf dave owns pencil and bob is sad and it is sunny, then carol is sad.\nIf alice likes dave, then alice is sad.\nIf frank is happy and car is wet, then frank owns phone.\n\nAnd the following facts:\ncar is wet.\nbob likes alice.\ndave dislikes george.\nbob likes ball.\n\nQUESTION:\nIs bob is a parent of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,eve).",
    "c": "sad(frank) :- wet(car).\nparent(bob,frank) :- sad(frank).\ndislikes(frank,book) :- parent(bob,frank).\nlikes(frank,frank) :- dislikes(frank,book).\ncold :- likes(frank,frank).\nwet(car) :- cold.\nsunny :- sad(george), big(car), sunny.\nsunny :- parent(frank,alice), sunny, sunny.\nhappy(dave) :- happy(alice).\nhappy(eve) :- happy(carol), happy(dave), happy(eve).\nsibling(dave,george) :- owns(george,apple), likes(alice,eve).\nsunny :- likes(carol,pencil).\nsibling(alice,eve) :- hot, sibling(eve,eve).\nhappy(frank) :- cold, enemy(eve,carol).\nhot :- sunny.\nhot :- owns(frank,phone), sibling(bob,frank).\nsad(carol) :- owns(dave,pencil), sad(bob), sunny.\nsad(alice) :- likes(alice,dave).\nowns(frank,phone) :- happy(frank), wet(car).\nwet(car).\nlikes(bob,alice).\ndislikes(dave,george).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then frank is sad.\nIf frank is sad, then bob is a parent of frank.\nIf bob is a parent of frank, then frank dislikes book.\nIf frank dislikes book, then frank likes frank.\nIf frank likes frank, then it is cold.\nIf it is cold, then car is wet.\nIf george is sad and car is big and it is sunny, then it is sunny.\nIf frank is a parent of alice and it is sunny and it is sunny, then it is sunny.\nIf alice is happy, then dave is happy.\nIf carol is happy and dave is happy and eve is happy, then eve is happy.\nIf george owns apple and alice likes eve, then dave is a sibling of george.\nIf carol likes pencil, then it is sunny.\nIf it is hot and eve is a sibling of eve, then alice is a sibling of eve.\nIf it is cold and eve is an enemy of carol, then frank is happy.\nIf it is sunny, then it is hot.\nIf frank owns phone and bob is a sibling of frank, then it is hot.\nIf dave owns pencil and bob is sad and it is sunny, then carol is sad.\nIf alice likes dave, then alice is sad.\nIf frank is happy and car is wet, then frank owns phone.\n\nAnd the following facts:\ncar is wet.\nbob likes alice.\ndave dislikes george.\nbob likes ball.\n\nQUESTION:\nIs frank is a parent of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,george).",
    "c": "sad(frank) :- wet(car).\nparent(bob,frank) :- sad(frank).\ndislikes(frank,book) :- parent(bob,frank).\nlikes(frank,frank) :- dislikes(frank,book).\ncold :- likes(frank,frank).\nwet(car) :- cold.\nsunny :- sad(george), big(car), sunny.\nsunny :- parent(frank,alice), sunny, sunny.\nhappy(dave) :- happy(alice).\nhappy(eve) :- happy(carol), happy(dave), happy(eve).\nsibling(dave,george) :- owns(george,apple), likes(alice,eve).\nsunny :- likes(carol,pencil).\nsibling(alice,eve) :- hot, sibling(eve,eve).\nhappy(frank) :- cold, enemy(eve,carol).\nhot :- sunny.\nhot :- owns(frank,phone), sibling(bob,frank).\nsad(carol) :- owns(dave,pencil), sad(bob), sunny.\nsad(alice) :- likes(alice,dave).\nowns(frank,phone) :- happy(frank), wet(car).\nwet(car).\nlikes(bob,alice).\nlikes(bob,ball).",
    "natural language": "You are given the following rules:\nIf car is wet, then frank is sad.\nIf frank is sad, then bob is a parent of frank.\nIf bob is a parent of frank, then frank dislikes book.\nIf frank dislikes book, then frank likes frank.\nIf frank likes frank, then it is cold.\nIf it is cold, then car is wet.\nIf george is sad and car is big and it is sunny, then it is sunny.\nIf frank is a parent of alice and it is sunny and it is sunny, then it is sunny.\nIf alice is happy, then dave is happy.\nIf carol is happy and dave is happy and eve is happy, then eve is happy.\nIf george owns apple and alice likes eve, then dave is a sibling of george.\nIf carol likes pencil, then it is sunny.\nIf it is hot and eve is a sibling of eve, then alice is a sibling of eve.\nIf it is cold and eve is an enemy of carol, then frank is happy.\nIf it is sunny, then it is hot.\nIf frank owns phone and bob is a sibling of frank, then it is hot.\nIf dave owns pencil and bob is sad and it is sunny, then carol is sad.\nIf alice likes dave, then alice is sad.\nIf frank is happy and car is wet, then frank owns phone.\n\nAnd the following facts:\ncar is wet.\nbob likes alice.\ndave dislikes george.\nbob likes ball.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould dave dislikes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "sad(frank) :- wet(car).\nparent(bob,frank) :- sad(frank).\ndislikes(frank,book) :- parent(bob,frank).\nlikes(frank,frank) :- dislikes(frank,book).\ncold :- likes(frank,frank).\nwet(car) :- cold.\nsunny :- sad(george), big(car), sunny.\nsunny :- parent(frank,alice), sunny, sunny.\nhappy(dave) :- happy(alice).\nhappy(eve) :- happy(carol), happy(dave), happy(eve).\nsibling(dave,george) :- owns(george,apple), likes(alice,eve).\nsunny :- likes(carol,pencil).\nsibling(alice,eve) :- hot, sibling(eve,eve).\nhappy(frank) :- cold, enemy(eve,carol).\nhot :- sunny.\nhot :- owns(frank,phone), sibling(bob,frank).\nsad(carol) :- owns(dave,pencil), sad(bob), sunny.\nsad(alice) :- likes(alice,dave).\nowns(frank,phone) :- happy(frank), wet(car).\nlikes(bob,alice).\ndislikes(dave,george).\nlikes(bob,ball).",
    "natural language": "You are given the following rules:\nIf car is wet, then frank is sad.\nIf frank is sad, then bob is a parent of frank.\nIf bob is a parent of frank, then frank dislikes book.\nIf frank dislikes book, then frank likes frank.\nIf frank likes frank, then it is cold.\nIf it is cold, then car is wet.\nIf george is sad and car is big and it is sunny, then it is sunny.\nIf frank is a parent of alice and it is sunny and it is sunny, then it is sunny.\nIf alice is happy, then dave is happy.\nIf carol is happy and dave is happy and eve is happy, then eve is happy.\nIf george owns apple and alice likes eve, then dave is a sibling of george.\nIf carol likes pencil, then it is sunny.\nIf it is hot and eve is a sibling of eve, then alice is a sibling of eve.\nIf it is cold and eve is an enemy of carol, then frank is happy.\nIf it is sunny, then it is hot.\nIf frank owns phone and bob is a sibling of frank, then it is hot.\nIf dave owns pencil and bob is sad and it is sunny, then carol is sad.\nIf alice likes dave, then alice is sad.\nIf frank is happy and car is wet, then frank owns phone.\n\nAnd the following facts:\ncar is wet.\nbob likes alice.\ndave dislikes george.\nbob likes ball.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould car is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,ball).",
    "c": "sad(frank) :- wet(car).\nparent(bob,frank) :- sad(frank).\ndislikes(frank,book) :- parent(bob,frank).\nlikes(frank,frank) :- dislikes(frank,book).\ncold :- likes(frank,frank).\nwet(car) :- cold.\nsunny :- sad(george), big(car), sunny.\nsunny :- parent(frank,alice), sunny, sunny.\nhappy(dave) :- happy(alice).\nhappy(eve) :- happy(carol), happy(dave), happy(eve).\nsibling(dave,george) :- owns(george,apple), likes(alice,eve).\nsunny :- likes(carol,pencil).\nsibling(alice,eve) :- hot, sibling(eve,eve).\nhappy(frank) :- cold, enemy(eve,carol).\nhot :- sunny.\nhot :- owns(frank,phone), sibling(bob,frank).\nsad(carol) :- owns(dave,pencil), sad(bob), sunny.\nsad(alice) :- likes(alice,dave).\nowns(frank,phone) :- happy(frank), wet(car).\nwet(car).\nlikes(bob,alice).\ndislikes(dave,george).",
    "natural language": "You are given the following rules:\nIf car is wet, then frank is sad.\nIf frank is sad, then bob is a parent of frank.\nIf bob is a parent of frank, then frank dislikes book.\nIf frank dislikes book, then frank likes frank.\nIf frank likes frank, then it is cold.\nIf it is cold, then car is wet.\nIf george is sad and car is big and it is sunny, then it is sunny.\nIf frank is a parent of alice and it is sunny and it is sunny, then it is sunny.\nIf alice is happy, then dave is happy.\nIf carol is happy and dave is happy and eve is happy, then eve is happy.\nIf george owns apple and alice likes eve, then dave is a sibling of george.\nIf carol likes pencil, then it is sunny.\nIf it is hot and eve is a sibling of eve, then alice is a sibling of eve.\nIf it is cold and eve is an enemy of carol, then frank is happy.\nIf it is sunny, then it is hot.\nIf frank owns phone and bob is a sibling of frank, then it is hot.\nIf dave owns pencil and bob is sad and it is sunny, then carol is sad.\nIf alice likes dave, then alice is sad.\nIf frank is happy and car is wet, then frank owns phone.\n\nAnd the following facts:\ncar is wet.\nbob likes alice.\ndave dislikes george.\nbob likes ball.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould bob likes ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,eve).",
    "c": "small(book) :- sad(carol).\nsmall(pencil) :- small(book).\nfriend(alice,carol) :- small(pencil).\nsibling(bob,george) :- friend(alice,carol).\nlikes(bob,eve) :- sibling(bob,george).\nparent(carol,dave) :- likes(bob,eve).\nhot :- likes(carol,book).\nhot :- dislikes(george,dave), cold, happy(alice).\ndislikes(alice,bob) :- sibling(bob,bob).\ndislikes(alice,apple) :- parent(george,alice).\nhungry(dave) :- sibling(alice,eve).\nhot :- small(phone), sunny, likes(dave,ball).\nbig(car) :- hungry(eve), wet(book).\nhungry(dave) :- owns(eve,phone).\nsad(carol) :- cold.\nsmall(apple) :- tall(george), sad(eve).\nbig(car) :- big(phone), big(pencil), sunny.\ndislikes(dave,apple) :- small(phone), hot.\nsmall(book) :- friend(alice,frank).\nsad(carol).\nwet(apple).\nfriend(dave,eve).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf carol is sad, then book is small.\nIf book is small, then pencil is small.\nIf pencil is small, then alice is a friend of carol.\nIf alice is a friend of carol, then bob is a sibling of george.\nIf bob is a sibling of george, then bob likes eve.\nIf bob likes eve, then carol is a parent of dave.\nIf carol likes book, then it is hot.\nIf george dislikes dave and it is cold and alice is happy, then it is hot.\nIf bob is a sibling of bob, then alice dislikes bob.\nIf george is a parent of alice, then alice dislikes apple.\nIf alice is a sibling of eve, then dave is hungry.\nIf phone is small and it is sunny and dave likes ball, then it is hot.\nIf eve is hungry and book is wet, then car is big.\nIf eve owns phone, then dave is hungry.\nIf it is cold, then carol is sad.\nIf george is tall and eve is sad, then apple is small.\nIf phone is big and pencil is big and it is sunny, then car is big.\nIf phone is small and it is hot, then dave dislikes apple.\nIf alice is a friend of frank, then book is small.\n\nAnd the following facts:\ncarol is sad.\napple is wet.\ndave is a friend of eve.\ndave likes apple.\n\nQUESTION:\nIs bob likes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "small(book) :- sad(carol).\nsmall(pencil) :- small(book).\nfriend(alice,carol) :- small(pencil).\nsibling(bob,george) :- friend(alice,carol).\nlikes(bob,eve) :- sibling(bob,george).\nparent(carol,dave) :- likes(bob,eve).\nhot :- likes(carol,book).\nhot :- dislikes(george,dave), cold, happy(alice).\ndislikes(alice,bob) :- sibling(bob,bob).\ndislikes(alice,apple) :- parent(george,alice).\nhungry(dave) :- sibling(alice,eve).\nhot :- small(phone), sunny, likes(dave,ball).\nbig(car) :- hungry(eve), wet(book).\nhungry(dave) :- owns(eve,phone).\nsad(carol) :- cold.\nsmall(apple) :- tall(george), sad(eve).\nbig(car) :- big(phone), big(pencil), sunny.\ndislikes(dave,apple) :- small(phone), hot.\nsmall(book) :- friend(alice,frank).\nsad(carol).\nwet(apple).\nfriend(dave,eve).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf carol is sad, then book is small.\nIf book is small, then pencil is small.\nIf pencil is small, then alice is a friend of carol.\nIf alice is a friend of carol, then bob is a sibling of george.\nIf bob is a sibling of george, then bob likes eve.\nIf bob likes eve, then carol is a parent of dave.\nIf carol likes book, then it is hot.\nIf george dislikes dave and it is cold and alice is happy, then it is hot.\nIf bob is a sibling of bob, then alice dislikes bob.\nIf george is a parent of alice, then alice dislikes apple.\nIf alice is a sibling of eve, then dave is hungry.\nIf phone is small and it is sunny and dave likes ball, then it is hot.\nIf eve is hungry and book is wet, then car is big.\nIf eve owns phone, then dave is hungry.\nIf it is cold, then carol is sad.\nIf george is tall and eve is sad, then apple is small.\nIf phone is big and pencil is big and it is sunny, then car is big.\nIf phone is small and it is hot, then dave dislikes apple.\nIf alice is a friend of frank, then book is small.\n\nAnd the following facts:\ncarol is sad.\napple is wet.\ndave is a friend of eve.\ndave likes apple.\n\nQUESTION:\nIs alice is a friend of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,george).",
    "c": "small(book) :- sad(carol).\nsmall(pencil) :- small(book).\nfriend(alice,carol) :- small(pencil).\nsibling(bob,george) :- friend(alice,carol).\nlikes(bob,eve) :- sibling(bob,george).\nparent(carol,dave) :- likes(bob,eve).\nhot :- likes(carol,book).\nhot :- dislikes(george,dave), cold, happy(alice).\ndislikes(alice,bob) :- sibling(bob,bob).\ndislikes(alice,apple) :- parent(george,alice).\nhungry(dave) :- sibling(alice,eve).\nhot :- small(phone), sunny, likes(dave,ball).\nbig(car) :- hungry(eve), wet(book).\nhungry(dave) :- owns(eve,phone).\nsad(carol) :- cold.\nsmall(apple) :- tall(george), sad(eve).\nbig(car) :- big(phone), big(pencil), sunny.\ndislikes(dave,apple) :- small(phone), hot.\nsmall(book) :- friend(alice,frank).\nsad(carol).\nwet(apple).\nfriend(dave,eve).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf carol is sad, then book is small.\nIf book is small, then pencil is small.\nIf pencil is small, then alice is a friend of carol.\nIf alice is a friend of carol, then bob is a sibling of george.\nIf bob is a sibling of george, then bob likes eve.\nIf bob likes eve, then carol is a parent of dave.\nIf carol likes book, then it is hot.\nIf george dislikes dave and it is cold and alice is happy, then it is hot.\nIf bob is a sibling of bob, then alice dislikes bob.\nIf george is a parent of alice, then alice dislikes apple.\nIf alice is a sibling of eve, then dave is hungry.\nIf phone is small and it is sunny and dave likes ball, then it is hot.\nIf eve is hungry and book is wet, then car is big.\nIf eve owns phone, then dave is hungry.\nIf it is cold, then carol is sad.\nIf george is tall and eve is sad, then apple is small.\nIf phone is big and pencil is big and it is sunny, then car is big.\nIf phone is small and it is hot, then dave dislikes apple.\nIf alice is a friend of frank, then book is small.\n\nAnd the following facts:\ncarol is sad.\napple is wet.\ndave is a friend of eve.\ndave likes apple.\n\nQUESTION:\nIs bob is a sibling of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,george).",
    "c": "small(book) :- sad(carol).\nsmall(pencil) :- small(book).\nfriend(alice,carol) :- small(pencil).\nsibling(bob,george) :- friend(alice,carol).\nlikes(bob,eve) :- sibling(bob,george).\nparent(carol,dave) :- likes(bob,eve).\nhot :- likes(carol,book).\nhot :- dislikes(george,dave), cold, happy(alice).\ndislikes(alice,bob) :- sibling(bob,bob).\ndislikes(alice,apple) :- parent(george,alice).\nhungry(dave) :- sibling(alice,eve).\nhot :- small(phone), sunny, likes(dave,ball).\nbig(car) :- hungry(eve), wet(book).\nhungry(dave) :- owns(eve,phone).\nsad(carol) :- cold.\nsmall(apple) :- tall(george), sad(eve).\nbig(car) :- big(phone), big(pencil), sunny.\ndislikes(dave,apple) :- small(phone), hot.\nsmall(book) :- friend(alice,frank).\nsad(carol).\nwet(apple).\nfriend(dave,eve).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf carol is sad, then book is small.\nIf book is small, then pencil is small.\nIf pencil is small, then alice is a friend of carol.\nIf alice is a friend of carol, then bob is a sibling of george.\nIf bob is a sibling of george, then bob likes eve.\nIf bob likes eve, then carol is a parent of dave.\nIf carol likes book, then it is hot.\nIf george dislikes dave and it is cold and alice is happy, then it is hot.\nIf bob is a sibling of bob, then alice dislikes bob.\nIf george is a parent of alice, then alice dislikes apple.\nIf alice is a sibling of eve, then dave is hungry.\nIf phone is small and it is sunny and dave likes ball, then it is hot.\nIf eve is hungry and book is wet, then car is big.\nIf eve owns phone, then dave is hungry.\nIf it is cold, then carol is sad.\nIf george is tall and eve is sad, then apple is small.\nIf phone is big and pencil is big and it is sunny, then car is big.\nIf phone is small and it is hot, then dave dislikes apple.\nIf alice is a friend of frank, then book is small.\n\nAnd the following facts:\ncarol is sad.\napple is wet.\ndave is a friend of eve.\ndave likes apple.\n\nQUESTION:\nIs carol likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,alice).",
    "c": "small(book) :- sad(carol).\nsmall(pencil) :- small(book).\nfriend(alice,carol) :- small(pencil).\nsibling(bob,george) :- friend(alice,carol).\nlikes(bob,eve) :- sibling(bob,george).\nparent(carol,dave) :- likes(bob,eve).\nhot :- likes(carol,book).\nhot :- dislikes(george,dave), cold, happy(alice).\ndislikes(alice,bob) :- sibling(bob,bob).\ndislikes(alice,apple) :- parent(george,alice).\nhungry(dave) :- sibling(alice,eve).\nhot :- small(phone), sunny, likes(dave,ball).\nbig(car) :- hungry(eve), wet(book).\nhungry(dave) :- owns(eve,phone).\nsad(carol) :- cold.\nsmall(apple) :- tall(george), sad(eve).\nbig(car) :- big(phone), big(pencil), sunny.\ndislikes(dave,apple) :- small(phone), hot.\nsmall(book) :- friend(alice,frank).\nsad(carol).\nwet(apple).\nfriend(dave,eve).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf carol is sad, then book is small.\nIf book is small, then pencil is small.\nIf pencil is small, then alice is a friend of carol.\nIf alice is a friend of carol, then bob is a sibling of george.\nIf bob is a sibling of george, then bob likes eve.\nIf bob likes eve, then carol is a parent of dave.\nIf carol likes book, then it is hot.\nIf george dislikes dave and it is cold and alice is happy, then it is hot.\nIf bob is a sibling of bob, then alice dislikes bob.\nIf george is a parent of alice, then alice dislikes apple.\nIf alice is a sibling of eve, then dave is hungry.\nIf phone is small and it is sunny and dave likes ball, then it is hot.\nIf eve is hungry and book is wet, then car is big.\nIf eve owns phone, then dave is hungry.\nIf it is cold, then carol is sad.\nIf george is tall and eve is sad, then apple is small.\nIf phone is big and pencil is big and it is sunny, then car is big.\nIf phone is small and it is hot, then dave dislikes apple.\nIf alice is a friend of frank, then book is small.\n\nAnd the following facts:\ncarol is sad.\napple is wet.\ndave is a friend of eve.\ndave likes apple.\n\nQUESTION:\nIs dave dislikes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "small(book) :- sad(carol).\nsmall(pencil) :- small(book).\nfriend(alice,carol) :- small(pencil).\nsibling(bob,george) :- friend(alice,carol).\nlikes(bob,eve) :- sibling(bob,george).\nparent(carol,dave) :- likes(bob,eve).\nhot :- likes(carol,book).\nhot :- dislikes(george,dave), cold, happy(alice).\ndislikes(alice,bob) :- sibling(bob,bob).\ndislikes(alice,apple) :- parent(george,alice).\nhungry(dave) :- sibling(alice,eve).\nhot :- small(phone), sunny, likes(dave,ball).\nbig(car) :- hungry(eve), wet(book).\nhungry(dave) :- owns(eve,phone).\nsad(carol) :- cold.\nsmall(apple) :- tall(george), sad(eve).\nbig(car) :- big(phone), big(pencil), sunny.\ndislikes(dave,apple) :- small(phone), hot.\nsmall(book) :- friend(alice,frank).\nwet(apple).\nfriend(dave,eve).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf carol is sad, then book is small.\nIf book is small, then pencil is small.\nIf pencil is small, then alice is a friend of carol.\nIf alice is a friend of carol, then bob is a sibling of george.\nIf bob is a sibling of george, then bob likes eve.\nIf bob likes eve, then carol is a parent of dave.\nIf carol likes book, then it is hot.\nIf george dislikes dave and it is cold and alice is happy, then it is hot.\nIf bob is a sibling of bob, then alice dislikes bob.\nIf george is a parent of alice, then alice dislikes apple.\nIf alice is a sibling of eve, then dave is hungry.\nIf phone is small and it is sunny and dave likes ball, then it is hot.\nIf eve is hungry and book is wet, then car is big.\nIf eve owns phone, then dave is hungry.\nIf it is cold, then carol is sad.\nIf george is tall and eve is sad, then apple is small.\nIf phone is big and pencil is big and it is sunny, then car is big.\nIf phone is small and it is hot, then dave dislikes apple.\nIf alice is a friend of frank, then book is small.\n\nAnd the following facts:\ncarol is sad.\napple is wet.\ndave is a friend of eve.\ndave likes apple.\n\nOBSERVATION: carol is a parent of dave is true.\n\nQUESTION:\nCould carol is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "small(book) :- sad(carol).\nsmall(pencil) :- small(book).\nfriend(alice,carol) :- small(pencil).\nsibling(bob,george) :- friend(alice,carol).\nlikes(bob,eve) :- sibling(bob,george).\nparent(carol,dave) :- likes(bob,eve).\nhot :- likes(carol,book).\nhot :- dislikes(george,dave), cold, happy(alice).\ndislikes(alice,bob) :- sibling(bob,bob).\ndislikes(alice,apple) :- parent(george,alice).\nhungry(dave) :- sibling(alice,eve).\nhot :- small(phone), sunny, likes(dave,ball).\nbig(car) :- hungry(eve), wet(book).\nhungry(dave) :- owns(eve,phone).\nsad(carol) :- cold.\nsmall(apple) :- tall(george), sad(eve).\nbig(car) :- big(phone), big(pencil), sunny.\ndislikes(dave,apple) :- small(phone), hot.\nsmall(book) :- friend(alice,frank).\nsad(carol).\nwet(apple).\nfriend(dave,eve).",
    "natural language": "You are given the following rules:\nIf carol is sad, then book is small.\nIf book is small, then pencil is small.\nIf pencil is small, then alice is a friend of carol.\nIf alice is a friend of carol, then bob is a sibling of george.\nIf bob is a sibling of george, then bob likes eve.\nIf bob likes eve, then carol is a parent of dave.\nIf carol likes book, then it is hot.\nIf george dislikes dave and it is cold and alice is happy, then it is hot.\nIf bob is a sibling of bob, then alice dislikes bob.\nIf george is a parent of alice, then alice dislikes apple.\nIf alice is a sibling of eve, then dave is hungry.\nIf phone is small and it is sunny and dave likes ball, then it is hot.\nIf eve is hungry and book is wet, then car is big.\nIf eve owns phone, then dave is hungry.\nIf it is cold, then carol is sad.\nIf george is tall and eve is sad, then apple is small.\nIf phone is big and pencil is big and it is sunny, then car is big.\nIf phone is small and it is hot, then dave dislikes apple.\nIf alice is a friend of frank, then book is small.\n\nAnd the following facts:\ncarol is sad.\napple is wet.\ndave is a friend of eve.\ndave likes apple.\n\nOBSERVATION: carol is a parent of dave is true.\n\nQUESTION:\nCould dave likes apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "small(book) :- sad(carol).\nsmall(pencil) :- small(book).\nfriend(alice,carol) :- small(pencil).\nsibling(bob,george) :- friend(alice,carol).\nlikes(bob,eve) :- sibling(bob,george).\nparent(carol,dave) :- likes(bob,eve).\nhot :- likes(carol,book).\nhot :- dislikes(george,dave), cold, happy(alice).\ndislikes(alice,bob) :- sibling(bob,bob).\ndislikes(alice,apple) :- parent(george,alice).\nhungry(dave) :- sibling(alice,eve).\nhot :- small(phone), sunny, likes(dave,ball).\nbig(car) :- hungry(eve), wet(book).\nhungry(dave) :- owns(eve,phone).\nsad(carol) :- cold.\nsmall(apple) :- tall(george), sad(eve).\nbig(car) :- big(phone), big(pencil), sunny.\ndislikes(dave,apple) :- small(phone), hot.\nsmall(book) :- friend(alice,frank).\nsad(carol).\nfriend(dave,eve).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf carol is sad, then book is small.\nIf book is small, then pencil is small.\nIf pencil is small, then alice is a friend of carol.\nIf alice is a friend of carol, then bob is a sibling of george.\nIf bob is a sibling of george, then bob likes eve.\nIf bob likes eve, then carol is a parent of dave.\nIf carol likes book, then it is hot.\nIf george dislikes dave and it is cold and alice is happy, then it is hot.\nIf bob is a sibling of bob, then alice dislikes bob.\nIf george is a parent of alice, then alice dislikes apple.\nIf alice is a sibling of eve, then dave is hungry.\nIf phone is small and it is sunny and dave likes ball, then it is hot.\nIf eve is hungry and book is wet, then car is big.\nIf eve owns phone, then dave is hungry.\nIf it is cold, then carol is sad.\nIf george is tall and eve is sad, then apple is small.\nIf phone is big and pencil is big and it is sunny, then car is big.\nIf phone is small and it is hot, then dave dislikes apple.\nIf alice is a friend of frank, then book is small.\n\nAnd the following facts:\ncarol is sad.\napple is wet.\ndave is a friend of eve.\ndave likes apple.\n\nOBSERVATION: carol is a parent of dave is true.\n\nQUESTION:\nCould apple is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(eve,alice).",
    "c": "enemy(eve,alice) :- happy(frank).\ncold :- enemy(eve,alice).\nenemy(carol,alice) :- cold.\nsad(carol) :- enemy(carol,alice).\nfriend(george,carol) :- sad(carol).\nparent(alice,dave) :- friend(george,carol).\nhungry(george) :- parent(alice,dave).\nhappy(alice) :- hungry(george).\nwet(phone) :- happy(frank), happy(george), wet(apple).\nwet(pencil) :- sunny, small(apple).\ncold :- happy(eve), happy(alice), likes(eve,book).\ndislikes(bob,car) :- parent(george,dave), dislikes(eve,frank), cold.\nowns(alice,phone) :- big(apple), hungry(eve), enemy(george,frank).\nfriend(frank,george) :- wet(phone), friend(george,alice), sibling(frank,dave).\ndislikes(eve,dave) :- sibling(frank,alice), big(ball), dislikes(frank,ball).\nowns(frank,ball) :- likes(frank,dave).\ncold :- cold.\nfriend(bob,eve) :- friend(bob,dave), friend(carol,carol), tall(eve).\nhungry(carol) :- hungry(dave), owns(frank,apple).\nhappy(frank).\nlikes(bob,phone).\nfriend(frank,bob).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is cold.\nIf it is cold, then carol is an enemy of alice.\nIf carol is an enemy of alice, then carol is sad.\nIf carol is sad, then george is a friend of carol.\nIf george is a friend of carol, then alice is a parent of dave.\nIf alice is a parent of dave, then george is hungry.\nIf george is hungry, then alice is happy.\nIf frank is happy and george is happy and apple is wet, then phone is wet.\nIf it is sunny and apple is small, then pencil is wet.\nIf eve is happy and alice is happy and eve likes book, then it is cold.\nIf george is a parent of dave and eve dislikes frank and it is cold, then bob dislikes car.\nIf apple is big and eve is hungry and george is an enemy of frank, then alice owns phone.\nIf phone is wet and george is a friend of alice and frank is a sibling of dave, then frank is a friend of george.\nIf frank is a sibling of alice and ball is big and frank dislikes ball, then eve dislikes dave.\nIf frank likes dave, then frank owns ball.\nIf it is cold, then it is cold.\nIf bob is a friend of dave and carol is a friend of carol and eve is tall, then bob is a friend of eve.\nIf dave is hungry and frank owns apple, then carol is hungry.\n\nAnd the following facts:\nfrank is happy.\nbob likes phone.\nfrank is a friend of bob.\nphone is small.\n\nQUESTION:\nIs eve is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "enemy(eve,alice) :- happy(frank).\ncold :- enemy(eve,alice).\nenemy(carol,alice) :- cold.\nsad(carol) :- enemy(carol,alice).\nfriend(george,carol) :- sad(carol).\nparent(alice,dave) :- friend(george,carol).\nhungry(george) :- parent(alice,dave).\nhappy(alice) :- hungry(george).\nwet(phone) :- happy(frank), happy(george), wet(apple).\nwet(pencil) :- sunny, small(apple).\ncold :- happy(eve), happy(alice), likes(eve,book).\ndislikes(bob,car) :- parent(george,dave), dislikes(eve,frank), cold.\nowns(alice,phone) :- big(apple), hungry(eve), enemy(george,frank).\nfriend(frank,george) :- wet(phone), friend(george,alice), sibling(frank,dave).\ndislikes(eve,dave) :- sibling(frank,alice), big(ball), dislikes(frank,ball).\nowns(frank,ball) :- likes(frank,dave).\ncold :- cold.\nfriend(bob,eve) :- friend(bob,dave), friend(carol,carol), tall(eve).\nhungry(carol) :- hungry(dave), owns(frank,apple).\nhappy(frank).\nlikes(bob,phone).\nfriend(frank,bob).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is cold.\nIf it is cold, then carol is an enemy of alice.\nIf carol is an enemy of alice, then carol is sad.\nIf carol is sad, then george is a friend of carol.\nIf george is a friend of carol, then alice is a parent of dave.\nIf alice is a parent of dave, then george is hungry.\nIf george is hungry, then alice is happy.\nIf frank is happy and george is happy and apple is wet, then phone is wet.\nIf it is sunny and apple is small, then pencil is wet.\nIf eve is happy and alice is happy and eve likes book, then it is cold.\nIf george is a parent of dave and eve dislikes frank and it is cold, then bob dislikes car.\nIf apple is big and eve is hungry and george is an enemy of frank, then alice owns phone.\nIf phone is wet and george is a friend of alice and frank is a sibling of dave, then frank is a friend of george.\nIf frank is a sibling of alice and ball is big and frank dislikes ball, then eve dislikes dave.\nIf frank likes dave, then frank owns ball.\nIf it is cold, then it is cold.\nIf bob is a friend of dave and carol is a friend of carol and eve is tall, then bob is a friend of eve.\nIf dave is hungry and frank owns apple, then carol is hungry.\n\nAnd the following facts:\nfrank is happy.\nbob likes phone.\nfrank is a friend of bob.\nphone is small.\n\nQUESTION:\nIs bob likes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "enemy(eve,alice) :- happy(frank).\ncold :- enemy(eve,alice).\nenemy(carol,alice) :- cold.\nsad(carol) :- enemy(carol,alice).\nfriend(george,carol) :- sad(carol).\nparent(alice,dave) :- friend(george,carol).\nhungry(george) :- parent(alice,dave).\nhappy(alice) :- hungry(george).\nwet(phone) :- happy(frank), happy(george), wet(apple).\nwet(pencil) :- sunny, small(apple).\ncold :- happy(eve), happy(alice), likes(eve,book).\ndislikes(bob,car) :- parent(george,dave), dislikes(eve,frank), cold.\nowns(alice,phone) :- big(apple), hungry(eve), enemy(george,frank).\nfriend(frank,george) :- wet(phone), friend(george,alice), sibling(frank,dave).\ndislikes(eve,dave) :- sibling(frank,alice), big(ball), dislikes(frank,ball).\nowns(frank,ball) :- likes(frank,dave).\ncold :- cold.\nfriend(bob,eve) :- friend(bob,dave), friend(carol,carol), tall(eve).\nhungry(carol) :- hungry(dave), owns(frank,apple).\nhappy(frank).\nlikes(bob,phone).\nfriend(frank,bob).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is cold.\nIf it is cold, then carol is an enemy of alice.\nIf carol is an enemy of alice, then carol is sad.\nIf carol is sad, then george is a friend of carol.\nIf george is a friend of carol, then alice is a parent of dave.\nIf alice is a parent of dave, then george is hungry.\nIf george is hungry, then alice is happy.\nIf frank is happy and george is happy and apple is wet, then phone is wet.\nIf it is sunny and apple is small, then pencil is wet.\nIf eve is happy and alice is happy and eve likes book, then it is cold.\nIf george is a parent of dave and eve dislikes frank and it is cold, then bob dislikes car.\nIf apple is big and eve is hungry and george is an enemy of frank, then alice owns phone.\nIf phone is wet and george is a friend of alice and frank is a sibling of dave, then frank is a friend of george.\nIf frank is a sibling of alice and ball is big and frank dislikes ball, then eve dislikes dave.\nIf frank likes dave, then frank owns ball.\nIf it is cold, then it is cold.\nIf bob is a friend of dave and carol is a friend of carol and eve is tall, then bob is a friend of eve.\nIf dave is hungry and frank owns apple, then carol is hungry.\n\nAnd the following facts:\nfrank is happy.\nbob likes phone.\nfrank is a friend of bob.\nphone is small.\n\nQUESTION:\nIs frank is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,bob).",
    "c": "enemy(eve,alice) :- happy(frank).\ncold :- enemy(eve,alice).\nenemy(carol,alice) :- cold.\nsad(carol) :- enemy(carol,alice).\nfriend(george,carol) :- sad(carol).\nparent(alice,dave) :- friend(george,carol).\nhungry(george) :- parent(alice,dave).\nhappy(alice) :- hungry(george).\nwet(phone) :- happy(frank), happy(george), wet(apple).\nwet(pencil) :- sunny, small(apple).\ncold :- happy(eve), happy(alice), likes(eve,book).\ndislikes(bob,car) :- parent(george,dave), dislikes(eve,frank), cold.\nowns(alice,phone) :- big(apple), hungry(eve), enemy(george,frank).\nfriend(frank,george) :- wet(phone), friend(george,alice), sibling(frank,dave).\ndislikes(eve,dave) :- sibling(frank,alice), big(ball), dislikes(frank,ball).\nowns(frank,ball) :- likes(frank,dave).\ncold :- cold.\nfriend(bob,eve) :- friend(bob,dave), friend(carol,carol), tall(eve).\nhungry(carol) :- hungry(dave), owns(frank,apple).\nhappy(frank).\nlikes(bob,phone).\nfriend(frank,bob).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is cold.\nIf it is cold, then carol is an enemy of alice.\nIf carol is an enemy of alice, then carol is sad.\nIf carol is sad, then george is a friend of carol.\nIf george is a friend of carol, then alice is a parent of dave.\nIf alice is a parent of dave, then george is hungry.\nIf george is hungry, then alice is happy.\nIf frank is happy and george is happy and apple is wet, then phone is wet.\nIf it is sunny and apple is small, then pencil is wet.\nIf eve is happy and alice is happy and eve likes book, then it is cold.\nIf george is a parent of dave and eve dislikes frank and it is cold, then bob dislikes car.\nIf apple is big and eve is hungry and george is an enemy of frank, then alice owns phone.\nIf phone is wet and george is a friend of alice and frank is a sibling of dave, then frank is a friend of george.\nIf frank is a sibling of alice and ball is big and frank dislikes ball, then eve dislikes dave.\nIf frank likes dave, then frank owns ball.\nIf it is cold, then it is cold.\nIf bob is a friend of dave and carol is a friend of carol and eve is tall, then bob is a friend of eve.\nIf dave is hungry and frank owns apple, then carol is hungry.\n\nAnd the following facts:\nfrank is happy.\nbob likes phone.\nfrank is a friend of bob.\nphone is small.\n\nQUESTION:\nIs carol is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,carol).",
    "c": "enemy(eve,alice) :- happy(frank).\ncold :- enemy(eve,alice).\nenemy(carol,alice) :- cold.\nsad(carol) :- enemy(carol,alice).\nfriend(george,carol) :- sad(carol).\nparent(alice,dave) :- friend(george,carol).\nhungry(george) :- parent(alice,dave).\nhappy(alice) :- hungry(george).\nwet(phone) :- happy(frank), happy(george), wet(apple).\nwet(pencil) :- sunny, small(apple).\ncold :- happy(eve), happy(alice), likes(eve,book).\ndislikes(bob,car) :- parent(george,dave), dislikes(eve,frank), cold.\nowns(alice,phone) :- big(apple), hungry(eve), enemy(george,frank).\nfriend(frank,george) :- wet(phone), friend(george,alice), sibling(frank,dave).\ndislikes(eve,dave) :- sibling(frank,alice), big(ball), dislikes(frank,ball).\nowns(frank,ball) :- likes(frank,dave).\ncold :- cold.\nfriend(bob,eve) :- friend(bob,dave), friend(carol,carol), tall(eve).\nhungry(carol) :- hungry(dave), owns(frank,apple).\nhappy(frank).\nlikes(bob,phone).\nfriend(frank,bob).\nsmall(phone).",
    "natural language": "You are given the following information:\nIf frank is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is cold.\nIf it is cold, then carol is an enemy of alice.\nIf carol is an enemy of alice, then carol is sad.\nIf carol is sad, then george is a friend of carol.\nIf george is a friend of carol, then alice is a parent of dave.\nIf alice is a parent of dave, then george is hungry.\nIf george is hungry, then alice is happy.\nIf frank is happy and george is happy and apple is wet, then phone is wet.\nIf it is sunny and apple is small, then pencil is wet.\nIf eve is happy and alice is happy and eve likes book, then it is cold.\nIf george is a parent of dave and eve dislikes frank and it is cold, then bob dislikes car.\nIf apple is big and eve is hungry and george is an enemy of frank, then alice owns phone.\nIf phone is wet and george is a friend of alice and frank is a sibling of dave, then frank is a friend of george.\nIf frank is a sibling of alice and ball is big and frank dislikes ball, then eve dislikes dave.\nIf frank likes dave, then frank owns ball.\nIf it is cold, then it is cold.\nIf bob is a friend of dave and carol is a friend of carol and eve is tall, then bob is a friend of eve.\nIf dave is hungry and frank owns apple, then carol is hungry.\n\nAnd the following facts:\nfrank is happy.\nbob likes phone.\nfrank is a friend of bob.\nphone is small.\n\nQUESTION:\nIs george is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "enemy(eve,alice) :- happy(frank).\ncold :- enemy(eve,alice).\nenemy(carol,alice) :- cold.\nsad(carol) :- enemy(carol,alice).\nfriend(george,carol) :- sad(carol).\nparent(alice,dave) :- friend(george,carol).\nhungry(george) :- parent(alice,dave).\nhappy(alice) :- hungry(george).\nwet(phone) :- happy(frank), happy(george), wet(apple).\nwet(pencil) :- sunny, small(apple).\ncold :- happy(eve), happy(alice), likes(eve,book).\ndislikes(bob,car) :- parent(george,dave), dislikes(eve,frank), cold.\nowns(alice,phone) :- big(apple), hungry(eve), enemy(george,frank).\nfriend(frank,george) :- wet(phone), friend(george,alice), sibling(frank,dave).\ndislikes(eve,dave) :- sibling(frank,alice), big(ball), dislikes(frank,ball).\nowns(frank,ball) :- likes(frank,dave).\ncold :- cold.\nfriend(bob,eve) :- friend(bob,dave), friend(carol,carol), tall(eve).\nhungry(carol) :- hungry(dave), owns(frank,apple).\nlikes(bob,phone).\nfriend(frank,bob).\nsmall(phone).",
    "natural language": "You are given the following rules:\nIf frank is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is cold.\nIf it is cold, then carol is an enemy of alice.\nIf carol is an enemy of alice, then carol is sad.\nIf carol is sad, then george is a friend of carol.\nIf george is a friend of carol, then alice is a parent of dave.\nIf alice is a parent of dave, then george is hungry.\nIf george is hungry, then alice is happy.\nIf frank is happy and george is happy and apple is wet, then phone is wet.\nIf it is sunny and apple is small, then pencil is wet.\nIf eve is happy and alice is happy and eve likes book, then it is cold.\nIf george is a parent of dave and eve dislikes frank and it is cold, then bob dislikes car.\nIf apple is big and eve is hungry and george is an enemy of frank, then alice owns phone.\nIf phone is wet and george is a friend of alice and frank is a sibling of dave, then frank is a friend of george.\nIf frank is a sibling of alice and ball is big and frank dislikes ball, then eve dislikes dave.\nIf frank likes dave, then frank owns ball.\nIf it is cold, then it is cold.\nIf bob is a friend of dave and carol is a friend of carol and eve is tall, then bob is a friend of eve.\nIf dave is hungry and frank owns apple, then carol is hungry.\n\nAnd the following facts:\nfrank is happy.\nbob likes phone.\nfrank is a friend of bob.\nphone is small.\n\nOBSERVATION: alice is happy is true.\n\nQUESTION:\nCould frank is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(frank,bob).",
    "c": "enemy(eve,alice) :- happy(frank).\ncold :- enemy(eve,alice).\nenemy(carol,alice) :- cold.\nsad(carol) :- enemy(carol,alice).\nfriend(george,carol) :- sad(carol).\nparent(alice,dave) :- friend(george,carol).\nhungry(george) :- parent(alice,dave).\nhappy(alice) :- hungry(george).\nwet(phone) :- happy(frank), happy(george), wet(apple).\nwet(pencil) :- sunny, small(apple).\ncold :- happy(eve), happy(alice), likes(eve,book).\ndislikes(bob,car) :- parent(george,dave), dislikes(eve,frank), cold.\nowns(alice,phone) :- big(apple), hungry(eve), enemy(george,frank).\nfriend(frank,george) :- wet(phone), friend(george,alice), sibling(frank,dave).\ndislikes(eve,dave) :- sibling(frank,alice), big(ball), dislikes(frank,ball).\nowns(frank,ball) :- likes(frank,dave).\ncold :- cold.\nfriend(bob,eve) :- friend(bob,dave), friend(carol,carol), tall(eve).\nhungry(carol) :- hungry(dave), owns(frank,apple).\nhappy(frank).\nlikes(bob,phone).\nsmall(phone).",
    "natural language": "You are given the following rules:\nIf frank is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is cold.\nIf it is cold, then carol is an enemy of alice.\nIf carol is an enemy of alice, then carol is sad.\nIf carol is sad, then george is a friend of carol.\nIf george is a friend of carol, then alice is a parent of dave.\nIf alice is a parent of dave, then george is hungry.\nIf george is hungry, then alice is happy.\nIf frank is happy and george is happy and apple is wet, then phone is wet.\nIf it is sunny and apple is small, then pencil is wet.\nIf eve is happy and alice is happy and eve likes book, then it is cold.\nIf george is a parent of dave and eve dislikes frank and it is cold, then bob dislikes car.\nIf apple is big and eve is hungry and george is an enemy of frank, then alice owns phone.\nIf phone is wet and george is a friend of alice and frank is a sibling of dave, then frank is a friend of george.\nIf frank is a sibling of alice and ball is big and frank dislikes ball, then eve dislikes dave.\nIf frank likes dave, then frank owns ball.\nIf it is cold, then it is cold.\nIf bob is a friend of dave and carol is a friend of carol and eve is tall, then bob is a friend of eve.\nIf dave is hungry and frank owns apple, then carol is hungry.\n\nAnd the following facts:\nfrank is happy.\nbob likes phone.\nfrank is a friend of bob.\nphone is small.\n\nOBSERVATION: alice is happy is true.\n\nQUESTION:\nCould frank is a friend of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "enemy(eve,alice) :- happy(frank).\ncold :- enemy(eve,alice).\nenemy(carol,alice) :- cold.\nsad(carol) :- enemy(carol,alice).\nfriend(george,carol) :- sad(carol).\nparent(alice,dave) :- friend(george,carol).\nhungry(george) :- parent(alice,dave).\nhappy(alice) :- hungry(george).\nwet(phone) :- happy(frank), happy(george), wet(apple).\nwet(pencil) :- sunny, small(apple).\ncold :- happy(eve), happy(alice), likes(eve,book).\ndislikes(bob,car) :- parent(george,dave), dislikes(eve,frank), cold.\nowns(alice,phone) :- big(apple), hungry(eve), enemy(george,frank).\nfriend(frank,george) :- wet(phone), friend(george,alice), sibling(frank,dave).\ndislikes(eve,dave) :- sibling(frank,alice), big(ball), dislikes(frank,ball).\nowns(frank,ball) :- likes(frank,dave).\ncold :- cold.\nfriend(bob,eve) :- friend(bob,dave), friend(carol,carol), tall(eve).\nhungry(carol) :- hungry(dave), owns(frank,apple).\nhappy(frank).\nfriend(frank,bob).\nsmall(phone).",
    "natural language": "You are given the following rules:\nIf frank is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is cold.\nIf it is cold, then carol is an enemy of alice.\nIf carol is an enemy of alice, then carol is sad.\nIf carol is sad, then george is a friend of carol.\nIf george is a friend of carol, then alice is a parent of dave.\nIf alice is a parent of dave, then george is hungry.\nIf george is hungry, then alice is happy.\nIf frank is happy and george is happy and apple is wet, then phone is wet.\nIf it is sunny and apple is small, then pencil is wet.\nIf eve is happy and alice is happy and eve likes book, then it is cold.\nIf george is a parent of dave and eve dislikes frank and it is cold, then bob dislikes car.\nIf apple is big and eve is hungry and george is an enemy of frank, then alice owns phone.\nIf phone is wet and george is a friend of alice and frank is a sibling of dave, then frank is a friend of george.\nIf frank is a sibling of alice and ball is big and frank dislikes ball, then eve dislikes dave.\nIf frank likes dave, then frank owns ball.\nIf it is cold, then it is cold.\nIf bob is a friend of dave and carol is a friend of carol and eve is tall, then bob is a friend of eve.\nIf dave is hungry and frank owns apple, then carol is hungry.\n\nAnd the following facts:\nfrank is happy.\nbob likes phone.\nfrank is a friend of bob.\nphone is small.\n\nOBSERVATION: alice is happy is true.\n\nQUESTION:\nCould bob likes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,ball).",
    "c": "tall(carol) :- hot.\nhappy(alice) :- tall(carol).\nhappy(alice) :- happy(alice).\nenemy(eve,alice) :- happy(alice).\nenemy(eve,bob) :- enemy(eve,alice).\ndislikes(bob,ball) :- enemy(eve,bob).\nbig(phone) :- dislikes(bob,ball).\nhungry(eve) :- big(phone).\nparent(dave,bob) :- big(apple).\nparent(carol,alice) :- hot.\nparent(frank,dave) :- sibling(bob,george), sunny, happy(dave).\ndislikes(frank,bob) :- big(car), sunny.\ndislikes(dave,george) :- hungry(carol).\nhot :- small(pencil), sunny.\nhot :- friend(alice,george), owns(eve,pencil).\nparent(alice,eve) :- owns(eve,book), cold.\nbig(apple) :- parent(carol,george), likes(frank,book).\nbig(car) :- enemy(bob,eve), sunny, parent(dave,dave).\nparent(bob,bob) :- parent(dave,bob), happy(frank), enemy(dave,george).\nhot.\nfriend(carol,george).\nowns(dave,car).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then alice is happy.\nIf alice is happy, then alice is happy.\nIf alice is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then eve is an enemy of bob.\nIf eve is an enemy of bob, then bob dislikes ball.\nIf bob dislikes ball, then phone is big.\nIf phone is big, then eve is hungry.\nIf apple is big, then dave is a parent of bob.\nIf it is hot, then carol is a parent of alice.\nIf bob is a sibling of george and it is sunny and dave is happy, then frank is a parent of dave.\nIf car is big and it is sunny, then frank dislikes bob.\nIf carol is hungry, then dave dislikes george.\nIf pencil is small and it is sunny, then it is hot.\nIf alice is a friend of george and eve owns pencil, then it is hot.\nIf eve owns book and it is cold, then alice is a parent of eve.\nIf carol is a parent of george and frank likes book, then apple is big.\nIf bob is an enemy of eve and it is sunny and dave is a parent of dave, then car is big.\nIf dave is a parent of bob and frank is happy and dave is an enemy of george, then bob is a parent of bob.\n\nAnd the following facts:\nit is hot.\ncarol is a friend of george.\ndave owns car.\ndave is an enemy of eve.\n\nQUESTION:\nIs bob dislikes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "tall(carol) :- hot.\nhappy(alice) :- tall(carol).\nhappy(alice) :- happy(alice).\nenemy(eve,alice) :- happy(alice).\nenemy(eve,bob) :- enemy(eve,alice).\ndislikes(bob,ball) :- enemy(eve,bob).\nbig(phone) :- dislikes(bob,ball).\nhungry(eve) :- big(phone).\nparent(dave,bob) :- big(apple).\nparent(carol,alice) :- hot.\nparent(frank,dave) :- sibling(bob,george), sunny, happy(dave).\ndislikes(frank,bob) :- big(car), sunny.\ndislikes(dave,george) :- hungry(carol).\nhot :- small(pencil), sunny.\nhot :- friend(alice,george), owns(eve,pencil).\nparent(alice,eve) :- owns(eve,book), cold.\nbig(apple) :- parent(carol,george), likes(frank,book).\nbig(car) :- enemy(bob,eve), sunny, parent(dave,dave).\nparent(bob,bob) :- parent(dave,bob), happy(frank), enemy(dave,george).\nhot.\nfriend(carol,george).\nowns(dave,car).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then alice is happy.\nIf alice is happy, then alice is happy.\nIf alice is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then eve is an enemy of bob.\nIf eve is an enemy of bob, then bob dislikes ball.\nIf bob dislikes ball, then phone is big.\nIf phone is big, then eve is hungry.\nIf apple is big, then dave is a parent of bob.\nIf it is hot, then carol is a parent of alice.\nIf bob is a sibling of george and it is sunny and dave is happy, then frank is a parent of dave.\nIf car is big and it is sunny, then frank dislikes bob.\nIf carol is hungry, then dave dislikes george.\nIf pencil is small and it is sunny, then it is hot.\nIf alice is a friend of george and eve owns pencil, then it is hot.\nIf eve owns book and it is cold, then alice is a parent of eve.\nIf carol is a parent of george and frank likes book, then apple is big.\nIf bob is an enemy of eve and it is sunny and dave is a parent of dave, then car is big.\nIf dave is a parent of bob and frank is happy and dave is an enemy of george, then bob is a parent of bob.\n\nAnd the following facts:\nit is hot.\ncarol is a friend of george.\ndave owns car.\ndave is an enemy of eve.\n\nQUESTION:\nIs eve is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,bob).",
    "c": "tall(carol) :- hot.\nhappy(alice) :- tall(carol).\nhappy(alice) :- happy(alice).\nenemy(eve,alice) :- happy(alice).\nenemy(eve,bob) :- enemy(eve,alice).\ndislikes(bob,ball) :- enemy(eve,bob).\nbig(phone) :- dislikes(bob,ball).\nhungry(eve) :- big(phone).\nparent(dave,bob) :- big(apple).\nparent(carol,alice) :- hot.\nparent(frank,dave) :- sibling(bob,george), sunny, happy(dave).\ndislikes(frank,bob) :- big(car), sunny.\ndislikes(dave,george) :- hungry(carol).\nhot :- small(pencil), sunny.\nhot :- friend(alice,george), owns(eve,pencil).\nparent(alice,eve) :- owns(eve,book), cold.\nbig(apple) :- parent(carol,george), likes(frank,book).\nbig(car) :- enemy(bob,eve), sunny, parent(dave,dave).\nparent(bob,bob) :- parent(dave,bob), happy(frank), enemy(dave,george).\nhot.\nfriend(carol,george).\nowns(dave,car).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then alice is happy.\nIf alice is happy, then alice is happy.\nIf alice is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then eve is an enemy of bob.\nIf eve is an enemy of bob, then bob dislikes ball.\nIf bob dislikes ball, then phone is big.\nIf phone is big, then eve is hungry.\nIf apple is big, then dave is a parent of bob.\nIf it is hot, then carol is a parent of alice.\nIf bob is a sibling of george and it is sunny and dave is happy, then frank is a parent of dave.\nIf car is big and it is sunny, then frank dislikes bob.\nIf carol is hungry, then dave dislikes george.\nIf pencil is small and it is sunny, then it is hot.\nIf alice is a friend of george and eve owns pencil, then it is hot.\nIf eve owns book and it is cold, then alice is a parent of eve.\nIf carol is a parent of george and frank likes book, then apple is big.\nIf bob is an enemy of eve and it is sunny and dave is a parent of dave, then car is big.\nIf dave is a parent of bob and frank is happy and dave is an enemy of george, then bob is a parent of bob.\n\nAnd the following facts:\nit is hot.\ncarol is a friend of george.\ndave owns car.\ndave is an enemy of eve.\n\nQUESTION:\nIs eve is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "tall(carol) :- hot.\nhappy(alice) :- tall(carol).\nhappy(alice) :- happy(alice).\nenemy(eve,alice) :- happy(alice).\nenemy(eve,bob) :- enemy(eve,alice).\ndislikes(bob,ball) :- enemy(eve,bob).\nbig(phone) :- dislikes(bob,ball).\nhungry(eve) :- big(phone).\nparent(dave,bob) :- big(apple).\nparent(carol,alice) :- hot.\nparent(frank,dave) :- sibling(bob,george), sunny, happy(dave).\ndislikes(frank,bob) :- big(car), sunny.\ndislikes(dave,george) :- hungry(carol).\nhot :- small(pencil), sunny.\nhot :- friend(alice,george), owns(eve,pencil).\nparent(alice,eve) :- owns(eve,book), cold.\nbig(apple) :- parent(carol,george), likes(frank,book).\nbig(car) :- enemy(bob,eve), sunny, parent(dave,dave).\nparent(bob,bob) :- parent(dave,bob), happy(frank), enemy(dave,george).\nhot.\nfriend(carol,george).\nowns(dave,car).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then alice is happy.\nIf alice is happy, then alice is happy.\nIf alice is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then eve is an enemy of bob.\nIf eve is an enemy of bob, then bob dislikes ball.\nIf bob dislikes ball, then phone is big.\nIf phone is big, then eve is hungry.\nIf apple is big, then dave is a parent of bob.\nIf it is hot, then carol is a parent of alice.\nIf bob is a sibling of george and it is sunny and dave is happy, then frank is a parent of dave.\nIf car is big and it is sunny, then frank dislikes bob.\nIf carol is hungry, then dave dislikes george.\nIf pencil is small and it is sunny, then it is hot.\nIf alice is a friend of george and eve owns pencil, then it is hot.\nIf eve owns book and it is cold, then alice is a parent of eve.\nIf carol is a parent of george and frank likes book, then apple is big.\nIf bob is an enemy of eve and it is sunny and dave is a parent of dave, then car is big.\nIf dave is a parent of bob and frank is happy and dave is an enemy of george, then bob is a parent of bob.\n\nAnd the following facts:\nit is hot.\ncarol is a friend of george.\ndave owns car.\ndave is an enemy of eve.\n\nQUESTION:\nIs frank is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,dave).",
    "c": "tall(carol) :- hot.\nhappy(alice) :- tall(carol).\nhappy(alice) :- happy(alice).\nenemy(eve,alice) :- happy(alice).\nenemy(eve,bob) :- enemy(eve,alice).\ndislikes(bob,ball) :- enemy(eve,bob).\nbig(phone) :- dislikes(bob,ball).\nhungry(eve) :- big(phone).\nparent(dave,bob) :- big(apple).\nparent(carol,alice) :- hot.\nparent(frank,dave) :- sibling(bob,george), sunny, happy(dave).\ndislikes(frank,bob) :- big(car), sunny.\ndislikes(dave,george) :- hungry(carol).\nhot :- small(pencil), sunny.\nhot :- friend(alice,george), owns(eve,pencil).\nparent(alice,eve) :- owns(eve,book), cold.\nbig(apple) :- parent(carol,george), likes(frank,book).\nbig(car) :- enemy(bob,eve), sunny, parent(dave,dave).\nparent(bob,bob) :- parent(dave,bob), happy(frank), enemy(dave,george).\nhot.\nfriend(carol,george).\nowns(dave,car).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then carol is tall.\nIf carol is tall, then alice is happy.\nIf alice is happy, then alice is happy.\nIf alice is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then eve is an enemy of bob.\nIf eve is an enemy of bob, then bob dislikes ball.\nIf bob dislikes ball, then phone is big.\nIf phone is big, then eve is hungry.\nIf apple is big, then dave is a parent of bob.\nIf it is hot, then carol is a parent of alice.\nIf bob is a sibling of george and it is sunny and dave is happy, then frank is a parent of dave.\nIf car is big and it is sunny, then frank dislikes bob.\nIf carol is hungry, then dave dislikes george.\nIf pencil is small and it is sunny, then it is hot.\nIf alice is a friend of george and eve owns pencil, then it is hot.\nIf eve owns book and it is cold, then alice is a parent of eve.\nIf carol is a parent of george and frank likes book, then apple is big.\nIf bob is an enemy of eve and it is sunny and dave is a parent of dave, then car is big.\nIf dave is a parent of bob and frank is happy and dave is an enemy of george, then bob is a parent of bob.\n\nAnd the following facts:\nit is hot.\ncarol is a friend of george.\ndave owns car.\ndave is an enemy of eve.\n\nQUESTION:\nIs george is an enemy of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "tall(carol) :- hot.\nhappy(alice) :- tall(carol).\nhappy(alice) :- happy(alice).\nenemy(eve,alice) :- happy(alice).\nenemy(eve,bob) :- enemy(eve,alice).\ndislikes(bob,ball) :- enemy(eve,bob).\nbig(phone) :- dislikes(bob,ball).\nhungry(eve) :- big(phone).\nparent(dave,bob) :- big(apple).\nparent(carol,alice) :- hot.\nparent(frank,dave) :- sibling(bob,george), sunny, happy(dave).\ndislikes(frank,bob) :- big(car), sunny.\ndislikes(dave,george) :- hungry(carol).\nhot :- small(pencil), sunny.\nhot :- friend(alice,george), owns(eve,pencil).\nparent(alice,eve) :- owns(eve,book), cold.\nbig(apple) :- parent(carol,george), likes(frank,book).\nbig(car) :- enemy(bob,eve), sunny, parent(dave,dave).\nparent(bob,bob) :- parent(dave,bob), happy(frank), enemy(dave,george).\nfriend(carol,george).\nowns(dave,car).\nenemy(dave,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then carol is tall.\nIf carol is tall, then alice is happy.\nIf alice is happy, then alice is happy.\nIf alice is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then eve is an enemy of bob.\nIf eve is an enemy of bob, then bob dislikes ball.\nIf bob dislikes ball, then phone is big.\nIf phone is big, then eve is hungry.\nIf apple is big, then dave is a parent of bob.\nIf it is hot, then carol is a parent of alice.\nIf bob is a sibling of george and it is sunny and dave is happy, then frank is a parent of dave.\nIf car is big and it is sunny, then frank dislikes bob.\nIf carol is hungry, then dave dislikes george.\nIf pencil is small and it is sunny, then it is hot.\nIf alice is a friend of george and eve owns pencil, then it is hot.\nIf eve owns book and it is cold, then alice is a parent of eve.\nIf carol is a parent of george and frank likes book, then apple is big.\nIf bob is an enemy of eve and it is sunny and dave is a parent of dave, then car is big.\nIf dave is a parent of bob and frank is happy and dave is an enemy of george, then bob is a parent of bob.\n\nAnd the following facts:\nit is hot.\ncarol is a friend of george.\ndave owns car.\ndave is an enemy of eve.\n\nOBSERVATION: eve is hungry is true.\n\nQUESTION:\nCould it is hot be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(dave,car).",
    "c": "tall(carol) :- hot.\nhappy(alice) :- tall(carol).\nhappy(alice) :- happy(alice).\nenemy(eve,alice) :- happy(alice).\nenemy(eve,bob) :- enemy(eve,alice).\ndislikes(bob,ball) :- enemy(eve,bob).\nbig(phone) :- dislikes(bob,ball).\nhungry(eve) :- big(phone).\nparent(dave,bob) :- big(apple).\nparent(carol,alice) :- hot.\nparent(frank,dave) :- sibling(bob,george), sunny, happy(dave).\ndislikes(frank,bob) :- big(car), sunny.\ndislikes(dave,george) :- hungry(carol).\nhot :- small(pencil), sunny.\nhot :- friend(alice,george), owns(eve,pencil).\nparent(alice,eve) :- owns(eve,book), cold.\nbig(apple) :- parent(carol,george), likes(frank,book).\nbig(car) :- enemy(bob,eve), sunny, parent(dave,dave).\nparent(bob,bob) :- parent(dave,bob), happy(frank), enemy(dave,george).\nhot.\nfriend(carol,george).\nenemy(dave,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then carol is tall.\nIf carol is tall, then alice is happy.\nIf alice is happy, then alice is happy.\nIf alice is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then eve is an enemy of bob.\nIf eve is an enemy of bob, then bob dislikes ball.\nIf bob dislikes ball, then phone is big.\nIf phone is big, then eve is hungry.\nIf apple is big, then dave is a parent of bob.\nIf it is hot, then carol is a parent of alice.\nIf bob is a sibling of george and it is sunny and dave is happy, then frank is a parent of dave.\nIf car is big and it is sunny, then frank dislikes bob.\nIf carol is hungry, then dave dislikes george.\nIf pencil is small and it is sunny, then it is hot.\nIf alice is a friend of george and eve owns pencil, then it is hot.\nIf eve owns book and it is cold, then alice is a parent of eve.\nIf carol is a parent of george and frank likes book, then apple is big.\nIf bob is an enemy of eve and it is sunny and dave is a parent of dave, then car is big.\nIf dave is a parent of bob and frank is happy and dave is an enemy of george, then bob is a parent of bob.\n\nAnd the following facts:\nit is hot.\ncarol is a friend of george.\ndave owns car.\ndave is an enemy of eve.\n\nOBSERVATION: eve is hungry is true.\n\nQUESTION:\nCould dave owns car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(carol,george).",
    "c": "tall(carol) :- hot.\nhappy(alice) :- tall(carol).\nhappy(alice) :- happy(alice).\nenemy(eve,alice) :- happy(alice).\nenemy(eve,bob) :- enemy(eve,alice).\ndislikes(bob,ball) :- enemy(eve,bob).\nbig(phone) :- dislikes(bob,ball).\nhungry(eve) :- big(phone).\nparent(dave,bob) :- big(apple).\nparent(carol,alice) :- hot.\nparent(frank,dave) :- sibling(bob,george), sunny, happy(dave).\ndislikes(frank,bob) :- big(car), sunny.\ndislikes(dave,george) :- hungry(carol).\nhot :- small(pencil), sunny.\nhot :- friend(alice,george), owns(eve,pencil).\nparent(alice,eve) :- owns(eve,book), cold.\nbig(apple) :- parent(carol,george), likes(frank,book).\nbig(car) :- enemy(bob,eve), sunny, parent(dave,dave).\nparent(bob,bob) :- parent(dave,bob), happy(frank), enemy(dave,george).\nhot.\nowns(dave,car).\nenemy(dave,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then carol is tall.\nIf carol is tall, then alice is happy.\nIf alice is happy, then alice is happy.\nIf alice is happy, then eve is an enemy of alice.\nIf eve is an enemy of alice, then eve is an enemy of bob.\nIf eve is an enemy of bob, then bob dislikes ball.\nIf bob dislikes ball, then phone is big.\nIf phone is big, then eve is hungry.\nIf apple is big, then dave is a parent of bob.\nIf it is hot, then carol is a parent of alice.\nIf bob is a sibling of george and it is sunny and dave is happy, then frank is a parent of dave.\nIf car is big and it is sunny, then frank dislikes bob.\nIf carol is hungry, then dave dislikes george.\nIf pencil is small and it is sunny, then it is hot.\nIf alice is a friend of george and eve owns pencil, then it is hot.\nIf eve owns book and it is cold, then alice is a parent of eve.\nIf carol is a parent of george and frank likes book, then apple is big.\nIf bob is an enemy of eve and it is sunny and dave is a parent of dave, then car is big.\nIf dave is a parent of bob and frank is happy and dave is an enemy of george, then bob is a parent of bob.\n\nAnd the following facts:\nit is hot.\ncarol is a friend of george.\ndave owns car.\ndave is an enemy of eve.\n\nOBSERVATION: eve is hungry is true.\n\nQUESTION:\nCould carol is a friend of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "enemy(alice,alice) :- hungry(frank).\ndislikes(eve,pencil) :- enemy(alice,alice).\nwet(pencil) :- dislikes(eve,pencil).\nsad(carol) :- wet(pencil).\nhungry(eve) :- sad(carol).\ncold :- hungry(eve).\nhot :- cold.\nhot :- hot.\nsibling(eve,carol) :- hot.\nhot :- sibling(eve,carol).\nhappy(bob) :- cold, happy(frank), sad(eve).\nhappy(dave) :- small(apple), parent(george,carol).\nbig(phone) :- big(phone), big(car), likes(dave,alice).\nbig(apple) :- sad(carol), likes(eve,bob).\nowns(dave,book) :- sad(alice), owns(george,ball), wet(phone).\nowns(dave,car) :- dislikes(bob,book), hot.\nhot :- wet(phone), likes(george,alice), big(apple).\nsad(alice) :- sad(frank), enemy(dave,carol), hungry(george).\nbig(pencil) :- hungry(carol), owns(eve,pencil).\nhungry(frank).\nlikes(alice,carol).\nparent(bob,george).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is hungry, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve dislikes pencil.\nIf eve dislikes pencil, then pencil is wet.\nIf pencil is wet, then carol is sad.\nIf carol is sad, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is hot.\nIf it is cold and frank is happy and eve is sad, then bob is happy.\nIf apple is small and george is a parent of carol, then dave is happy.\nIf phone is big and car is big and dave likes alice, then phone is big.\nIf carol is sad and eve likes bob, then apple is big.\nIf alice is sad and george owns ball and phone is wet, then dave owns book.\nIf bob dislikes book and it is hot, then dave owns car.\nIf phone is wet and george likes alice and apple is big, then it is hot.\nIf frank is sad and dave is an enemy of carol and george is hungry, then alice is sad.\nIf carol is hungry and eve owns pencil, then pencil is big.\n\nAnd the following facts:\nfrank is hungry.\nalice likes carol.\nbob is a parent of george.\ndave likes apple.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "enemy(alice,alice) :- hungry(frank).\ndislikes(eve,pencil) :- enemy(alice,alice).\nwet(pencil) :- dislikes(eve,pencil).\nsad(carol) :- wet(pencil).\nhungry(eve) :- sad(carol).\ncold :- hungry(eve).\nhot :- cold.\nhot :- hot.\nsibling(eve,carol) :- hot.\nhot :- sibling(eve,carol).\nhappy(bob) :- cold, happy(frank), sad(eve).\nhappy(dave) :- small(apple), parent(george,carol).\nbig(phone) :- big(phone), big(car), likes(dave,alice).\nbig(apple) :- sad(carol), likes(eve,bob).\nowns(dave,book) :- sad(alice), owns(george,ball), wet(phone).\nowns(dave,car) :- dislikes(bob,book), hot.\nhot :- wet(phone), likes(george,alice), big(apple).\nsad(alice) :- sad(frank), enemy(dave,carol), hungry(george).\nbig(pencil) :- hungry(carol), owns(eve,pencil).\nhungry(frank).\nlikes(alice,carol).\nparent(bob,george).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is hungry, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve dislikes pencil.\nIf eve dislikes pencil, then pencil is wet.\nIf pencil is wet, then carol is sad.\nIf carol is sad, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is hot.\nIf it is cold and frank is happy and eve is sad, then bob is happy.\nIf apple is small and george is a parent of carol, then dave is happy.\nIf phone is big and car is big and dave likes alice, then phone is big.\nIf carol is sad and eve likes bob, then apple is big.\nIf alice is sad and george owns ball and phone is wet, then dave owns book.\nIf bob dislikes book and it is hot, then dave owns car.\nIf phone is wet and george likes alice and apple is big, then it is hot.\nIf frank is sad and dave is an enemy of carol and george is hungry, then alice is sad.\nIf carol is hungry and eve owns pencil, then pencil is big.\n\nAnd the following facts:\nfrank is hungry.\nalice likes carol.\nbob is a parent of george.\ndave likes apple.\n\nQUESTION:\nIs carol is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,carol).",
    "c": "enemy(alice,alice) :- hungry(frank).\ndislikes(eve,pencil) :- enemy(alice,alice).\nwet(pencil) :- dislikes(eve,pencil).\nsad(carol) :- wet(pencil).\nhungry(eve) :- sad(carol).\ncold :- hungry(eve).\nhot :- cold.\nhot :- hot.\nsibling(eve,carol) :- hot.\nhot :- sibling(eve,carol).\nhappy(bob) :- cold, happy(frank), sad(eve).\nhappy(dave) :- small(apple), parent(george,carol).\nbig(phone) :- big(phone), big(car), likes(dave,alice).\nbig(apple) :- sad(carol), likes(eve,bob).\nowns(dave,book) :- sad(alice), owns(george,ball), wet(phone).\nowns(dave,car) :- dislikes(bob,book), hot.\nhot :- wet(phone), likes(george,alice), big(apple).\nsad(alice) :- sad(frank), enemy(dave,carol), hungry(george).\nbig(pencil) :- hungry(carol), owns(eve,pencil).\nhungry(frank).\nlikes(alice,carol).\nparent(bob,george).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is hungry, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve dislikes pencil.\nIf eve dislikes pencil, then pencil is wet.\nIf pencil is wet, then carol is sad.\nIf carol is sad, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is hot.\nIf it is cold and frank is happy and eve is sad, then bob is happy.\nIf apple is small and george is a parent of carol, then dave is happy.\nIf phone is big and car is big and dave likes alice, then phone is big.\nIf carol is sad and eve likes bob, then apple is big.\nIf alice is sad and george owns ball and phone is wet, then dave owns book.\nIf bob dislikes book and it is hot, then dave owns car.\nIf phone is wet and george likes alice and apple is big, then it is hot.\nIf frank is sad and dave is an enemy of carol and george is hungry, then alice is sad.\nIf carol is hungry and eve owns pencil, then pencil is big.\n\nAnd the following facts:\nfrank is hungry.\nalice likes carol.\nbob is a parent of george.\ndave likes apple.\n\nQUESTION:\nIs eve is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,carol).",
    "c": "enemy(alice,alice) :- hungry(frank).\ndislikes(eve,pencil) :- enemy(alice,alice).\nwet(pencil) :- dislikes(eve,pencil).\nsad(carol) :- wet(pencil).\nhungry(eve) :- sad(carol).\ncold :- hungry(eve).\nhot :- cold.\nhot :- hot.\nsibling(eve,carol) :- hot.\nhot :- sibling(eve,carol).\nhappy(bob) :- cold, happy(frank), sad(eve).\nhappy(dave) :- small(apple), parent(george,carol).\nbig(phone) :- big(phone), big(car), likes(dave,alice).\nbig(apple) :- sad(carol), likes(eve,bob).\nowns(dave,book) :- sad(alice), owns(george,ball), wet(phone).\nowns(dave,car) :- dislikes(bob,book), hot.\nhot :- wet(phone), likes(george,alice), big(apple).\nsad(alice) :- sad(frank), enemy(dave,carol), hungry(george).\nbig(pencil) :- hungry(carol), owns(eve,pencil).\nhungry(frank).\nlikes(alice,carol).\nparent(bob,george).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is hungry, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve dislikes pencil.\nIf eve dislikes pencil, then pencil is wet.\nIf pencil is wet, then carol is sad.\nIf carol is sad, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is hot.\nIf it is cold and frank is happy and eve is sad, then bob is happy.\nIf apple is small and george is a parent of carol, then dave is happy.\nIf phone is big and car is big and dave likes alice, then phone is big.\nIf carol is sad and eve likes bob, then apple is big.\nIf alice is sad and george owns ball and phone is wet, then dave owns book.\nIf bob dislikes book and it is hot, then dave owns car.\nIf phone is wet and george likes alice and apple is big, then it is hot.\nIf frank is sad and dave is an enemy of carol and george is hungry, then alice is sad.\nIf carol is hungry and eve owns pencil, then pencil is big.\n\nAnd the following facts:\nfrank is hungry.\nalice likes carol.\nbob is a parent of george.\ndave likes apple.\n\nQUESTION:\nIs eve is a parent of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,bob).",
    "c": "enemy(alice,alice) :- hungry(frank).\ndislikes(eve,pencil) :- enemy(alice,alice).\nwet(pencil) :- dislikes(eve,pencil).\nsad(carol) :- wet(pencil).\nhungry(eve) :- sad(carol).\ncold :- hungry(eve).\nhot :- cold.\nhot :- hot.\nsibling(eve,carol) :- hot.\nhot :- sibling(eve,carol).\nhappy(bob) :- cold, happy(frank), sad(eve).\nhappy(dave) :- small(apple), parent(george,carol).\nbig(phone) :- big(phone), big(car), likes(dave,alice).\nbig(apple) :- sad(carol), likes(eve,bob).\nowns(dave,book) :- sad(alice), owns(george,ball), wet(phone).\nowns(dave,car) :- dislikes(bob,book), hot.\nhot :- wet(phone), likes(george,alice), big(apple).\nsad(alice) :- sad(frank), enemy(dave,carol), hungry(george).\nbig(pencil) :- hungry(carol), owns(eve,pencil).\nhungry(frank).\nlikes(alice,carol).\nparent(bob,george).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is hungry, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve dislikes pencil.\nIf eve dislikes pencil, then pencil is wet.\nIf pencil is wet, then carol is sad.\nIf carol is sad, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is hot.\nIf it is cold and frank is happy and eve is sad, then bob is happy.\nIf apple is small and george is a parent of carol, then dave is happy.\nIf phone is big and car is big and dave likes alice, then phone is big.\nIf carol is sad and eve likes bob, then apple is big.\nIf alice is sad and george owns ball and phone is wet, then dave owns book.\nIf bob dislikes book and it is hot, then dave owns car.\nIf phone is wet and george likes alice and apple is big, then it is hot.\nIf frank is sad and dave is an enemy of carol and george is hungry, then alice is sad.\nIf carol is hungry and eve owns pencil, then pencil is big.\n\nAnd the following facts:\nfrank is hungry.\nalice likes carol.\nbob is a parent of george.\ndave likes apple.\n\nQUESTION:\nIs alice likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "enemy(alice,alice) :- hungry(frank).\ndislikes(eve,pencil) :- enemy(alice,alice).\nwet(pencil) :- dislikes(eve,pencil).\nsad(carol) :- wet(pencil).\nhungry(eve) :- sad(carol).\ncold :- hungry(eve).\nhot :- cold.\nhot :- hot.\nsibling(eve,carol) :- hot.\nhot :- sibling(eve,carol).\nhappy(bob) :- cold, happy(frank), sad(eve).\nhappy(dave) :- small(apple), parent(george,carol).\nbig(phone) :- big(phone), big(car), likes(dave,alice).\nbig(apple) :- sad(carol), likes(eve,bob).\nowns(dave,book) :- sad(alice), owns(george,ball), wet(phone).\nowns(dave,car) :- dislikes(bob,book), hot.\nhot :- wet(phone), likes(george,alice), big(apple).\nsad(alice) :- sad(frank), enemy(dave,carol), hungry(george).\nbig(pencil) :- hungry(carol), owns(eve,pencil).\nlikes(alice,carol).\nparent(bob,george).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve dislikes pencil.\nIf eve dislikes pencil, then pencil is wet.\nIf pencil is wet, then carol is sad.\nIf carol is sad, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is hot.\nIf it is cold and frank is happy and eve is sad, then bob is happy.\nIf apple is small and george is a parent of carol, then dave is happy.\nIf phone is big and car is big and dave likes alice, then phone is big.\nIf carol is sad and eve likes bob, then apple is big.\nIf alice is sad and george owns ball and phone is wet, then dave owns book.\nIf bob dislikes book and it is hot, then dave owns car.\nIf phone is wet and george likes alice and apple is big, then it is hot.\nIf frank is sad and dave is an enemy of carol and george is hungry, then alice is sad.\nIf carol is hungry and eve owns pencil, then pencil is big.\n\nAnd the following facts:\nfrank is hungry.\nalice likes carol.\nbob is a parent of george.\ndave likes apple.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould frank is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,carol).",
    "c": "enemy(alice,alice) :- hungry(frank).\ndislikes(eve,pencil) :- enemy(alice,alice).\nwet(pencil) :- dislikes(eve,pencil).\nsad(carol) :- wet(pencil).\nhungry(eve) :- sad(carol).\ncold :- hungry(eve).\nhot :- cold.\nhot :- hot.\nsibling(eve,carol) :- hot.\nhot :- sibling(eve,carol).\nhappy(bob) :- cold, happy(frank), sad(eve).\nhappy(dave) :- small(apple), parent(george,carol).\nbig(phone) :- big(phone), big(car), likes(dave,alice).\nbig(apple) :- sad(carol), likes(eve,bob).\nowns(dave,book) :- sad(alice), owns(george,ball), wet(phone).\nowns(dave,car) :- dislikes(bob,book), hot.\nhot :- wet(phone), likes(george,alice), big(apple).\nsad(alice) :- sad(frank), enemy(dave,carol), hungry(george).\nbig(pencil) :- hungry(carol), owns(eve,pencil).\nhungry(frank).\nparent(bob,george).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve dislikes pencil.\nIf eve dislikes pencil, then pencil is wet.\nIf pencil is wet, then carol is sad.\nIf carol is sad, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is hot.\nIf it is cold and frank is happy and eve is sad, then bob is happy.\nIf apple is small and george is a parent of carol, then dave is happy.\nIf phone is big and car is big and dave likes alice, then phone is big.\nIf carol is sad and eve likes bob, then apple is big.\nIf alice is sad and george owns ball and phone is wet, then dave owns book.\nIf bob dislikes book and it is hot, then dave owns car.\nIf phone is wet and george likes alice and apple is big, then it is hot.\nIf frank is sad and dave is an enemy of carol and george is hungry, then alice is sad.\nIf carol is hungry and eve owns pencil, then pencil is big.\n\nAnd the following facts:\nfrank is hungry.\nalice likes carol.\nbob is a parent of george.\ndave likes apple.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould alice likes carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(bob,george).",
    "c": "enemy(alice,alice) :- hungry(frank).\ndislikes(eve,pencil) :- enemy(alice,alice).\nwet(pencil) :- dislikes(eve,pencil).\nsad(carol) :- wet(pencil).\nhungry(eve) :- sad(carol).\ncold :- hungry(eve).\nhot :- cold.\nhot :- hot.\nsibling(eve,carol) :- hot.\nhot :- sibling(eve,carol).\nhappy(bob) :- cold, happy(frank), sad(eve).\nhappy(dave) :- small(apple), parent(george,carol).\nbig(phone) :- big(phone), big(car), likes(dave,alice).\nbig(apple) :- sad(carol), likes(eve,bob).\nowns(dave,book) :- sad(alice), owns(george,ball), wet(phone).\nowns(dave,car) :- dislikes(bob,book), hot.\nhot :- wet(phone), likes(george,alice), big(apple).\nsad(alice) :- sad(frank), enemy(dave,carol), hungry(george).\nbig(pencil) :- hungry(carol), owns(eve,pencil).\nhungry(frank).\nlikes(alice,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve dislikes pencil.\nIf eve dislikes pencil, then pencil is wet.\nIf pencil is wet, then carol is sad.\nIf carol is sad, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is hot.\nIf it is cold and frank is happy and eve is sad, then bob is happy.\nIf apple is small and george is a parent of carol, then dave is happy.\nIf phone is big and car is big and dave likes alice, then phone is big.\nIf carol is sad and eve likes bob, then apple is big.\nIf alice is sad and george owns ball and phone is wet, then dave owns book.\nIf bob dislikes book and it is hot, then dave owns car.\nIf phone is wet and george likes alice and apple is big, then it is hot.\nIf frank is sad and dave is an enemy of carol and george is hungry, then alice is sad.\nIf carol is hungry and eve owns pencil, then pencil is big.\n\nAnd the following facts:\nfrank is hungry.\nalice likes carol.\nbob is a parent of george.\ndave likes apple.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould bob is a parent of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "friend(eve,alice) :- likes(george,carol).\nwet(pencil) :- friend(eve,alice).\ncold :- wet(pencil).\nsibling(george,dave) :- cold.\nlikes(eve,dave) :- sibling(george,dave).\nhungry(alice) :- likes(eve,dave).\ncold :- hungry(alice).\nparent(dave,eve) :- cold.\nhot :- parent(dave,eve).\nhungry(alice) :- hot.\nsmall(car) :- cold.\nsmall(phone) :- owns(george,apple), wet(ball), enemy(bob,alice).\nfriend(frank,alice) :- hungry(eve).\nfriend(alice,carol) :- dislikes(dave,dave), owns(dave,apple).\nowns(dave,car) :- hot, big(phone).\ndislikes(frank,frank) :- hungry(bob), friend(eve,dave).\nfriend(george,george) :- small(pencil), big(apple).\ndislikes(frank,phone) :- owns(george,ball), tall(dave), owns(eve,pencil).\nowns(alice,car) :- big(apple).\nlikes(george,carol).\ndislikes(carol,phone).\nsibling(frank,eve).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf george likes carol, then eve is a friend of alice.\nIf eve is a friend of alice, then pencil is wet.\nIf pencil is wet, then it is cold.\nIf it is cold, then george is a sibling of dave.\nIf george is a sibling of dave, then eve likes dave.\nIf eve likes dave, then alice is hungry.\nIf alice is hungry, then it is cold.\nIf it is cold, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf it is cold, then car is small.\nIf george owns apple and ball is wet and bob is an enemy of alice, then phone is small.\nIf eve is hungry, then frank is a friend of alice.\nIf dave dislikes dave and dave owns apple, then alice is a friend of carol.\nIf it is hot and phone is big, then dave owns car.\nIf bob is hungry and eve is a friend of dave, then frank dislikes frank.\nIf pencil is small and apple is big, then george is a friend of george.\nIf george owns ball and dave is tall and eve owns pencil, then frank dislikes phone.\nIf apple is big, then alice owns car.\n\nAnd the following facts:\ngeorge likes carol.\ncarol dislikes phone.\nfrank is a sibling of eve.\neve is a parent of frank.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,carol).",
    "c": "friend(eve,alice) :- likes(george,carol).\nwet(pencil) :- friend(eve,alice).\ncold :- wet(pencil).\nsibling(george,dave) :- cold.\nlikes(eve,dave) :- sibling(george,dave).\nhungry(alice) :- likes(eve,dave).\ncold :- hungry(alice).\nparent(dave,eve) :- cold.\nhot :- parent(dave,eve).\nhungry(alice) :- hot.\nsmall(car) :- cold.\nsmall(phone) :- owns(george,apple), wet(ball), enemy(bob,alice).\nfriend(frank,alice) :- hungry(eve).\nfriend(alice,carol) :- dislikes(dave,dave), owns(dave,apple).\nowns(dave,car) :- hot, big(phone).\ndislikes(frank,frank) :- hungry(bob), friend(eve,dave).\nfriend(george,george) :- small(pencil), big(apple).\ndislikes(frank,phone) :- owns(george,ball), tall(dave), owns(eve,pencil).\nowns(alice,car) :- big(apple).\nlikes(george,carol).\ndislikes(carol,phone).\nsibling(frank,eve).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf george likes carol, then eve is a friend of alice.\nIf eve is a friend of alice, then pencil is wet.\nIf pencil is wet, then it is cold.\nIf it is cold, then george is a sibling of dave.\nIf george is a sibling of dave, then eve likes dave.\nIf eve likes dave, then alice is hungry.\nIf alice is hungry, then it is cold.\nIf it is cold, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf it is cold, then car is small.\nIf george owns apple and ball is wet and bob is an enemy of alice, then phone is small.\nIf eve is hungry, then frank is a friend of alice.\nIf dave dislikes dave and dave owns apple, then alice is a friend of carol.\nIf it is hot and phone is big, then dave owns car.\nIf bob is hungry and eve is a friend of dave, then frank dislikes frank.\nIf pencil is small and apple is big, then george is a friend of george.\nIf george owns ball and dave is tall and eve owns pencil, then frank dislikes phone.\nIf apple is big, then alice owns car.\n\nAnd the following facts:\ngeorge likes carol.\ncarol dislikes phone.\nfrank is a sibling of eve.\neve is a parent of frank.\n\nQUESTION:\nIs george likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "friend(eve,alice) :- likes(george,carol).\nwet(pencil) :- friend(eve,alice).\ncold :- wet(pencil).\nsibling(george,dave) :- cold.\nlikes(eve,dave) :- sibling(george,dave).\nhungry(alice) :- likes(eve,dave).\ncold :- hungry(alice).\nparent(dave,eve) :- cold.\nhot :- parent(dave,eve).\nhungry(alice) :- hot.\nsmall(car) :- cold.\nsmall(phone) :- owns(george,apple), wet(ball), enemy(bob,alice).\nfriend(frank,alice) :- hungry(eve).\nfriend(alice,carol) :- dislikes(dave,dave), owns(dave,apple).\nowns(dave,car) :- hot, big(phone).\ndislikes(frank,frank) :- hungry(bob), friend(eve,dave).\nfriend(george,george) :- small(pencil), big(apple).\ndislikes(frank,phone) :- owns(george,ball), tall(dave), owns(eve,pencil).\nowns(alice,car) :- big(apple).\nlikes(george,carol).\ndislikes(carol,phone).\nsibling(frank,eve).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf george likes carol, then eve is a friend of alice.\nIf eve is a friend of alice, then pencil is wet.\nIf pencil is wet, then it is cold.\nIf it is cold, then george is a sibling of dave.\nIf george is a sibling of dave, then eve likes dave.\nIf eve likes dave, then alice is hungry.\nIf alice is hungry, then it is cold.\nIf it is cold, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf it is cold, then car is small.\nIf george owns apple and ball is wet and bob is an enemy of alice, then phone is small.\nIf eve is hungry, then frank is a friend of alice.\nIf dave dislikes dave and dave owns apple, then alice is a friend of carol.\nIf it is hot and phone is big, then dave owns car.\nIf bob is hungry and eve is a friend of dave, then frank dislikes frank.\nIf pencil is small and apple is big, then george is a friend of george.\nIf george owns ball and dave is tall and eve owns pencil, then frank dislikes phone.\nIf apple is big, then alice owns car.\n\nAnd the following facts:\ngeorge likes carol.\ncarol dislikes phone.\nfrank is a sibling of eve.\neve is a parent of frank.\n\nQUESTION:\nIs alice is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,george).",
    "c": "friend(eve,alice) :- likes(george,carol).\nwet(pencil) :- friend(eve,alice).\ncold :- wet(pencil).\nsibling(george,dave) :- cold.\nlikes(eve,dave) :- sibling(george,dave).\nhungry(alice) :- likes(eve,dave).\ncold :- hungry(alice).\nparent(dave,eve) :- cold.\nhot :- parent(dave,eve).\nhungry(alice) :- hot.\nsmall(car) :- cold.\nsmall(phone) :- owns(george,apple), wet(ball), enemy(bob,alice).\nfriend(frank,alice) :- hungry(eve).\nfriend(alice,carol) :- dislikes(dave,dave), owns(dave,apple).\nowns(dave,car) :- hot, big(phone).\ndislikes(frank,frank) :- hungry(bob), friend(eve,dave).\nfriend(george,george) :- small(pencil), big(apple).\ndislikes(frank,phone) :- owns(george,ball), tall(dave), owns(eve,pencil).\nowns(alice,car) :- big(apple).\nlikes(george,carol).\ndislikes(carol,phone).\nsibling(frank,eve).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf george likes carol, then eve is a friend of alice.\nIf eve is a friend of alice, then pencil is wet.\nIf pencil is wet, then it is cold.\nIf it is cold, then george is a sibling of dave.\nIf george is a sibling of dave, then eve likes dave.\nIf eve likes dave, then alice is hungry.\nIf alice is hungry, then it is cold.\nIf it is cold, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf it is cold, then car is small.\nIf george owns apple and ball is wet and bob is an enemy of alice, then phone is small.\nIf eve is hungry, then frank is a friend of alice.\nIf dave dislikes dave and dave owns apple, then alice is a friend of carol.\nIf it is hot and phone is big, then dave owns car.\nIf bob is hungry and eve is a friend of dave, then frank dislikes frank.\nIf pencil is small and apple is big, then george is a friend of george.\nIf george owns ball and dave is tall and eve owns pencil, then frank dislikes phone.\nIf apple is big, then alice owns car.\n\nAnd the following facts:\ngeorge likes carol.\ncarol dislikes phone.\nfrank is a sibling of eve.\neve is a parent of frank.\n\nQUESTION:\nIs bob likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,alice).",
    "c": "friend(eve,alice) :- likes(george,carol).\nwet(pencil) :- friend(eve,alice).\ncold :- wet(pencil).\nsibling(george,dave) :- cold.\nlikes(eve,dave) :- sibling(george,dave).\nhungry(alice) :- likes(eve,dave).\ncold :- hungry(alice).\nparent(dave,eve) :- cold.\nhot :- parent(dave,eve).\nhungry(alice) :- hot.\nsmall(car) :- cold.\nsmall(phone) :- owns(george,apple), wet(ball), enemy(bob,alice).\nfriend(frank,alice) :- hungry(eve).\nfriend(alice,carol) :- dislikes(dave,dave), owns(dave,apple).\nowns(dave,car) :- hot, big(phone).\ndislikes(frank,frank) :- hungry(bob), friend(eve,dave).\nfriend(george,george) :- small(pencil), big(apple).\ndislikes(frank,phone) :- owns(george,ball), tall(dave), owns(eve,pencil).\nowns(alice,car) :- big(apple).\nlikes(george,carol).\ndislikes(carol,phone).\nsibling(frank,eve).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf george likes carol, then eve is a friend of alice.\nIf eve is a friend of alice, then pencil is wet.\nIf pencil is wet, then it is cold.\nIf it is cold, then george is a sibling of dave.\nIf george is a sibling of dave, then eve likes dave.\nIf eve likes dave, then alice is hungry.\nIf alice is hungry, then it is cold.\nIf it is cold, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf it is cold, then car is small.\nIf george owns apple and ball is wet and bob is an enemy of alice, then phone is small.\nIf eve is hungry, then frank is a friend of alice.\nIf dave dislikes dave and dave owns apple, then alice is a friend of carol.\nIf it is hot and phone is big, then dave owns car.\nIf bob is hungry and eve is a friend of dave, then frank dislikes frank.\nIf pencil is small and apple is big, then george is a friend of george.\nIf george owns ball and dave is tall and eve owns pencil, then frank dislikes phone.\nIf apple is big, then alice owns car.\n\nAnd the following facts:\ngeorge likes carol.\ncarol dislikes phone.\nfrank is a sibling of eve.\neve is a parent of frank.\n\nQUESTION:\nIs george is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,carol).",
    "c": "friend(eve,alice) :- likes(george,carol).\nwet(pencil) :- friend(eve,alice).\ncold :- wet(pencil).\nsibling(george,dave) :- cold.\nlikes(eve,dave) :- sibling(george,dave).\nhungry(alice) :- likes(eve,dave).\ncold :- hungry(alice).\nparent(dave,eve) :- cold.\nhot :- parent(dave,eve).\nhungry(alice) :- hot.\nsmall(car) :- cold.\nsmall(phone) :- owns(george,apple), wet(ball), enemy(bob,alice).\nfriend(frank,alice) :- hungry(eve).\nfriend(alice,carol) :- dislikes(dave,dave), owns(dave,apple).\nowns(dave,car) :- hot, big(phone).\ndislikes(frank,frank) :- hungry(bob), friend(eve,dave).\nfriend(george,george) :- small(pencil), big(apple).\ndislikes(frank,phone) :- owns(george,ball), tall(dave), owns(eve,pencil).\nowns(alice,car) :- big(apple).\ndislikes(carol,phone).\nsibling(frank,eve).\nparent(eve,frank).",
    "natural language": "You are given the following rules:\nIf george likes carol, then eve is a friend of alice.\nIf eve is a friend of alice, then pencil is wet.\nIf pencil is wet, then it is cold.\nIf it is cold, then george is a sibling of dave.\nIf george is a sibling of dave, then eve likes dave.\nIf eve likes dave, then alice is hungry.\nIf alice is hungry, then it is cold.\nIf it is cold, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf it is cold, then car is small.\nIf george owns apple and ball is wet and bob is an enemy of alice, then phone is small.\nIf eve is hungry, then frank is a friend of alice.\nIf dave dislikes dave and dave owns apple, then alice is a friend of carol.\nIf it is hot and phone is big, then dave owns car.\nIf bob is hungry and eve is a friend of dave, then frank dislikes frank.\nIf pencil is small and apple is big, then george is a friend of george.\nIf george owns ball and dave is tall and eve owns pencil, then frank dislikes phone.\nIf apple is big, then alice owns car.\n\nAnd the following facts:\ngeorge likes carol.\ncarol dislikes phone.\nfrank is a sibling of eve.\neve is a parent of frank.\n\nOBSERVATION: alice is hungry is true.\n\nQUESTION:\nCould george likes carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(carol,phone).",
    "c": "friend(eve,alice) :- likes(george,carol).\nwet(pencil) :- friend(eve,alice).\ncold :- wet(pencil).\nsibling(george,dave) :- cold.\nlikes(eve,dave) :- sibling(george,dave).\nhungry(alice) :- likes(eve,dave).\ncold :- hungry(alice).\nparent(dave,eve) :- cold.\nhot :- parent(dave,eve).\nhungry(alice) :- hot.\nsmall(car) :- cold.\nsmall(phone) :- owns(george,apple), wet(ball), enemy(bob,alice).\nfriend(frank,alice) :- hungry(eve).\nfriend(alice,carol) :- dislikes(dave,dave), owns(dave,apple).\nowns(dave,car) :- hot, big(phone).\ndislikes(frank,frank) :- hungry(bob), friend(eve,dave).\nfriend(george,george) :- small(pencil), big(apple).\ndislikes(frank,phone) :- owns(george,ball), tall(dave), owns(eve,pencil).\nowns(alice,car) :- big(apple).\nlikes(george,carol).\nsibling(frank,eve).\nparent(eve,frank).",
    "natural language": "You are given the following rules:\nIf george likes carol, then eve is a friend of alice.\nIf eve is a friend of alice, then pencil is wet.\nIf pencil is wet, then it is cold.\nIf it is cold, then george is a sibling of dave.\nIf george is a sibling of dave, then eve likes dave.\nIf eve likes dave, then alice is hungry.\nIf alice is hungry, then it is cold.\nIf it is cold, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf it is cold, then car is small.\nIf george owns apple and ball is wet and bob is an enemy of alice, then phone is small.\nIf eve is hungry, then frank is a friend of alice.\nIf dave dislikes dave and dave owns apple, then alice is a friend of carol.\nIf it is hot and phone is big, then dave owns car.\nIf bob is hungry and eve is a friend of dave, then frank dislikes frank.\nIf pencil is small and apple is big, then george is a friend of george.\nIf george owns ball and dave is tall and eve owns pencil, then frank dislikes phone.\nIf apple is big, then alice owns car.\n\nAnd the following facts:\ngeorge likes carol.\ncarol dislikes phone.\nfrank is a sibling of eve.\neve is a parent of frank.\n\nOBSERVATION: alice is hungry is true.\n\nQUESTION:\nCould carol dislikes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,frank).",
    "c": "friend(eve,alice) :- likes(george,carol).\nwet(pencil) :- friend(eve,alice).\ncold :- wet(pencil).\nsibling(george,dave) :- cold.\nlikes(eve,dave) :- sibling(george,dave).\nhungry(alice) :- likes(eve,dave).\ncold :- hungry(alice).\nparent(dave,eve) :- cold.\nhot :- parent(dave,eve).\nhungry(alice) :- hot.\nsmall(car) :- cold.\nsmall(phone) :- owns(george,apple), wet(ball), enemy(bob,alice).\nfriend(frank,alice) :- hungry(eve).\nfriend(alice,carol) :- dislikes(dave,dave), owns(dave,apple).\nowns(dave,car) :- hot, big(phone).\ndislikes(frank,frank) :- hungry(bob), friend(eve,dave).\nfriend(george,george) :- small(pencil), big(apple).\ndislikes(frank,phone) :- owns(george,ball), tall(dave), owns(eve,pencil).\nowns(alice,car) :- big(apple).\nlikes(george,carol).\ndislikes(carol,phone).\nsibling(frank,eve).",
    "natural language": "You are given the following rules:\nIf george likes carol, then eve is a friend of alice.\nIf eve is a friend of alice, then pencil is wet.\nIf pencil is wet, then it is cold.\nIf it is cold, then george is a sibling of dave.\nIf george is a sibling of dave, then eve likes dave.\nIf eve likes dave, then alice is hungry.\nIf alice is hungry, then it is cold.\nIf it is cold, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then alice is hungry.\nIf it is cold, then car is small.\nIf george owns apple and ball is wet and bob is an enemy of alice, then phone is small.\nIf eve is hungry, then frank is a friend of alice.\nIf dave dislikes dave and dave owns apple, then alice is a friend of carol.\nIf it is hot and phone is big, then dave owns car.\nIf bob is hungry and eve is a friend of dave, then frank dislikes frank.\nIf pencil is small and apple is big, then george is a friend of george.\nIf george owns ball and dave is tall and eve owns pencil, then frank dislikes phone.\nIf apple is big, then alice owns car.\n\nAnd the following facts:\ngeorge likes carol.\ncarol dislikes phone.\nfrank is a sibling of eve.\neve is a parent of frank.\n\nOBSERVATION: alice is hungry is true.\n\nQUESTION:\nCould eve is a parent of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 4,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,alice).",
    "c": "dislikes(bob,pencil) :- friend(dave,dave).\ndislikes(frank,alice) :- dislikes(bob,pencil).\ntall(frank) :- friend(bob,bob), wet(book), tall(frank).\ntall(dave) :- sunny.\nparent(frank,frank) :- big(phone), parent(george,bob), happy(bob).\nwet(phone) :- friend(dave,bob).\ndislikes(alice,book) :- hot.\nsmall(ball) :- cold, owns(bob,ball), parent(dave,carol).\ndislikes(frank,car) :- dislikes(eve,frank), dislikes(eve,book).\nwet(ball) :- wet(ball), wet(ball).\ncold :- likes(frank,car).\nsmall(book) :- parent(george,bob), dislikes(alice,bob).\nhungry(bob) :- cold, tall(george), sunny.\ncold :- cold, owns(frank,book), friend(bob,dave).\nparent(carol,eve) :- sad(dave).\ntall(frank) :- tall(eve), likes(bob,dave), tall(dave).\nwet(phone) :- sunny.\nhungry(carol) :- sunny, hungry(bob), hungry(bob).\nsibling(frank,alice) :- cold, sibling(dave,frank).\nfriend(dave,dave).\nfriend(frank,bob).\nlikes(eve,pencil).\nlikes(eve,apple).\nfriend(dave,alice).\ndislikes(alice,book).\ndislikes(dave,alice).\ndislikes(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is a friend of dave, then bob dislikes pencil.\nIf bob dislikes pencil, then frank dislikes alice.\nIf bob is a friend of bob and book is wet and frank is tall, then frank is tall.\nIf it is sunny, then dave is tall.\nIf phone is big and george is a parent of bob and bob is happy, then frank is a parent of frank.\nIf dave is a friend of bob, then phone is wet.\nIf it is hot, then alice dislikes book.\nIf it is cold and bob owns ball and dave is a parent of carol, then ball is small.\nIf eve dislikes frank and eve dislikes book, then frank dislikes car.\nIf ball is wet and ball is wet, then ball is wet.\nIf frank likes car, then it is cold.\nIf george is a parent of bob and alice dislikes bob, then book is small.\nIf it is cold and george is tall and it is sunny, then bob is hungry.\nIf it is cold and frank owns book and bob is a friend of dave, then it is cold.\nIf dave is sad, then carol is a parent of eve.\nIf eve is tall and bob likes dave and dave is tall, then frank is tall.\nIf it is sunny, then phone is wet.\nIf it is sunny and bob is hungry and bob is hungry, then carol is hungry.\nIf it is cold and dave is a sibling of frank, then frank is a sibling of alice.\n\nAnd the following facts:\ndave is a friend of dave.\nfrank is a friend of bob.\neve likes pencil.\neve likes apple.\ndave is a friend of alice.\nalice dislikes book.\ndave dislikes alice.\nalice dislikes bob.\n\nQUESTION:\nIs dave dislikes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,alice).",
    "c": "dislikes(bob,pencil) :- friend(dave,dave).\ndislikes(frank,alice) :- dislikes(bob,pencil).\ntall(frank) :- friend(bob,bob), wet(book), tall(frank).\ntall(dave) :- sunny.\nparent(frank,frank) :- big(phone), parent(george,bob), happy(bob).\nwet(phone) :- friend(dave,bob).\ndislikes(alice,book) :- hot.\nsmall(ball) :- cold, owns(bob,ball), parent(dave,carol).\ndislikes(frank,car) :- dislikes(eve,frank), dislikes(eve,book).\nwet(ball) :- wet(ball), wet(ball).\ncold :- likes(frank,car).\nsmall(book) :- parent(george,bob), dislikes(alice,bob).\nhungry(bob) :- cold, tall(george), sunny.\ncold :- cold, owns(frank,book), friend(bob,dave).\nparent(carol,eve) :- sad(dave).\ntall(frank) :- tall(eve), likes(bob,dave), tall(dave).\nwet(phone) :- sunny.\nhungry(carol) :- sunny, hungry(bob), hungry(bob).\nsibling(frank,alice) :- cold, sibling(dave,frank).\nfriend(dave,dave).\nfriend(frank,bob).\nlikes(eve,pencil).\nlikes(eve,apple).\nfriend(dave,alice).\ndislikes(alice,book).\ndislikes(dave,alice).\ndislikes(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is a friend of dave, then bob dislikes pencil.\nIf bob dislikes pencil, then frank dislikes alice.\nIf bob is a friend of bob and book is wet and frank is tall, then frank is tall.\nIf it is sunny, then dave is tall.\nIf phone is big and george is a parent of bob and bob is happy, then frank is a parent of frank.\nIf dave is a friend of bob, then phone is wet.\nIf it is hot, then alice dislikes book.\nIf it is cold and bob owns ball and dave is a parent of carol, then ball is small.\nIf eve dislikes frank and eve dislikes book, then frank dislikes car.\nIf ball is wet and ball is wet, then ball is wet.\nIf frank likes car, then it is cold.\nIf george is a parent of bob and alice dislikes bob, then book is small.\nIf it is cold and george is tall and it is sunny, then bob is hungry.\nIf it is cold and frank owns book and bob is a friend of dave, then it is cold.\nIf dave is sad, then carol is a parent of eve.\nIf eve is tall and bob likes dave and dave is tall, then frank is tall.\nIf it is sunny, then phone is wet.\nIf it is sunny and bob is hungry and bob is hungry, then carol is hungry.\nIf it is cold and dave is a sibling of frank, then frank is a sibling of alice.\n\nAnd the following facts:\ndave is a friend of dave.\nfrank is a friend of bob.\neve likes pencil.\neve likes apple.\ndave is a friend of alice.\nalice dislikes book.\ndave dislikes alice.\nalice dislikes bob.\n\nQUESTION:\nIs frank dislikes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,bob).",
    "c": "dislikes(bob,pencil) :- friend(dave,dave).\ndislikes(frank,alice) :- dislikes(bob,pencil).\ntall(frank) :- friend(bob,bob), wet(book), tall(frank).\ntall(dave) :- sunny.\nparent(frank,frank) :- big(phone), parent(george,bob), happy(bob).\nwet(phone) :- friend(dave,bob).\ndislikes(alice,book) :- hot.\nsmall(ball) :- cold, owns(bob,ball), parent(dave,carol).\ndislikes(frank,car) :- dislikes(eve,frank), dislikes(eve,book).\nwet(ball) :- wet(ball), wet(ball).\ncold :- likes(frank,car).\nsmall(book) :- parent(george,bob), dislikes(alice,bob).\nhungry(bob) :- cold, tall(george), sunny.\ncold :- cold, owns(frank,book), friend(bob,dave).\nparent(carol,eve) :- sad(dave).\ntall(frank) :- tall(eve), likes(bob,dave), tall(dave).\nwet(phone) :- sunny.\nhungry(carol) :- sunny, hungry(bob), hungry(bob).\nsibling(frank,alice) :- cold, sibling(dave,frank).\nfriend(dave,dave).\nfriend(frank,bob).\nlikes(eve,pencil).\nlikes(eve,apple).\nfriend(dave,alice).\ndislikes(alice,book).\ndislikes(dave,alice).\ndislikes(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is a friend of dave, then bob dislikes pencil.\nIf bob dislikes pencil, then frank dislikes alice.\nIf bob is a friend of bob and book is wet and frank is tall, then frank is tall.\nIf it is sunny, then dave is tall.\nIf phone is big and george is a parent of bob and bob is happy, then frank is a parent of frank.\nIf dave is a friend of bob, then phone is wet.\nIf it is hot, then alice dislikes book.\nIf it is cold and bob owns ball and dave is a parent of carol, then ball is small.\nIf eve dislikes frank and eve dislikes book, then frank dislikes car.\nIf ball is wet and ball is wet, then ball is wet.\nIf frank likes car, then it is cold.\nIf george is a parent of bob and alice dislikes bob, then book is small.\nIf it is cold and george is tall and it is sunny, then bob is hungry.\nIf it is cold and frank owns book and bob is a friend of dave, then it is cold.\nIf dave is sad, then carol is a parent of eve.\nIf eve is tall and bob likes dave and dave is tall, then frank is tall.\nIf it is sunny, then phone is wet.\nIf it is sunny and bob is hungry and bob is hungry, then carol is hungry.\nIf it is cold and dave is a sibling of frank, then frank is a sibling of alice.\n\nAnd the following facts:\ndave is a friend of dave.\nfrank is a friend of bob.\neve likes pencil.\neve likes apple.\ndave is a friend of alice.\nalice dislikes book.\ndave dislikes alice.\nalice dislikes bob.\n\nQUESTION:\nIs alice dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,carol).",
    "c": "dislikes(bob,pencil) :- friend(dave,dave).\ndislikes(frank,alice) :- dislikes(bob,pencil).\ntall(frank) :- friend(bob,bob), wet(book), tall(frank).\ntall(dave) :- sunny.\nparent(frank,frank) :- big(phone), parent(george,bob), happy(bob).\nwet(phone) :- friend(dave,bob).\ndislikes(alice,book) :- hot.\nsmall(ball) :- cold, owns(bob,ball), parent(dave,carol).\ndislikes(frank,car) :- dislikes(eve,frank), dislikes(eve,book).\nwet(ball) :- wet(ball), wet(ball).\ncold :- likes(frank,car).\nsmall(book) :- parent(george,bob), dislikes(alice,bob).\nhungry(bob) :- cold, tall(george), sunny.\ncold :- cold, owns(frank,book), friend(bob,dave).\nparent(carol,eve) :- sad(dave).\ntall(frank) :- tall(eve), likes(bob,dave), tall(dave).\nwet(phone) :- sunny.\nhungry(carol) :- sunny, hungry(bob), hungry(bob).\nsibling(frank,alice) :- cold, sibling(dave,frank).\nfriend(dave,dave).\nfriend(frank,bob).\nlikes(eve,pencil).\nlikes(eve,apple).\nfriend(dave,alice).\ndislikes(alice,book).\ndislikes(dave,alice).\ndislikes(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is a friend of dave, then bob dislikes pencil.\nIf bob dislikes pencil, then frank dislikes alice.\nIf bob is a friend of bob and book is wet and frank is tall, then frank is tall.\nIf it is sunny, then dave is tall.\nIf phone is big and george is a parent of bob and bob is happy, then frank is a parent of frank.\nIf dave is a friend of bob, then phone is wet.\nIf it is hot, then alice dislikes book.\nIf it is cold and bob owns ball and dave is a parent of carol, then ball is small.\nIf eve dislikes frank and eve dislikes book, then frank dislikes car.\nIf ball is wet and ball is wet, then ball is wet.\nIf frank likes car, then it is cold.\nIf george is a parent of bob and alice dislikes bob, then book is small.\nIf it is cold and george is tall and it is sunny, then bob is hungry.\nIf it is cold and frank owns book and bob is a friend of dave, then it is cold.\nIf dave is sad, then carol is a parent of eve.\nIf eve is tall and bob likes dave and dave is tall, then frank is tall.\nIf it is sunny, then phone is wet.\nIf it is sunny and bob is hungry and bob is hungry, then carol is hungry.\nIf it is cold and dave is a sibling of frank, then frank is a sibling of alice.\n\nAnd the following facts:\ndave is a friend of dave.\nfrank is a friend of bob.\neve likes pencil.\neve likes apple.\ndave is a friend of alice.\nalice dislikes book.\ndave dislikes alice.\nalice dislikes bob.\n\nQUESTION:\nIs frank is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,dave).",
    "c": "dislikes(bob,pencil) :- friend(dave,dave).\ndislikes(frank,alice) :- dislikes(bob,pencil).\ntall(frank) :- friend(bob,bob), wet(book), tall(frank).\ntall(dave) :- sunny.\nparent(frank,frank) :- big(phone), parent(george,bob), happy(bob).\nwet(phone) :- friend(dave,bob).\ndislikes(alice,book) :- hot.\nsmall(ball) :- cold, owns(bob,ball), parent(dave,carol).\ndislikes(frank,car) :- dislikes(eve,frank), dislikes(eve,book).\nwet(ball) :- wet(ball), wet(ball).\ncold :- likes(frank,car).\nsmall(book) :- parent(george,bob), dislikes(alice,bob).\nhungry(bob) :- cold, tall(george), sunny.\ncold :- cold, owns(frank,book), friend(bob,dave).\nparent(carol,eve) :- sad(dave).\ntall(frank) :- tall(eve), likes(bob,dave), tall(dave).\nwet(phone) :- sunny.\nhungry(carol) :- sunny, hungry(bob), hungry(bob).\nsibling(frank,alice) :- cold, sibling(dave,frank).\nfriend(dave,dave).\nfriend(frank,bob).\nlikes(eve,pencil).\nlikes(eve,apple).\nfriend(dave,alice).\ndislikes(alice,book).\ndislikes(dave,alice).\ndislikes(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is a friend of dave, then bob dislikes pencil.\nIf bob dislikes pencil, then frank dislikes alice.\nIf bob is a friend of bob and book is wet and frank is tall, then frank is tall.\nIf it is sunny, then dave is tall.\nIf phone is big and george is a parent of bob and bob is happy, then frank is a parent of frank.\nIf dave is a friend of bob, then phone is wet.\nIf it is hot, then alice dislikes book.\nIf it is cold and bob owns ball and dave is a parent of carol, then ball is small.\nIf eve dislikes frank and eve dislikes book, then frank dislikes car.\nIf ball is wet and ball is wet, then ball is wet.\nIf frank likes car, then it is cold.\nIf george is a parent of bob and alice dislikes bob, then book is small.\nIf it is cold and george is tall and it is sunny, then bob is hungry.\nIf it is cold and frank owns book and bob is a friend of dave, then it is cold.\nIf dave is sad, then carol is a parent of eve.\nIf eve is tall and bob likes dave and dave is tall, then frank is tall.\nIf it is sunny, then phone is wet.\nIf it is sunny and bob is hungry and bob is hungry, then carol is hungry.\nIf it is cold and dave is a sibling of frank, then frank is a sibling of alice.\n\nAnd the following facts:\ndave is a friend of dave.\nfrank is a friend of bob.\neve likes pencil.\neve likes apple.\ndave is a friend of alice.\nalice dislikes book.\ndave dislikes alice.\nalice dislikes bob.\n\nQUESTION:\nIs bob likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,dave).",
    "c": "dislikes(bob,pencil) :- friend(dave,dave).\ndislikes(frank,alice) :- dislikes(bob,pencil).\ntall(frank) :- friend(bob,bob), wet(book), tall(frank).\ntall(dave) :- sunny.\nparent(frank,frank) :- big(phone), parent(george,bob), happy(bob).\nwet(phone) :- friend(dave,bob).\ndislikes(alice,book) :- hot.\nsmall(ball) :- cold, owns(bob,ball), parent(dave,carol).\ndislikes(frank,car) :- dislikes(eve,frank), dislikes(eve,book).\nwet(ball) :- wet(ball), wet(ball).\ncold :- likes(frank,car).\nsmall(book) :- parent(george,bob), dislikes(alice,bob).\nhungry(bob) :- cold, tall(george), sunny.\ncold :- cold, owns(frank,book), friend(bob,dave).\nparent(carol,eve) :- sad(dave).\ntall(frank) :- tall(eve), likes(bob,dave), tall(dave).\nwet(phone) :- sunny.\nhungry(carol) :- sunny, hungry(bob), hungry(bob).\nsibling(frank,alice) :- cold, sibling(dave,frank).\nfriend(frank,bob).\nlikes(eve,pencil).\nlikes(eve,apple).\nfriend(dave,alice).\ndislikes(alice,book).\ndislikes(dave,alice).\ndislikes(alice,bob).",
    "natural language": "You are given the following rules:\nIf dave is a friend of dave, then bob dislikes pencil.\nIf bob dislikes pencil, then frank dislikes alice.\nIf bob is a friend of bob and book is wet and frank is tall, then frank is tall.\nIf it is sunny, then dave is tall.\nIf phone is big and george is a parent of bob and bob is happy, then frank is a parent of frank.\nIf dave is a friend of bob, then phone is wet.\nIf it is hot, then alice dislikes book.\nIf it is cold and bob owns ball and dave is a parent of carol, then ball is small.\nIf eve dislikes frank and eve dislikes book, then frank dislikes car.\nIf ball is wet and ball is wet, then ball is wet.\nIf frank likes car, then it is cold.\nIf george is a parent of bob and alice dislikes bob, then book is small.\nIf it is cold and george is tall and it is sunny, then bob is hungry.\nIf it is cold and frank owns book and bob is a friend of dave, then it is cold.\nIf dave is sad, then carol is a parent of eve.\nIf eve is tall and bob likes dave and dave is tall, then frank is tall.\nIf it is sunny, then phone is wet.\nIf it is sunny and bob is hungry and bob is hungry, then carol is hungry.\nIf it is cold and dave is a sibling of frank, then frank is a sibling of alice.\n\nAnd the following facts:\ndave is a friend of dave.\nfrank is a friend of bob.\neve likes pencil.\neve likes apple.\ndave is a friend of alice.\nalice dislikes book.\ndave dislikes alice.\nalice dislikes bob.\n\nOBSERVATION: frank dislikes alice is true.\n\nQUESTION:\nCould dave is a friend of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,book).",
    "c": "dislikes(bob,pencil) :- friend(dave,dave).\ndislikes(frank,alice) :- dislikes(bob,pencil).\ntall(frank) :- friend(bob,bob), wet(book), tall(frank).\ntall(dave) :- sunny.\nparent(frank,frank) :- big(phone), parent(george,bob), happy(bob).\nwet(phone) :- friend(dave,bob).\ndislikes(alice,book) :- hot.\nsmall(ball) :- cold, owns(bob,ball), parent(dave,carol).\ndislikes(frank,car) :- dislikes(eve,frank), dislikes(eve,book).\nwet(ball) :- wet(ball), wet(ball).\ncold :- likes(frank,car).\nsmall(book) :- parent(george,bob), dislikes(alice,bob).\nhungry(bob) :- cold, tall(george), sunny.\ncold :- cold, owns(frank,book), friend(bob,dave).\nparent(carol,eve) :- sad(dave).\ntall(frank) :- tall(eve), likes(bob,dave), tall(dave).\nwet(phone) :- sunny.\nhungry(carol) :- sunny, hungry(bob), hungry(bob).\nsibling(frank,alice) :- cold, sibling(dave,frank).\nfriend(dave,dave).\nfriend(frank,bob).\nlikes(eve,pencil).\nlikes(eve,apple).\nfriend(dave,alice).\ndislikes(dave,alice).\ndislikes(alice,bob).",
    "natural language": "You are given the following rules:\nIf dave is a friend of dave, then bob dislikes pencil.\nIf bob dislikes pencil, then frank dislikes alice.\nIf bob is a friend of bob and book is wet and frank is tall, then frank is tall.\nIf it is sunny, then dave is tall.\nIf phone is big and george is a parent of bob and bob is happy, then frank is a parent of frank.\nIf dave is a friend of bob, then phone is wet.\nIf it is hot, then alice dislikes book.\nIf it is cold and bob owns ball and dave is a parent of carol, then ball is small.\nIf eve dislikes frank and eve dislikes book, then frank dislikes car.\nIf ball is wet and ball is wet, then ball is wet.\nIf frank likes car, then it is cold.\nIf george is a parent of bob and alice dislikes bob, then book is small.\nIf it is cold and george is tall and it is sunny, then bob is hungry.\nIf it is cold and frank owns book and bob is a friend of dave, then it is cold.\nIf dave is sad, then carol is a parent of eve.\nIf eve is tall and bob likes dave and dave is tall, then frank is tall.\nIf it is sunny, then phone is wet.\nIf it is sunny and bob is hungry and bob is hungry, then carol is hungry.\nIf it is cold and dave is a sibling of frank, then frank is a sibling of alice.\n\nAnd the following facts:\ndave is a friend of dave.\nfrank is a friend of bob.\neve likes pencil.\neve likes apple.\ndave is a friend of alice.\nalice dislikes book.\ndave dislikes alice.\nalice dislikes bob.\n\nOBSERVATION: frank dislikes alice is true.\n\nQUESTION:\nCould alice dislikes book be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(dave,alice).",
    "c": "dislikes(bob,pencil) :- friend(dave,dave).\ndislikes(frank,alice) :- dislikes(bob,pencil).\ntall(frank) :- friend(bob,bob), wet(book), tall(frank).\ntall(dave) :- sunny.\nparent(frank,frank) :- big(phone), parent(george,bob), happy(bob).\nwet(phone) :- friend(dave,bob).\ndislikes(alice,book) :- hot.\nsmall(ball) :- cold, owns(bob,ball), parent(dave,carol).\ndislikes(frank,car) :- dislikes(eve,frank), dislikes(eve,book).\nwet(ball) :- wet(ball), wet(ball).\ncold :- likes(frank,car).\nsmall(book) :- parent(george,bob), dislikes(alice,bob).\nhungry(bob) :- cold, tall(george), sunny.\ncold :- cold, owns(frank,book), friend(bob,dave).\nparent(carol,eve) :- sad(dave).\ntall(frank) :- tall(eve), likes(bob,dave), tall(dave).\nwet(phone) :- sunny.\nhungry(carol) :- sunny, hungry(bob), hungry(bob).\nsibling(frank,alice) :- cold, sibling(dave,frank).\nfriend(dave,dave).\nfriend(frank,bob).\nlikes(eve,pencil).\nlikes(eve,apple).\ndislikes(alice,book).\ndislikes(dave,alice).\ndislikes(alice,bob).",
    "natural language": "You are given the following rules:\nIf dave is a friend of dave, then bob dislikes pencil.\nIf bob dislikes pencil, then frank dislikes alice.\nIf bob is a friend of bob and book is wet and frank is tall, then frank is tall.\nIf it is sunny, then dave is tall.\nIf phone is big and george is a parent of bob and bob is happy, then frank is a parent of frank.\nIf dave is a friend of bob, then phone is wet.\nIf it is hot, then alice dislikes book.\nIf it is cold and bob owns ball and dave is a parent of carol, then ball is small.\nIf eve dislikes frank and eve dislikes book, then frank dislikes car.\nIf ball is wet and ball is wet, then ball is wet.\nIf frank likes car, then it is cold.\nIf george is a parent of bob and alice dislikes bob, then book is small.\nIf it is cold and george is tall and it is sunny, then bob is hungry.\nIf it is cold and frank owns book and bob is a friend of dave, then it is cold.\nIf dave is sad, then carol is a parent of eve.\nIf eve is tall and bob likes dave and dave is tall, then frank is tall.\nIf it is sunny, then phone is wet.\nIf it is sunny and bob is hungry and bob is hungry, then carol is hungry.\nIf it is cold and dave is a sibling of frank, then frank is a sibling of alice.\n\nAnd the following facts:\ndave is a friend of dave.\nfrank is a friend of bob.\neve likes pencil.\neve likes apple.\ndave is a friend of alice.\nalice dislikes book.\ndave dislikes alice.\nalice dislikes bob.\n\nOBSERVATION: frank dislikes alice is true.\n\nQUESTION:\nCould dave is a friend of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(dave,book).",
    "c": "tall(dave) :- dislikes(eve,alice).\nenemy(george,george) :- tall(dave).\ncold :- parent(dave,george), big(book), friend(eve,george).\ncold :- small(book), likes(carol,ball).\nsibling(george,dave) :- small(book), enemy(dave,dave).\nowns(frank,phone) :- tall(bob).\ndislikes(frank,book) :- sunny, dislikes(eve,book), owns(carol,book).\nsunny :- sunny, dislikes(george,car), sibling(bob,dave).\nsibling(carol,carol) :- sibling(bob,george), hot.\ndislikes(carol,pencil) :- dislikes(eve,frank), wet(pencil), tall(george).\nwet(pencil) :- dislikes(frank,george), wet(apple).\ntall(alice) :- tall(frank), wet(pencil), friend(george,eve).\nsunny :- hungry(dave), happy(george).\ntall(dave) :- sad(george), hungry(eve).\nowns(dave,car) :- wet(car), sibling(dave,dave).\nparent(dave,eve) :- happy(frank), sibling(george,carol), wet(book).\nparent(frank,alice) :- cold.\nwet(car) :- friend(dave,bob), hungry(alice), parent(carol,frank).\nsmall(apple) :- owns(dave,apple).\ndislikes(eve,alice).\nsmall(pencil).\nenemy(george,carol).\nlikes(dave,book).\nwet(pencil).\ndislikes(alice,dave).\nlikes(frank,book).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf eve dislikes alice, then dave is tall.\nIf dave is tall, then george is an enemy of george.\nIf dave is a parent of george and book is big and eve is a friend of george, then it is cold.\nIf book is small and carol likes ball, then it is cold.\nIf book is small and dave is an enemy of dave, then george is a sibling of dave.\nIf bob is tall, then frank owns phone.\nIf it is sunny and eve dislikes book and carol owns book, then frank dislikes book.\nIf it is sunny and george dislikes car and bob is a sibling of dave, then it is sunny.\nIf bob is a sibling of george and it is hot, then carol is a sibling of carol.\nIf eve dislikes frank and pencil is wet and george is tall, then carol dislikes pencil.\nIf frank dislikes george and apple is wet, then pencil is wet.\nIf frank is tall and pencil is wet and george is a friend of eve, then alice is tall.\nIf dave is hungry and george is happy, then it is sunny.\nIf george is sad and eve is hungry, then dave is tall.\nIf car is wet and dave is a sibling of dave, then dave owns car.\nIf frank is happy and george is a sibling of carol and book is wet, then dave is a parent of eve.\nIf it is cold, then frank is a parent of alice.\nIf dave is a friend of bob and alice is hungry and carol is a parent of frank, then car is wet.\nIf dave owns apple, then apple is small.\n\nAnd the following facts:\neve dislikes alice.\npencil is small.\ngeorge is an enemy of carol.\ndave likes book.\npencil is wet.\nalice dislikes dave.\nfrank likes book.\ncarol is happy.\n\nQUESTION:\nIs dave likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "tall(dave) :- dislikes(eve,alice).\nenemy(george,george) :- tall(dave).\ncold :- parent(dave,george), big(book), friend(eve,george).\ncold :- small(book), likes(carol,ball).\nsibling(george,dave) :- small(book), enemy(dave,dave).\nowns(frank,phone) :- tall(bob).\ndislikes(frank,book) :- sunny, dislikes(eve,book), owns(carol,book).\nsunny :- sunny, dislikes(george,car), sibling(bob,dave).\nsibling(carol,carol) :- sibling(bob,george), hot.\ndislikes(carol,pencil) :- dislikes(eve,frank), wet(pencil), tall(george).\nwet(pencil) :- dislikes(frank,george), wet(apple).\ntall(alice) :- tall(frank), wet(pencil), friend(george,eve).\nsunny :- hungry(dave), happy(george).\ntall(dave) :- sad(george), hungry(eve).\nowns(dave,car) :- wet(car), sibling(dave,dave).\nparent(dave,eve) :- happy(frank), sibling(george,carol), wet(book).\nparent(frank,alice) :- cold.\nwet(car) :- friend(dave,bob), hungry(alice), parent(carol,frank).\nsmall(apple) :- owns(dave,apple).\ndislikes(eve,alice).\nsmall(pencil).\nenemy(george,carol).\nlikes(dave,book).\nwet(pencil).\ndislikes(alice,dave).\nlikes(frank,book).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf eve dislikes alice, then dave is tall.\nIf dave is tall, then george is an enemy of george.\nIf dave is a parent of george and book is big and eve is a friend of george, then it is cold.\nIf book is small and carol likes ball, then it is cold.\nIf book is small and dave is an enemy of dave, then george is a sibling of dave.\nIf bob is tall, then frank owns phone.\nIf it is sunny and eve dislikes book and carol owns book, then frank dislikes book.\nIf it is sunny and george dislikes car and bob is a sibling of dave, then it is sunny.\nIf bob is a sibling of george and it is hot, then carol is a sibling of carol.\nIf eve dislikes frank and pencil is wet and george is tall, then carol dislikes pencil.\nIf frank dislikes george and apple is wet, then pencil is wet.\nIf frank is tall and pencil is wet and george is a friend of eve, then alice is tall.\nIf dave is hungry and george is happy, then it is sunny.\nIf george is sad and eve is hungry, then dave is tall.\nIf car is wet and dave is a sibling of dave, then dave owns car.\nIf frank is happy and george is a sibling of carol and book is wet, then dave is a parent of eve.\nIf it is cold, then frank is a parent of alice.\nIf dave is a friend of bob and alice is hungry and carol is a parent of frank, then car is wet.\nIf dave owns apple, then apple is small.\n\nAnd the following facts:\neve dislikes alice.\npencil is small.\ngeorge is an enemy of carol.\ndave likes book.\npencil is wet.\nalice dislikes dave.\nfrank likes book.\ncarol is happy.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "tall(dave) :- dislikes(eve,alice).\nenemy(george,george) :- tall(dave).\ncold :- parent(dave,george), big(book), friend(eve,george).\ncold :- small(book), likes(carol,ball).\nsibling(george,dave) :- small(book), enemy(dave,dave).\nowns(frank,phone) :- tall(bob).\ndislikes(frank,book) :- sunny, dislikes(eve,book), owns(carol,book).\nsunny :- sunny, dislikes(george,car), sibling(bob,dave).\nsibling(carol,carol) :- sibling(bob,george), hot.\ndislikes(carol,pencil) :- dislikes(eve,frank), wet(pencil), tall(george).\nwet(pencil) :- dislikes(frank,george), wet(apple).\ntall(alice) :- tall(frank), wet(pencil), friend(george,eve).\nsunny :- hungry(dave), happy(george).\ntall(dave) :- sad(george), hungry(eve).\nowns(dave,car) :- wet(car), sibling(dave,dave).\nparent(dave,eve) :- happy(frank), sibling(george,carol), wet(book).\nparent(frank,alice) :- cold.\nwet(car) :- friend(dave,bob), hungry(alice), parent(carol,frank).\nsmall(apple) :- owns(dave,apple).\ndislikes(eve,alice).\nsmall(pencil).\nenemy(george,carol).\nlikes(dave,book).\nwet(pencil).\ndislikes(alice,dave).\nlikes(frank,book).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf eve dislikes alice, then dave is tall.\nIf dave is tall, then george is an enemy of george.\nIf dave is a parent of george and book is big and eve is a friend of george, then it is cold.\nIf book is small and carol likes ball, then it is cold.\nIf book is small and dave is an enemy of dave, then george is a sibling of dave.\nIf bob is tall, then frank owns phone.\nIf it is sunny and eve dislikes book and carol owns book, then frank dislikes book.\nIf it is sunny and george dislikes car and bob is a sibling of dave, then it is sunny.\nIf bob is a sibling of george and it is hot, then carol is a sibling of carol.\nIf eve dislikes frank and pencil is wet and george is tall, then carol dislikes pencil.\nIf frank dislikes george and apple is wet, then pencil is wet.\nIf frank is tall and pencil is wet and george is a friend of eve, then alice is tall.\nIf dave is hungry and george is happy, then it is sunny.\nIf george is sad and eve is hungry, then dave is tall.\nIf car is wet and dave is a sibling of dave, then dave owns car.\nIf frank is happy and george is a sibling of carol and book is wet, then dave is a parent of eve.\nIf it is cold, then frank is a parent of alice.\nIf dave is a friend of bob and alice is hungry and carol is a parent of frank, then car is wet.\nIf dave owns apple, then apple is small.\n\nAnd the following facts:\neve dislikes alice.\npencil is small.\ngeorge is an enemy of carol.\ndave likes book.\npencil is wet.\nalice dislikes dave.\nfrank likes book.\ncarol is happy.\n\nQUESTION:\nIs pencil is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,dave).",
    "c": "tall(dave) :- dislikes(eve,alice).\nenemy(george,george) :- tall(dave).\ncold :- parent(dave,george), big(book), friend(eve,george).\ncold :- small(book), likes(carol,ball).\nsibling(george,dave) :- small(book), enemy(dave,dave).\nowns(frank,phone) :- tall(bob).\ndislikes(frank,book) :- sunny, dislikes(eve,book), owns(carol,book).\nsunny :- sunny, dislikes(george,car), sibling(bob,dave).\nsibling(carol,carol) :- sibling(bob,george), hot.\ndislikes(carol,pencil) :- dislikes(eve,frank), wet(pencil), tall(george).\nwet(pencil) :- dislikes(frank,george), wet(apple).\ntall(alice) :- tall(frank), wet(pencil), friend(george,eve).\nsunny :- hungry(dave), happy(george).\ntall(dave) :- sad(george), hungry(eve).\nowns(dave,car) :- wet(car), sibling(dave,dave).\nparent(dave,eve) :- happy(frank), sibling(george,carol), wet(book).\nparent(frank,alice) :- cold.\nwet(car) :- friend(dave,bob), hungry(alice), parent(carol,frank).\nsmall(apple) :- owns(dave,apple).\ndislikes(eve,alice).\nsmall(pencil).\nenemy(george,carol).\nlikes(dave,book).\nwet(pencil).\ndislikes(alice,dave).\nlikes(frank,book).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf eve dislikes alice, then dave is tall.\nIf dave is tall, then george is an enemy of george.\nIf dave is a parent of george and book is big and eve is a friend of george, then it is cold.\nIf book is small and carol likes ball, then it is cold.\nIf book is small and dave is an enemy of dave, then george is a sibling of dave.\nIf bob is tall, then frank owns phone.\nIf it is sunny and eve dislikes book and carol owns book, then frank dislikes book.\nIf it is sunny and george dislikes car and bob is a sibling of dave, then it is sunny.\nIf bob is a sibling of george and it is hot, then carol is a sibling of carol.\nIf eve dislikes frank and pencil is wet and george is tall, then carol dislikes pencil.\nIf frank dislikes george and apple is wet, then pencil is wet.\nIf frank is tall and pencil is wet and george is a friend of eve, then alice is tall.\nIf dave is hungry and george is happy, then it is sunny.\nIf george is sad and eve is hungry, then dave is tall.\nIf car is wet and dave is a sibling of dave, then dave owns car.\nIf frank is happy and george is a sibling of carol and book is wet, then dave is a parent of eve.\nIf it is cold, then frank is a parent of alice.\nIf dave is a friend of bob and alice is hungry and carol is a parent of frank, then car is wet.\nIf dave owns apple, then apple is small.\n\nAnd the following facts:\neve dislikes alice.\npencil is small.\ngeorge is an enemy of carol.\ndave likes book.\npencil is wet.\nalice dislikes dave.\nfrank likes book.\ncarol is happy.\n\nQUESTION:\nIs bob is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,carol).",
    "c": "tall(dave) :- dislikes(eve,alice).\nenemy(george,george) :- tall(dave).\ncold :- parent(dave,george), big(book), friend(eve,george).\ncold :- small(book), likes(carol,ball).\nsibling(george,dave) :- small(book), enemy(dave,dave).\nowns(frank,phone) :- tall(bob).\ndislikes(frank,book) :- sunny, dislikes(eve,book), owns(carol,book).\nsunny :- sunny, dislikes(george,car), sibling(bob,dave).\nsibling(carol,carol) :- sibling(bob,george), hot.\ndislikes(carol,pencil) :- dislikes(eve,frank), wet(pencil), tall(george).\nwet(pencil) :- dislikes(frank,george), wet(apple).\ntall(alice) :- tall(frank), wet(pencil), friend(george,eve).\nsunny :- hungry(dave), happy(george).\ntall(dave) :- sad(george), hungry(eve).\nowns(dave,car) :- wet(car), sibling(dave,dave).\nparent(dave,eve) :- happy(frank), sibling(george,carol), wet(book).\nparent(frank,alice) :- cold.\nwet(car) :- friend(dave,bob), hungry(alice), parent(carol,frank).\nsmall(apple) :- owns(dave,apple).\ndislikes(eve,alice).\nsmall(pencil).\nenemy(george,carol).\nlikes(dave,book).\nwet(pencil).\ndislikes(alice,dave).\nlikes(frank,book).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf eve dislikes alice, then dave is tall.\nIf dave is tall, then george is an enemy of george.\nIf dave is a parent of george and book is big and eve is a friend of george, then it is cold.\nIf book is small and carol likes ball, then it is cold.\nIf book is small and dave is an enemy of dave, then george is a sibling of dave.\nIf bob is tall, then frank owns phone.\nIf it is sunny and eve dislikes book and carol owns book, then frank dislikes book.\nIf it is sunny and george dislikes car and bob is a sibling of dave, then it is sunny.\nIf bob is a sibling of george and it is hot, then carol is a sibling of carol.\nIf eve dislikes frank and pencil is wet and george is tall, then carol dislikes pencil.\nIf frank dislikes george and apple is wet, then pencil is wet.\nIf frank is tall and pencil is wet and george is a friend of eve, then alice is tall.\nIf dave is hungry and george is happy, then it is sunny.\nIf george is sad and eve is hungry, then dave is tall.\nIf car is wet and dave is a sibling of dave, then dave owns car.\nIf frank is happy and george is a sibling of carol and book is wet, then dave is a parent of eve.\nIf it is cold, then frank is a parent of alice.\nIf dave is a friend of bob and alice is hungry and carol is a parent of frank, then car is wet.\nIf dave owns apple, then apple is small.\n\nAnd the following facts:\neve dislikes alice.\npencil is small.\ngeorge is an enemy of carol.\ndave likes book.\npencil is wet.\nalice dislikes dave.\nfrank likes book.\ncarol is happy.\n\nQUESTION:\nIs dave is an enemy of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,alice).",
    "c": "tall(dave) :- dislikes(eve,alice).\nenemy(george,george) :- tall(dave).\ncold :- parent(dave,george), big(book), friend(eve,george).\ncold :- small(book), likes(carol,ball).\nsibling(george,dave) :- small(book), enemy(dave,dave).\nowns(frank,phone) :- tall(bob).\ndislikes(frank,book) :- sunny, dislikes(eve,book), owns(carol,book).\nsunny :- sunny, dislikes(george,car), sibling(bob,dave).\nsibling(carol,carol) :- sibling(bob,george), hot.\ndislikes(carol,pencil) :- dislikes(eve,frank), wet(pencil), tall(george).\nwet(pencil) :- dislikes(frank,george), wet(apple).\ntall(alice) :- tall(frank), wet(pencil), friend(george,eve).\nsunny :- hungry(dave), happy(george).\ntall(dave) :- sad(george), hungry(eve).\nowns(dave,car) :- wet(car), sibling(dave,dave).\nparent(dave,eve) :- happy(frank), sibling(george,carol), wet(book).\nparent(frank,alice) :- cold.\nwet(car) :- friend(dave,bob), hungry(alice), parent(carol,frank).\nsmall(apple) :- owns(dave,apple).\nsmall(pencil).\nenemy(george,carol).\nlikes(dave,book).\nwet(pencil).\ndislikes(alice,dave).\nlikes(frank,book).\nhappy(carol).",
    "natural language": "You are given the following rules:\nIf eve dislikes alice, then dave is tall.\nIf dave is tall, then george is an enemy of george.\nIf dave is a parent of george and book is big and eve is a friend of george, then it is cold.\nIf book is small and carol likes ball, then it is cold.\nIf book is small and dave is an enemy of dave, then george is a sibling of dave.\nIf bob is tall, then frank owns phone.\nIf it is sunny and eve dislikes book and carol owns book, then frank dislikes book.\nIf it is sunny and george dislikes car and bob is a sibling of dave, then it is sunny.\nIf bob is a sibling of george and it is hot, then carol is a sibling of carol.\nIf eve dislikes frank and pencil is wet and george is tall, then carol dislikes pencil.\nIf frank dislikes george and apple is wet, then pencil is wet.\nIf frank is tall and pencil is wet and george is a friend of eve, then alice is tall.\nIf dave is hungry and george is happy, then it is sunny.\nIf george is sad and eve is hungry, then dave is tall.\nIf car is wet and dave is a sibling of dave, then dave owns car.\nIf frank is happy and george is a sibling of carol and book is wet, then dave is a parent of eve.\nIf it is cold, then frank is a parent of alice.\nIf dave is a friend of bob and alice is hungry and carol is a parent of frank, then car is wet.\nIf dave owns apple, then apple is small.\n\nAnd the following facts:\neve dislikes alice.\npencil is small.\ngeorge is an enemy of carol.\ndave likes book.\npencil is wet.\nalice dislikes dave.\nfrank likes book.\ncarol is happy.\n\nOBSERVATION: george is an enemy of george is true.\n\nQUESTION:\nCould eve dislikes alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,dave).",
    "c": "tall(dave) :- dislikes(eve,alice).\nenemy(george,george) :- tall(dave).\ncold :- parent(dave,george), big(book), friend(eve,george).\ncold :- small(book), likes(carol,ball).\nsibling(george,dave) :- small(book), enemy(dave,dave).\nowns(frank,phone) :- tall(bob).\ndislikes(frank,book) :- sunny, dislikes(eve,book), owns(carol,book).\nsunny :- sunny, dislikes(george,car), sibling(bob,dave).\nsibling(carol,carol) :- sibling(bob,george), hot.\ndislikes(carol,pencil) :- dislikes(eve,frank), wet(pencil), tall(george).\nwet(pencil) :- dislikes(frank,george), wet(apple).\ntall(alice) :- tall(frank), wet(pencil), friend(george,eve).\nsunny :- hungry(dave), happy(george).\ntall(dave) :- sad(george), hungry(eve).\nowns(dave,car) :- wet(car), sibling(dave,dave).\nparent(dave,eve) :- happy(frank), sibling(george,carol), wet(book).\nparent(frank,alice) :- cold.\nwet(car) :- friend(dave,bob), hungry(alice), parent(carol,frank).\nsmall(apple) :- owns(dave,apple).\ndislikes(eve,alice).\nsmall(pencil).\nenemy(george,carol).\nlikes(dave,book).\nwet(pencil).\nlikes(frank,book).\nhappy(carol).",
    "natural language": "You are given the following rules:\nIf eve dislikes alice, then dave is tall.\nIf dave is tall, then george is an enemy of george.\nIf dave is a parent of george and book is big and eve is a friend of george, then it is cold.\nIf book is small and carol likes ball, then it is cold.\nIf book is small and dave is an enemy of dave, then george is a sibling of dave.\nIf bob is tall, then frank owns phone.\nIf it is sunny and eve dislikes book and carol owns book, then frank dislikes book.\nIf it is sunny and george dislikes car and bob is a sibling of dave, then it is sunny.\nIf bob is a sibling of george and it is hot, then carol is a sibling of carol.\nIf eve dislikes frank and pencil is wet and george is tall, then carol dislikes pencil.\nIf frank dislikes george and apple is wet, then pencil is wet.\nIf frank is tall and pencil is wet and george is a friend of eve, then alice is tall.\nIf dave is hungry and george is happy, then it is sunny.\nIf george is sad and eve is hungry, then dave is tall.\nIf car is wet and dave is a sibling of dave, then dave owns car.\nIf frank is happy and george is a sibling of carol and book is wet, then dave is a parent of eve.\nIf it is cold, then frank is a parent of alice.\nIf dave is a friend of bob and alice is hungry and carol is a parent of frank, then car is wet.\nIf dave owns apple, then apple is small.\n\nAnd the following facts:\neve dislikes alice.\npencil is small.\ngeorge is an enemy of carol.\ndave likes book.\npencil is wet.\nalice dislikes dave.\nfrank likes book.\ncarol is happy.\n\nOBSERVATION: george is an enemy of george is true.\n\nQUESTION:\nCould alice dislikes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "tall(dave) :- dislikes(eve,alice).\nenemy(george,george) :- tall(dave).\ncold :- parent(dave,george), big(book), friend(eve,george).\ncold :- small(book), likes(carol,ball).\nsibling(george,dave) :- small(book), enemy(dave,dave).\nowns(frank,phone) :- tall(bob).\ndislikes(frank,book) :- sunny, dislikes(eve,book), owns(carol,book).\nsunny :- sunny, dislikes(george,car), sibling(bob,dave).\nsibling(carol,carol) :- sibling(bob,george), hot.\ndislikes(carol,pencil) :- dislikes(eve,frank), wet(pencil), tall(george).\nwet(pencil) :- dislikes(frank,george), wet(apple).\ntall(alice) :- tall(frank), wet(pencil), friend(george,eve).\nsunny :- hungry(dave), happy(george).\ntall(dave) :- sad(george), hungry(eve).\nowns(dave,car) :- wet(car), sibling(dave,dave).\nparent(dave,eve) :- happy(frank), sibling(george,carol), wet(book).\nparent(frank,alice) :- cold.\nwet(car) :- friend(dave,bob), hungry(alice), parent(carol,frank).\nsmall(apple) :- owns(dave,apple).\ndislikes(eve,alice).\nenemy(george,carol).\nlikes(dave,book).\nwet(pencil).\ndislikes(alice,dave).\nlikes(frank,book).\nhappy(carol).",
    "natural language": "You are given the following rules:\nIf eve dislikes alice, then dave is tall.\nIf dave is tall, then george is an enemy of george.\nIf dave is a parent of george and book is big and eve is a friend of george, then it is cold.\nIf book is small and carol likes ball, then it is cold.\nIf book is small and dave is an enemy of dave, then george is a sibling of dave.\nIf bob is tall, then frank owns phone.\nIf it is sunny and eve dislikes book and carol owns book, then frank dislikes book.\nIf it is sunny and george dislikes car and bob is a sibling of dave, then it is sunny.\nIf bob is a sibling of george and it is hot, then carol is a sibling of carol.\nIf eve dislikes frank and pencil is wet and george is tall, then carol dislikes pencil.\nIf frank dislikes george and apple is wet, then pencil is wet.\nIf frank is tall and pencil is wet and george is a friend of eve, then alice is tall.\nIf dave is hungry and george is happy, then it is sunny.\nIf george is sad and eve is hungry, then dave is tall.\nIf car is wet and dave is a sibling of dave, then dave owns car.\nIf frank is happy and george is a sibling of carol and book is wet, then dave is a parent of eve.\nIf it is cold, then frank is a parent of alice.\nIf dave is a friend of bob and alice is hungry and carol is a parent of frank, then car is wet.\nIf dave owns apple, then apple is small.\n\nAnd the following facts:\neve dislikes alice.\npencil is small.\ngeorge is an enemy of carol.\ndave likes book.\npencil is wet.\nalice dislikes dave.\nfrank likes book.\ncarol is happy.\n\nOBSERVATION: george is an enemy of george is true.\n\nQUESTION:\nCould pencil is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(dave,frank).",
    "c": "tall(alice) :- small(car).\nparent(frank,frank) :- tall(alice).\ntall(frank) :- parent(frank,frank).\nfriend(frank,frank) :- tall(frank).\nhappy(bob) :- tall(bob), happy(frank).\nbig(ball) :- friend(frank,frank), big(apple), wet(phone).\nhappy(carol) :- cold, happy(alice), friend(george,carol).\ntall(george) :- tall(bob).\nhot :- hot.\nhungry(george) :- friend(george,frank), cold, cold.\nbig(phone) :- owns(frank,book), sunny.\nsunny :- tall(dave).\ntall(frank) :- hungry(dave).\nhot :- wet(car), hot.\nenemy(bob,eve) :- big(ball).\nenemy(dave,alice) :- sunny, cold.\nhot :- cold, hot.\nsunny :- wet(car).\nsunny :- dislikes(dave,george), owns(bob,car).\nsmall(car).\nparent(frank,eve).\nwet(apple).\nsmall(ball).\nenemy(frank,alice).\ndislikes(dave,george).\nfriend(dave,frank).\ndislikes(frank,pencil).",
    "natural language": "You are given the following information:\nIf car is small, then alice is tall.\nIf alice is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank is tall.\nIf frank is tall, then frank is a friend of frank.\nIf bob is tall and frank is happy, then bob is happy.\nIf frank is a friend of frank and apple is big and phone is wet, then ball is big.\nIf it is cold and alice is happy and george is a friend of carol, then carol is happy.\nIf bob is tall, then george is tall.\nIf it is hot, then it is hot.\nIf george is a friend of frank and it is cold and it is cold, then george is hungry.\nIf frank owns book and it is sunny, then phone is big.\nIf dave is tall, then it is sunny.\nIf dave is hungry, then frank is tall.\nIf car is wet and it is hot, then it is hot.\nIf ball is big, then bob is an enemy of eve.\nIf it is sunny and it is cold, then dave is an enemy of alice.\nIf it is cold and it is hot, then it is hot.\nIf car is wet, then it is sunny.\nIf dave dislikes george and bob owns car, then it is sunny.\n\nAnd the following facts:\ncar is small.\nfrank is a parent of eve.\napple is wet.\nball is small.\nfrank is an enemy of alice.\ndave dislikes george.\ndave is a friend of frank.\nfrank dislikes pencil.\n\nQUESTION:\nIs dave is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(ball).",
    "c": "tall(alice) :- small(car).\nparent(frank,frank) :- tall(alice).\ntall(frank) :- parent(frank,frank).\nfriend(frank,frank) :- tall(frank).\nhappy(bob) :- tall(bob), happy(frank).\nbig(ball) :- friend(frank,frank), big(apple), wet(phone).\nhappy(carol) :- cold, happy(alice), friend(george,carol).\ntall(george) :- tall(bob).\nhot :- hot.\nhungry(george) :- friend(george,frank), cold, cold.\nbig(phone) :- owns(frank,book), sunny.\nsunny :- tall(dave).\ntall(frank) :- hungry(dave).\nhot :- wet(car), hot.\nenemy(bob,eve) :- big(ball).\nenemy(dave,alice) :- sunny, cold.\nhot :- cold, hot.\nsunny :- wet(car).\nsunny :- dislikes(dave,george), owns(bob,car).\nsmall(car).\nparent(frank,eve).\nwet(apple).\nsmall(ball).\nenemy(frank,alice).\ndislikes(dave,george).\nfriend(dave,frank).\ndislikes(frank,pencil).",
    "natural language": "You are given the following information:\nIf car is small, then alice is tall.\nIf alice is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank is tall.\nIf frank is tall, then frank is a friend of frank.\nIf bob is tall and frank is happy, then bob is happy.\nIf frank is a friend of frank and apple is big and phone is wet, then ball is big.\nIf it is cold and alice is happy and george is a friend of carol, then carol is happy.\nIf bob is tall, then george is tall.\nIf it is hot, then it is hot.\nIf george is a friend of frank and it is cold and it is cold, then george is hungry.\nIf frank owns book and it is sunny, then phone is big.\nIf dave is tall, then it is sunny.\nIf dave is hungry, then frank is tall.\nIf car is wet and it is hot, then it is hot.\nIf ball is big, then bob is an enemy of eve.\nIf it is sunny and it is cold, then dave is an enemy of alice.\nIf it is cold and it is hot, then it is hot.\nIf car is wet, then it is sunny.\nIf dave dislikes george and bob owns car, then it is sunny.\n\nAnd the following facts:\ncar is small.\nfrank is a parent of eve.\napple is wet.\nball is small.\nfrank is an enemy of alice.\ndave dislikes george.\ndave is a friend of frank.\nfrank dislikes pencil.\n\nQUESTION:\nIs ball is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,frank).",
    "c": "tall(alice) :- small(car).\nparent(frank,frank) :- tall(alice).\ntall(frank) :- parent(frank,frank).\nfriend(frank,frank) :- tall(frank).\nhappy(bob) :- tall(bob), happy(frank).\nbig(ball) :- friend(frank,frank), big(apple), wet(phone).\nhappy(carol) :- cold, happy(alice), friend(george,carol).\ntall(george) :- tall(bob).\nhot :- hot.\nhungry(george) :- friend(george,frank), cold, cold.\nbig(phone) :- owns(frank,book), sunny.\nsunny :- tall(dave).\ntall(frank) :- hungry(dave).\nhot :- wet(car), hot.\nenemy(bob,eve) :- big(ball).\nenemy(dave,alice) :- sunny, cold.\nhot :- cold, hot.\nsunny :- wet(car).\nsunny :- dislikes(dave,george), owns(bob,car).\nsmall(car).\nparent(frank,eve).\nwet(apple).\nsmall(ball).\nenemy(frank,alice).\ndislikes(dave,george).\nfriend(dave,frank).\ndislikes(frank,pencil).",
    "natural language": "You are given the following information:\nIf car is small, then alice is tall.\nIf alice is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank is tall.\nIf frank is tall, then frank is a friend of frank.\nIf bob is tall and frank is happy, then bob is happy.\nIf frank is a friend of frank and apple is big and phone is wet, then ball is big.\nIf it is cold and alice is happy and george is a friend of carol, then carol is happy.\nIf bob is tall, then george is tall.\nIf it is hot, then it is hot.\nIf george is a friend of frank and it is cold and it is cold, then george is hungry.\nIf frank owns book and it is sunny, then phone is big.\nIf dave is tall, then it is sunny.\nIf dave is hungry, then frank is tall.\nIf car is wet and it is hot, then it is hot.\nIf ball is big, then bob is an enemy of eve.\nIf it is sunny and it is cold, then dave is an enemy of alice.\nIf it is cold and it is hot, then it is hot.\nIf car is wet, then it is sunny.\nIf dave dislikes george and bob owns car, then it is sunny.\n\nAnd the following facts:\ncar is small.\nfrank is a parent of eve.\napple is wet.\nball is small.\nfrank is an enemy of alice.\ndave dislikes george.\ndave is a friend of frank.\nfrank dislikes pencil.\n\nQUESTION:\nIs frank is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,bob).",
    "c": "tall(alice) :- small(car).\nparent(frank,frank) :- tall(alice).\ntall(frank) :- parent(frank,frank).\nfriend(frank,frank) :- tall(frank).\nhappy(bob) :- tall(bob), happy(frank).\nbig(ball) :- friend(frank,frank), big(apple), wet(phone).\nhappy(carol) :- cold, happy(alice), friend(george,carol).\ntall(george) :- tall(bob).\nhot :- hot.\nhungry(george) :- friend(george,frank), cold, cold.\nbig(phone) :- owns(frank,book), sunny.\nsunny :- tall(dave).\ntall(frank) :- hungry(dave).\nhot :- wet(car), hot.\nenemy(bob,eve) :- big(ball).\nenemy(dave,alice) :- sunny, cold.\nhot :- cold, hot.\nsunny :- wet(car).\nsunny :- dislikes(dave,george), owns(bob,car).\nsmall(car).\nparent(frank,eve).\nwet(apple).\nsmall(ball).\nenemy(frank,alice).\ndislikes(dave,george).\nfriend(dave,frank).\ndislikes(frank,pencil).",
    "natural language": "You are given the following information:\nIf car is small, then alice is tall.\nIf alice is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank is tall.\nIf frank is tall, then frank is a friend of frank.\nIf bob is tall and frank is happy, then bob is happy.\nIf frank is a friend of frank and apple is big and phone is wet, then ball is big.\nIf it is cold and alice is happy and george is a friend of carol, then carol is happy.\nIf bob is tall, then george is tall.\nIf it is hot, then it is hot.\nIf george is a friend of frank and it is cold and it is cold, then george is hungry.\nIf frank owns book and it is sunny, then phone is big.\nIf dave is tall, then it is sunny.\nIf dave is hungry, then frank is tall.\nIf car is wet and it is hot, then it is hot.\nIf ball is big, then bob is an enemy of eve.\nIf it is sunny and it is cold, then dave is an enemy of alice.\nIf it is cold and it is hot, then it is hot.\nIf car is wet, then it is sunny.\nIf dave dislikes george and bob owns car, then it is sunny.\n\nAnd the following facts:\ncar is small.\nfrank is a parent of eve.\napple is wet.\nball is small.\nfrank is an enemy of alice.\ndave dislikes george.\ndave is a friend of frank.\nfrank dislikes pencil.\n\nQUESTION:\nIs eve dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,george).",
    "c": "tall(alice) :- small(car).\nparent(frank,frank) :- tall(alice).\ntall(frank) :- parent(frank,frank).\nfriend(frank,frank) :- tall(frank).\nhappy(bob) :- tall(bob), happy(frank).\nbig(ball) :- friend(frank,frank), big(apple), wet(phone).\nhappy(carol) :- cold, happy(alice), friend(george,carol).\ntall(george) :- tall(bob).\nhot :- hot.\nhungry(george) :- friend(george,frank), cold, cold.\nbig(phone) :- owns(frank,book), sunny.\nsunny :- tall(dave).\ntall(frank) :- hungry(dave).\nhot :- wet(car), hot.\nenemy(bob,eve) :- big(ball).\nenemy(dave,alice) :- sunny, cold.\nhot :- cold, hot.\nsunny :- wet(car).\nsunny :- dislikes(dave,george), owns(bob,car).\nsmall(car).\nparent(frank,eve).\nwet(apple).\nsmall(ball).\nenemy(frank,alice).\ndislikes(dave,george).\nfriend(dave,frank).\ndislikes(frank,pencil).",
    "natural language": "You are given the following information:\nIf car is small, then alice is tall.\nIf alice is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank is tall.\nIf frank is tall, then frank is a friend of frank.\nIf bob is tall and frank is happy, then bob is happy.\nIf frank is a friend of frank and apple is big and phone is wet, then ball is big.\nIf it is cold and alice is happy and george is a friend of carol, then carol is happy.\nIf bob is tall, then george is tall.\nIf it is hot, then it is hot.\nIf george is a friend of frank and it is cold and it is cold, then george is hungry.\nIf frank owns book and it is sunny, then phone is big.\nIf dave is tall, then it is sunny.\nIf dave is hungry, then frank is tall.\nIf car is wet and it is hot, then it is hot.\nIf ball is big, then bob is an enemy of eve.\nIf it is sunny and it is cold, then dave is an enemy of alice.\nIf it is cold and it is hot, then it is hot.\nIf car is wet, then it is sunny.\nIf dave dislikes george and bob owns car, then it is sunny.\n\nAnd the following facts:\ncar is small.\nfrank is a parent of eve.\napple is wet.\nball is small.\nfrank is an enemy of alice.\ndave dislikes george.\ndave is a friend of frank.\nfrank dislikes pencil.\n\nQUESTION:\nIs eve is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "tall(alice) :- small(car).\nparent(frank,frank) :- tall(alice).\ntall(frank) :- parent(frank,frank).\nfriend(frank,frank) :- tall(frank).\nhappy(bob) :- tall(bob), happy(frank).\nbig(ball) :- friend(frank,frank), big(apple), wet(phone).\nhappy(carol) :- cold, happy(alice), friend(george,carol).\ntall(george) :- tall(bob).\nhot :- hot.\nhungry(george) :- friend(george,frank), cold, cold.\nbig(phone) :- owns(frank,book), sunny.\nsunny :- tall(dave).\ntall(frank) :- hungry(dave).\nhot :- wet(car), hot.\nenemy(bob,eve) :- big(ball).\nenemy(dave,alice) :- sunny, cold.\nhot :- cold, hot.\nsunny :- wet(car).\nsunny :- dislikes(dave,george), owns(bob,car).\nparent(frank,eve).\nwet(apple).\nsmall(ball).\nenemy(frank,alice).\ndislikes(dave,george).\nfriend(dave,frank).\ndislikes(frank,pencil).",
    "natural language": "You are given the following rules:\nIf car is small, then alice is tall.\nIf alice is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank is tall.\nIf frank is tall, then frank is a friend of frank.\nIf bob is tall and frank is happy, then bob is happy.\nIf frank is a friend of frank and apple is big and phone is wet, then ball is big.\nIf it is cold and alice is happy and george is a friend of carol, then carol is happy.\nIf bob is tall, then george is tall.\nIf it is hot, then it is hot.\nIf george is a friend of frank and it is cold and it is cold, then george is hungry.\nIf frank owns book and it is sunny, then phone is big.\nIf dave is tall, then it is sunny.\nIf dave is hungry, then frank is tall.\nIf car is wet and it is hot, then it is hot.\nIf ball is big, then bob is an enemy of eve.\nIf it is sunny and it is cold, then dave is an enemy of alice.\nIf it is cold and it is hot, then it is hot.\nIf car is wet, then it is sunny.\nIf dave dislikes george and bob owns car, then it is sunny.\n\nAnd the following facts:\ncar is small.\nfrank is a parent of eve.\napple is wet.\nball is small.\nfrank is an enemy of alice.\ndave dislikes george.\ndave is a friend of frank.\nfrank dislikes pencil.\n\nOBSERVATION: frank is a friend of frank is true.\n\nQUESTION:\nCould car is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(dave,frank).",
    "c": "tall(alice) :- small(car).\nparent(frank,frank) :- tall(alice).\ntall(frank) :- parent(frank,frank).\nfriend(frank,frank) :- tall(frank).\nhappy(bob) :- tall(bob), happy(frank).\nbig(ball) :- friend(frank,frank), big(apple), wet(phone).\nhappy(carol) :- cold, happy(alice), friend(george,carol).\ntall(george) :- tall(bob).\nhot :- hot.\nhungry(george) :- friend(george,frank), cold, cold.\nbig(phone) :- owns(frank,book), sunny.\nsunny :- tall(dave).\ntall(frank) :- hungry(dave).\nhot :- wet(car), hot.\nenemy(bob,eve) :- big(ball).\nenemy(dave,alice) :- sunny, cold.\nhot :- cold, hot.\nsunny :- wet(car).\nsunny :- dislikes(dave,george), owns(bob,car).\nsmall(car).\nparent(frank,eve).\nwet(apple).\nsmall(ball).\nenemy(frank,alice).\ndislikes(dave,george).\ndislikes(frank,pencil).",
    "natural language": "You are given the following rules:\nIf car is small, then alice is tall.\nIf alice is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank is tall.\nIf frank is tall, then frank is a friend of frank.\nIf bob is tall and frank is happy, then bob is happy.\nIf frank is a friend of frank and apple is big and phone is wet, then ball is big.\nIf it is cold and alice is happy and george is a friend of carol, then carol is happy.\nIf bob is tall, then george is tall.\nIf it is hot, then it is hot.\nIf george is a friend of frank and it is cold and it is cold, then george is hungry.\nIf frank owns book and it is sunny, then phone is big.\nIf dave is tall, then it is sunny.\nIf dave is hungry, then frank is tall.\nIf car is wet and it is hot, then it is hot.\nIf ball is big, then bob is an enemy of eve.\nIf it is sunny and it is cold, then dave is an enemy of alice.\nIf it is cold and it is hot, then it is hot.\nIf car is wet, then it is sunny.\nIf dave dislikes george and bob owns car, then it is sunny.\n\nAnd the following facts:\ncar is small.\nfrank is a parent of eve.\napple is wet.\nball is small.\nfrank is an enemy of alice.\ndave dislikes george.\ndave is a friend of frank.\nfrank dislikes pencil.\n\nOBSERVATION: frank is a friend of frank is true.\n\nQUESTION:\nCould dave is a friend of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,george).",
    "c": "tall(alice) :- small(car).\nparent(frank,frank) :- tall(alice).\ntall(frank) :- parent(frank,frank).\nfriend(frank,frank) :- tall(frank).\nhappy(bob) :- tall(bob), happy(frank).\nbig(ball) :- friend(frank,frank), big(apple), wet(phone).\nhappy(carol) :- cold, happy(alice), friend(george,carol).\ntall(george) :- tall(bob).\nhot :- hot.\nhungry(george) :- friend(george,frank), cold, cold.\nbig(phone) :- owns(frank,book), sunny.\nsunny :- tall(dave).\ntall(frank) :- hungry(dave).\nhot :- wet(car), hot.\nenemy(bob,eve) :- big(ball).\nenemy(dave,alice) :- sunny, cold.\nhot :- cold, hot.\nsunny :- wet(car).\nsunny :- dislikes(dave,george), owns(bob,car).\nsmall(car).\nparent(frank,eve).\nwet(apple).\nsmall(ball).\nenemy(frank,alice).\nfriend(dave,frank).\ndislikes(frank,pencil).",
    "natural language": "You are given the following rules:\nIf car is small, then alice is tall.\nIf alice is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank is tall.\nIf frank is tall, then frank is a friend of frank.\nIf bob is tall and frank is happy, then bob is happy.\nIf frank is a friend of frank and apple is big and phone is wet, then ball is big.\nIf it is cold and alice is happy and george is a friend of carol, then carol is happy.\nIf bob is tall, then george is tall.\nIf it is hot, then it is hot.\nIf george is a friend of frank and it is cold and it is cold, then george is hungry.\nIf frank owns book and it is sunny, then phone is big.\nIf dave is tall, then it is sunny.\nIf dave is hungry, then frank is tall.\nIf car is wet and it is hot, then it is hot.\nIf ball is big, then bob is an enemy of eve.\nIf it is sunny and it is cold, then dave is an enemy of alice.\nIf it is cold and it is hot, then it is hot.\nIf car is wet, then it is sunny.\nIf dave dislikes george and bob owns car, then it is sunny.\n\nAnd the following facts:\ncar is small.\nfrank is a parent of eve.\napple is wet.\nball is small.\nfrank is an enemy of alice.\ndave dislikes george.\ndave is a friend of frank.\nfrank dislikes pencil.\n\nOBSERVATION: frank is a friend of frank is true.\n\nQUESTION:\nCould dave dislikes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(frank,alice).",
    "c": "happy(bob) :- hot.\nsibling(alice,dave) :- happy(bob).\nlikes(eve,alice) :- sibling(alice,dave).\ndislikes(bob,dave) :- likes(eve,alice).\nsunny :- sunny.\nenemy(george,alice) :- owns(carol,book).\nsunny :- small(ball), enemy(bob,frank), happy(carol).\nenemy(bob,eve) :- friend(frank,dave), parent(alice,frank).\nhot :- small(pencil), friend(frank,eve).\nhot :- happy(frank), big(pencil), owns(eve,phone).\nfriend(george,eve) :- hungry(alice), sibling(dave,carol).\nfriend(dave,carol) :- happy(alice).\nbig(book) :- dislikes(carol,dave).\ndislikes(carol,ball) :- small(pencil), small(phone).\nsmall(car) :- likes(dave,bob), big(car), small(ball).\nenemy(dave,alice) :- enemy(carol,george), small(car).\nhappy(frank) :- happy(eve), small(phone), dislikes(dave,carol).\ndislikes(alice,alice) :- likes(carol,carol), likes(frank,phone).\nhappy(eve) :- hungry(bob).\nhot.\nlikes(dave,apple).\nparent(carol,alice).\nfriend(eve,george).\nfriend(carol,george).\nsibling(carol,george).\ndislikes(george,carol).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf it is hot, then bob is happy.\nIf bob is happy, then alice is a sibling of dave.\nIf alice is a sibling of dave, then eve likes alice.\nIf eve likes alice, then bob dislikes dave.\nIf it is sunny, then it is sunny.\nIf carol owns book, then george is an enemy of alice.\nIf ball is small and bob is an enemy of frank and carol is happy, then it is sunny.\nIf frank is a friend of dave and alice is a parent of frank, then bob is an enemy of eve.\nIf pencil is small and frank is a friend of eve, then it is hot.\nIf frank is happy and pencil is big and eve owns phone, then it is hot.\nIf alice is hungry and dave is a sibling of carol, then george is a friend of eve.\nIf alice is happy, then dave is a friend of carol.\nIf carol dislikes dave, then book is big.\nIf pencil is small and phone is small, then carol dislikes ball.\nIf dave likes bob and car is big and ball is small, then car is small.\nIf carol is an enemy of george and car is small, then dave is an enemy of alice.\nIf eve is happy and phone is small and dave dislikes carol, then frank is happy.\nIf carol likes carol and frank likes phone, then alice dislikes alice.\nIf bob is hungry, then eve is happy.\n\nAnd the following facts:\nit is hot.\ndave likes apple.\ncarol is a parent of alice.\neve is a friend of george.\ncarol is a friend of george.\ncarol is a sibling of george.\ngeorge dislikes carol.\nfrank is an enemy of alice.\n\nQUESTION:\nIs frank is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "happy(bob) :- hot.\nsibling(alice,dave) :- happy(bob).\nlikes(eve,alice) :- sibling(alice,dave).\ndislikes(bob,dave) :- likes(eve,alice).\nsunny :- sunny.\nenemy(george,alice) :- owns(carol,book).\nsunny :- small(ball), enemy(bob,frank), happy(carol).\nenemy(bob,eve) :- friend(frank,dave), parent(alice,frank).\nhot :- small(pencil), friend(frank,eve).\nhot :- happy(frank), big(pencil), owns(eve,phone).\nfriend(george,eve) :- hungry(alice), sibling(dave,carol).\nfriend(dave,carol) :- happy(alice).\nbig(book) :- dislikes(carol,dave).\ndislikes(carol,ball) :- small(pencil), small(phone).\nsmall(car) :- likes(dave,bob), big(car), small(ball).\nenemy(dave,alice) :- enemy(carol,george), small(car).\nhappy(frank) :- happy(eve), small(phone), dislikes(dave,carol).\ndislikes(alice,alice) :- likes(carol,carol), likes(frank,phone).\nhappy(eve) :- hungry(bob).\nhot.\nlikes(dave,apple).\nparent(carol,alice).\nfriend(eve,george).\nfriend(carol,george).\nsibling(carol,george).\ndislikes(george,carol).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf it is hot, then bob is happy.\nIf bob is happy, then alice is a sibling of dave.\nIf alice is a sibling of dave, then eve likes alice.\nIf eve likes alice, then bob dislikes dave.\nIf it is sunny, then it is sunny.\nIf carol owns book, then george is an enemy of alice.\nIf ball is small and bob is an enemy of frank and carol is happy, then it is sunny.\nIf frank is a friend of dave and alice is a parent of frank, then bob is an enemy of eve.\nIf pencil is small and frank is a friend of eve, then it is hot.\nIf frank is happy and pencil is big and eve owns phone, then it is hot.\nIf alice is hungry and dave is a sibling of carol, then george is a friend of eve.\nIf alice is happy, then dave is a friend of carol.\nIf carol dislikes dave, then book is big.\nIf pencil is small and phone is small, then carol dislikes ball.\nIf dave likes bob and car is big and ball is small, then car is small.\nIf carol is an enemy of george and car is small, then dave is an enemy of alice.\nIf eve is happy and phone is small and dave dislikes carol, then frank is happy.\nIf carol likes carol and frank likes phone, then alice dislikes alice.\nIf bob is hungry, then eve is happy.\n\nAnd the following facts:\nit is hot.\ndave likes apple.\ncarol is a parent of alice.\neve is a friend of george.\ncarol is a friend of george.\ncarol is a sibling of george.\ngeorge dislikes carol.\nfrank is an enemy of alice.\n\nQUESTION:\nIs dave likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,carol).",
    "c": "happy(bob) :- hot.\nsibling(alice,dave) :- happy(bob).\nlikes(eve,alice) :- sibling(alice,dave).\ndislikes(bob,dave) :- likes(eve,alice).\nsunny :- sunny.\nenemy(george,alice) :- owns(carol,book).\nsunny :- small(ball), enemy(bob,frank), happy(carol).\nenemy(bob,eve) :- friend(frank,dave), parent(alice,frank).\nhot :- small(pencil), friend(frank,eve).\nhot :- happy(frank), big(pencil), owns(eve,phone).\nfriend(george,eve) :- hungry(alice), sibling(dave,carol).\nfriend(dave,carol) :- happy(alice).\nbig(book) :- dislikes(carol,dave).\ndislikes(carol,ball) :- small(pencil), small(phone).\nsmall(car) :- likes(dave,bob), big(car), small(ball).\nenemy(dave,alice) :- enemy(carol,george), small(car).\nhappy(frank) :- happy(eve), small(phone), dislikes(dave,carol).\ndislikes(alice,alice) :- likes(carol,carol), likes(frank,phone).\nhappy(eve) :- hungry(bob).\nhot.\nlikes(dave,apple).\nparent(carol,alice).\nfriend(eve,george).\nfriend(carol,george).\nsibling(carol,george).\ndislikes(george,carol).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf it is hot, then bob is happy.\nIf bob is happy, then alice is a sibling of dave.\nIf alice is a sibling of dave, then eve likes alice.\nIf eve likes alice, then bob dislikes dave.\nIf it is sunny, then it is sunny.\nIf carol owns book, then george is an enemy of alice.\nIf ball is small and bob is an enemy of frank and carol is happy, then it is sunny.\nIf frank is a friend of dave and alice is a parent of frank, then bob is an enemy of eve.\nIf pencil is small and frank is a friend of eve, then it is hot.\nIf frank is happy and pencil is big and eve owns phone, then it is hot.\nIf alice is hungry and dave is a sibling of carol, then george is a friend of eve.\nIf alice is happy, then dave is a friend of carol.\nIf carol dislikes dave, then book is big.\nIf pencil is small and phone is small, then carol dislikes ball.\nIf dave likes bob and car is big and ball is small, then car is small.\nIf carol is an enemy of george and car is small, then dave is an enemy of alice.\nIf eve is happy and phone is small and dave dislikes carol, then frank is happy.\nIf carol likes carol and frank likes phone, then alice dislikes alice.\nIf bob is hungry, then eve is happy.\n\nAnd the following facts:\nit is hot.\ndave likes apple.\ncarol is a parent of alice.\neve is a friend of george.\ncarol is a friend of george.\ncarol is a sibling of george.\ngeorge dislikes carol.\nfrank is an enemy of alice.\n\nQUESTION:\nIs george dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,alice).",
    "c": "happy(bob) :- hot.\nsibling(alice,dave) :- happy(bob).\nlikes(eve,alice) :- sibling(alice,dave).\ndislikes(bob,dave) :- likes(eve,alice).\nsunny :- sunny.\nenemy(george,alice) :- owns(carol,book).\nsunny :- small(ball), enemy(bob,frank), happy(carol).\nenemy(bob,eve) :- friend(frank,dave), parent(alice,frank).\nhot :- small(pencil), friend(frank,eve).\nhot :- happy(frank), big(pencil), owns(eve,phone).\nfriend(george,eve) :- hungry(alice), sibling(dave,carol).\nfriend(dave,carol) :- happy(alice).\nbig(book) :- dislikes(carol,dave).\ndislikes(carol,ball) :- small(pencil), small(phone).\nsmall(car) :- likes(dave,bob), big(car), small(ball).\nenemy(dave,alice) :- enemy(carol,george), small(car).\nhappy(frank) :- happy(eve), small(phone), dislikes(dave,carol).\ndislikes(alice,alice) :- likes(carol,carol), likes(frank,phone).\nhappy(eve) :- hungry(bob).\nhot.\nlikes(dave,apple).\nparent(carol,alice).\nfriend(eve,george).\nfriend(carol,george).\nsibling(carol,george).\ndislikes(george,carol).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf it is hot, then bob is happy.\nIf bob is happy, then alice is a sibling of dave.\nIf alice is a sibling of dave, then eve likes alice.\nIf eve likes alice, then bob dislikes dave.\nIf it is sunny, then it is sunny.\nIf carol owns book, then george is an enemy of alice.\nIf ball is small and bob is an enemy of frank and carol is happy, then it is sunny.\nIf frank is a friend of dave and alice is a parent of frank, then bob is an enemy of eve.\nIf pencil is small and frank is a friend of eve, then it is hot.\nIf frank is happy and pencil is big and eve owns phone, then it is hot.\nIf alice is hungry and dave is a sibling of carol, then george is a friend of eve.\nIf alice is happy, then dave is a friend of carol.\nIf carol dislikes dave, then book is big.\nIf pencil is small and phone is small, then carol dislikes ball.\nIf dave likes bob and car is big and ball is small, then car is small.\nIf carol is an enemy of george and car is small, then dave is an enemy of alice.\nIf eve is happy and phone is small and dave dislikes carol, then frank is happy.\nIf carol likes carol and frank likes phone, then alice dislikes alice.\nIf bob is hungry, then eve is happy.\n\nAnd the following facts:\nit is hot.\ndave likes apple.\ncarol is a parent of alice.\neve is a friend of george.\ncarol is a friend of george.\ncarol is a sibling of george.\ngeorge dislikes carol.\nfrank is an enemy of alice.\n\nQUESTION:\nIs frank is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,george).",
    "c": "happy(bob) :- hot.\nsibling(alice,dave) :- happy(bob).\nlikes(eve,alice) :- sibling(alice,dave).\ndislikes(bob,dave) :- likes(eve,alice).\nsunny :- sunny.\nenemy(george,alice) :- owns(carol,book).\nsunny :- small(ball), enemy(bob,frank), happy(carol).\nenemy(bob,eve) :- friend(frank,dave), parent(alice,frank).\nhot :- small(pencil), friend(frank,eve).\nhot :- happy(frank), big(pencil), owns(eve,phone).\nfriend(george,eve) :- hungry(alice), sibling(dave,carol).\nfriend(dave,carol) :- happy(alice).\nbig(book) :- dislikes(carol,dave).\ndislikes(carol,ball) :- small(pencil), small(phone).\nsmall(car) :- likes(dave,bob), big(car), small(ball).\nenemy(dave,alice) :- enemy(carol,george), small(car).\nhappy(frank) :- happy(eve), small(phone), dislikes(dave,carol).\ndislikes(alice,alice) :- likes(carol,carol), likes(frank,phone).\nhappy(eve) :- hungry(bob).\nhot.\nlikes(dave,apple).\nparent(carol,alice).\nfriend(eve,george).\nfriend(carol,george).\nsibling(carol,george).\ndislikes(george,carol).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf it is hot, then bob is happy.\nIf bob is happy, then alice is a sibling of dave.\nIf alice is a sibling of dave, then eve likes alice.\nIf eve likes alice, then bob dislikes dave.\nIf it is sunny, then it is sunny.\nIf carol owns book, then george is an enemy of alice.\nIf ball is small and bob is an enemy of frank and carol is happy, then it is sunny.\nIf frank is a friend of dave and alice is a parent of frank, then bob is an enemy of eve.\nIf pencil is small and frank is a friend of eve, then it is hot.\nIf frank is happy and pencil is big and eve owns phone, then it is hot.\nIf alice is hungry and dave is a sibling of carol, then george is a friend of eve.\nIf alice is happy, then dave is a friend of carol.\nIf carol dislikes dave, then book is big.\nIf pencil is small and phone is small, then carol dislikes ball.\nIf dave likes bob and car is big and ball is small, then car is small.\nIf carol is an enemy of george and car is small, then dave is an enemy of alice.\nIf eve is happy and phone is small and dave dislikes carol, then frank is happy.\nIf carol likes carol and frank likes phone, then alice dislikes alice.\nIf bob is hungry, then eve is happy.\n\nAnd the following facts:\nit is hot.\ndave likes apple.\ncarol is a parent of alice.\neve is a friend of george.\ncarol is a friend of george.\ncarol is a sibling of george.\ngeorge dislikes carol.\nfrank is an enemy of alice.\n\nQUESTION:\nIs eve dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "happy(bob) :- hot.\nsibling(alice,dave) :- happy(bob).\nlikes(eve,alice) :- sibling(alice,dave).\ndislikes(bob,dave) :- likes(eve,alice).\nsunny :- sunny.\nenemy(george,alice) :- owns(carol,book).\nsunny :- small(ball), enemy(bob,frank), happy(carol).\nenemy(bob,eve) :- friend(frank,dave), parent(alice,frank).\nhot :- small(pencil), friend(frank,eve).\nhot :- happy(frank), big(pencil), owns(eve,phone).\nfriend(george,eve) :- hungry(alice), sibling(dave,carol).\nfriend(dave,carol) :- happy(alice).\nbig(book) :- dislikes(carol,dave).\ndislikes(carol,ball) :- small(pencil), small(phone).\nsmall(car) :- likes(dave,bob), big(car), small(ball).\nenemy(dave,alice) :- enemy(carol,george), small(car).\nhappy(frank) :- happy(eve), small(phone), dislikes(dave,carol).\ndislikes(alice,alice) :- likes(carol,carol), likes(frank,phone).\nhappy(eve) :- hungry(bob).\nlikes(dave,apple).\nparent(carol,alice).\nfriend(eve,george).\nfriend(carol,george).\nsibling(carol,george).\ndislikes(george,carol).\nenemy(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is hot, then bob is happy.\nIf bob is happy, then alice is a sibling of dave.\nIf alice is a sibling of dave, then eve likes alice.\nIf eve likes alice, then bob dislikes dave.\nIf it is sunny, then it is sunny.\nIf carol owns book, then george is an enemy of alice.\nIf ball is small and bob is an enemy of frank and carol is happy, then it is sunny.\nIf frank is a friend of dave and alice is a parent of frank, then bob is an enemy of eve.\nIf pencil is small and frank is a friend of eve, then it is hot.\nIf frank is happy and pencil is big and eve owns phone, then it is hot.\nIf alice is hungry and dave is a sibling of carol, then george is a friend of eve.\nIf alice is happy, then dave is a friend of carol.\nIf carol dislikes dave, then book is big.\nIf pencil is small and phone is small, then carol dislikes ball.\nIf dave likes bob and car is big and ball is small, then car is small.\nIf carol is an enemy of george and car is small, then dave is an enemy of alice.\nIf eve is happy and phone is small and dave dislikes carol, then frank is happy.\nIf carol likes carol and frank likes phone, then alice dislikes alice.\nIf bob is hungry, then eve is happy.\n\nAnd the following facts:\nit is hot.\ndave likes apple.\ncarol is a parent of alice.\neve is a friend of george.\ncarol is a friend of george.\ncarol is a sibling of george.\ngeorge dislikes carol.\nfrank is an enemy of alice.\n\nOBSERVATION: bob dislikes dave is true.\n\nQUESTION:\nCould it is hot be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(frank,alice).",
    "c": "happy(bob) :- hot.\nsibling(alice,dave) :- happy(bob).\nlikes(eve,alice) :- sibling(alice,dave).\ndislikes(bob,dave) :- likes(eve,alice).\nsunny :- sunny.\nenemy(george,alice) :- owns(carol,book).\nsunny :- small(ball), enemy(bob,frank), happy(carol).\nenemy(bob,eve) :- friend(frank,dave), parent(alice,frank).\nhot :- small(pencil), friend(frank,eve).\nhot :- happy(frank), big(pencil), owns(eve,phone).\nfriend(george,eve) :- hungry(alice), sibling(dave,carol).\nfriend(dave,carol) :- happy(alice).\nbig(book) :- dislikes(carol,dave).\ndislikes(carol,ball) :- small(pencil), small(phone).\nsmall(car) :- likes(dave,bob), big(car), small(ball).\nenemy(dave,alice) :- enemy(carol,george), small(car).\nhappy(frank) :- happy(eve), small(phone), dislikes(dave,carol).\ndislikes(alice,alice) :- likes(carol,carol), likes(frank,phone).\nhappy(eve) :- hungry(bob).\nhot.\nlikes(dave,apple).\nparent(carol,alice).\nfriend(eve,george).\nfriend(carol,george).\nsibling(carol,george).\ndislikes(george,carol).",
    "natural language": "You are given the following rules:\nIf it is hot, then bob is happy.\nIf bob is happy, then alice is a sibling of dave.\nIf alice is a sibling of dave, then eve likes alice.\nIf eve likes alice, then bob dislikes dave.\nIf it is sunny, then it is sunny.\nIf carol owns book, then george is an enemy of alice.\nIf ball is small and bob is an enemy of frank and carol is happy, then it is sunny.\nIf frank is a friend of dave and alice is a parent of frank, then bob is an enemy of eve.\nIf pencil is small and frank is a friend of eve, then it is hot.\nIf frank is happy and pencil is big and eve owns phone, then it is hot.\nIf alice is hungry and dave is a sibling of carol, then george is a friend of eve.\nIf alice is happy, then dave is a friend of carol.\nIf carol dislikes dave, then book is big.\nIf pencil is small and phone is small, then carol dislikes ball.\nIf dave likes bob and car is big and ball is small, then car is small.\nIf carol is an enemy of george and car is small, then dave is an enemy of alice.\nIf eve is happy and phone is small and dave dislikes carol, then frank is happy.\nIf carol likes carol and frank likes phone, then alice dislikes alice.\nIf bob is hungry, then eve is happy.\n\nAnd the following facts:\nit is hot.\ndave likes apple.\ncarol is a parent of alice.\neve is a friend of george.\ncarol is a friend of george.\ncarol is a sibling of george.\ngeorge dislikes carol.\nfrank is an enemy of alice.\n\nOBSERVATION: bob dislikes dave is true.\n\nQUESTION:\nCould frank is an enemy of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "happy(bob) :- hot.\nsibling(alice,dave) :- happy(bob).\nlikes(eve,alice) :- sibling(alice,dave).\ndislikes(bob,dave) :- likes(eve,alice).\nsunny :- sunny.\nenemy(george,alice) :- owns(carol,book).\nsunny :- small(ball), enemy(bob,frank), happy(carol).\nenemy(bob,eve) :- friend(frank,dave), parent(alice,frank).\nhot :- small(pencil), friend(frank,eve).\nhot :- happy(frank), big(pencil), owns(eve,phone).\nfriend(george,eve) :- hungry(alice), sibling(dave,carol).\nfriend(dave,carol) :- happy(alice).\nbig(book) :- dislikes(carol,dave).\ndislikes(carol,ball) :- small(pencil), small(phone).\nsmall(car) :- likes(dave,bob), big(car), small(ball).\nenemy(dave,alice) :- enemy(carol,george), small(car).\nhappy(frank) :- happy(eve), small(phone), dislikes(dave,carol).\ndislikes(alice,alice) :- likes(carol,carol), likes(frank,phone).\nhappy(eve) :- hungry(bob).\nhot.\nlikes(dave,apple).\nparent(carol,alice).\nfriend(eve,george).\nfriend(carol,george).\ndislikes(george,carol).\nenemy(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is hot, then bob is happy.\nIf bob is happy, then alice is a sibling of dave.\nIf alice is a sibling of dave, then eve likes alice.\nIf eve likes alice, then bob dislikes dave.\nIf it is sunny, then it is sunny.\nIf carol owns book, then george is an enemy of alice.\nIf ball is small and bob is an enemy of frank and carol is happy, then it is sunny.\nIf frank is a friend of dave and alice is a parent of frank, then bob is an enemy of eve.\nIf pencil is small and frank is a friend of eve, then it is hot.\nIf frank is happy and pencil is big and eve owns phone, then it is hot.\nIf alice is hungry and dave is a sibling of carol, then george is a friend of eve.\nIf alice is happy, then dave is a friend of carol.\nIf carol dislikes dave, then book is big.\nIf pencil is small and phone is small, then carol dislikes ball.\nIf dave likes bob and car is big and ball is small, then car is small.\nIf carol is an enemy of george and car is small, then dave is an enemy of alice.\nIf eve is happy and phone is small and dave dislikes carol, then frank is happy.\nIf carol likes carol and frank likes phone, then alice dislikes alice.\nIf bob is hungry, then eve is happy.\n\nAnd the following facts:\nit is hot.\ndave likes apple.\ncarol is a parent of alice.\neve is a friend of george.\ncarol is a friend of george.\ncarol is a sibling of george.\ngeorge dislikes carol.\nfrank is an enemy of alice.\n\nOBSERVATION: bob dislikes dave is true.\n\nQUESTION:\nCould carol is a sibling of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(car).",
    "c": "owns(george,ball) :- sunny.\nsmall(car) :- owns(george,ball).\nenemy(bob,george) :- small(car).\nsibling(george,carol) :- enemy(bob,george).\nowns(carol,ball) :- sibling(george,carol).\nsunny :- owns(carol,ball).\ntall(alice) :- tall(dave), enemy(bob,dave).\ntall(alice) :- owns(alice,book).\nsad(alice) :- hot.\nsibling(alice,bob) :- sad(carol).\nsibling(carol,frank) :- sibling(alice,dave), sibling(dave,frank), hot.\nsad(george) :- small(book), sad(dave).\nsunny :- hungry(dave), likes(alice,apple).\nhot :- happy(george), hot, hot.\nhappy(george) :- enemy(eve,carol), happy(carol), big(apple).\nsunny :- sunny, sad(carol), enemy(eve,carol).\nhappy(alice) :- happy(dave), parent(dave,frank).\nsunny :- sunny, sunny, sunny.\nwet(phone) :- likes(george,alice), wet(apple).\nsunny.\nenemy(alice,bob).\nenemy(george,dave).\nhappy(dave).\nowns(george,ball).\nenemy(carol,bob).\nowns(alice,phone).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns ball.\nIf george owns ball, then car is small.\nIf car is small, then bob is an enemy of george.\nIf bob is an enemy of george, then george is a sibling of carol.\nIf george is a sibling of carol, then carol owns ball.\nIf carol owns ball, then it is sunny.\nIf dave is tall and bob is an enemy of dave, then alice is tall.\nIf alice owns book, then alice is tall.\nIf it is hot, then alice is sad.\nIf carol is sad, then alice is a sibling of bob.\nIf alice is a sibling of dave and dave is a sibling of frank and it is hot, then carol is a sibling of frank.\nIf book is small and dave is sad, then george is sad.\nIf dave is hungry and alice likes apple, then it is sunny.\nIf george is happy and it is hot and it is hot, then it is hot.\nIf eve is an enemy of carol and carol is happy and apple is big, then george is happy.\nIf it is sunny and carol is sad and eve is an enemy of carol, then it is sunny.\nIf dave is happy and dave is a parent of frank, then alice is happy.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf george likes alice and apple is wet, then phone is wet.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\ngeorge is an enemy of dave.\ndave is happy.\ngeorge owns ball.\ncarol is an enemy of bob.\nalice owns phone.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs car is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "owns(george,ball) :- sunny.\nsmall(car) :- owns(george,ball).\nenemy(bob,george) :- small(car).\nsibling(george,carol) :- enemy(bob,george).\nowns(carol,ball) :- sibling(george,carol).\nsunny :- owns(carol,ball).\ntall(alice) :- tall(dave), enemy(bob,dave).\ntall(alice) :- owns(alice,book).\nsad(alice) :- hot.\nsibling(alice,bob) :- sad(carol).\nsibling(carol,frank) :- sibling(alice,dave), sibling(dave,frank), hot.\nsad(george) :- small(book), sad(dave).\nsunny :- hungry(dave), likes(alice,apple).\nhot :- happy(george), hot, hot.\nhappy(george) :- enemy(eve,carol), happy(carol), big(apple).\nsunny :- sunny, sad(carol), enemy(eve,carol).\nhappy(alice) :- happy(dave), parent(dave,frank).\nsunny :- sunny, sunny, sunny.\nwet(phone) :- likes(george,alice), wet(apple).\nsunny.\nenemy(alice,bob).\nenemy(george,dave).\nhappy(dave).\nowns(george,ball).\nenemy(carol,bob).\nowns(alice,phone).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns ball.\nIf george owns ball, then car is small.\nIf car is small, then bob is an enemy of george.\nIf bob is an enemy of george, then george is a sibling of carol.\nIf george is a sibling of carol, then carol owns ball.\nIf carol owns ball, then it is sunny.\nIf dave is tall and bob is an enemy of dave, then alice is tall.\nIf alice owns book, then alice is tall.\nIf it is hot, then alice is sad.\nIf carol is sad, then alice is a sibling of bob.\nIf alice is a sibling of dave and dave is a sibling of frank and it is hot, then carol is a sibling of frank.\nIf book is small and dave is sad, then george is sad.\nIf dave is hungry and alice likes apple, then it is sunny.\nIf george is happy and it is hot and it is hot, then it is hot.\nIf eve is an enemy of carol and carol is happy and apple is big, then george is happy.\nIf it is sunny and carol is sad and eve is an enemy of carol, then it is sunny.\nIf dave is happy and dave is a parent of frank, then alice is happy.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf george likes alice and apple is wet, then phone is wet.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\ngeorge is an enemy of dave.\ndave is happy.\ngeorge owns ball.\ncarol is an enemy of bob.\nalice owns phone.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,frank).",
    "c": "owns(george,ball) :- sunny.\nsmall(car) :- owns(george,ball).\nenemy(bob,george) :- small(car).\nsibling(george,carol) :- enemy(bob,george).\nowns(carol,ball) :- sibling(george,carol).\nsunny :- owns(carol,ball).\ntall(alice) :- tall(dave), enemy(bob,dave).\ntall(alice) :- owns(alice,book).\nsad(alice) :- hot.\nsibling(alice,bob) :- sad(carol).\nsibling(carol,frank) :- sibling(alice,dave), sibling(dave,frank), hot.\nsad(george) :- small(book), sad(dave).\nsunny :- hungry(dave), likes(alice,apple).\nhot :- happy(george), hot, hot.\nhappy(george) :- enemy(eve,carol), happy(carol), big(apple).\nsunny :- sunny, sad(carol), enemy(eve,carol).\nhappy(alice) :- happy(dave), parent(dave,frank).\nsunny :- sunny, sunny, sunny.\nwet(phone) :- likes(george,alice), wet(apple).\nsunny.\nenemy(alice,bob).\nenemy(george,dave).\nhappy(dave).\nowns(george,ball).\nenemy(carol,bob).\nowns(alice,phone).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns ball.\nIf george owns ball, then car is small.\nIf car is small, then bob is an enemy of george.\nIf bob is an enemy of george, then george is a sibling of carol.\nIf george is a sibling of carol, then carol owns ball.\nIf carol owns ball, then it is sunny.\nIf dave is tall and bob is an enemy of dave, then alice is tall.\nIf alice owns book, then alice is tall.\nIf it is hot, then alice is sad.\nIf carol is sad, then alice is a sibling of bob.\nIf alice is a sibling of dave and dave is a sibling of frank and it is hot, then carol is a sibling of frank.\nIf book is small and dave is sad, then george is sad.\nIf dave is hungry and alice likes apple, then it is sunny.\nIf george is happy and it is hot and it is hot, then it is hot.\nIf eve is an enemy of carol and carol is happy and apple is big, then george is happy.\nIf it is sunny and carol is sad and eve is an enemy of carol, then it is sunny.\nIf dave is happy and dave is a parent of frank, then alice is happy.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf george likes alice and apple is wet, then phone is wet.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\ngeorge is an enemy of dave.\ndave is happy.\ngeorge owns ball.\ncarol is an enemy of bob.\nalice owns phone.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs george is an enemy of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,book).",
    "c": "owns(george,ball) :- sunny.\nsmall(car) :- owns(george,ball).\nenemy(bob,george) :- small(car).\nsibling(george,carol) :- enemy(bob,george).\nowns(carol,ball) :- sibling(george,carol).\nsunny :- owns(carol,ball).\ntall(alice) :- tall(dave), enemy(bob,dave).\ntall(alice) :- owns(alice,book).\nsad(alice) :- hot.\nsibling(alice,bob) :- sad(carol).\nsibling(carol,frank) :- sibling(alice,dave), sibling(dave,frank), hot.\nsad(george) :- small(book), sad(dave).\nsunny :- hungry(dave), likes(alice,apple).\nhot :- happy(george), hot, hot.\nhappy(george) :- enemy(eve,carol), happy(carol), big(apple).\nsunny :- sunny, sad(carol), enemy(eve,carol).\nhappy(alice) :- happy(dave), parent(dave,frank).\nsunny :- sunny, sunny, sunny.\nwet(phone) :- likes(george,alice), wet(apple).\nsunny.\nenemy(alice,bob).\nenemy(george,dave).\nhappy(dave).\nowns(george,ball).\nenemy(carol,bob).\nowns(alice,phone).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns ball.\nIf george owns ball, then car is small.\nIf car is small, then bob is an enemy of george.\nIf bob is an enemy of george, then george is a sibling of carol.\nIf george is a sibling of carol, then carol owns ball.\nIf carol owns ball, then it is sunny.\nIf dave is tall and bob is an enemy of dave, then alice is tall.\nIf alice owns book, then alice is tall.\nIf it is hot, then alice is sad.\nIf carol is sad, then alice is a sibling of bob.\nIf alice is a sibling of dave and dave is a sibling of frank and it is hot, then carol is a sibling of frank.\nIf book is small and dave is sad, then george is sad.\nIf dave is hungry and alice likes apple, then it is sunny.\nIf george is happy and it is hot and it is hot, then it is hot.\nIf eve is an enemy of carol and carol is happy and apple is big, then george is happy.\nIf it is sunny and carol is sad and eve is an enemy of carol, then it is sunny.\nIf dave is happy and dave is a parent of frank, then alice is happy.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf george likes alice and apple is wet, then phone is wet.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\ngeorge is an enemy of dave.\ndave is happy.\ngeorge owns ball.\ncarol is an enemy of bob.\nalice owns phone.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs george likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,phone).",
    "c": "owns(george,ball) :- sunny.\nsmall(car) :- owns(george,ball).\nenemy(bob,george) :- small(car).\nsibling(george,carol) :- enemy(bob,george).\nowns(carol,ball) :- sibling(george,carol).\nsunny :- owns(carol,ball).\ntall(alice) :- tall(dave), enemy(bob,dave).\ntall(alice) :- owns(alice,book).\nsad(alice) :- hot.\nsibling(alice,bob) :- sad(carol).\nsibling(carol,frank) :- sibling(alice,dave), sibling(dave,frank), hot.\nsad(george) :- small(book), sad(dave).\nsunny :- hungry(dave), likes(alice,apple).\nhot :- happy(george), hot, hot.\nhappy(george) :- enemy(eve,carol), happy(carol), big(apple).\nsunny :- sunny, sad(carol), enemy(eve,carol).\nhappy(alice) :- happy(dave), parent(dave,frank).\nsunny :- sunny, sunny, sunny.\nwet(phone) :- likes(george,alice), wet(apple).\nsunny.\nenemy(alice,bob).\nenemy(george,dave).\nhappy(dave).\nowns(george,ball).\nenemy(carol,bob).\nowns(alice,phone).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns ball.\nIf george owns ball, then car is small.\nIf car is small, then bob is an enemy of george.\nIf bob is an enemy of george, then george is a sibling of carol.\nIf george is a sibling of carol, then carol owns ball.\nIf carol owns ball, then it is sunny.\nIf dave is tall and bob is an enemy of dave, then alice is tall.\nIf alice owns book, then alice is tall.\nIf it is hot, then alice is sad.\nIf carol is sad, then alice is a sibling of bob.\nIf alice is a sibling of dave and dave is a sibling of frank and it is hot, then carol is a sibling of frank.\nIf book is small and dave is sad, then george is sad.\nIf dave is hungry and alice likes apple, then it is sunny.\nIf george is happy and it is hot and it is hot, then it is hot.\nIf eve is an enemy of carol and carol is happy and apple is big, then george is happy.\nIf it is sunny and carol is sad and eve is an enemy of carol, then it is sunny.\nIf dave is happy and dave is a parent of frank, then alice is happy.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf george likes alice and apple is wet, then phone is wet.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\ngeorge is an enemy of dave.\ndave is happy.\ngeorge owns ball.\ncarol is an enemy of bob.\nalice owns phone.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs frank owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,bob).",
    "c": "owns(george,ball) :- sunny.\nsmall(car) :- owns(george,ball).\nenemy(bob,george) :- small(car).\nsibling(george,carol) :- enemy(bob,george).\nowns(carol,ball) :- sibling(george,carol).\nsunny :- owns(carol,ball).\ntall(alice) :- tall(dave), enemy(bob,dave).\ntall(alice) :- owns(alice,book).\nsad(alice) :- hot.\nsibling(alice,bob) :- sad(carol).\nsibling(carol,frank) :- sibling(alice,dave), sibling(dave,frank), hot.\nsad(george) :- small(book), sad(dave).\nsunny :- hungry(dave), likes(alice,apple).\nhot :- happy(george), hot, hot.\nhappy(george) :- enemy(eve,carol), happy(carol), big(apple).\nsunny :- sunny, sad(carol), enemy(eve,carol).\nhappy(alice) :- happy(dave), parent(dave,frank).\nsunny :- sunny, sunny, sunny.\nwet(phone) :- likes(george,alice), wet(apple).\nsunny.\nenemy(george,dave).\nhappy(dave).\nowns(george,ball).\nenemy(carol,bob).\nowns(alice,phone).\nenemy(george,frank).",
    "natural language": "You are given the following rules:\nIf it is sunny, then george owns ball.\nIf george owns ball, then car is small.\nIf car is small, then bob is an enemy of george.\nIf bob is an enemy of george, then george is a sibling of carol.\nIf george is a sibling of carol, then carol owns ball.\nIf carol owns ball, then it is sunny.\nIf dave is tall and bob is an enemy of dave, then alice is tall.\nIf alice owns book, then alice is tall.\nIf it is hot, then alice is sad.\nIf carol is sad, then alice is a sibling of bob.\nIf alice is a sibling of dave and dave is a sibling of frank and it is hot, then carol is a sibling of frank.\nIf book is small and dave is sad, then george is sad.\nIf dave is hungry and alice likes apple, then it is sunny.\nIf george is happy and it is hot and it is hot, then it is hot.\nIf eve is an enemy of carol and carol is happy and apple is big, then george is happy.\nIf it is sunny and carol is sad and eve is an enemy of carol, then it is sunny.\nIf dave is happy and dave is a parent of frank, then alice is happy.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf george likes alice and apple is wet, then phone is wet.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\ngeorge is an enemy of dave.\ndave is happy.\ngeorge owns ball.\ncarol is an enemy of bob.\nalice owns phone.\ngeorge is an enemy of frank.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould alice is an enemy of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sunny.",
    "c": "owns(george,ball) :- sunny.\nsmall(car) :- owns(george,ball).\nenemy(bob,george) :- small(car).\nsibling(george,carol) :- enemy(bob,george).\nowns(carol,ball) :- sibling(george,carol).\nsunny :- owns(carol,ball).\ntall(alice) :- tall(dave), enemy(bob,dave).\ntall(alice) :- owns(alice,book).\nsad(alice) :- hot.\nsibling(alice,bob) :- sad(carol).\nsibling(carol,frank) :- sibling(alice,dave), sibling(dave,frank), hot.\nsad(george) :- small(book), sad(dave).\nsunny :- hungry(dave), likes(alice,apple).\nhot :- happy(george), hot, hot.\nhappy(george) :- enemy(eve,carol), happy(carol), big(apple).\nsunny :- sunny, sad(carol), enemy(eve,carol).\nhappy(alice) :- happy(dave), parent(dave,frank).\nsunny :- sunny, sunny, sunny.\nwet(phone) :- likes(george,alice), wet(apple).\nenemy(alice,bob).\nenemy(george,dave).\nhappy(dave).\nowns(george,ball).\nenemy(carol,bob).\nowns(alice,phone).\nenemy(george,frank).",
    "natural language": "You are given the following rules:\nIf it is sunny, then george owns ball.\nIf george owns ball, then car is small.\nIf car is small, then bob is an enemy of george.\nIf bob is an enemy of george, then george is a sibling of carol.\nIf george is a sibling of carol, then carol owns ball.\nIf carol owns ball, then it is sunny.\nIf dave is tall and bob is an enemy of dave, then alice is tall.\nIf alice owns book, then alice is tall.\nIf it is hot, then alice is sad.\nIf carol is sad, then alice is a sibling of bob.\nIf alice is a sibling of dave and dave is a sibling of frank and it is hot, then carol is a sibling of frank.\nIf book is small and dave is sad, then george is sad.\nIf dave is hungry and alice likes apple, then it is sunny.\nIf george is happy and it is hot and it is hot, then it is hot.\nIf eve is an enemy of carol and carol is happy and apple is big, then george is happy.\nIf it is sunny and carol is sad and eve is an enemy of carol, then it is sunny.\nIf dave is happy and dave is a parent of frank, then alice is happy.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf george likes alice and apple is wet, then phone is wet.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\ngeorge is an enemy of dave.\ndave is happy.\ngeorge owns ball.\ncarol is an enemy of bob.\nalice owns phone.\ngeorge is an enemy of frank.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(george,ball).",
    "c": "owns(george,ball) :- sunny.\nsmall(car) :- owns(george,ball).\nenemy(bob,george) :- small(car).\nsibling(george,carol) :- enemy(bob,george).\nowns(carol,ball) :- sibling(george,carol).\nsunny :- owns(carol,ball).\ntall(alice) :- tall(dave), enemy(bob,dave).\ntall(alice) :- owns(alice,book).\nsad(alice) :- hot.\nsibling(alice,bob) :- sad(carol).\nsibling(carol,frank) :- sibling(alice,dave), sibling(dave,frank), hot.\nsad(george) :- small(book), sad(dave).\nsunny :- hungry(dave), likes(alice,apple).\nhot :- happy(george), hot, hot.\nhappy(george) :- enemy(eve,carol), happy(carol), big(apple).\nsunny :- sunny, sad(carol), enemy(eve,carol).\nhappy(alice) :- happy(dave), parent(dave,frank).\nsunny :- sunny, sunny, sunny.\nwet(phone) :- likes(george,alice), wet(apple).\nsunny.\nenemy(alice,bob).\nenemy(george,dave).\nhappy(dave).\nenemy(carol,bob).\nowns(alice,phone).\nenemy(george,frank).",
    "natural language": "You are given the following rules:\nIf it is sunny, then george owns ball.\nIf george owns ball, then car is small.\nIf car is small, then bob is an enemy of george.\nIf bob is an enemy of george, then george is a sibling of carol.\nIf george is a sibling of carol, then carol owns ball.\nIf carol owns ball, then it is sunny.\nIf dave is tall and bob is an enemy of dave, then alice is tall.\nIf alice owns book, then alice is tall.\nIf it is hot, then alice is sad.\nIf carol is sad, then alice is a sibling of bob.\nIf alice is a sibling of dave and dave is a sibling of frank and it is hot, then carol is a sibling of frank.\nIf book is small and dave is sad, then george is sad.\nIf dave is hungry and alice likes apple, then it is sunny.\nIf george is happy and it is hot and it is hot, then it is hot.\nIf eve is an enemy of carol and carol is happy and apple is big, then george is happy.\nIf it is sunny and carol is sad and eve is an enemy of carol, then it is sunny.\nIf dave is happy and dave is a parent of frank, then alice is happy.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf george likes alice and apple is wet, then phone is wet.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\ngeorge is an enemy of dave.\ndave is happy.\ngeorge owns ball.\ncarol is an enemy of bob.\nalice owns phone.\ngeorge is an enemy of frank.\n\nOBSERVATION: it is sunny is true.\n\nQUESTION:\nCould george owns ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "sibling(alice,bob) :- sad(dave).\nhappy(carol) :- sibling(alice,bob).\nparent(george,bob) :- happy(carol).\ndislikes(alice,frank) :- parent(george,bob).\nhappy(frank) :- dislikes(alice,frank).\nwet(pencil) :- happy(frank).\nsad(frank) :- friend(alice,dave), small(apple).\nhot :- happy(alice).\nsad(carol) :- hot.\nenemy(frank,dave) :- hot, enemy(alice,bob).\nsibling(bob,carol) :- sad(carol).\nsibling(alice,george) :- sibling(bob,george), likes(carol,frank), wet(apple).\nenemy(eve,dave) :- dislikes(carol,carol), dislikes(george,phone).\nhot :- friend(carol,dave).\nsad(frank) :- hot, hot.\nhungry(carol) :- owns(george,ball), cold.\nowns(bob,ball) :- happy(dave).\nhungry(george) :- sibling(dave,george), cold.\nsibling(alice,carol) :- likes(eve,eve), dislikes(bob,frank), tall(bob).\nsad(dave).\nowns(alice,pencil).\nfriend(dave,bob).\nsibling(alice,frank).\ndislikes(bob,phone).\nhungry(dave).\nlikes(eve,car).\nsad(carol).",
    "natural language": "You are given the following information:\nIf dave is sad, then alice is a sibling of bob.\nIf alice is a sibling of bob, then carol is happy.\nIf carol is happy, then george is a parent of bob.\nIf george is a parent of bob, then alice dislikes frank.\nIf alice dislikes frank, then frank is happy.\nIf frank is happy, then pencil is wet.\nIf alice is a friend of dave and apple is small, then frank is sad.\nIf alice is happy, then it is hot.\nIf it is hot, then carol is sad.\nIf it is hot and alice is an enemy of bob, then frank is an enemy of dave.\nIf carol is sad, then bob is a sibling of carol.\nIf bob is a sibling of george and carol likes frank and apple is wet, then alice is a sibling of george.\nIf carol dislikes carol and george dislikes phone, then eve is an enemy of dave.\nIf carol is a friend of dave, then it is hot.\nIf it is hot and it is hot, then frank is sad.\nIf george owns ball and it is cold, then carol is hungry.\nIf dave is happy, then bob owns ball.\nIf dave is a sibling of george and it is cold, then george is hungry.\nIf eve likes eve and bob dislikes frank and bob is tall, then alice is a sibling of carol.\n\nAnd the following facts:\ndave is sad.\nalice owns pencil.\ndave is a friend of bob.\nalice is a sibling of frank.\nbob dislikes phone.\ndave is hungry.\neve likes car.\ncarol is sad.\n\nQUESTION:\nIs carol is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "sibling(alice,bob) :- sad(dave).\nhappy(carol) :- sibling(alice,bob).\nparent(george,bob) :- happy(carol).\ndislikes(alice,frank) :- parent(george,bob).\nhappy(frank) :- dislikes(alice,frank).\nwet(pencil) :- happy(frank).\nsad(frank) :- friend(alice,dave), small(apple).\nhot :- happy(alice).\nsad(carol) :- hot.\nenemy(frank,dave) :- hot, enemy(alice,bob).\nsibling(bob,carol) :- sad(carol).\nsibling(alice,george) :- sibling(bob,george), likes(carol,frank), wet(apple).\nenemy(eve,dave) :- dislikes(carol,carol), dislikes(george,phone).\nhot :- friend(carol,dave).\nsad(frank) :- hot, hot.\nhungry(carol) :- owns(george,ball), cold.\nowns(bob,ball) :- happy(dave).\nhungry(george) :- sibling(dave,george), cold.\nsibling(alice,carol) :- likes(eve,eve), dislikes(bob,frank), tall(bob).\nsad(dave).\nowns(alice,pencil).\nfriend(dave,bob).\nsibling(alice,frank).\ndislikes(bob,phone).\nhungry(dave).\nlikes(eve,car).\nsad(carol).",
    "natural language": "You are given the following information:\nIf dave is sad, then alice is a sibling of bob.\nIf alice is a sibling of bob, then carol is happy.\nIf carol is happy, then george is a parent of bob.\nIf george is a parent of bob, then alice dislikes frank.\nIf alice dislikes frank, then frank is happy.\nIf frank is happy, then pencil is wet.\nIf alice is a friend of dave and apple is small, then frank is sad.\nIf alice is happy, then it is hot.\nIf it is hot, then carol is sad.\nIf it is hot and alice is an enemy of bob, then frank is an enemy of dave.\nIf carol is sad, then bob is a sibling of carol.\nIf bob is a sibling of george and carol likes frank and apple is wet, then alice is a sibling of george.\nIf carol dislikes carol and george dislikes phone, then eve is an enemy of dave.\nIf carol is a friend of dave, then it is hot.\nIf it is hot and it is hot, then frank is sad.\nIf george owns ball and it is cold, then carol is hungry.\nIf dave is happy, then bob owns ball.\nIf dave is a sibling of george and it is cold, then george is hungry.\nIf eve likes eve and bob dislikes frank and bob is tall, then alice is a sibling of carol.\n\nAnd the following facts:\ndave is sad.\nalice owns pencil.\ndave is a friend of bob.\nalice is a sibling of frank.\nbob dislikes phone.\ndave is hungry.\neve likes car.\ncarol is sad.\n\nQUESTION:\nIs pencil is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,frank).",
    "c": "sibling(alice,bob) :- sad(dave).\nhappy(carol) :- sibling(alice,bob).\nparent(george,bob) :- happy(carol).\ndislikes(alice,frank) :- parent(george,bob).\nhappy(frank) :- dislikes(alice,frank).\nwet(pencil) :- happy(frank).\nsad(frank) :- friend(alice,dave), small(apple).\nhot :- happy(alice).\nsad(carol) :- hot.\nenemy(frank,dave) :- hot, enemy(alice,bob).\nsibling(bob,carol) :- sad(carol).\nsibling(alice,george) :- sibling(bob,george), likes(carol,frank), wet(apple).\nenemy(eve,dave) :- dislikes(carol,carol), dislikes(george,phone).\nhot :- friend(carol,dave).\nsad(frank) :- hot, hot.\nhungry(carol) :- owns(george,ball), cold.\nowns(bob,ball) :- happy(dave).\nhungry(george) :- sibling(dave,george), cold.\nsibling(alice,carol) :- likes(eve,eve), dislikes(bob,frank), tall(bob).\nsad(dave).\nowns(alice,pencil).\nfriend(dave,bob).\nsibling(alice,frank).\ndislikes(bob,phone).\nhungry(dave).\nlikes(eve,car).\nsad(carol).",
    "natural language": "You are given the following information:\nIf dave is sad, then alice is a sibling of bob.\nIf alice is a sibling of bob, then carol is happy.\nIf carol is happy, then george is a parent of bob.\nIf george is a parent of bob, then alice dislikes frank.\nIf alice dislikes frank, then frank is happy.\nIf frank is happy, then pencil is wet.\nIf alice is a friend of dave and apple is small, then frank is sad.\nIf alice is happy, then it is hot.\nIf it is hot, then carol is sad.\nIf it is hot and alice is an enemy of bob, then frank is an enemy of dave.\nIf carol is sad, then bob is a sibling of carol.\nIf bob is a sibling of george and carol likes frank and apple is wet, then alice is a sibling of george.\nIf carol dislikes carol and george dislikes phone, then eve is an enemy of dave.\nIf carol is a friend of dave, then it is hot.\nIf it is hot and it is hot, then frank is sad.\nIf george owns ball and it is cold, then carol is hungry.\nIf dave is happy, then bob owns ball.\nIf dave is a sibling of george and it is cold, then george is hungry.\nIf eve likes eve and bob dislikes frank and bob is tall, then alice is a sibling of carol.\n\nAnd the following facts:\ndave is sad.\nalice owns pencil.\ndave is a friend of bob.\nalice is a sibling of frank.\nbob dislikes phone.\ndave is hungry.\neve likes car.\ncarol is sad.\n\nQUESTION:\nIs alice dislikes frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,apple).",
    "c": "sibling(alice,bob) :- sad(dave).\nhappy(carol) :- sibling(alice,bob).\nparent(george,bob) :- happy(carol).\ndislikes(alice,frank) :- parent(george,bob).\nhappy(frank) :- dislikes(alice,frank).\nwet(pencil) :- happy(frank).\nsad(frank) :- friend(alice,dave), small(apple).\nhot :- happy(alice).\nsad(carol) :- hot.\nenemy(frank,dave) :- hot, enemy(alice,bob).\nsibling(bob,carol) :- sad(carol).\nsibling(alice,george) :- sibling(bob,george), likes(carol,frank), wet(apple).\nenemy(eve,dave) :- dislikes(carol,carol), dislikes(george,phone).\nhot :- friend(carol,dave).\nsad(frank) :- hot, hot.\nhungry(carol) :- owns(george,ball), cold.\nowns(bob,ball) :- happy(dave).\nhungry(george) :- sibling(dave,george), cold.\nsibling(alice,carol) :- likes(eve,eve), dislikes(bob,frank), tall(bob).\nsad(dave).\nowns(alice,pencil).\nfriend(dave,bob).\nsibling(alice,frank).\ndislikes(bob,phone).\nhungry(dave).\nlikes(eve,car).\nsad(carol).",
    "natural language": "You are given the following information:\nIf dave is sad, then alice is a sibling of bob.\nIf alice is a sibling of bob, then carol is happy.\nIf carol is happy, then george is a parent of bob.\nIf george is a parent of bob, then alice dislikes frank.\nIf alice dislikes frank, then frank is happy.\nIf frank is happy, then pencil is wet.\nIf alice is a friend of dave and apple is small, then frank is sad.\nIf alice is happy, then it is hot.\nIf it is hot, then carol is sad.\nIf it is hot and alice is an enemy of bob, then frank is an enemy of dave.\nIf carol is sad, then bob is a sibling of carol.\nIf bob is a sibling of george and carol likes frank and apple is wet, then alice is a sibling of george.\nIf carol dislikes carol and george dislikes phone, then eve is an enemy of dave.\nIf carol is a friend of dave, then it is hot.\nIf it is hot and it is hot, then frank is sad.\nIf george owns ball and it is cold, then carol is hungry.\nIf dave is happy, then bob owns ball.\nIf dave is a sibling of george and it is cold, then george is hungry.\nIf eve likes eve and bob dislikes frank and bob is tall, then alice is a sibling of carol.\n\nAnd the following facts:\ndave is sad.\nalice owns pencil.\ndave is a friend of bob.\nalice is a sibling of frank.\nbob dislikes phone.\ndave is hungry.\neve likes car.\ncarol is sad.\n\nQUESTION:\nIs eve owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,george).",
    "c": "sibling(alice,bob) :- sad(dave).\nhappy(carol) :- sibling(alice,bob).\nparent(george,bob) :- happy(carol).\ndislikes(alice,frank) :- parent(george,bob).\nhappy(frank) :- dislikes(alice,frank).\nwet(pencil) :- happy(frank).\nsad(frank) :- friend(alice,dave), small(apple).\nhot :- happy(alice).\nsad(carol) :- hot.\nenemy(frank,dave) :- hot, enemy(alice,bob).\nsibling(bob,carol) :- sad(carol).\nsibling(alice,george) :- sibling(bob,george), likes(carol,frank), wet(apple).\nenemy(eve,dave) :- dislikes(carol,carol), dislikes(george,phone).\nhot :- friend(carol,dave).\nsad(frank) :- hot, hot.\nhungry(carol) :- owns(george,ball), cold.\nowns(bob,ball) :- happy(dave).\nhungry(george) :- sibling(dave,george), cold.\nsibling(alice,carol) :- likes(eve,eve), dislikes(bob,frank), tall(bob).\nsad(dave).\nowns(alice,pencil).\nfriend(dave,bob).\nsibling(alice,frank).\ndislikes(bob,phone).\nhungry(dave).\nlikes(eve,car).\nsad(carol).",
    "natural language": "You are given the following information:\nIf dave is sad, then alice is a sibling of bob.\nIf alice is a sibling of bob, then carol is happy.\nIf carol is happy, then george is a parent of bob.\nIf george is a parent of bob, then alice dislikes frank.\nIf alice dislikes frank, then frank is happy.\nIf frank is happy, then pencil is wet.\nIf alice is a friend of dave and apple is small, then frank is sad.\nIf alice is happy, then it is hot.\nIf it is hot, then carol is sad.\nIf it is hot and alice is an enemy of bob, then frank is an enemy of dave.\nIf carol is sad, then bob is a sibling of carol.\nIf bob is a sibling of george and carol likes frank and apple is wet, then alice is a sibling of george.\nIf carol dislikes carol and george dislikes phone, then eve is an enemy of dave.\nIf carol is a friend of dave, then it is hot.\nIf it is hot and it is hot, then frank is sad.\nIf george owns ball and it is cold, then carol is hungry.\nIf dave is happy, then bob owns ball.\nIf dave is a sibling of george and it is cold, then george is hungry.\nIf eve likes eve and bob dislikes frank and bob is tall, then alice is a sibling of carol.\n\nAnd the following facts:\ndave is sad.\nalice owns pencil.\ndave is a friend of bob.\nalice is a sibling of frank.\nbob dislikes phone.\ndave is hungry.\neve likes car.\ncarol is sad.\n\nQUESTION:\nIs carol likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(dave).",
    "c": "sibling(alice,bob) :- sad(dave).\nhappy(carol) :- sibling(alice,bob).\nparent(george,bob) :- happy(carol).\ndislikes(alice,frank) :- parent(george,bob).\nhappy(frank) :- dislikes(alice,frank).\nwet(pencil) :- happy(frank).\nsad(frank) :- friend(alice,dave), small(apple).\nhot :- happy(alice).\nsad(carol) :- hot.\nenemy(frank,dave) :- hot, enemy(alice,bob).\nsibling(bob,carol) :- sad(carol).\nsibling(alice,george) :- sibling(bob,george), likes(carol,frank), wet(apple).\nenemy(eve,dave) :- dislikes(carol,carol), dislikes(george,phone).\nhot :- friend(carol,dave).\nsad(frank) :- hot, hot.\nhungry(carol) :- owns(george,ball), cold.\nowns(bob,ball) :- happy(dave).\nhungry(george) :- sibling(dave,george), cold.\nsibling(alice,carol) :- likes(eve,eve), dislikes(bob,frank), tall(bob).\nowns(alice,pencil).\nfriend(dave,bob).\nsibling(alice,frank).\ndislikes(bob,phone).\nhungry(dave).\nlikes(eve,car).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf dave is sad, then alice is a sibling of bob.\nIf alice is a sibling of bob, then carol is happy.\nIf carol is happy, then george is a parent of bob.\nIf george is a parent of bob, then alice dislikes frank.\nIf alice dislikes frank, then frank is happy.\nIf frank is happy, then pencil is wet.\nIf alice is a friend of dave and apple is small, then frank is sad.\nIf alice is happy, then it is hot.\nIf it is hot, then carol is sad.\nIf it is hot and alice is an enemy of bob, then frank is an enemy of dave.\nIf carol is sad, then bob is a sibling of carol.\nIf bob is a sibling of george and carol likes frank and apple is wet, then alice is a sibling of george.\nIf carol dislikes carol and george dislikes phone, then eve is an enemy of dave.\nIf carol is a friend of dave, then it is hot.\nIf it is hot and it is hot, then frank is sad.\nIf george owns ball and it is cold, then carol is hungry.\nIf dave is happy, then bob owns ball.\nIf dave is a sibling of george and it is cold, then george is hungry.\nIf eve likes eve and bob dislikes frank and bob is tall, then alice is a sibling of carol.\n\nAnd the following facts:\ndave is sad.\nalice owns pencil.\ndave is a friend of bob.\nalice is a sibling of frank.\nbob dislikes phone.\ndave is hungry.\neve likes car.\ncarol is sad.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould dave is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,phone).",
    "c": "sibling(alice,bob) :- sad(dave).\nhappy(carol) :- sibling(alice,bob).\nparent(george,bob) :- happy(carol).\ndislikes(alice,frank) :- parent(george,bob).\nhappy(frank) :- dislikes(alice,frank).\nwet(pencil) :- happy(frank).\nsad(frank) :- friend(alice,dave), small(apple).\nhot :- happy(alice).\nsad(carol) :- hot.\nenemy(frank,dave) :- hot, enemy(alice,bob).\nsibling(bob,carol) :- sad(carol).\nsibling(alice,george) :- sibling(bob,george), likes(carol,frank), wet(apple).\nenemy(eve,dave) :- dislikes(carol,carol), dislikes(george,phone).\nhot :- friend(carol,dave).\nsad(frank) :- hot, hot.\nhungry(carol) :- owns(george,ball), cold.\nowns(bob,ball) :- happy(dave).\nhungry(george) :- sibling(dave,george), cold.\nsibling(alice,carol) :- likes(eve,eve), dislikes(bob,frank), tall(bob).\nsad(dave).\nowns(alice,pencil).\nfriend(dave,bob).\nsibling(alice,frank).\nhungry(dave).\nlikes(eve,car).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf dave is sad, then alice is a sibling of bob.\nIf alice is a sibling of bob, then carol is happy.\nIf carol is happy, then george is a parent of bob.\nIf george is a parent of bob, then alice dislikes frank.\nIf alice dislikes frank, then frank is happy.\nIf frank is happy, then pencil is wet.\nIf alice is a friend of dave and apple is small, then frank is sad.\nIf alice is happy, then it is hot.\nIf it is hot, then carol is sad.\nIf it is hot and alice is an enemy of bob, then frank is an enemy of dave.\nIf carol is sad, then bob is a sibling of carol.\nIf bob is a sibling of george and carol likes frank and apple is wet, then alice is a sibling of george.\nIf carol dislikes carol and george dislikes phone, then eve is an enemy of dave.\nIf carol is a friend of dave, then it is hot.\nIf it is hot and it is hot, then frank is sad.\nIf george owns ball and it is cold, then carol is hungry.\nIf dave is happy, then bob owns ball.\nIf dave is a sibling of george and it is cold, then george is hungry.\nIf eve likes eve and bob dislikes frank and bob is tall, then alice is a sibling of carol.\n\nAnd the following facts:\ndave is sad.\nalice owns pencil.\ndave is a friend of bob.\nalice is a sibling of frank.\nbob dislikes phone.\ndave is hungry.\neve likes car.\ncarol is sad.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould bob dislikes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,car).",
    "c": "sibling(alice,bob) :- sad(dave).\nhappy(carol) :- sibling(alice,bob).\nparent(george,bob) :- happy(carol).\ndislikes(alice,frank) :- parent(george,bob).\nhappy(frank) :- dislikes(alice,frank).\nwet(pencil) :- happy(frank).\nsad(frank) :- friend(alice,dave), small(apple).\nhot :- happy(alice).\nsad(carol) :- hot.\nenemy(frank,dave) :- hot, enemy(alice,bob).\nsibling(bob,carol) :- sad(carol).\nsibling(alice,george) :- sibling(bob,george), likes(carol,frank), wet(apple).\nenemy(eve,dave) :- dislikes(carol,carol), dislikes(george,phone).\nhot :- friend(carol,dave).\nsad(frank) :- hot, hot.\nhungry(carol) :- owns(george,ball), cold.\nowns(bob,ball) :- happy(dave).\nhungry(george) :- sibling(dave,george), cold.\nsibling(alice,carol) :- likes(eve,eve), dislikes(bob,frank), tall(bob).\nsad(dave).\nowns(alice,pencil).\nfriend(dave,bob).\nsibling(alice,frank).\ndislikes(bob,phone).\nhungry(dave).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf dave is sad, then alice is a sibling of bob.\nIf alice is a sibling of bob, then carol is happy.\nIf carol is happy, then george is a parent of bob.\nIf george is a parent of bob, then alice dislikes frank.\nIf alice dislikes frank, then frank is happy.\nIf frank is happy, then pencil is wet.\nIf alice is a friend of dave and apple is small, then frank is sad.\nIf alice is happy, then it is hot.\nIf it is hot, then carol is sad.\nIf it is hot and alice is an enemy of bob, then frank is an enemy of dave.\nIf carol is sad, then bob is a sibling of carol.\nIf bob is a sibling of george and carol likes frank and apple is wet, then alice is a sibling of george.\nIf carol dislikes carol and george dislikes phone, then eve is an enemy of dave.\nIf carol is a friend of dave, then it is hot.\nIf it is hot and it is hot, then frank is sad.\nIf george owns ball and it is cold, then carol is hungry.\nIf dave is happy, then bob owns ball.\nIf dave is a sibling of george and it is cold, then george is hungry.\nIf eve likes eve and bob dislikes frank and bob is tall, then alice is a sibling of carol.\n\nAnd the following facts:\ndave is sad.\nalice owns pencil.\ndave is a friend of bob.\nalice is a sibling of frank.\nbob dislikes phone.\ndave is hungry.\neve likes car.\ncarol is sad.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould eve likes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "dislikes(frank,apple) :- friend(george,frank).\ntall(dave) :- dislikes(frank,apple).\nsad(carol) :- tall(dave).\ncold :- sad(carol).\nwet(ball) :- cold.\ntall(george) :- wet(ball).\nlikes(bob,car) :- tall(george).\nhappy(george) :- likes(bob,car).\nsibling(george,alice) :- sunny, owns(bob,apple), owns(dave,pencil).\nwet(ball) :- friend(alice,alice), wet(book).\nparent(alice,george) :- parent(dave,george), likes(bob,apple).\nwet(pencil) :- hot.\nhungry(alice) :- hungry(bob).\nparent(alice,eve) :- parent(eve,alice), wet(pencil).\nsibling(dave,frank) :- wet(car), hungry(carol).\nowns(dave,phone) :- hot.\nowns(bob,ball) :- happy(eve).\nfriend(bob,george) :- hungry(dave), hungry(alice), owns(eve,ball).\nsibling(frank,bob) :- enemy(alice,eve), sibling(eve,carol).\nfriend(george,frank).\nlikes(alice,ball).\ndislikes(dave,george).\nfriend(dave,bob).\ndislikes(eve,phone).\nlikes(eve,ball).\nparent(bob,eve).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nIf george is a friend of frank, then frank dislikes apple.\nIf frank dislikes apple, then dave is tall.\nIf dave is tall, then carol is sad.\nIf carol is sad, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then george is tall.\nIf george is tall, then bob likes car.\nIf bob likes car, then george is happy.\nIf it is sunny and bob owns apple and dave owns pencil, then george is a sibling of alice.\nIf alice is a friend of alice and book is wet, then ball is wet.\nIf dave is a parent of george and bob likes apple, then alice is a parent of george.\nIf it is hot, then pencil is wet.\nIf bob is hungry, then alice is hungry.\nIf eve is a parent of alice and pencil is wet, then alice is a parent of eve.\nIf car is wet and carol is hungry, then dave is a sibling of frank.\nIf it is hot, then dave owns phone.\nIf eve is happy, then bob owns ball.\nIf dave is hungry and alice is hungry and eve owns ball, then bob is a friend of george.\nIf alice is an enemy of eve and eve is a sibling of carol, then frank is a sibling of bob.\n\nAnd the following facts:\ngeorge is a friend of frank.\nalice likes ball.\ndave dislikes george.\ndave is a friend of bob.\neve dislikes phone.\neve likes ball.\nbob is a parent of eve.\neve is a parent of dave.\n\nQUESTION:\nIs eve is a parent of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,ball).",
    "c": "dislikes(frank,apple) :- friend(george,frank).\ntall(dave) :- dislikes(frank,apple).\nsad(carol) :- tall(dave).\ncold :- sad(carol).\nwet(ball) :- cold.\ntall(george) :- wet(ball).\nlikes(bob,car) :- tall(george).\nhappy(george) :- likes(bob,car).\nsibling(george,alice) :- sunny, owns(bob,apple), owns(dave,pencil).\nwet(ball) :- friend(alice,alice), wet(book).\nparent(alice,george) :- parent(dave,george), likes(bob,apple).\nwet(pencil) :- hot.\nhungry(alice) :- hungry(bob).\nparent(alice,eve) :- parent(eve,alice), wet(pencil).\nsibling(dave,frank) :- wet(car), hungry(carol).\nowns(dave,phone) :- hot.\nowns(bob,ball) :- happy(eve).\nfriend(bob,george) :- hungry(dave), hungry(alice), owns(eve,ball).\nsibling(frank,bob) :- enemy(alice,eve), sibling(eve,carol).\nfriend(george,frank).\nlikes(alice,ball).\ndislikes(dave,george).\nfriend(dave,bob).\ndislikes(eve,phone).\nlikes(eve,ball).\nparent(bob,eve).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nIf george is a friend of frank, then frank dislikes apple.\nIf frank dislikes apple, then dave is tall.\nIf dave is tall, then carol is sad.\nIf carol is sad, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then george is tall.\nIf george is tall, then bob likes car.\nIf bob likes car, then george is happy.\nIf it is sunny and bob owns apple and dave owns pencil, then george is a sibling of alice.\nIf alice is a friend of alice and book is wet, then ball is wet.\nIf dave is a parent of george and bob likes apple, then alice is a parent of george.\nIf it is hot, then pencil is wet.\nIf bob is hungry, then alice is hungry.\nIf eve is a parent of alice and pencil is wet, then alice is a parent of eve.\nIf car is wet and carol is hungry, then dave is a sibling of frank.\nIf it is hot, then dave owns phone.\nIf eve is happy, then bob owns ball.\nIf dave is hungry and alice is hungry and eve owns ball, then bob is a friend of george.\nIf alice is an enemy of eve and eve is a sibling of carol, then frank is a sibling of bob.\n\nAnd the following facts:\ngeorge is a friend of frank.\nalice likes ball.\ndave dislikes george.\ndave is a friend of bob.\neve dislikes phone.\neve likes ball.\nbob is a parent of eve.\neve is a parent of dave.\n\nQUESTION:\nIs eve likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "dislikes(frank,apple) :- friend(george,frank).\ntall(dave) :- dislikes(frank,apple).\nsad(carol) :- tall(dave).\ncold :- sad(carol).\nwet(ball) :- cold.\ntall(george) :- wet(ball).\nlikes(bob,car) :- tall(george).\nhappy(george) :- likes(bob,car).\nsibling(george,alice) :- sunny, owns(bob,apple), owns(dave,pencil).\nwet(ball) :- friend(alice,alice), wet(book).\nparent(alice,george) :- parent(dave,george), likes(bob,apple).\nwet(pencil) :- hot.\nhungry(alice) :- hungry(bob).\nparent(alice,eve) :- parent(eve,alice), wet(pencil).\nsibling(dave,frank) :- wet(car), hungry(carol).\nowns(dave,phone) :- hot.\nowns(bob,ball) :- happy(eve).\nfriend(bob,george) :- hungry(dave), hungry(alice), owns(eve,ball).\nsibling(frank,bob) :- enemy(alice,eve), sibling(eve,carol).\nfriend(george,frank).\nlikes(alice,ball).\ndislikes(dave,george).\nfriend(dave,bob).\ndislikes(eve,phone).\nlikes(eve,ball).\nparent(bob,eve).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nIf george is a friend of frank, then frank dislikes apple.\nIf frank dislikes apple, then dave is tall.\nIf dave is tall, then carol is sad.\nIf carol is sad, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then george is tall.\nIf george is tall, then bob likes car.\nIf bob likes car, then george is happy.\nIf it is sunny and bob owns apple and dave owns pencil, then george is a sibling of alice.\nIf alice is a friend of alice and book is wet, then ball is wet.\nIf dave is a parent of george and bob likes apple, then alice is a parent of george.\nIf it is hot, then pencil is wet.\nIf bob is hungry, then alice is hungry.\nIf eve is a parent of alice and pencil is wet, then alice is a parent of eve.\nIf car is wet and carol is hungry, then dave is a sibling of frank.\nIf it is hot, then dave owns phone.\nIf eve is happy, then bob owns ball.\nIf dave is hungry and alice is hungry and eve owns ball, then bob is a friend of george.\nIf alice is an enemy of eve and eve is a sibling of carol, then frank is a sibling of bob.\n\nAnd the following facts:\ngeorge is a friend of frank.\nalice likes ball.\ndave dislikes george.\ndave is a friend of bob.\neve dislikes phone.\neve likes ball.\nbob is a parent of eve.\neve is a parent of dave.\n\nQUESTION:\nIs george is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,pencil).",
    "c": "dislikes(frank,apple) :- friend(george,frank).\ntall(dave) :- dislikes(frank,apple).\nsad(carol) :- tall(dave).\ncold :- sad(carol).\nwet(ball) :- cold.\ntall(george) :- wet(ball).\nlikes(bob,car) :- tall(george).\nhappy(george) :- likes(bob,car).\nsibling(george,alice) :- sunny, owns(bob,apple), owns(dave,pencil).\nwet(ball) :- friend(alice,alice), wet(book).\nparent(alice,george) :- parent(dave,george), likes(bob,apple).\nwet(pencil) :- hot.\nhungry(alice) :- hungry(bob).\nparent(alice,eve) :- parent(eve,alice), wet(pencil).\nsibling(dave,frank) :- wet(car), hungry(carol).\nowns(dave,phone) :- hot.\nowns(bob,ball) :- happy(eve).\nfriend(bob,george) :- hungry(dave), hungry(alice), owns(eve,ball).\nsibling(frank,bob) :- enemy(alice,eve), sibling(eve,carol).\nfriend(george,frank).\nlikes(alice,ball).\ndislikes(dave,george).\nfriend(dave,bob).\ndislikes(eve,phone).\nlikes(eve,ball).\nparent(bob,eve).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nIf george is a friend of frank, then frank dislikes apple.\nIf frank dislikes apple, then dave is tall.\nIf dave is tall, then carol is sad.\nIf carol is sad, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then george is tall.\nIf george is tall, then bob likes car.\nIf bob likes car, then george is happy.\nIf it is sunny and bob owns apple and dave owns pencil, then george is a sibling of alice.\nIf alice is a friend of alice and book is wet, then ball is wet.\nIf dave is a parent of george and bob likes apple, then alice is a parent of george.\nIf it is hot, then pencil is wet.\nIf bob is hungry, then alice is hungry.\nIf eve is a parent of alice and pencil is wet, then alice is a parent of eve.\nIf car is wet and carol is hungry, then dave is a sibling of frank.\nIf it is hot, then dave owns phone.\nIf eve is happy, then bob owns ball.\nIf dave is hungry and alice is hungry and eve owns ball, then bob is a friend of george.\nIf alice is an enemy of eve and eve is a sibling of carol, then frank is a sibling of bob.\n\nAnd the following facts:\ngeorge is a friend of frank.\nalice likes ball.\ndave dislikes george.\ndave is a friend of bob.\neve dislikes phone.\neve likes ball.\nbob is a parent of eve.\neve is a parent of dave.\n\nQUESTION:\nIs bob likes pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,ball).",
    "c": "dislikes(frank,apple) :- friend(george,frank).\ntall(dave) :- dislikes(frank,apple).\nsad(carol) :- tall(dave).\ncold :- sad(carol).\nwet(ball) :- cold.\ntall(george) :- wet(ball).\nlikes(bob,car) :- tall(george).\nhappy(george) :- likes(bob,car).\nsibling(george,alice) :- sunny, owns(bob,apple), owns(dave,pencil).\nwet(ball) :- friend(alice,alice), wet(book).\nparent(alice,george) :- parent(dave,george), likes(bob,apple).\nwet(pencil) :- hot.\nhungry(alice) :- hungry(bob).\nparent(alice,eve) :- parent(eve,alice), wet(pencil).\nsibling(dave,frank) :- wet(car), hungry(carol).\nowns(dave,phone) :- hot.\nowns(bob,ball) :- happy(eve).\nfriend(bob,george) :- hungry(dave), hungry(alice), owns(eve,ball).\nsibling(frank,bob) :- enemy(alice,eve), sibling(eve,carol).\nfriend(george,frank).\nlikes(alice,ball).\ndislikes(dave,george).\nfriend(dave,bob).\ndislikes(eve,phone).\nlikes(eve,ball).\nparent(bob,eve).\nparent(eve,dave).",
    "natural language": "You are given the following information:\nIf george is a friend of frank, then frank dislikes apple.\nIf frank dislikes apple, then dave is tall.\nIf dave is tall, then carol is sad.\nIf carol is sad, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then george is tall.\nIf george is tall, then bob likes car.\nIf bob likes car, then george is happy.\nIf it is sunny and bob owns apple and dave owns pencil, then george is a sibling of alice.\nIf alice is a friend of alice and book is wet, then ball is wet.\nIf dave is a parent of george and bob likes apple, then alice is a parent of george.\nIf it is hot, then pencil is wet.\nIf bob is hungry, then alice is hungry.\nIf eve is a parent of alice and pencil is wet, then alice is a parent of eve.\nIf car is wet and carol is hungry, then dave is a sibling of frank.\nIf it is hot, then dave owns phone.\nIf eve is happy, then bob owns ball.\nIf dave is hungry and alice is hungry and eve owns ball, then bob is a friend of george.\nIf alice is an enemy of eve and eve is a sibling of carol, then frank is a sibling of bob.\n\nAnd the following facts:\ngeorge is a friend of frank.\nalice likes ball.\ndave dislikes george.\ndave is a friend of bob.\neve dislikes phone.\neve likes ball.\nbob is a parent of eve.\neve is a parent of dave.\n\nQUESTION:\nIs george dislikes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,frank).",
    "c": "dislikes(frank,apple) :- friend(george,frank).\ntall(dave) :- dislikes(frank,apple).\nsad(carol) :- tall(dave).\ncold :- sad(carol).\nwet(ball) :- cold.\ntall(george) :- wet(ball).\nlikes(bob,car) :- tall(george).\nhappy(george) :- likes(bob,car).\nsibling(george,alice) :- sunny, owns(bob,apple), owns(dave,pencil).\nwet(ball) :- friend(alice,alice), wet(book).\nparent(alice,george) :- parent(dave,george), likes(bob,apple).\nwet(pencil) :- hot.\nhungry(alice) :- hungry(bob).\nparent(alice,eve) :- parent(eve,alice), wet(pencil).\nsibling(dave,frank) :- wet(car), hungry(carol).\nowns(dave,phone) :- hot.\nowns(bob,ball) :- happy(eve).\nfriend(bob,george) :- hungry(dave), hungry(alice), owns(eve,ball).\nsibling(frank,bob) :- enemy(alice,eve), sibling(eve,carol).\nlikes(alice,ball).\ndislikes(dave,george).\nfriend(dave,bob).\ndislikes(eve,phone).\nlikes(eve,ball).\nparent(bob,eve).\nparent(eve,dave).",
    "natural language": "You are given the following rules:\nIf george is a friend of frank, then frank dislikes apple.\nIf frank dislikes apple, then dave is tall.\nIf dave is tall, then carol is sad.\nIf carol is sad, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then george is tall.\nIf george is tall, then bob likes car.\nIf bob likes car, then george is happy.\nIf it is sunny and bob owns apple and dave owns pencil, then george is a sibling of alice.\nIf alice is a friend of alice and book is wet, then ball is wet.\nIf dave is a parent of george and bob likes apple, then alice is a parent of george.\nIf it is hot, then pencil is wet.\nIf bob is hungry, then alice is hungry.\nIf eve is a parent of alice and pencil is wet, then alice is a parent of eve.\nIf car is wet and carol is hungry, then dave is a sibling of frank.\nIf it is hot, then dave owns phone.\nIf eve is happy, then bob owns ball.\nIf dave is hungry and alice is hungry and eve owns ball, then bob is a friend of george.\nIf alice is an enemy of eve and eve is a sibling of carol, then frank is a sibling of bob.\n\nAnd the following facts:\ngeorge is a friend of frank.\nalice likes ball.\ndave dislikes george.\ndave is a friend of bob.\neve dislikes phone.\neve likes ball.\nbob is a parent of eve.\neve is a parent of dave.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould george is a friend of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(dave,bob).",
    "c": "dislikes(frank,apple) :- friend(george,frank).\ntall(dave) :- dislikes(frank,apple).\nsad(carol) :- tall(dave).\ncold :- sad(carol).\nwet(ball) :- cold.\ntall(george) :- wet(ball).\nlikes(bob,car) :- tall(george).\nhappy(george) :- likes(bob,car).\nsibling(george,alice) :- sunny, owns(bob,apple), owns(dave,pencil).\nwet(ball) :- friend(alice,alice), wet(book).\nparent(alice,george) :- parent(dave,george), likes(bob,apple).\nwet(pencil) :- hot.\nhungry(alice) :- hungry(bob).\nparent(alice,eve) :- parent(eve,alice), wet(pencil).\nsibling(dave,frank) :- wet(car), hungry(carol).\nowns(dave,phone) :- hot.\nowns(bob,ball) :- happy(eve).\nfriend(bob,george) :- hungry(dave), hungry(alice), owns(eve,ball).\nsibling(frank,bob) :- enemy(alice,eve), sibling(eve,carol).\nfriend(george,frank).\nlikes(alice,ball).\ndislikes(dave,george).\ndislikes(eve,phone).\nlikes(eve,ball).\nparent(bob,eve).\nparent(eve,dave).",
    "natural language": "You are given the following rules:\nIf george is a friend of frank, then frank dislikes apple.\nIf frank dislikes apple, then dave is tall.\nIf dave is tall, then carol is sad.\nIf carol is sad, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then george is tall.\nIf george is tall, then bob likes car.\nIf bob likes car, then george is happy.\nIf it is sunny and bob owns apple and dave owns pencil, then george is a sibling of alice.\nIf alice is a friend of alice and book is wet, then ball is wet.\nIf dave is a parent of george and bob likes apple, then alice is a parent of george.\nIf it is hot, then pencil is wet.\nIf bob is hungry, then alice is hungry.\nIf eve is a parent of alice and pencil is wet, then alice is a parent of eve.\nIf car is wet and carol is hungry, then dave is a sibling of frank.\nIf it is hot, then dave owns phone.\nIf eve is happy, then bob owns ball.\nIf dave is hungry and alice is hungry and eve owns ball, then bob is a friend of george.\nIf alice is an enemy of eve and eve is a sibling of carol, then frank is a sibling of bob.\n\nAnd the following facts:\ngeorge is a friend of frank.\nalice likes ball.\ndave dislikes george.\ndave is a friend of bob.\neve dislikes phone.\neve likes ball.\nbob is a parent of eve.\neve is a parent of dave.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould dave is a friend of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,ball).",
    "c": "dislikes(frank,apple) :- friend(george,frank).\ntall(dave) :- dislikes(frank,apple).\nsad(carol) :- tall(dave).\ncold :- sad(carol).\nwet(ball) :- cold.\ntall(george) :- wet(ball).\nlikes(bob,car) :- tall(george).\nhappy(george) :- likes(bob,car).\nsibling(george,alice) :- sunny, owns(bob,apple), owns(dave,pencil).\nwet(ball) :- friend(alice,alice), wet(book).\nparent(alice,george) :- parent(dave,george), likes(bob,apple).\nwet(pencil) :- hot.\nhungry(alice) :- hungry(bob).\nparent(alice,eve) :- parent(eve,alice), wet(pencil).\nsibling(dave,frank) :- wet(car), hungry(carol).\nowns(dave,phone) :- hot.\nowns(bob,ball) :- happy(eve).\nfriend(bob,george) :- hungry(dave), hungry(alice), owns(eve,ball).\nsibling(frank,bob) :- enemy(alice,eve), sibling(eve,carol).\nfriend(george,frank).\nlikes(alice,ball).\ndislikes(dave,george).\nfriend(dave,bob).\ndislikes(eve,phone).\nparent(bob,eve).\nparent(eve,dave).",
    "natural language": "You are given the following rules:\nIf george is a friend of frank, then frank dislikes apple.\nIf frank dislikes apple, then dave is tall.\nIf dave is tall, then carol is sad.\nIf carol is sad, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then george is tall.\nIf george is tall, then bob likes car.\nIf bob likes car, then george is happy.\nIf it is sunny and bob owns apple and dave owns pencil, then george is a sibling of alice.\nIf alice is a friend of alice and book is wet, then ball is wet.\nIf dave is a parent of george and bob likes apple, then alice is a parent of george.\nIf it is hot, then pencil is wet.\nIf bob is hungry, then alice is hungry.\nIf eve is a parent of alice and pencil is wet, then alice is a parent of eve.\nIf car is wet and carol is hungry, then dave is a sibling of frank.\nIf it is hot, then dave owns phone.\nIf eve is happy, then bob owns ball.\nIf dave is hungry and alice is hungry and eve owns ball, then bob is a friend of george.\nIf alice is an enemy of eve and eve is a sibling of carol, then frank is a sibling of bob.\n\nAnd the following facts:\ngeorge is a friend of frank.\nalice likes ball.\ndave dislikes george.\ndave is a friend of bob.\neve dislikes phone.\neve likes ball.\nbob is a parent of eve.\neve is a parent of dave.\n\nOBSERVATION: george is happy is true.\n\nQUESTION:\nCould eve likes ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(george,carol).",
    "c": "wet(ball) :- small(pencil).\nhappy(eve) :- wet(ball).\nlikes(alice,carol) :- happy(eve).\nenemy(carol,eve) :- likes(alice,carol).\nsmall(car) :- enemy(carol,eve).\nhot :- small(car).\nhappy(george) :- hot.\nwet(car) :- happy(george).\nenemy(bob,eve) :- sunny, dislikes(carol,george), hot.\nenemy(frank,eve) :- parent(eve,frank).\nbig(book) :- likes(frank,car).\nbig(apple) :- sibling(george,eve), small(pencil), owns(frank,apple).\nhot :- sunny, friend(eve,frank).\nhot :- enemy(frank,frank).\nhot :- enemy(frank,alice).\ntall(bob) :- owns(eve,book), owns(bob,phone), small(phone).\nhungry(bob) :- sibling(bob,frank), tall(eve).\nhungry(frank) :- sibling(george,dave), owns(carol,book), dislikes(frank,car).\nsad(frank) :- owns(bob,book), small(apple), owns(dave,phone).\nsmall(pencil).\nowns(dave,phone).\ndislikes(carol,dave).\nsmall(phone).\nlikes(george,carol).\nowns(george,ball).\nparent(bob,frank).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is wet.\nIf ball is wet, then eve is happy.\nIf eve is happy, then alice likes carol.\nIf alice likes carol, then carol is an enemy of eve.\nIf carol is an enemy of eve, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then car is wet.\nIf it is sunny and carol dislikes george and it is hot, then bob is an enemy of eve.\nIf eve is a parent of frank, then frank is an enemy of eve.\nIf frank likes car, then book is big.\nIf george is a sibling of eve and pencil is small and frank owns apple, then apple is big.\nIf it is sunny and eve is a friend of frank, then it is hot.\nIf frank is an enemy of frank, then it is hot.\nIf frank is an enemy of alice, then it is hot.\nIf eve owns book and bob owns phone and phone is small, then bob is tall.\nIf bob is a sibling of frank and eve is tall, then bob is hungry.\nIf george is a sibling of dave and carol owns book and frank dislikes car, then frank is hungry.\nIf bob owns book and apple is small and dave owns phone, then frank is sad.\n\nAnd the following facts:\npencil is small.\ndave owns phone.\ncarol dislikes dave.\nphone is small.\ngeorge likes carol.\ngeorge owns ball.\nbob is a parent of frank.\ndave dislikes car.\n\nQUESTION:\nIs george likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,ball).",
    "c": "wet(ball) :- small(pencil).\nhappy(eve) :- wet(ball).\nlikes(alice,carol) :- happy(eve).\nenemy(carol,eve) :- likes(alice,carol).\nsmall(car) :- enemy(carol,eve).\nhot :- small(car).\nhappy(george) :- hot.\nwet(car) :- happy(george).\nenemy(bob,eve) :- sunny, dislikes(carol,george), hot.\nenemy(frank,eve) :- parent(eve,frank).\nbig(book) :- likes(frank,car).\nbig(apple) :- sibling(george,eve), small(pencil), owns(frank,apple).\nhot :- sunny, friend(eve,frank).\nhot :- enemy(frank,frank).\nhot :- enemy(frank,alice).\ntall(bob) :- owns(eve,book), owns(bob,phone), small(phone).\nhungry(bob) :- sibling(bob,frank), tall(eve).\nhungry(frank) :- sibling(george,dave), owns(carol,book), dislikes(frank,car).\nsad(frank) :- owns(bob,book), small(apple), owns(dave,phone).\nsmall(pencil).\nowns(dave,phone).\ndislikes(carol,dave).\nsmall(phone).\nlikes(george,carol).\nowns(george,ball).\nparent(bob,frank).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is wet.\nIf ball is wet, then eve is happy.\nIf eve is happy, then alice likes carol.\nIf alice likes carol, then carol is an enemy of eve.\nIf carol is an enemy of eve, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then car is wet.\nIf it is sunny and carol dislikes george and it is hot, then bob is an enemy of eve.\nIf eve is a parent of frank, then frank is an enemy of eve.\nIf frank likes car, then book is big.\nIf george is a sibling of eve and pencil is small and frank owns apple, then apple is big.\nIf it is sunny and eve is a friend of frank, then it is hot.\nIf frank is an enemy of frank, then it is hot.\nIf frank is an enemy of alice, then it is hot.\nIf eve owns book and bob owns phone and phone is small, then bob is tall.\nIf bob is a sibling of frank and eve is tall, then bob is hungry.\nIf george is a sibling of dave and carol owns book and frank dislikes car, then frank is hungry.\nIf bob owns book and apple is small and dave owns phone, then frank is sad.\n\nAnd the following facts:\npencil is small.\ndave owns phone.\ncarol dislikes dave.\nphone is small.\ngeorge likes carol.\ngeorge owns ball.\nbob is a parent of frank.\ndave dislikes car.\n\nQUESTION:\nIs george owns ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "wet(ball) :- small(pencil).\nhappy(eve) :- wet(ball).\nlikes(alice,carol) :- happy(eve).\nenemy(carol,eve) :- likes(alice,carol).\nsmall(car) :- enemy(carol,eve).\nhot :- small(car).\nhappy(george) :- hot.\nwet(car) :- happy(george).\nenemy(bob,eve) :- sunny, dislikes(carol,george), hot.\nenemy(frank,eve) :- parent(eve,frank).\nbig(book) :- likes(frank,car).\nbig(apple) :- sibling(george,eve), small(pencil), owns(frank,apple).\nhot :- sunny, friend(eve,frank).\nhot :- enemy(frank,frank).\nhot :- enemy(frank,alice).\ntall(bob) :- owns(eve,book), owns(bob,phone), small(phone).\nhungry(bob) :- sibling(bob,frank), tall(eve).\nhungry(frank) :- sibling(george,dave), owns(carol,book), dislikes(frank,car).\nsad(frank) :- owns(bob,book), small(apple), owns(dave,phone).\nsmall(pencil).\nowns(dave,phone).\ndislikes(carol,dave).\nsmall(phone).\nlikes(george,carol).\nowns(george,ball).\nparent(bob,frank).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is wet.\nIf ball is wet, then eve is happy.\nIf eve is happy, then alice likes carol.\nIf alice likes carol, then carol is an enemy of eve.\nIf carol is an enemy of eve, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then car is wet.\nIf it is sunny and carol dislikes george and it is hot, then bob is an enemy of eve.\nIf eve is a parent of frank, then frank is an enemy of eve.\nIf frank likes car, then book is big.\nIf george is a sibling of eve and pencil is small and frank owns apple, then apple is big.\nIf it is sunny and eve is a friend of frank, then it is hot.\nIf frank is an enemy of frank, then it is hot.\nIf frank is an enemy of alice, then it is hot.\nIf eve owns book and bob owns phone and phone is small, then bob is tall.\nIf bob is a sibling of frank and eve is tall, then bob is hungry.\nIf george is a sibling of dave and carol owns book and frank dislikes car, then frank is hungry.\nIf bob owns book and apple is small and dave owns phone, then frank is sad.\n\nAnd the following facts:\npencil is small.\ndave owns phone.\ncarol dislikes dave.\nphone is small.\ngeorge likes carol.\ngeorge owns ball.\nbob is a parent of frank.\ndave dislikes car.\n\nQUESTION:\nIs ball is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "wet(ball) :- small(pencil).\nhappy(eve) :- wet(ball).\nlikes(alice,carol) :- happy(eve).\nenemy(carol,eve) :- likes(alice,carol).\nsmall(car) :- enemy(carol,eve).\nhot :- small(car).\nhappy(george) :- hot.\nwet(car) :- happy(george).\nenemy(bob,eve) :- sunny, dislikes(carol,george), hot.\nenemy(frank,eve) :- parent(eve,frank).\nbig(book) :- likes(frank,car).\nbig(apple) :- sibling(george,eve), small(pencil), owns(frank,apple).\nhot :- sunny, friend(eve,frank).\nhot :- enemy(frank,frank).\nhot :- enemy(frank,alice).\ntall(bob) :- owns(eve,book), owns(bob,phone), small(phone).\nhungry(bob) :- sibling(bob,frank), tall(eve).\nhungry(frank) :- sibling(george,dave), owns(carol,book), dislikes(frank,car).\nsad(frank) :- owns(bob,book), small(apple), owns(dave,phone).\nsmall(pencil).\nowns(dave,phone).\ndislikes(carol,dave).\nsmall(phone).\nlikes(george,carol).\nowns(george,ball).\nparent(bob,frank).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is wet.\nIf ball is wet, then eve is happy.\nIf eve is happy, then alice likes carol.\nIf alice likes carol, then carol is an enemy of eve.\nIf carol is an enemy of eve, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then car is wet.\nIf it is sunny and carol dislikes george and it is hot, then bob is an enemy of eve.\nIf eve is a parent of frank, then frank is an enemy of eve.\nIf frank likes car, then book is big.\nIf george is a sibling of eve and pencil is small and frank owns apple, then apple is big.\nIf it is sunny and eve is a friend of frank, then it is hot.\nIf frank is an enemy of frank, then it is hot.\nIf frank is an enemy of alice, then it is hot.\nIf eve owns book and bob owns phone and phone is small, then bob is tall.\nIf bob is a sibling of frank and eve is tall, then bob is hungry.\nIf george is a sibling of dave and carol owns book and frank dislikes car, then frank is hungry.\nIf bob owns book and apple is small and dave owns phone, then frank is sad.\n\nAnd the following facts:\npencil is small.\ndave owns phone.\ncarol dislikes dave.\nphone is small.\ngeorge likes carol.\ngeorge owns ball.\nbob is a parent of frank.\ndave dislikes car.\n\nQUESTION:\nIs frank is a parent of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(book).",
    "c": "wet(ball) :- small(pencil).\nhappy(eve) :- wet(ball).\nlikes(alice,carol) :- happy(eve).\nenemy(carol,eve) :- likes(alice,carol).\nsmall(car) :- enemy(carol,eve).\nhot :- small(car).\nhappy(george) :- hot.\nwet(car) :- happy(george).\nenemy(bob,eve) :- sunny, dislikes(carol,george), hot.\nenemy(frank,eve) :- parent(eve,frank).\nbig(book) :- likes(frank,car).\nbig(apple) :- sibling(george,eve), small(pencil), owns(frank,apple).\nhot :- sunny, friend(eve,frank).\nhot :- enemy(frank,frank).\nhot :- enemy(frank,alice).\ntall(bob) :- owns(eve,book), owns(bob,phone), small(phone).\nhungry(bob) :- sibling(bob,frank), tall(eve).\nhungry(frank) :- sibling(george,dave), owns(carol,book), dislikes(frank,car).\nsad(frank) :- owns(bob,book), small(apple), owns(dave,phone).\nsmall(pencil).\nowns(dave,phone).\ndislikes(carol,dave).\nsmall(phone).\nlikes(george,carol).\nowns(george,ball).\nparent(bob,frank).\ndislikes(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is small, then ball is wet.\nIf ball is wet, then eve is happy.\nIf eve is happy, then alice likes carol.\nIf alice likes carol, then carol is an enemy of eve.\nIf carol is an enemy of eve, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then car is wet.\nIf it is sunny and carol dislikes george and it is hot, then bob is an enemy of eve.\nIf eve is a parent of frank, then frank is an enemy of eve.\nIf frank likes car, then book is big.\nIf george is a sibling of eve and pencil is small and frank owns apple, then apple is big.\nIf it is sunny and eve is a friend of frank, then it is hot.\nIf frank is an enemy of frank, then it is hot.\nIf frank is an enemy of alice, then it is hot.\nIf eve owns book and bob owns phone and phone is small, then bob is tall.\nIf bob is a sibling of frank and eve is tall, then bob is hungry.\nIf george is a sibling of dave and carol owns book and frank dislikes car, then frank is hungry.\nIf bob owns book and apple is small and dave owns phone, then frank is sad.\n\nAnd the following facts:\npencil is small.\ndave owns phone.\ncarol dislikes dave.\nphone is small.\ngeorge likes carol.\ngeorge owns ball.\nbob is a parent of frank.\ndave dislikes car.\n\nQUESTION:\nIs book is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "wet(ball) :- small(pencil).\nhappy(eve) :- wet(ball).\nlikes(alice,carol) :- happy(eve).\nenemy(carol,eve) :- likes(alice,carol).\nsmall(car) :- enemy(carol,eve).\nhot :- small(car).\nhappy(george) :- hot.\nwet(car) :- happy(george).\nenemy(bob,eve) :- sunny, dislikes(carol,george), hot.\nenemy(frank,eve) :- parent(eve,frank).\nbig(book) :- likes(frank,car).\nbig(apple) :- sibling(george,eve), small(pencil), owns(frank,apple).\nhot :- sunny, friend(eve,frank).\nhot :- enemy(frank,frank).\nhot :- enemy(frank,alice).\ntall(bob) :- owns(eve,book), owns(bob,phone), small(phone).\nhungry(bob) :- sibling(bob,frank), tall(eve).\nhungry(frank) :- sibling(george,dave), owns(carol,book), dislikes(frank,car).\nsad(frank) :- owns(bob,book), small(apple), owns(dave,phone).\nowns(dave,phone).\ndislikes(carol,dave).\nsmall(phone).\nlikes(george,carol).\nowns(george,ball).\nparent(bob,frank).\ndislikes(dave,car).",
    "natural language": "You are given the following rules:\nIf pencil is small, then ball is wet.\nIf ball is wet, then eve is happy.\nIf eve is happy, then alice likes carol.\nIf alice likes carol, then carol is an enemy of eve.\nIf carol is an enemy of eve, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then car is wet.\nIf it is sunny and carol dislikes george and it is hot, then bob is an enemy of eve.\nIf eve is a parent of frank, then frank is an enemy of eve.\nIf frank likes car, then book is big.\nIf george is a sibling of eve and pencil is small and frank owns apple, then apple is big.\nIf it is sunny and eve is a friend of frank, then it is hot.\nIf frank is an enemy of frank, then it is hot.\nIf frank is an enemy of alice, then it is hot.\nIf eve owns book and bob owns phone and phone is small, then bob is tall.\nIf bob is a sibling of frank and eve is tall, then bob is hungry.\nIf george is a sibling of dave and carol owns book and frank dislikes car, then frank is hungry.\nIf bob owns book and apple is small and dave owns phone, then frank is sad.\n\nAnd the following facts:\npencil is small.\ndave owns phone.\ncarol dislikes dave.\nphone is small.\ngeorge likes carol.\ngeorge owns ball.\nbob is a parent of frank.\ndave dislikes car.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould pencil is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(phone).",
    "c": "wet(ball) :- small(pencil).\nhappy(eve) :- wet(ball).\nlikes(alice,carol) :- happy(eve).\nenemy(carol,eve) :- likes(alice,carol).\nsmall(car) :- enemy(carol,eve).\nhot :- small(car).\nhappy(george) :- hot.\nwet(car) :- happy(george).\nenemy(bob,eve) :- sunny, dislikes(carol,george), hot.\nenemy(frank,eve) :- parent(eve,frank).\nbig(book) :- likes(frank,car).\nbig(apple) :- sibling(george,eve), small(pencil), owns(frank,apple).\nhot :- sunny, friend(eve,frank).\nhot :- enemy(frank,frank).\nhot :- enemy(frank,alice).\ntall(bob) :- owns(eve,book), owns(bob,phone), small(phone).\nhungry(bob) :- sibling(bob,frank), tall(eve).\nhungry(frank) :- sibling(george,dave), owns(carol,book), dislikes(frank,car).\nsad(frank) :- owns(bob,book), small(apple), owns(dave,phone).\nsmall(pencil).\nowns(dave,phone).\ndislikes(carol,dave).\nlikes(george,carol).\nowns(george,ball).\nparent(bob,frank).\ndislikes(dave,car).",
    "natural language": "You are given the following rules:\nIf pencil is small, then ball is wet.\nIf ball is wet, then eve is happy.\nIf eve is happy, then alice likes carol.\nIf alice likes carol, then carol is an enemy of eve.\nIf carol is an enemy of eve, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then car is wet.\nIf it is sunny and carol dislikes george and it is hot, then bob is an enemy of eve.\nIf eve is a parent of frank, then frank is an enemy of eve.\nIf frank likes car, then book is big.\nIf george is a sibling of eve and pencil is small and frank owns apple, then apple is big.\nIf it is sunny and eve is a friend of frank, then it is hot.\nIf frank is an enemy of frank, then it is hot.\nIf frank is an enemy of alice, then it is hot.\nIf eve owns book and bob owns phone and phone is small, then bob is tall.\nIf bob is a sibling of frank and eve is tall, then bob is hungry.\nIf george is a sibling of dave and carol owns book and frank dislikes car, then frank is hungry.\nIf bob owns book and apple is small and dave owns phone, then frank is sad.\n\nAnd the following facts:\npencil is small.\ndave owns phone.\ncarol dislikes dave.\nphone is small.\ngeorge likes carol.\ngeorge owns ball.\nbob is a parent of frank.\ndave dislikes car.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould phone is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,car).",
    "c": "wet(ball) :- small(pencil).\nhappy(eve) :- wet(ball).\nlikes(alice,carol) :- happy(eve).\nenemy(carol,eve) :- likes(alice,carol).\nsmall(car) :- enemy(carol,eve).\nhot :- small(car).\nhappy(george) :- hot.\nwet(car) :- happy(george).\nenemy(bob,eve) :- sunny, dislikes(carol,george), hot.\nenemy(frank,eve) :- parent(eve,frank).\nbig(book) :- likes(frank,car).\nbig(apple) :- sibling(george,eve), small(pencil), owns(frank,apple).\nhot :- sunny, friend(eve,frank).\nhot :- enemy(frank,frank).\nhot :- enemy(frank,alice).\ntall(bob) :- owns(eve,book), owns(bob,phone), small(phone).\nhungry(bob) :- sibling(bob,frank), tall(eve).\nhungry(frank) :- sibling(george,dave), owns(carol,book), dislikes(frank,car).\nsad(frank) :- owns(bob,book), small(apple), owns(dave,phone).\nsmall(pencil).\nowns(dave,phone).\ndislikes(carol,dave).\nsmall(phone).\nlikes(george,carol).\nowns(george,ball).\nparent(bob,frank).",
    "natural language": "You are given the following rules:\nIf pencil is small, then ball is wet.\nIf ball is wet, then eve is happy.\nIf eve is happy, then alice likes carol.\nIf alice likes carol, then carol is an enemy of eve.\nIf carol is an enemy of eve, then car is small.\nIf car is small, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then car is wet.\nIf it is sunny and carol dislikes george and it is hot, then bob is an enemy of eve.\nIf eve is a parent of frank, then frank is an enemy of eve.\nIf frank likes car, then book is big.\nIf george is a sibling of eve and pencil is small and frank owns apple, then apple is big.\nIf it is sunny and eve is a friend of frank, then it is hot.\nIf frank is an enemy of frank, then it is hot.\nIf frank is an enemy of alice, then it is hot.\nIf eve owns book and bob owns phone and phone is small, then bob is tall.\nIf bob is a sibling of frank and eve is tall, then bob is hungry.\nIf george is a sibling of dave and carol owns book and frank dislikes car, then frank is hungry.\nIf bob owns book and apple is small and dave owns phone, then frank is sad.\n\nAnd the following facts:\npencil is small.\ndave owns phone.\ncarol dislikes dave.\nphone is small.\ngeorge likes carol.\ngeorge owns ball.\nbob is a parent of frank.\ndave dislikes car.\n\nOBSERVATION: car is wet is true.\n\nQUESTION:\nCould dave dislikes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "tall(frank) :- small(car).\nbig(ball) :- tall(frank).\ndislikes(carol,frank) :- big(ball).\ntall(eve) :- dislikes(carol,frank).\ndislikes(dave,bob) :- tall(eve).\nowns(eve,apple) :- dislikes(dave,bob).\nhungry(dave) :- owns(eve,apple).\nlikes(george,bob) :- hungry(dave).\nhappy(alice) :- likes(george,bob).\nhot :- happy(alice).\nsad(george) :- tall(carol), tall(carol), likes(carol,car).\nlikes(alice,book) :- owns(carol,phone), hungry(bob), small(phone).\nsad(bob) :- sad(frank).\nlikes(george,frank) :- likes(george,george), likes(dave,eve).\ncold :- tall(george), small(phone).\ncold :- sibling(carol,bob), cold.\nsibling(carol,alice) :- sibling(bob,eve).\nenemy(dave,dave) :- enemy(george,frank), enemy(bob,alice).\nparent(george,carol) :- likes(george,ball), parent(eve,carol).\nsmall(car).\nlikes(frank,ball).\nowns(eve,book).\nlikes(carol,pencil).\ndislikes(eve,car).\nparent(frank,alice).\nenemy(alice,frank).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nIf car is small, then frank is tall.\nIf frank is tall, then ball is big.\nIf ball is big, then carol dislikes frank.\nIf carol dislikes frank, then eve is tall.\nIf eve is tall, then dave dislikes bob.\nIf dave dislikes bob, then eve owns apple.\nIf eve owns apple, then dave is hungry.\nIf dave is hungry, then george likes bob.\nIf george likes bob, then alice is happy.\nIf alice is happy, then it is hot.\nIf carol is tall and carol is tall and carol likes car, then george is sad.\nIf carol owns phone and bob is hungry and phone is small, then alice likes book.\nIf frank is sad, then bob is sad.\nIf george likes george and dave likes eve, then george likes frank.\nIf george is tall and phone is small, then it is cold.\nIf carol is a sibling of bob and it is cold, then it is cold.\nIf bob is a sibling of eve, then carol is a sibling of alice.\nIf george is an enemy of frank and bob is an enemy of alice, then dave is an enemy of dave.\nIf george likes ball and eve is a parent of carol, then george is a parent of carol.\n\nAnd the following facts:\ncar is small.\nfrank likes ball.\neve owns book.\ncarol likes pencil.\neve dislikes car.\nfrank is a parent of alice.\nalice is an enemy of frank.\nbob is an enemy of frank.\n\nQUESTION:\nIs frank is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "tall(frank) :- small(car).\nbig(ball) :- tall(frank).\ndislikes(carol,frank) :- big(ball).\ntall(eve) :- dislikes(carol,frank).\ndislikes(dave,bob) :- tall(eve).\nowns(eve,apple) :- dislikes(dave,bob).\nhungry(dave) :- owns(eve,apple).\nlikes(george,bob) :- hungry(dave).\nhappy(alice) :- likes(george,bob).\nhot :- happy(alice).\nsad(george) :- tall(carol), tall(carol), likes(carol,car).\nlikes(alice,book) :- owns(carol,phone), hungry(bob), small(phone).\nsad(bob) :- sad(frank).\nlikes(george,frank) :- likes(george,george), likes(dave,eve).\ncold :- tall(george), small(phone).\ncold :- sibling(carol,bob), cold.\nsibling(carol,alice) :- sibling(bob,eve).\nenemy(dave,dave) :- enemy(george,frank), enemy(bob,alice).\nparent(george,carol) :- likes(george,ball), parent(eve,carol).\nsmall(car).\nlikes(frank,ball).\nowns(eve,book).\nlikes(carol,pencil).\ndislikes(eve,car).\nparent(frank,alice).\nenemy(alice,frank).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nIf car is small, then frank is tall.\nIf frank is tall, then ball is big.\nIf ball is big, then carol dislikes frank.\nIf carol dislikes frank, then eve is tall.\nIf eve is tall, then dave dislikes bob.\nIf dave dislikes bob, then eve owns apple.\nIf eve owns apple, then dave is hungry.\nIf dave is hungry, then george likes bob.\nIf george likes bob, then alice is happy.\nIf alice is happy, then it is hot.\nIf carol is tall and carol is tall and carol likes car, then george is sad.\nIf carol owns phone and bob is hungry and phone is small, then alice likes book.\nIf frank is sad, then bob is sad.\nIf george likes george and dave likes eve, then george likes frank.\nIf george is tall and phone is small, then it is cold.\nIf carol is a sibling of bob and it is cold, then it is cold.\nIf bob is a sibling of eve, then carol is a sibling of alice.\nIf george is an enemy of frank and bob is an enemy of alice, then dave is an enemy of dave.\nIf george likes ball and eve is a parent of carol, then george is a parent of carol.\n\nAnd the following facts:\ncar is small.\nfrank likes ball.\neve owns book.\ncarol likes pencil.\neve dislikes car.\nfrank is a parent of alice.\nalice is an enemy of frank.\nbob is an enemy of frank.\n\nQUESTION:\nIs ball is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,bob).",
    "c": "tall(frank) :- small(car).\nbig(ball) :- tall(frank).\ndislikes(carol,frank) :- big(ball).\ntall(eve) :- dislikes(carol,frank).\ndislikes(dave,bob) :- tall(eve).\nowns(eve,apple) :- dislikes(dave,bob).\nhungry(dave) :- owns(eve,apple).\nlikes(george,bob) :- hungry(dave).\nhappy(alice) :- likes(george,bob).\nhot :- happy(alice).\nsad(george) :- tall(carol), tall(carol), likes(carol,car).\nlikes(alice,book) :- owns(carol,phone), hungry(bob), small(phone).\nsad(bob) :- sad(frank).\nlikes(george,frank) :- likes(george,george), likes(dave,eve).\ncold :- tall(george), small(phone).\ncold :- sibling(carol,bob), cold.\nsibling(carol,alice) :- sibling(bob,eve).\nenemy(dave,dave) :- enemy(george,frank), enemy(bob,alice).\nparent(george,carol) :- likes(george,ball), parent(eve,carol).\nsmall(car).\nlikes(frank,ball).\nowns(eve,book).\nlikes(carol,pencil).\ndislikes(eve,car).\nparent(frank,alice).\nenemy(alice,frank).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nIf car is small, then frank is tall.\nIf frank is tall, then ball is big.\nIf ball is big, then carol dislikes frank.\nIf carol dislikes frank, then eve is tall.\nIf eve is tall, then dave dislikes bob.\nIf dave dislikes bob, then eve owns apple.\nIf eve owns apple, then dave is hungry.\nIf dave is hungry, then george likes bob.\nIf george likes bob, then alice is happy.\nIf alice is happy, then it is hot.\nIf carol is tall and carol is tall and carol likes car, then george is sad.\nIf carol owns phone and bob is hungry and phone is small, then alice likes book.\nIf frank is sad, then bob is sad.\nIf george likes george and dave likes eve, then george likes frank.\nIf george is tall and phone is small, then it is cold.\nIf carol is a sibling of bob and it is cold, then it is cold.\nIf bob is a sibling of eve, then carol is a sibling of alice.\nIf george is an enemy of frank and bob is an enemy of alice, then dave is an enemy of dave.\nIf george likes ball and eve is a parent of carol, then george is a parent of carol.\n\nAnd the following facts:\ncar is small.\nfrank likes ball.\neve owns book.\ncarol likes pencil.\neve dislikes car.\nfrank is a parent of alice.\nalice is an enemy of frank.\nbob is an enemy of frank.\n\nQUESTION:\nIs dave dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,car).",
    "c": "tall(frank) :- small(car).\nbig(ball) :- tall(frank).\ndislikes(carol,frank) :- big(ball).\ntall(eve) :- dislikes(carol,frank).\ndislikes(dave,bob) :- tall(eve).\nowns(eve,apple) :- dislikes(dave,bob).\nhungry(dave) :- owns(eve,apple).\nlikes(george,bob) :- hungry(dave).\nhappy(alice) :- likes(george,bob).\nhot :- happy(alice).\nsad(george) :- tall(carol), tall(carol), likes(carol,car).\nlikes(alice,book) :- owns(carol,phone), hungry(bob), small(phone).\nsad(bob) :- sad(frank).\nlikes(george,frank) :- likes(george,george), likes(dave,eve).\ncold :- tall(george), small(phone).\ncold :- sibling(carol,bob), cold.\nsibling(carol,alice) :- sibling(bob,eve).\nenemy(dave,dave) :- enemy(george,frank), enemy(bob,alice).\nparent(george,carol) :- likes(george,ball), parent(eve,carol).\nsmall(car).\nlikes(frank,ball).\nowns(eve,book).\nlikes(carol,pencil).\ndislikes(eve,car).\nparent(frank,alice).\nenemy(alice,frank).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nIf car is small, then frank is tall.\nIf frank is tall, then ball is big.\nIf ball is big, then carol dislikes frank.\nIf carol dislikes frank, then eve is tall.\nIf eve is tall, then dave dislikes bob.\nIf dave dislikes bob, then eve owns apple.\nIf eve owns apple, then dave is hungry.\nIf dave is hungry, then george likes bob.\nIf george likes bob, then alice is happy.\nIf alice is happy, then it is hot.\nIf carol is tall and carol is tall and carol likes car, then george is sad.\nIf carol owns phone and bob is hungry and phone is small, then alice likes book.\nIf frank is sad, then bob is sad.\nIf george likes george and dave likes eve, then george likes frank.\nIf george is tall and phone is small, then it is cold.\nIf carol is a sibling of bob and it is cold, then it is cold.\nIf bob is a sibling of eve, then carol is a sibling of alice.\nIf george is an enemy of frank and bob is an enemy of alice, then dave is an enemy of dave.\nIf george likes ball and eve is a parent of carol, then george is a parent of carol.\n\nAnd the following facts:\ncar is small.\nfrank likes ball.\neve owns book.\ncarol likes pencil.\neve dislikes car.\nfrank is a parent of alice.\nalice is an enemy of frank.\nbob is an enemy of frank.\n\nQUESTION:\nIs dave dislikes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "tall(frank) :- small(car).\nbig(ball) :- tall(frank).\ndislikes(carol,frank) :- big(ball).\ntall(eve) :- dislikes(carol,frank).\ndislikes(dave,bob) :- tall(eve).\nowns(eve,apple) :- dislikes(dave,bob).\nhungry(dave) :- owns(eve,apple).\nlikes(george,bob) :- hungry(dave).\nhappy(alice) :- likes(george,bob).\nhot :- happy(alice).\nsad(george) :- tall(carol), tall(carol), likes(carol,car).\nlikes(alice,book) :- owns(carol,phone), hungry(bob), small(phone).\nsad(bob) :- sad(frank).\nlikes(george,frank) :- likes(george,george), likes(dave,eve).\ncold :- tall(george), small(phone).\ncold :- sibling(carol,bob), cold.\nsibling(carol,alice) :- sibling(bob,eve).\nenemy(dave,dave) :- enemy(george,frank), enemy(bob,alice).\nparent(george,carol) :- likes(george,ball), parent(eve,carol).\nsmall(car).\nlikes(frank,ball).\nowns(eve,book).\nlikes(carol,pencil).\ndislikes(eve,car).\nparent(frank,alice).\nenemy(alice,frank).\nenemy(bob,frank).",
    "natural language": "You are given the following information:\nIf car is small, then frank is tall.\nIf frank is tall, then ball is big.\nIf ball is big, then carol dislikes frank.\nIf carol dislikes frank, then eve is tall.\nIf eve is tall, then dave dislikes bob.\nIf dave dislikes bob, then eve owns apple.\nIf eve owns apple, then dave is hungry.\nIf dave is hungry, then george likes bob.\nIf george likes bob, then alice is happy.\nIf alice is happy, then it is hot.\nIf carol is tall and carol is tall and carol likes car, then george is sad.\nIf carol owns phone and bob is hungry and phone is small, then alice likes book.\nIf frank is sad, then bob is sad.\nIf george likes george and dave likes eve, then george likes frank.\nIf george is tall and phone is small, then it is cold.\nIf carol is a sibling of bob and it is cold, then it is cold.\nIf bob is a sibling of eve, then carol is a sibling of alice.\nIf george is an enemy of frank and bob is an enemy of alice, then dave is an enemy of dave.\nIf george likes ball and eve is a parent of carol, then george is a parent of carol.\n\nAnd the following facts:\ncar is small.\nfrank likes ball.\neve owns book.\ncarol likes pencil.\neve dislikes car.\nfrank is a parent of alice.\nalice is an enemy of frank.\nbob is an enemy of frank.\n\nQUESTION:\nIs dave likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "tall(frank) :- small(car).\nbig(ball) :- tall(frank).\ndislikes(carol,frank) :- big(ball).\ntall(eve) :- dislikes(carol,frank).\ndislikes(dave,bob) :- tall(eve).\nowns(eve,apple) :- dislikes(dave,bob).\nhungry(dave) :- owns(eve,apple).\nlikes(george,bob) :- hungry(dave).\nhappy(alice) :- likes(george,bob).\nhot :- happy(alice).\nsad(george) :- tall(carol), tall(carol), likes(carol,car).\nlikes(alice,book) :- owns(carol,phone), hungry(bob), small(phone).\nsad(bob) :- sad(frank).\nlikes(george,frank) :- likes(george,george), likes(dave,eve).\ncold :- tall(george), small(phone).\ncold :- sibling(carol,bob), cold.\nsibling(carol,alice) :- sibling(bob,eve).\nenemy(dave,dave) :- enemy(george,frank), enemy(bob,alice).\nparent(george,carol) :- likes(george,ball), parent(eve,carol).\nlikes(frank,ball).\nowns(eve,book).\nlikes(carol,pencil).\ndislikes(eve,car).\nparent(frank,alice).\nenemy(alice,frank).\nenemy(bob,frank).",
    "natural language": "You are given the following rules:\nIf car is small, then frank is tall.\nIf frank is tall, then ball is big.\nIf ball is big, then carol dislikes frank.\nIf carol dislikes frank, then eve is tall.\nIf eve is tall, then dave dislikes bob.\nIf dave dislikes bob, then eve owns apple.\nIf eve owns apple, then dave is hungry.\nIf dave is hungry, then george likes bob.\nIf george likes bob, then alice is happy.\nIf alice is happy, then it is hot.\nIf carol is tall and carol is tall and carol likes car, then george is sad.\nIf carol owns phone and bob is hungry and phone is small, then alice likes book.\nIf frank is sad, then bob is sad.\nIf george likes george and dave likes eve, then george likes frank.\nIf george is tall and phone is small, then it is cold.\nIf carol is a sibling of bob and it is cold, then it is cold.\nIf bob is a sibling of eve, then carol is a sibling of alice.\nIf george is an enemy of frank and bob is an enemy of alice, then dave is an enemy of dave.\nIf george likes ball and eve is a parent of carol, then george is a parent of carol.\n\nAnd the following facts:\ncar is small.\nfrank likes ball.\neve owns book.\ncarol likes pencil.\neve dislikes car.\nfrank is a parent of alice.\nalice is an enemy of frank.\nbob is an enemy of frank.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould car is small be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "tall(frank) :- small(car).\nbig(ball) :- tall(frank).\ndislikes(carol,frank) :- big(ball).\ntall(eve) :- dislikes(carol,frank).\ndislikes(dave,bob) :- tall(eve).\nowns(eve,apple) :- dislikes(dave,bob).\nhungry(dave) :- owns(eve,apple).\nlikes(george,bob) :- hungry(dave).\nhappy(alice) :- likes(george,bob).\nhot :- happy(alice).\nsad(george) :- tall(carol), tall(carol), likes(carol,car).\nlikes(alice,book) :- owns(carol,phone), hungry(bob), small(phone).\nsad(bob) :- sad(frank).\nlikes(george,frank) :- likes(george,george), likes(dave,eve).\ncold :- tall(george), small(phone).\ncold :- sibling(carol,bob), cold.\nsibling(carol,alice) :- sibling(bob,eve).\nenemy(dave,dave) :- enemy(george,frank), enemy(bob,alice).\nparent(george,carol) :- likes(george,ball), parent(eve,carol).\nsmall(car).\nlikes(frank,ball).\nowns(eve,book).\nlikes(carol,pencil).\ndislikes(eve,car).\nenemy(alice,frank).\nenemy(bob,frank).",
    "natural language": "You are given the following rules:\nIf car is small, then frank is tall.\nIf frank is tall, then ball is big.\nIf ball is big, then carol dislikes frank.\nIf carol dislikes frank, then eve is tall.\nIf eve is tall, then dave dislikes bob.\nIf dave dislikes bob, then eve owns apple.\nIf eve owns apple, then dave is hungry.\nIf dave is hungry, then george likes bob.\nIf george likes bob, then alice is happy.\nIf alice is happy, then it is hot.\nIf carol is tall and carol is tall and carol likes car, then george is sad.\nIf carol owns phone and bob is hungry and phone is small, then alice likes book.\nIf frank is sad, then bob is sad.\nIf george likes george and dave likes eve, then george likes frank.\nIf george is tall and phone is small, then it is cold.\nIf carol is a sibling of bob and it is cold, then it is cold.\nIf bob is a sibling of eve, then carol is a sibling of alice.\nIf george is an enemy of frank and bob is an enemy of alice, then dave is an enemy of dave.\nIf george likes ball and eve is a parent of carol, then george is a parent of carol.\n\nAnd the following facts:\ncar is small.\nfrank likes ball.\neve owns book.\ncarol likes pencil.\neve dislikes car.\nfrank is a parent of alice.\nalice is an enemy of frank.\nbob is an enemy of frank.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould frank is a parent of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(bob,frank).",
    "c": "tall(frank) :- small(car).\nbig(ball) :- tall(frank).\ndislikes(carol,frank) :- big(ball).\ntall(eve) :- dislikes(carol,frank).\ndislikes(dave,bob) :- tall(eve).\nowns(eve,apple) :- dislikes(dave,bob).\nhungry(dave) :- owns(eve,apple).\nlikes(george,bob) :- hungry(dave).\nhappy(alice) :- likes(george,bob).\nhot :- happy(alice).\nsad(george) :- tall(carol), tall(carol), likes(carol,car).\nlikes(alice,book) :- owns(carol,phone), hungry(bob), small(phone).\nsad(bob) :- sad(frank).\nlikes(george,frank) :- likes(george,george), likes(dave,eve).\ncold :- tall(george), small(phone).\ncold :- sibling(carol,bob), cold.\nsibling(carol,alice) :- sibling(bob,eve).\nenemy(dave,dave) :- enemy(george,frank), enemy(bob,alice).\nparent(george,carol) :- likes(george,ball), parent(eve,carol).\nsmall(car).\nlikes(frank,ball).\nowns(eve,book).\nlikes(carol,pencil).\ndislikes(eve,car).\nparent(frank,alice).\nenemy(alice,frank).",
    "natural language": "You are given the following rules:\nIf car is small, then frank is tall.\nIf frank is tall, then ball is big.\nIf ball is big, then carol dislikes frank.\nIf carol dislikes frank, then eve is tall.\nIf eve is tall, then dave dislikes bob.\nIf dave dislikes bob, then eve owns apple.\nIf eve owns apple, then dave is hungry.\nIf dave is hungry, then george likes bob.\nIf george likes bob, then alice is happy.\nIf alice is happy, then it is hot.\nIf carol is tall and carol is tall and carol likes car, then george is sad.\nIf carol owns phone and bob is hungry and phone is small, then alice likes book.\nIf frank is sad, then bob is sad.\nIf george likes george and dave likes eve, then george likes frank.\nIf george is tall and phone is small, then it is cold.\nIf carol is a sibling of bob and it is cold, then it is cold.\nIf bob is a sibling of eve, then carol is a sibling of alice.\nIf george is an enemy of frank and bob is an enemy of alice, then dave is an enemy of dave.\nIf george likes ball and eve is a parent of carol, then george is a parent of carol.\n\nAnd the following facts:\ncar is small.\nfrank likes ball.\neve owns book.\ncarol likes pencil.\neve dislikes car.\nfrank is a parent of alice.\nalice is an enemy of frank.\nbob is an enemy of frank.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould bob is an enemy of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,dave).",
    "c": "likes(dave,ball) :- sad(carol).\nsibling(dave,dave) :- likes(dave,ball).\nhappy(dave) :- sibling(dave,dave).\nhappy(frank) :- happy(dave).\nsibling(frank,dave) :- happy(frank).\nwet(apple) :- sibling(frank,dave).\nsibling(alice,alice) :- wet(apple).\nfriend(carol,eve) :- sibling(alice,alice).\nsibling(dave,alice) :- friend(carol,eve).\nlikes(george,book) :- sibling(dave,alice).\ndislikes(dave,pencil) :- dislikes(george,eve), likes(eve,dave).\nparent(bob,alice) :- hungry(frank), tall(george), wet(phone).\nparent(dave,eve) :- parent(eve,carol), dislikes(dave,pencil).\nenemy(bob,frank) :- likes(eve,frank).\nhot :- likes(dave,phone), hungry(eve).\nhappy(bob) :- enemy(dave,bob), happy(carol).\nsmall(pencil) :- happy(frank), sibling(frank,george), friend(dave,carol).\nhappy(alice) :- tall(dave).\nhungry(eve) :- big(phone), sibling(carol,bob), enemy(frank,george).\nsad(carol).\nsibling(dave,alice).\nhungry(alice).\nsibling(carol,bob).\ntall(eve).\nwet(book).\nlikes(carol,dave).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave likes ball.\nIf dave likes ball, then dave is a sibling of dave.\nIf dave is a sibling of dave, then dave is happy.\nIf dave is happy, then frank is happy.\nIf frank is happy, then frank is a sibling of dave.\nIf frank is a sibling of dave, then apple is wet.\nIf apple is wet, then alice is a sibling of alice.\nIf alice is a sibling of alice, then carol is a friend of eve.\nIf carol is a friend of eve, then dave is a sibling of alice.\nIf dave is a sibling of alice, then george likes book.\nIf george dislikes eve and eve likes dave, then dave dislikes pencil.\nIf frank is hungry and george is tall and phone is wet, then bob is a parent of alice.\nIf eve is a parent of carol and dave dislikes pencil, then dave is a parent of eve.\nIf eve likes frank, then bob is an enemy of frank.\nIf dave likes phone and eve is hungry, then it is hot.\nIf dave is an enemy of bob and carol is happy, then bob is happy.\nIf frank is happy and frank is a sibling of george and dave is a friend of carol, then pencil is small.\nIf dave is tall, then alice is happy.\nIf phone is big and carol is a sibling of bob and frank is an enemy of george, then eve is hungry.\n\nAnd the following facts:\ncarol is sad.\ndave is a sibling of alice.\nalice is hungry.\ncarol is a sibling of bob.\neve is tall.\nbook is wet.\ncarol likes dave.\nalice dislikes pencil.\n\nQUESTION:\nIs carol likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "likes(dave,ball) :- sad(carol).\nsibling(dave,dave) :- likes(dave,ball).\nhappy(dave) :- sibling(dave,dave).\nhappy(frank) :- happy(dave).\nsibling(frank,dave) :- happy(frank).\nwet(apple) :- sibling(frank,dave).\nsibling(alice,alice) :- wet(apple).\nfriend(carol,eve) :- sibling(alice,alice).\nsibling(dave,alice) :- friend(carol,eve).\nlikes(george,book) :- sibling(dave,alice).\ndislikes(dave,pencil) :- dislikes(george,eve), likes(eve,dave).\nparent(bob,alice) :- hungry(frank), tall(george), wet(phone).\nparent(dave,eve) :- parent(eve,carol), dislikes(dave,pencil).\nenemy(bob,frank) :- likes(eve,frank).\nhot :- likes(dave,phone), hungry(eve).\nhappy(bob) :- enemy(dave,bob), happy(carol).\nsmall(pencil) :- happy(frank), sibling(frank,george), friend(dave,carol).\nhappy(alice) :- tall(dave).\nhungry(eve) :- big(phone), sibling(carol,bob), enemy(frank,george).\nsad(carol).\nsibling(dave,alice).\nhungry(alice).\nsibling(carol,bob).\ntall(eve).\nwet(book).\nlikes(carol,dave).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave likes ball.\nIf dave likes ball, then dave is a sibling of dave.\nIf dave is a sibling of dave, then dave is happy.\nIf dave is happy, then frank is happy.\nIf frank is happy, then frank is a sibling of dave.\nIf frank is a sibling of dave, then apple is wet.\nIf apple is wet, then alice is a sibling of alice.\nIf alice is a sibling of alice, then carol is a friend of eve.\nIf carol is a friend of eve, then dave is a sibling of alice.\nIf dave is a sibling of alice, then george likes book.\nIf george dislikes eve and eve likes dave, then dave dislikes pencil.\nIf frank is hungry and george is tall and phone is wet, then bob is a parent of alice.\nIf eve is a parent of carol and dave dislikes pencil, then dave is a parent of eve.\nIf eve likes frank, then bob is an enemy of frank.\nIf dave likes phone and eve is hungry, then it is hot.\nIf dave is an enemy of bob and carol is happy, then bob is happy.\nIf frank is happy and frank is a sibling of george and dave is a friend of carol, then pencil is small.\nIf dave is tall, then alice is happy.\nIf phone is big and carol is a sibling of bob and frank is an enemy of george, then eve is hungry.\n\nAnd the following facts:\ncarol is sad.\ndave is a sibling of alice.\nalice is hungry.\ncarol is a sibling of bob.\neve is tall.\nbook is wet.\ncarol likes dave.\nalice dislikes pencil.\n\nQUESTION:\nIs carol is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "likes(dave,ball) :- sad(carol).\nsibling(dave,dave) :- likes(dave,ball).\nhappy(dave) :- sibling(dave,dave).\nhappy(frank) :- happy(dave).\nsibling(frank,dave) :- happy(frank).\nwet(apple) :- sibling(frank,dave).\nsibling(alice,alice) :- wet(apple).\nfriend(carol,eve) :- sibling(alice,alice).\nsibling(dave,alice) :- friend(carol,eve).\nlikes(george,book) :- sibling(dave,alice).\ndislikes(dave,pencil) :- dislikes(george,eve), likes(eve,dave).\nparent(bob,alice) :- hungry(frank), tall(george), wet(phone).\nparent(dave,eve) :- parent(eve,carol), dislikes(dave,pencil).\nenemy(bob,frank) :- likes(eve,frank).\nhot :- likes(dave,phone), hungry(eve).\nhappy(bob) :- enemy(dave,bob), happy(carol).\nsmall(pencil) :- happy(frank), sibling(frank,george), friend(dave,carol).\nhappy(alice) :- tall(dave).\nhungry(eve) :- big(phone), sibling(carol,bob), enemy(frank,george).\nsad(carol).\nsibling(dave,alice).\nhungry(alice).\nsibling(carol,bob).\ntall(eve).\nwet(book).\nlikes(carol,dave).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave likes ball.\nIf dave likes ball, then dave is a sibling of dave.\nIf dave is a sibling of dave, then dave is happy.\nIf dave is happy, then frank is happy.\nIf frank is happy, then frank is a sibling of dave.\nIf frank is a sibling of dave, then apple is wet.\nIf apple is wet, then alice is a sibling of alice.\nIf alice is a sibling of alice, then carol is a friend of eve.\nIf carol is a friend of eve, then dave is a sibling of alice.\nIf dave is a sibling of alice, then george likes book.\nIf george dislikes eve and eve likes dave, then dave dislikes pencil.\nIf frank is hungry and george is tall and phone is wet, then bob is a parent of alice.\nIf eve is a parent of carol and dave dislikes pencil, then dave is a parent of eve.\nIf eve likes frank, then bob is an enemy of frank.\nIf dave likes phone and eve is hungry, then it is hot.\nIf dave is an enemy of bob and carol is happy, then bob is happy.\nIf frank is happy and frank is a sibling of george and dave is a friend of carol, then pencil is small.\nIf dave is tall, then alice is happy.\nIf phone is big and carol is a sibling of bob and frank is an enemy of george, then eve is hungry.\n\nAnd the following facts:\ncarol is sad.\ndave is a sibling of alice.\nalice is hungry.\ncarol is a sibling of bob.\neve is tall.\nbook is wet.\ncarol likes dave.\nalice dislikes pencil.\n\nQUESTION:\nIs alice is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,eve).",
    "c": "likes(dave,ball) :- sad(carol).\nsibling(dave,dave) :- likes(dave,ball).\nhappy(dave) :- sibling(dave,dave).\nhappy(frank) :- happy(dave).\nsibling(frank,dave) :- happy(frank).\nwet(apple) :- sibling(frank,dave).\nsibling(alice,alice) :- wet(apple).\nfriend(carol,eve) :- sibling(alice,alice).\nsibling(dave,alice) :- friend(carol,eve).\nlikes(george,book) :- sibling(dave,alice).\ndislikes(dave,pencil) :- dislikes(george,eve), likes(eve,dave).\nparent(bob,alice) :- hungry(frank), tall(george), wet(phone).\nparent(dave,eve) :- parent(eve,carol), dislikes(dave,pencil).\nenemy(bob,frank) :- likes(eve,frank).\nhot :- likes(dave,phone), hungry(eve).\nhappy(bob) :- enemy(dave,bob), happy(carol).\nsmall(pencil) :- happy(frank), sibling(frank,george), friend(dave,carol).\nhappy(alice) :- tall(dave).\nhungry(eve) :- big(phone), sibling(carol,bob), enemy(frank,george).\nsad(carol).\nsibling(dave,alice).\nhungry(alice).\nsibling(carol,bob).\ntall(eve).\nwet(book).\nlikes(carol,dave).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave likes ball.\nIf dave likes ball, then dave is a sibling of dave.\nIf dave is a sibling of dave, then dave is happy.\nIf dave is happy, then frank is happy.\nIf frank is happy, then frank is a sibling of dave.\nIf frank is a sibling of dave, then apple is wet.\nIf apple is wet, then alice is a sibling of alice.\nIf alice is a sibling of alice, then carol is a friend of eve.\nIf carol is a friend of eve, then dave is a sibling of alice.\nIf dave is a sibling of alice, then george likes book.\nIf george dislikes eve and eve likes dave, then dave dislikes pencil.\nIf frank is hungry and george is tall and phone is wet, then bob is a parent of alice.\nIf eve is a parent of carol and dave dislikes pencil, then dave is a parent of eve.\nIf eve likes frank, then bob is an enemy of frank.\nIf dave likes phone and eve is hungry, then it is hot.\nIf dave is an enemy of bob and carol is happy, then bob is happy.\nIf frank is happy and frank is a sibling of george and dave is a friend of carol, then pencil is small.\nIf dave is tall, then alice is happy.\nIf phone is big and carol is a sibling of bob and frank is an enemy of george, then eve is hungry.\n\nAnd the following facts:\ncarol is sad.\ndave is a sibling of alice.\nalice is hungry.\ncarol is a sibling of bob.\neve is tall.\nbook is wet.\ncarol likes dave.\nalice dislikes pencil.\n\nQUESTION:\nIs carol likes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,george).",
    "c": "likes(dave,ball) :- sad(carol).\nsibling(dave,dave) :- likes(dave,ball).\nhappy(dave) :- sibling(dave,dave).\nhappy(frank) :- happy(dave).\nsibling(frank,dave) :- happy(frank).\nwet(apple) :- sibling(frank,dave).\nsibling(alice,alice) :- wet(apple).\nfriend(carol,eve) :- sibling(alice,alice).\nsibling(dave,alice) :- friend(carol,eve).\nlikes(george,book) :- sibling(dave,alice).\ndislikes(dave,pencil) :- dislikes(george,eve), likes(eve,dave).\nparent(bob,alice) :- hungry(frank), tall(george), wet(phone).\nparent(dave,eve) :- parent(eve,carol), dislikes(dave,pencil).\nenemy(bob,frank) :- likes(eve,frank).\nhot :- likes(dave,phone), hungry(eve).\nhappy(bob) :- enemy(dave,bob), happy(carol).\nsmall(pencil) :- happy(frank), sibling(frank,george), friend(dave,carol).\nhappy(alice) :- tall(dave).\nhungry(eve) :- big(phone), sibling(carol,bob), enemy(frank,george).\nsad(carol).\nsibling(dave,alice).\nhungry(alice).\nsibling(carol,bob).\ntall(eve).\nwet(book).\nlikes(carol,dave).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave likes ball.\nIf dave likes ball, then dave is a sibling of dave.\nIf dave is a sibling of dave, then dave is happy.\nIf dave is happy, then frank is happy.\nIf frank is happy, then frank is a sibling of dave.\nIf frank is a sibling of dave, then apple is wet.\nIf apple is wet, then alice is a sibling of alice.\nIf alice is a sibling of alice, then carol is a friend of eve.\nIf carol is a friend of eve, then dave is a sibling of alice.\nIf dave is a sibling of alice, then george likes book.\nIf george dislikes eve and eve likes dave, then dave dislikes pencil.\nIf frank is hungry and george is tall and phone is wet, then bob is a parent of alice.\nIf eve is a parent of carol and dave dislikes pencil, then dave is a parent of eve.\nIf eve likes frank, then bob is an enemy of frank.\nIf dave likes phone and eve is hungry, then it is hot.\nIf dave is an enemy of bob and carol is happy, then bob is happy.\nIf frank is happy and frank is a sibling of george and dave is a friend of carol, then pencil is small.\nIf dave is tall, then alice is happy.\nIf phone is big and carol is a sibling of bob and frank is an enemy of george, then eve is hungry.\n\nAnd the following facts:\ncarol is sad.\ndave is a sibling of alice.\nalice is hungry.\ncarol is a sibling of bob.\neve is tall.\nbook is wet.\ncarol likes dave.\nalice dislikes pencil.\n\nQUESTION:\nIs carol is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,alice).",
    "c": "likes(dave,ball) :- sad(carol).\nsibling(dave,dave) :- likes(dave,ball).\nhappy(dave) :- sibling(dave,dave).\nhappy(frank) :- happy(dave).\nsibling(frank,dave) :- happy(frank).\nwet(apple) :- sibling(frank,dave).\nsibling(alice,alice) :- wet(apple).\nfriend(carol,eve) :- sibling(alice,alice).\nsibling(dave,alice) :- friend(carol,eve).\nlikes(george,book) :- sibling(dave,alice).\ndislikes(dave,pencil) :- dislikes(george,eve), likes(eve,dave).\nparent(bob,alice) :- hungry(frank), tall(george), wet(phone).\nparent(dave,eve) :- parent(eve,carol), dislikes(dave,pencil).\nenemy(bob,frank) :- likes(eve,frank).\nhot :- likes(dave,phone), hungry(eve).\nhappy(bob) :- enemy(dave,bob), happy(carol).\nsmall(pencil) :- happy(frank), sibling(frank,george), friend(dave,carol).\nhappy(alice) :- tall(dave).\nhungry(eve) :- big(phone), sibling(carol,bob), enemy(frank,george).\nsad(carol).\nhungry(alice).\nsibling(carol,bob).\ntall(eve).\nwet(book).\nlikes(carol,dave).\ndislikes(alice,pencil).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave likes ball.\nIf dave likes ball, then dave is a sibling of dave.\nIf dave is a sibling of dave, then dave is happy.\nIf dave is happy, then frank is happy.\nIf frank is happy, then frank is a sibling of dave.\nIf frank is a sibling of dave, then apple is wet.\nIf apple is wet, then alice is a sibling of alice.\nIf alice is a sibling of alice, then carol is a friend of eve.\nIf carol is a friend of eve, then dave is a sibling of alice.\nIf dave is a sibling of alice, then george likes book.\nIf george dislikes eve and eve likes dave, then dave dislikes pencil.\nIf frank is hungry and george is tall and phone is wet, then bob is a parent of alice.\nIf eve is a parent of carol and dave dislikes pencil, then dave is a parent of eve.\nIf eve likes frank, then bob is an enemy of frank.\nIf dave likes phone and eve is hungry, then it is hot.\nIf dave is an enemy of bob and carol is happy, then bob is happy.\nIf frank is happy and frank is a sibling of george and dave is a friend of carol, then pencil is small.\nIf dave is tall, then alice is happy.\nIf phone is big and carol is a sibling of bob and frank is an enemy of george, then eve is hungry.\n\nAnd the following facts:\ncarol is sad.\ndave is a sibling of alice.\nalice is hungry.\ncarol is a sibling of bob.\neve is tall.\nbook is wet.\ncarol likes dave.\nalice dislikes pencil.\n\nOBSERVATION: george likes book is true.\n\nQUESTION:\nCould dave is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,dave).",
    "c": "likes(dave,ball) :- sad(carol).\nsibling(dave,dave) :- likes(dave,ball).\nhappy(dave) :- sibling(dave,dave).\nhappy(frank) :- happy(dave).\nsibling(frank,dave) :- happy(frank).\nwet(apple) :- sibling(frank,dave).\nsibling(alice,alice) :- wet(apple).\nfriend(carol,eve) :- sibling(alice,alice).\nsibling(dave,alice) :- friend(carol,eve).\nlikes(george,book) :- sibling(dave,alice).\ndislikes(dave,pencil) :- dislikes(george,eve), likes(eve,dave).\nparent(bob,alice) :- hungry(frank), tall(george), wet(phone).\nparent(dave,eve) :- parent(eve,carol), dislikes(dave,pencil).\nenemy(bob,frank) :- likes(eve,frank).\nhot :- likes(dave,phone), hungry(eve).\nhappy(bob) :- enemy(dave,bob), happy(carol).\nsmall(pencil) :- happy(frank), sibling(frank,george), friend(dave,carol).\nhappy(alice) :- tall(dave).\nhungry(eve) :- big(phone), sibling(carol,bob), enemy(frank,george).\nsad(carol).\nsibling(dave,alice).\nhungry(alice).\nsibling(carol,bob).\ntall(eve).\nwet(book).\ndislikes(alice,pencil).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave likes ball.\nIf dave likes ball, then dave is a sibling of dave.\nIf dave is a sibling of dave, then dave is happy.\nIf dave is happy, then frank is happy.\nIf frank is happy, then frank is a sibling of dave.\nIf frank is a sibling of dave, then apple is wet.\nIf apple is wet, then alice is a sibling of alice.\nIf alice is a sibling of alice, then carol is a friend of eve.\nIf carol is a friend of eve, then dave is a sibling of alice.\nIf dave is a sibling of alice, then george likes book.\nIf george dislikes eve and eve likes dave, then dave dislikes pencil.\nIf frank is hungry and george is tall and phone is wet, then bob is a parent of alice.\nIf eve is a parent of carol and dave dislikes pencil, then dave is a parent of eve.\nIf eve likes frank, then bob is an enemy of frank.\nIf dave likes phone and eve is hungry, then it is hot.\nIf dave is an enemy of bob and carol is happy, then bob is happy.\nIf frank is happy and frank is a sibling of george and dave is a friend of carol, then pencil is small.\nIf dave is tall, then alice is happy.\nIf phone is big and carol is a sibling of bob and frank is an enemy of george, then eve is hungry.\n\nAnd the following facts:\ncarol is sad.\ndave is a sibling of alice.\nalice is hungry.\ncarol is a sibling of bob.\neve is tall.\nbook is wet.\ncarol likes dave.\nalice dislikes pencil.\n\nOBSERVATION: george likes book is true.\n\nQUESTION:\nCould carol likes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,pencil).",
    "c": "likes(dave,ball) :- sad(carol).\nsibling(dave,dave) :- likes(dave,ball).\nhappy(dave) :- sibling(dave,dave).\nhappy(frank) :- happy(dave).\nsibling(frank,dave) :- happy(frank).\nwet(apple) :- sibling(frank,dave).\nsibling(alice,alice) :- wet(apple).\nfriend(carol,eve) :- sibling(alice,alice).\nsibling(dave,alice) :- friend(carol,eve).\nlikes(george,book) :- sibling(dave,alice).\ndislikes(dave,pencil) :- dislikes(george,eve), likes(eve,dave).\nparent(bob,alice) :- hungry(frank), tall(george), wet(phone).\nparent(dave,eve) :- parent(eve,carol), dislikes(dave,pencil).\nenemy(bob,frank) :- likes(eve,frank).\nhot :- likes(dave,phone), hungry(eve).\nhappy(bob) :- enemy(dave,bob), happy(carol).\nsmall(pencil) :- happy(frank), sibling(frank,george), friend(dave,carol).\nhappy(alice) :- tall(dave).\nhungry(eve) :- big(phone), sibling(carol,bob), enemy(frank,george).\nsad(carol).\nsibling(dave,alice).\nhungry(alice).\nsibling(carol,bob).\ntall(eve).\nwet(book).\nlikes(carol,dave).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave likes ball.\nIf dave likes ball, then dave is a sibling of dave.\nIf dave is a sibling of dave, then dave is happy.\nIf dave is happy, then frank is happy.\nIf frank is happy, then frank is a sibling of dave.\nIf frank is a sibling of dave, then apple is wet.\nIf apple is wet, then alice is a sibling of alice.\nIf alice is a sibling of alice, then carol is a friend of eve.\nIf carol is a friend of eve, then dave is a sibling of alice.\nIf dave is a sibling of alice, then george likes book.\nIf george dislikes eve and eve likes dave, then dave dislikes pencil.\nIf frank is hungry and george is tall and phone is wet, then bob is a parent of alice.\nIf eve is a parent of carol and dave dislikes pencil, then dave is a parent of eve.\nIf eve likes frank, then bob is an enemy of frank.\nIf dave likes phone and eve is hungry, then it is hot.\nIf dave is an enemy of bob and carol is happy, then bob is happy.\nIf frank is happy and frank is a sibling of george and dave is a friend of carol, then pencil is small.\nIf dave is tall, then alice is happy.\nIf phone is big and carol is a sibling of bob and frank is an enemy of george, then eve is hungry.\n\nAnd the following facts:\ncarol is sad.\ndave is a sibling of alice.\nalice is hungry.\ncarol is a sibling of bob.\neve is tall.\nbook is wet.\ncarol likes dave.\nalice dislikes pencil.\n\nOBSERVATION: george likes book is true.\n\nQUESTION:\nCould alice dislikes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 8,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "small(pencil) :- wet(apple).\nhungry(dave) :- small(pencil).\nwet(apple) :- sibling(george,alice).\nwet(apple) :- dislikes(bob,carol).\ntall(dave) :- sad(bob), parent(eve,george).\ntall(bob) :- small(car), sunny.\ntall(carol) :- tall(alice), tall(carol).\ndislikes(eve,car) :- dislikes(alice,bob), hot, small(pencil).\nsibling(george,alice) :- owns(eve,pencil).\ncold :- happy(george), tall(dave), parent(dave,dave).\ncold :- cold.\ndislikes(dave,frank) :- dislikes(george,bob).\nsibling(frank,dave) :- dislikes(carol,alice), tall(bob).\nsad(frank) :- tall(frank), sad(frank), happy(carol).\nsad(frank) :- friend(alice,bob).\ndislikes(george,ball) :- big(pencil), dislikes(alice,bob), dislikes(george,ball).\nwet(ball) :- enemy(bob,bob), likes(carol,george).\nlikes(alice,ball) :- sibling(alice,eve), parent(frank,bob).\nfriend(george,dave) :- friend(dave,carol).\nwet(apple).\nhungry(bob).\nlikes(bob,phone).\nenemy(alice,george).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(dave,carol).\nsibling(dave,eve).\nfriend(dave,eve).\nlikes(alice,george).\nparent(eve,alice).\nwet(ball).",
    "natural language": "You are given the following information:\nIf apple is wet, then pencil is small.\nIf pencil is small, then dave is hungry.\nIf george is a sibling of alice, then apple is wet.\nIf bob dislikes carol, then apple is wet.\nIf bob is sad and eve is a parent of george, then dave is tall.\nIf car is small and it is sunny, then bob is tall.\nIf alice is tall and carol is tall, then carol is tall.\nIf alice dislikes bob and it is hot and pencil is small, then eve dislikes car.\nIf eve owns pencil, then george is a sibling of alice.\nIf george is happy and dave is tall and dave is a parent of dave, then it is cold.\nIf it is cold, then it is cold.\nIf george dislikes bob, then dave dislikes frank.\nIf carol dislikes alice and bob is tall, then frank is a sibling of dave.\nIf frank is tall and frank is sad and carol is happy, then frank is sad.\nIf alice is a friend of bob, then frank is sad.\nIf pencil is big and alice dislikes bob and george dislikes ball, then george dislikes ball.\nIf bob is an enemy of bob and carol likes george, then ball is wet.\nIf alice is a sibling of eve and frank is a parent of bob, then alice likes ball.\nIf dave is a friend of carol, then george is a friend of dave.\n\nAnd the following facts:\napple is wet.\nbob is hungry.\nbob likes phone.\nalice is an enemy of george.\nfrank is an enemy of carol.\ngeorge likes pencil.\ndave likes carol.\ndave is a sibling of eve.\ndave is a friend of eve.\nalice likes george.\neve is a parent of alice.\nball is wet.\n\nQUESTION:\nIs pencil is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,alice).",
    "c": "small(pencil) :- wet(apple).\nhungry(dave) :- small(pencil).\nwet(apple) :- sibling(george,alice).\nwet(apple) :- dislikes(bob,carol).\ntall(dave) :- sad(bob), parent(eve,george).\ntall(bob) :- small(car), sunny.\ntall(carol) :- tall(alice), tall(carol).\ndislikes(eve,car) :- dislikes(alice,bob), hot, small(pencil).\nsibling(george,alice) :- owns(eve,pencil).\ncold :- happy(george), tall(dave), parent(dave,dave).\ncold :- cold.\ndislikes(dave,frank) :- dislikes(george,bob).\nsibling(frank,dave) :- dislikes(carol,alice), tall(bob).\nsad(frank) :- tall(frank), sad(frank), happy(carol).\nsad(frank) :- friend(alice,bob).\ndislikes(george,ball) :- big(pencil), dislikes(alice,bob), dislikes(george,ball).\nwet(ball) :- enemy(bob,bob), likes(carol,george).\nlikes(alice,ball) :- sibling(alice,eve), parent(frank,bob).\nfriend(george,dave) :- friend(dave,carol).\nwet(apple).\nhungry(bob).\nlikes(bob,phone).\nenemy(alice,george).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(dave,carol).\nsibling(dave,eve).\nfriend(dave,eve).\nlikes(alice,george).\nparent(eve,alice).\nwet(ball).",
    "natural language": "You are given the following information:\nIf apple is wet, then pencil is small.\nIf pencil is small, then dave is hungry.\nIf george is a sibling of alice, then apple is wet.\nIf bob dislikes carol, then apple is wet.\nIf bob is sad and eve is a parent of george, then dave is tall.\nIf car is small and it is sunny, then bob is tall.\nIf alice is tall and carol is tall, then carol is tall.\nIf alice dislikes bob and it is hot and pencil is small, then eve dislikes car.\nIf eve owns pencil, then george is a sibling of alice.\nIf george is happy and dave is tall and dave is a parent of dave, then it is cold.\nIf it is cold, then it is cold.\nIf george dislikes bob, then dave dislikes frank.\nIf carol dislikes alice and bob is tall, then frank is a sibling of dave.\nIf frank is tall and frank is sad and carol is happy, then frank is sad.\nIf alice is a friend of bob, then frank is sad.\nIf pencil is big and alice dislikes bob and george dislikes ball, then george dislikes ball.\nIf bob is an enemy of bob and carol likes george, then ball is wet.\nIf alice is a sibling of eve and frank is a parent of bob, then alice likes ball.\nIf dave is a friend of carol, then george is a friend of dave.\n\nAnd the following facts:\napple is wet.\nbob is hungry.\nbob likes phone.\nalice is an enemy of george.\nfrank is an enemy of carol.\ngeorge likes pencil.\ndave likes carol.\ndave is a sibling of eve.\ndave is a friend of eve.\nalice likes george.\neve is a parent of alice.\nball is wet.\n\nQUESTION:\nIs eve is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(dave).",
    "c": "small(pencil) :- wet(apple).\nhungry(dave) :- small(pencil).\nwet(apple) :- sibling(george,alice).\nwet(apple) :- dislikes(bob,carol).\ntall(dave) :- sad(bob), parent(eve,george).\ntall(bob) :- small(car), sunny.\ntall(carol) :- tall(alice), tall(carol).\ndislikes(eve,car) :- dislikes(alice,bob), hot, small(pencil).\nsibling(george,alice) :- owns(eve,pencil).\ncold :- happy(george), tall(dave), parent(dave,dave).\ncold :- cold.\ndislikes(dave,frank) :- dislikes(george,bob).\nsibling(frank,dave) :- dislikes(carol,alice), tall(bob).\nsad(frank) :- tall(frank), sad(frank), happy(carol).\nsad(frank) :- friend(alice,bob).\ndislikes(george,ball) :- big(pencil), dislikes(alice,bob), dislikes(george,ball).\nwet(ball) :- enemy(bob,bob), likes(carol,george).\nlikes(alice,ball) :- sibling(alice,eve), parent(frank,bob).\nfriend(george,dave) :- friend(dave,carol).\nwet(apple).\nhungry(bob).\nlikes(bob,phone).\nenemy(alice,george).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(dave,carol).\nsibling(dave,eve).\nfriend(dave,eve).\nlikes(alice,george).\nparent(eve,alice).\nwet(ball).",
    "natural language": "You are given the following information:\nIf apple is wet, then pencil is small.\nIf pencil is small, then dave is hungry.\nIf george is a sibling of alice, then apple is wet.\nIf bob dislikes carol, then apple is wet.\nIf bob is sad and eve is a parent of george, then dave is tall.\nIf car is small and it is sunny, then bob is tall.\nIf alice is tall and carol is tall, then carol is tall.\nIf alice dislikes bob and it is hot and pencil is small, then eve dislikes car.\nIf eve owns pencil, then george is a sibling of alice.\nIf george is happy and dave is tall and dave is a parent of dave, then it is cold.\nIf it is cold, then it is cold.\nIf george dislikes bob, then dave dislikes frank.\nIf carol dislikes alice and bob is tall, then frank is a sibling of dave.\nIf frank is tall and frank is sad and carol is happy, then frank is sad.\nIf alice is a friend of bob, then frank is sad.\nIf pencil is big and alice dislikes bob and george dislikes ball, then george dislikes ball.\nIf bob is an enemy of bob and carol likes george, then ball is wet.\nIf alice is a sibling of eve and frank is a parent of bob, then alice likes ball.\nIf dave is a friend of carol, then george is a friend of dave.\n\nAnd the following facts:\napple is wet.\nbob is hungry.\nbob likes phone.\nalice is an enemy of george.\nfrank is an enemy of carol.\ngeorge likes pencil.\ndave likes carol.\ndave is a sibling of eve.\ndave is a friend of eve.\nalice likes george.\neve is a parent of alice.\nball is wet.\n\nQUESTION:\nIs dave is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,carol).",
    "c": "small(pencil) :- wet(apple).\nhungry(dave) :- small(pencil).\nwet(apple) :- sibling(george,alice).\nwet(apple) :- dislikes(bob,carol).\ntall(dave) :- sad(bob), parent(eve,george).\ntall(bob) :- small(car), sunny.\ntall(carol) :- tall(alice), tall(carol).\ndislikes(eve,car) :- dislikes(alice,bob), hot, small(pencil).\nsibling(george,alice) :- owns(eve,pencil).\ncold :- happy(george), tall(dave), parent(dave,dave).\ncold :- cold.\ndislikes(dave,frank) :- dislikes(george,bob).\nsibling(frank,dave) :- dislikes(carol,alice), tall(bob).\nsad(frank) :- tall(frank), sad(frank), happy(carol).\nsad(frank) :- friend(alice,bob).\ndislikes(george,ball) :- big(pencil), dislikes(alice,bob), dislikes(george,ball).\nwet(ball) :- enemy(bob,bob), likes(carol,george).\nlikes(alice,ball) :- sibling(alice,eve), parent(frank,bob).\nfriend(george,dave) :- friend(dave,carol).\nwet(apple).\nhungry(bob).\nlikes(bob,phone).\nenemy(alice,george).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(dave,carol).\nsibling(dave,eve).\nfriend(dave,eve).\nlikes(alice,george).\nparent(eve,alice).\nwet(ball).",
    "natural language": "You are given the following information:\nIf apple is wet, then pencil is small.\nIf pencil is small, then dave is hungry.\nIf george is a sibling of alice, then apple is wet.\nIf bob dislikes carol, then apple is wet.\nIf bob is sad and eve is a parent of george, then dave is tall.\nIf car is small and it is sunny, then bob is tall.\nIf alice is tall and carol is tall, then carol is tall.\nIf alice dislikes bob and it is hot and pencil is small, then eve dislikes car.\nIf eve owns pencil, then george is a sibling of alice.\nIf george is happy and dave is tall and dave is a parent of dave, then it is cold.\nIf it is cold, then it is cold.\nIf george dislikes bob, then dave dislikes frank.\nIf carol dislikes alice and bob is tall, then frank is a sibling of dave.\nIf frank is tall and frank is sad and carol is happy, then frank is sad.\nIf alice is a friend of bob, then frank is sad.\nIf pencil is big and alice dislikes bob and george dislikes ball, then george dislikes ball.\nIf bob is an enemy of bob and carol likes george, then ball is wet.\nIf alice is a sibling of eve and frank is a parent of bob, then alice likes ball.\nIf dave is a friend of carol, then george is a friend of dave.\n\nAnd the following facts:\napple is wet.\nbob is hungry.\nbob likes phone.\nalice is an enemy of george.\nfrank is an enemy of carol.\ngeorge likes pencil.\ndave likes carol.\ndave is a sibling of eve.\ndave is a friend of eve.\nalice likes george.\neve is a parent of alice.\nball is wet.\n\nQUESTION:\nIs george is an enemy of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,frank).",
    "c": "small(pencil) :- wet(apple).\nhungry(dave) :- small(pencil).\nwet(apple) :- sibling(george,alice).\nwet(apple) :- dislikes(bob,carol).\ntall(dave) :- sad(bob), parent(eve,george).\ntall(bob) :- small(car), sunny.\ntall(carol) :- tall(alice), tall(carol).\ndislikes(eve,car) :- dislikes(alice,bob), hot, small(pencil).\nsibling(george,alice) :- owns(eve,pencil).\ncold :- happy(george), tall(dave), parent(dave,dave).\ncold :- cold.\ndislikes(dave,frank) :- dislikes(george,bob).\nsibling(frank,dave) :- dislikes(carol,alice), tall(bob).\nsad(frank) :- tall(frank), sad(frank), happy(carol).\nsad(frank) :- friend(alice,bob).\ndislikes(george,ball) :- big(pencil), dislikes(alice,bob), dislikes(george,ball).\nwet(ball) :- enemy(bob,bob), likes(carol,george).\nlikes(alice,ball) :- sibling(alice,eve), parent(frank,bob).\nfriend(george,dave) :- friend(dave,carol).\nwet(apple).\nhungry(bob).\nlikes(bob,phone).\nenemy(alice,george).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(dave,carol).\nsibling(dave,eve).\nfriend(dave,eve).\nlikes(alice,george).\nparent(eve,alice).\nwet(ball).",
    "natural language": "You are given the following information:\nIf apple is wet, then pencil is small.\nIf pencil is small, then dave is hungry.\nIf george is a sibling of alice, then apple is wet.\nIf bob dislikes carol, then apple is wet.\nIf bob is sad and eve is a parent of george, then dave is tall.\nIf car is small and it is sunny, then bob is tall.\nIf alice is tall and carol is tall, then carol is tall.\nIf alice dislikes bob and it is hot and pencil is small, then eve dislikes car.\nIf eve owns pencil, then george is a sibling of alice.\nIf george is happy and dave is tall and dave is a parent of dave, then it is cold.\nIf it is cold, then it is cold.\nIf george dislikes bob, then dave dislikes frank.\nIf carol dislikes alice and bob is tall, then frank is a sibling of dave.\nIf frank is tall and frank is sad and carol is happy, then frank is sad.\nIf alice is a friend of bob, then frank is sad.\nIf pencil is big and alice dislikes bob and george dislikes ball, then george dislikes ball.\nIf bob is an enemy of bob and carol likes george, then ball is wet.\nIf alice is a sibling of eve and frank is a parent of bob, then alice likes ball.\nIf dave is a friend of carol, then george is a friend of dave.\n\nAnd the following facts:\napple is wet.\nbob is hungry.\nbob likes phone.\nalice is an enemy of george.\nfrank is an enemy of carol.\ngeorge likes pencil.\ndave likes carol.\ndave is a sibling of eve.\ndave is a friend of eve.\nalice likes george.\neve is a parent of alice.\nball is wet.\n\nQUESTION:\nIs eve is an enemy of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "small(pencil) :- wet(apple).\nhungry(dave) :- small(pencil).\nwet(apple) :- sibling(george,alice).\nwet(apple) :- dislikes(bob,carol).\ntall(dave) :- sad(bob), parent(eve,george).\ntall(bob) :- small(car), sunny.\ntall(carol) :- tall(alice), tall(carol).\ndislikes(eve,car) :- dislikes(alice,bob), hot, small(pencil).\nsibling(george,alice) :- owns(eve,pencil).\ncold :- happy(george), tall(dave), parent(dave,dave).\ncold :- cold.\ndislikes(dave,frank) :- dislikes(george,bob).\nsibling(frank,dave) :- dislikes(carol,alice), tall(bob).\nsad(frank) :- tall(frank), sad(frank), happy(carol).\nsad(frank) :- friend(alice,bob).\ndislikes(george,ball) :- big(pencil), dislikes(alice,bob), dislikes(george,ball).\nwet(ball) :- enemy(bob,bob), likes(carol,george).\nlikes(alice,ball) :- sibling(alice,eve), parent(frank,bob).\nfriend(george,dave) :- friend(dave,carol).\nhungry(bob).\nlikes(bob,phone).\nenemy(alice,george).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(dave,carol).\nsibling(dave,eve).\nfriend(dave,eve).\nlikes(alice,george).\nparent(eve,alice).\nwet(ball).",
    "natural language": "You are given the following rules:\nIf apple is wet, then pencil is small.\nIf pencil is small, then dave is hungry.\nIf george is a sibling of alice, then apple is wet.\nIf bob dislikes carol, then apple is wet.\nIf bob is sad and eve is a parent of george, then dave is tall.\nIf car is small and it is sunny, then bob is tall.\nIf alice is tall and carol is tall, then carol is tall.\nIf alice dislikes bob and it is hot and pencil is small, then eve dislikes car.\nIf eve owns pencil, then george is a sibling of alice.\nIf george is happy and dave is tall and dave is a parent of dave, then it is cold.\nIf it is cold, then it is cold.\nIf george dislikes bob, then dave dislikes frank.\nIf carol dislikes alice and bob is tall, then frank is a sibling of dave.\nIf frank is tall and frank is sad and carol is happy, then frank is sad.\nIf alice is a friend of bob, then frank is sad.\nIf pencil is big and alice dislikes bob and george dislikes ball, then george dislikes ball.\nIf bob is an enemy of bob and carol likes george, then ball is wet.\nIf alice is a sibling of eve and frank is a parent of bob, then alice likes ball.\nIf dave is a friend of carol, then george is a friend of dave.\n\nAnd the following facts:\napple is wet.\nbob is hungry.\nbob likes phone.\nalice is an enemy of george.\nfrank is an enemy of carol.\ngeorge likes pencil.\ndave likes carol.\ndave is a sibling of eve.\ndave is a friend of eve.\nalice likes george.\neve is a parent of alice.\nball is wet.\n\nOBSERVATION: dave is hungry is true.\n\nQUESTION:\nCould apple is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(frank,carol).",
    "c": "small(pencil) :- wet(apple).\nhungry(dave) :- small(pencil).\nwet(apple) :- sibling(george,alice).\nwet(apple) :- dislikes(bob,carol).\ntall(dave) :- sad(bob), parent(eve,george).\ntall(bob) :- small(car), sunny.\ntall(carol) :- tall(alice), tall(carol).\ndislikes(eve,car) :- dislikes(alice,bob), hot, small(pencil).\nsibling(george,alice) :- owns(eve,pencil).\ncold :- happy(george), tall(dave), parent(dave,dave).\ncold :- cold.\ndislikes(dave,frank) :- dislikes(george,bob).\nsibling(frank,dave) :- dislikes(carol,alice), tall(bob).\nsad(frank) :- tall(frank), sad(frank), happy(carol).\nsad(frank) :- friend(alice,bob).\ndislikes(george,ball) :- big(pencil), dislikes(alice,bob), dislikes(george,ball).\nwet(ball) :- enemy(bob,bob), likes(carol,george).\nlikes(alice,ball) :- sibling(alice,eve), parent(frank,bob).\nfriend(george,dave) :- friend(dave,carol).\nwet(apple).\nhungry(bob).\nlikes(bob,phone).\nenemy(alice,george).\nlikes(george,pencil).\nlikes(dave,carol).\nsibling(dave,eve).\nfriend(dave,eve).\nlikes(alice,george).\nparent(eve,alice).\nwet(ball).",
    "natural language": "You are given the following rules:\nIf apple is wet, then pencil is small.\nIf pencil is small, then dave is hungry.\nIf george is a sibling of alice, then apple is wet.\nIf bob dislikes carol, then apple is wet.\nIf bob is sad and eve is a parent of george, then dave is tall.\nIf car is small and it is sunny, then bob is tall.\nIf alice is tall and carol is tall, then carol is tall.\nIf alice dislikes bob and it is hot and pencil is small, then eve dislikes car.\nIf eve owns pencil, then george is a sibling of alice.\nIf george is happy and dave is tall and dave is a parent of dave, then it is cold.\nIf it is cold, then it is cold.\nIf george dislikes bob, then dave dislikes frank.\nIf carol dislikes alice and bob is tall, then frank is a sibling of dave.\nIf frank is tall and frank is sad and carol is happy, then frank is sad.\nIf alice is a friend of bob, then frank is sad.\nIf pencil is big and alice dislikes bob and george dislikes ball, then george dislikes ball.\nIf bob is an enemy of bob and carol likes george, then ball is wet.\nIf alice is a sibling of eve and frank is a parent of bob, then alice likes ball.\nIf dave is a friend of carol, then george is a friend of dave.\n\nAnd the following facts:\napple is wet.\nbob is hungry.\nbob likes phone.\nalice is an enemy of george.\nfrank is an enemy of carol.\ngeorge likes pencil.\ndave likes carol.\ndave is a sibling of eve.\ndave is a friend of eve.\nalice likes george.\neve is a parent of alice.\nball is wet.\n\nOBSERVATION: dave is hungry is true.\n\nQUESTION:\nCould frank is an enemy of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(george,pencil).",
    "c": "small(pencil) :- wet(apple).\nhungry(dave) :- small(pencil).\nwet(apple) :- sibling(george,alice).\nwet(apple) :- dislikes(bob,carol).\ntall(dave) :- sad(bob), parent(eve,george).\ntall(bob) :- small(car), sunny.\ntall(carol) :- tall(alice), tall(carol).\ndislikes(eve,car) :- dislikes(alice,bob), hot, small(pencil).\nsibling(george,alice) :- owns(eve,pencil).\ncold :- happy(george), tall(dave), parent(dave,dave).\ncold :- cold.\ndislikes(dave,frank) :- dislikes(george,bob).\nsibling(frank,dave) :- dislikes(carol,alice), tall(bob).\nsad(frank) :- tall(frank), sad(frank), happy(carol).\nsad(frank) :- friend(alice,bob).\ndislikes(george,ball) :- big(pencil), dislikes(alice,bob), dislikes(george,ball).\nwet(ball) :- enemy(bob,bob), likes(carol,george).\nlikes(alice,ball) :- sibling(alice,eve), parent(frank,bob).\nfriend(george,dave) :- friend(dave,carol).\nwet(apple).\nhungry(bob).\nlikes(bob,phone).\nenemy(alice,george).\nenemy(frank,carol).\nlikes(dave,carol).\nsibling(dave,eve).\nfriend(dave,eve).\nlikes(alice,george).\nparent(eve,alice).\nwet(ball).",
    "natural language": "You are given the following rules:\nIf apple is wet, then pencil is small.\nIf pencil is small, then dave is hungry.\nIf george is a sibling of alice, then apple is wet.\nIf bob dislikes carol, then apple is wet.\nIf bob is sad and eve is a parent of george, then dave is tall.\nIf car is small and it is sunny, then bob is tall.\nIf alice is tall and carol is tall, then carol is tall.\nIf alice dislikes bob and it is hot and pencil is small, then eve dislikes car.\nIf eve owns pencil, then george is a sibling of alice.\nIf george is happy and dave is tall and dave is a parent of dave, then it is cold.\nIf it is cold, then it is cold.\nIf george dislikes bob, then dave dislikes frank.\nIf carol dislikes alice and bob is tall, then frank is a sibling of dave.\nIf frank is tall and frank is sad and carol is happy, then frank is sad.\nIf alice is a friend of bob, then frank is sad.\nIf pencil is big and alice dislikes bob and george dislikes ball, then george dislikes ball.\nIf bob is an enemy of bob and carol likes george, then ball is wet.\nIf alice is a sibling of eve and frank is a parent of bob, then alice likes ball.\nIf dave is a friend of carol, then george is a friend of dave.\n\nAnd the following facts:\napple is wet.\nbob is hungry.\nbob likes phone.\nalice is an enemy of george.\nfrank is an enemy of carol.\ngeorge likes pencil.\ndave likes carol.\ndave is a sibling of eve.\ndave is a friend of eve.\nalice likes george.\neve is a parent of alice.\nball is wet.\n\nOBSERVATION: dave is hungry is true.\n\nQUESTION:\nCould george likes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "hungry(dave) :- sad(carol).\nwet(apple) :- hungry(dave).\nhot :- sunny.\nhot :- dislikes(frank,frank).\nhungry(frank) :- sad(carol).\nhot :- cold.\nhungry(bob) :- cold, sunny, parent(george,george).\nlikes(carol,apple) :- enemy(frank,carol), cold.\nlikes(alice,eve) :- sunny.\nlikes(carol,george) :- owns(george,pencil).\ndislikes(carol,george) :- friend(frank,frank), sibling(eve,george).\nsad(eve) :- enemy(carol,bob), hot.\ndislikes(george,phone) :- sibling(carol,george).\ntall(eve) :- dislikes(george,phone), sibling(carol,eve), hungry(bob).\ntall(bob) :- sibling(eve,alice), sunny.\nsad(eve) :- small(phone), sad(frank).\ntall(bob) :- sad(frank), small(book), cold.\nsad(eve) :- cold, small(pencil).\nsibling(alice,frank) :- hungry(carol), likes(george,eve).\nsad(carol).\nparent(carol,frank).\nfriend(carol,bob).\nhungry(george).\nlikes(bob,pencil).\nowns(frank,book).\nfriend(george,dave).\ndislikes(dave,pencil).\ndislikes(frank,ball).\ndislikes(alice,bob).\nfriend(dave,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf it is sunny, then it is hot.\nIf frank dislikes frank, then it is hot.\nIf carol is sad, then frank is hungry.\nIf it is cold, then it is hot.\nIf it is cold and it is sunny and george is a parent of george, then bob is hungry.\nIf frank is an enemy of carol and it is cold, then carol likes apple.\nIf it is sunny, then alice likes eve.\nIf george owns pencil, then carol likes george.\nIf frank is a friend of frank and eve is a sibling of george, then carol dislikes george.\nIf carol is an enemy of bob and it is hot, then eve is sad.\nIf carol is a sibling of george, then george dislikes phone.\nIf george dislikes phone and carol is a sibling of eve and bob is hungry, then eve is tall.\nIf eve is a sibling of alice and it is sunny, then bob is tall.\nIf phone is small and frank is sad, then eve is sad.\nIf frank is sad and book is small and it is cold, then bob is tall.\nIf it is cold and pencil is small, then eve is sad.\nIf carol is hungry and george likes eve, then alice is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ncarol is a parent of frank.\ncarol is a friend of bob.\ngeorge is hungry.\nbob likes pencil.\nfrank owns book.\ngeorge is a friend of dave.\ndave dislikes pencil.\nfrank dislikes ball.\nalice dislikes bob.\ndave is a friend of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nIs george is a friend of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "hungry(dave) :- sad(carol).\nwet(apple) :- hungry(dave).\nhot :- sunny.\nhot :- dislikes(frank,frank).\nhungry(frank) :- sad(carol).\nhot :- cold.\nhungry(bob) :- cold, sunny, parent(george,george).\nlikes(carol,apple) :- enemy(frank,carol), cold.\nlikes(alice,eve) :- sunny.\nlikes(carol,george) :- owns(george,pencil).\ndislikes(carol,george) :- friend(frank,frank), sibling(eve,george).\nsad(eve) :- enemy(carol,bob), hot.\ndislikes(george,phone) :- sibling(carol,george).\ntall(eve) :- dislikes(george,phone), sibling(carol,eve), hungry(bob).\ntall(bob) :- sibling(eve,alice), sunny.\nsad(eve) :- small(phone), sad(frank).\ntall(bob) :- sad(frank), small(book), cold.\nsad(eve) :- cold, small(pencil).\nsibling(alice,frank) :- hungry(carol), likes(george,eve).\nsad(carol).\nparent(carol,frank).\nfriend(carol,bob).\nhungry(george).\nlikes(bob,pencil).\nowns(frank,book).\nfriend(george,dave).\ndislikes(dave,pencil).\ndislikes(frank,ball).\ndislikes(alice,bob).\nfriend(dave,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf it is sunny, then it is hot.\nIf frank dislikes frank, then it is hot.\nIf carol is sad, then frank is hungry.\nIf it is cold, then it is hot.\nIf it is cold and it is sunny and george is a parent of george, then bob is hungry.\nIf frank is an enemy of carol and it is cold, then carol likes apple.\nIf it is sunny, then alice likes eve.\nIf george owns pencil, then carol likes george.\nIf frank is a friend of frank and eve is a sibling of george, then carol dislikes george.\nIf carol is an enemy of bob and it is hot, then eve is sad.\nIf carol is a sibling of george, then george dislikes phone.\nIf george dislikes phone and carol is a sibling of eve and bob is hungry, then eve is tall.\nIf eve is a sibling of alice and it is sunny, then bob is tall.\nIf phone is small and frank is sad, then eve is sad.\nIf frank is sad and book is small and it is cold, then bob is tall.\nIf it is cold and pencil is small, then eve is sad.\nIf carol is hungry and george likes eve, then alice is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ncarol is a parent of frank.\ncarol is a friend of bob.\ngeorge is hungry.\nbob likes pencil.\nfrank owns book.\ngeorge is a friend of dave.\ndave dislikes pencil.\nfrank dislikes ball.\nalice dislikes bob.\ndave is a friend of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nIs apple is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,book).",
    "c": "hungry(dave) :- sad(carol).\nwet(apple) :- hungry(dave).\nhot :- sunny.\nhot :- dislikes(frank,frank).\nhungry(frank) :- sad(carol).\nhot :- cold.\nhungry(bob) :- cold, sunny, parent(george,george).\nlikes(carol,apple) :- enemy(frank,carol), cold.\nlikes(alice,eve) :- sunny.\nlikes(carol,george) :- owns(george,pencil).\ndislikes(carol,george) :- friend(frank,frank), sibling(eve,george).\nsad(eve) :- enemy(carol,bob), hot.\ndislikes(george,phone) :- sibling(carol,george).\ntall(eve) :- dislikes(george,phone), sibling(carol,eve), hungry(bob).\ntall(bob) :- sibling(eve,alice), sunny.\nsad(eve) :- small(phone), sad(frank).\ntall(bob) :- sad(frank), small(book), cold.\nsad(eve) :- cold, small(pencil).\nsibling(alice,frank) :- hungry(carol), likes(george,eve).\nsad(carol).\nparent(carol,frank).\nfriend(carol,bob).\nhungry(george).\nlikes(bob,pencil).\nowns(frank,book).\nfriend(george,dave).\ndislikes(dave,pencil).\ndislikes(frank,ball).\ndislikes(alice,bob).\nfriend(dave,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf it is sunny, then it is hot.\nIf frank dislikes frank, then it is hot.\nIf carol is sad, then frank is hungry.\nIf it is cold, then it is hot.\nIf it is cold and it is sunny and george is a parent of george, then bob is hungry.\nIf frank is an enemy of carol and it is cold, then carol likes apple.\nIf it is sunny, then alice likes eve.\nIf george owns pencil, then carol likes george.\nIf frank is a friend of frank and eve is a sibling of george, then carol dislikes george.\nIf carol is an enemy of bob and it is hot, then eve is sad.\nIf carol is a sibling of george, then george dislikes phone.\nIf george dislikes phone and carol is a sibling of eve and bob is hungry, then eve is tall.\nIf eve is a sibling of alice and it is sunny, then bob is tall.\nIf phone is small and frank is sad, then eve is sad.\nIf frank is sad and book is small and it is cold, then bob is tall.\nIf it is cold and pencil is small, then eve is sad.\nIf carol is hungry and george likes eve, then alice is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ncarol is a parent of frank.\ncarol is a friend of bob.\ngeorge is hungry.\nbob likes pencil.\nfrank owns book.\ngeorge is a friend of dave.\ndave dislikes pencil.\nfrank dislikes ball.\nalice dislikes bob.\ndave is a friend of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nIs frank owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,george).",
    "c": "hungry(dave) :- sad(carol).\nwet(apple) :- hungry(dave).\nhot :- sunny.\nhot :- dislikes(frank,frank).\nhungry(frank) :- sad(carol).\nhot :- cold.\nhungry(bob) :- cold, sunny, parent(george,george).\nlikes(carol,apple) :- enemy(frank,carol), cold.\nlikes(alice,eve) :- sunny.\nlikes(carol,george) :- owns(george,pencil).\ndislikes(carol,george) :- friend(frank,frank), sibling(eve,george).\nsad(eve) :- enemy(carol,bob), hot.\ndislikes(george,phone) :- sibling(carol,george).\ntall(eve) :- dislikes(george,phone), sibling(carol,eve), hungry(bob).\ntall(bob) :- sibling(eve,alice), sunny.\nsad(eve) :- small(phone), sad(frank).\ntall(bob) :- sad(frank), small(book), cold.\nsad(eve) :- cold, small(pencil).\nsibling(alice,frank) :- hungry(carol), likes(george,eve).\nsad(carol).\nparent(carol,frank).\nfriend(carol,bob).\nhungry(george).\nlikes(bob,pencil).\nowns(frank,book).\nfriend(george,dave).\ndislikes(dave,pencil).\ndislikes(frank,ball).\ndislikes(alice,bob).\nfriend(dave,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf it is sunny, then it is hot.\nIf frank dislikes frank, then it is hot.\nIf carol is sad, then frank is hungry.\nIf it is cold, then it is hot.\nIf it is cold and it is sunny and george is a parent of george, then bob is hungry.\nIf frank is an enemy of carol and it is cold, then carol likes apple.\nIf it is sunny, then alice likes eve.\nIf george owns pencil, then carol likes george.\nIf frank is a friend of frank and eve is a sibling of george, then carol dislikes george.\nIf carol is an enemy of bob and it is hot, then eve is sad.\nIf carol is a sibling of george, then george dislikes phone.\nIf george dislikes phone and carol is a sibling of eve and bob is hungry, then eve is tall.\nIf eve is a sibling of alice and it is sunny, then bob is tall.\nIf phone is small and frank is sad, then eve is sad.\nIf frank is sad and book is small and it is cold, then bob is tall.\nIf it is cold and pencil is small, then eve is sad.\nIf carol is hungry and george likes eve, then alice is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ncarol is a parent of frank.\ncarol is a friend of bob.\ngeorge is hungry.\nbob likes pencil.\nfrank owns book.\ngeorge is a friend of dave.\ndave dislikes pencil.\nfrank dislikes ball.\nalice dislikes bob.\ndave is a friend of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nIs eve dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,bob).",
    "c": "hungry(dave) :- sad(carol).\nwet(apple) :- hungry(dave).\nhot :- sunny.\nhot :- dislikes(frank,frank).\nhungry(frank) :- sad(carol).\nhot :- cold.\nhungry(bob) :- cold, sunny, parent(george,george).\nlikes(carol,apple) :- enemy(frank,carol), cold.\nlikes(alice,eve) :- sunny.\nlikes(carol,george) :- owns(george,pencil).\ndislikes(carol,george) :- friend(frank,frank), sibling(eve,george).\nsad(eve) :- enemy(carol,bob), hot.\ndislikes(george,phone) :- sibling(carol,george).\ntall(eve) :- dislikes(george,phone), sibling(carol,eve), hungry(bob).\ntall(bob) :- sibling(eve,alice), sunny.\nsad(eve) :- small(phone), sad(frank).\ntall(bob) :- sad(frank), small(book), cold.\nsad(eve) :- cold, small(pencil).\nsibling(alice,frank) :- hungry(carol), likes(george,eve).\nsad(carol).\nparent(carol,frank).\nfriend(carol,bob).\nhungry(george).\nlikes(bob,pencil).\nowns(frank,book).\nfriend(george,dave).\ndislikes(dave,pencil).\ndislikes(frank,ball).\ndislikes(alice,bob).\nfriend(dave,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf it is sunny, then it is hot.\nIf frank dislikes frank, then it is hot.\nIf carol is sad, then frank is hungry.\nIf it is cold, then it is hot.\nIf it is cold and it is sunny and george is a parent of george, then bob is hungry.\nIf frank is an enemy of carol and it is cold, then carol likes apple.\nIf it is sunny, then alice likes eve.\nIf george owns pencil, then carol likes george.\nIf frank is a friend of frank and eve is a sibling of george, then carol dislikes george.\nIf carol is an enemy of bob and it is hot, then eve is sad.\nIf carol is a sibling of george, then george dislikes phone.\nIf george dislikes phone and carol is a sibling of eve and bob is hungry, then eve is tall.\nIf eve is a sibling of alice and it is sunny, then bob is tall.\nIf phone is small and frank is sad, then eve is sad.\nIf frank is sad and book is small and it is cold, then bob is tall.\nIf it is cold and pencil is small, then eve is sad.\nIf carol is hungry and george likes eve, then alice is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ncarol is a parent of frank.\ncarol is a friend of bob.\ngeorge is hungry.\nbob likes pencil.\nfrank owns book.\ngeorge is a friend of dave.\ndave dislikes pencil.\nfrank dislikes ball.\nalice dislikes bob.\ndave is a friend of carol.\nfrank is a sibling of eve.\n\nQUESTION:\nIs frank is a friend of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "hungry(dave) :- sad(carol).\nwet(apple) :- hungry(dave).\nhot :- sunny.\nhot :- dislikes(frank,frank).\nhungry(frank) :- sad(carol).\nhot :- cold.\nhungry(bob) :- cold, sunny, parent(george,george).\nlikes(carol,apple) :- enemy(frank,carol), cold.\nlikes(alice,eve) :- sunny.\nlikes(carol,george) :- owns(george,pencil).\ndislikes(carol,george) :- friend(frank,frank), sibling(eve,george).\nsad(eve) :- enemy(carol,bob), hot.\ndislikes(george,phone) :- sibling(carol,george).\ntall(eve) :- dislikes(george,phone), sibling(carol,eve), hungry(bob).\ntall(bob) :- sibling(eve,alice), sunny.\nsad(eve) :- small(phone), sad(frank).\ntall(bob) :- sad(frank), small(book), cold.\nsad(eve) :- cold, small(pencil).\nsibling(alice,frank) :- hungry(carol), likes(george,eve).\nparent(carol,frank).\nfriend(carol,bob).\nhungry(george).\nlikes(bob,pencil).\nowns(frank,book).\nfriend(george,dave).\ndislikes(dave,pencil).\ndislikes(frank,ball).\ndislikes(alice,bob).\nfriend(dave,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf it is sunny, then it is hot.\nIf frank dislikes frank, then it is hot.\nIf carol is sad, then frank is hungry.\nIf it is cold, then it is hot.\nIf it is cold and it is sunny and george is a parent of george, then bob is hungry.\nIf frank is an enemy of carol and it is cold, then carol likes apple.\nIf it is sunny, then alice likes eve.\nIf george owns pencil, then carol likes george.\nIf frank is a friend of frank and eve is a sibling of george, then carol dislikes george.\nIf carol is an enemy of bob and it is hot, then eve is sad.\nIf carol is a sibling of george, then george dislikes phone.\nIf george dislikes phone and carol is a sibling of eve and bob is hungry, then eve is tall.\nIf eve is a sibling of alice and it is sunny, then bob is tall.\nIf phone is small and frank is sad, then eve is sad.\nIf frank is sad and book is small and it is cold, then bob is tall.\nIf it is cold and pencil is small, then eve is sad.\nIf carol is hungry and george likes eve, then alice is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ncarol is a parent of frank.\ncarol is a friend of bob.\ngeorge is hungry.\nbob likes pencil.\nfrank owns book.\ngeorge is a friend of dave.\ndave dislikes pencil.\nfrank dislikes ball.\nalice dislikes bob.\ndave is a friend of carol.\nfrank is a sibling of eve.\n\nOBSERVATION: apple is wet is true.\n\nQUESTION:\nCould carol is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(frank,book).",
    "c": "hungry(dave) :- sad(carol).\nwet(apple) :- hungry(dave).\nhot :- sunny.\nhot :- dislikes(frank,frank).\nhungry(frank) :- sad(carol).\nhot :- cold.\nhungry(bob) :- cold, sunny, parent(george,george).\nlikes(carol,apple) :- enemy(frank,carol), cold.\nlikes(alice,eve) :- sunny.\nlikes(carol,george) :- owns(george,pencil).\ndislikes(carol,george) :- friend(frank,frank), sibling(eve,george).\nsad(eve) :- enemy(carol,bob), hot.\ndislikes(george,phone) :- sibling(carol,george).\ntall(eve) :- dislikes(george,phone), sibling(carol,eve), hungry(bob).\ntall(bob) :- sibling(eve,alice), sunny.\nsad(eve) :- small(phone), sad(frank).\ntall(bob) :- sad(frank), small(book), cold.\nsad(eve) :- cold, small(pencil).\nsibling(alice,frank) :- hungry(carol), likes(george,eve).\nsad(carol).\nparent(carol,frank).\nfriend(carol,bob).\nhungry(george).\nlikes(bob,pencil).\nfriend(george,dave).\ndislikes(dave,pencil).\ndislikes(frank,ball).\ndislikes(alice,bob).\nfriend(dave,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf it is sunny, then it is hot.\nIf frank dislikes frank, then it is hot.\nIf carol is sad, then frank is hungry.\nIf it is cold, then it is hot.\nIf it is cold and it is sunny and george is a parent of george, then bob is hungry.\nIf frank is an enemy of carol and it is cold, then carol likes apple.\nIf it is sunny, then alice likes eve.\nIf george owns pencil, then carol likes george.\nIf frank is a friend of frank and eve is a sibling of george, then carol dislikes george.\nIf carol is an enemy of bob and it is hot, then eve is sad.\nIf carol is a sibling of george, then george dislikes phone.\nIf george dislikes phone and carol is a sibling of eve and bob is hungry, then eve is tall.\nIf eve is a sibling of alice and it is sunny, then bob is tall.\nIf phone is small and frank is sad, then eve is sad.\nIf frank is sad and book is small and it is cold, then bob is tall.\nIf it is cold and pencil is small, then eve is sad.\nIf carol is hungry and george likes eve, then alice is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ncarol is a parent of frank.\ncarol is a friend of bob.\ngeorge is hungry.\nbob likes pencil.\nfrank owns book.\ngeorge is a friend of dave.\ndave dislikes pencil.\nfrank dislikes ball.\nalice dislikes bob.\ndave is a friend of carol.\nfrank is a sibling of eve.\n\nOBSERVATION: apple is wet is true.\n\nQUESTION:\nCould frank owns book be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,bob).",
    "c": "hungry(dave) :- sad(carol).\nwet(apple) :- hungry(dave).\nhot :- sunny.\nhot :- dislikes(frank,frank).\nhungry(frank) :- sad(carol).\nhot :- cold.\nhungry(bob) :- cold, sunny, parent(george,george).\nlikes(carol,apple) :- enemy(frank,carol), cold.\nlikes(alice,eve) :- sunny.\nlikes(carol,george) :- owns(george,pencil).\ndislikes(carol,george) :- friend(frank,frank), sibling(eve,george).\nsad(eve) :- enemy(carol,bob), hot.\ndislikes(george,phone) :- sibling(carol,george).\ntall(eve) :- dislikes(george,phone), sibling(carol,eve), hungry(bob).\ntall(bob) :- sibling(eve,alice), sunny.\nsad(eve) :- small(phone), sad(frank).\ntall(bob) :- sad(frank), small(book), cold.\nsad(eve) :- cold, small(pencil).\nsibling(alice,frank) :- hungry(carol), likes(george,eve).\nsad(carol).\nparent(carol,frank).\nfriend(carol,bob).\nhungry(george).\nlikes(bob,pencil).\nowns(frank,book).\nfriend(george,dave).\ndislikes(dave,pencil).\ndislikes(frank,ball).\nfriend(dave,carol).\nsibling(frank,eve).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave is hungry.\nIf dave is hungry, then apple is wet.\nIf it is sunny, then it is hot.\nIf frank dislikes frank, then it is hot.\nIf carol is sad, then frank is hungry.\nIf it is cold, then it is hot.\nIf it is cold and it is sunny and george is a parent of george, then bob is hungry.\nIf frank is an enemy of carol and it is cold, then carol likes apple.\nIf it is sunny, then alice likes eve.\nIf george owns pencil, then carol likes george.\nIf frank is a friend of frank and eve is a sibling of george, then carol dislikes george.\nIf carol is an enemy of bob and it is hot, then eve is sad.\nIf carol is a sibling of george, then george dislikes phone.\nIf george dislikes phone and carol is a sibling of eve and bob is hungry, then eve is tall.\nIf eve is a sibling of alice and it is sunny, then bob is tall.\nIf phone is small and frank is sad, then eve is sad.\nIf frank is sad and book is small and it is cold, then bob is tall.\nIf it is cold and pencil is small, then eve is sad.\nIf carol is hungry and george likes eve, then alice is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ncarol is a parent of frank.\ncarol is a friend of bob.\ngeorge is hungry.\nbob likes pencil.\nfrank owns book.\ngeorge is a friend of dave.\ndave dislikes pencil.\nfrank dislikes ball.\nalice dislikes bob.\ndave is a friend of carol.\nfrank is a sibling of eve.\n\nOBSERVATION: apple is wet is true.\n\nQUESTION:\nCould alice dislikes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "cold.",
    "c": "small(ball) :- sad(george).\nsmall(book) :- small(ball).\ncold :- small(book).\nowns(carol,pencil) :- cold.\nenemy(carol,eve) :- tall(alice), enemy(eve,eve).\nenemy(eve,frank) :- enemy(alice,dave).\nhungry(eve) :- enemy(dave,eve).\nsunny :- cold, tall(alice), small(car).\nsunny :- sunny, sunny.\nhungry(alice) :- parent(carol,eve), friend(frank,carol), sunny.\nbig(pencil) :- wet(pencil), small(phone).\nsad(frank) :- friend(bob,frank), happy(carol), sad(george).\nlikes(dave,pencil) :- dislikes(frank,dave), tall(eve), happy(george).\nlikes(dave,car) :- likes(george,phone), hungry(carol).\nbig(book) :- big(phone), likes(dave,ball), sibling(eve,alice).\nsad(george) :- hungry(george), big(apple), big(apple).\nsibling(eve,alice) :- sad(bob).\nfriend(frank,frank) :- happy(carol).\nsibling(bob,frank) :- hungry(bob), parent(alice,dave).\nsad(george).\nparent(eve,dave).\nenemy(frank,george).\nfriend(george,carol).\nsibling(frank,bob).\nsibling(carol,bob).\nfriend(george,eve).\ndislikes(alice,carol).\nlikes(bob,carol).\nowns(alice,book).\nenemy(alice,frank).\nparent(george,alice).",
    "natural language": "You are given the following information:\nIf george is sad, then ball is small.\nIf ball is small, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol owns pencil.\nIf alice is tall and eve is an enemy of eve, then carol is an enemy of eve.\nIf alice is an enemy of dave, then eve is an enemy of frank.\nIf dave is an enemy of eve, then eve is hungry.\nIf it is cold and alice is tall and car is small, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf carol is a parent of eve and frank is a friend of carol and it is sunny, then alice is hungry.\nIf pencil is wet and phone is small, then pencil is big.\nIf bob is a friend of frank and carol is happy and george is sad, then frank is sad.\nIf frank dislikes dave and eve is tall and george is happy, then dave likes pencil.\nIf george likes phone and carol is hungry, then dave likes car.\nIf phone is big and dave likes ball and eve is a sibling of alice, then book is big.\nIf george is hungry and apple is big and apple is big, then george is sad.\nIf bob is sad, then eve is a sibling of alice.\nIf carol is happy, then frank is a friend of frank.\nIf bob is hungry and alice is a parent of dave, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge is sad.\neve is a parent of dave.\nfrank is an enemy of george.\ngeorge is a friend of carol.\nfrank is a sibling of bob.\ncarol is a sibling of bob.\ngeorge is a friend of eve.\nalice dislikes carol.\nbob likes carol.\nalice owns book.\nalice is an enemy of frank.\ngeorge is a parent of alice.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,eve).",
    "c": "small(ball) :- sad(george).\nsmall(book) :- small(ball).\ncold :- small(book).\nowns(carol,pencil) :- cold.\nenemy(carol,eve) :- tall(alice), enemy(eve,eve).\nenemy(eve,frank) :- enemy(alice,dave).\nhungry(eve) :- enemy(dave,eve).\nsunny :- cold, tall(alice), small(car).\nsunny :- sunny, sunny.\nhungry(alice) :- parent(carol,eve), friend(frank,carol), sunny.\nbig(pencil) :- wet(pencil), small(phone).\nsad(frank) :- friend(bob,frank), happy(carol), sad(george).\nlikes(dave,pencil) :- dislikes(frank,dave), tall(eve), happy(george).\nlikes(dave,car) :- likes(george,phone), hungry(carol).\nbig(book) :- big(phone), likes(dave,ball), sibling(eve,alice).\nsad(george) :- hungry(george), big(apple), big(apple).\nsibling(eve,alice) :- sad(bob).\nfriend(frank,frank) :- happy(carol).\nsibling(bob,frank) :- hungry(bob), parent(alice,dave).\nsad(george).\nparent(eve,dave).\nenemy(frank,george).\nfriend(george,carol).\nsibling(frank,bob).\nsibling(carol,bob).\nfriend(george,eve).\ndislikes(alice,carol).\nlikes(bob,carol).\nowns(alice,book).\nenemy(alice,frank).\nparent(george,alice).",
    "natural language": "You are given the following information:\nIf george is sad, then ball is small.\nIf ball is small, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol owns pencil.\nIf alice is tall and eve is an enemy of eve, then carol is an enemy of eve.\nIf alice is an enemy of dave, then eve is an enemy of frank.\nIf dave is an enemy of eve, then eve is hungry.\nIf it is cold and alice is tall and car is small, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf carol is a parent of eve and frank is a friend of carol and it is sunny, then alice is hungry.\nIf pencil is wet and phone is small, then pencil is big.\nIf bob is a friend of frank and carol is happy and george is sad, then frank is sad.\nIf frank dislikes dave and eve is tall and george is happy, then dave likes pencil.\nIf george likes phone and carol is hungry, then dave likes car.\nIf phone is big and dave likes ball and eve is a sibling of alice, then book is big.\nIf george is hungry and apple is big and apple is big, then george is sad.\nIf bob is sad, then eve is a sibling of alice.\nIf carol is happy, then frank is a friend of frank.\nIf bob is hungry and alice is a parent of dave, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge is sad.\neve is a parent of dave.\nfrank is an enemy of george.\ngeorge is a friend of carol.\nfrank is a sibling of bob.\ncarol is a sibling of bob.\ngeorge is a friend of eve.\nalice dislikes carol.\nbob likes carol.\nalice owns book.\nalice is an enemy of frank.\ngeorge is a parent of alice.\n\nQUESTION:\nIs george is a friend of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,carol).",
    "c": "small(ball) :- sad(george).\nsmall(book) :- small(ball).\ncold :- small(book).\nowns(carol,pencil) :- cold.\nenemy(carol,eve) :- tall(alice), enemy(eve,eve).\nenemy(eve,frank) :- enemy(alice,dave).\nhungry(eve) :- enemy(dave,eve).\nsunny :- cold, tall(alice), small(car).\nsunny :- sunny, sunny.\nhungry(alice) :- parent(carol,eve), friend(frank,carol), sunny.\nbig(pencil) :- wet(pencil), small(phone).\nsad(frank) :- friend(bob,frank), happy(carol), sad(george).\nlikes(dave,pencil) :- dislikes(frank,dave), tall(eve), happy(george).\nlikes(dave,car) :- likes(george,phone), hungry(carol).\nbig(book) :- big(phone), likes(dave,ball), sibling(eve,alice).\nsad(george) :- hungry(george), big(apple), big(apple).\nsibling(eve,alice) :- sad(bob).\nfriend(frank,frank) :- happy(carol).\nsibling(bob,frank) :- hungry(bob), parent(alice,dave).\nsad(george).\nparent(eve,dave).\nenemy(frank,george).\nfriend(george,carol).\nsibling(frank,bob).\nsibling(carol,bob).\nfriend(george,eve).\ndislikes(alice,carol).\nlikes(bob,carol).\nowns(alice,book).\nenemy(alice,frank).\nparent(george,alice).",
    "natural language": "You are given the following information:\nIf george is sad, then ball is small.\nIf ball is small, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol owns pencil.\nIf alice is tall and eve is an enemy of eve, then carol is an enemy of eve.\nIf alice is an enemy of dave, then eve is an enemy of frank.\nIf dave is an enemy of eve, then eve is hungry.\nIf it is cold and alice is tall and car is small, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf carol is a parent of eve and frank is a friend of carol and it is sunny, then alice is hungry.\nIf pencil is wet and phone is small, then pencil is big.\nIf bob is a friend of frank and carol is happy and george is sad, then frank is sad.\nIf frank dislikes dave and eve is tall and george is happy, then dave likes pencil.\nIf george likes phone and carol is hungry, then dave likes car.\nIf phone is big and dave likes ball and eve is a sibling of alice, then book is big.\nIf george is hungry and apple is big and apple is big, then george is sad.\nIf bob is sad, then eve is a sibling of alice.\nIf carol is happy, then frank is a friend of frank.\nIf bob is hungry and alice is a parent of dave, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge is sad.\neve is a parent of dave.\nfrank is an enemy of george.\ngeorge is a friend of carol.\nfrank is a sibling of bob.\ncarol is a sibling of bob.\ngeorge is a friend of eve.\nalice dislikes carol.\nbob likes carol.\nalice owns book.\nalice is an enemy of frank.\ngeorge is a parent of alice.\n\nQUESTION:\nIs alice dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,eve).",
    "c": "small(ball) :- sad(george).\nsmall(book) :- small(ball).\ncold :- small(book).\nowns(carol,pencil) :- cold.\nenemy(carol,eve) :- tall(alice), enemy(eve,eve).\nenemy(eve,frank) :- enemy(alice,dave).\nhungry(eve) :- enemy(dave,eve).\nsunny :- cold, tall(alice), small(car).\nsunny :- sunny, sunny.\nhungry(alice) :- parent(carol,eve), friend(frank,carol), sunny.\nbig(pencil) :- wet(pencil), small(phone).\nsad(frank) :- friend(bob,frank), happy(carol), sad(george).\nlikes(dave,pencil) :- dislikes(frank,dave), tall(eve), happy(george).\nlikes(dave,car) :- likes(george,phone), hungry(carol).\nbig(book) :- big(phone), likes(dave,ball), sibling(eve,alice).\nsad(george) :- hungry(george), big(apple), big(apple).\nsibling(eve,alice) :- sad(bob).\nfriend(frank,frank) :- happy(carol).\nsibling(bob,frank) :- hungry(bob), parent(alice,dave).\nsad(george).\nparent(eve,dave).\nenemy(frank,george).\nfriend(george,carol).\nsibling(frank,bob).\nsibling(carol,bob).\nfriend(george,eve).\ndislikes(alice,carol).\nlikes(bob,carol).\nowns(alice,book).\nenemy(alice,frank).\nparent(george,alice).",
    "natural language": "You are given the following information:\nIf george is sad, then ball is small.\nIf ball is small, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol owns pencil.\nIf alice is tall and eve is an enemy of eve, then carol is an enemy of eve.\nIf alice is an enemy of dave, then eve is an enemy of frank.\nIf dave is an enemy of eve, then eve is hungry.\nIf it is cold and alice is tall and car is small, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf carol is a parent of eve and frank is a friend of carol and it is sunny, then alice is hungry.\nIf pencil is wet and phone is small, then pencil is big.\nIf bob is a friend of frank and carol is happy and george is sad, then frank is sad.\nIf frank dislikes dave and eve is tall and george is happy, then dave likes pencil.\nIf george likes phone and carol is hungry, then dave likes car.\nIf phone is big and dave likes ball and eve is a sibling of alice, then book is big.\nIf george is hungry and apple is big and apple is big, then george is sad.\nIf bob is sad, then eve is a sibling of alice.\nIf carol is happy, then frank is a friend of frank.\nIf bob is hungry and alice is a parent of dave, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge is sad.\neve is a parent of dave.\nfrank is an enemy of george.\ngeorge is a friend of carol.\nfrank is a sibling of bob.\ncarol is a sibling of bob.\ngeorge is a friend of eve.\nalice dislikes carol.\nbob likes carol.\nalice owns book.\nalice is an enemy of frank.\ngeorge is a parent of alice.\n\nQUESTION:\nIs bob dislikes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,carol).",
    "c": "small(ball) :- sad(george).\nsmall(book) :- small(ball).\ncold :- small(book).\nowns(carol,pencil) :- cold.\nenemy(carol,eve) :- tall(alice), enemy(eve,eve).\nenemy(eve,frank) :- enemy(alice,dave).\nhungry(eve) :- enemy(dave,eve).\nsunny :- cold, tall(alice), small(car).\nsunny :- sunny, sunny.\nhungry(alice) :- parent(carol,eve), friend(frank,carol), sunny.\nbig(pencil) :- wet(pencil), small(phone).\nsad(frank) :- friend(bob,frank), happy(carol), sad(george).\nlikes(dave,pencil) :- dislikes(frank,dave), tall(eve), happy(george).\nlikes(dave,car) :- likes(george,phone), hungry(carol).\nbig(book) :- big(phone), likes(dave,ball), sibling(eve,alice).\nsad(george) :- hungry(george), big(apple), big(apple).\nsibling(eve,alice) :- sad(bob).\nfriend(frank,frank) :- happy(carol).\nsibling(bob,frank) :- hungry(bob), parent(alice,dave).\nsad(george).\nparent(eve,dave).\nenemy(frank,george).\nfriend(george,carol).\nsibling(frank,bob).\nsibling(carol,bob).\nfriend(george,eve).\ndislikes(alice,carol).\nlikes(bob,carol).\nowns(alice,book).\nenemy(alice,frank).\nparent(george,alice).",
    "natural language": "You are given the following information:\nIf george is sad, then ball is small.\nIf ball is small, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol owns pencil.\nIf alice is tall and eve is an enemy of eve, then carol is an enemy of eve.\nIf alice is an enemy of dave, then eve is an enemy of frank.\nIf dave is an enemy of eve, then eve is hungry.\nIf it is cold and alice is tall and car is small, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf carol is a parent of eve and frank is a friend of carol and it is sunny, then alice is hungry.\nIf pencil is wet and phone is small, then pencil is big.\nIf bob is a friend of frank and carol is happy and george is sad, then frank is sad.\nIf frank dislikes dave and eve is tall and george is happy, then dave likes pencil.\nIf george likes phone and carol is hungry, then dave likes car.\nIf phone is big and dave likes ball and eve is a sibling of alice, then book is big.\nIf george is hungry and apple is big and apple is big, then george is sad.\nIf bob is sad, then eve is a sibling of alice.\nIf carol is happy, then frank is a friend of frank.\nIf bob is hungry and alice is a parent of dave, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge is sad.\neve is a parent of dave.\nfrank is an enemy of george.\ngeorge is a friend of carol.\nfrank is a sibling of bob.\ncarol is a sibling of bob.\ngeorge is a friend of eve.\nalice dislikes carol.\nbob likes carol.\nalice owns book.\nalice is an enemy of frank.\ngeorge is a parent of alice.\n\nQUESTION:\nIs george likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(george).",
    "c": "small(ball) :- sad(george).\nsmall(book) :- small(ball).\ncold :- small(book).\nowns(carol,pencil) :- cold.\nenemy(carol,eve) :- tall(alice), enemy(eve,eve).\nenemy(eve,frank) :- enemy(alice,dave).\nhungry(eve) :- enemy(dave,eve).\nsunny :- cold, tall(alice), small(car).\nsunny :- sunny, sunny.\nhungry(alice) :- parent(carol,eve), friend(frank,carol), sunny.\nbig(pencil) :- wet(pencil), small(phone).\nsad(frank) :- friend(bob,frank), happy(carol), sad(george).\nlikes(dave,pencil) :- dislikes(frank,dave), tall(eve), happy(george).\nlikes(dave,car) :- likes(george,phone), hungry(carol).\nbig(book) :- big(phone), likes(dave,ball), sibling(eve,alice).\nsad(george) :- hungry(george), big(apple), big(apple).\nsibling(eve,alice) :- sad(bob).\nfriend(frank,frank) :- happy(carol).\nsibling(bob,frank) :- hungry(bob), parent(alice,dave).\nparent(eve,dave).\nenemy(frank,george).\nfriend(george,carol).\nsibling(frank,bob).\nsibling(carol,bob).\nfriend(george,eve).\ndislikes(alice,carol).\nlikes(bob,carol).\nowns(alice,book).\nenemy(alice,frank).\nparent(george,alice).",
    "natural language": "You are given the following rules:\nIf george is sad, then ball is small.\nIf ball is small, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol owns pencil.\nIf alice is tall and eve is an enemy of eve, then carol is an enemy of eve.\nIf alice is an enemy of dave, then eve is an enemy of frank.\nIf dave is an enemy of eve, then eve is hungry.\nIf it is cold and alice is tall and car is small, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf carol is a parent of eve and frank is a friend of carol and it is sunny, then alice is hungry.\nIf pencil is wet and phone is small, then pencil is big.\nIf bob is a friend of frank and carol is happy and george is sad, then frank is sad.\nIf frank dislikes dave and eve is tall and george is happy, then dave likes pencil.\nIf george likes phone and carol is hungry, then dave likes car.\nIf phone is big and dave likes ball and eve is a sibling of alice, then book is big.\nIf george is hungry and apple is big and apple is big, then george is sad.\nIf bob is sad, then eve is a sibling of alice.\nIf carol is happy, then frank is a friend of frank.\nIf bob is hungry and alice is a parent of dave, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge is sad.\neve is a parent of dave.\nfrank is an enemy of george.\ngeorge is a friend of carol.\nfrank is a sibling of bob.\ncarol is a sibling of bob.\ngeorge is a friend of eve.\nalice dislikes carol.\nbob likes carol.\nalice owns book.\nalice is an enemy of frank.\ngeorge is a parent of alice.\n\nOBSERVATION: carol owns pencil is true.\n\nQUESTION:\nCould george is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "small(ball) :- sad(george).\nsmall(book) :- small(ball).\ncold :- small(book).\nowns(carol,pencil) :- cold.\nenemy(carol,eve) :- tall(alice), enemy(eve,eve).\nenemy(eve,frank) :- enemy(alice,dave).\nhungry(eve) :- enemy(dave,eve).\nsunny :- cold, tall(alice), small(car).\nsunny :- sunny, sunny.\nhungry(alice) :- parent(carol,eve), friend(frank,carol), sunny.\nbig(pencil) :- wet(pencil), small(phone).\nsad(frank) :- friend(bob,frank), happy(carol), sad(george).\nlikes(dave,pencil) :- dislikes(frank,dave), tall(eve), happy(george).\nlikes(dave,car) :- likes(george,phone), hungry(carol).\nbig(book) :- big(phone), likes(dave,ball), sibling(eve,alice).\nsad(george) :- hungry(george), big(apple), big(apple).\nsibling(eve,alice) :- sad(bob).\nfriend(frank,frank) :- happy(carol).\nsibling(bob,frank) :- hungry(bob), parent(alice,dave).\nsad(george).\nenemy(frank,george).\nfriend(george,carol).\nsibling(frank,bob).\nsibling(carol,bob).\nfriend(george,eve).\ndislikes(alice,carol).\nlikes(bob,carol).\nowns(alice,book).\nenemy(alice,frank).\nparent(george,alice).",
    "natural language": "You are given the following rules:\nIf george is sad, then ball is small.\nIf ball is small, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol owns pencil.\nIf alice is tall and eve is an enemy of eve, then carol is an enemy of eve.\nIf alice is an enemy of dave, then eve is an enemy of frank.\nIf dave is an enemy of eve, then eve is hungry.\nIf it is cold and alice is tall and car is small, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf carol is a parent of eve and frank is a friend of carol and it is sunny, then alice is hungry.\nIf pencil is wet and phone is small, then pencil is big.\nIf bob is a friend of frank and carol is happy and george is sad, then frank is sad.\nIf frank dislikes dave and eve is tall and george is happy, then dave likes pencil.\nIf george likes phone and carol is hungry, then dave likes car.\nIf phone is big and dave likes ball and eve is a sibling of alice, then book is big.\nIf george is hungry and apple is big and apple is big, then george is sad.\nIf bob is sad, then eve is a sibling of alice.\nIf carol is happy, then frank is a friend of frank.\nIf bob is hungry and alice is a parent of dave, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge is sad.\neve is a parent of dave.\nfrank is an enemy of george.\ngeorge is a friend of carol.\nfrank is a sibling of bob.\ncarol is a sibling of bob.\ngeorge is a friend of eve.\nalice dislikes carol.\nbob likes carol.\nalice owns book.\nalice is an enemy of frank.\ngeorge is a parent of alice.\n\nOBSERVATION: carol owns pencil is true.\n\nQUESTION:\nCould eve is a parent of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(alice,book).",
    "c": "small(ball) :- sad(george).\nsmall(book) :- small(ball).\ncold :- small(book).\nowns(carol,pencil) :- cold.\nenemy(carol,eve) :- tall(alice), enemy(eve,eve).\nenemy(eve,frank) :- enemy(alice,dave).\nhungry(eve) :- enemy(dave,eve).\nsunny :- cold, tall(alice), small(car).\nsunny :- sunny, sunny.\nhungry(alice) :- parent(carol,eve), friend(frank,carol), sunny.\nbig(pencil) :- wet(pencil), small(phone).\nsad(frank) :- friend(bob,frank), happy(carol), sad(george).\nlikes(dave,pencil) :- dislikes(frank,dave), tall(eve), happy(george).\nlikes(dave,car) :- likes(george,phone), hungry(carol).\nbig(book) :- big(phone), likes(dave,ball), sibling(eve,alice).\nsad(george) :- hungry(george), big(apple), big(apple).\nsibling(eve,alice) :- sad(bob).\nfriend(frank,frank) :- happy(carol).\nsibling(bob,frank) :- hungry(bob), parent(alice,dave).\nsad(george).\nparent(eve,dave).\nenemy(frank,george).\nfriend(george,carol).\nsibling(frank,bob).\nsibling(carol,bob).\nfriend(george,eve).\ndislikes(alice,carol).\nlikes(bob,carol).\nenemy(alice,frank).\nparent(george,alice).",
    "natural language": "You are given the following rules:\nIf george is sad, then ball is small.\nIf ball is small, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol owns pencil.\nIf alice is tall and eve is an enemy of eve, then carol is an enemy of eve.\nIf alice is an enemy of dave, then eve is an enemy of frank.\nIf dave is an enemy of eve, then eve is hungry.\nIf it is cold and alice is tall and car is small, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf carol is a parent of eve and frank is a friend of carol and it is sunny, then alice is hungry.\nIf pencil is wet and phone is small, then pencil is big.\nIf bob is a friend of frank and carol is happy and george is sad, then frank is sad.\nIf frank dislikes dave and eve is tall and george is happy, then dave likes pencil.\nIf george likes phone and carol is hungry, then dave likes car.\nIf phone is big and dave likes ball and eve is a sibling of alice, then book is big.\nIf george is hungry and apple is big and apple is big, then george is sad.\nIf bob is sad, then eve is a sibling of alice.\nIf carol is happy, then frank is a friend of frank.\nIf bob is hungry and alice is a parent of dave, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge is sad.\neve is a parent of dave.\nfrank is an enemy of george.\ngeorge is a friend of carol.\nfrank is a sibling of bob.\ncarol is a sibling of bob.\ngeorge is a friend of eve.\nalice dislikes carol.\nbob likes carol.\nalice owns book.\nalice is an enemy of frank.\ngeorge is a parent of alice.\n\nOBSERVATION: carol owns pencil is true.\n\nQUESTION:\nCould alice owns book be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(eve,dave).",
    "c": "happy(george) :- enemy(eve,dave).\nhot :- happy(george).\nparent(bob,bob) :- hot.\nwet(book) :- parent(bob,bob).\nhot :- sibling(alice,eve), hot, parent(george,bob).\nenemy(alice,eve) :- tall(alice), enemy(eve,dave).\nhot :- dislikes(carol,bob), sad(dave).\nenemy(eve,alice) :- happy(frank).\nsmall(apple) :- dislikes(george,book), big(pencil), sunny.\nparent(eve,dave) :- wet(car), sad(eve).\nsmall(phone) :- dislikes(eve,george).\ntall(alice) :- sibling(eve,alice).\ncold :- sibling(dave,carol).\ntall(eve) :- sunny.\nparent(carol,george) :- friend(bob,frank), small(phone).\ncold :- sunny, dislikes(dave,ball).\ncold :- tall(dave), enemy(bob,george).\ntall(george) :- tall(carol).\nhot :- hot, big(book).\nenemy(eve,dave).\ndislikes(alice,george).\nenemy(eve,alice).\nfriend(dave,bob).\nparent(carol,dave).\nparent(dave,bob).\ndislikes(george,apple).\nsibling(alice,frank).\ndislikes(bob,carol).\nsibling(bob,frank).\ndislikes(george,car).\ndislikes(dave,carol).",
    "natural language": "You are given the following information:\nIf eve is an enemy of dave, then george is happy.\nIf george is happy, then it is hot.\nIf it is hot, then bob is a parent of bob.\nIf bob is a parent of bob, then book is wet.\nIf alice is a sibling of eve and it is hot and george is a parent of bob, then it is hot.\nIf alice is tall and eve is an enemy of dave, then alice is an enemy of eve.\nIf carol dislikes bob and dave is sad, then it is hot.\nIf frank is happy, then eve is an enemy of alice.\nIf george dislikes book and pencil is big and it is sunny, then apple is small.\nIf car is wet and eve is sad, then eve is a parent of dave.\nIf eve dislikes george, then phone is small.\nIf eve is a sibling of alice, then alice is tall.\nIf dave is a sibling of carol, then it is cold.\nIf it is sunny, then eve is tall.\nIf bob is a friend of frank and phone is small, then carol is a parent of george.\nIf it is sunny and dave dislikes ball, then it is cold.\nIf dave is tall and bob is an enemy of george, then it is cold.\nIf carol is tall, then george is tall.\nIf it is hot and book is big, then it is hot.\n\nAnd the following facts:\neve is an enemy of dave.\nalice dislikes george.\neve is an enemy of alice.\ndave is a friend of bob.\ncarol is a parent of dave.\ndave is a parent of bob.\ngeorge dislikes apple.\nalice is a sibling of frank.\nbob dislikes carol.\nbob is a sibling of frank.\ngeorge dislikes car.\ndave dislikes carol.\n\nQUESTION:\nIs eve is an enemy of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,dave).",
    "c": "happy(george) :- enemy(eve,dave).\nhot :- happy(george).\nparent(bob,bob) :- hot.\nwet(book) :- parent(bob,bob).\nhot :- sibling(alice,eve), hot, parent(george,bob).\nenemy(alice,eve) :- tall(alice), enemy(eve,dave).\nhot :- dislikes(carol,bob), sad(dave).\nenemy(eve,alice) :- happy(frank).\nsmall(apple) :- dislikes(george,book), big(pencil), sunny.\nparent(eve,dave) :- wet(car), sad(eve).\nsmall(phone) :- dislikes(eve,george).\ntall(alice) :- sibling(eve,alice).\ncold :- sibling(dave,carol).\ntall(eve) :- sunny.\nparent(carol,george) :- friend(bob,frank), small(phone).\ncold :- sunny, dislikes(dave,ball).\ncold :- tall(dave), enemy(bob,george).\ntall(george) :- tall(carol).\nhot :- hot, big(book).\nenemy(eve,dave).\ndislikes(alice,george).\nenemy(eve,alice).\nfriend(dave,bob).\nparent(carol,dave).\nparent(dave,bob).\ndislikes(george,apple).\nsibling(alice,frank).\ndislikes(bob,carol).\nsibling(bob,frank).\ndislikes(george,car).\ndislikes(dave,carol).",
    "natural language": "You are given the following information:\nIf eve is an enemy of dave, then george is happy.\nIf george is happy, then it is hot.\nIf it is hot, then bob is a parent of bob.\nIf bob is a parent of bob, then book is wet.\nIf alice is a sibling of eve and it is hot and george is a parent of bob, then it is hot.\nIf alice is tall and eve is an enemy of dave, then alice is an enemy of eve.\nIf carol dislikes bob and dave is sad, then it is hot.\nIf frank is happy, then eve is an enemy of alice.\nIf george dislikes book and pencil is big and it is sunny, then apple is small.\nIf car is wet and eve is sad, then eve is a parent of dave.\nIf eve dislikes george, then phone is small.\nIf eve is a sibling of alice, then alice is tall.\nIf dave is a sibling of carol, then it is cold.\nIf it is sunny, then eve is tall.\nIf bob is a friend of frank and phone is small, then carol is a parent of george.\nIf it is sunny and dave dislikes ball, then it is cold.\nIf dave is tall and bob is an enemy of george, then it is cold.\nIf carol is tall, then george is tall.\nIf it is hot and book is big, then it is hot.\n\nAnd the following facts:\neve is an enemy of dave.\nalice dislikes george.\neve is an enemy of alice.\ndave is a friend of bob.\ncarol is a parent of dave.\ndave is a parent of bob.\ngeorge dislikes apple.\nalice is a sibling of frank.\nbob dislikes carol.\nbob is a sibling of frank.\ngeorge dislikes car.\ndave dislikes carol.\n\nQUESTION:\nIs carol is a parent of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,alice).",
    "c": "happy(george) :- enemy(eve,dave).\nhot :- happy(george).\nparent(bob,bob) :- hot.\nwet(book) :- parent(bob,bob).\nhot :- sibling(alice,eve), hot, parent(george,bob).\nenemy(alice,eve) :- tall(alice), enemy(eve,dave).\nhot :- dislikes(carol,bob), sad(dave).\nenemy(eve,alice) :- happy(frank).\nsmall(apple) :- dislikes(george,book), big(pencil), sunny.\nparent(eve,dave) :- wet(car), sad(eve).\nsmall(phone) :- dislikes(eve,george).\ntall(alice) :- sibling(eve,alice).\ncold :- sibling(dave,carol).\ntall(eve) :- sunny.\nparent(carol,george) :- friend(bob,frank), small(phone).\ncold :- sunny, dislikes(dave,ball).\ncold :- tall(dave), enemy(bob,george).\ntall(george) :- tall(carol).\nhot :- hot, big(book).\nenemy(eve,dave).\ndislikes(alice,george).\nenemy(eve,alice).\nfriend(dave,bob).\nparent(carol,dave).\nparent(dave,bob).\ndislikes(george,apple).\nsibling(alice,frank).\ndislikes(bob,carol).\nsibling(bob,frank).\ndislikes(george,car).\ndislikes(dave,carol).",
    "natural language": "You are given the following information:\nIf eve is an enemy of dave, then george is happy.\nIf george is happy, then it is hot.\nIf it is hot, then bob is a parent of bob.\nIf bob is a parent of bob, then book is wet.\nIf alice is a sibling of eve and it is hot and george is a parent of bob, then it is hot.\nIf alice is tall and eve is an enemy of dave, then alice is an enemy of eve.\nIf carol dislikes bob and dave is sad, then it is hot.\nIf frank is happy, then eve is an enemy of alice.\nIf george dislikes book and pencil is big and it is sunny, then apple is small.\nIf car is wet and eve is sad, then eve is a parent of dave.\nIf eve dislikes george, then phone is small.\nIf eve is a sibling of alice, then alice is tall.\nIf dave is a sibling of carol, then it is cold.\nIf it is sunny, then eve is tall.\nIf bob is a friend of frank and phone is small, then carol is a parent of george.\nIf it is sunny and dave dislikes ball, then it is cold.\nIf dave is tall and bob is an enemy of george, then it is cold.\nIf carol is tall, then george is tall.\nIf it is hot and book is big, then it is hot.\n\nAnd the following facts:\neve is an enemy of dave.\nalice dislikes george.\neve is an enemy of alice.\ndave is a friend of bob.\ncarol is a parent of dave.\ndave is a parent of bob.\ngeorge dislikes apple.\nalice is a sibling of frank.\nbob dislikes carol.\nbob is a sibling of frank.\ngeorge dislikes car.\ndave dislikes carol.\n\nQUESTION:\nIs eve is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,alice).",
    "c": "happy(george) :- enemy(eve,dave).\nhot :- happy(george).\nparent(bob,bob) :- hot.\nwet(book) :- parent(bob,bob).\nhot :- sibling(alice,eve), hot, parent(george,bob).\nenemy(alice,eve) :- tall(alice), enemy(eve,dave).\nhot :- dislikes(carol,bob), sad(dave).\nenemy(eve,alice) :- happy(frank).\nsmall(apple) :- dislikes(george,book), big(pencil), sunny.\nparent(eve,dave) :- wet(car), sad(eve).\nsmall(phone) :- dislikes(eve,george).\ntall(alice) :- sibling(eve,alice).\ncold :- sibling(dave,carol).\ntall(eve) :- sunny.\nparent(carol,george) :- friend(bob,frank), small(phone).\ncold :- sunny, dislikes(dave,ball).\ncold :- tall(dave), enemy(bob,george).\ntall(george) :- tall(carol).\nhot :- hot, big(book).\nenemy(eve,dave).\ndislikes(alice,george).\nenemy(eve,alice).\nfriend(dave,bob).\nparent(carol,dave).\nparent(dave,bob).\ndislikes(george,apple).\nsibling(alice,frank).\ndislikes(bob,carol).\nsibling(bob,frank).\ndislikes(george,car).\ndislikes(dave,carol).",
    "natural language": "You are given the following information:\nIf eve is an enemy of dave, then george is happy.\nIf george is happy, then it is hot.\nIf it is hot, then bob is a parent of bob.\nIf bob is a parent of bob, then book is wet.\nIf alice is a sibling of eve and it is hot and george is a parent of bob, then it is hot.\nIf alice is tall and eve is an enemy of dave, then alice is an enemy of eve.\nIf carol dislikes bob and dave is sad, then it is hot.\nIf frank is happy, then eve is an enemy of alice.\nIf george dislikes book and pencil is big and it is sunny, then apple is small.\nIf car is wet and eve is sad, then eve is a parent of dave.\nIf eve dislikes george, then phone is small.\nIf eve is a sibling of alice, then alice is tall.\nIf dave is a sibling of carol, then it is cold.\nIf it is sunny, then eve is tall.\nIf bob is a friend of frank and phone is small, then carol is a parent of george.\nIf it is sunny and dave dislikes ball, then it is cold.\nIf dave is tall and bob is an enemy of george, then it is cold.\nIf carol is tall, then george is tall.\nIf it is hot and book is big, then it is hot.\n\nAnd the following facts:\neve is an enemy of dave.\nalice dislikes george.\neve is an enemy of alice.\ndave is a friend of bob.\ncarol is a parent of dave.\ndave is a parent of bob.\ngeorge dislikes apple.\nalice is a sibling of frank.\nbob dislikes carol.\nbob is a sibling of frank.\ngeorge dislikes car.\ndave dislikes carol.\n\nQUESTION:\nIs frank is a sibling of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "happy(george) :- enemy(eve,dave).\nhot :- happy(george).\nparent(bob,bob) :- hot.\nwet(book) :- parent(bob,bob).\nhot :- sibling(alice,eve), hot, parent(george,bob).\nenemy(alice,eve) :- tall(alice), enemy(eve,dave).\nhot :- dislikes(carol,bob), sad(dave).\nenemy(eve,alice) :- happy(frank).\nsmall(apple) :- dislikes(george,book), big(pencil), sunny.\nparent(eve,dave) :- wet(car), sad(eve).\nsmall(phone) :- dislikes(eve,george).\ntall(alice) :- sibling(eve,alice).\ncold :- sibling(dave,carol).\ntall(eve) :- sunny.\nparent(carol,george) :- friend(bob,frank), small(phone).\ncold :- sunny, dislikes(dave,ball).\ncold :- tall(dave), enemy(bob,george).\ntall(george) :- tall(carol).\nhot :- hot, big(book).\nenemy(eve,dave).\ndislikes(alice,george).\nenemy(eve,alice).\nfriend(dave,bob).\nparent(carol,dave).\nparent(dave,bob).\ndislikes(george,apple).\nsibling(alice,frank).\ndislikes(bob,carol).\nsibling(bob,frank).\ndislikes(george,car).\ndislikes(dave,carol).",
    "natural language": "You are given the following information:\nIf eve is an enemy of dave, then george is happy.\nIf george is happy, then it is hot.\nIf it is hot, then bob is a parent of bob.\nIf bob is a parent of bob, then book is wet.\nIf alice is a sibling of eve and it is hot and george is a parent of bob, then it is hot.\nIf alice is tall and eve is an enemy of dave, then alice is an enemy of eve.\nIf carol dislikes bob and dave is sad, then it is hot.\nIf frank is happy, then eve is an enemy of alice.\nIf george dislikes book and pencil is big and it is sunny, then apple is small.\nIf car is wet and eve is sad, then eve is a parent of dave.\nIf eve dislikes george, then phone is small.\nIf eve is a sibling of alice, then alice is tall.\nIf dave is a sibling of carol, then it is cold.\nIf it is sunny, then eve is tall.\nIf bob is a friend of frank and phone is small, then carol is a parent of george.\nIf it is sunny and dave dislikes ball, then it is cold.\nIf dave is tall and bob is an enemy of george, then it is cold.\nIf carol is tall, then george is tall.\nIf it is hot and book is big, then it is hot.\n\nAnd the following facts:\neve is an enemy of dave.\nalice dislikes george.\neve is an enemy of alice.\ndave is a friend of bob.\ncarol is a parent of dave.\ndave is a parent of bob.\ngeorge dislikes apple.\nalice is a sibling of frank.\nbob dislikes carol.\nbob is a sibling of frank.\ngeorge dislikes car.\ndave dislikes carol.\n\nQUESTION:\nIs dave is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,dave).",
    "c": "happy(george) :- enemy(eve,dave).\nhot :- happy(george).\nparent(bob,bob) :- hot.\nwet(book) :- parent(bob,bob).\nhot :- sibling(alice,eve), hot, parent(george,bob).\nenemy(alice,eve) :- tall(alice), enemy(eve,dave).\nhot :- dislikes(carol,bob), sad(dave).\nenemy(eve,alice) :- happy(frank).\nsmall(apple) :- dislikes(george,book), big(pencil), sunny.\nparent(eve,dave) :- wet(car), sad(eve).\nsmall(phone) :- dislikes(eve,george).\ntall(alice) :- sibling(eve,alice).\ncold :- sibling(dave,carol).\ntall(eve) :- sunny.\nparent(carol,george) :- friend(bob,frank), small(phone).\ncold :- sunny, dislikes(dave,ball).\ncold :- tall(dave), enemy(bob,george).\ntall(george) :- tall(carol).\nhot :- hot, big(book).\ndislikes(alice,george).\nenemy(eve,alice).\nfriend(dave,bob).\nparent(carol,dave).\nparent(dave,bob).\ndislikes(george,apple).\nsibling(alice,frank).\ndislikes(bob,carol).\nsibling(bob,frank).\ndislikes(george,car).\ndislikes(dave,carol).",
    "natural language": "You are given the following rules:\nIf eve is an enemy of dave, then george is happy.\nIf george is happy, then it is hot.\nIf it is hot, then bob is a parent of bob.\nIf bob is a parent of bob, then book is wet.\nIf alice is a sibling of eve and it is hot and george is a parent of bob, then it is hot.\nIf alice is tall and eve is an enemy of dave, then alice is an enemy of eve.\nIf carol dislikes bob and dave is sad, then it is hot.\nIf frank is happy, then eve is an enemy of alice.\nIf george dislikes book and pencil is big and it is sunny, then apple is small.\nIf car is wet and eve is sad, then eve is a parent of dave.\nIf eve dislikes george, then phone is small.\nIf eve is a sibling of alice, then alice is tall.\nIf dave is a sibling of carol, then it is cold.\nIf it is sunny, then eve is tall.\nIf bob is a friend of frank and phone is small, then carol is a parent of george.\nIf it is sunny and dave dislikes ball, then it is cold.\nIf dave is tall and bob is an enemy of george, then it is cold.\nIf carol is tall, then george is tall.\nIf it is hot and book is big, then it is hot.\n\nAnd the following facts:\neve is an enemy of dave.\nalice dislikes george.\neve is an enemy of alice.\ndave is a friend of bob.\ncarol is a parent of dave.\ndave is a parent of bob.\ngeorge dislikes apple.\nalice is a sibling of frank.\nbob dislikes carol.\nbob is a sibling of frank.\ngeorge dislikes car.\ndave dislikes carol.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould eve is an enemy of dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(eve,alice).",
    "c": "happy(george) :- enemy(eve,dave).\nhot :- happy(george).\nparent(bob,bob) :- hot.\nwet(book) :- parent(bob,bob).\nhot :- sibling(alice,eve), hot, parent(george,bob).\nenemy(alice,eve) :- tall(alice), enemy(eve,dave).\nhot :- dislikes(carol,bob), sad(dave).\nenemy(eve,alice) :- happy(frank).\nsmall(apple) :- dislikes(george,book), big(pencil), sunny.\nparent(eve,dave) :- wet(car), sad(eve).\nsmall(phone) :- dislikes(eve,george).\ntall(alice) :- sibling(eve,alice).\ncold :- sibling(dave,carol).\ntall(eve) :- sunny.\nparent(carol,george) :- friend(bob,frank), small(phone).\ncold :- sunny, dislikes(dave,ball).\ncold :- tall(dave), enemy(bob,george).\ntall(george) :- tall(carol).\nhot :- hot, big(book).\nenemy(eve,dave).\ndislikes(alice,george).\nfriend(dave,bob).\nparent(carol,dave).\nparent(dave,bob).\ndislikes(george,apple).\nsibling(alice,frank).\ndislikes(bob,carol).\nsibling(bob,frank).\ndislikes(george,car).\ndislikes(dave,carol).",
    "natural language": "You are given the following rules:\nIf eve is an enemy of dave, then george is happy.\nIf george is happy, then it is hot.\nIf it is hot, then bob is a parent of bob.\nIf bob is a parent of bob, then book is wet.\nIf alice is a sibling of eve and it is hot and george is a parent of bob, then it is hot.\nIf alice is tall and eve is an enemy of dave, then alice is an enemy of eve.\nIf carol dislikes bob and dave is sad, then it is hot.\nIf frank is happy, then eve is an enemy of alice.\nIf george dislikes book and pencil is big and it is sunny, then apple is small.\nIf car is wet and eve is sad, then eve is a parent of dave.\nIf eve dislikes george, then phone is small.\nIf eve is a sibling of alice, then alice is tall.\nIf dave is a sibling of carol, then it is cold.\nIf it is sunny, then eve is tall.\nIf bob is a friend of frank and phone is small, then carol is a parent of george.\nIf it is sunny and dave dislikes ball, then it is cold.\nIf dave is tall and bob is an enemy of george, then it is cold.\nIf carol is tall, then george is tall.\nIf it is hot and book is big, then it is hot.\n\nAnd the following facts:\neve is an enemy of dave.\nalice dislikes george.\neve is an enemy of alice.\ndave is a friend of bob.\ncarol is a parent of dave.\ndave is a parent of bob.\ngeorge dislikes apple.\nalice is a sibling of frank.\nbob dislikes carol.\nbob is a sibling of frank.\ngeorge dislikes car.\ndave dislikes carol.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould eve is an enemy of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,car).",
    "c": "happy(george) :- enemy(eve,dave).\nhot :- happy(george).\nparent(bob,bob) :- hot.\nwet(book) :- parent(bob,bob).\nhot :- sibling(alice,eve), hot, parent(george,bob).\nenemy(alice,eve) :- tall(alice), enemy(eve,dave).\nhot :- dislikes(carol,bob), sad(dave).\nenemy(eve,alice) :- happy(frank).\nsmall(apple) :- dislikes(george,book), big(pencil), sunny.\nparent(eve,dave) :- wet(car), sad(eve).\nsmall(phone) :- dislikes(eve,george).\ntall(alice) :- sibling(eve,alice).\ncold :- sibling(dave,carol).\ntall(eve) :- sunny.\nparent(carol,george) :- friend(bob,frank), small(phone).\ncold :- sunny, dislikes(dave,ball).\ncold :- tall(dave), enemy(bob,george).\ntall(george) :- tall(carol).\nhot :- hot, big(book).\nenemy(eve,dave).\ndislikes(alice,george).\nenemy(eve,alice).\nfriend(dave,bob).\nparent(carol,dave).\nparent(dave,bob).\ndislikes(george,apple).\nsibling(alice,frank).\ndislikes(bob,carol).\nsibling(bob,frank).\ndislikes(dave,carol).",
    "natural language": "You are given the following rules:\nIf eve is an enemy of dave, then george is happy.\nIf george is happy, then it is hot.\nIf it is hot, then bob is a parent of bob.\nIf bob is a parent of bob, then book is wet.\nIf alice is a sibling of eve and it is hot and george is a parent of bob, then it is hot.\nIf alice is tall and eve is an enemy of dave, then alice is an enemy of eve.\nIf carol dislikes bob and dave is sad, then it is hot.\nIf frank is happy, then eve is an enemy of alice.\nIf george dislikes book and pencil is big and it is sunny, then apple is small.\nIf car is wet and eve is sad, then eve is a parent of dave.\nIf eve dislikes george, then phone is small.\nIf eve is a sibling of alice, then alice is tall.\nIf dave is a sibling of carol, then it is cold.\nIf it is sunny, then eve is tall.\nIf bob is a friend of frank and phone is small, then carol is a parent of george.\nIf it is sunny and dave dislikes ball, then it is cold.\nIf dave is tall and bob is an enemy of george, then it is cold.\nIf carol is tall, then george is tall.\nIf it is hot and book is big, then it is hot.\n\nAnd the following facts:\neve is an enemy of dave.\nalice dislikes george.\neve is an enemy of alice.\ndave is a friend of bob.\ncarol is a parent of dave.\ndave is a parent of bob.\ngeorge dislikes apple.\nalice is a sibling of frank.\nbob dislikes carol.\nbob is a sibling of frank.\ngeorge dislikes car.\ndave dislikes carol.\n\nOBSERVATION: book is wet is true.\n\nQUESTION:\nCould george dislikes car be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sunny.",
    "c": "parent(frank,eve) :- enemy(alice,george).\nowns(bob,pencil) :- parent(frank,eve).\nsibling(eve,carol) :- owns(bob,pencil).\nsunny :- sibling(eve,carol).\nhungry(dave) :- sunny.\nsad(carol) :- hungry(dave).\ntall(eve) :- tall(eve), tall(frank), hungry(george).\ntall(dave) :- tall(frank), wet(pencil), tall(george).\nsunny :- sunny, dislikes(bob,book).\nsmall(pencil) :- sibling(carol,eve).\nsmall(ball) :- small(phone), parent(dave,bob).\nsunny :- small(phone), small(pencil).\nsibling(bob,bob) :- sibling(george,dave), hot, parent(eve,eve).\nsibling(eve,dave) :- sunny, sibling(george,alice).\nsad(bob) :- sad(george).\nsmall(pencil) :- small(apple).\nwet(ball) :- owns(carol,car), enemy(eve,carol), wet(book).\nwet(pencil) :- wet(apple).\nsad(alice) :- sad(bob), sad(george), dislikes(dave,book).\nenemy(alice,george).\nowns(alice,phone).\nparent(frank,alice).\nsibling(eve,dave).\nsibling(bob,alice).\nowns(dave,apple).\ndislikes(eve,phone).\nowns(dave,phone).\nenemy(carol,frank).\ndislikes(george,pencil).\nowns(eve,apple).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf alice is an enemy of george, then frank is a parent of eve.\nIf frank is a parent of eve, then bob owns pencil.\nIf bob owns pencil, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol is sad.\nIf eve is tall and frank is tall and george is hungry, then eve is tall.\nIf frank is tall and pencil is wet and george is tall, then dave is tall.\nIf it is sunny and bob dislikes book, then it is sunny.\nIf carol is a sibling of eve, then pencil is small.\nIf phone is small and dave is a parent of bob, then ball is small.\nIf phone is small and pencil is small, then it is sunny.\nIf george is a sibling of dave and it is hot and eve is a parent of eve, then bob is a sibling of bob.\nIf it is sunny and george is a sibling of alice, then eve is a sibling of dave.\nIf george is sad, then bob is sad.\nIf apple is small, then pencil is small.\nIf carol owns car and eve is an enemy of carol and book is wet, then ball is wet.\nIf apple is wet, then pencil is wet.\nIf bob is sad and george is sad and dave dislikes book, then alice is sad.\n\nAnd the following facts:\nalice is an enemy of george.\nalice owns phone.\nfrank is a parent of alice.\neve is a sibling of dave.\nbob is a sibling of alice.\ndave owns apple.\neve dislikes phone.\ndave owns phone.\ncarol is an enemy of frank.\ngeorge dislikes pencil.\neve owns apple.\nfrank is an enemy of alice.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "parent(frank,eve) :- enemy(alice,george).\nowns(bob,pencil) :- parent(frank,eve).\nsibling(eve,carol) :- owns(bob,pencil).\nsunny :- sibling(eve,carol).\nhungry(dave) :- sunny.\nsad(carol) :- hungry(dave).\ntall(eve) :- tall(eve), tall(frank), hungry(george).\ntall(dave) :- tall(frank), wet(pencil), tall(george).\nsunny :- sunny, dislikes(bob,book).\nsmall(pencil) :- sibling(carol,eve).\nsmall(ball) :- small(phone), parent(dave,bob).\nsunny :- small(phone), small(pencil).\nsibling(bob,bob) :- sibling(george,dave), hot, parent(eve,eve).\nsibling(eve,dave) :- sunny, sibling(george,alice).\nsad(bob) :- sad(george).\nsmall(pencil) :- small(apple).\nwet(ball) :- owns(carol,car), enemy(eve,carol), wet(book).\nwet(pencil) :- wet(apple).\nsad(alice) :- sad(bob), sad(george), dislikes(dave,book).\nenemy(alice,george).\nowns(alice,phone).\nparent(frank,alice).\nsibling(eve,dave).\nsibling(bob,alice).\nowns(dave,apple).\ndislikes(eve,phone).\nowns(dave,phone).\nenemy(carol,frank).\ndislikes(george,pencil).\nowns(eve,apple).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf alice is an enemy of george, then frank is a parent of eve.\nIf frank is a parent of eve, then bob owns pencil.\nIf bob owns pencil, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol is sad.\nIf eve is tall and frank is tall and george is hungry, then eve is tall.\nIf frank is tall and pencil is wet and george is tall, then dave is tall.\nIf it is sunny and bob dislikes book, then it is sunny.\nIf carol is a sibling of eve, then pencil is small.\nIf phone is small and dave is a parent of bob, then ball is small.\nIf phone is small and pencil is small, then it is sunny.\nIf george is a sibling of dave and it is hot and eve is a parent of eve, then bob is a sibling of bob.\nIf it is sunny and george is a sibling of alice, then eve is a sibling of dave.\nIf george is sad, then bob is sad.\nIf apple is small, then pencil is small.\nIf carol owns car and eve is an enemy of carol and book is wet, then ball is wet.\nIf apple is wet, then pencil is wet.\nIf bob is sad and george is sad and dave dislikes book, then alice is sad.\n\nAnd the following facts:\nalice is an enemy of george.\nalice owns phone.\nfrank is a parent of alice.\neve is a sibling of dave.\nbob is a sibling of alice.\ndave owns apple.\neve dislikes phone.\ndave owns phone.\ncarol is an enemy of frank.\ngeorge dislikes pencil.\neve owns apple.\nfrank is an enemy of alice.\n\nQUESTION:\nIs eve is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,phone).",
    "c": "parent(frank,eve) :- enemy(alice,george).\nowns(bob,pencil) :- parent(frank,eve).\nsibling(eve,carol) :- owns(bob,pencil).\nsunny :- sibling(eve,carol).\nhungry(dave) :- sunny.\nsad(carol) :- hungry(dave).\ntall(eve) :- tall(eve), tall(frank), hungry(george).\ntall(dave) :- tall(frank), wet(pencil), tall(george).\nsunny :- sunny, dislikes(bob,book).\nsmall(pencil) :- sibling(carol,eve).\nsmall(ball) :- small(phone), parent(dave,bob).\nsunny :- small(phone), small(pencil).\nsibling(bob,bob) :- sibling(george,dave), hot, parent(eve,eve).\nsibling(eve,dave) :- sunny, sibling(george,alice).\nsad(bob) :- sad(george).\nsmall(pencil) :- small(apple).\nwet(ball) :- owns(carol,car), enemy(eve,carol), wet(book).\nwet(pencil) :- wet(apple).\nsad(alice) :- sad(bob), sad(george), dislikes(dave,book).\nenemy(alice,george).\nowns(alice,phone).\nparent(frank,alice).\nsibling(eve,dave).\nsibling(bob,alice).\nowns(dave,apple).\ndislikes(eve,phone).\nowns(dave,phone).\nenemy(carol,frank).\ndislikes(george,pencil).\nowns(eve,apple).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf alice is an enemy of george, then frank is a parent of eve.\nIf frank is a parent of eve, then bob owns pencil.\nIf bob owns pencil, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol is sad.\nIf eve is tall and frank is tall and george is hungry, then eve is tall.\nIf frank is tall and pencil is wet and george is tall, then dave is tall.\nIf it is sunny and bob dislikes book, then it is sunny.\nIf carol is a sibling of eve, then pencil is small.\nIf phone is small and dave is a parent of bob, then ball is small.\nIf phone is small and pencil is small, then it is sunny.\nIf george is a sibling of dave and it is hot and eve is a parent of eve, then bob is a sibling of bob.\nIf it is sunny and george is a sibling of alice, then eve is a sibling of dave.\nIf george is sad, then bob is sad.\nIf apple is small, then pencil is small.\nIf carol owns car and eve is an enemy of carol and book is wet, then ball is wet.\nIf apple is wet, then pencil is wet.\nIf bob is sad and george is sad and dave dislikes book, then alice is sad.\n\nAnd the following facts:\nalice is an enemy of george.\nalice owns phone.\nfrank is a parent of alice.\neve is a sibling of dave.\nbob is a sibling of alice.\ndave owns apple.\neve dislikes phone.\ndave owns phone.\ncarol is an enemy of frank.\ngeorge dislikes pencil.\neve owns apple.\nfrank is an enemy of alice.\n\nQUESTION:\nIs alice owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,carol).",
    "c": "parent(frank,eve) :- enemy(alice,george).\nowns(bob,pencil) :- parent(frank,eve).\nsibling(eve,carol) :- owns(bob,pencil).\nsunny :- sibling(eve,carol).\nhungry(dave) :- sunny.\nsad(carol) :- hungry(dave).\ntall(eve) :- tall(eve), tall(frank), hungry(george).\ntall(dave) :- tall(frank), wet(pencil), tall(george).\nsunny :- sunny, dislikes(bob,book).\nsmall(pencil) :- sibling(carol,eve).\nsmall(ball) :- small(phone), parent(dave,bob).\nsunny :- small(phone), small(pencil).\nsibling(bob,bob) :- sibling(george,dave), hot, parent(eve,eve).\nsibling(eve,dave) :- sunny, sibling(george,alice).\nsad(bob) :- sad(george).\nsmall(pencil) :- small(apple).\nwet(ball) :- owns(carol,car), enemy(eve,carol), wet(book).\nwet(pencil) :- wet(apple).\nsad(alice) :- sad(bob), sad(george), dislikes(dave,book).\nenemy(alice,george).\nowns(alice,phone).\nparent(frank,alice).\nsibling(eve,dave).\nsibling(bob,alice).\nowns(dave,apple).\ndislikes(eve,phone).\nowns(dave,phone).\nenemy(carol,frank).\ndislikes(george,pencil).\nowns(eve,apple).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf alice is an enemy of george, then frank is a parent of eve.\nIf frank is a parent of eve, then bob owns pencil.\nIf bob owns pencil, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol is sad.\nIf eve is tall and frank is tall and george is hungry, then eve is tall.\nIf frank is tall and pencil is wet and george is tall, then dave is tall.\nIf it is sunny and bob dislikes book, then it is sunny.\nIf carol is a sibling of eve, then pencil is small.\nIf phone is small and dave is a parent of bob, then ball is small.\nIf phone is small and pencil is small, then it is sunny.\nIf george is a sibling of dave and it is hot and eve is a parent of eve, then bob is a sibling of bob.\nIf it is sunny and george is a sibling of alice, then eve is a sibling of dave.\nIf george is sad, then bob is sad.\nIf apple is small, then pencil is small.\nIf carol owns car and eve is an enemy of carol and book is wet, then ball is wet.\nIf apple is wet, then pencil is wet.\nIf bob is sad and george is sad and dave dislikes book, then alice is sad.\n\nAnd the following facts:\nalice is an enemy of george.\nalice owns phone.\nfrank is a parent of alice.\neve is a sibling of dave.\nbob is a sibling of alice.\ndave owns apple.\neve dislikes phone.\ndave owns phone.\ncarol is an enemy of frank.\ngeorge dislikes pencil.\neve owns apple.\nfrank is an enemy of alice.\n\nQUESTION:\nIs frank is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,ball).",
    "c": "parent(frank,eve) :- enemy(alice,george).\nowns(bob,pencil) :- parent(frank,eve).\nsibling(eve,carol) :- owns(bob,pencil).\nsunny :- sibling(eve,carol).\nhungry(dave) :- sunny.\nsad(carol) :- hungry(dave).\ntall(eve) :- tall(eve), tall(frank), hungry(george).\ntall(dave) :- tall(frank), wet(pencil), tall(george).\nsunny :- sunny, dislikes(bob,book).\nsmall(pencil) :- sibling(carol,eve).\nsmall(ball) :- small(phone), parent(dave,bob).\nsunny :- small(phone), small(pencil).\nsibling(bob,bob) :- sibling(george,dave), hot, parent(eve,eve).\nsibling(eve,dave) :- sunny, sibling(george,alice).\nsad(bob) :- sad(george).\nsmall(pencil) :- small(apple).\nwet(ball) :- owns(carol,car), enemy(eve,carol), wet(book).\nwet(pencil) :- wet(apple).\nsad(alice) :- sad(bob), sad(george), dislikes(dave,book).\nenemy(alice,george).\nowns(alice,phone).\nparent(frank,alice).\nsibling(eve,dave).\nsibling(bob,alice).\nowns(dave,apple).\ndislikes(eve,phone).\nowns(dave,phone).\nenemy(carol,frank).\ndislikes(george,pencil).\nowns(eve,apple).\nenemy(frank,alice).",
    "natural language": "You are given the following information:\nIf alice is an enemy of george, then frank is a parent of eve.\nIf frank is a parent of eve, then bob owns pencil.\nIf bob owns pencil, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol is sad.\nIf eve is tall and frank is tall and george is hungry, then eve is tall.\nIf frank is tall and pencil is wet and george is tall, then dave is tall.\nIf it is sunny and bob dislikes book, then it is sunny.\nIf carol is a sibling of eve, then pencil is small.\nIf phone is small and dave is a parent of bob, then ball is small.\nIf phone is small and pencil is small, then it is sunny.\nIf george is a sibling of dave and it is hot and eve is a parent of eve, then bob is a sibling of bob.\nIf it is sunny and george is a sibling of alice, then eve is a sibling of dave.\nIf george is sad, then bob is sad.\nIf apple is small, then pencil is small.\nIf carol owns car and eve is an enemy of carol and book is wet, then ball is wet.\nIf apple is wet, then pencil is wet.\nIf bob is sad and george is sad and dave dislikes book, then alice is sad.\n\nAnd the following facts:\nalice is an enemy of george.\nalice owns phone.\nfrank is a parent of alice.\neve is a sibling of dave.\nbob is a sibling of alice.\ndave owns apple.\neve dislikes phone.\ndave owns phone.\ncarol is an enemy of frank.\ngeorge dislikes pencil.\neve owns apple.\nfrank is an enemy of alice.\n\nQUESTION:\nIs alice owns ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,george).",
    "c": "parent(frank,eve) :- enemy(alice,george).\nowns(bob,pencil) :- parent(frank,eve).\nsibling(eve,carol) :- owns(bob,pencil).\nsunny :- sibling(eve,carol).\nhungry(dave) :- sunny.\nsad(carol) :- hungry(dave).\ntall(eve) :- tall(eve), tall(frank), hungry(george).\ntall(dave) :- tall(frank), wet(pencil), tall(george).\nsunny :- sunny, dislikes(bob,book).\nsmall(pencil) :- sibling(carol,eve).\nsmall(ball) :- small(phone), parent(dave,bob).\nsunny :- small(phone), small(pencil).\nsibling(bob,bob) :- sibling(george,dave), hot, parent(eve,eve).\nsibling(eve,dave) :- sunny, sibling(george,alice).\nsad(bob) :- sad(george).\nsmall(pencil) :- small(apple).\nwet(ball) :- owns(carol,car), enemy(eve,carol), wet(book).\nwet(pencil) :- wet(apple).\nsad(alice) :- sad(bob), sad(george), dislikes(dave,book).\nowns(alice,phone).\nparent(frank,alice).\nsibling(eve,dave).\nsibling(bob,alice).\nowns(dave,apple).\ndislikes(eve,phone).\nowns(dave,phone).\nenemy(carol,frank).\ndislikes(george,pencil).\nowns(eve,apple).\nenemy(frank,alice).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of george, then frank is a parent of eve.\nIf frank is a parent of eve, then bob owns pencil.\nIf bob owns pencil, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol is sad.\nIf eve is tall and frank is tall and george is hungry, then eve is tall.\nIf frank is tall and pencil is wet and george is tall, then dave is tall.\nIf it is sunny and bob dislikes book, then it is sunny.\nIf carol is a sibling of eve, then pencil is small.\nIf phone is small and dave is a parent of bob, then ball is small.\nIf phone is small and pencil is small, then it is sunny.\nIf george is a sibling of dave and it is hot and eve is a parent of eve, then bob is a sibling of bob.\nIf it is sunny and george is a sibling of alice, then eve is a sibling of dave.\nIf george is sad, then bob is sad.\nIf apple is small, then pencil is small.\nIf carol owns car and eve is an enemy of carol and book is wet, then ball is wet.\nIf apple is wet, then pencil is wet.\nIf bob is sad and george is sad and dave dislikes book, then alice is sad.\n\nAnd the following facts:\nalice is an enemy of george.\nalice owns phone.\nfrank is a parent of alice.\neve is a sibling of dave.\nbob is a sibling of alice.\ndave owns apple.\neve dislikes phone.\ndave owns phone.\ncarol is an enemy of frank.\ngeorge dislikes pencil.\neve owns apple.\nfrank is an enemy of alice.\n\nOBSERVATION: carol is sad is true.\n\nQUESTION:\nCould alice is an enemy of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(bob,alice).",
    "c": "parent(frank,eve) :- enemy(alice,george).\nowns(bob,pencil) :- parent(frank,eve).\nsibling(eve,carol) :- owns(bob,pencil).\nsunny :- sibling(eve,carol).\nhungry(dave) :- sunny.\nsad(carol) :- hungry(dave).\ntall(eve) :- tall(eve), tall(frank), hungry(george).\ntall(dave) :- tall(frank), wet(pencil), tall(george).\nsunny :- sunny, dislikes(bob,book).\nsmall(pencil) :- sibling(carol,eve).\nsmall(ball) :- small(phone), parent(dave,bob).\nsunny :- small(phone), small(pencil).\nsibling(bob,bob) :- sibling(george,dave), hot, parent(eve,eve).\nsibling(eve,dave) :- sunny, sibling(george,alice).\nsad(bob) :- sad(george).\nsmall(pencil) :- small(apple).\nwet(ball) :- owns(carol,car), enemy(eve,carol), wet(book).\nwet(pencil) :- wet(apple).\nsad(alice) :- sad(bob), sad(george), dislikes(dave,book).\nenemy(alice,george).\nowns(alice,phone).\nparent(frank,alice).\nsibling(eve,dave).\nowns(dave,apple).\ndislikes(eve,phone).\nowns(dave,phone).\nenemy(carol,frank).\ndislikes(george,pencil).\nowns(eve,apple).\nenemy(frank,alice).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of george, then frank is a parent of eve.\nIf frank is a parent of eve, then bob owns pencil.\nIf bob owns pencil, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol is sad.\nIf eve is tall and frank is tall and george is hungry, then eve is tall.\nIf frank is tall and pencil is wet and george is tall, then dave is tall.\nIf it is sunny and bob dislikes book, then it is sunny.\nIf carol is a sibling of eve, then pencil is small.\nIf phone is small and dave is a parent of bob, then ball is small.\nIf phone is small and pencil is small, then it is sunny.\nIf george is a sibling of dave and it is hot and eve is a parent of eve, then bob is a sibling of bob.\nIf it is sunny and george is a sibling of alice, then eve is a sibling of dave.\nIf george is sad, then bob is sad.\nIf apple is small, then pencil is small.\nIf carol owns car and eve is an enemy of carol and book is wet, then ball is wet.\nIf apple is wet, then pencil is wet.\nIf bob is sad and george is sad and dave dislikes book, then alice is sad.\n\nAnd the following facts:\nalice is an enemy of george.\nalice owns phone.\nfrank is a parent of alice.\neve is a sibling of dave.\nbob is a sibling of alice.\ndave owns apple.\neve dislikes phone.\ndave owns phone.\ncarol is an enemy of frank.\ngeorge dislikes pencil.\neve owns apple.\nfrank is an enemy of alice.\n\nOBSERVATION: carol is sad is true.\n\nQUESTION:\nCould bob is a sibling of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(alice,phone).",
    "c": "parent(frank,eve) :- enemy(alice,george).\nowns(bob,pencil) :- parent(frank,eve).\nsibling(eve,carol) :- owns(bob,pencil).\nsunny :- sibling(eve,carol).\nhungry(dave) :- sunny.\nsad(carol) :- hungry(dave).\ntall(eve) :- tall(eve), tall(frank), hungry(george).\ntall(dave) :- tall(frank), wet(pencil), tall(george).\nsunny :- sunny, dislikes(bob,book).\nsmall(pencil) :- sibling(carol,eve).\nsmall(ball) :- small(phone), parent(dave,bob).\nsunny :- small(phone), small(pencil).\nsibling(bob,bob) :- sibling(george,dave), hot, parent(eve,eve).\nsibling(eve,dave) :- sunny, sibling(george,alice).\nsad(bob) :- sad(george).\nsmall(pencil) :- small(apple).\nwet(ball) :- owns(carol,car), enemy(eve,carol), wet(book).\nwet(pencil) :- wet(apple).\nsad(alice) :- sad(bob), sad(george), dislikes(dave,book).\nenemy(alice,george).\nparent(frank,alice).\nsibling(eve,dave).\nsibling(bob,alice).\nowns(dave,apple).\ndislikes(eve,phone).\nowns(dave,phone).\nenemy(carol,frank).\ndislikes(george,pencil).\nowns(eve,apple).\nenemy(frank,alice).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of george, then frank is a parent of eve.\nIf frank is a parent of eve, then bob owns pencil.\nIf bob owns pencil, then eve is a sibling of carol.\nIf eve is a sibling of carol, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol is sad.\nIf eve is tall and frank is tall and george is hungry, then eve is tall.\nIf frank is tall and pencil is wet and george is tall, then dave is tall.\nIf it is sunny and bob dislikes book, then it is sunny.\nIf carol is a sibling of eve, then pencil is small.\nIf phone is small and dave is a parent of bob, then ball is small.\nIf phone is small and pencil is small, then it is sunny.\nIf george is a sibling of dave and it is hot and eve is a parent of eve, then bob is a sibling of bob.\nIf it is sunny and george is a sibling of alice, then eve is a sibling of dave.\nIf george is sad, then bob is sad.\nIf apple is small, then pencil is small.\nIf carol owns car and eve is an enemy of carol and book is wet, then ball is wet.\nIf apple is wet, then pencil is wet.\nIf bob is sad and george is sad and dave dislikes book, then alice is sad.\n\nAnd the following facts:\nalice is an enemy of george.\nalice owns phone.\nfrank is a parent of alice.\neve is a sibling of dave.\nbob is a sibling of alice.\ndave owns apple.\neve dislikes phone.\ndave owns phone.\ncarol is an enemy of frank.\ngeorge dislikes pencil.\neve owns apple.\nfrank is an enemy of alice.\n\nOBSERVATION: carol is sad is true.\n\nQUESTION:\nCould alice owns phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,dave).",
    "c": "hot :- hot.\nowns(bob,apple) :- hot.\nlikes(carol,ball) :- owns(bob,apple).\nenemy(eve,alice) :- likes(carol,ball).\nsibling(dave,dave) :- enemy(eve,alice).\ndislikes(bob,pencil) :- sibling(dave,dave).\nhappy(bob) :- wet(ball), friend(bob,george), hungry(george).\nhot :- wet(phone), friend(eve,bob).\nenemy(carol,alice) :- hungry(carol).\nenemy(frank,bob) :- big(phone), parent(george,bob).\nhot :- sibling(bob,george), big(pencil).\nowns(carol,car) :- cold.\nfriend(eve,alice) :- dislikes(george,frank).\nhappy(frank) :- enemy(dave,alice).\nowns(bob,car) :- friend(alice,alice).\nfriend(bob,frank) :- owns(alice,pencil).\ntall(eve) :- likes(alice,george), sibling(eve,george), happy(alice).\ndislikes(george,bob) :- big(ball).\ncold :- enemy(alice,alice).\nhot.\nfriend(bob,alice).\nhappy(carol).\ndislikes(eve,apple).\nlikes(george,car).\nlikes(alice,book).\ndislikes(frank,george).\nsibling(george,bob).\nsibling(carol,frank).\nowns(frank,pencil).\nparent(carol,alice).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then bob owns apple.\nIf bob owns apple, then carol likes ball.\nIf carol likes ball, then eve is an enemy of alice.\nIf eve is an enemy of alice, then dave is a sibling of dave.\nIf dave is a sibling of dave, then bob dislikes pencil.\nIf ball is wet and bob is a friend of george and george is hungry, then bob is happy.\nIf phone is wet and eve is a friend of bob, then it is hot.\nIf carol is hungry, then carol is an enemy of alice.\nIf phone is big and george is a parent of bob, then frank is an enemy of bob.\nIf bob is a sibling of george and pencil is big, then it is hot.\nIf it is cold, then carol owns car.\nIf george dislikes frank, then eve is a friend of alice.\nIf dave is an enemy of alice, then frank is happy.\nIf alice is a friend of alice, then bob owns car.\nIf alice owns pencil, then bob is a friend of frank.\nIf alice likes george and eve is a sibling of george and alice is happy, then eve is tall.\nIf ball is big, then george dislikes bob.\nIf alice is an enemy of alice, then it is cold.\n\nAnd the following facts:\nit is hot.\nbob is a friend of alice.\ncarol is happy.\neve dislikes apple.\ngeorge likes car.\nalice likes book.\nfrank dislikes george.\ngeorge is a sibling of bob.\ncarol is a sibling of frank.\nfrank owns pencil.\ncarol is a parent of alice.\nalice is an enemy of eve.\n\nQUESTION:\nIs dave is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,pencil).",
    "c": "hot :- hot.\nowns(bob,apple) :- hot.\nlikes(carol,ball) :- owns(bob,apple).\nenemy(eve,alice) :- likes(carol,ball).\nsibling(dave,dave) :- enemy(eve,alice).\ndislikes(bob,pencil) :- sibling(dave,dave).\nhappy(bob) :- wet(ball), friend(bob,george), hungry(george).\nhot :- wet(phone), friend(eve,bob).\nenemy(carol,alice) :- hungry(carol).\nenemy(frank,bob) :- big(phone), parent(george,bob).\nhot :- sibling(bob,george), big(pencil).\nowns(carol,car) :- cold.\nfriend(eve,alice) :- dislikes(george,frank).\nhappy(frank) :- enemy(dave,alice).\nowns(bob,car) :- friend(alice,alice).\nfriend(bob,frank) :- owns(alice,pencil).\ntall(eve) :- likes(alice,george), sibling(eve,george), happy(alice).\ndislikes(george,bob) :- big(ball).\ncold :- enemy(alice,alice).\nhot.\nfriend(bob,alice).\nhappy(carol).\ndislikes(eve,apple).\nlikes(george,car).\nlikes(alice,book).\ndislikes(frank,george).\nsibling(george,bob).\nsibling(carol,frank).\nowns(frank,pencil).\nparent(carol,alice).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then bob owns apple.\nIf bob owns apple, then carol likes ball.\nIf carol likes ball, then eve is an enemy of alice.\nIf eve is an enemy of alice, then dave is a sibling of dave.\nIf dave is a sibling of dave, then bob dislikes pencil.\nIf ball is wet and bob is a friend of george and george is hungry, then bob is happy.\nIf phone is wet and eve is a friend of bob, then it is hot.\nIf carol is hungry, then carol is an enemy of alice.\nIf phone is big and george is a parent of bob, then frank is an enemy of bob.\nIf bob is a sibling of george and pencil is big, then it is hot.\nIf it is cold, then carol owns car.\nIf george dislikes frank, then eve is a friend of alice.\nIf dave is an enemy of alice, then frank is happy.\nIf alice is a friend of alice, then bob owns car.\nIf alice owns pencil, then bob is a friend of frank.\nIf alice likes george and eve is a sibling of george and alice is happy, then eve is tall.\nIf ball is big, then george dislikes bob.\nIf alice is an enemy of alice, then it is cold.\n\nAnd the following facts:\nit is hot.\nbob is a friend of alice.\ncarol is happy.\neve dislikes apple.\ngeorge likes car.\nalice likes book.\nfrank dislikes george.\ngeorge is a sibling of bob.\ncarol is a sibling of frank.\nfrank owns pencil.\ncarol is a parent of alice.\nalice is an enemy of eve.\n\nQUESTION:\nIs frank owns pencil true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "hot :- hot.\nowns(bob,apple) :- hot.\nlikes(carol,ball) :- owns(bob,apple).\nenemy(eve,alice) :- likes(carol,ball).\nsibling(dave,dave) :- enemy(eve,alice).\ndislikes(bob,pencil) :- sibling(dave,dave).\nhappy(bob) :- wet(ball), friend(bob,george), hungry(george).\nhot :- wet(phone), friend(eve,bob).\nenemy(carol,alice) :- hungry(carol).\nenemy(frank,bob) :- big(phone), parent(george,bob).\nhot :- sibling(bob,george), big(pencil).\nowns(carol,car) :- cold.\nfriend(eve,alice) :- dislikes(george,frank).\nhappy(frank) :- enemy(dave,alice).\nowns(bob,car) :- friend(alice,alice).\nfriend(bob,frank) :- owns(alice,pencil).\ntall(eve) :- likes(alice,george), sibling(eve,george), happy(alice).\ndislikes(george,bob) :- big(ball).\ncold :- enemy(alice,alice).\nhot.\nfriend(bob,alice).\nhappy(carol).\ndislikes(eve,apple).\nlikes(george,car).\nlikes(alice,book).\ndislikes(frank,george).\nsibling(george,bob).\nsibling(carol,frank).\nowns(frank,pencil).\nparent(carol,alice).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then bob owns apple.\nIf bob owns apple, then carol likes ball.\nIf carol likes ball, then eve is an enemy of alice.\nIf eve is an enemy of alice, then dave is a sibling of dave.\nIf dave is a sibling of dave, then bob dislikes pencil.\nIf ball is wet and bob is a friend of george and george is hungry, then bob is happy.\nIf phone is wet and eve is a friend of bob, then it is hot.\nIf carol is hungry, then carol is an enemy of alice.\nIf phone is big and george is a parent of bob, then frank is an enemy of bob.\nIf bob is a sibling of george and pencil is big, then it is hot.\nIf it is cold, then carol owns car.\nIf george dislikes frank, then eve is a friend of alice.\nIf dave is an enemy of alice, then frank is happy.\nIf alice is a friend of alice, then bob owns car.\nIf alice owns pencil, then bob is a friend of frank.\nIf alice likes george and eve is a sibling of george and alice is happy, then eve is tall.\nIf ball is big, then george dislikes bob.\nIf alice is an enemy of alice, then it is cold.\n\nAnd the following facts:\nit is hot.\nbob is a friend of alice.\ncarol is happy.\neve dislikes apple.\ngeorge likes car.\nalice likes book.\nfrank dislikes george.\ngeorge is a sibling of bob.\ncarol is a sibling of frank.\nfrank owns pencil.\ncarol is a parent of alice.\nalice is an enemy of eve.\n\nQUESTION:\nIs carol is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(book).",
    "c": "hot :- hot.\nowns(bob,apple) :- hot.\nlikes(carol,ball) :- owns(bob,apple).\nenemy(eve,alice) :- likes(carol,ball).\nsibling(dave,dave) :- enemy(eve,alice).\ndislikes(bob,pencil) :- sibling(dave,dave).\nhappy(bob) :- wet(ball), friend(bob,george), hungry(george).\nhot :- wet(phone), friend(eve,bob).\nenemy(carol,alice) :- hungry(carol).\nenemy(frank,bob) :- big(phone), parent(george,bob).\nhot :- sibling(bob,george), big(pencil).\nowns(carol,car) :- cold.\nfriend(eve,alice) :- dislikes(george,frank).\nhappy(frank) :- enemy(dave,alice).\nowns(bob,car) :- friend(alice,alice).\nfriend(bob,frank) :- owns(alice,pencil).\ntall(eve) :- likes(alice,george), sibling(eve,george), happy(alice).\ndislikes(george,bob) :- big(ball).\ncold :- enemy(alice,alice).\nhot.\nfriend(bob,alice).\nhappy(carol).\ndislikes(eve,apple).\nlikes(george,car).\nlikes(alice,book).\ndislikes(frank,george).\nsibling(george,bob).\nsibling(carol,frank).\nowns(frank,pencil).\nparent(carol,alice).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then bob owns apple.\nIf bob owns apple, then carol likes ball.\nIf carol likes ball, then eve is an enemy of alice.\nIf eve is an enemy of alice, then dave is a sibling of dave.\nIf dave is a sibling of dave, then bob dislikes pencil.\nIf ball is wet and bob is a friend of george and george is hungry, then bob is happy.\nIf phone is wet and eve is a friend of bob, then it is hot.\nIf carol is hungry, then carol is an enemy of alice.\nIf phone is big and george is a parent of bob, then frank is an enemy of bob.\nIf bob is a sibling of george and pencil is big, then it is hot.\nIf it is cold, then carol owns car.\nIf george dislikes frank, then eve is a friend of alice.\nIf dave is an enemy of alice, then frank is happy.\nIf alice is a friend of alice, then bob owns car.\nIf alice owns pencil, then bob is a friend of frank.\nIf alice likes george and eve is a sibling of george and alice is happy, then eve is tall.\nIf ball is big, then george dislikes bob.\nIf alice is an enemy of alice, then it is cold.\n\nAnd the following facts:\nit is hot.\nbob is a friend of alice.\ncarol is happy.\neve dislikes apple.\ngeorge likes car.\nalice likes book.\nfrank dislikes george.\ngeorge is a sibling of bob.\ncarol is a sibling of frank.\nfrank owns pencil.\ncarol is a parent of alice.\nalice is an enemy of eve.\n\nQUESTION:\nIs book is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,book).",
    "c": "hot :- hot.\nowns(bob,apple) :- hot.\nlikes(carol,ball) :- owns(bob,apple).\nenemy(eve,alice) :- likes(carol,ball).\nsibling(dave,dave) :- enemy(eve,alice).\ndislikes(bob,pencil) :- sibling(dave,dave).\nhappy(bob) :- wet(ball), friend(bob,george), hungry(george).\nhot :- wet(phone), friend(eve,bob).\nenemy(carol,alice) :- hungry(carol).\nenemy(frank,bob) :- big(phone), parent(george,bob).\nhot :- sibling(bob,george), big(pencil).\nowns(carol,car) :- cold.\nfriend(eve,alice) :- dislikes(george,frank).\nhappy(frank) :- enemy(dave,alice).\nowns(bob,car) :- friend(alice,alice).\nfriend(bob,frank) :- owns(alice,pencil).\ntall(eve) :- likes(alice,george), sibling(eve,george), happy(alice).\ndislikes(george,bob) :- big(ball).\ncold :- enemy(alice,alice).\nhot.\nfriend(bob,alice).\nhappy(carol).\ndislikes(eve,apple).\nlikes(george,car).\nlikes(alice,book).\ndislikes(frank,george).\nsibling(george,bob).\nsibling(carol,frank).\nowns(frank,pencil).\nparent(carol,alice).\nenemy(alice,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then bob owns apple.\nIf bob owns apple, then carol likes ball.\nIf carol likes ball, then eve is an enemy of alice.\nIf eve is an enemy of alice, then dave is a sibling of dave.\nIf dave is a sibling of dave, then bob dislikes pencil.\nIf ball is wet and bob is a friend of george and george is hungry, then bob is happy.\nIf phone is wet and eve is a friend of bob, then it is hot.\nIf carol is hungry, then carol is an enemy of alice.\nIf phone is big and george is a parent of bob, then frank is an enemy of bob.\nIf bob is a sibling of george and pencil is big, then it is hot.\nIf it is cold, then carol owns car.\nIf george dislikes frank, then eve is a friend of alice.\nIf dave is an enemy of alice, then frank is happy.\nIf alice is a friend of alice, then bob owns car.\nIf alice owns pencil, then bob is a friend of frank.\nIf alice likes george and eve is a sibling of george and alice is happy, then eve is tall.\nIf ball is big, then george dislikes bob.\nIf alice is an enemy of alice, then it is cold.\n\nAnd the following facts:\nit is hot.\nbob is a friend of alice.\ncarol is happy.\neve dislikes apple.\ngeorge likes car.\nalice likes book.\nfrank dislikes george.\ngeorge is a sibling of bob.\ncarol is a sibling of frank.\nfrank owns pencil.\ncarol is a parent of alice.\nalice is an enemy of eve.\n\nQUESTION:\nIs dave owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "hot :- hot.\nowns(bob,apple) :- hot.\nlikes(carol,ball) :- owns(bob,apple).\nenemy(eve,alice) :- likes(carol,ball).\nsibling(dave,dave) :- enemy(eve,alice).\ndislikes(bob,pencil) :- sibling(dave,dave).\nhappy(bob) :- wet(ball), friend(bob,george), hungry(george).\nhot :- wet(phone), friend(eve,bob).\nenemy(carol,alice) :- hungry(carol).\nenemy(frank,bob) :- big(phone), parent(george,bob).\nhot :- sibling(bob,george), big(pencil).\nowns(carol,car) :- cold.\nfriend(eve,alice) :- dislikes(george,frank).\nhappy(frank) :- enemy(dave,alice).\nowns(bob,car) :- friend(alice,alice).\nfriend(bob,frank) :- owns(alice,pencil).\ntall(eve) :- likes(alice,george), sibling(eve,george), happy(alice).\ndislikes(george,bob) :- big(ball).\ncold :- enemy(alice,alice).\nfriend(bob,alice).\nhappy(carol).\ndislikes(eve,apple).\nlikes(george,car).\nlikes(alice,book).\ndislikes(frank,george).\nsibling(george,bob).\nsibling(carol,frank).\nowns(frank,pencil).\nparent(carol,alice).\nenemy(alice,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is hot.\nIf it is hot, then bob owns apple.\nIf bob owns apple, then carol likes ball.\nIf carol likes ball, then eve is an enemy of alice.\nIf eve is an enemy of alice, then dave is a sibling of dave.\nIf dave is a sibling of dave, then bob dislikes pencil.\nIf ball is wet and bob is a friend of george and george is hungry, then bob is happy.\nIf phone is wet and eve is a friend of bob, then it is hot.\nIf carol is hungry, then carol is an enemy of alice.\nIf phone is big and george is a parent of bob, then frank is an enemy of bob.\nIf bob is a sibling of george and pencil is big, then it is hot.\nIf it is cold, then carol owns car.\nIf george dislikes frank, then eve is a friend of alice.\nIf dave is an enemy of alice, then frank is happy.\nIf alice is a friend of alice, then bob owns car.\nIf alice owns pencil, then bob is a friend of frank.\nIf alice likes george and eve is a sibling of george and alice is happy, then eve is tall.\nIf ball is big, then george dislikes bob.\nIf alice is an enemy of alice, then it is cold.\n\nAnd the following facts:\nit is hot.\nbob is a friend of alice.\ncarol is happy.\neve dislikes apple.\ngeorge likes car.\nalice likes book.\nfrank dislikes george.\ngeorge is a sibling of bob.\ncarol is a sibling of frank.\nfrank owns pencil.\ncarol is a parent of alice.\nalice is an enemy of eve.\n\nOBSERVATION: bob dislikes pencil is true.\n\nQUESTION:\nCould it is hot be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(frank,george).",
    "c": "hot :- hot.\nowns(bob,apple) :- hot.\nlikes(carol,ball) :- owns(bob,apple).\nenemy(eve,alice) :- likes(carol,ball).\nsibling(dave,dave) :- enemy(eve,alice).\ndislikes(bob,pencil) :- sibling(dave,dave).\nhappy(bob) :- wet(ball), friend(bob,george), hungry(george).\nhot :- wet(phone), friend(eve,bob).\nenemy(carol,alice) :- hungry(carol).\nenemy(frank,bob) :- big(phone), parent(george,bob).\nhot :- sibling(bob,george), big(pencil).\nowns(carol,car) :- cold.\nfriend(eve,alice) :- dislikes(george,frank).\nhappy(frank) :- enemy(dave,alice).\nowns(bob,car) :- friend(alice,alice).\nfriend(bob,frank) :- owns(alice,pencil).\ntall(eve) :- likes(alice,george), sibling(eve,george), happy(alice).\ndislikes(george,bob) :- big(ball).\ncold :- enemy(alice,alice).\nhot.\nfriend(bob,alice).\nhappy(carol).\ndislikes(eve,apple).\nlikes(george,car).\nlikes(alice,book).\nsibling(george,bob).\nsibling(carol,frank).\nowns(frank,pencil).\nparent(carol,alice).\nenemy(alice,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is hot.\nIf it is hot, then bob owns apple.\nIf bob owns apple, then carol likes ball.\nIf carol likes ball, then eve is an enemy of alice.\nIf eve is an enemy of alice, then dave is a sibling of dave.\nIf dave is a sibling of dave, then bob dislikes pencil.\nIf ball is wet and bob is a friend of george and george is hungry, then bob is happy.\nIf phone is wet and eve is a friend of bob, then it is hot.\nIf carol is hungry, then carol is an enemy of alice.\nIf phone is big and george is a parent of bob, then frank is an enemy of bob.\nIf bob is a sibling of george and pencil is big, then it is hot.\nIf it is cold, then carol owns car.\nIf george dislikes frank, then eve is a friend of alice.\nIf dave is an enemy of alice, then frank is happy.\nIf alice is a friend of alice, then bob owns car.\nIf alice owns pencil, then bob is a friend of frank.\nIf alice likes george and eve is a sibling of george and alice is happy, then eve is tall.\nIf ball is big, then george dislikes bob.\nIf alice is an enemy of alice, then it is cold.\n\nAnd the following facts:\nit is hot.\nbob is a friend of alice.\ncarol is happy.\neve dislikes apple.\ngeorge likes car.\nalice likes book.\nfrank dislikes george.\ngeorge is a sibling of bob.\ncarol is a sibling of frank.\nfrank owns pencil.\ncarol is a parent of alice.\nalice is an enemy of eve.\n\nOBSERVATION: bob dislikes pencil is true.\n\nQUESTION:\nCould frank dislikes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(frank,pencil).",
    "c": "hot :- hot.\nowns(bob,apple) :- hot.\nlikes(carol,ball) :- owns(bob,apple).\nenemy(eve,alice) :- likes(carol,ball).\nsibling(dave,dave) :- enemy(eve,alice).\ndislikes(bob,pencil) :- sibling(dave,dave).\nhappy(bob) :- wet(ball), friend(bob,george), hungry(george).\nhot :- wet(phone), friend(eve,bob).\nenemy(carol,alice) :- hungry(carol).\nenemy(frank,bob) :- big(phone), parent(george,bob).\nhot :- sibling(bob,george), big(pencil).\nowns(carol,car) :- cold.\nfriend(eve,alice) :- dislikes(george,frank).\nhappy(frank) :- enemy(dave,alice).\nowns(bob,car) :- friend(alice,alice).\nfriend(bob,frank) :- owns(alice,pencil).\ntall(eve) :- likes(alice,george), sibling(eve,george), happy(alice).\ndislikes(george,bob) :- big(ball).\ncold :- enemy(alice,alice).\nhot.\nfriend(bob,alice).\nhappy(carol).\ndislikes(eve,apple).\nlikes(george,car).\nlikes(alice,book).\ndislikes(frank,george).\nsibling(george,bob).\nsibling(carol,frank).\nparent(carol,alice).\nenemy(alice,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is hot.\nIf it is hot, then bob owns apple.\nIf bob owns apple, then carol likes ball.\nIf carol likes ball, then eve is an enemy of alice.\nIf eve is an enemy of alice, then dave is a sibling of dave.\nIf dave is a sibling of dave, then bob dislikes pencil.\nIf ball is wet and bob is a friend of george and george is hungry, then bob is happy.\nIf phone is wet and eve is a friend of bob, then it is hot.\nIf carol is hungry, then carol is an enemy of alice.\nIf phone is big and george is a parent of bob, then frank is an enemy of bob.\nIf bob is a sibling of george and pencil is big, then it is hot.\nIf it is cold, then carol owns car.\nIf george dislikes frank, then eve is a friend of alice.\nIf dave is an enemy of alice, then frank is happy.\nIf alice is a friend of alice, then bob owns car.\nIf alice owns pencil, then bob is a friend of frank.\nIf alice likes george and eve is a sibling of george and alice is happy, then eve is tall.\nIf ball is big, then george dislikes bob.\nIf alice is an enemy of alice, then it is cold.\n\nAnd the following facts:\nit is hot.\nbob is a friend of alice.\ncarol is happy.\neve dislikes apple.\ngeorge likes car.\nalice likes book.\nfrank dislikes george.\ngeorge is a sibling of bob.\ncarol is a sibling of frank.\nfrank owns pencil.\ncarol is a parent of alice.\nalice is an enemy of eve.\n\nOBSERVATION: bob dislikes pencil is true.\n\nQUESTION:\nCould frank owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hungry(dave).",
    "c": "hungry(eve) :- big(book).\nparent(bob,bob) :- hungry(eve).\ndislikes(eve,bob) :- parent(bob,bob).\nenemy(alice,alice) :- dislikes(eve,bob).\nhungry(dave) :- enemy(alice,alice).\nsibling(george,bob) :- hungry(dave).\nhungry(carol) :- sibling(george,bob).\nowns(alice,car) :- hungry(carol).\nfriend(frank,george) :- friend(alice,alice).\nfriend(frank,george) :- enemy(bob,bob).\ndislikes(carol,car) :- enemy(bob,carol).\nwet(apple) :- friend(frank,george).\nwet(pencil) :- friend(eve,dave), wet(ball).\nowns(frank,ball) :- sibling(bob,frank).\nowns(frank,apple) :- sad(george), small(book), owns(dave,phone).\nhot :- hot, hot, hot.\nsunny :- sunny.\ndislikes(alice,eve) :- dislikes(bob,phone), sibling(carol,frank), enemy(bob,alice).\nhappy(frank) :- happy(frank), sad(carol), hot.\nbig(book).\nenemy(dave,carol).\nhungry(eve).\nenemy(bob,eve).\nsmall(apple).\nfriend(carol,george).\nhungry(frank).\ndislikes(alice,dave).\nsibling(alice,frank).\nfriend(dave,bob).\nenemy(dave,bob).\nfriend(carol,frank).",
    "natural language": "You are given the following information:\nIf book is big, then eve is hungry.\nIf eve is hungry, then bob is a parent of bob.\nIf bob is a parent of bob, then eve dislikes bob.\nIf eve dislikes bob, then alice is an enemy of alice.\nIf alice is an enemy of alice, then dave is hungry.\nIf dave is hungry, then george is a sibling of bob.\nIf george is a sibling of bob, then carol is hungry.\nIf carol is hungry, then alice owns car.\nIf alice is a friend of alice, then frank is a friend of george.\nIf bob is an enemy of bob, then frank is a friend of george.\nIf bob is an enemy of carol, then carol dislikes car.\nIf frank is a friend of george, then apple is wet.\nIf eve is a friend of dave and ball is wet, then pencil is wet.\nIf bob is a sibling of frank, then frank owns ball.\nIf george is sad and book is small and dave owns phone, then frank owns apple.\nIf it is hot and it is hot and it is hot, then it is hot.\nIf it is sunny, then it is sunny.\nIf bob dislikes phone and carol is a sibling of frank and bob is an enemy of alice, then alice dislikes eve.\nIf frank is happy and carol is sad and it is hot, then frank is happy.\n\nAnd the following facts:\nbook is big.\ndave is an enemy of carol.\neve is hungry.\nbob is an enemy of eve.\napple is small.\ncarol is a friend of george.\nfrank is hungry.\nalice dislikes dave.\nalice is a sibling of frank.\ndave is a friend of bob.\ndave is an enemy of bob.\ncarol is a friend of frank.\n\nQUESTION:\nIs dave is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,frank).",
    "c": "hungry(eve) :- big(book).\nparent(bob,bob) :- hungry(eve).\ndislikes(eve,bob) :- parent(bob,bob).\nenemy(alice,alice) :- dislikes(eve,bob).\nhungry(dave) :- enemy(alice,alice).\nsibling(george,bob) :- hungry(dave).\nhungry(carol) :- sibling(george,bob).\nowns(alice,car) :- hungry(carol).\nfriend(frank,george) :- friend(alice,alice).\nfriend(frank,george) :- enemy(bob,bob).\ndislikes(carol,car) :- enemy(bob,carol).\nwet(apple) :- friend(frank,george).\nwet(pencil) :- friend(eve,dave), wet(ball).\nowns(frank,ball) :- sibling(bob,frank).\nowns(frank,apple) :- sad(george), small(book), owns(dave,phone).\nhot :- hot, hot, hot.\nsunny :- sunny.\ndislikes(alice,eve) :- dislikes(bob,phone), sibling(carol,frank), enemy(bob,alice).\nhappy(frank) :- happy(frank), sad(carol), hot.\nbig(book).\nenemy(dave,carol).\nhungry(eve).\nenemy(bob,eve).\nsmall(apple).\nfriend(carol,george).\nhungry(frank).\ndislikes(alice,dave).\nsibling(alice,frank).\nfriend(dave,bob).\nenemy(dave,bob).\nfriend(carol,frank).",
    "natural language": "You are given the following information:\nIf book is big, then eve is hungry.\nIf eve is hungry, then bob is a parent of bob.\nIf bob is a parent of bob, then eve dislikes bob.\nIf eve dislikes bob, then alice is an enemy of alice.\nIf alice is an enemy of alice, then dave is hungry.\nIf dave is hungry, then george is a sibling of bob.\nIf george is a sibling of bob, then carol is hungry.\nIf carol is hungry, then alice owns car.\nIf alice is a friend of alice, then frank is a friend of george.\nIf bob is an enemy of bob, then frank is a friend of george.\nIf bob is an enemy of carol, then carol dislikes car.\nIf frank is a friend of george, then apple is wet.\nIf eve is a friend of dave and ball is wet, then pencil is wet.\nIf bob is a sibling of frank, then frank owns ball.\nIf george is sad and book is small and dave owns phone, then frank owns apple.\nIf it is hot and it is hot and it is hot, then it is hot.\nIf it is sunny, then it is sunny.\nIf bob dislikes phone and carol is a sibling of frank and bob is an enemy of alice, then alice dislikes eve.\nIf frank is happy and carol is sad and it is hot, then frank is happy.\n\nAnd the following facts:\nbook is big.\ndave is an enemy of carol.\neve is hungry.\nbob is an enemy of eve.\napple is small.\ncarol is a friend of george.\nfrank is hungry.\nalice dislikes dave.\nalice is a sibling of frank.\ndave is a friend of bob.\ndave is an enemy of bob.\ncarol is a friend of frank.\n\nQUESTION:\nIs alice is a sibling of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,bob).",
    "c": "hungry(eve) :- big(book).\nparent(bob,bob) :- hungry(eve).\ndislikes(eve,bob) :- parent(bob,bob).\nenemy(alice,alice) :- dislikes(eve,bob).\nhungry(dave) :- enemy(alice,alice).\nsibling(george,bob) :- hungry(dave).\nhungry(carol) :- sibling(george,bob).\nowns(alice,car) :- hungry(carol).\nfriend(frank,george) :- friend(alice,alice).\nfriend(frank,george) :- enemy(bob,bob).\ndislikes(carol,car) :- enemy(bob,carol).\nwet(apple) :- friend(frank,george).\nwet(pencil) :- friend(eve,dave), wet(ball).\nowns(frank,ball) :- sibling(bob,frank).\nowns(frank,apple) :- sad(george), small(book), owns(dave,phone).\nhot :- hot, hot, hot.\nsunny :- sunny.\ndislikes(alice,eve) :- dislikes(bob,phone), sibling(carol,frank), enemy(bob,alice).\nhappy(frank) :- happy(frank), sad(carol), hot.\nbig(book).\nenemy(dave,carol).\nhungry(eve).\nenemy(bob,eve).\nsmall(apple).\nfriend(carol,george).\nhungry(frank).\ndislikes(alice,dave).\nsibling(alice,frank).\nfriend(dave,bob).\nenemy(dave,bob).\nfriend(carol,frank).",
    "natural language": "You are given the following information:\nIf book is big, then eve is hungry.\nIf eve is hungry, then bob is a parent of bob.\nIf bob is a parent of bob, then eve dislikes bob.\nIf eve dislikes bob, then alice is an enemy of alice.\nIf alice is an enemy of alice, then dave is hungry.\nIf dave is hungry, then george is a sibling of bob.\nIf george is a sibling of bob, then carol is hungry.\nIf carol is hungry, then alice owns car.\nIf alice is a friend of alice, then frank is a friend of george.\nIf bob is an enemy of bob, then frank is a friend of george.\nIf bob is an enemy of carol, then carol dislikes car.\nIf frank is a friend of george, then apple is wet.\nIf eve is a friend of dave and ball is wet, then pencil is wet.\nIf bob is a sibling of frank, then frank owns ball.\nIf george is sad and book is small and dave owns phone, then frank owns apple.\nIf it is hot and it is hot and it is hot, then it is hot.\nIf it is sunny, then it is sunny.\nIf bob dislikes phone and carol is a sibling of frank and bob is an enemy of alice, then alice dislikes eve.\nIf frank is happy and carol is sad and it is hot, then frank is happy.\n\nAnd the following facts:\nbook is big.\ndave is an enemy of carol.\neve is hungry.\nbob is an enemy of eve.\napple is small.\ncarol is a friend of george.\nfrank is hungry.\nalice dislikes dave.\nalice is a sibling of frank.\ndave is a friend of bob.\ndave is an enemy of bob.\ncarol is a friend of frank.\n\nQUESTION:\nIs dave is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,phone).",
    "c": "hungry(eve) :- big(book).\nparent(bob,bob) :- hungry(eve).\ndislikes(eve,bob) :- parent(bob,bob).\nenemy(alice,alice) :- dislikes(eve,bob).\nhungry(dave) :- enemy(alice,alice).\nsibling(george,bob) :- hungry(dave).\nhungry(carol) :- sibling(george,bob).\nowns(alice,car) :- hungry(carol).\nfriend(frank,george) :- friend(alice,alice).\nfriend(frank,george) :- enemy(bob,bob).\ndislikes(carol,car) :- enemy(bob,carol).\nwet(apple) :- friend(frank,george).\nwet(pencil) :- friend(eve,dave), wet(ball).\nowns(frank,ball) :- sibling(bob,frank).\nowns(frank,apple) :- sad(george), small(book), owns(dave,phone).\nhot :- hot, hot, hot.\nsunny :- sunny.\ndislikes(alice,eve) :- dislikes(bob,phone), sibling(carol,frank), enemy(bob,alice).\nhappy(frank) :- happy(frank), sad(carol), hot.\nbig(book).\nenemy(dave,carol).\nhungry(eve).\nenemy(bob,eve).\nsmall(apple).\nfriend(carol,george).\nhungry(frank).\ndislikes(alice,dave).\nsibling(alice,frank).\nfriend(dave,bob).\nenemy(dave,bob).\nfriend(carol,frank).",
    "natural language": "You are given the following information:\nIf book is big, then eve is hungry.\nIf eve is hungry, then bob is a parent of bob.\nIf bob is a parent of bob, then eve dislikes bob.\nIf eve dislikes bob, then alice is an enemy of alice.\nIf alice is an enemy of alice, then dave is hungry.\nIf dave is hungry, then george is a sibling of bob.\nIf george is a sibling of bob, then carol is hungry.\nIf carol is hungry, then alice owns car.\nIf alice is a friend of alice, then frank is a friend of george.\nIf bob is an enemy of bob, then frank is a friend of george.\nIf bob is an enemy of carol, then carol dislikes car.\nIf frank is a friend of george, then apple is wet.\nIf eve is a friend of dave and ball is wet, then pencil is wet.\nIf bob is a sibling of frank, then frank owns ball.\nIf george is sad and book is small and dave owns phone, then frank owns apple.\nIf it is hot and it is hot and it is hot, then it is hot.\nIf it is sunny, then it is sunny.\nIf bob dislikes phone and carol is a sibling of frank and bob is an enemy of alice, then alice dislikes eve.\nIf frank is happy and carol is sad and it is hot, then frank is happy.\n\nAnd the following facts:\nbook is big.\ndave is an enemy of carol.\neve is hungry.\nbob is an enemy of eve.\napple is small.\ncarol is a friend of george.\nfrank is hungry.\nalice dislikes dave.\nalice is a sibling of frank.\ndave is a friend of bob.\ndave is an enemy of bob.\ncarol is a friend of frank.\n\nQUESTION:\nIs carol dislikes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,bob).",
    "c": "hungry(eve) :- big(book).\nparent(bob,bob) :- hungry(eve).\ndislikes(eve,bob) :- parent(bob,bob).\nenemy(alice,alice) :- dislikes(eve,bob).\nhungry(dave) :- enemy(alice,alice).\nsibling(george,bob) :- hungry(dave).\nhungry(carol) :- sibling(george,bob).\nowns(alice,car) :- hungry(carol).\nfriend(frank,george) :- friend(alice,alice).\nfriend(frank,george) :- enemy(bob,bob).\ndislikes(carol,car) :- enemy(bob,carol).\nwet(apple) :- friend(frank,george).\nwet(pencil) :- friend(eve,dave), wet(ball).\nowns(frank,ball) :- sibling(bob,frank).\nowns(frank,apple) :- sad(george), small(book), owns(dave,phone).\nhot :- hot, hot, hot.\nsunny :- sunny.\ndislikes(alice,eve) :- dislikes(bob,phone), sibling(carol,frank), enemy(bob,alice).\nhappy(frank) :- happy(frank), sad(carol), hot.\nbig(book).\nenemy(dave,carol).\nhungry(eve).\nenemy(bob,eve).\nsmall(apple).\nfriend(carol,george).\nhungry(frank).\ndislikes(alice,dave).\nsibling(alice,frank).\nfriend(dave,bob).\nenemy(dave,bob).\nfriend(carol,frank).",
    "natural language": "You are given the following information:\nIf book is big, then eve is hungry.\nIf eve is hungry, then bob is a parent of bob.\nIf bob is a parent of bob, then eve dislikes bob.\nIf eve dislikes bob, then alice is an enemy of alice.\nIf alice is an enemy of alice, then dave is hungry.\nIf dave is hungry, then george is a sibling of bob.\nIf george is a sibling of bob, then carol is hungry.\nIf carol is hungry, then alice owns car.\nIf alice is a friend of alice, then frank is a friend of george.\nIf bob is an enemy of bob, then frank is a friend of george.\nIf bob is an enemy of carol, then carol dislikes car.\nIf frank is a friend of george, then apple is wet.\nIf eve is a friend of dave and ball is wet, then pencil is wet.\nIf bob is a sibling of frank, then frank owns ball.\nIf george is sad and book is small and dave owns phone, then frank owns apple.\nIf it is hot and it is hot and it is hot, then it is hot.\nIf it is sunny, then it is sunny.\nIf bob dislikes phone and carol is a sibling of frank and bob is an enemy of alice, then alice dislikes eve.\nIf frank is happy and carol is sad and it is hot, then frank is happy.\n\nAnd the following facts:\nbook is big.\ndave is an enemy of carol.\neve is hungry.\nbob is an enemy of eve.\napple is small.\ncarol is a friend of george.\nfrank is hungry.\nalice dislikes dave.\nalice is a sibling of frank.\ndave is a friend of bob.\ndave is an enemy of bob.\ncarol is a friend of frank.\n\nQUESTION:\nIs frank dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "hungry(eve) :- big(book).\nparent(bob,bob) :- hungry(eve).\ndislikes(eve,bob) :- parent(bob,bob).\nenemy(alice,alice) :- dislikes(eve,bob).\nhungry(dave) :- enemy(alice,alice).\nsibling(george,bob) :- hungry(dave).\nhungry(carol) :- sibling(george,bob).\nowns(alice,car) :- hungry(carol).\nfriend(frank,george) :- friend(alice,alice).\nfriend(frank,george) :- enemy(bob,bob).\ndislikes(carol,car) :- enemy(bob,carol).\nwet(apple) :- friend(frank,george).\nwet(pencil) :- friend(eve,dave), wet(ball).\nowns(frank,ball) :- sibling(bob,frank).\nowns(frank,apple) :- sad(george), small(book), owns(dave,phone).\nhot :- hot, hot, hot.\nsunny :- sunny.\ndislikes(alice,eve) :- dislikes(bob,phone), sibling(carol,frank), enemy(bob,alice).\nhappy(frank) :- happy(frank), sad(carol), hot.\nbig(book).\nenemy(dave,carol).\nenemy(bob,eve).\nsmall(apple).\nfriend(carol,george).\nhungry(frank).\ndislikes(alice,dave).\nsibling(alice,frank).\nfriend(dave,bob).\nenemy(dave,bob).\nfriend(carol,frank).",
    "natural language": "You are given the following rules:\nIf book is big, then eve is hungry.\nIf eve is hungry, then bob is a parent of bob.\nIf bob is a parent of bob, then eve dislikes bob.\nIf eve dislikes bob, then alice is an enemy of alice.\nIf alice is an enemy of alice, then dave is hungry.\nIf dave is hungry, then george is a sibling of bob.\nIf george is a sibling of bob, then carol is hungry.\nIf carol is hungry, then alice owns car.\nIf alice is a friend of alice, then frank is a friend of george.\nIf bob is an enemy of bob, then frank is a friend of george.\nIf bob is an enemy of carol, then carol dislikes car.\nIf frank is a friend of george, then apple is wet.\nIf eve is a friend of dave and ball is wet, then pencil is wet.\nIf bob is a sibling of frank, then frank owns ball.\nIf george is sad and book is small and dave owns phone, then frank owns apple.\nIf it is hot and it is hot and it is hot, then it is hot.\nIf it is sunny, then it is sunny.\nIf bob dislikes phone and carol is a sibling of frank and bob is an enemy of alice, then alice dislikes eve.\nIf frank is happy and carol is sad and it is hot, then frank is happy.\n\nAnd the following facts:\nbook is big.\ndave is an enemy of carol.\neve is hungry.\nbob is an enemy of eve.\napple is small.\ncarol is a friend of george.\nfrank is hungry.\nalice dislikes dave.\nalice is a sibling of frank.\ndave is a friend of bob.\ndave is an enemy of bob.\ncarol is a friend of frank.\n\nOBSERVATION: alice owns car is true.\n\nQUESTION:\nCould eve is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,dave).",
    "c": "hungry(eve) :- big(book).\nparent(bob,bob) :- hungry(eve).\ndislikes(eve,bob) :- parent(bob,bob).\nenemy(alice,alice) :- dislikes(eve,bob).\nhungry(dave) :- enemy(alice,alice).\nsibling(george,bob) :- hungry(dave).\nhungry(carol) :- sibling(george,bob).\nowns(alice,car) :- hungry(carol).\nfriend(frank,george) :- friend(alice,alice).\nfriend(frank,george) :- enemy(bob,bob).\ndislikes(carol,car) :- enemy(bob,carol).\nwet(apple) :- friend(frank,george).\nwet(pencil) :- friend(eve,dave), wet(ball).\nowns(frank,ball) :- sibling(bob,frank).\nowns(frank,apple) :- sad(george), small(book), owns(dave,phone).\nhot :- hot, hot, hot.\nsunny :- sunny.\ndislikes(alice,eve) :- dislikes(bob,phone), sibling(carol,frank), enemy(bob,alice).\nhappy(frank) :- happy(frank), sad(carol), hot.\nbig(book).\nenemy(dave,carol).\nhungry(eve).\nenemy(bob,eve).\nsmall(apple).\nfriend(carol,george).\nhungry(frank).\nsibling(alice,frank).\nfriend(dave,bob).\nenemy(dave,bob).\nfriend(carol,frank).",
    "natural language": "You are given the following rules:\nIf book is big, then eve is hungry.\nIf eve is hungry, then bob is a parent of bob.\nIf bob is a parent of bob, then eve dislikes bob.\nIf eve dislikes bob, then alice is an enemy of alice.\nIf alice is an enemy of alice, then dave is hungry.\nIf dave is hungry, then george is a sibling of bob.\nIf george is a sibling of bob, then carol is hungry.\nIf carol is hungry, then alice owns car.\nIf alice is a friend of alice, then frank is a friend of george.\nIf bob is an enemy of bob, then frank is a friend of george.\nIf bob is an enemy of carol, then carol dislikes car.\nIf frank is a friend of george, then apple is wet.\nIf eve is a friend of dave and ball is wet, then pencil is wet.\nIf bob is a sibling of frank, then frank owns ball.\nIf george is sad and book is small and dave owns phone, then frank owns apple.\nIf it is hot and it is hot and it is hot, then it is hot.\nIf it is sunny, then it is sunny.\nIf bob dislikes phone and carol is a sibling of frank and bob is an enemy of alice, then alice dislikes eve.\nIf frank is happy and carol is sad and it is hot, then frank is happy.\n\nAnd the following facts:\nbook is big.\ndave is an enemy of carol.\neve is hungry.\nbob is an enemy of eve.\napple is small.\ncarol is a friend of george.\nfrank is hungry.\nalice dislikes dave.\nalice is a sibling of frank.\ndave is a friend of bob.\ndave is an enemy of bob.\ncarol is a friend of frank.\n\nOBSERVATION: alice owns car is true.\n\nQUESTION:\nCould alice dislikes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,frank).",
    "c": "hungry(eve) :- big(book).\nparent(bob,bob) :- hungry(eve).\ndislikes(eve,bob) :- parent(bob,bob).\nenemy(alice,alice) :- dislikes(eve,bob).\nhungry(dave) :- enemy(alice,alice).\nsibling(george,bob) :- hungry(dave).\nhungry(carol) :- sibling(george,bob).\nowns(alice,car) :- hungry(carol).\nfriend(frank,george) :- friend(alice,alice).\nfriend(frank,george) :- enemy(bob,bob).\ndislikes(carol,car) :- enemy(bob,carol).\nwet(apple) :- friend(frank,george).\nwet(pencil) :- friend(eve,dave), wet(ball).\nowns(frank,ball) :- sibling(bob,frank).\nowns(frank,apple) :- sad(george), small(book), owns(dave,phone).\nhot :- hot, hot, hot.\nsunny :- sunny.\ndislikes(alice,eve) :- dislikes(bob,phone), sibling(carol,frank), enemy(bob,alice).\nhappy(frank) :- happy(frank), sad(carol), hot.\nbig(book).\nenemy(dave,carol).\nhungry(eve).\nenemy(bob,eve).\nsmall(apple).\nfriend(carol,george).\nhungry(frank).\ndislikes(alice,dave).\nfriend(dave,bob).\nenemy(dave,bob).\nfriend(carol,frank).",
    "natural language": "You are given the following rules:\nIf book is big, then eve is hungry.\nIf eve is hungry, then bob is a parent of bob.\nIf bob is a parent of bob, then eve dislikes bob.\nIf eve dislikes bob, then alice is an enemy of alice.\nIf alice is an enemy of alice, then dave is hungry.\nIf dave is hungry, then george is a sibling of bob.\nIf george is a sibling of bob, then carol is hungry.\nIf carol is hungry, then alice owns car.\nIf alice is a friend of alice, then frank is a friend of george.\nIf bob is an enemy of bob, then frank is a friend of george.\nIf bob is an enemy of carol, then carol dislikes car.\nIf frank is a friend of george, then apple is wet.\nIf eve is a friend of dave and ball is wet, then pencil is wet.\nIf bob is a sibling of frank, then frank owns ball.\nIf george is sad and book is small and dave owns phone, then frank owns apple.\nIf it is hot and it is hot and it is hot, then it is hot.\nIf it is sunny, then it is sunny.\nIf bob dislikes phone and carol is a sibling of frank and bob is an enemy of alice, then alice dislikes eve.\nIf frank is happy and carol is sad and it is hot, then frank is happy.\n\nAnd the following facts:\nbook is big.\ndave is an enemy of carol.\neve is hungry.\nbob is an enemy of eve.\napple is small.\ncarol is a friend of george.\nfrank is hungry.\nalice dislikes dave.\nalice is a sibling of frank.\ndave is a friend of bob.\ndave is an enemy of bob.\ncarol is a friend of frank.\n\nOBSERVATION: alice owns car is true.\n\nQUESTION:\nCould alice is a sibling of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(carol,alice).",
    "c": "sad(bob) :- owns(george,car).\nlikes(eve,phone) :- sad(bob).\nhungry(bob) :- likes(eve,phone).\nhot :- hungry(bob).\ntall(alice) :- hot.\nbig(ball) :- tall(alice).\nparent(alice,frank) :- big(ball).\nwet(ball) :- parent(alice,frank).\nwet(phone) :- owns(carol,ball).\nwet(car) :- friend(frank,bob), happy(alice), sibling(dave,bob).\nlikes(frank,ball) :- hungry(frank).\ncold :- owns(eve,pencil).\nsad(bob) :- happy(frank), likes(eve,george).\nlikes(bob,ball) :- parent(george,frank), sibling(bob,bob), hot.\ntall(george) :- big(ball), small(apple), sunny.\nsad(bob) :- hot.\ncold :- small(pencil), sibling(dave,bob).\ntall(bob) :- likes(bob,apple), hungry(eve).\ncold :- hot, tall(eve).\nowns(george,car).\ntall(eve).\nowns(dave,book).\nowns(frank,car).\nsibling(alice,carol).\nlikes(alice,eve).\nfriend(george,bob).\nparent(frank,bob).\nbig(car).\nlikes(carol,alice).\nsad(bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then bob is sad.\nIf bob is sad, then eve likes phone.\nIf eve likes phone, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then alice is a parent of frank.\nIf alice is a parent of frank, then ball is wet.\nIf carol owns ball, then phone is wet.\nIf frank is a friend of bob and alice is happy and dave is a sibling of bob, then car is wet.\nIf frank is hungry, then frank likes ball.\nIf eve owns pencil, then it is cold.\nIf frank is happy and eve likes george, then bob is sad.\nIf george is a parent of frank and bob is a sibling of bob and it is hot, then bob likes ball.\nIf ball is big and apple is small and it is sunny, then george is tall.\nIf it is hot, then bob is sad.\nIf pencil is small and dave is a sibling of bob, then it is cold.\nIf bob likes apple and eve is hungry, then bob is tall.\nIf it is hot and eve is tall, then it is cold.\n\nAnd the following facts:\ngeorge owns car.\neve is tall.\ndave owns book.\nfrank owns car.\nalice is a sibling of carol.\nalice likes eve.\ngeorge is a friend of bob.\nfrank is a parent of bob.\ncar is big.\ncarol likes alice.\nbob is sad.\ngeorge is a parent of carol.\n\nQUESTION:\nIs carol likes alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,frank).",
    "c": "sad(bob) :- owns(george,car).\nlikes(eve,phone) :- sad(bob).\nhungry(bob) :- likes(eve,phone).\nhot :- hungry(bob).\ntall(alice) :- hot.\nbig(ball) :- tall(alice).\nparent(alice,frank) :- big(ball).\nwet(ball) :- parent(alice,frank).\nwet(phone) :- owns(carol,ball).\nwet(car) :- friend(frank,bob), happy(alice), sibling(dave,bob).\nlikes(frank,ball) :- hungry(frank).\ncold :- owns(eve,pencil).\nsad(bob) :- happy(frank), likes(eve,george).\nlikes(bob,ball) :- parent(george,frank), sibling(bob,bob), hot.\ntall(george) :- big(ball), small(apple), sunny.\nsad(bob) :- hot.\ncold :- small(pencil), sibling(dave,bob).\ntall(bob) :- likes(bob,apple), hungry(eve).\ncold :- hot, tall(eve).\nowns(george,car).\ntall(eve).\nowns(dave,book).\nowns(frank,car).\nsibling(alice,carol).\nlikes(alice,eve).\nfriend(george,bob).\nparent(frank,bob).\nbig(car).\nlikes(carol,alice).\nsad(bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then bob is sad.\nIf bob is sad, then eve likes phone.\nIf eve likes phone, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then alice is a parent of frank.\nIf alice is a parent of frank, then ball is wet.\nIf carol owns ball, then phone is wet.\nIf frank is a friend of bob and alice is happy and dave is a sibling of bob, then car is wet.\nIf frank is hungry, then frank likes ball.\nIf eve owns pencil, then it is cold.\nIf frank is happy and eve likes george, then bob is sad.\nIf george is a parent of frank and bob is a sibling of bob and it is hot, then bob likes ball.\nIf ball is big and apple is small and it is sunny, then george is tall.\nIf it is hot, then bob is sad.\nIf pencil is small and dave is a sibling of bob, then it is cold.\nIf bob likes apple and eve is hungry, then bob is tall.\nIf it is hot and eve is tall, then it is cold.\n\nAnd the following facts:\ngeorge owns car.\neve is tall.\ndave owns book.\nfrank owns car.\nalice is a sibling of carol.\nalice likes eve.\ngeorge is a friend of bob.\nfrank is a parent of bob.\ncar is big.\ncarol likes alice.\nbob is sad.\ngeorge is a parent of carol.\n\nQUESTION:\nIs alice is a parent of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "sad(bob) :- owns(george,car).\nlikes(eve,phone) :- sad(bob).\nhungry(bob) :- likes(eve,phone).\nhot :- hungry(bob).\ntall(alice) :- hot.\nbig(ball) :- tall(alice).\nparent(alice,frank) :- big(ball).\nwet(ball) :- parent(alice,frank).\nwet(phone) :- owns(carol,ball).\nwet(car) :- friend(frank,bob), happy(alice), sibling(dave,bob).\nlikes(frank,ball) :- hungry(frank).\ncold :- owns(eve,pencil).\nsad(bob) :- happy(frank), likes(eve,george).\nlikes(bob,ball) :- parent(george,frank), sibling(bob,bob), hot.\ntall(george) :- big(ball), small(apple), sunny.\nsad(bob) :- hot.\ncold :- small(pencil), sibling(dave,bob).\ntall(bob) :- likes(bob,apple), hungry(eve).\ncold :- hot, tall(eve).\nowns(george,car).\ntall(eve).\nowns(dave,book).\nowns(frank,car).\nsibling(alice,carol).\nlikes(alice,eve).\nfriend(george,bob).\nparent(frank,bob).\nbig(car).\nlikes(carol,alice).\nsad(bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then bob is sad.\nIf bob is sad, then eve likes phone.\nIf eve likes phone, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then alice is a parent of frank.\nIf alice is a parent of frank, then ball is wet.\nIf carol owns ball, then phone is wet.\nIf frank is a friend of bob and alice is happy and dave is a sibling of bob, then car is wet.\nIf frank is hungry, then frank likes ball.\nIf eve owns pencil, then it is cold.\nIf frank is happy and eve likes george, then bob is sad.\nIf george is a parent of frank and bob is a sibling of bob and it is hot, then bob likes ball.\nIf ball is big and apple is small and it is sunny, then george is tall.\nIf it is hot, then bob is sad.\nIf pencil is small and dave is a sibling of bob, then it is cold.\nIf bob likes apple and eve is hungry, then bob is tall.\nIf it is hot and eve is tall, then it is cold.\n\nAnd the following facts:\ngeorge owns car.\neve is tall.\ndave owns book.\nfrank owns car.\nalice is a sibling of carol.\nalice likes eve.\ngeorge is a friend of bob.\nfrank is a parent of bob.\ncar is big.\ncarol likes alice.\nbob is sad.\ngeorge is a parent of carol.\n\nQUESTION:\nIs ball is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,car).",
    "c": "sad(bob) :- owns(george,car).\nlikes(eve,phone) :- sad(bob).\nhungry(bob) :- likes(eve,phone).\nhot :- hungry(bob).\ntall(alice) :- hot.\nbig(ball) :- tall(alice).\nparent(alice,frank) :- big(ball).\nwet(ball) :- parent(alice,frank).\nwet(phone) :- owns(carol,ball).\nwet(car) :- friend(frank,bob), happy(alice), sibling(dave,bob).\nlikes(frank,ball) :- hungry(frank).\ncold :- owns(eve,pencil).\nsad(bob) :- happy(frank), likes(eve,george).\nlikes(bob,ball) :- parent(george,frank), sibling(bob,bob), hot.\ntall(george) :- big(ball), small(apple), sunny.\nsad(bob) :- hot.\ncold :- small(pencil), sibling(dave,bob).\ntall(bob) :- likes(bob,apple), hungry(eve).\ncold :- hot, tall(eve).\nowns(george,car).\ntall(eve).\nowns(dave,book).\nowns(frank,car).\nsibling(alice,carol).\nlikes(alice,eve).\nfriend(george,bob).\nparent(frank,bob).\nbig(car).\nlikes(carol,alice).\nsad(bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then bob is sad.\nIf bob is sad, then eve likes phone.\nIf eve likes phone, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then alice is a parent of frank.\nIf alice is a parent of frank, then ball is wet.\nIf carol owns ball, then phone is wet.\nIf frank is a friend of bob and alice is happy and dave is a sibling of bob, then car is wet.\nIf frank is hungry, then frank likes ball.\nIf eve owns pencil, then it is cold.\nIf frank is happy and eve likes george, then bob is sad.\nIf george is a parent of frank and bob is a sibling of bob and it is hot, then bob likes ball.\nIf ball is big and apple is small and it is sunny, then george is tall.\nIf it is hot, then bob is sad.\nIf pencil is small and dave is a sibling of bob, then it is cold.\nIf bob likes apple and eve is hungry, then bob is tall.\nIf it is hot and eve is tall, then it is cold.\n\nAnd the following facts:\ngeorge owns car.\neve is tall.\ndave owns book.\nfrank owns car.\nalice is a sibling of carol.\nalice likes eve.\ngeorge is a friend of bob.\nfrank is a parent of bob.\ncar is big.\ncarol likes alice.\nbob is sad.\ngeorge is a parent of carol.\n\nQUESTION:\nIs george likes car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,bob).",
    "c": "sad(bob) :- owns(george,car).\nlikes(eve,phone) :- sad(bob).\nhungry(bob) :- likes(eve,phone).\nhot :- hungry(bob).\ntall(alice) :- hot.\nbig(ball) :- tall(alice).\nparent(alice,frank) :- big(ball).\nwet(ball) :- parent(alice,frank).\nwet(phone) :- owns(carol,ball).\nwet(car) :- friend(frank,bob), happy(alice), sibling(dave,bob).\nlikes(frank,ball) :- hungry(frank).\ncold :- owns(eve,pencil).\nsad(bob) :- happy(frank), likes(eve,george).\nlikes(bob,ball) :- parent(george,frank), sibling(bob,bob), hot.\ntall(george) :- big(ball), small(apple), sunny.\nsad(bob) :- hot.\ncold :- small(pencil), sibling(dave,bob).\ntall(bob) :- likes(bob,apple), hungry(eve).\ncold :- hot, tall(eve).\nowns(george,car).\ntall(eve).\nowns(dave,book).\nowns(frank,car).\nsibling(alice,carol).\nlikes(alice,eve).\nfriend(george,bob).\nparent(frank,bob).\nbig(car).\nlikes(carol,alice).\nsad(bob).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf george owns car, then bob is sad.\nIf bob is sad, then eve likes phone.\nIf eve likes phone, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then alice is a parent of frank.\nIf alice is a parent of frank, then ball is wet.\nIf carol owns ball, then phone is wet.\nIf frank is a friend of bob and alice is happy and dave is a sibling of bob, then car is wet.\nIf frank is hungry, then frank likes ball.\nIf eve owns pencil, then it is cold.\nIf frank is happy and eve likes george, then bob is sad.\nIf george is a parent of frank and bob is a sibling of bob and it is hot, then bob likes ball.\nIf ball is big and apple is small and it is sunny, then george is tall.\nIf it is hot, then bob is sad.\nIf pencil is small and dave is a sibling of bob, then it is cold.\nIf bob likes apple and eve is hungry, then bob is tall.\nIf it is hot and eve is tall, then it is cold.\n\nAnd the following facts:\ngeorge owns car.\neve is tall.\ndave owns book.\nfrank owns car.\nalice is a sibling of carol.\nalice likes eve.\ngeorge is a friend of bob.\nfrank is a parent of bob.\ncar is big.\ncarol likes alice.\nbob is sad.\ngeorge is a parent of carol.\n\nQUESTION:\nIs alice likes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(bob).",
    "c": "sad(bob) :- owns(george,car).\nlikes(eve,phone) :- sad(bob).\nhungry(bob) :- likes(eve,phone).\nhot :- hungry(bob).\ntall(alice) :- hot.\nbig(ball) :- tall(alice).\nparent(alice,frank) :- big(ball).\nwet(ball) :- parent(alice,frank).\nwet(phone) :- owns(carol,ball).\nwet(car) :- friend(frank,bob), happy(alice), sibling(dave,bob).\nlikes(frank,ball) :- hungry(frank).\ncold :- owns(eve,pencil).\nsad(bob) :- happy(frank), likes(eve,george).\nlikes(bob,ball) :- parent(george,frank), sibling(bob,bob), hot.\ntall(george) :- big(ball), small(apple), sunny.\nsad(bob) :- hot.\ncold :- small(pencil), sibling(dave,bob).\ntall(bob) :- likes(bob,apple), hungry(eve).\ncold :- hot, tall(eve).\nowns(george,car).\ntall(eve).\nowns(dave,book).\nowns(frank,car).\nsibling(alice,carol).\nlikes(alice,eve).\nfriend(george,bob).\nparent(frank,bob).\nbig(car).\nlikes(carol,alice).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf george owns car, then bob is sad.\nIf bob is sad, then eve likes phone.\nIf eve likes phone, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then alice is a parent of frank.\nIf alice is a parent of frank, then ball is wet.\nIf carol owns ball, then phone is wet.\nIf frank is a friend of bob and alice is happy and dave is a sibling of bob, then car is wet.\nIf frank is hungry, then frank likes ball.\nIf eve owns pencil, then it is cold.\nIf frank is happy and eve likes george, then bob is sad.\nIf george is a parent of frank and bob is a sibling of bob and it is hot, then bob likes ball.\nIf ball is big and apple is small and it is sunny, then george is tall.\nIf it is hot, then bob is sad.\nIf pencil is small and dave is a sibling of bob, then it is cold.\nIf bob likes apple and eve is hungry, then bob is tall.\nIf it is hot and eve is tall, then it is cold.\n\nAnd the following facts:\ngeorge owns car.\neve is tall.\ndave owns book.\nfrank owns car.\nalice is a sibling of carol.\nalice likes eve.\ngeorge is a friend of bob.\nfrank is a parent of bob.\ncar is big.\ncarol likes alice.\nbob is sad.\ngeorge is a parent of carol.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould bob is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,carol).",
    "c": "sad(bob) :- owns(george,car).\nlikes(eve,phone) :- sad(bob).\nhungry(bob) :- likes(eve,phone).\nhot :- hungry(bob).\ntall(alice) :- hot.\nbig(ball) :- tall(alice).\nparent(alice,frank) :- big(ball).\nwet(ball) :- parent(alice,frank).\nwet(phone) :- owns(carol,ball).\nwet(car) :- friend(frank,bob), happy(alice), sibling(dave,bob).\nlikes(frank,ball) :- hungry(frank).\ncold :- owns(eve,pencil).\nsad(bob) :- happy(frank), likes(eve,george).\nlikes(bob,ball) :- parent(george,frank), sibling(bob,bob), hot.\ntall(george) :- big(ball), small(apple), sunny.\nsad(bob) :- hot.\ncold :- small(pencil), sibling(dave,bob).\ntall(bob) :- likes(bob,apple), hungry(eve).\ncold :- hot, tall(eve).\nowns(george,car).\ntall(eve).\nowns(dave,book).\nowns(frank,car).\nlikes(alice,eve).\nfriend(george,bob).\nparent(frank,bob).\nbig(car).\nlikes(carol,alice).\nsad(bob).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf george owns car, then bob is sad.\nIf bob is sad, then eve likes phone.\nIf eve likes phone, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then alice is a parent of frank.\nIf alice is a parent of frank, then ball is wet.\nIf carol owns ball, then phone is wet.\nIf frank is a friend of bob and alice is happy and dave is a sibling of bob, then car is wet.\nIf frank is hungry, then frank likes ball.\nIf eve owns pencil, then it is cold.\nIf frank is happy and eve likes george, then bob is sad.\nIf george is a parent of frank and bob is a sibling of bob and it is hot, then bob likes ball.\nIf ball is big and apple is small and it is sunny, then george is tall.\nIf it is hot, then bob is sad.\nIf pencil is small and dave is a sibling of bob, then it is cold.\nIf bob likes apple and eve is hungry, then bob is tall.\nIf it is hot and eve is tall, then it is cold.\n\nAnd the following facts:\ngeorge owns car.\neve is tall.\ndave owns book.\nfrank owns car.\nalice is a sibling of carol.\nalice likes eve.\ngeorge is a friend of bob.\nfrank is a parent of bob.\ncar is big.\ncarol likes alice.\nbob is sad.\ngeorge is a parent of carol.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould alice is a sibling of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(alice,eve).",
    "c": "sad(bob) :- owns(george,car).\nlikes(eve,phone) :- sad(bob).\nhungry(bob) :- likes(eve,phone).\nhot :- hungry(bob).\ntall(alice) :- hot.\nbig(ball) :- tall(alice).\nparent(alice,frank) :- big(ball).\nwet(ball) :- parent(alice,frank).\nwet(phone) :- owns(carol,ball).\nwet(car) :- friend(frank,bob), happy(alice), sibling(dave,bob).\nlikes(frank,ball) :- hungry(frank).\ncold :- owns(eve,pencil).\nsad(bob) :- happy(frank), likes(eve,george).\nlikes(bob,ball) :- parent(george,frank), sibling(bob,bob), hot.\ntall(george) :- big(ball), small(apple), sunny.\nsad(bob) :- hot.\ncold :- small(pencil), sibling(dave,bob).\ntall(bob) :- likes(bob,apple), hungry(eve).\ncold :- hot, tall(eve).\nowns(george,car).\ntall(eve).\nowns(dave,book).\nowns(frank,car).\nsibling(alice,carol).\nfriend(george,bob).\nparent(frank,bob).\nbig(car).\nlikes(carol,alice).\nsad(bob).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf george owns car, then bob is sad.\nIf bob is sad, then eve likes phone.\nIf eve likes phone, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then alice is a parent of frank.\nIf alice is a parent of frank, then ball is wet.\nIf carol owns ball, then phone is wet.\nIf frank is a friend of bob and alice is happy and dave is a sibling of bob, then car is wet.\nIf frank is hungry, then frank likes ball.\nIf eve owns pencil, then it is cold.\nIf frank is happy and eve likes george, then bob is sad.\nIf george is a parent of frank and bob is a sibling of bob and it is hot, then bob likes ball.\nIf ball is big and apple is small and it is sunny, then george is tall.\nIf it is hot, then bob is sad.\nIf pencil is small and dave is a sibling of bob, then it is cold.\nIf bob likes apple and eve is hungry, then bob is tall.\nIf it is hot and eve is tall, then it is cold.\n\nAnd the following facts:\ngeorge owns car.\neve is tall.\ndave owns book.\nfrank owns car.\nalice is a sibling of carol.\nalice likes eve.\ngeorge is a friend of bob.\nfrank is a parent of bob.\ncar is big.\ncarol likes alice.\nbob is sad.\ngeorge is a parent of carol.\n\nOBSERVATION: ball is wet is true.\n\nQUESTION:\nCould alice likes eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(dave,bob).",
    "c": "dislikes(george,eve) :- hungry(carol).\nhungry(alice) :- dislikes(george,eve).\nenemy(carol,dave) :- hungry(alice).\nhot :- enemy(carol,dave).\nsmall(apple) :- hot.\nenemy(eve,carol) :- small(apple).\nsmall(pencil) :- enemy(eve,carol).\nsad(carol) :- small(pencil).\nfriend(carol,bob) :- sad(carol).\nsibling(frank,dave) :- friend(carol,bob).\nsibling(dave,bob) :- hot.\nsad(frank) :- sibling(carol,frank).\nsibling(carol,alice) :- parent(carol,dave), hungry(george), big(pencil).\nsad(alice) :- small(car).\ntall(george) :- tall(carol), dislikes(bob,phone), dislikes(bob,phone).\nparent(dave,alice) :- parent(carol,carol).\nlikes(george,car) :- likes(bob,dave), likes(bob,pencil).\nbig(apple) :- big(car).\nowns(george,pencil) :- hot, owns(carol,pencil), friend(frank,alice).\nhungry(carol).\ndislikes(eve,george).\nowns(alice,phone).\nparent(george,bob).\nenemy(dave,eve).\nowns(dave,ball).\ndislikes(carol,alice).\nlikes(frank,phone).\nsibling(george,carol).\nsibling(frank,carol).\nenemy(dave,george).\ndislikes(bob,phone).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george dislikes eve.\nIf george dislikes eve, then alice is hungry.\nIf alice is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is an enemy of carol.\nIf eve is an enemy of carol, then pencil is small.\nIf pencil is small, then carol is sad.\nIf carol is sad, then carol is a friend of bob.\nIf carol is a friend of bob, then frank is a sibling of dave.\nIf it is hot, then dave is a sibling of bob.\nIf carol is a sibling of frank, then frank is sad.\nIf carol is a parent of dave and george is hungry and pencil is big, then carol is a sibling of alice.\nIf car is small, then alice is sad.\nIf carol is tall and bob dislikes phone and bob dislikes phone, then george is tall.\nIf carol is a parent of carol, then dave is a parent of alice.\nIf bob likes dave and bob likes pencil, then george likes car.\nIf car is big, then apple is big.\nIf it is hot and carol owns pencil and frank is a friend of alice, then george owns pencil.\n\nAnd the following facts:\ncarol is hungry.\neve dislikes george.\nalice owns phone.\ngeorge is a parent of bob.\ndave is an enemy of eve.\ndave owns ball.\ncarol dislikes alice.\nfrank likes phone.\ngeorge is a sibling of carol.\nfrank is a sibling of carol.\ndave is an enemy of george.\nbob dislikes phone.\n\nQUESTION:\nIs dave is a sibling of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,carol).",
    "c": "dislikes(george,eve) :- hungry(carol).\nhungry(alice) :- dislikes(george,eve).\nenemy(carol,dave) :- hungry(alice).\nhot :- enemy(carol,dave).\nsmall(apple) :- hot.\nenemy(eve,carol) :- small(apple).\nsmall(pencil) :- enemy(eve,carol).\nsad(carol) :- small(pencil).\nfriend(carol,bob) :- sad(carol).\nsibling(frank,dave) :- friend(carol,bob).\nsibling(dave,bob) :- hot.\nsad(frank) :- sibling(carol,frank).\nsibling(carol,alice) :- parent(carol,dave), hungry(george), big(pencil).\nsad(alice) :- small(car).\ntall(george) :- tall(carol), dislikes(bob,phone), dislikes(bob,phone).\nparent(dave,alice) :- parent(carol,carol).\nlikes(george,car) :- likes(bob,dave), likes(bob,pencil).\nbig(apple) :- big(car).\nowns(george,pencil) :- hot, owns(carol,pencil), friend(frank,alice).\nhungry(carol).\ndislikes(eve,george).\nowns(alice,phone).\nparent(george,bob).\nenemy(dave,eve).\nowns(dave,ball).\ndislikes(carol,alice).\nlikes(frank,phone).\nsibling(george,carol).\nsibling(frank,carol).\nenemy(dave,george).\ndislikes(bob,phone).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george dislikes eve.\nIf george dislikes eve, then alice is hungry.\nIf alice is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is an enemy of carol.\nIf eve is an enemy of carol, then pencil is small.\nIf pencil is small, then carol is sad.\nIf carol is sad, then carol is a friend of bob.\nIf carol is a friend of bob, then frank is a sibling of dave.\nIf it is hot, then dave is a sibling of bob.\nIf carol is a sibling of frank, then frank is sad.\nIf carol is a parent of dave and george is hungry and pencil is big, then carol is a sibling of alice.\nIf car is small, then alice is sad.\nIf carol is tall and bob dislikes phone and bob dislikes phone, then george is tall.\nIf carol is a parent of carol, then dave is a parent of alice.\nIf bob likes dave and bob likes pencil, then george likes car.\nIf car is big, then apple is big.\nIf it is hot and carol owns pencil and frank is a friend of alice, then george owns pencil.\n\nAnd the following facts:\ncarol is hungry.\neve dislikes george.\nalice owns phone.\ngeorge is a parent of bob.\ndave is an enemy of eve.\ndave owns ball.\ncarol dislikes alice.\nfrank likes phone.\ngeorge is a sibling of carol.\nfrank is a sibling of carol.\ndave is an enemy of george.\nbob dislikes phone.\n\nQUESTION:\nIs frank is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "dislikes(george,eve) :- hungry(carol).\nhungry(alice) :- dislikes(george,eve).\nenemy(carol,dave) :- hungry(alice).\nhot :- enemy(carol,dave).\nsmall(apple) :- hot.\nenemy(eve,carol) :- small(apple).\nsmall(pencil) :- enemy(eve,carol).\nsad(carol) :- small(pencil).\nfriend(carol,bob) :- sad(carol).\nsibling(frank,dave) :- friend(carol,bob).\nsibling(dave,bob) :- hot.\nsad(frank) :- sibling(carol,frank).\nsibling(carol,alice) :- parent(carol,dave), hungry(george), big(pencil).\nsad(alice) :- small(car).\ntall(george) :- tall(carol), dislikes(bob,phone), dislikes(bob,phone).\nparent(dave,alice) :- parent(carol,carol).\nlikes(george,car) :- likes(bob,dave), likes(bob,pencil).\nbig(apple) :- big(car).\nowns(george,pencil) :- hot, owns(carol,pencil), friend(frank,alice).\nhungry(carol).\ndislikes(eve,george).\nowns(alice,phone).\nparent(george,bob).\nenemy(dave,eve).\nowns(dave,ball).\ndislikes(carol,alice).\nlikes(frank,phone).\nsibling(george,carol).\nsibling(frank,carol).\nenemy(dave,george).\ndislikes(bob,phone).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george dislikes eve.\nIf george dislikes eve, then alice is hungry.\nIf alice is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is an enemy of carol.\nIf eve is an enemy of carol, then pencil is small.\nIf pencil is small, then carol is sad.\nIf carol is sad, then carol is a friend of bob.\nIf carol is a friend of bob, then frank is a sibling of dave.\nIf it is hot, then dave is a sibling of bob.\nIf carol is a sibling of frank, then frank is sad.\nIf carol is a parent of dave and george is hungry and pencil is big, then carol is a sibling of alice.\nIf car is small, then alice is sad.\nIf carol is tall and bob dislikes phone and bob dislikes phone, then george is tall.\nIf carol is a parent of carol, then dave is a parent of alice.\nIf bob likes dave and bob likes pencil, then george likes car.\nIf car is big, then apple is big.\nIf it is hot and carol owns pencil and frank is a friend of alice, then george owns pencil.\n\nAnd the following facts:\ncarol is hungry.\neve dislikes george.\nalice owns phone.\ngeorge is a parent of bob.\ndave is an enemy of eve.\ndave owns ball.\ncarol dislikes alice.\nfrank likes phone.\ngeorge is a sibling of carol.\nfrank is a sibling of carol.\ndave is an enemy of george.\nbob dislikes phone.\n\nQUESTION:\nIs pencil is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,alice).",
    "c": "dislikes(george,eve) :- hungry(carol).\nhungry(alice) :- dislikes(george,eve).\nenemy(carol,dave) :- hungry(alice).\nhot :- enemy(carol,dave).\nsmall(apple) :- hot.\nenemy(eve,carol) :- small(apple).\nsmall(pencil) :- enemy(eve,carol).\nsad(carol) :- small(pencil).\nfriend(carol,bob) :- sad(carol).\nsibling(frank,dave) :- friend(carol,bob).\nsibling(dave,bob) :- hot.\nsad(frank) :- sibling(carol,frank).\nsibling(carol,alice) :- parent(carol,dave), hungry(george), big(pencil).\nsad(alice) :- small(car).\ntall(george) :- tall(carol), dislikes(bob,phone), dislikes(bob,phone).\nparent(dave,alice) :- parent(carol,carol).\nlikes(george,car) :- likes(bob,dave), likes(bob,pencil).\nbig(apple) :- big(car).\nowns(george,pencil) :- hot, owns(carol,pencil), friend(frank,alice).\nhungry(carol).\ndislikes(eve,george).\nowns(alice,phone).\nparent(george,bob).\nenemy(dave,eve).\nowns(dave,ball).\ndislikes(carol,alice).\nlikes(frank,phone).\nsibling(george,carol).\nsibling(frank,carol).\nenemy(dave,george).\ndislikes(bob,phone).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george dislikes eve.\nIf george dislikes eve, then alice is hungry.\nIf alice is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is an enemy of carol.\nIf eve is an enemy of carol, then pencil is small.\nIf pencil is small, then carol is sad.\nIf carol is sad, then carol is a friend of bob.\nIf carol is a friend of bob, then frank is a sibling of dave.\nIf it is hot, then dave is a sibling of bob.\nIf carol is a sibling of frank, then frank is sad.\nIf carol is a parent of dave and george is hungry and pencil is big, then carol is a sibling of alice.\nIf car is small, then alice is sad.\nIf carol is tall and bob dislikes phone and bob dislikes phone, then george is tall.\nIf carol is a parent of carol, then dave is a parent of alice.\nIf bob likes dave and bob likes pencil, then george likes car.\nIf car is big, then apple is big.\nIf it is hot and carol owns pencil and frank is a friend of alice, then george owns pencil.\n\nAnd the following facts:\ncarol is hungry.\neve dislikes george.\nalice owns phone.\ngeorge is a parent of bob.\ndave is an enemy of eve.\ndave owns ball.\ncarol dislikes alice.\nfrank likes phone.\ngeorge is a sibling of carol.\nfrank is a sibling of carol.\ndave is an enemy of george.\nbob dislikes phone.\n\nQUESTION:\nIs george is a friend of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,bob).",
    "c": "dislikes(george,eve) :- hungry(carol).\nhungry(alice) :- dislikes(george,eve).\nenemy(carol,dave) :- hungry(alice).\nhot :- enemy(carol,dave).\nsmall(apple) :- hot.\nenemy(eve,carol) :- small(apple).\nsmall(pencil) :- enemy(eve,carol).\nsad(carol) :- small(pencil).\nfriend(carol,bob) :- sad(carol).\nsibling(frank,dave) :- friend(carol,bob).\nsibling(dave,bob) :- hot.\nsad(frank) :- sibling(carol,frank).\nsibling(carol,alice) :- parent(carol,dave), hungry(george), big(pencil).\nsad(alice) :- small(car).\ntall(george) :- tall(carol), dislikes(bob,phone), dislikes(bob,phone).\nparent(dave,alice) :- parent(carol,carol).\nlikes(george,car) :- likes(bob,dave), likes(bob,pencil).\nbig(apple) :- big(car).\nowns(george,pencil) :- hot, owns(carol,pencil), friend(frank,alice).\nhungry(carol).\ndislikes(eve,george).\nowns(alice,phone).\nparent(george,bob).\nenemy(dave,eve).\nowns(dave,ball).\ndislikes(carol,alice).\nlikes(frank,phone).\nsibling(george,carol).\nsibling(frank,carol).\nenemy(dave,george).\ndislikes(bob,phone).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george dislikes eve.\nIf george dislikes eve, then alice is hungry.\nIf alice is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is an enemy of carol.\nIf eve is an enemy of carol, then pencil is small.\nIf pencil is small, then carol is sad.\nIf carol is sad, then carol is a friend of bob.\nIf carol is a friend of bob, then frank is a sibling of dave.\nIf it is hot, then dave is a sibling of bob.\nIf carol is a sibling of frank, then frank is sad.\nIf carol is a parent of dave and george is hungry and pencil is big, then carol is a sibling of alice.\nIf car is small, then alice is sad.\nIf carol is tall and bob dislikes phone and bob dislikes phone, then george is tall.\nIf carol is a parent of carol, then dave is a parent of alice.\nIf bob likes dave and bob likes pencil, then george likes car.\nIf car is big, then apple is big.\nIf it is hot and carol owns pencil and frank is a friend of alice, then george owns pencil.\n\nAnd the following facts:\ncarol is hungry.\neve dislikes george.\nalice owns phone.\ngeorge is a parent of bob.\ndave is an enemy of eve.\ndave owns ball.\ncarol dislikes alice.\nfrank likes phone.\ngeorge is a sibling of carol.\nfrank is a sibling of carol.\ndave is an enemy of george.\nbob dislikes phone.\n\nQUESTION:\nIs frank dislikes bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(carol).",
    "c": "dislikes(george,eve) :- hungry(carol).\nhungry(alice) :- dislikes(george,eve).\nenemy(carol,dave) :- hungry(alice).\nhot :- enemy(carol,dave).\nsmall(apple) :- hot.\nenemy(eve,carol) :- small(apple).\nsmall(pencil) :- enemy(eve,carol).\nsad(carol) :- small(pencil).\nfriend(carol,bob) :- sad(carol).\nsibling(frank,dave) :- friend(carol,bob).\nsibling(dave,bob) :- hot.\nsad(frank) :- sibling(carol,frank).\nsibling(carol,alice) :- parent(carol,dave), hungry(george), big(pencil).\nsad(alice) :- small(car).\ntall(george) :- tall(carol), dislikes(bob,phone), dislikes(bob,phone).\nparent(dave,alice) :- parent(carol,carol).\nlikes(george,car) :- likes(bob,dave), likes(bob,pencil).\nbig(apple) :- big(car).\nowns(george,pencil) :- hot, owns(carol,pencil), friend(frank,alice).\ndislikes(eve,george).\nowns(alice,phone).\nparent(george,bob).\nenemy(dave,eve).\nowns(dave,ball).\ndislikes(carol,alice).\nlikes(frank,phone).\nsibling(george,carol).\nsibling(frank,carol).\nenemy(dave,george).\ndislikes(bob,phone).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then george dislikes eve.\nIf george dislikes eve, then alice is hungry.\nIf alice is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is an enemy of carol.\nIf eve is an enemy of carol, then pencil is small.\nIf pencil is small, then carol is sad.\nIf carol is sad, then carol is a friend of bob.\nIf carol is a friend of bob, then frank is a sibling of dave.\nIf it is hot, then dave is a sibling of bob.\nIf carol is a sibling of frank, then frank is sad.\nIf carol is a parent of dave and george is hungry and pencil is big, then carol is a sibling of alice.\nIf car is small, then alice is sad.\nIf carol is tall and bob dislikes phone and bob dislikes phone, then george is tall.\nIf carol is a parent of carol, then dave is a parent of alice.\nIf bob likes dave and bob likes pencil, then george likes car.\nIf car is big, then apple is big.\nIf it is hot and carol owns pencil and frank is a friend of alice, then george owns pencil.\n\nAnd the following facts:\ncarol is hungry.\neve dislikes george.\nalice owns phone.\ngeorge is a parent of bob.\ndave is an enemy of eve.\ndave owns ball.\ncarol dislikes alice.\nfrank likes phone.\ngeorge is a sibling of carol.\nfrank is a sibling of carol.\ndave is an enemy of george.\nbob dislikes phone.\n\nOBSERVATION: frank is a sibling of dave is true.\n\nQUESTION:\nCould carol is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(eve,george).",
    "c": "dislikes(george,eve) :- hungry(carol).\nhungry(alice) :- dislikes(george,eve).\nenemy(carol,dave) :- hungry(alice).\nhot :- enemy(carol,dave).\nsmall(apple) :- hot.\nenemy(eve,carol) :- small(apple).\nsmall(pencil) :- enemy(eve,carol).\nsad(carol) :- small(pencil).\nfriend(carol,bob) :- sad(carol).\nsibling(frank,dave) :- friend(carol,bob).\nsibling(dave,bob) :- hot.\nsad(frank) :- sibling(carol,frank).\nsibling(carol,alice) :- parent(carol,dave), hungry(george), big(pencil).\nsad(alice) :- small(car).\ntall(george) :- tall(carol), dislikes(bob,phone), dislikes(bob,phone).\nparent(dave,alice) :- parent(carol,carol).\nlikes(george,car) :- likes(bob,dave), likes(bob,pencil).\nbig(apple) :- big(car).\nowns(george,pencil) :- hot, owns(carol,pencil), friend(frank,alice).\nhungry(carol).\nowns(alice,phone).\nparent(george,bob).\nenemy(dave,eve).\nowns(dave,ball).\ndislikes(carol,alice).\nlikes(frank,phone).\nsibling(george,carol).\nsibling(frank,carol).\nenemy(dave,george).\ndislikes(bob,phone).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then george dislikes eve.\nIf george dislikes eve, then alice is hungry.\nIf alice is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is an enemy of carol.\nIf eve is an enemy of carol, then pencil is small.\nIf pencil is small, then carol is sad.\nIf carol is sad, then carol is a friend of bob.\nIf carol is a friend of bob, then frank is a sibling of dave.\nIf it is hot, then dave is a sibling of bob.\nIf carol is a sibling of frank, then frank is sad.\nIf carol is a parent of dave and george is hungry and pencil is big, then carol is a sibling of alice.\nIf car is small, then alice is sad.\nIf carol is tall and bob dislikes phone and bob dislikes phone, then george is tall.\nIf carol is a parent of carol, then dave is a parent of alice.\nIf bob likes dave and bob likes pencil, then george likes car.\nIf car is big, then apple is big.\nIf it is hot and carol owns pencil and frank is a friend of alice, then george owns pencil.\n\nAnd the following facts:\ncarol is hungry.\neve dislikes george.\nalice owns phone.\ngeorge is a parent of bob.\ndave is an enemy of eve.\ndave owns ball.\ncarol dislikes alice.\nfrank likes phone.\ngeorge is a sibling of carol.\nfrank is a sibling of carol.\ndave is an enemy of george.\nbob dislikes phone.\n\nOBSERVATION: frank is a sibling of dave is true.\n\nQUESTION:\nCould eve dislikes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "dislikes(george,eve) :- hungry(carol).\nhungry(alice) :- dislikes(george,eve).\nenemy(carol,dave) :- hungry(alice).\nhot :- enemy(carol,dave).\nsmall(apple) :- hot.\nenemy(eve,carol) :- small(apple).\nsmall(pencil) :- enemy(eve,carol).\nsad(carol) :- small(pencil).\nfriend(carol,bob) :- sad(carol).\nsibling(frank,dave) :- friend(carol,bob).\nsibling(dave,bob) :- hot.\nsad(frank) :- sibling(carol,frank).\nsibling(carol,alice) :- parent(carol,dave), hungry(george), big(pencil).\nsad(alice) :- small(car).\ntall(george) :- tall(carol), dislikes(bob,phone), dislikes(bob,phone).\nparent(dave,alice) :- parent(carol,carol).\nlikes(george,car) :- likes(bob,dave), likes(bob,pencil).\nbig(apple) :- big(car).\nowns(george,pencil) :- hot, owns(carol,pencil), friend(frank,alice).\nhungry(carol).\ndislikes(eve,george).\nowns(alice,phone).\nparent(george,bob).\nenemy(dave,eve).\nowns(dave,ball).\ndislikes(carol,alice).\nlikes(frank,phone).\nsibling(george,carol).\nsibling(frank,carol).\ndislikes(bob,phone).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then george dislikes eve.\nIf george dislikes eve, then alice is hungry.\nIf alice is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then it is hot.\nIf it is hot, then apple is small.\nIf apple is small, then eve is an enemy of carol.\nIf eve is an enemy of carol, then pencil is small.\nIf pencil is small, then carol is sad.\nIf carol is sad, then carol is a friend of bob.\nIf carol is a friend of bob, then frank is a sibling of dave.\nIf it is hot, then dave is a sibling of bob.\nIf carol is a sibling of frank, then frank is sad.\nIf carol is a parent of dave and george is hungry and pencil is big, then carol is a sibling of alice.\nIf car is small, then alice is sad.\nIf carol is tall and bob dislikes phone and bob dislikes phone, then george is tall.\nIf carol is a parent of carol, then dave is a parent of alice.\nIf bob likes dave and bob likes pencil, then george likes car.\nIf car is big, then apple is big.\nIf it is hot and carol owns pencil and frank is a friend of alice, then george owns pencil.\n\nAnd the following facts:\ncarol is hungry.\neve dislikes george.\nalice owns phone.\ngeorge is a parent of bob.\ndave is an enemy of eve.\ndave owns ball.\ncarol dislikes alice.\nfrank likes phone.\ngeorge is a sibling of carol.\nfrank is a sibling of carol.\ndave is an enemy of george.\nbob dislikes phone.\n\nOBSERVATION: frank is a sibling of dave is true.\n\nQUESTION:\nCould dave is an enemy of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "hot.",
    "c": "owns(alice,ball) :- owns(bob,phone).\ncold :- owns(alice,ball).\nhappy(bob) :- cold.\nlikes(george,phone) :- happy(bob).\ntall(frank) :- likes(george,phone).\ncold :- tall(frank).\nenemy(bob,bob) :- cold.\nhappy(carol) :- enemy(bob,bob).\nsibling(frank,carol) :- happy(carol).\nhot :- sibling(frank,carol).\nsmall(phone) :- owns(george,pencil).\nsmall(phone) :- parent(frank,carol), small(book).\nfriend(alice,dave) :- enemy(bob,carol), parent(carol,dave), happy(carol).\nwet(book) :- small(book), big(ball).\nfriend(frank,frank) :- sad(carol).\nhungry(carol) :- sunny, sibling(alice,dave).\nsad(bob) :- dislikes(carol,alice).\nsad(alice) :- hungry(dave), small(car), cold.\nparent(george,dave) :- happy(bob), tall(frank), wet(book).\nowns(bob,phone).\nsibling(george,carol).\nfriend(dave,carol).\nparent(dave,george).\nparent(alice,frank).\nparent(dave,eve).\nlikes(eve,frank).\nwet(pencil).\nparent(dave,frank).\nlikes(eve,book).\nhungry(frank).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nIf bob owns phone, then alice owns ball.\nIf alice owns ball, then it is cold.\nIf it is cold, then bob is happy.\nIf bob is happy, then george likes phone.\nIf george likes phone, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf carol is happy, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is hot.\nIf george owns pencil, then phone is small.\nIf frank is a parent of carol and book is small, then phone is small.\nIf bob is an enemy of carol and carol is a parent of dave and carol is happy, then alice is a friend of dave.\nIf book is small and ball is big, then book is wet.\nIf carol is sad, then frank is a friend of frank.\nIf it is sunny and alice is a sibling of dave, then carol is hungry.\nIf carol dislikes alice, then bob is sad.\nIf dave is hungry and car is small and it is cold, then alice is sad.\nIf bob is happy and frank is tall and book is wet, then george is a parent of dave.\n\nAnd the following facts:\nbob owns phone.\ngeorge is a sibling of carol.\ndave is a friend of carol.\ndave is a parent of george.\nalice is a parent of frank.\ndave is a parent of eve.\neve likes frank.\npencil is wet.\ndave is a parent of frank.\neve likes book.\nfrank is hungry.\nfrank is a friend of george.\n\nQUESTION:\nIs it is hot true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,george).",
    "c": "owns(alice,ball) :- owns(bob,phone).\ncold :- owns(alice,ball).\nhappy(bob) :- cold.\nlikes(george,phone) :- happy(bob).\ntall(frank) :- likes(george,phone).\ncold :- tall(frank).\nenemy(bob,bob) :- cold.\nhappy(carol) :- enemy(bob,bob).\nsibling(frank,carol) :- happy(carol).\nhot :- sibling(frank,carol).\nsmall(phone) :- owns(george,pencil).\nsmall(phone) :- parent(frank,carol), small(book).\nfriend(alice,dave) :- enemy(bob,carol), parent(carol,dave), happy(carol).\nwet(book) :- small(book), big(ball).\nfriend(frank,frank) :- sad(carol).\nhungry(carol) :- sunny, sibling(alice,dave).\nsad(bob) :- dislikes(carol,alice).\nsad(alice) :- hungry(dave), small(car), cold.\nparent(george,dave) :- happy(bob), tall(frank), wet(book).\nowns(bob,phone).\nsibling(george,carol).\nfriend(dave,carol).\nparent(dave,george).\nparent(alice,frank).\nparent(dave,eve).\nlikes(eve,frank).\nwet(pencil).\nparent(dave,frank).\nlikes(eve,book).\nhungry(frank).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nIf bob owns phone, then alice owns ball.\nIf alice owns ball, then it is cold.\nIf it is cold, then bob is happy.\nIf bob is happy, then george likes phone.\nIf george likes phone, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf carol is happy, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is hot.\nIf george owns pencil, then phone is small.\nIf frank is a parent of carol and book is small, then phone is small.\nIf bob is an enemy of carol and carol is a parent of dave and carol is happy, then alice is a friend of dave.\nIf book is small and ball is big, then book is wet.\nIf carol is sad, then frank is a friend of frank.\nIf it is sunny and alice is a sibling of dave, then carol is hungry.\nIf carol dislikes alice, then bob is sad.\nIf dave is hungry and car is small and it is cold, then alice is sad.\nIf bob is happy and frank is tall and book is wet, then george is a parent of dave.\n\nAnd the following facts:\nbob owns phone.\ngeorge is a sibling of carol.\ndave is a friend of carol.\ndave is a parent of george.\nalice is a parent of frank.\ndave is a parent of eve.\neve likes frank.\npencil is wet.\ndave is a parent of frank.\neve likes book.\nfrank is hungry.\nfrank is a friend of george.\n\nQUESTION:\nIs dave is a parent of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,carol).",
    "c": "owns(alice,ball) :- owns(bob,phone).\ncold :- owns(alice,ball).\nhappy(bob) :- cold.\nlikes(george,phone) :- happy(bob).\ntall(frank) :- likes(george,phone).\ncold :- tall(frank).\nenemy(bob,bob) :- cold.\nhappy(carol) :- enemy(bob,bob).\nsibling(frank,carol) :- happy(carol).\nhot :- sibling(frank,carol).\nsmall(phone) :- owns(george,pencil).\nsmall(phone) :- parent(frank,carol), small(book).\nfriend(alice,dave) :- enemy(bob,carol), parent(carol,dave), happy(carol).\nwet(book) :- small(book), big(ball).\nfriend(frank,frank) :- sad(carol).\nhungry(carol) :- sunny, sibling(alice,dave).\nsad(bob) :- dislikes(carol,alice).\nsad(alice) :- hungry(dave), small(car), cold.\nparent(george,dave) :- happy(bob), tall(frank), wet(book).\nowns(bob,phone).\nsibling(george,carol).\nfriend(dave,carol).\nparent(dave,george).\nparent(alice,frank).\nparent(dave,eve).\nlikes(eve,frank).\nwet(pencil).\nparent(dave,frank).\nlikes(eve,book).\nhungry(frank).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nIf bob owns phone, then alice owns ball.\nIf alice owns ball, then it is cold.\nIf it is cold, then bob is happy.\nIf bob is happy, then george likes phone.\nIf george likes phone, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf carol is happy, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is hot.\nIf george owns pencil, then phone is small.\nIf frank is a parent of carol and book is small, then phone is small.\nIf bob is an enemy of carol and carol is a parent of dave and carol is happy, then alice is a friend of dave.\nIf book is small and ball is big, then book is wet.\nIf carol is sad, then frank is a friend of frank.\nIf it is sunny and alice is a sibling of dave, then carol is hungry.\nIf carol dislikes alice, then bob is sad.\nIf dave is hungry and car is small and it is cold, then alice is sad.\nIf bob is happy and frank is tall and book is wet, then george is a parent of dave.\n\nAnd the following facts:\nbob owns phone.\ngeorge is a sibling of carol.\ndave is a friend of carol.\ndave is a parent of george.\nalice is a parent of frank.\ndave is a parent of eve.\neve likes frank.\npencil is wet.\ndave is a parent of frank.\neve likes book.\nfrank is hungry.\nfrank is a friend of george.\n\nQUESTION:\nIs frank is a sibling of carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,george).",
    "c": "owns(alice,ball) :- owns(bob,phone).\ncold :- owns(alice,ball).\nhappy(bob) :- cold.\nlikes(george,phone) :- happy(bob).\ntall(frank) :- likes(george,phone).\ncold :- tall(frank).\nenemy(bob,bob) :- cold.\nhappy(carol) :- enemy(bob,bob).\nsibling(frank,carol) :- happy(carol).\nhot :- sibling(frank,carol).\nsmall(phone) :- owns(george,pencil).\nsmall(phone) :- parent(frank,carol), small(book).\nfriend(alice,dave) :- enemy(bob,carol), parent(carol,dave), happy(carol).\nwet(book) :- small(book), big(ball).\nfriend(frank,frank) :- sad(carol).\nhungry(carol) :- sunny, sibling(alice,dave).\nsad(bob) :- dislikes(carol,alice).\nsad(alice) :- hungry(dave), small(car), cold.\nparent(george,dave) :- happy(bob), tall(frank), wet(book).\nowns(bob,phone).\nsibling(george,carol).\nfriend(dave,carol).\nparent(dave,george).\nparent(alice,frank).\nparent(dave,eve).\nlikes(eve,frank).\nwet(pencil).\nparent(dave,frank).\nlikes(eve,book).\nhungry(frank).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nIf bob owns phone, then alice owns ball.\nIf alice owns ball, then it is cold.\nIf it is cold, then bob is happy.\nIf bob is happy, then george likes phone.\nIf george likes phone, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf carol is happy, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is hot.\nIf george owns pencil, then phone is small.\nIf frank is a parent of carol and book is small, then phone is small.\nIf bob is an enemy of carol and carol is a parent of dave and carol is happy, then alice is a friend of dave.\nIf book is small and ball is big, then book is wet.\nIf carol is sad, then frank is a friend of frank.\nIf it is sunny and alice is a sibling of dave, then carol is hungry.\nIf carol dislikes alice, then bob is sad.\nIf dave is hungry and car is small and it is cold, then alice is sad.\nIf bob is happy and frank is tall and book is wet, then george is a parent of dave.\n\nAnd the following facts:\nbob owns phone.\ngeorge is a sibling of carol.\ndave is a friend of carol.\ndave is a parent of george.\nalice is a parent of frank.\ndave is a parent of eve.\neve likes frank.\npencil is wet.\ndave is a parent of frank.\neve likes book.\nfrank is hungry.\nfrank is a friend of george.\n\nQUESTION:\nIs alice likes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,frank).",
    "c": "owns(alice,ball) :- owns(bob,phone).\ncold :- owns(alice,ball).\nhappy(bob) :- cold.\nlikes(george,phone) :- happy(bob).\ntall(frank) :- likes(george,phone).\ncold :- tall(frank).\nenemy(bob,bob) :- cold.\nhappy(carol) :- enemy(bob,bob).\nsibling(frank,carol) :- happy(carol).\nhot :- sibling(frank,carol).\nsmall(phone) :- owns(george,pencil).\nsmall(phone) :- parent(frank,carol), small(book).\nfriend(alice,dave) :- enemy(bob,carol), parent(carol,dave), happy(carol).\nwet(book) :- small(book), big(ball).\nfriend(frank,frank) :- sad(carol).\nhungry(carol) :- sunny, sibling(alice,dave).\nsad(bob) :- dislikes(carol,alice).\nsad(alice) :- hungry(dave), small(car), cold.\nparent(george,dave) :- happy(bob), tall(frank), wet(book).\nowns(bob,phone).\nsibling(george,carol).\nfriend(dave,carol).\nparent(dave,george).\nparent(alice,frank).\nparent(dave,eve).\nlikes(eve,frank).\nwet(pencil).\nparent(dave,frank).\nlikes(eve,book).\nhungry(frank).\nfriend(frank,george).",
    "natural language": "You are given the following information:\nIf bob owns phone, then alice owns ball.\nIf alice owns ball, then it is cold.\nIf it is cold, then bob is happy.\nIf bob is happy, then george likes phone.\nIf george likes phone, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf carol is happy, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is hot.\nIf george owns pencil, then phone is small.\nIf frank is a parent of carol and book is small, then phone is small.\nIf bob is an enemy of carol and carol is a parent of dave and carol is happy, then alice is a friend of dave.\nIf book is small and ball is big, then book is wet.\nIf carol is sad, then frank is a friend of frank.\nIf it is sunny and alice is a sibling of dave, then carol is hungry.\nIf carol dislikes alice, then bob is sad.\nIf dave is hungry and car is small and it is cold, then alice is sad.\nIf bob is happy and frank is tall and book is wet, then george is a parent of dave.\n\nAnd the following facts:\nbob owns phone.\ngeorge is a sibling of carol.\ndave is a friend of carol.\ndave is a parent of george.\nalice is a parent of frank.\ndave is a parent of eve.\neve likes frank.\npencil is wet.\ndave is a parent of frank.\neve likes book.\nfrank is hungry.\nfrank is a friend of george.\n\nQUESTION:\nIs alice is a friend of frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "owns(alice,ball) :- owns(bob,phone).\ncold :- owns(alice,ball).\nhappy(bob) :- cold.\nlikes(george,phone) :- happy(bob).\ntall(frank) :- likes(george,phone).\ncold :- tall(frank).\nenemy(bob,bob) :- cold.\nhappy(carol) :- enemy(bob,bob).\nsibling(frank,carol) :- happy(carol).\nhot :- sibling(frank,carol).\nsmall(phone) :- owns(george,pencil).\nsmall(phone) :- parent(frank,carol), small(book).\nfriend(alice,dave) :- enemy(bob,carol), parent(carol,dave), happy(carol).\nwet(book) :- small(book), big(ball).\nfriend(frank,frank) :- sad(carol).\nhungry(carol) :- sunny, sibling(alice,dave).\nsad(bob) :- dislikes(carol,alice).\nsad(alice) :- hungry(dave), small(car), cold.\nparent(george,dave) :- happy(bob), tall(frank), wet(book).\nsibling(george,carol).\nfriend(dave,carol).\nparent(dave,george).\nparent(alice,frank).\nparent(dave,eve).\nlikes(eve,frank).\nwet(pencil).\nparent(dave,frank).\nlikes(eve,book).\nhungry(frank).\nfriend(frank,george).",
    "natural language": "You are given the following rules:\nIf bob owns phone, then alice owns ball.\nIf alice owns ball, then it is cold.\nIf it is cold, then bob is happy.\nIf bob is happy, then george likes phone.\nIf george likes phone, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf carol is happy, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is hot.\nIf george owns pencil, then phone is small.\nIf frank is a parent of carol and book is small, then phone is small.\nIf bob is an enemy of carol and carol is a parent of dave and carol is happy, then alice is a friend of dave.\nIf book is small and ball is big, then book is wet.\nIf carol is sad, then frank is a friend of frank.\nIf it is sunny and alice is a sibling of dave, then carol is hungry.\nIf carol dislikes alice, then bob is sad.\nIf dave is hungry and car is small and it is cold, then alice is sad.\nIf bob is happy and frank is tall and book is wet, then george is a parent of dave.\n\nAnd the following facts:\nbob owns phone.\ngeorge is a sibling of carol.\ndave is a friend of carol.\ndave is a parent of george.\nalice is a parent of frank.\ndave is a parent of eve.\neve likes frank.\npencil is wet.\ndave is a parent of frank.\neve likes book.\nfrank is hungry.\nfrank is a friend of george.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould bob owns phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "friend(frank,george).",
    "c": "owns(alice,ball) :- owns(bob,phone).\ncold :- owns(alice,ball).\nhappy(bob) :- cold.\nlikes(george,phone) :- happy(bob).\ntall(frank) :- likes(george,phone).\ncold :- tall(frank).\nenemy(bob,bob) :- cold.\nhappy(carol) :- enemy(bob,bob).\nsibling(frank,carol) :- happy(carol).\nhot :- sibling(frank,carol).\nsmall(phone) :- owns(george,pencil).\nsmall(phone) :- parent(frank,carol), small(book).\nfriend(alice,dave) :- enemy(bob,carol), parent(carol,dave), happy(carol).\nwet(book) :- small(book), big(ball).\nfriend(frank,frank) :- sad(carol).\nhungry(carol) :- sunny, sibling(alice,dave).\nsad(bob) :- dislikes(carol,alice).\nsad(alice) :- hungry(dave), small(car), cold.\nparent(george,dave) :- happy(bob), tall(frank), wet(book).\nowns(bob,phone).\nsibling(george,carol).\nfriend(dave,carol).\nparent(dave,george).\nparent(alice,frank).\nparent(dave,eve).\nlikes(eve,frank).\nwet(pencil).\nparent(dave,frank).\nlikes(eve,book).\nhungry(frank).",
    "natural language": "You are given the following rules:\nIf bob owns phone, then alice owns ball.\nIf alice owns ball, then it is cold.\nIf it is cold, then bob is happy.\nIf bob is happy, then george likes phone.\nIf george likes phone, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf carol is happy, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is hot.\nIf george owns pencil, then phone is small.\nIf frank is a parent of carol and book is small, then phone is small.\nIf bob is an enemy of carol and carol is a parent of dave and carol is happy, then alice is a friend of dave.\nIf book is small and ball is big, then book is wet.\nIf carol is sad, then frank is a friend of frank.\nIf it is sunny and alice is a sibling of dave, then carol is hungry.\nIf carol dislikes alice, then bob is sad.\nIf dave is hungry and car is small and it is cold, then alice is sad.\nIf bob is happy and frank is tall and book is wet, then george is a parent of dave.\n\nAnd the following facts:\nbob owns phone.\ngeorge is a sibling of carol.\ndave is a friend of carol.\ndave is a parent of george.\nalice is a parent of frank.\ndave is a parent of eve.\neve likes frank.\npencil is wet.\ndave is a parent of frank.\neve likes book.\nfrank is hungry.\nfrank is a friend of george.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould frank is a friend of george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(alice,frank).",
    "c": "owns(alice,ball) :- owns(bob,phone).\ncold :- owns(alice,ball).\nhappy(bob) :- cold.\nlikes(george,phone) :- happy(bob).\ntall(frank) :- likes(george,phone).\ncold :- tall(frank).\nenemy(bob,bob) :- cold.\nhappy(carol) :- enemy(bob,bob).\nsibling(frank,carol) :- happy(carol).\nhot :- sibling(frank,carol).\nsmall(phone) :- owns(george,pencil).\nsmall(phone) :- parent(frank,carol), small(book).\nfriend(alice,dave) :- enemy(bob,carol), parent(carol,dave), happy(carol).\nwet(book) :- small(book), big(ball).\nfriend(frank,frank) :- sad(carol).\nhungry(carol) :- sunny, sibling(alice,dave).\nsad(bob) :- dislikes(carol,alice).\nsad(alice) :- hungry(dave), small(car), cold.\nparent(george,dave) :- happy(bob), tall(frank), wet(book).\nowns(bob,phone).\nsibling(george,carol).\nfriend(dave,carol).\nparent(dave,george).\nparent(dave,eve).\nlikes(eve,frank).\nwet(pencil).\nparent(dave,frank).\nlikes(eve,book).\nhungry(frank).\nfriend(frank,george).",
    "natural language": "You are given the following rules:\nIf bob owns phone, then alice owns ball.\nIf alice owns ball, then it is cold.\nIf it is cold, then bob is happy.\nIf bob is happy, then george likes phone.\nIf george likes phone, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then bob is an enemy of bob.\nIf bob is an enemy of bob, then carol is happy.\nIf carol is happy, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is hot.\nIf george owns pencil, then phone is small.\nIf frank is a parent of carol and book is small, then phone is small.\nIf bob is an enemy of carol and carol is a parent of dave and carol is happy, then alice is a friend of dave.\nIf book is small and ball is big, then book is wet.\nIf carol is sad, then frank is a friend of frank.\nIf it is sunny and alice is a sibling of dave, then carol is hungry.\nIf carol dislikes alice, then bob is sad.\nIf dave is hungry and car is small and it is cold, then alice is sad.\nIf bob is happy and frank is tall and book is wet, then george is a parent of dave.\n\nAnd the following facts:\nbob owns phone.\ngeorge is a sibling of carol.\ndave is a friend of carol.\ndave is a parent of george.\nalice is a parent of frank.\ndave is a parent of eve.\neve likes frank.\npencil is wet.\ndave is a parent of frank.\neve likes book.\nfrank is hungry.\nfrank is a friend of george.\n\nOBSERVATION: it is hot is true.\n\nQUESTION:\nCould alice is a parent of frank be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,ball).",
    "c": "wet(ball) :- likes(eve,george).\nowns(eve,pencil) :- wet(ball).\nfriend(carol,alice) :- friend(bob,eve).\nfriend(george,dave) :- enemy(eve,eve).\nlikes(carol,bob) :- likes(alice,alice).\nhappy(bob) :- wet(ball).\nhappy(dave) :- wet(car).\nbig(book) :- sad(george), hot.\nlikes(carol,pencil) :- sad(dave).\nsmall(ball) :- enemy(carol,bob), hot, small(ball).\nsmall(phone) :- likes(bob,pencil), small(pencil).\nbig(apple) :- big(pencil), sibling(dave,carol).\nfriend(bob,frank) :- friend(george,alice).\nwet(book) :- hot, cold.\nsunny :- parent(alice,eve).\ntall(bob) :- small(apple), wet(pencil).\nsad(george) :- hungry(alice), dislikes(george,george), sad(george).\nwet(pencil) :- big(apple).\nfriend(alice,alice) :- hungry(dave), dislikes(eve,dave).\nlikes(eve,george).\nenemy(george,carol).\nhappy(alice).\nenemy(dave,eve).\nowns(bob,phone).\nfriend(carol,alice).\ndislikes(alice,phone).\nlikes(george,phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nhappy(carol).\nsmall(ball).\nowns(dave,phone).\nsibling(eve,dave).\ndislikes(dave,carol).\nhappy(dave).",
    "natural language": "You are given the following information:\nIf eve likes george, then ball is wet.\nIf ball is wet, then eve owns pencil.\nIf bob is a friend of eve, then carol is a friend of alice.\nIf eve is an enemy of eve, then george is a friend of dave.\nIf alice likes alice, then carol likes bob.\nIf ball is wet, then bob is happy.\nIf car is wet, then dave is happy.\nIf george is sad and it is hot, then book is big.\nIf dave is sad, then carol likes pencil.\nIf carol is an enemy of bob and it is hot and ball is small, then ball is small.\nIf bob likes pencil and pencil is small, then phone is small.\nIf pencil is big and dave is a sibling of carol, then apple is big.\nIf george is a friend of alice, then bob is a friend of frank.\nIf it is hot and it is cold, then book is wet.\nIf alice is a parent of eve, then it is sunny.\nIf apple is small and pencil is wet, then bob is tall.\nIf alice is hungry and george dislikes george and george is sad, then george is sad.\nIf apple is big, then pencil is wet.\nIf dave is hungry and eve dislikes dave, then alice is a friend of alice.\n\nAnd the following facts:\neve likes george.\ngeorge is an enemy of carol.\nalice is happy.\ndave is an enemy of eve.\nbob owns phone.\ncarol is a friend of alice.\nalice dislikes phone.\ngeorge likes phone.\nbob owns pencil.\nbob dislikes ball.\ncarol is happy.\nball is small.\ndave owns phone.\neve is a sibling of dave.\ndave dislikes carol.\ndave is happy.\n\nQUESTION:\nIs bob dislikes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(carol).",
    "c": "wet(ball) :- likes(eve,george).\nowns(eve,pencil) :- wet(ball).\nfriend(carol,alice) :- friend(bob,eve).\nfriend(george,dave) :- enemy(eve,eve).\nlikes(carol,bob) :- likes(alice,alice).\nhappy(bob) :- wet(ball).\nhappy(dave) :- wet(car).\nbig(book) :- sad(george), hot.\nlikes(carol,pencil) :- sad(dave).\nsmall(ball) :- enemy(carol,bob), hot, small(ball).\nsmall(phone) :- likes(bob,pencil), small(pencil).\nbig(apple) :- big(pencil), sibling(dave,carol).\nfriend(bob,frank) :- friend(george,alice).\nwet(book) :- hot, cold.\nsunny :- parent(alice,eve).\ntall(bob) :- small(apple), wet(pencil).\nsad(george) :- hungry(alice), dislikes(george,george), sad(george).\nwet(pencil) :- big(apple).\nfriend(alice,alice) :- hungry(dave), dislikes(eve,dave).\nlikes(eve,george).\nenemy(george,carol).\nhappy(alice).\nenemy(dave,eve).\nowns(bob,phone).\nfriend(carol,alice).\ndislikes(alice,phone).\nlikes(george,phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nhappy(carol).\nsmall(ball).\nowns(dave,phone).\nsibling(eve,dave).\ndislikes(dave,carol).\nhappy(dave).",
    "natural language": "You are given the following information:\nIf eve likes george, then ball is wet.\nIf ball is wet, then eve owns pencil.\nIf bob is a friend of eve, then carol is a friend of alice.\nIf eve is an enemy of eve, then george is a friend of dave.\nIf alice likes alice, then carol likes bob.\nIf ball is wet, then bob is happy.\nIf car is wet, then dave is happy.\nIf george is sad and it is hot, then book is big.\nIf dave is sad, then carol likes pencil.\nIf carol is an enemy of bob and it is hot and ball is small, then ball is small.\nIf bob likes pencil and pencil is small, then phone is small.\nIf pencil is big and dave is a sibling of carol, then apple is big.\nIf george is a friend of alice, then bob is a friend of frank.\nIf it is hot and it is cold, then book is wet.\nIf alice is a parent of eve, then it is sunny.\nIf apple is small and pencil is wet, then bob is tall.\nIf alice is hungry and george dislikes george and george is sad, then george is sad.\nIf apple is big, then pencil is wet.\nIf dave is hungry and eve dislikes dave, then alice is a friend of alice.\n\nAnd the following facts:\neve likes george.\ngeorge is an enemy of carol.\nalice is happy.\ndave is an enemy of eve.\nbob owns phone.\ncarol is a friend of alice.\nalice dislikes phone.\ngeorge likes phone.\nbob owns pencil.\nbob dislikes ball.\ncarol is happy.\nball is small.\ndave owns phone.\neve is a sibling of dave.\ndave dislikes carol.\ndave is happy.\n\nQUESTION:\nIs carol is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "wet(ball) :- likes(eve,george).\nowns(eve,pencil) :- wet(ball).\nfriend(carol,alice) :- friend(bob,eve).\nfriend(george,dave) :- enemy(eve,eve).\nlikes(carol,bob) :- likes(alice,alice).\nhappy(bob) :- wet(ball).\nhappy(dave) :- wet(car).\nbig(book) :- sad(george), hot.\nlikes(carol,pencil) :- sad(dave).\nsmall(ball) :- enemy(carol,bob), hot, small(ball).\nsmall(phone) :- likes(bob,pencil), small(pencil).\nbig(apple) :- big(pencil), sibling(dave,carol).\nfriend(bob,frank) :- friend(george,alice).\nwet(book) :- hot, cold.\nsunny :- parent(alice,eve).\ntall(bob) :- small(apple), wet(pencil).\nsad(george) :- hungry(alice), dislikes(george,george), sad(george).\nwet(pencil) :- big(apple).\nfriend(alice,alice) :- hungry(dave), dislikes(eve,dave).\nlikes(eve,george).\nenemy(george,carol).\nhappy(alice).\nenemy(dave,eve).\nowns(bob,phone).\nfriend(carol,alice).\ndislikes(alice,phone).\nlikes(george,phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nhappy(carol).\nsmall(ball).\nowns(dave,phone).\nsibling(eve,dave).\ndislikes(dave,carol).\nhappy(dave).",
    "natural language": "You are given the following information:\nIf eve likes george, then ball is wet.\nIf ball is wet, then eve owns pencil.\nIf bob is a friend of eve, then carol is a friend of alice.\nIf eve is an enemy of eve, then george is a friend of dave.\nIf alice likes alice, then carol likes bob.\nIf ball is wet, then bob is happy.\nIf car is wet, then dave is happy.\nIf george is sad and it is hot, then book is big.\nIf dave is sad, then carol likes pencil.\nIf carol is an enemy of bob and it is hot and ball is small, then ball is small.\nIf bob likes pencil and pencil is small, then phone is small.\nIf pencil is big and dave is a sibling of carol, then apple is big.\nIf george is a friend of alice, then bob is a friend of frank.\nIf it is hot and it is cold, then book is wet.\nIf alice is a parent of eve, then it is sunny.\nIf apple is small and pencil is wet, then bob is tall.\nIf alice is hungry and george dislikes george and george is sad, then george is sad.\nIf apple is big, then pencil is wet.\nIf dave is hungry and eve dislikes dave, then alice is a friend of alice.\n\nAnd the following facts:\neve likes george.\ngeorge is an enemy of carol.\nalice is happy.\ndave is an enemy of eve.\nbob owns phone.\ncarol is a friend of alice.\nalice dislikes phone.\ngeorge likes phone.\nbob owns pencil.\nbob dislikes ball.\ncarol is happy.\nball is small.\ndave owns phone.\neve is a sibling of dave.\ndave dislikes carol.\ndave is happy.\n\nQUESTION:\nIs bob is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,george).",
    "c": "wet(ball) :- likes(eve,george).\nowns(eve,pencil) :- wet(ball).\nfriend(carol,alice) :- friend(bob,eve).\nfriend(george,dave) :- enemy(eve,eve).\nlikes(carol,bob) :- likes(alice,alice).\nhappy(bob) :- wet(ball).\nhappy(dave) :- wet(car).\nbig(book) :- sad(george), hot.\nlikes(carol,pencil) :- sad(dave).\nsmall(ball) :- enemy(carol,bob), hot, small(ball).\nsmall(phone) :- likes(bob,pencil), small(pencil).\nbig(apple) :- big(pencil), sibling(dave,carol).\nfriend(bob,frank) :- friend(george,alice).\nwet(book) :- hot, cold.\nsunny :- parent(alice,eve).\ntall(bob) :- small(apple), wet(pencil).\nsad(george) :- hungry(alice), dislikes(george,george), sad(george).\nwet(pencil) :- big(apple).\nfriend(alice,alice) :- hungry(dave), dislikes(eve,dave).\nlikes(eve,george).\nenemy(george,carol).\nhappy(alice).\nenemy(dave,eve).\nowns(bob,phone).\nfriend(carol,alice).\ndislikes(alice,phone).\nlikes(george,phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nhappy(carol).\nsmall(ball).\nowns(dave,phone).\nsibling(eve,dave).\ndislikes(dave,carol).\nhappy(dave).",
    "natural language": "You are given the following information:\nIf eve likes george, then ball is wet.\nIf ball is wet, then eve owns pencil.\nIf bob is a friend of eve, then carol is a friend of alice.\nIf eve is an enemy of eve, then george is a friend of dave.\nIf alice likes alice, then carol likes bob.\nIf ball is wet, then bob is happy.\nIf car is wet, then dave is happy.\nIf george is sad and it is hot, then book is big.\nIf dave is sad, then carol likes pencil.\nIf carol is an enemy of bob and it is hot and ball is small, then ball is small.\nIf bob likes pencil and pencil is small, then phone is small.\nIf pencil is big and dave is a sibling of carol, then apple is big.\nIf george is a friend of alice, then bob is a friend of frank.\nIf it is hot and it is cold, then book is wet.\nIf alice is a parent of eve, then it is sunny.\nIf apple is small and pencil is wet, then bob is tall.\nIf alice is hungry and george dislikes george and george is sad, then george is sad.\nIf apple is big, then pencil is wet.\nIf dave is hungry and eve dislikes dave, then alice is a friend of alice.\n\nAnd the following facts:\neve likes george.\ngeorge is an enemy of carol.\nalice is happy.\ndave is an enemy of eve.\nbob owns phone.\ncarol is a friend of alice.\nalice dislikes phone.\ngeorge likes phone.\nbob owns pencil.\nbob dislikes ball.\ncarol is happy.\nball is small.\ndave owns phone.\neve is a sibling of dave.\ndave dislikes carol.\ndave is happy.\n\nQUESTION:\nIs eve dislikes george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "wet(ball) :- likes(eve,george).\nowns(eve,pencil) :- wet(ball).\nfriend(carol,alice) :- friend(bob,eve).\nfriend(george,dave) :- enemy(eve,eve).\nlikes(carol,bob) :- likes(alice,alice).\nhappy(bob) :- wet(ball).\nhappy(dave) :- wet(car).\nbig(book) :- sad(george), hot.\nlikes(carol,pencil) :- sad(dave).\nsmall(ball) :- enemy(carol,bob), hot, small(ball).\nsmall(phone) :- likes(bob,pencil), small(pencil).\nbig(apple) :- big(pencil), sibling(dave,carol).\nfriend(bob,frank) :- friend(george,alice).\nwet(book) :- hot, cold.\nsunny :- parent(alice,eve).\ntall(bob) :- small(apple), wet(pencil).\nsad(george) :- hungry(alice), dislikes(george,george), sad(george).\nwet(pencil) :- big(apple).\nfriend(alice,alice) :- hungry(dave), dislikes(eve,dave).\nlikes(eve,george).\nenemy(george,carol).\nhappy(alice).\nenemy(dave,eve).\nowns(bob,phone).\nfriend(carol,alice).\ndislikes(alice,phone).\nlikes(george,phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nhappy(carol).\nsmall(ball).\nowns(dave,phone).\nsibling(eve,dave).\ndislikes(dave,carol).\nhappy(dave).",
    "natural language": "You are given the following information:\nIf eve likes george, then ball is wet.\nIf ball is wet, then eve owns pencil.\nIf bob is a friend of eve, then carol is a friend of alice.\nIf eve is an enemy of eve, then george is a friend of dave.\nIf alice likes alice, then carol likes bob.\nIf ball is wet, then bob is happy.\nIf car is wet, then dave is happy.\nIf george is sad and it is hot, then book is big.\nIf dave is sad, then carol likes pencil.\nIf carol is an enemy of bob and it is hot and ball is small, then ball is small.\nIf bob likes pencil and pencil is small, then phone is small.\nIf pencil is big and dave is a sibling of carol, then apple is big.\nIf george is a friend of alice, then bob is a friend of frank.\nIf it is hot and it is cold, then book is wet.\nIf alice is a parent of eve, then it is sunny.\nIf apple is small and pencil is wet, then bob is tall.\nIf alice is hungry and george dislikes george and george is sad, then george is sad.\nIf apple is big, then pencil is wet.\nIf dave is hungry and eve dislikes dave, then alice is a friend of alice.\n\nAnd the following facts:\neve likes george.\ngeorge is an enemy of carol.\nalice is happy.\ndave is an enemy of eve.\nbob owns phone.\ncarol is a friend of alice.\nalice dislikes phone.\ngeorge likes phone.\nbob owns pencil.\nbob dislikes ball.\ncarol is happy.\nball is small.\ndave owns phone.\neve is a sibling of dave.\ndave dislikes carol.\ndave is happy.\n\nQUESTION:\nIs apple is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,george).",
    "c": "wet(ball) :- likes(eve,george).\nowns(eve,pencil) :- wet(ball).\nfriend(carol,alice) :- friend(bob,eve).\nfriend(george,dave) :- enemy(eve,eve).\nlikes(carol,bob) :- likes(alice,alice).\nhappy(bob) :- wet(ball).\nhappy(dave) :- wet(car).\nbig(book) :- sad(george), hot.\nlikes(carol,pencil) :- sad(dave).\nsmall(ball) :- enemy(carol,bob), hot, small(ball).\nsmall(phone) :- likes(bob,pencil), small(pencil).\nbig(apple) :- big(pencil), sibling(dave,carol).\nfriend(bob,frank) :- friend(george,alice).\nwet(book) :- hot, cold.\nsunny :- parent(alice,eve).\ntall(bob) :- small(apple), wet(pencil).\nsad(george) :- hungry(alice), dislikes(george,george), sad(george).\nwet(pencil) :- big(apple).\nfriend(alice,alice) :- hungry(dave), dislikes(eve,dave).\nenemy(george,carol).\nhappy(alice).\nenemy(dave,eve).\nowns(bob,phone).\nfriend(carol,alice).\ndislikes(alice,phone).\nlikes(george,phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nhappy(carol).\nsmall(ball).\nowns(dave,phone).\nsibling(eve,dave).\ndislikes(dave,carol).\nhappy(dave).",
    "natural language": "You are given the following rules:\nIf eve likes george, then ball is wet.\nIf ball is wet, then eve owns pencil.\nIf bob is a friend of eve, then carol is a friend of alice.\nIf eve is an enemy of eve, then george is a friend of dave.\nIf alice likes alice, then carol likes bob.\nIf ball is wet, then bob is happy.\nIf car is wet, then dave is happy.\nIf george is sad and it is hot, then book is big.\nIf dave is sad, then carol likes pencil.\nIf carol is an enemy of bob and it is hot and ball is small, then ball is small.\nIf bob likes pencil and pencil is small, then phone is small.\nIf pencil is big and dave is a sibling of carol, then apple is big.\nIf george is a friend of alice, then bob is a friend of frank.\nIf it is hot and it is cold, then book is wet.\nIf alice is a parent of eve, then it is sunny.\nIf apple is small and pencil is wet, then bob is tall.\nIf alice is hungry and george dislikes george and george is sad, then george is sad.\nIf apple is big, then pencil is wet.\nIf dave is hungry and eve dislikes dave, then alice is a friend of alice.\n\nAnd the following facts:\neve likes george.\ngeorge is an enemy of carol.\nalice is happy.\ndave is an enemy of eve.\nbob owns phone.\ncarol is a friend of alice.\nalice dislikes phone.\ngeorge likes phone.\nbob owns pencil.\nbob dislikes ball.\ncarol is happy.\nball is small.\ndave owns phone.\neve is a sibling of dave.\ndave dislikes carol.\ndave is happy.\n\nOBSERVATION: eve owns pencil is true.\n\nQUESTION:\nCould eve likes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(bob,pencil).",
    "c": "wet(ball) :- likes(eve,george).\nowns(eve,pencil) :- wet(ball).\nfriend(carol,alice) :- friend(bob,eve).\nfriend(george,dave) :- enemy(eve,eve).\nlikes(carol,bob) :- likes(alice,alice).\nhappy(bob) :- wet(ball).\nhappy(dave) :- wet(car).\nbig(book) :- sad(george), hot.\nlikes(carol,pencil) :- sad(dave).\nsmall(ball) :- enemy(carol,bob), hot, small(ball).\nsmall(phone) :- likes(bob,pencil), small(pencil).\nbig(apple) :- big(pencil), sibling(dave,carol).\nfriend(bob,frank) :- friend(george,alice).\nwet(book) :- hot, cold.\nsunny :- parent(alice,eve).\ntall(bob) :- small(apple), wet(pencil).\nsad(george) :- hungry(alice), dislikes(george,george), sad(george).\nwet(pencil) :- big(apple).\nfriend(alice,alice) :- hungry(dave), dislikes(eve,dave).\nlikes(eve,george).\nenemy(george,carol).\nhappy(alice).\nenemy(dave,eve).\nowns(bob,phone).\nfriend(carol,alice).\ndislikes(alice,phone).\nlikes(george,phone).\ndislikes(bob,ball).\nhappy(carol).\nsmall(ball).\nowns(dave,phone).\nsibling(eve,dave).\ndislikes(dave,carol).\nhappy(dave).",
    "natural language": "You are given the following rules:\nIf eve likes george, then ball is wet.\nIf ball is wet, then eve owns pencil.\nIf bob is a friend of eve, then carol is a friend of alice.\nIf eve is an enemy of eve, then george is a friend of dave.\nIf alice likes alice, then carol likes bob.\nIf ball is wet, then bob is happy.\nIf car is wet, then dave is happy.\nIf george is sad and it is hot, then book is big.\nIf dave is sad, then carol likes pencil.\nIf carol is an enemy of bob and it is hot and ball is small, then ball is small.\nIf bob likes pencil and pencil is small, then phone is small.\nIf pencil is big and dave is a sibling of carol, then apple is big.\nIf george is a friend of alice, then bob is a friend of frank.\nIf it is hot and it is cold, then book is wet.\nIf alice is a parent of eve, then it is sunny.\nIf apple is small and pencil is wet, then bob is tall.\nIf alice is hungry and george dislikes george and george is sad, then george is sad.\nIf apple is big, then pencil is wet.\nIf dave is hungry and eve dislikes dave, then alice is a friend of alice.\n\nAnd the following facts:\neve likes george.\ngeorge is an enemy of carol.\nalice is happy.\ndave is an enemy of eve.\nbob owns phone.\ncarol is a friend of alice.\nalice dislikes phone.\ngeorge likes phone.\nbob owns pencil.\nbob dislikes ball.\ncarol is happy.\nball is small.\ndave owns phone.\neve is a sibling of dave.\ndave dislikes carol.\ndave is happy.\n\nOBSERVATION: eve owns pencil is true.\n\nQUESTION:\nCould bob owns pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(carol).",
    "c": "wet(ball) :- likes(eve,george).\nowns(eve,pencil) :- wet(ball).\nfriend(carol,alice) :- friend(bob,eve).\nfriend(george,dave) :- enemy(eve,eve).\nlikes(carol,bob) :- likes(alice,alice).\nhappy(bob) :- wet(ball).\nhappy(dave) :- wet(car).\nbig(book) :- sad(george), hot.\nlikes(carol,pencil) :- sad(dave).\nsmall(ball) :- enemy(carol,bob), hot, small(ball).\nsmall(phone) :- likes(bob,pencil), small(pencil).\nbig(apple) :- big(pencil), sibling(dave,carol).\nfriend(bob,frank) :- friend(george,alice).\nwet(book) :- hot, cold.\nsunny :- parent(alice,eve).\ntall(bob) :- small(apple), wet(pencil).\nsad(george) :- hungry(alice), dislikes(george,george), sad(george).\nwet(pencil) :- big(apple).\nfriend(alice,alice) :- hungry(dave), dislikes(eve,dave).\nlikes(eve,george).\nenemy(george,carol).\nhappy(alice).\nenemy(dave,eve).\nowns(bob,phone).\nfriend(carol,alice).\ndislikes(alice,phone).\nlikes(george,phone).\nowns(bob,pencil).\ndislikes(bob,ball).\nsmall(ball).\nowns(dave,phone).\nsibling(eve,dave).\ndislikes(dave,carol).\nhappy(dave).",
    "natural language": "You are given the following rules:\nIf eve likes george, then ball is wet.\nIf ball is wet, then eve owns pencil.\nIf bob is a friend of eve, then carol is a friend of alice.\nIf eve is an enemy of eve, then george is a friend of dave.\nIf alice likes alice, then carol likes bob.\nIf ball is wet, then bob is happy.\nIf car is wet, then dave is happy.\nIf george is sad and it is hot, then book is big.\nIf dave is sad, then carol likes pencil.\nIf carol is an enemy of bob and it is hot and ball is small, then ball is small.\nIf bob likes pencil and pencil is small, then phone is small.\nIf pencil is big and dave is a sibling of carol, then apple is big.\nIf george is a friend of alice, then bob is a friend of frank.\nIf it is hot and it is cold, then book is wet.\nIf alice is a parent of eve, then it is sunny.\nIf apple is small and pencil is wet, then bob is tall.\nIf alice is hungry and george dislikes george and george is sad, then george is sad.\nIf apple is big, then pencil is wet.\nIf dave is hungry and eve dislikes dave, then alice is a friend of alice.\n\nAnd the following facts:\neve likes george.\ngeorge is an enemy of carol.\nalice is happy.\ndave is an enemy of eve.\nbob owns phone.\ncarol is a friend of alice.\nalice dislikes phone.\ngeorge likes phone.\nbob owns pencil.\nbob dislikes ball.\ncarol is happy.\nball is small.\ndave owns phone.\neve is a sibling of dave.\ndave dislikes carol.\ndave is happy.\n\nOBSERVATION: eve owns pencil is true.\n\nQUESTION:\nCould carol is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(alice,dave).",
    "c": "owns(alice,book) :- sunny.\nowns(alice,book) :- owns(alice,book).\nhot :- enemy(eve,george), wet(phone), sunny.\nhot :- likes(bob,phone), happy(frank).\nowns(carol,ball) :- hungry(alice).\nenemy(carol,eve) :- small(car), hot, dislikes(carol,george).\nenemy(frank,dave) :- sad(alice).\nparent(alice,alice) :- small(car), likes(eve,apple), sibling(dave,eve).\nwet(pencil) :- small(pencil), friend(bob,alice), enemy(george,bob).\nparent(bob,dave) :- sad(dave), dislikes(eve,phone), likes(carol,book).\nwet(car) :- owns(eve,apple), sunny.\nowns(carol,phone) :- friend(george,alice), small(apple), sad(carol).\nhappy(george) :- enemy(alice,frank).\nhappy(george) :- sad(bob).\ncold :- owns(eve,ball).\ncold :- owns(carol,apple).\nwet(car) :- dislikes(carol,apple).\nsmall(car) :- likes(george,car), cold, wet(ball).\nsmall(book) :- cold, hungry(alice).\nsunny.\nenemy(alice,bob).\nlikes(eve,george).\nsibling(alice,dave).\nlikes(carol,car).\nenemy(george,frank).\nlikes(george,eve).\nowns(george,pencil).\nlikes(eve,ball).\nsibling(eve,carol).\nsibling(bob,dave).\ncold.\nsibling(george,carol).\nlikes(eve,carol).\nparent(dave,bob).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice owns book.\nIf alice owns book, then alice owns book.\nIf eve is an enemy of george and phone is wet and it is sunny, then it is hot.\nIf bob likes phone and frank is happy, then it is hot.\nIf alice is hungry, then carol owns ball.\nIf car is small and it is hot and carol dislikes george, then carol is an enemy of eve.\nIf alice is sad, then frank is an enemy of dave.\nIf car is small and eve likes apple and dave is a sibling of eve, then alice is a parent of alice.\nIf pencil is small and bob is a friend of alice and george is an enemy of bob, then pencil is wet.\nIf dave is sad and eve dislikes phone and carol likes book, then bob is a parent of dave.\nIf eve owns apple and it is sunny, then car is wet.\nIf george is a friend of alice and apple is small and carol is sad, then carol owns phone.\nIf alice is an enemy of frank, then george is happy.\nIf bob is sad, then george is happy.\nIf eve owns ball, then it is cold.\nIf carol owns apple, then it is cold.\nIf carol dislikes apple, then car is wet.\nIf george likes car and it is cold and ball is wet, then car is small.\nIf it is cold and alice is hungry, then book is small.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\neve likes george.\nalice is a sibling of dave.\ncarol likes car.\ngeorge is an enemy of frank.\ngeorge likes eve.\ngeorge owns pencil.\neve likes ball.\neve is a sibling of carol.\nbob is a sibling of dave.\nit is cold.\ngeorge is a sibling of carol.\neve likes carol.\ndave is a parent of bob.\ncarol is an enemy of eve.\n\nQUESTION:\nIs alice is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,dave).",
    "c": "owns(alice,book) :- sunny.\nowns(alice,book) :- owns(alice,book).\nhot :- enemy(eve,george), wet(phone), sunny.\nhot :- likes(bob,phone), happy(frank).\nowns(carol,ball) :- hungry(alice).\nenemy(carol,eve) :- small(car), hot, dislikes(carol,george).\nenemy(frank,dave) :- sad(alice).\nparent(alice,alice) :- small(car), likes(eve,apple), sibling(dave,eve).\nwet(pencil) :- small(pencil), friend(bob,alice), enemy(george,bob).\nparent(bob,dave) :- sad(dave), dislikes(eve,phone), likes(carol,book).\nwet(car) :- owns(eve,apple), sunny.\nowns(carol,phone) :- friend(george,alice), small(apple), sad(carol).\nhappy(george) :- enemy(alice,frank).\nhappy(george) :- sad(bob).\ncold :- owns(eve,ball).\ncold :- owns(carol,apple).\nwet(car) :- dislikes(carol,apple).\nsmall(car) :- likes(george,car), cold, wet(ball).\nsmall(book) :- cold, hungry(alice).\nsunny.\nenemy(alice,bob).\nlikes(eve,george).\nsibling(alice,dave).\nlikes(carol,car).\nenemy(george,frank).\nlikes(george,eve).\nowns(george,pencil).\nlikes(eve,ball).\nsibling(eve,carol).\nsibling(bob,dave).\ncold.\nsibling(george,carol).\nlikes(eve,carol).\nparent(dave,bob).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice owns book.\nIf alice owns book, then alice owns book.\nIf eve is an enemy of george and phone is wet and it is sunny, then it is hot.\nIf bob likes phone and frank is happy, then it is hot.\nIf alice is hungry, then carol owns ball.\nIf car is small and it is hot and carol dislikes george, then carol is an enemy of eve.\nIf alice is sad, then frank is an enemy of dave.\nIf car is small and eve likes apple and dave is a sibling of eve, then alice is a parent of alice.\nIf pencil is small and bob is a friend of alice and george is an enemy of bob, then pencil is wet.\nIf dave is sad and eve dislikes phone and carol likes book, then bob is a parent of dave.\nIf eve owns apple and it is sunny, then car is wet.\nIf george is a friend of alice and apple is small and carol is sad, then carol owns phone.\nIf alice is an enemy of frank, then george is happy.\nIf bob is sad, then george is happy.\nIf eve owns ball, then it is cold.\nIf carol owns apple, then it is cold.\nIf carol dislikes apple, then car is wet.\nIf george likes car and it is cold and ball is wet, then car is small.\nIf it is cold and alice is hungry, then book is small.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\neve likes george.\nalice is a sibling of dave.\ncarol likes car.\ngeorge is an enemy of frank.\ngeorge likes eve.\ngeorge owns pencil.\neve likes ball.\neve is a sibling of carol.\nbob is a sibling of dave.\nit is cold.\ngeorge is a sibling of carol.\neve likes carol.\ndave is a parent of bob.\ncarol is an enemy of eve.\n\nQUESTION:\nIs bob is a sibling of dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,ball).",
    "c": "owns(alice,book) :- sunny.\nowns(alice,book) :- owns(alice,book).\nhot :- enemy(eve,george), wet(phone), sunny.\nhot :- likes(bob,phone), happy(frank).\nowns(carol,ball) :- hungry(alice).\nenemy(carol,eve) :- small(car), hot, dislikes(carol,george).\nenemy(frank,dave) :- sad(alice).\nparent(alice,alice) :- small(car), likes(eve,apple), sibling(dave,eve).\nwet(pencil) :- small(pencil), friend(bob,alice), enemy(george,bob).\nparent(bob,dave) :- sad(dave), dislikes(eve,phone), likes(carol,book).\nwet(car) :- owns(eve,apple), sunny.\nowns(carol,phone) :- friend(george,alice), small(apple), sad(carol).\nhappy(george) :- enemy(alice,frank).\nhappy(george) :- sad(bob).\ncold :- owns(eve,ball).\ncold :- owns(carol,apple).\nwet(car) :- dislikes(carol,apple).\nsmall(car) :- likes(george,car), cold, wet(ball).\nsmall(book) :- cold, hungry(alice).\nsunny.\nenemy(alice,bob).\nlikes(eve,george).\nsibling(alice,dave).\nlikes(carol,car).\nenemy(george,frank).\nlikes(george,eve).\nowns(george,pencil).\nlikes(eve,ball).\nsibling(eve,carol).\nsibling(bob,dave).\ncold.\nsibling(george,carol).\nlikes(eve,carol).\nparent(dave,bob).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice owns book.\nIf alice owns book, then alice owns book.\nIf eve is an enemy of george and phone is wet and it is sunny, then it is hot.\nIf bob likes phone and frank is happy, then it is hot.\nIf alice is hungry, then carol owns ball.\nIf car is small and it is hot and carol dislikes george, then carol is an enemy of eve.\nIf alice is sad, then frank is an enemy of dave.\nIf car is small and eve likes apple and dave is a sibling of eve, then alice is a parent of alice.\nIf pencil is small and bob is a friend of alice and george is an enemy of bob, then pencil is wet.\nIf dave is sad and eve dislikes phone and carol likes book, then bob is a parent of dave.\nIf eve owns apple and it is sunny, then car is wet.\nIf george is a friend of alice and apple is small and carol is sad, then carol owns phone.\nIf alice is an enemy of frank, then george is happy.\nIf bob is sad, then george is happy.\nIf eve owns ball, then it is cold.\nIf carol owns apple, then it is cold.\nIf carol dislikes apple, then car is wet.\nIf george likes car and it is cold and ball is wet, then car is small.\nIf it is cold and alice is hungry, then book is small.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\neve likes george.\nalice is a sibling of dave.\ncarol likes car.\ngeorge is an enemy of frank.\ngeorge likes eve.\ngeorge owns pencil.\neve likes ball.\neve is a sibling of carol.\nbob is a sibling of dave.\nit is cold.\ngeorge is a sibling of carol.\neve likes carol.\ndave is a parent of bob.\ncarol is an enemy of eve.\n\nQUESTION:\nIs eve likes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,dave).",
    "c": "owns(alice,book) :- sunny.\nowns(alice,book) :- owns(alice,book).\nhot :- enemy(eve,george), wet(phone), sunny.\nhot :- likes(bob,phone), happy(frank).\nowns(carol,ball) :- hungry(alice).\nenemy(carol,eve) :- small(car), hot, dislikes(carol,george).\nenemy(frank,dave) :- sad(alice).\nparent(alice,alice) :- small(car), likes(eve,apple), sibling(dave,eve).\nwet(pencil) :- small(pencil), friend(bob,alice), enemy(george,bob).\nparent(bob,dave) :- sad(dave), dislikes(eve,phone), likes(carol,book).\nwet(car) :- owns(eve,apple), sunny.\nowns(carol,phone) :- friend(george,alice), small(apple), sad(carol).\nhappy(george) :- enemy(alice,frank).\nhappy(george) :- sad(bob).\ncold :- owns(eve,ball).\ncold :- owns(carol,apple).\nwet(car) :- dislikes(carol,apple).\nsmall(car) :- likes(george,car), cold, wet(ball).\nsmall(book) :- cold, hungry(alice).\nsunny.\nenemy(alice,bob).\nlikes(eve,george).\nsibling(alice,dave).\nlikes(carol,car).\nenemy(george,frank).\nlikes(george,eve).\nowns(george,pencil).\nlikes(eve,ball).\nsibling(eve,carol).\nsibling(bob,dave).\ncold.\nsibling(george,carol).\nlikes(eve,carol).\nparent(dave,bob).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice owns book.\nIf alice owns book, then alice owns book.\nIf eve is an enemy of george and phone is wet and it is sunny, then it is hot.\nIf bob likes phone and frank is happy, then it is hot.\nIf alice is hungry, then carol owns ball.\nIf car is small and it is hot and carol dislikes george, then carol is an enemy of eve.\nIf alice is sad, then frank is an enemy of dave.\nIf car is small and eve likes apple and dave is a sibling of eve, then alice is a parent of alice.\nIf pencil is small and bob is a friend of alice and george is an enemy of bob, then pencil is wet.\nIf dave is sad and eve dislikes phone and carol likes book, then bob is a parent of dave.\nIf eve owns apple and it is sunny, then car is wet.\nIf george is a friend of alice and apple is small and carol is sad, then carol owns phone.\nIf alice is an enemy of frank, then george is happy.\nIf bob is sad, then george is happy.\nIf eve owns ball, then it is cold.\nIf carol owns apple, then it is cold.\nIf carol dislikes apple, then car is wet.\nIf george likes car and it is cold and ball is wet, then car is small.\nIf it is cold and alice is hungry, then book is small.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\neve likes george.\nalice is a sibling of dave.\ncarol likes car.\ngeorge is an enemy of frank.\ngeorge likes eve.\ngeorge owns pencil.\neve likes ball.\neve is a sibling of carol.\nbob is a sibling of dave.\nit is cold.\ngeorge is a sibling of carol.\neve likes carol.\ndave is a parent of bob.\ncarol is an enemy of eve.\n\nQUESTION:\nIs bob dislikes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "owns(alice,book) :- sunny.\nowns(alice,book) :- owns(alice,book).\nhot :- enemy(eve,george), wet(phone), sunny.\nhot :- likes(bob,phone), happy(frank).\nowns(carol,ball) :- hungry(alice).\nenemy(carol,eve) :- small(car), hot, dislikes(carol,george).\nenemy(frank,dave) :- sad(alice).\nparent(alice,alice) :- small(car), likes(eve,apple), sibling(dave,eve).\nwet(pencil) :- small(pencil), friend(bob,alice), enemy(george,bob).\nparent(bob,dave) :- sad(dave), dislikes(eve,phone), likes(carol,book).\nwet(car) :- owns(eve,apple), sunny.\nowns(carol,phone) :- friend(george,alice), small(apple), sad(carol).\nhappy(george) :- enemy(alice,frank).\nhappy(george) :- sad(bob).\ncold :- owns(eve,ball).\ncold :- owns(carol,apple).\nwet(car) :- dislikes(carol,apple).\nsmall(car) :- likes(george,car), cold, wet(ball).\nsmall(book) :- cold, hungry(alice).\nsunny.\nenemy(alice,bob).\nlikes(eve,george).\nsibling(alice,dave).\nlikes(carol,car).\nenemy(george,frank).\nlikes(george,eve).\nowns(george,pencil).\nlikes(eve,ball).\nsibling(eve,carol).\nsibling(bob,dave).\ncold.\nsibling(george,carol).\nlikes(eve,carol).\nparent(dave,bob).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice owns book.\nIf alice owns book, then alice owns book.\nIf eve is an enemy of george and phone is wet and it is sunny, then it is hot.\nIf bob likes phone and frank is happy, then it is hot.\nIf alice is hungry, then carol owns ball.\nIf car is small and it is hot and carol dislikes george, then carol is an enemy of eve.\nIf alice is sad, then frank is an enemy of dave.\nIf car is small and eve likes apple and dave is a sibling of eve, then alice is a parent of alice.\nIf pencil is small and bob is a friend of alice and george is an enemy of bob, then pencil is wet.\nIf dave is sad and eve dislikes phone and carol likes book, then bob is a parent of dave.\nIf eve owns apple and it is sunny, then car is wet.\nIf george is a friend of alice and apple is small and carol is sad, then carol owns phone.\nIf alice is an enemy of frank, then george is happy.\nIf bob is sad, then george is happy.\nIf eve owns ball, then it is cold.\nIf carol owns apple, then it is cold.\nIf carol dislikes apple, then car is wet.\nIf george likes car and it is cold and ball is wet, then car is small.\nIf it is cold and alice is hungry, then book is small.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\neve likes george.\nalice is a sibling of dave.\ncarol likes car.\ngeorge is an enemy of frank.\ngeorge likes eve.\ngeorge owns pencil.\neve likes ball.\neve is a sibling of carol.\nbob is a sibling of dave.\nit is cold.\ngeorge is a sibling of carol.\neve likes carol.\ndave is a parent of bob.\ncarol is an enemy of eve.\n\nQUESTION:\nIs carol is sad true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "owns(alice,book) :- sunny.\nowns(alice,book) :- owns(alice,book).\nhot :- enemy(eve,george), wet(phone), sunny.\nhot :- likes(bob,phone), happy(frank).\nowns(carol,ball) :- hungry(alice).\nenemy(carol,eve) :- small(car), hot, dislikes(carol,george).\nenemy(frank,dave) :- sad(alice).\nparent(alice,alice) :- small(car), likes(eve,apple), sibling(dave,eve).\nwet(pencil) :- small(pencil), friend(bob,alice), enemy(george,bob).\nparent(bob,dave) :- sad(dave), dislikes(eve,phone), likes(carol,book).\nwet(car) :- owns(eve,apple), sunny.\nowns(carol,phone) :- friend(george,alice), small(apple), sad(carol).\nhappy(george) :- enemy(alice,frank).\nhappy(george) :- sad(bob).\ncold :- owns(eve,ball).\ncold :- owns(carol,apple).\nwet(car) :- dislikes(carol,apple).\nsmall(car) :- likes(george,car), cold, wet(ball).\nsmall(book) :- cold, hungry(alice).\nenemy(alice,bob).\nlikes(eve,george).\nsibling(alice,dave).\nlikes(carol,car).\nenemy(george,frank).\nlikes(george,eve).\nowns(george,pencil).\nlikes(eve,ball).\nsibling(eve,carol).\nsibling(bob,dave).\ncold.\nsibling(george,carol).\nlikes(eve,carol).\nparent(dave,bob).\nenemy(carol,eve).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice owns book.\nIf alice owns book, then alice owns book.\nIf eve is an enemy of george and phone is wet and it is sunny, then it is hot.\nIf bob likes phone and frank is happy, then it is hot.\nIf alice is hungry, then carol owns ball.\nIf car is small and it is hot and carol dislikes george, then carol is an enemy of eve.\nIf alice is sad, then frank is an enemy of dave.\nIf car is small and eve likes apple and dave is a sibling of eve, then alice is a parent of alice.\nIf pencil is small and bob is a friend of alice and george is an enemy of bob, then pencil is wet.\nIf dave is sad and eve dislikes phone and carol likes book, then bob is a parent of dave.\nIf eve owns apple and it is sunny, then car is wet.\nIf george is a friend of alice and apple is small and carol is sad, then carol owns phone.\nIf alice is an enemy of frank, then george is happy.\nIf bob is sad, then george is happy.\nIf eve owns ball, then it is cold.\nIf carol owns apple, then it is cold.\nIf carol dislikes apple, then car is wet.\nIf george likes car and it is cold and ball is wet, then car is small.\nIf it is cold and alice is hungry, then book is small.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\neve likes george.\nalice is a sibling of dave.\ncarol likes car.\ngeorge is an enemy of frank.\ngeorge likes eve.\ngeorge owns pencil.\neve likes ball.\neve is a sibling of carol.\nbob is a sibling of dave.\nit is cold.\ngeorge is a sibling of carol.\neve likes carol.\ndave is a parent of bob.\ncarol is an enemy of eve.\n\nOBSERVATION: alice owns book is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": 2,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "owns(alice,book) :- sunny.\nowns(alice,book) :- owns(alice,book).\nhot :- enemy(eve,george), wet(phone), sunny.\nhot :- likes(bob,phone), happy(frank).\nowns(carol,ball) :- hungry(alice).\nenemy(carol,eve) :- small(car), hot, dislikes(carol,george).\nenemy(frank,dave) :- sad(alice).\nparent(alice,alice) :- small(car), likes(eve,apple), sibling(dave,eve).\nwet(pencil) :- small(pencil), friend(bob,alice), enemy(george,bob).\nparent(bob,dave) :- sad(dave), dislikes(eve,phone), likes(carol,book).\nwet(car) :- owns(eve,apple), sunny.\nowns(carol,phone) :- friend(george,alice), small(apple), sad(carol).\nhappy(george) :- enemy(alice,frank).\nhappy(george) :- sad(bob).\ncold :- owns(eve,ball).\ncold :- owns(carol,apple).\nwet(car) :- dislikes(carol,apple).\nsmall(car) :- likes(george,car), cold, wet(ball).\nsmall(book) :- cold, hungry(alice).\nsunny.\nenemy(alice,bob).\nlikes(eve,george).\nsibling(alice,dave).\nlikes(carol,car).\nenemy(george,frank).\nlikes(george,eve).\nowns(george,pencil).\nlikes(eve,ball).\nsibling(eve,carol).\nsibling(bob,dave).\ncold.\nsibling(george,carol).\nlikes(eve,carol).\nenemy(carol,eve).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice owns book.\nIf alice owns book, then alice owns book.\nIf eve is an enemy of george and phone is wet and it is sunny, then it is hot.\nIf bob likes phone and frank is happy, then it is hot.\nIf alice is hungry, then carol owns ball.\nIf car is small and it is hot and carol dislikes george, then carol is an enemy of eve.\nIf alice is sad, then frank is an enemy of dave.\nIf car is small and eve likes apple and dave is a sibling of eve, then alice is a parent of alice.\nIf pencil is small and bob is a friend of alice and george is an enemy of bob, then pencil is wet.\nIf dave is sad and eve dislikes phone and carol likes book, then bob is a parent of dave.\nIf eve owns apple and it is sunny, then car is wet.\nIf george is a friend of alice and apple is small and carol is sad, then carol owns phone.\nIf alice is an enemy of frank, then george is happy.\nIf bob is sad, then george is happy.\nIf eve owns ball, then it is cold.\nIf carol owns apple, then it is cold.\nIf carol dislikes apple, then car is wet.\nIf george likes car and it is cold and ball is wet, then car is small.\nIf it is cold and alice is hungry, then book is small.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\neve likes george.\nalice is a sibling of dave.\ncarol likes car.\ngeorge is an enemy of frank.\ngeorge likes eve.\ngeorge owns pencil.\neve likes ball.\neve is a sibling of carol.\nbob is a sibling of dave.\nit is cold.\ngeorge is a sibling of carol.\neve likes carol.\ndave is a parent of bob.\ncarol is an enemy of eve.\n\nOBSERVATION: alice owns book is true.\n\nQUESTION:\nCould dave is a parent of bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(george,carol).",
    "c": "owns(alice,book) :- sunny.\nowns(alice,book) :- owns(alice,book).\nhot :- enemy(eve,george), wet(phone), sunny.\nhot :- likes(bob,phone), happy(frank).\nowns(carol,ball) :- hungry(alice).\nenemy(carol,eve) :- small(car), hot, dislikes(carol,george).\nenemy(frank,dave) :- sad(alice).\nparent(alice,alice) :- small(car), likes(eve,apple), sibling(dave,eve).\nwet(pencil) :- small(pencil), friend(bob,alice), enemy(george,bob).\nparent(bob,dave) :- sad(dave), dislikes(eve,phone), likes(carol,book).\nwet(car) :- owns(eve,apple), sunny.\nowns(carol,phone) :- friend(george,alice), small(apple), sad(carol).\nhappy(george) :- enemy(alice,frank).\nhappy(george) :- sad(bob).\ncold :- owns(eve,ball).\ncold :- owns(carol,apple).\nwet(car) :- dislikes(carol,apple).\nsmall(car) :- likes(george,car), cold, wet(ball).\nsmall(book) :- cold, hungry(alice).\nsunny.\nenemy(alice,bob).\nlikes(eve,george).\nsibling(alice,dave).\nlikes(carol,car).\nenemy(george,frank).\nlikes(george,eve).\nowns(george,pencil).\nlikes(eve,ball).\nsibling(eve,carol).\nsibling(bob,dave).\ncold.\nlikes(eve,carol).\nparent(dave,bob).\nenemy(carol,eve).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice owns book.\nIf alice owns book, then alice owns book.\nIf eve is an enemy of george and phone is wet and it is sunny, then it is hot.\nIf bob likes phone and frank is happy, then it is hot.\nIf alice is hungry, then carol owns ball.\nIf car is small and it is hot and carol dislikes george, then carol is an enemy of eve.\nIf alice is sad, then frank is an enemy of dave.\nIf car is small and eve likes apple and dave is a sibling of eve, then alice is a parent of alice.\nIf pencil is small and bob is a friend of alice and george is an enemy of bob, then pencil is wet.\nIf dave is sad and eve dislikes phone and carol likes book, then bob is a parent of dave.\nIf eve owns apple and it is sunny, then car is wet.\nIf george is a friend of alice and apple is small and carol is sad, then carol owns phone.\nIf alice is an enemy of frank, then george is happy.\nIf bob is sad, then george is happy.\nIf eve owns ball, then it is cold.\nIf carol owns apple, then it is cold.\nIf carol dislikes apple, then car is wet.\nIf george likes car and it is cold and ball is wet, then car is small.\nIf it is cold and alice is hungry, then book is small.\n\nAnd the following facts:\nit is sunny.\nalice is an enemy of bob.\neve likes george.\nalice is a sibling of dave.\ncarol likes car.\ngeorge is an enemy of frank.\ngeorge likes eve.\ngeorge owns pencil.\neve likes ball.\neve is a sibling of carol.\nbob is a sibling of dave.\nit is cold.\ngeorge is a sibling of carol.\neve likes carol.\ndave is a parent of bob.\ncarol is an enemy of eve.\n\nOBSERVATION: alice owns book is true.\n\nQUESTION:\nCould george is a sibling of carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sibling(frank,bob).",
    "c": "friend(george,carol) :- hungry(bob).\nsibling(frank,bob) :- friend(george,carol).\ntall(dave) :- sibling(frank,bob).\nwet(pencil) :- tall(dave).\nfriend(alice,bob) :- big(ball), friend(eve,bob).\nlikes(dave,car) :- sunny.\nfriend(carol,bob) :- friend(bob,eve).\nfriend(eve,dave) :- hot.\nlikes(alice,phone) :- tall(carol), hungry(eve).\nhot :- likes(eve,ball), wet(pencil), sunny.\nwet(phone) :- sad(frank), sunny, dislikes(eve,alice).\ntall(eve) :- tall(eve), tall(bob).\nlikes(bob,carol) :- cold, sibling(eve,bob).\nfriend(eve,carol) :- sad(george).\nsad(dave) :- sad(bob).\ntall(bob) :- friend(bob,eve).\nhappy(dave) :- happy(alice), enemy(bob,eve).\nsad(bob) :- sad(george), happy(alice), enemy(alice,george).\nhappy(dave) :- sad(frank), big(apple).\nhungry(bob).\ndislikes(frank,dave).\nlikes(frank,book).\ndislikes(alice,ball).\nsibling(bob,george).\ndislikes(carol,pencil).\nlikes(frank,bob).\nfriend(alice,frank).\nenemy(bob,dave).\ndislikes(carol,eve).\nfriend(carol,frank).\ndislikes(carol,book).\nfriend(george,dave).\nwet(phone).\ndislikes(george,carol).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf bob is hungry, then george is a friend of carol.\nIf george is a friend of carol, then frank is a sibling of bob.\nIf frank is a sibling of bob, then dave is tall.\nIf dave is tall, then pencil is wet.\nIf ball is big and eve is a friend of bob, then alice is a friend of bob.\nIf it is sunny, then dave likes car.\nIf bob is a friend of eve, then carol is a friend of bob.\nIf it is hot, then eve is a friend of dave.\nIf carol is tall and eve is hungry, then alice likes phone.\nIf eve likes ball and pencil is wet and it is sunny, then it is hot.\nIf frank is sad and it is sunny and eve dislikes alice, then phone is wet.\nIf eve is tall and bob is tall, then eve is tall.\nIf it is cold and eve is a sibling of bob, then bob likes carol.\nIf george is sad, then eve is a friend of carol.\nIf bob is sad, then dave is sad.\nIf bob is a friend of eve, then bob is tall.\nIf alice is happy and bob is an enemy of eve, then dave is happy.\nIf george is sad and alice is happy and alice is an enemy of george, then bob is sad.\nIf frank is sad and apple is big, then dave is happy.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes dave.\nfrank likes book.\nalice dislikes ball.\nbob is a sibling of george.\ncarol dislikes pencil.\nfrank likes bob.\nalice is a friend of frank.\nbob is an enemy of dave.\ncarol dislikes eve.\ncarol is a friend of frank.\ncarol dislikes book.\ngeorge is a friend of dave.\nphone is wet.\ngeorge dislikes carol.\ncarol is a friend of bob.\n\nQUESTION:\nIs frank is a sibling of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "friend(george,carol) :- hungry(bob).\nsibling(frank,bob) :- friend(george,carol).\ntall(dave) :- sibling(frank,bob).\nwet(pencil) :- tall(dave).\nfriend(alice,bob) :- big(ball), friend(eve,bob).\nlikes(dave,car) :- sunny.\nfriend(carol,bob) :- friend(bob,eve).\nfriend(eve,dave) :- hot.\nlikes(alice,phone) :- tall(carol), hungry(eve).\nhot :- likes(eve,ball), wet(pencil), sunny.\nwet(phone) :- sad(frank), sunny, dislikes(eve,alice).\ntall(eve) :- tall(eve), tall(bob).\nlikes(bob,carol) :- cold, sibling(eve,bob).\nfriend(eve,carol) :- sad(george).\nsad(dave) :- sad(bob).\ntall(bob) :- friend(bob,eve).\nhappy(dave) :- happy(alice), enemy(bob,eve).\nsad(bob) :- sad(george), happy(alice), enemy(alice,george).\nhappy(dave) :- sad(frank), big(apple).\nhungry(bob).\ndislikes(frank,dave).\nlikes(frank,book).\ndislikes(alice,ball).\nsibling(bob,george).\ndislikes(carol,pencil).\nlikes(frank,bob).\nfriend(alice,frank).\nenemy(bob,dave).\ndislikes(carol,eve).\nfriend(carol,frank).\ndislikes(carol,book).\nfriend(george,dave).\nwet(phone).\ndislikes(george,carol).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf bob is hungry, then george is a friend of carol.\nIf george is a friend of carol, then frank is a sibling of bob.\nIf frank is a sibling of bob, then dave is tall.\nIf dave is tall, then pencil is wet.\nIf ball is big and eve is a friend of bob, then alice is a friend of bob.\nIf it is sunny, then dave likes car.\nIf bob is a friend of eve, then carol is a friend of bob.\nIf it is hot, then eve is a friend of dave.\nIf carol is tall and eve is hungry, then alice likes phone.\nIf eve likes ball and pencil is wet and it is sunny, then it is hot.\nIf frank is sad and it is sunny and eve dislikes alice, then phone is wet.\nIf eve is tall and bob is tall, then eve is tall.\nIf it is cold and eve is a sibling of bob, then bob likes carol.\nIf george is sad, then eve is a friend of carol.\nIf bob is sad, then dave is sad.\nIf bob is a friend of eve, then bob is tall.\nIf alice is happy and bob is an enemy of eve, then dave is happy.\nIf george is sad and alice is happy and alice is an enemy of george, then bob is sad.\nIf frank is sad and apple is big, then dave is happy.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes dave.\nfrank likes book.\nalice dislikes ball.\nbob is a sibling of george.\ncarol dislikes pencil.\nfrank likes bob.\nalice is a friend of frank.\nbob is an enemy of dave.\ncarol dislikes eve.\ncarol is a friend of frank.\ncarol dislikes book.\ngeorge is a friend of dave.\nphone is wet.\ngeorge dislikes carol.\ncarol is a friend of bob.\n\nQUESTION:\nIs phone is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,ball).",
    "c": "friend(george,carol) :- hungry(bob).\nsibling(frank,bob) :- friend(george,carol).\ntall(dave) :- sibling(frank,bob).\nwet(pencil) :- tall(dave).\nfriend(alice,bob) :- big(ball), friend(eve,bob).\nlikes(dave,car) :- sunny.\nfriend(carol,bob) :- friend(bob,eve).\nfriend(eve,dave) :- hot.\nlikes(alice,phone) :- tall(carol), hungry(eve).\nhot :- likes(eve,ball), wet(pencil), sunny.\nwet(phone) :- sad(frank), sunny, dislikes(eve,alice).\ntall(eve) :- tall(eve), tall(bob).\nlikes(bob,carol) :- cold, sibling(eve,bob).\nfriend(eve,carol) :- sad(george).\nsad(dave) :- sad(bob).\ntall(bob) :- friend(bob,eve).\nhappy(dave) :- happy(alice), enemy(bob,eve).\nsad(bob) :- sad(george), happy(alice), enemy(alice,george).\nhappy(dave) :- sad(frank), big(apple).\nhungry(bob).\ndislikes(frank,dave).\nlikes(frank,book).\ndislikes(alice,ball).\nsibling(bob,george).\ndislikes(carol,pencil).\nlikes(frank,bob).\nfriend(alice,frank).\nenemy(bob,dave).\ndislikes(carol,eve).\nfriend(carol,frank).\ndislikes(carol,book).\nfriend(george,dave).\nwet(phone).\ndislikes(george,carol).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf bob is hungry, then george is a friend of carol.\nIf george is a friend of carol, then frank is a sibling of bob.\nIf frank is a sibling of bob, then dave is tall.\nIf dave is tall, then pencil is wet.\nIf ball is big and eve is a friend of bob, then alice is a friend of bob.\nIf it is sunny, then dave likes car.\nIf bob is a friend of eve, then carol is a friend of bob.\nIf it is hot, then eve is a friend of dave.\nIf carol is tall and eve is hungry, then alice likes phone.\nIf eve likes ball and pencil is wet and it is sunny, then it is hot.\nIf frank is sad and it is sunny and eve dislikes alice, then phone is wet.\nIf eve is tall and bob is tall, then eve is tall.\nIf it is cold and eve is a sibling of bob, then bob likes carol.\nIf george is sad, then eve is a friend of carol.\nIf bob is sad, then dave is sad.\nIf bob is a friend of eve, then bob is tall.\nIf alice is happy and bob is an enemy of eve, then dave is happy.\nIf george is sad and alice is happy and alice is an enemy of george, then bob is sad.\nIf frank is sad and apple is big, then dave is happy.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes dave.\nfrank likes book.\nalice dislikes ball.\nbob is a sibling of george.\ncarol dislikes pencil.\nfrank likes bob.\nalice is a friend of frank.\nbob is an enemy of dave.\ncarol dislikes eve.\ncarol is a friend of frank.\ncarol dislikes book.\ngeorge is a friend of dave.\nphone is wet.\ngeorge dislikes carol.\ncarol is a friend of bob.\n\nQUESTION:\nIs alice dislikes ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "friend(george,carol) :- hungry(bob).\nsibling(frank,bob) :- friend(george,carol).\ntall(dave) :- sibling(frank,bob).\nwet(pencil) :- tall(dave).\nfriend(alice,bob) :- big(ball), friend(eve,bob).\nlikes(dave,car) :- sunny.\nfriend(carol,bob) :- friend(bob,eve).\nfriend(eve,dave) :- hot.\nlikes(alice,phone) :- tall(carol), hungry(eve).\nhot :- likes(eve,ball), wet(pencil), sunny.\nwet(phone) :- sad(frank), sunny, dislikes(eve,alice).\ntall(eve) :- tall(eve), tall(bob).\nlikes(bob,carol) :- cold, sibling(eve,bob).\nfriend(eve,carol) :- sad(george).\nsad(dave) :- sad(bob).\ntall(bob) :- friend(bob,eve).\nhappy(dave) :- happy(alice), enemy(bob,eve).\nsad(bob) :- sad(george), happy(alice), enemy(alice,george).\nhappy(dave) :- sad(frank), big(apple).\nhungry(bob).\ndislikes(frank,dave).\nlikes(frank,book).\ndislikes(alice,ball).\nsibling(bob,george).\ndislikes(carol,pencil).\nlikes(frank,bob).\nfriend(alice,frank).\nenemy(bob,dave).\ndislikes(carol,eve).\nfriend(carol,frank).\ndislikes(carol,book).\nfriend(george,dave).\nwet(phone).\ndislikes(george,carol).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf bob is hungry, then george is a friend of carol.\nIf george is a friend of carol, then frank is a sibling of bob.\nIf frank is a sibling of bob, then dave is tall.\nIf dave is tall, then pencil is wet.\nIf ball is big and eve is a friend of bob, then alice is a friend of bob.\nIf it is sunny, then dave likes car.\nIf bob is a friend of eve, then carol is a friend of bob.\nIf it is hot, then eve is a friend of dave.\nIf carol is tall and eve is hungry, then alice likes phone.\nIf eve likes ball and pencil is wet and it is sunny, then it is hot.\nIf frank is sad and it is sunny and eve dislikes alice, then phone is wet.\nIf eve is tall and bob is tall, then eve is tall.\nIf it is cold and eve is a sibling of bob, then bob likes carol.\nIf george is sad, then eve is a friend of carol.\nIf bob is sad, then dave is sad.\nIf bob is a friend of eve, then bob is tall.\nIf alice is happy and bob is an enemy of eve, then dave is happy.\nIf george is sad and alice is happy and alice is an enemy of george, then bob is sad.\nIf frank is sad and apple is big, then dave is happy.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes dave.\nfrank likes book.\nalice dislikes ball.\nbob is a sibling of george.\ncarol dislikes pencil.\nfrank likes bob.\nalice is a friend of frank.\nbob is an enemy of dave.\ncarol dislikes eve.\ncarol is a friend of frank.\ncarol dislikes book.\ngeorge is a friend of dave.\nphone is wet.\ngeorge dislikes carol.\ncarol is a friend of bob.\n\nQUESTION:\nIs frank is tall true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,frank).",
    "c": "friend(george,carol) :- hungry(bob).\nsibling(frank,bob) :- friend(george,carol).\ntall(dave) :- sibling(frank,bob).\nwet(pencil) :- tall(dave).\nfriend(alice,bob) :- big(ball), friend(eve,bob).\nlikes(dave,car) :- sunny.\nfriend(carol,bob) :- friend(bob,eve).\nfriend(eve,dave) :- hot.\nlikes(alice,phone) :- tall(carol), hungry(eve).\nhot :- likes(eve,ball), wet(pencil), sunny.\nwet(phone) :- sad(frank), sunny, dislikes(eve,alice).\ntall(eve) :- tall(eve), tall(bob).\nlikes(bob,carol) :- cold, sibling(eve,bob).\nfriend(eve,carol) :- sad(george).\nsad(dave) :- sad(bob).\ntall(bob) :- friend(bob,eve).\nhappy(dave) :- happy(alice), enemy(bob,eve).\nsad(bob) :- sad(george), happy(alice), enemy(alice,george).\nhappy(dave) :- sad(frank), big(apple).\nhungry(bob).\ndislikes(frank,dave).\nlikes(frank,book).\ndislikes(alice,ball).\nsibling(bob,george).\ndislikes(carol,pencil).\nlikes(frank,bob).\nfriend(alice,frank).\nenemy(bob,dave).\ndislikes(carol,eve).\nfriend(carol,frank).\ndislikes(carol,book).\nfriend(george,dave).\nwet(phone).\ndislikes(george,carol).\nfriend(carol,bob).",
    "natural language": "You are given the following information:\nIf bob is hungry, then george is a friend of carol.\nIf george is a friend of carol, then frank is a sibling of bob.\nIf frank is a sibling of bob, then dave is tall.\nIf dave is tall, then pencil is wet.\nIf ball is big and eve is a friend of bob, then alice is a friend of bob.\nIf it is sunny, then dave likes car.\nIf bob is a friend of eve, then carol is a friend of bob.\nIf it is hot, then eve is a friend of dave.\nIf carol is tall and eve is hungry, then alice likes phone.\nIf eve likes ball and pencil is wet and it is sunny, then it is hot.\nIf frank is sad and it is sunny and eve dislikes alice, then phone is wet.\nIf eve is tall and bob is tall, then eve is tall.\nIf it is cold and eve is a sibling of bob, then bob likes carol.\nIf george is sad, then eve is a friend of carol.\nIf bob is sad, then dave is sad.\nIf bob is a friend of eve, then bob is tall.\nIf alice is happy and bob is an enemy of eve, then dave is happy.\nIf george is sad and alice is happy and alice is an enemy of george, then bob is sad.\nIf frank is sad and apple is big, then dave is happy.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes dave.\nfrank likes book.\nalice dislikes ball.\nbob is a sibling of george.\ncarol dislikes pencil.\nfrank likes bob.\nalice is a friend of frank.\nbob is an enemy of dave.\ncarol dislikes eve.\ncarol is a friend of frank.\ncarol dislikes book.\ngeorge is a friend of dave.\nphone is wet.\ngeorge dislikes carol.\ncarol is a friend of bob.\n\nQUESTION:\nIs eve dislikes frank true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "friend(george,carol) :- hungry(bob).\nsibling(frank,bob) :- friend(george,carol).\ntall(dave) :- sibling(frank,bob).\nwet(pencil) :- tall(dave).\nfriend(alice,bob) :- big(ball), friend(eve,bob).\nlikes(dave,car) :- sunny.\nfriend(carol,bob) :- friend(bob,eve).\nfriend(eve,dave) :- hot.\nlikes(alice,phone) :- tall(carol), hungry(eve).\nhot :- likes(eve,ball), wet(pencil), sunny.\nwet(phone) :- sad(frank), sunny, dislikes(eve,alice).\ntall(eve) :- tall(eve), tall(bob).\nlikes(bob,carol) :- cold, sibling(eve,bob).\nfriend(eve,carol) :- sad(george).\nsad(dave) :- sad(bob).\ntall(bob) :- friend(bob,eve).\nhappy(dave) :- happy(alice), enemy(bob,eve).\nsad(bob) :- sad(george), happy(alice), enemy(alice,george).\nhappy(dave) :- sad(frank), big(apple).\ndislikes(frank,dave).\nlikes(frank,book).\ndislikes(alice,ball).\nsibling(bob,george).\ndislikes(carol,pencil).\nlikes(frank,bob).\nfriend(alice,frank).\nenemy(bob,dave).\ndislikes(carol,eve).\nfriend(carol,frank).\ndislikes(carol,book).\nfriend(george,dave).\nwet(phone).\ndislikes(george,carol).\nfriend(carol,bob).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then george is a friend of carol.\nIf george is a friend of carol, then frank is a sibling of bob.\nIf frank is a sibling of bob, then dave is tall.\nIf dave is tall, then pencil is wet.\nIf ball is big and eve is a friend of bob, then alice is a friend of bob.\nIf it is sunny, then dave likes car.\nIf bob is a friend of eve, then carol is a friend of bob.\nIf it is hot, then eve is a friend of dave.\nIf carol is tall and eve is hungry, then alice likes phone.\nIf eve likes ball and pencil is wet and it is sunny, then it is hot.\nIf frank is sad and it is sunny and eve dislikes alice, then phone is wet.\nIf eve is tall and bob is tall, then eve is tall.\nIf it is cold and eve is a sibling of bob, then bob likes carol.\nIf george is sad, then eve is a friend of carol.\nIf bob is sad, then dave is sad.\nIf bob is a friend of eve, then bob is tall.\nIf alice is happy and bob is an enemy of eve, then dave is happy.\nIf george is sad and alice is happy and alice is an enemy of george, then bob is sad.\nIf frank is sad and apple is big, then dave is happy.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes dave.\nfrank likes book.\nalice dislikes ball.\nbob is a sibling of george.\ncarol dislikes pencil.\nfrank likes bob.\nalice is a friend of frank.\nbob is an enemy of dave.\ncarol dislikes eve.\ncarol is a friend of frank.\ncarol dislikes book.\ngeorge is a friend of dave.\nphone is wet.\ngeorge dislikes carol.\ncarol is a friend of bob.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould bob is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(frank,dave).",
    "c": "friend(george,carol) :- hungry(bob).\nsibling(frank,bob) :- friend(george,carol).\ntall(dave) :- sibling(frank,bob).\nwet(pencil) :- tall(dave).\nfriend(alice,bob) :- big(ball), friend(eve,bob).\nlikes(dave,car) :- sunny.\nfriend(carol,bob) :- friend(bob,eve).\nfriend(eve,dave) :- hot.\nlikes(alice,phone) :- tall(carol), hungry(eve).\nhot :- likes(eve,ball), wet(pencil), sunny.\nwet(phone) :- sad(frank), sunny, dislikes(eve,alice).\ntall(eve) :- tall(eve), tall(bob).\nlikes(bob,carol) :- cold, sibling(eve,bob).\nfriend(eve,carol) :- sad(george).\nsad(dave) :- sad(bob).\ntall(bob) :- friend(bob,eve).\nhappy(dave) :- happy(alice), enemy(bob,eve).\nsad(bob) :- sad(george), happy(alice), enemy(alice,george).\nhappy(dave) :- sad(frank), big(apple).\nhungry(bob).\nlikes(frank,book).\ndislikes(alice,ball).\nsibling(bob,george).\ndislikes(carol,pencil).\nlikes(frank,bob).\nfriend(alice,frank).\nenemy(bob,dave).\ndislikes(carol,eve).\nfriend(carol,frank).\ndislikes(carol,book).\nfriend(george,dave).\nwet(phone).\ndislikes(george,carol).\nfriend(carol,bob).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then george is a friend of carol.\nIf george is a friend of carol, then frank is a sibling of bob.\nIf frank is a sibling of bob, then dave is tall.\nIf dave is tall, then pencil is wet.\nIf ball is big and eve is a friend of bob, then alice is a friend of bob.\nIf it is sunny, then dave likes car.\nIf bob is a friend of eve, then carol is a friend of bob.\nIf it is hot, then eve is a friend of dave.\nIf carol is tall and eve is hungry, then alice likes phone.\nIf eve likes ball and pencil is wet and it is sunny, then it is hot.\nIf frank is sad and it is sunny and eve dislikes alice, then phone is wet.\nIf eve is tall and bob is tall, then eve is tall.\nIf it is cold and eve is a sibling of bob, then bob likes carol.\nIf george is sad, then eve is a friend of carol.\nIf bob is sad, then dave is sad.\nIf bob is a friend of eve, then bob is tall.\nIf alice is happy and bob is an enemy of eve, then dave is happy.\nIf george is sad and alice is happy and alice is an enemy of george, then bob is sad.\nIf frank is sad and apple is big, then dave is happy.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes dave.\nfrank likes book.\nalice dislikes ball.\nbob is a sibling of george.\ncarol dislikes pencil.\nfrank likes bob.\nalice is a friend of frank.\nbob is an enemy of dave.\ncarol dislikes eve.\ncarol is a friend of frank.\ncarol dislikes book.\ngeorge is a friend of dave.\nphone is wet.\ngeorge dislikes carol.\ncarol is a friend of bob.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould frank dislikes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(george,carol).",
    "c": "friend(george,carol) :- hungry(bob).\nsibling(frank,bob) :- friend(george,carol).\ntall(dave) :- sibling(frank,bob).\nwet(pencil) :- tall(dave).\nfriend(alice,bob) :- big(ball), friend(eve,bob).\nlikes(dave,car) :- sunny.\nfriend(carol,bob) :- friend(bob,eve).\nfriend(eve,dave) :- hot.\nlikes(alice,phone) :- tall(carol), hungry(eve).\nhot :- likes(eve,ball), wet(pencil), sunny.\nwet(phone) :- sad(frank), sunny, dislikes(eve,alice).\ntall(eve) :- tall(eve), tall(bob).\nlikes(bob,carol) :- cold, sibling(eve,bob).\nfriend(eve,carol) :- sad(george).\nsad(dave) :- sad(bob).\ntall(bob) :- friend(bob,eve).\nhappy(dave) :- happy(alice), enemy(bob,eve).\nsad(bob) :- sad(george), happy(alice), enemy(alice,george).\nhappy(dave) :- sad(frank), big(apple).\nhungry(bob).\ndislikes(frank,dave).\nlikes(frank,book).\ndislikes(alice,ball).\nsibling(bob,george).\ndislikes(carol,pencil).\nlikes(frank,bob).\nfriend(alice,frank).\nenemy(bob,dave).\ndislikes(carol,eve).\nfriend(carol,frank).\ndislikes(carol,book).\nfriend(george,dave).\nwet(phone).\nfriend(carol,bob).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then george is a friend of carol.\nIf george is a friend of carol, then frank is a sibling of bob.\nIf frank is a sibling of bob, then dave is tall.\nIf dave is tall, then pencil is wet.\nIf ball is big and eve is a friend of bob, then alice is a friend of bob.\nIf it is sunny, then dave likes car.\nIf bob is a friend of eve, then carol is a friend of bob.\nIf it is hot, then eve is a friend of dave.\nIf carol is tall and eve is hungry, then alice likes phone.\nIf eve likes ball and pencil is wet and it is sunny, then it is hot.\nIf frank is sad and it is sunny and eve dislikes alice, then phone is wet.\nIf eve is tall and bob is tall, then eve is tall.\nIf it is cold and eve is a sibling of bob, then bob likes carol.\nIf george is sad, then eve is a friend of carol.\nIf bob is sad, then dave is sad.\nIf bob is a friend of eve, then bob is tall.\nIf alice is happy and bob is an enemy of eve, then dave is happy.\nIf george is sad and alice is happy and alice is an enemy of george, then bob is sad.\nIf frank is sad and apple is big, then dave is happy.\n\nAnd the following facts:\nbob is hungry.\nfrank dislikes dave.\nfrank likes book.\nalice dislikes ball.\nbob is a sibling of george.\ncarol dislikes pencil.\nfrank likes bob.\nalice is a friend of frank.\nbob is an enemy of dave.\ncarol dislikes eve.\ncarol is a friend of frank.\ncarol dislikes book.\ngeorge is a friend of dave.\nphone is wet.\ngeorge dislikes carol.\ncarol is a friend of bob.\n\nOBSERVATION: pencil is wet is true.\n\nQUESTION:\nCould george dislikes carol be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "happy(eve).",
    "c": "enemy(bob,frank) :- happy(dave).\nlikes(eve,book) :- enemy(bob,frank).\ndislikes(george,bob) :- likes(eve,book).\nowns(frank,book) :- dislikes(george,bob).\nbig(book) :- owns(carol,ball), tall(alice).\nhot :- enemy(bob,dave), happy(eve).\nhot :- dislikes(dave,phone).\ndislikes(dave,bob) :- wet(pencil), sunny.\nwet(apple) :- owns(bob,car).\nenemy(frank,dave) :- tall(carol).\nhappy(carol) :- cold.\nenemy(dave,george) :- friend(eve,frank), likes(bob,alice).\nhappy(alice) :- wet(phone), happy(frank), sad(dave).\ndislikes(george,eve) :- cold.\nwet(car) :- dislikes(carol,pencil).\nbig(car) :- friend(dave,eve), cold, big(book).\nparent(alice,bob) :- sibling(carol,eve).\nhappy(dave) :- friend(bob,frank), enemy(carol,eve), happy(carol).\nparent(eve,eve) :- likes(frank,carol), sad(frank), sunny.\nhappy(dave).\nparent(dave,eve).\nfriend(frank,eve).\nhappy(eve).\nowns(alice,apple).\nlikes(frank,book).\ndislikes(frank,eve).\ndislikes(carol,car).\nparent(frank,carol).\nowns(alice,phone).\nlikes(dave,alice).\ndislikes(alice,bob).\ndislikes(george,phone).\nparent(eve,carol).\nenemy(george,eve).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then bob is an enemy of frank.\nIf bob is an enemy of frank, then eve likes book.\nIf eve likes book, then george dislikes bob.\nIf george dislikes bob, then frank owns book.\nIf carol owns ball and alice is tall, then book is big.\nIf bob is an enemy of dave and eve is happy, then it is hot.\nIf dave dislikes phone, then it is hot.\nIf pencil is wet and it is sunny, then dave dislikes bob.\nIf bob owns car, then apple is wet.\nIf carol is tall, then frank is an enemy of dave.\nIf it is cold, then carol is happy.\nIf eve is a friend of frank and bob likes alice, then dave is an enemy of george.\nIf phone is wet and frank is happy and dave is sad, then alice is happy.\nIf it is cold, then george dislikes eve.\nIf carol dislikes pencil, then car is wet.\nIf dave is a friend of eve and it is cold and book is big, then car is big.\nIf carol is a sibling of eve, then alice is a parent of bob.\nIf bob is a friend of frank and carol is an enemy of eve and carol is happy, then dave is happy.\nIf frank likes carol and frank is sad and it is sunny, then eve is a parent of eve.\n\nAnd the following facts:\ndave is happy.\ndave is a parent of eve.\nfrank is a friend of eve.\neve is happy.\nalice owns apple.\nfrank likes book.\nfrank dislikes eve.\ncarol dislikes car.\nfrank is a parent of carol.\nalice owns phone.\ndave likes alice.\nalice dislikes bob.\ngeorge dislikes phone.\neve is a parent of carol.\ngeorge is an enemy of eve.\nalice is a friend of bob.\n\nQUESTION:\nIs eve is happy true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,eve).",
    "c": "enemy(bob,frank) :- happy(dave).\nlikes(eve,book) :- enemy(bob,frank).\ndislikes(george,bob) :- likes(eve,book).\nowns(frank,book) :- dislikes(george,bob).\nbig(book) :- owns(carol,ball), tall(alice).\nhot :- enemy(bob,dave), happy(eve).\nhot :- dislikes(dave,phone).\ndislikes(dave,bob) :- wet(pencil), sunny.\nwet(apple) :- owns(bob,car).\nenemy(frank,dave) :- tall(carol).\nhappy(carol) :- cold.\nenemy(dave,george) :- friend(eve,frank), likes(bob,alice).\nhappy(alice) :- wet(phone), happy(frank), sad(dave).\ndislikes(george,eve) :- cold.\nwet(car) :- dislikes(carol,pencil).\nbig(car) :- friend(dave,eve), cold, big(book).\nparent(alice,bob) :- sibling(carol,eve).\nhappy(dave) :- friend(bob,frank), enemy(carol,eve), happy(carol).\nparent(eve,eve) :- likes(frank,carol), sad(frank), sunny.\nhappy(dave).\nparent(dave,eve).\nfriend(frank,eve).\nhappy(eve).\nowns(alice,apple).\nlikes(frank,book).\ndislikes(frank,eve).\ndislikes(carol,car).\nparent(frank,carol).\nowns(alice,phone).\nlikes(dave,alice).\ndislikes(alice,bob).\ndislikes(george,phone).\nparent(eve,carol).\nenemy(george,eve).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then bob is an enemy of frank.\nIf bob is an enemy of frank, then eve likes book.\nIf eve likes book, then george dislikes bob.\nIf george dislikes bob, then frank owns book.\nIf carol owns ball and alice is tall, then book is big.\nIf bob is an enemy of dave and eve is happy, then it is hot.\nIf dave dislikes phone, then it is hot.\nIf pencil is wet and it is sunny, then dave dislikes bob.\nIf bob owns car, then apple is wet.\nIf carol is tall, then frank is an enemy of dave.\nIf it is cold, then carol is happy.\nIf eve is a friend of frank and bob likes alice, then dave is an enemy of george.\nIf phone is wet and frank is happy and dave is sad, then alice is happy.\nIf it is cold, then george dislikes eve.\nIf carol dislikes pencil, then car is wet.\nIf dave is a friend of eve and it is cold and book is big, then car is big.\nIf carol is a sibling of eve, then alice is a parent of bob.\nIf bob is a friend of frank and carol is an enemy of eve and carol is happy, then dave is happy.\nIf frank likes carol and frank is sad and it is sunny, then eve is a parent of eve.\n\nAnd the following facts:\ndave is happy.\ndave is a parent of eve.\nfrank is a friend of eve.\neve is happy.\nalice owns apple.\nfrank likes book.\nfrank dislikes eve.\ncarol dislikes car.\nfrank is a parent of carol.\nalice owns phone.\ndave likes alice.\nalice dislikes bob.\ngeorge dislikes phone.\neve is a parent of carol.\ngeorge is an enemy of eve.\nalice is a friend of bob.\n\nQUESTION:\nIs frank dislikes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,book).",
    "c": "enemy(bob,frank) :- happy(dave).\nlikes(eve,book) :- enemy(bob,frank).\ndislikes(george,bob) :- likes(eve,book).\nowns(frank,book) :- dislikes(george,bob).\nbig(book) :- owns(carol,ball), tall(alice).\nhot :- enemy(bob,dave), happy(eve).\nhot :- dislikes(dave,phone).\ndislikes(dave,bob) :- wet(pencil), sunny.\nwet(apple) :- owns(bob,car).\nenemy(frank,dave) :- tall(carol).\nhappy(carol) :- cold.\nenemy(dave,george) :- friend(eve,frank), likes(bob,alice).\nhappy(alice) :- wet(phone), happy(frank), sad(dave).\ndislikes(george,eve) :- cold.\nwet(car) :- dislikes(carol,pencil).\nbig(car) :- friend(dave,eve), cold, big(book).\nparent(alice,bob) :- sibling(carol,eve).\nhappy(dave) :- friend(bob,frank), enemy(carol,eve), happy(carol).\nparent(eve,eve) :- likes(frank,carol), sad(frank), sunny.\nhappy(dave).\nparent(dave,eve).\nfriend(frank,eve).\nhappy(eve).\nowns(alice,apple).\nlikes(frank,book).\ndislikes(frank,eve).\ndislikes(carol,car).\nparent(frank,carol).\nowns(alice,phone).\nlikes(dave,alice).\ndislikes(alice,bob).\ndislikes(george,phone).\nparent(eve,carol).\nenemy(george,eve).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then bob is an enemy of frank.\nIf bob is an enemy of frank, then eve likes book.\nIf eve likes book, then george dislikes bob.\nIf george dislikes bob, then frank owns book.\nIf carol owns ball and alice is tall, then book is big.\nIf bob is an enemy of dave and eve is happy, then it is hot.\nIf dave dislikes phone, then it is hot.\nIf pencil is wet and it is sunny, then dave dislikes bob.\nIf bob owns car, then apple is wet.\nIf carol is tall, then frank is an enemy of dave.\nIf it is cold, then carol is happy.\nIf eve is a friend of frank and bob likes alice, then dave is an enemy of george.\nIf phone is wet and frank is happy and dave is sad, then alice is happy.\nIf it is cold, then george dislikes eve.\nIf carol dislikes pencil, then car is wet.\nIf dave is a friend of eve and it is cold and book is big, then car is big.\nIf carol is a sibling of eve, then alice is a parent of bob.\nIf bob is a friend of frank and carol is an enemy of eve and carol is happy, then dave is happy.\nIf frank likes carol and frank is sad and it is sunny, then eve is a parent of eve.\n\nAnd the following facts:\ndave is happy.\ndave is a parent of eve.\nfrank is a friend of eve.\neve is happy.\nalice owns apple.\nfrank likes book.\nfrank dislikes eve.\ncarol dislikes car.\nfrank is a parent of carol.\nalice owns phone.\ndave likes alice.\nalice dislikes bob.\ngeorge dislikes phone.\neve is a parent of carol.\ngeorge is an enemy of eve.\nalice is a friend of bob.\n\nQUESTION:\nIs frank owns book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,eve).",
    "c": "enemy(bob,frank) :- happy(dave).\nlikes(eve,book) :- enemy(bob,frank).\ndislikes(george,bob) :- likes(eve,book).\nowns(frank,book) :- dislikes(george,bob).\nbig(book) :- owns(carol,ball), tall(alice).\nhot :- enemy(bob,dave), happy(eve).\nhot :- dislikes(dave,phone).\ndislikes(dave,bob) :- wet(pencil), sunny.\nwet(apple) :- owns(bob,car).\nenemy(frank,dave) :- tall(carol).\nhappy(carol) :- cold.\nenemy(dave,george) :- friend(eve,frank), likes(bob,alice).\nhappy(alice) :- wet(phone), happy(frank), sad(dave).\ndislikes(george,eve) :- cold.\nwet(car) :- dislikes(carol,pencil).\nbig(car) :- friend(dave,eve), cold, big(book).\nparent(alice,bob) :- sibling(carol,eve).\nhappy(dave) :- friend(bob,frank), enemy(carol,eve), happy(carol).\nparent(eve,eve) :- likes(frank,carol), sad(frank), sunny.\nhappy(dave).\nparent(dave,eve).\nfriend(frank,eve).\nhappy(eve).\nowns(alice,apple).\nlikes(frank,book).\ndislikes(frank,eve).\ndislikes(carol,car).\nparent(frank,carol).\nowns(alice,phone).\nlikes(dave,alice).\ndislikes(alice,bob).\ndislikes(george,phone).\nparent(eve,carol).\nenemy(george,eve).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then bob is an enemy of frank.\nIf bob is an enemy of frank, then eve likes book.\nIf eve likes book, then george dislikes bob.\nIf george dislikes bob, then frank owns book.\nIf carol owns ball and alice is tall, then book is big.\nIf bob is an enemy of dave and eve is happy, then it is hot.\nIf dave dislikes phone, then it is hot.\nIf pencil is wet and it is sunny, then dave dislikes bob.\nIf bob owns car, then apple is wet.\nIf carol is tall, then frank is an enemy of dave.\nIf it is cold, then carol is happy.\nIf eve is a friend of frank and bob likes alice, then dave is an enemy of george.\nIf phone is wet and frank is happy and dave is sad, then alice is happy.\nIf it is cold, then george dislikes eve.\nIf carol dislikes pencil, then car is wet.\nIf dave is a friend of eve and it is cold and book is big, then car is big.\nIf carol is a sibling of eve, then alice is a parent of bob.\nIf bob is a friend of frank and carol is an enemy of eve and carol is happy, then dave is happy.\nIf frank likes carol and frank is sad and it is sunny, then eve is a parent of eve.\n\nAnd the following facts:\ndave is happy.\ndave is a parent of eve.\nfrank is a friend of eve.\neve is happy.\nalice owns apple.\nfrank likes book.\nfrank dislikes eve.\ncarol dislikes car.\nfrank is a parent of carol.\nalice owns phone.\ndave likes alice.\nalice dislikes bob.\ngeorge dislikes phone.\neve is a parent of carol.\ngeorge is an enemy of eve.\nalice is a friend of bob.\n\nQUESTION:\nIs alice is a sibling of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,alice).",
    "c": "enemy(bob,frank) :- happy(dave).\nlikes(eve,book) :- enemy(bob,frank).\ndislikes(george,bob) :- likes(eve,book).\nowns(frank,book) :- dislikes(george,bob).\nbig(book) :- owns(carol,ball), tall(alice).\nhot :- enemy(bob,dave), happy(eve).\nhot :- dislikes(dave,phone).\ndislikes(dave,bob) :- wet(pencil), sunny.\nwet(apple) :- owns(bob,car).\nenemy(frank,dave) :- tall(carol).\nhappy(carol) :- cold.\nenemy(dave,george) :- friend(eve,frank), likes(bob,alice).\nhappy(alice) :- wet(phone), happy(frank), sad(dave).\ndislikes(george,eve) :- cold.\nwet(car) :- dislikes(carol,pencil).\nbig(car) :- friend(dave,eve), cold, big(book).\nparent(alice,bob) :- sibling(carol,eve).\nhappy(dave) :- friend(bob,frank), enemy(carol,eve), happy(carol).\nparent(eve,eve) :- likes(frank,carol), sad(frank), sunny.\nhappy(dave).\nparent(dave,eve).\nfriend(frank,eve).\nhappy(eve).\nowns(alice,apple).\nlikes(frank,book).\ndislikes(frank,eve).\ndislikes(carol,car).\nparent(frank,carol).\nowns(alice,phone).\nlikes(dave,alice).\ndislikes(alice,bob).\ndislikes(george,phone).\nparent(eve,carol).\nenemy(george,eve).\nfriend(alice,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then bob is an enemy of frank.\nIf bob is an enemy of frank, then eve likes book.\nIf eve likes book, then george dislikes bob.\nIf george dislikes bob, then frank owns book.\nIf carol owns ball and alice is tall, then book is big.\nIf bob is an enemy of dave and eve is happy, then it is hot.\nIf dave dislikes phone, then it is hot.\nIf pencil is wet and it is sunny, then dave dislikes bob.\nIf bob owns car, then apple is wet.\nIf carol is tall, then frank is an enemy of dave.\nIf it is cold, then carol is happy.\nIf eve is a friend of frank and bob likes alice, then dave is an enemy of george.\nIf phone is wet and frank is happy and dave is sad, then alice is happy.\nIf it is cold, then george dislikes eve.\nIf carol dislikes pencil, then car is wet.\nIf dave is a friend of eve and it is cold and book is big, then car is big.\nIf carol is a sibling of eve, then alice is a parent of bob.\nIf bob is a friend of frank and carol is an enemy of eve and carol is happy, then dave is happy.\nIf frank likes carol and frank is sad and it is sunny, then eve is a parent of eve.\n\nAnd the following facts:\ndave is happy.\ndave is a parent of eve.\nfrank is a friend of eve.\neve is happy.\nalice owns apple.\nfrank likes book.\nfrank dislikes eve.\ncarol dislikes car.\nfrank is a parent of carol.\nalice owns phone.\ndave likes alice.\nalice dislikes bob.\ngeorge dislikes phone.\neve is a parent of carol.\ngeorge is an enemy of eve.\nalice is a friend of bob.\n\nQUESTION:\nIs george is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "enemy(bob,frank) :- happy(dave).\nlikes(eve,book) :- enemy(bob,frank).\ndislikes(george,bob) :- likes(eve,book).\nowns(frank,book) :- dislikes(george,bob).\nbig(book) :- owns(carol,ball), tall(alice).\nhot :- enemy(bob,dave), happy(eve).\nhot :- dislikes(dave,phone).\ndislikes(dave,bob) :- wet(pencil), sunny.\nwet(apple) :- owns(bob,car).\nenemy(frank,dave) :- tall(carol).\nhappy(carol) :- cold.\nenemy(dave,george) :- friend(eve,frank), likes(bob,alice).\nhappy(alice) :- wet(phone), happy(frank), sad(dave).\ndislikes(george,eve) :- cold.\nwet(car) :- dislikes(carol,pencil).\nbig(car) :- friend(dave,eve), cold, big(book).\nparent(alice,bob) :- sibling(carol,eve).\nhappy(dave) :- friend(bob,frank), enemy(carol,eve), happy(carol).\nparent(eve,eve) :- likes(frank,carol), sad(frank), sunny.\nparent(dave,eve).\nfriend(frank,eve).\nhappy(eve).\nowns(alice,apple).\nlikes(frank,book).\ndislikes(frank,eve).\ndislikes(carol,car).\nparent(frank,carol).\nowns(alice,phone).\nlikes(dave,alice).\ndislikes(alice,bob).\ndislikes(george,phone).\nparent(eve,carol).\nenemy(george,eve).\nfriend(alice,bob).",
    "natural language": "You are given the following rules:\nIf dave is happy, then bob is an enemy of frank.\nIf bob is an enemy of frank, then eve likes book.\nIf eve likes book, then george dislikes bob.\nIf george dislikes bob, then frank owns book.\nIf carol owns ball and alice is tall, then book is big.\nIf bob is an enemy of dave and eve is happy, then it is hot.\nIf dave dislikes phone, then it is hot.\nIf pencil is wet and it is sunny, then dave dislikes bob.\nIf bob owns car, then apple is wet.\nIf carol is tall, then frank is an enemy of dave.\nIf it is cold, then carol is happy.\nIf eve is a friend of frank and bob likes alice, then dave is an enemy of george.\nIf phone is wet and frank is happy and dave is sad, then alice is happy.\nIf it is cold, then george dislikes eve.\nIf carol dislikes pencil, then car is wet.\nIf dave is a friend of eve and it is cold and book is big, then car is big.\nIf carol is a sibling of eve, then alice is a parent of bob.\nIf bob is a friend of frank and carol is an enemy of eve and carol is happy, then dave is happy.\nIf frank likes carol and frank is sad and it is sunny, then eve is a parent of eve.\n\nAnd the following facts:\ndave is happy.\ndave is a parent of eve.\nfrank is a friend of eve.\neve is happy.\nalice owns apple.\nfrank likes book.\nfrank dislikes eve.\ncarol dislikes car.\nfrank is a parent of carol.\nalice owns phone.\ndave likes alice.\nalice dislikes bob.\ngeorge dislikes phone.\neve is a parent of carol.\ngeorge is an enemy of eve.\nalice is a friend of bob.\n\nOBSERVATION: frank owns book is true.\n\nQUESTION:\nCould dave is happy be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": 4,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "parent(dave,eve).",
    "c": "enemy(bob,frank) :- happy(dave).\nlikes(eve,book) :- enemy(bob,frank).\ndislikes(george,bob) :- likes(eve,book).\nowns(frank,book) :- dislikes(george,bob).\nbig(book) :- owns(carol,ball), tall(alice).\nhot :- enemy(bob,dave), happy(eve).\nhot :- dislikes(dave,phone).\ndislikes(dave,bob) :- wet(pencil), sunny.\nwet(apple) :- owns(bob,car).\nenemy(frank,dave) :- tall(carol).\nhappy(carol) :- cold.\nenemy(dave,george) :- friend(eve,frank), likes(bob,alice).\nhappy(alice) :- wet(phone), happy(frank), sad(dave).\ndislikes(george,eve) :- cold.\nwet(car) :- dislikes(carol,pencil).\nbig(car) :- friend(dave,eve), cold, big(book).\nparent(alice,bob) :- sibling(carol,eve).\nhappy(dave) :- friend(bob,frank), enemy(carol,eve), happy(carol).\nparent(eve,eve) :- likes(frank,carol), sad(frank), sunny.\nhappy(dave).\nfriend(frank,eve).\nhappy(eve).\nowns(alice,apple).\nlikes(frank,book).\ndislikes(frank,eve).\ndislikes(carol,car).\nparent(frank,carol).\nowns(alice,phone).\nlikes(dave,alice).\ndislikes(alice,bob).\ndislikes(george,phone).\nparent(eve,carol).\nenemy(george,eve).\nfriend(alice,bob).",
    "natural language": "You are given the following rules:\nIf dave is happy, then bob is an enemy of frank.\nIf bob is an enemy of frank, then eve likes book.\nIf eve likes book, then george dislikes bob.\nIf george dislikes bob, then frank owns book.\nIf carol owns ball and alice is tall, then book is big.\nIf bob is an enemy of dave and eve is happy, then it is hot.\nIf dave dislikes phone, then it is hot.\nIf pencil is wet and it is sunny, then dave dislikes bob.\nIf bob owns car, then apple is wet.\nIf carol is tall, then frank is an enemy of dave.\nIf it is cold, then carol is happy.\nIf eve is a friend of frank and bob likes alice, then dave is an enemy of george.\nIf phone is wet and frank is happy and dave is sad, then alice is happy.\nIf it is cold, then george dislikes eve.\nIf carol dislikes pencil, then car is wet.\nIf dave is a friend of eve and it is cold and book is big, then car is big.\nIf carol is a sibling of eve, then alice is a parent of bob.\nIf bob is a friend of frank and carol is an enemy of eve and carol is happy, then dave is happy.\nIf frank likes carol and frank is sad and it is sunny, then eve is a parent of eve.\n\nAnd the following facts:\ndave is happy.\ndave is a parent of eve.\nfrank is a friend of eve.\neve is happy.\nalice owns apple.\nfrank likes book.\nfrank dislikes eve.\ncarol dislikes car.\nfrank is a parent of carol.\nalice owns phone.\ndave likes alice.\nalice dislikes bob.\ngeorge dislikes phone.\neve is a parent of carol.\ngeorge is an enemy of eve.\nalice is a friend of bob.\n\nOBSERVATION: frank owns book is true.\n\nQUESTION:\nCould dave is a parent of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,bob).",
    "c": "enemy(bob,frank) :- happy(dave).\nlikes(eve,book) :- enemy(bob,frank).\ndislikes(george,bob) :- likes(eve,book).\nowns(frank,book) :- dislikes(george,bob).\nbig(book) :- owns(carol,ball), tall(alice).\nhot :- enemy(bob,dave), happy(eve).\nhot :- dislikes(dave,phone).\ndislikes(dave,bob) :- wet(pencil), sunny.\nwet(apple) :- owns(bob,car).\nenemy(frank,dave) :- tall(carol).\nhappy(carol) :- cold.\nenemy(dave,george) :- friend(eve,frank), likes(bob,alice).\nhappy(alice) :- wet(phone), happy(frank), sad(dave).\ndislikes(george,eve) :- cold.\nwet(car) :- dislikes(carol,pencil).\nbig(car) :- friend(dave,eve), cold, big(book).\nparent(alice,bob) :- sibling(carol,eve).\nhappy(dave) :- friend(bob,frank), enemy(carol,eve), happy(carol).\nparent(eve,eve) :- likes(frank,carol), sad(frank), sunny.\nhappy(dave).\nparent(dave,eve).\nfriend(frank,eve).\nhappy(eve).\nowns(alice,apple).\nlikes(frank,book).\ndislikes(frank,eve).\ndislikes(carol,car).\nparent(frank,carol).\nowns(alice,phone).\nlikes(dave,alice).\ndislikes(george,phone).\nparent(eve,carol).\nenemy(george,eve).\nfriend(alice,bob).",
    "natural language": "You are given the following rules:\nIf dave is happy, then bob is an enemy of frank.\nIf bob is an enemy of frank, then eve likes book.\nIf eve likes book, then george dislikes bob.\nIf george dislikes bob, then frank owns book.\nIf carol owns ball and alice is tall, then book is big.\nIf bob is an enemy of dave and eve is happy, then it is hot.\nIf dave dislikes phone, then it is hot.\nIf pencil is wet and it is sunny, then dave dislikes bob.\nIf bob owns car, then apple is wet.\nIf carol is tall, then frank is an enemy of dave.\nIf it is cold, then carol is happy.\nIf eve is a friend of frank and bob likes alice, then dave is an enemy of george.\nIf phone is wet and frank is happy and dave is sad, then alice is happy.\nIf it is cold, then george dislikes eve.\nIf carol dislikes pencil, then car is wet.\nIf dave is a friend of eve and it is cold and book is big, then car is big.\nIf carol is a sibling of eve, then alice is a parent of bob.\nIf bob is a friend of frank and carol is an enemy of eve and carol is happy, then dave is happy.\nIf frank likes carol and frank is sad and it is sunny, then eve is a parent of eve.\n\nAnd the following facts:\ndave is happy.\ndave is a parent of eve.\nfrank is a friend of eve.\neve is happy.\nalice owns apple.\nfrank likes book.\nfrank dislikes eve.\ncarol dislikes car.\nfrank is a parent of carol.\nalice owns phone.\ndave likes alice.\nalice dislikes bob.\ngeorge dislikes phone.\neve is a parent of carol.\ngeorge is an enemy of eve.\nalice is a friend of bob.\n\nOBSERVATION: frank owns book is true.\n\nQUESTION:\nCould alice dislikes bob be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "wet(car) :- sad(eve).\nsmall(phone) :- wet(car).\ndislikes(frank,apple) :- small(phone).\nhungry(bob) :- dislikes(frank,apple).\nsad(dave) :- hungry(bob).\nhappy(dave) :- sad(dave).\nparent(george,alice) :- hot, parent(frank,frank).\nlikes(bob,eve) :- friend(george,alice).\ntall(george) :- happy(carol).\nlikes(alice,frank) :- likes(george,pencil), big(apple).\ntall(dave) :- sunny, tall(carol), tall(eve).\nparent(alice,george) :- wet(phone).\ndislikes(alice,bob) :- small(apple).\ndislikes(carol,book) :- small(car), friend(alice,dave), hungry(george).\nhungry(eve) :- hungry(frank), cold, hungry(eve).\nhungry(frank) :- owns(carol,pencil), friend(carol,alice), sibling(george,george).\nhot :- sibling(bob,dave), hot, enemy(dave,frank).\nhot :- hungry(bob).\ndislikes(bob,ball) :- dislikes(eve,book), tall(frank), dislikes(dave,alice).\nsad(eve).\ndislikes(alice,frank).\nparent(george,alice).\nsibling(george,bob).\nlikes(bob,apple).\nowns(alice,apple).\nsibling(carol,george).\ndislikes(carol,bob).\nfriend(alice,george).\nenemy(dave,eve).\nlikes(bob,dave).\nsibling(carol,bob).\nlikes(alice,bob).\ndislikes(george,carol).\nlikes(george,car).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf eve is sad, then car is wet.\nIf car is wet, then phone is small.\nIf phone is small, then frank dislikes apple.\nIf frank dislikes apple, then bob is hungry.\nIf bob is hungry, then dave is sad.\nIf dave is sad, then dave is happy.\nIf it is hot and frank is a parent of frank, then george is a parent of alice.\nIf george is a friend of alice, then bob likes eve.\nIf carol is happy, then george is tall.\nIf george likes pencil and apple is big, then alice likes frank.\nIf it is sunny and carol is tall and eve is tall, then dave is tall.\nIf phone is wet, then alice is a parent of george.\nIf apple is small, then alice dislikes bob.\nIf car is small and alice is a friend of dave and george is hungry, then carol dislikes book.\nIf frank is hungry and it is cold and eve is hungry, then eve is hungry.\nIf carol owns pencil and carol is a friend of alice and george is a sibling of george, then frank is hungry.\nIf bob is a sibling of dave and it is hot and dave is an enemy of frank, then it is hot.\nIf bob is hungry, then it is hot.\nIf eve dislikes book and frank is tall and dave dislikes alice, then bob dislikes ball.\n\nAnd the following facts:\neve is sad.\nalice dislikes frank.\ngeorge is a parent of alice.\ngeorge is a sibling of bob.\nbob likes apple.\nalice owns apple.\ncarol is a sibling of george.\ncarol dislikes bob.\nalice is a friend of george.\ndave is an enemy of eve.\nbob likes dave.\ncarol is a sibling of bob.\nalice likes bob.\ngeorge dislikes carol.\ngeorge likes car.\nalice is an enemy of george.\n\nQUESTION:\nIs car is wet true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(phone).",
    "c": "wet(car) :- sad(eve).\nsmall(phone) :- wet(car).\ndislikes(frank,apple) :- small(phone).\nhungry(bob) :- dislikes(frank,apple).\nsad(dave) :- hungry(bob).\nhappy(dave) :- sad(dave).\nparent(george,alice) :- hot, parent(frank,frank).\nlikes(bob,eve) :- friend(george,alice).\ntall(george) :- happy(carol).\nlikes(alice,frank) :- likes(george,pencil), big(apple).\ntall(dave) :- sunny, tall(carol), tall(eve).\nparent(alice,george) :- wet(phone).\ndislikes(alice,bob) :- small(apple).\ndislikes(carol,book) :- small(car), friend(alice,dave), hungry(george).\nhungry(eve) :- hungry(frank), cold, hungry(eve).\nhungry(frank) :- owns(carol,pencil), friend(carol,alice), sibling(george,george).\nhot :- sibling(bob,dave), hot, enemy(dave,frank).\nhot :- hungry(bob).\ndislikes(bob,ball) :- dislikes(eve,book), tall(frank), dislikes(dave,alice).\nsad(eve).\ndislikes(alice,frank).\nparent(george,alice).\nsibling(george,bob).\nlikes(bob,apple).\nowns(alice,apple).\nsibling(carol,george).\ndislikes(carol,bob).\nfriend(alice,george).\nenemy(dave,eve).\nlikes(bob,dave).\nsibling(carol,bob).\nlikes(alice,bob).\ndislikes(george,carol).\nlikes(george,car).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf eve is sad, then car is wet.\nIf car is wet, then phone is small.\nIf phone is small, then frank dislikes apple.\nIf frank dislikes apple, then bob is hungry.\nIf bob is hungry, then dave is sad.\nIf dave is sad, then dave is happy.\nIf it is hot and frank is a parent of frank, then george is a parent of alice.\nIf george is a friend of alice, then bob likes eve.\nIf carol is happy, then george is tall.\nIf george likes pencil and apple is big, then alice likes frank.\nIf it is sunny and carol is tall and eve is tall, then dave is tall.\nIf phone is wet, then alice is a parent of george.\nIf apple is small, then alice dislikes bob.\nIf car is small and alice is a friend of dave and george is hungry, then carol dislikes book.\nIf frank is hungry and it is cold and eve is hungry, then eve is hungry.\nIf carol owns pencil and carol is a friend of alice and george is a sibling of george, then frank is hungry.\nIf bob is a sibling of dave and it is hot and dave is an enemy of frank, then it is hot.\nIf bob is hungry, then it is hot.\nIf eve dislikes book and frank is tall and dave dislikes alice, then bob dislikes ball.\n\nAnd the following facts:\neve is sad.\nalice dislikes frank.\ngeorge is a parent of alice.\ngeorge is a sibling of bob.\nbob likes apple.\nalice owns apple.\ncarol is a sibling of george.\ncarol dislikes bob.\nalice is a friend of george.\ndave is an enemy of eve.\nbob likes dave.\ncarol is a sibling of bob.\nalice likes bob.\ngeorge dislikes carol.\ngeorge likes car.\nalice is an enemy of george.\n\nQUESTION:\nIs phone is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "wet(car) :- sad(eve).\nsmall(phone) :- wet(car).\ndislikes(frank,apple) :- small(phone).\nhungry(bob) :- dislikes(frank,apple).\nsad(dave) :- hungry(bob).\nhappy(dave) :- sad(dave).\nparent(george,alice) :- hot, parent(frank,frank).\nlikes(bob,eve) :- friend(george,alice).\ntall(george) :- happy(carol).\nlikes(alice,frank) :- likes(george,pencil), big(apple).\ntall(dave) :- sunny, tall(carol), tall(eve).\nparent(alice,george) :- wet(phone).\ndislikes(alice,bob) :- small(apple).\ndislikes(carol,book) :- small(car), friend(alice,dave), hungry(george).\nhungry(eve) :- hungry(frank), cold, hungry(eve).\nhungry(frank) :- owns(carol,pencil), friend(carol,alice), sibling(george,george).\nhot :- sibling(bob,dave), hot, enemy(dave,frank).\nhot :- hungry(bob).\ndislikes(bob,ball) :- dislikes(eve,book), tall(frank), dislikes(dave,alice).\nsad(eve).\ndislikes(alice,frank).\nparent(george,alice).\nsibling(george,bob).\nlikes(bob,apple).\nowns(alice,apple).\nsibling(carol,george).\ndislikes(carol,bob).\nfriend(alice,george).\nenemy(dave,eve).\nlikes(bob,dave).\nsibling(carol,bob).\nlikes(alice,bob).\ndislikes(george,carol).\nlikes(george,car).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf eve is sad, then car is wet.\nIf car is wet, then phone is small.\nIf phone is small, then frank dislikes apple.\nIf frank dislikes apple, then bob is hungry.\nIf bob is hungry, then dave is sad.\nIf dave is sad, then dave is happy.\nIf it is hot and frank is a parent of frank, then george is a parent of alice.\nIf george is a friend of alice, then bob likes eve.\nIf carol is happy, then george is tall.\nIf george likes pencil and apple is big, then alice likes frank.\nIf it is sunny and carol is tall and eve is tall, then dave is tall.\nIf phone is wet, then alice is a parent of george.\nIf apple is small, then alice dislikes bob.\nIf car is small and alice is a friend of dave and george is hungry, then carol dislikes book.\nIf frank is hungry and it is cold and eve is hungry, then eve is hungry.\nIf carol owns pencil and carol is a friend of alice and george is a sibling of george, then frank is hungry.\nIf bob is a sibling of dave and it is hot and dave is an enemy of frank, then it is hot.\nIf bob is hungry, then it is hot.\nIf eve dislikes book and frank is tall and dave dislikes alice, then bob dislikes ball.\n\nAnd the following facts:\neve is sad.\nalice dislikes frank.\ngeorge is a parent of alice.\ngeorge is a sibling of bob.\nbob likes apple.\nalice owns apple.\ncarol is a sibling of george.\ncarol dislikes bob.\nalice is a friend of george.\ndave is an enemy of eve.\nbob likes dave.\ncarol is a sibling of bob.\nalice likes bob.\ngeorge dislikes carol.\ngeorge likes car.\nalice is an enemy of george.\n\nQUESTION:\nIs george is a sibling of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,apple).",
    "c": "wet(car) :- sad(eve).\nsmall(phone) :- wet(car).\ndislikes(frank,apple) :- small(phone).\nhungry(bob) :- dislikes(frank,apple).\nsad(dave) :- hungry(bob).\nhappy(dave) :- sad(dave).\nparent(george,alice) :- hot, parent(frank,frank).\nlikes(bob,eve) :- friend(george,alice).\ntall(george) :- happy(carol).\nlikes(alice,frank) :- likes(george,pencil), big(apple).\ntall(dave) :- sunny, tall(carol), tall(eve).\nparent(alice,george) :- wet(phone).\ndislikes(alice,bob) :- small(apple).\ndislikes(carol,book) :- small(car), friend(alice,dave), hungry(george).\nhungry(eve) :- hungry(frank), cold, hungry(eve).\nhungry(frank) :- owns(carol,pencil), friend(carol,alice), sibling(george,george).\nhot :- sibling(bob,dave), hot, enemy(dave,frank).\nhot :- hungry(bob).\ndislikes(bob,ball) :- dislikes(eve,book), tall(frank), dislikes(dave,alice).\nsad(eve).\ndislikes(alice,frank).\nparent(george,alice).\nsibling(george,bob).\nlikes(bob,apple).\nowns(alice,apple).\nsibling(carol,george).\ndislikes(carol,bob).\nfriend(alice,george).\nenemy(dave,eve).\nlikes(bob,dave).\nsibling(carol,bob).\nlikes(alice,bob).\ndislikes(george,carol).\nlikes(george,car).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf eve is sad, then car is wet.\nIf car is wet, then phone is small.\nIf phone is small, then frank dislikes apple.\nIf frank dislikes apple, then bob is hungry.\nIf bob is hungry, then dave is sad.\nIf dave is sad, then dave is happy.\nIf it is hot and frank is a parent of frank, then george is a parent of alice.\nIf george is a friend of alice, then bob likes eve.\nIf carol is happy, then george is tall.\nIf george likes pencil and apple is big, then alice likes frank.\nIf it is sunny and carol is tall and eve is tall, then dave is tall.\nIf phone is wet, then alice is a parent of george.\nIf apple is small, then alice dislikes bob.\nIf car is small and alice is a friend of dave and george is hungry, then carol dislikes book.\nIf frank is hungry and it is cold and eve is hungry, then eve is hungry.\nIf carol owns pencil and carol is a friend of alice and george is a sibling of george, then frank is hungry.\nIf bob is a sibling of dave and it is hot and dave is an enemy of frank, then it is hot.\nIf bob is hungry, then it is hot.\nIf eve dislikes book and frank is tall and dave dislikes alice, then bob dislikes ball.\n\nAnd the following facts:\neve is sad.\nalice dislikes frank.\ngeorge is a parent of alice.\ngeorge is a sibling of bob.\nbob likes apple.\nalice owns apple.\ncarol is a sibling of george.\ncarol dislikes bob.\nalice is a friend of george.\ndave is an enemy of eve.\nbob likes dave.\ncarol is a sibling of bob.\nalice likes bob.\ngeorge dislikes carol.\ngeorge likes car.\nalice is an enemy of george.\n\nQUESTION:\nIs eve likes apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "wet(car) :- sad(eve).\nsmall(phone) :- wet(car).\ndislikes(frank,apple) :- small(phone).\nhungry(bob) :- dislikes(frank,apple).\nsad(dave) :- hungry(bob).\nhappy(dave) :- sad(dave).\nparent(george,alice) :- hot, parent(frank,frank).\nlikes(bob,eve) :- friend(george,alice).\ntall(george) :- happy(carol).\nlikes(alice,frank) :- likes(george,pencil), big(apple).\ntall(dave) :- sunny, tall(carol), tall(eve).\nparent(alice,george) :- wet(phone).\ndislikes(alice,bob) :- small(apple).\ndislikes(carol,book) :- small(car), friend(alice,dave), hungry(george).\nhungry(eve) :- hungry(frank), cold, hungry(eve).\nhungry(frank) :- owns(carol,pencil), friend(carol,alice), sibling(george,george).\nhot :- sibling(bob,dave), hot, enemy(dave,frank).\nhot :- hungry(bob).\ndislikes(bob,ball) :- dislikes(eve,book), tall(frank), dislikes(dave,alice).\nsad(eve).\ndislikes(alice,frank).\nparent(george,alice).\nsibling(george,bob).\nlikes(bob,apple).\nowns(alice,apple).\nsibling(carol,george).\ndislikes(carol,bob).\nfriend(alice,george).\nenemy(dave,eve).\nlikes(bob,dave).\nsibling(carol,bob).\nlikes(alice,bob).\ndislikes(george,carol).\nlikes(george,car).\nenemy(alice,george).",
    "natural language": "You are given the following information:\nIf eve is sad, then car is wet.\nIf car is wet, then phone is small.\nIf phone is small, then frank dislikes apple.\nIf frank dislikes apple, then bob is hungry.\nIf bob is hungry, then dave is sad.\nIf dave is sad, then dave is happy.\nIf it is hot and frank is a parent of frank, then george is a parent of alice.\nIf george is a friend of alice, then bob likes eve.\nIf carol is happy, then george is tall.\nIf george likes pencil and apple is big, then alice likes frank.\nIf it is sunny and carol is tall and eve is tall, then dave is tall.\nIf phone is wet, then alice is a parent of george.\nIf apple is small, then alice dislikes bob.\nIf car is small and alice is a friend of dave and george is hungry, then carol dislikes book.\nIf frank is hungry and it is cold and eve is hungry, then eve is hungry.\nIf carol owns pencil and carol is a friend of alice and george is a sibling of george, then frank is hungry.\nIf bob is a sibling of dave and it is hot and dave is an enemy of frank, then it is hot.\nIf bob is hungry, then it is hot.\nIf eve dislikes book and frank is tall and dave dislikes alice, then bob dislikes ball.\n\nAnd the following facts:\neve is sad.\nalice dislikes frank.\ngeorge is a parent of alice.\ngeorge is a sibling of bob.\nbob likes apple.\nalice owns apple.\ncarol is a sibling of george.\ncarol dislikes bob.\nalice is a friend of george.\ndave is an enemy of eve.\nbob likes dave.\ncarol is a sibling of bob.\nalice likes bob.\ngeorge dislikes carol.\ngeorge likes car.\nalice is an enemy of george.\n\nQUESTION:\nIs eve is hungry true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(eve).",
    "c": "wet(car) :- sad(eve).\nsmall(phone) :- wet(car).\ndislikes(frank,apple) :- small(phone).\nhungry(bob) :- dislikes(frank,apple).\nsad(dave) :- hungry(bob).\nhappy(dave) :- sad(dave).\nparent(george,alice) :- hot, parent(frank,frank).\nlikes(bob,eve) :- friend(george,alice).\ntall(george) :- happy(carol).\nlikes(alice,frank) :- likes(george,pencil), big(apple).\ntall(dave) :- sunny, tall(carol), tall(eve).\nparent(alice,george) :- wet(phone).\ndislikes(alice,bob) :- small(apple).\ndislikes(carol,book) :- small(car), friend(alice,dave), hungry(george).\nhungry(eve) :- hungry(frank), cold, hungry(eve).\nhungry(frank) :- owns(carol,pencil), friend(carol,alice), sibling(george,george).\nhot :- sibling(bob,dave), hot, enemy(dave,frank).\nhot :- hungry(bob).\ndislikes(bob,ball) :- dislikes(eve,book), tall(frank), dislikes(dave,alice).\ndislikes(alice,frank).\nparent(george,alice).\nsibling(george,bob).\nlikes(bob,apple).\nowns(alice,apple).\nsibling(carol,george).\ndislikes(carol,bob).\nfriend(alice,george).\nenemy(dave,eve).\nlikes(bob,dave).\nsibling(carol,bob).\nlikes(alice,bob).\ndislikes(george,carol).\nlikes(george,car).\nenemy(alice,george).",
    "natural language": "You are given the following rules:\nIf eve is sad, then car is wet.\nIf car is wet, then phone is small.\nIf phone is small, then frank dislikes apple.\nIf frank dislikes apple, then bob is hungry.\nIf bob is hungry, then dave is sad.\nIf dave is sad, then dave is happy.\nIf it is hot and frank is a parent of frank, then george is a parent of alice.\nIf george is a friend of alice, then bob likes eve.\nIf carol is happy, then george is tall.\nIf george likes pencil and apple is big, then alice likes frank.\nIf it is sunny and carol is tall and eve is tall, then dave is tall.\nIf phone is wet, then alice is a parent of george.\nIf apple is small, then alice dislikes bob.\nIf car is small and alice is a friend of dave and george is hungry, then carol dislikes book.\nIf frank is hungry and it is cold and eve is hungry, then eve is hungry.\nIf carol owns pencil and carol is a friend of alice and george is a sibling of george, then frank is hungry.\nIf bob is a sibling of dave and it is hot and dave is an enemy of frank, then it is hot.\nIf bob is hungry, then it is hot.\nIf eve dislikes book and frank is tall and dave dislikes alice, then bob dislikes ball.\n\nAnd the following facts:\neve is sad.\nalice dislikes frank.\ngeorge is a parent of alice.\ngeorge is a sibling of bob.\nbob likes apple.\nalice owns apple.\ncarol is a sibling of george.\ncarol dislikes bob.\nalice is a friend of george.\ndave is an enemy of eve.\nbob likes dave.\ncarol is a sibling of bob.\nalice likes bob.\ngeorge dislikes carol.\ngeorge likes car.\nalice is an enemy of george.\n\nOBSERVATION: dave is happy is true.\n\nQUESTION:\nCould eve is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(alice,apple).",
    "c": "wet(car) :- sad(eve).\nsmall(phone) :- wet(car).\ndislikes(frank,apple) :- small(phone).\nhungry(bob) :- dislikes(frank,apple).\nsad(dave) :- hungry(bob).\nhappy(dave) :- sad(dave).\nparent(george,alice) :- hot, parent(frank,frank).\nlikes(bob,eve) :- friend(george,alice).\ntall(george) :- happy(carol).\nlikes(alice,frank) :- likes(george,pencil), big(apple).\ntall(dave) :- sunny, tall(carol), tall(eve).\nparent(alice,george) :- wet(phone).\ndislikes(alice,bob) :- small(apple).\ndislikes(carol,book) :- small(car), friend(alice,dave), hungry(george).\nhungry(eve) :- hungry(frank), cold, hungry(eve).\nhungry(frank) :- owns(carol,pencil), friend(carol,alice), sibling(george,george).\nhot :- sibling(bob,dave), hot, enemy(dave,frank).\nhot :- hungry(bob).\ndislikes(bob,ball) :- dislikes(eve,book), tall(frank), dislikes(dave,alice).\nsad(eve).\ndislikes(alice,frank).\nparent(george,alice).\nsibling(george,bob).\nlikes(bob,apple).\nsibling(carol,george).\ndislikes(carol,bob).\nfriend(alice,george).\nenemy(dave,eve).\nlikes(bob,dave).\nsibling(carol,bob).\nlikes(alice,bob).\ndislikes(george,carol).\nlikes(george,car).\nenemy(alice,george).",
    "natural language": "You are given the following rules:\nIf eve is sad, then car is wet.\nIf car is wet, then phone is small.\nIf phone is small, then frank dislikes apple.\nIf frank dislikes apple, then bob is hungry.\nIf bob is hungry, then dave is sad.\nIf dave is sad, then dave is happy.\nIf it is hot and frank is a parent of frank, then george is a parent of alice.\nIf george is a friend of alice, then bob likes eve.\nIf carol is happy, then george is tall.\nIf george likes pencil and apple is big, then alice likes frank.\nIf it is sunny and carol is tall and eve is tall, then dave is tall.\nIf phone is wet, then alice is a parent of george.\nIf apple is small, then alice dislikes bob.\nIf car is small and alice is a friend of dave and george is hungry, then carol dislikes book.\nIf frank is hungry and it is cold and eve is hungry, then eve is hungry.\nIf carol owns pencil and carol is a friend of alice and george is a sibling of george, then frank is hungry.\nIf bob is a sibling of dave and it is hot and dave is an enemy of frank, then it is hot.\nIf bob is hungry, then it is hot.\nIf eve dislikes book and frank is tall and dave dislikes alice, then bob dislikes ball.\n\nAnd the following facts:\neve is sad.\nalice dislikes frank.\ngeorge is a parent of alice.\ngeorge is a sibling of bob.\nbob likes apple.\nalice owns apple.\ncarol is a sibling of george.\ncarol dislikes bob.\nalice is a friend of george.\ndave is an enemy of eve.\nbob likes dave.\ncarol is a sibling of bob.\nalice likes bob.\ngeorge dislikes carol.\ngeorge likes car.\nalice is an enemy of george.\n\nOBSERVATION: dave is happy is true.\n\nQUESTION:\nCould alice owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "wet(car) :- sad(eve).\nsmall(phone) :- wet(car).\ndislikes(frank,apple) :- small(phone).\nhungry(bob) :- dislikes(frank,apple).\nsad(dave) :- hungry(bob).\nhappy(dave) :- sad(dave).\nparent(george,alice) :- hot, parent(frank,frank).\nlikes(bob,eve) :- friend(george,alice).\ntall(george) :- happy(carol).\nlikes(alice,frank) :- likes(george,pencil), big(apple).\ntall(dave) :- sunny, tall(carol), tall(eve).\nparent(alice,george) :- wet(phone).\ndislikes(alice,bob) :- small(apple).\ndislikes(carol,book) :- small(car), friend(alice,dave), hungry(george).\nhungry(eve) :- hungry(frank), cold, hungry(eve).\nhungry(frank) :- owns(carol,pencil), friend(carol,alice), sibling(george,george).\nhot :- sibling(bob,dave), hot, enemy(dave,frank).\nhot :- hungry(bob).\ndislikes(bob,ball) :- dislikes(eve,book), tall(frank), dislikes(dave,alice).\nsad(eve).\ndislikes(alice,frank).\nparent(george,alice).\nsibling(george,bob).\nlikes(bob,apple).\nowns(alice,apple).\nsibling(carol,george).\ndislikes(carol,bob).\nfriend(alice,george).\nlikes(bob,dave).\nsibling(carol,bob).\nlikes(alice,bob).\ndislikes(george,carol).\nlikes(george,car).\nenemy(alice,george).",
    "natural language": "You are given the following rules:\nIf eve is sad, then car is wet.\nIf car is wet, then phone is small.\nIf phone is small, then frank dislikes apple.\nIf frank dislikes apple, then bob is hungry.\nIf bob is hungry, then dave is sad.\nIf dave is sad, then dave is happy.\nIf it is hot and frank is a parent of frank, then george is a parent of alice.\nIf george is a friend of alice, then bob likes eve.\nIf carol is happy, then george is tall.\nIf george likes pencil and apple is big, then alice likes frank.\nIf it is sunny and carol is tall and eve is tall, then dave is tall.\nIf phone is wet, then alice is a parent of george.\nIf apple is small, then alice dislikes bob.\nIf car is small and alice is a friend of dave and george is hungry, then carol dislikes book.\nIf frank is hungry and it is cold and eve is hungry, then eve is hungry.\nIf carol owns pencil and carol is a friend of alice and george is a sibling of george, then frank is hungry.\nIf bob is a sibling of dave and it is hot and dave is an enemy of frank, then it is hot.\nIf bob is hungry, then it is hot.\nIf eve dislikes book and frank is tall and dave dislikes alice, then bob dislikes ball.\n\nAnd the following facts:\neve is sad.\nalice dislikes frank.\ngeorge is a parent of alice.\ngeorge is a sibling of bob.\nbob likes apple.\nalice owns apple.\ncarol is a sibling of george.\ncarol dislikes bob.\nalice is a friend of george.\ndave is an enemy of eve.\nbob likes dave.\ncarol is a sibling of bob.\nalice likes bob.\ngeorge dislikes carol.\ngeorge likes car.\nalice is an enemy of george.\n\nOBSERVATION: dave is happy is true.\n\nQUESTION:\nCould dave is an enemy of eve be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(carol,eve).",
    "c": "dislikes(carol,eve) :- wet(ball).\nbig(car) :- dislikes(carol,eve).\nowns(frank,book) :- big(car).\nlikes(eve,bob) :- owns(frank,book).\nparent(alice,alice) :- likes(eve,bob).\nfriend(alice,eve) :- parent(alice,alice).\ntall(bob) :- dislikes(frank,book).\nowns(george,phone) :- dislikes(frank,carol).\nwet(phone) :- cold, parent(frank,dave).\nwet(book) :- sibling(george,bob), dislikes(eve,alice), sad(dave).\nlikes(bob,frank) :- hungry(dave), cold, sad(bob).\ntall(alice) :- small(car), happy(george), big(book).\nlikes(eve,frank) :- small(ball), likes(carol,book), dislikes(dave,ball).\nwet(ball) :- big(car).\nowns(dave,ball) :- big(apple).\nfriend(bob,eve) :- likes(dave,dave).\nsad(carol) :- sad(george).\nsunny :- hungry(dave), small(phone), sunny.\nsad(frank) :- hot, hot.\nwet(ball).\nowns(carol,ball).\ndislikes(eve,bob).\nowns(carol,phone).\nsad(dave).\nfriend(george,eve).\nlikes(dave,car).\nlikes(alice,frank).\ndislikes(frank,george).\ndislikes(alice,phone).\ndislikes(frank,eve).\nfriend(alice,frank).\ntall(dave).\ndislikes(frank,carol).\ndislikes(bob,dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then carol dislikes eve.\nIf carol dislikes eve, then car is big.\nIf car is big, then frank owns book.\nIf frank owns book, then eve likes bob.\nIf eve likes bob, then alice is a parent of alice.\nIf alice is a parent of alice, then alice is a friend of eve.\nIf frank dislikes book, then bob is tall.\nIf frank dislikes carol, then george owns phone.\nIf it is cold and frank is a parent of dave, then phone is wet.\nIf george is a sibling of bob and eve dislikes alice and dave is sad, then book is wet.\nIf dave is hungry and it is cold and bob is sad, then bob likes frank.\nIf car is small and george is happy and book is big, then alice is tall.\nIf ball is small and carol likes book and dave dislikes ball, then eve likes frank.\nIf car is big, then ball is wet.\nIf apple is big, then dave owns ball.\nIf dave likes dave, then bob is a friend of eve.\nIf george is sad, then carol is sad.\nIf dave is hungry and phone is small and it is sunny, then it is sunny.\nIf it is hot and it is hot, then frank is sad.\n\nAnd the following facts:\nball is wet.\ncarol owns ball.\neve dislikes bob.\ncarol owns phone.\ndave is sad.\ngeorge is a friend of eve.\ndave likes car.\nalice likes frank.\nfrank dislikes george.\nalice dislikes phone.\nfrank dislikes eve.\nalice is a friend of frank.\ndave is tall.\nfrank dislikes carol.\nbob dislikes dave.\ndave owns ball.\n\nQUESTION:\nIs carol dislikes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(car).",
    "c": "dislikes(carol,eve) :- wet(ball).\nbig(car) :- dislikes(carol,eve).\nowns(frank,book) :- big(car).\nlikes(eve,bob) :- owns(frank,book).\nparent(alice,alice) :- likes(eve,bob).\nfriend(alice,eve) :- parent(alice,alice).\ntall(bob) :- dislikes(frank,book).\nowns(george,phone) :- dislikes(frank,carol).\nwet(phone) :- cold, parent(frank,dave).\nwet(book) :- sibling(george,bob), dislikes(eve,alice), sad(dave).\nlikes(bob,frank) :- hungry(dave), cold, sad(bob).\ntall(alice) :- small(car), happy(george), big(book).\nlikes(eve,frank) :- small(ball), likes(carol,book), dislikes(dave,ball).\nwet(ball) :- big(car).\nowns(dave,ball) :- big(apple).\nfriend(bob,eve) :- likes(dave,dave).\nsad(carol) :- sad(george).\nsunny :- hungry(dave), small(phone), sunny.\nsad(frank) :- hot, hot.\nwet(ball).\nowns(carol,ball).\ndislikes(eve,bob).\nowns(carol,phone).\nsad(dave).\nfriend(george,eve).\nlikes(dave,car).\nlikes(alice,frank).\ndislikes(frank,george).\ndislikes(alice,phone).\ndislikes(frank,eve).\nfriend(alice,frank).\ntall(dave).\ndislikes(frank,carol).\ndislikes(bob,dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then carol dislikes eve.\nIf carol dislikes eve, then car is big.\nIf car is big, then frank owns book.\nIf frank owns book, then eve likes bob.\nIf eve likes bob, then alice is a parent of alice.\nIf alice is a parent of alice, then alice is a friend of eve.\nIf frank dislikes book, then bob is tall.\nIf frank dislikes carol, then george owns phone.\nIf it is cold and frank is a parent of dave, then phone is wet.\nIf george is a sibling of bob and eve dislikes alice and dave is sad, then book is wet.\nIf dave is hungry and it is cold and bob is sad, then bob likes frank.\nIf car is small and george is happy and book is big, then alice is tall.\nIf ball is small and carol likes book and dave dislikes ball, then eve likes frank.\nIf car is big, then ball is wet.\nIf apple is big, then dave owns ball.\nIf dave likes dave, then bob is a friend of eve.\nIf george is sad, then carol is sad.\nIf dave is hungry and phone is small and it is sunny, then it is sunny.\nIf it is hot and it is hot, then frank is sad.\n\nAnd the following facts:\nball is wet.\ncarol owns ball.\neve dislikes bob.\ncarol owns phone.\ndave is sad.\ngeorge is a friend of eve.\ndave likes car.\nalice likes frank.\nfrank dislikes george.\nalice dislikes phone.\nfrank dislikes eve.\nalice is a friend of frank.\ndave is tall.\nfrank dislikes carol.\nbob dislikes dave.\ndave owns ball.\n\nQUESTION:\nIs car is big true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,carol).",
    "c": "dislikes(carol,eve) :- wet(ball).\nbig(car) :- dislikes(carol,eve).\nowns(frank,book) :- big(car).\nlikes(eve,bob) :- owns(frank,book).\nparent(alice,alice) :- likes(eve,bob).\nfriend(alice,eve) :- parent(alice,alice).\ntall(bob) :- dislikes(frank,book).\nowns(george,phone) :- dislikes(frank,carol).\nwet(phone) :- cold, parent(frank,dave).\nwet(book) :- sibling(george,bob), dislikes(eve,alice), sad(dave).\nlikes(bob,frank) :- hungry(dave), cold, sad(bob).\ntall(alice) :- small(car), happy(george), big(book).\nlikes(eve,frank) :- small(ball), likes(carol,book), dislikes(dave,ball).\nwet(ball) :- big(car).\nowns(dave,ball) :- big(apple).\nfriend(bob,eve) :- likes(dave,dave).\nsad(carol) :- sad(george).\nsunny :- hungry(dave), small(phone), sunny.\nsad(frank) :- hot, hot.\nwet(ball).\nowns(carol,ball).\ndislikes(eve,bob).\nowns(carol,phone).\nsad(dave).\nfriend(george,eve).\nlikes(dave,car).\nlikes(alice,frank).\ndislikes(frank,george).\ndislikes(alice,phone).\ndislikes(frank,eve).\nfriend(alice,frank).\ntall(dave).\ndislikes(frank,carol).\ndislikes(bob,dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then carol dislikes eve.\nIf carol dislikes eve, then car is big.\nIf car is big, then frank owns book.\nIf frank owns book, then eve likes bob.\nIf eve likes bob, then alice is a parent of alice.\nIf alice is a parent of alice, then alice is a friend of eve.\nIf frank dislikes book, then bob is tall.\nIf frank dislikes carol, then george owns phone.\nIf it is cold and frank is a parent of dave, then phone is wet.\nIf george is a sibling of bob and eve dislikes alice and dave is sad, then book is wet.\nIf dave is hungry and it is cold and bob is sad, then bob likes frank.\nIf car is small and george is happy and book is big, then alice is tall.\nIf ball is small and carol likes book and dave dislikes ball, then eve likes frank.\nIf car is big, then ball is wet.\nIf apple is big, then dave owns ball.\nIf dave likes dave, then bob is a friend of eve.\nIf george is sad, then carol is sad.\nIf dave is hungry and phone is small and it is sunny, then it is sunny.\nIf it is hot and it is hot, then frank is sad.\n\nAnd the following facts:\nball is wet.\ncarol owns ball.\neve dislikes bob.\ncarol owns phone.\ndave is sad.\ngeorge is a friend of eve.\ndave likes car.\nalice likes frank.\nfrank dislikes george.\nalice dislikes phone.\nfrank dislikes eve.\nalice is a friend of frank.\ndave is tall.\nfrank dislikes carol.\nbob dislikes dave.\ndave owns ball.\n\nQUESTION:\nIs frank dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,apple).",
    "c": "dislikes(carol,eve) :- wet(ball).\nbig(car) :- dislikes(carol,eve).\nowns(frank,book) :- big(car).\nlikes(eve,bob) :- owns(frank,book).\nparent(alice,alice) :- likes(eve,bob).\nfriend(alice,eve) :- parent(alice,alice).\ntall(bob) :- dislikes(frank,book).\nowns(george,phone) :- dislikes(frank,carol).\nwet(phone) :- cold, parent(frank,dave).\nwet(book) :- sibling(george,bob), dislikes(eve,alice), sad(dave).\nlikes(bob,frank) :- hungry(dave), cold, sad(bob).\ntall(alice) :- small(car), happy(george), big(book).\nlikes(eve,frank) :- small(ball), likes(carol,book), dislikes(dave,ball).\nwet(ball) :- big(car).\nowns(dave,ball) :- big(apple).\nfriend(bob,eve) :- likes(dave,dave).\nsad(carol) :- sad(george).\nsunny :- hungry(dave), small(phone), sunny.\nsad(frank) :- hot, hot.\nwet(ball).\nowns(carol,ball).\ndislikes(eve,bob).\nowns(carol,phone).\nsad(dave).\nfriend(george,eve).\nlikes(dave,car).\nlikes(alice,frank).\ndislikes(frank,george).\ndislikes(alice,phone).\ndislikes(frank,eve).\nfriend(alice,frank).\ntall(dave).\ndislikes(frank,carol).\ndislikes(bob,dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then carol dislikes eve.\nIf carol dislikes eve, then car is big.\nIf car is big, then frank owns book.\nIf frank owns book, then eve likes bob.\nIf eve likes bob, then alice is a parent of alice.\nIf alice is a parent of alice, then alice is a friend of eve.\nIf frank dislikes book, then bob is tall.\nIf frank dislikes carol, then george owns phone.\nIf it is cold and frank is a parent of dave, then phone is wet.\nIf george is a sibling of bob and eve dislikes alice and dave is sad, then book is wet.\nIf dave is hungry and it is cold and bob is sad, then bob likes frank.\nIf car is small and george is happy and book is big, then alice is tall.\nIf ball is small and carol likes book and dave dislikes ball, then eve likes frank.\nIf car is big, then ball is wet.\nIf apple is big, then dave owns ball.\nIf dave likes dave, then bob is a friend of eve.\nIf george is sad, then carol is sad.\nIf dave is hungry and phone is small and it is sunny, then it is sunny.\nIf it is hot and it is hot, then frank is sad.\n\nAnd the following facts:\nball is wet.\ncarol owns ball.\neve dislikes bob.\ncarol owns phone.\ndave is sad.\ngeorge is a friend of eve.\ndave likes car.\nalice likes frank.\nfrank dislikes george.\nalice dislikes phone.\nfrank dislikes eve.\nalice is a friend of frank.\ndave is tall.\nfrank dislikes carol.\nbob dislikes dave.\ndave owns ball.\n\nQUESTION:\nIs bob owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,carol).",
    "c": "dislikes(carol,eve) :- wet(ball).\nbig(car) :- dislikes(carol,eve).\nowns(frank,book) :- big(car).\nlikes(eve,bob) :- owns(frank,book).\nparent(alice,alice) :- likes(eve,bob).\nfriend(alice,eve) :- parent(alice,alice).\ntall(bob) :- dislikes(frank,book).\nowns(george,phone) :- dislikes(frank,carol).\nwet(phone) :- cold, parent(frank,dave).\nwet(book) :- sibling(george,bob), dislikes(eve,alice), sad(dave).\nlikes(bob,frank) :- hungry(dave), cold, sad(bob).\ntall(alice) :- small(car), happy(george), big(book).\nlikes(eve,frank) :- small(ball), likes(carol,book), dislikes(dave,ball).\nwet(ball) :- big(car).\nowns(dave,ball) :- big(apple).\nfriend(bob,eve) :- likes(dave,dave).\nsad(carol) :- sad(george).\nsunny :- hungry(dave), small(phone), sunny.\nsad(frank) :- hot, hot.\nwet(ball).\nowns(carol,ball).\ndislikes(eve,bob).\nowns(carol,phone).\nsad(dave).\nfriend(george,eve).\nlikes(dave,car).\nlikes(alice,frank).\ndislikes(frank,george).\ndislikes(alice,phone).\ndislikes(frank,eve).\nfriend(alice,frank).\ntall(dave).\ndislikes(frank,carol).\ndislikes(bob,dave).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then carol dislikes eve.\nIf carol dislikes eve, then car is big.\nIf car is big, then frank owns book.\nIf frank owns book, then eve likes bob.\nIf eve likes bob, then alice is a parent of alice.\nIf alice is a parent of alice, then alice is a friend of eve.\nIf frank dislikes book, then bob is tall.\nIf frank dislikes carol, then george owns phone.\nIf it is cold and frank is a parent of dave, then phone is wet.\nIf george is a sibling of bob and eve dislikes alice and dave is sad, then book is wet.\nIf dave is hungry and it is cold and bob is sad, then bob likes frank.\nIf car is small and george is happy and book is big, then alice is tall.\nIf ball is small and carol likes book and dave dislikes ball, then eve likes frank.\nIf car is big, then ball is wet.\nIf apple is big, then dave owns ball.\nIf dave likes dave, then bob is a friend of eve.\nIf george is sad, then carol is sad.\nIf dave is hungry and phone is small and it is sunny, then it is sunny.\nIf it is hot and it is hot, then frank is sad.\n\nAnd the following facts:\nball is wet.\ncarol owns ball.\neve dislikes bob.\ncarol owns phone.\ndave is sad.\ngeorge is a friend of eve.\ndave likes car.\nalice likes frank.\nfrank dislikes george.\nalice dislikes phone.\nfrank dislikes eve.\nalice is a friend of frank.\ndave is tall.\nfrank dislikes carol.\nbob dislikes dave.\ndave owns ball.\n\nQUESTION:\nIs eve dislikes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "dislikes(carol,eve) :- wet(ball).\nbig(car) :- dislikes(carol,eve).\nowns(frank,book) :- big(car).\nlikes(eve,bob) :- owns(frank,book).\nparent(alice,alice) :- likes(eve,bob).\nfriend(alice,eve) :- parent(alice,alice).\ntall(bob) :- dislikes(frank,book).\nowns(george,phone) :- dislikes(frank,carol).\nwet(phone) :- cold, parent(frank,dave).\nwet(book) :- sibling(george,bob), dislikes(eve,alice), sad(dave).\nlikes(bob,frank) :- hungry(dave), cold, sad(bob).\ntall(alice) :- small(car), happy(george), big(book).\nlikes(eve,frank) :- small(ball), likes(carol,book), dislikes(dave,ball).\nwet(ball) :- big(car).\nowns(dave,ball) :- big(apple).\nfriend(bob,eve) :- likes(dave,dave).\nsad(carol) :- sad(george).\nsunny :- hungry(dave), small(phone), sunny.\nsad(frank) :- hot, hot.\nowns(carol,ball).\ndislikes(eve,bob).\nowns(carol,phone).\nsad(dave).\nfriend(george,eve).\nlikes(dave,car).\nlikes(alice,frank).\ndislikes(frank,george).\ndislikes(alice,phone).\ndislikes(frank,eve).\nfriend(alice,frank).\ntall(dave).\ndislikes(frank,carol).\ndislikes(bob,dave).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf ball is wet, then carol dislikes eve.\nIf carol dislikes eve, then car is big.\nIf car is big, then frank owns book.\nIf frank owns book, then eve likes bob.\nIf eve likes bob, then alice is a parent of alice.\nIf alice is a parent of alice, then alice is a friend of eve.\nIf frank dislikes book, then bob is tall.\nIf frank dislikes carol, then george owns phone.\nIf it is cold and frank is a parent of dave, then phone is wet.\nIf george is a sibling of bob and eve dislikes alice and dave is sad, then book is wet.\nIf dave is hungry and it is cold and bob is sad, then bob likes frank.\nIf car is small and george is happy and book is big, then alice is tall.\nIf ball is small and carol likes book and dave dislikes ball, then eve likes frank.\nIf car is big, then ball is wet.\nIf apple is big, then dave owns ball.\nIf dave likes dave, then bob is a friend of eve.\nIf george is sad, then carol is sad.\nIf dave is hungry and phone is small and it is sunny, then it is sunny.\nIf it is hot and it is hot, then frank is sad.\n\nAnd the following facts:\nball is wet.\ncarol owns ball.\neve dislikes bob.\ncarol owns phone.\ndave is sad.\ngeorge is a friend of eve.\ndave likes car.\nalice likes frank.\nfrank dislikes george.\nalice dislikes phone.\nfrank dislikes eve.\nalice is a friend of frank.\ndave is tall.\nfrank dislikes carol.\nbob dislikes dave.\ndave owns ball.\n\nOBSERVATION: alice is a friend of eve is true.\n\nQUESTION:\nCould ball is wet be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": 6,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,phone).",
    "c": "dislikes(carol,eve) :- wet(ball).\nbig(car) :- dislikes(carol,eve).\nowns(frank,book) :- big(car).\nlikes(eve,bob) :- owns(frank,book).\nparent(alice,alice) :- likes(eve,bob).\nfriend(alice,eve) :- parent(alice,alice).\ntall(bob) :- dislikes(frank,book).\nowns(george,phone) :- dislikes(frank,carol).\nwet(phone) :- cold, parent(frank,dave).\nwet(book) :- sibling(george,bob), dislikes(eve,alice), sad(dave).\nlikes(bob,frank) :- hungry(dave), cold, sad(bob).\ntall(alice) :- small(car), happy(george), big(book).\nlikes(eve,frank) :- small(ball), likes(carol,book), dislikes(dave,ball).\nwet(ball) :- big(car).\nowns(dave,ball) :- big(apple).\nfriend(bob,eve) :- likes(dave,dave).\nsad(carol) :- sad(george).\nsunny :- hungry(dave), small(phone), sunny.\nsad(frank) :- hot, hot.\nwet(ball).\nowns(carol,ball).\ndislikes(eve,bob).\nowns(carol,phone).\nsad(dave).\nfriend(george,eve).\nlikes(dave,car).\nlikes(alice,frank).\ndislikes(frank,george).\ndislikes(frank,eve).\nfriend(alice,frank).\ntall(dave).\ndislikes(frank,carol).\ndislikes(bob,dave).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf ball is wet, then carol dislikes eve.\nIf carol dislikes eve, then car is big.\nIf car is big, then frank owns book.\nIf frank owns book, then eve likes bob.\nIf eve likes bob, then alice is a parent of alice.\nIf alice is a parent of alice, then alice is a friend of eve.\nIf frank dislikes book, then bob is tall.\nIf frank dislikes carol, then george owns phone.\nIf it is cold and frank is a parent of dave, then phone is wet.\nIf george is a sibling of bob and eve dislikes alice and dave is sad, then book is wet.\nIf dave is hungry and it is cold and bob is sad, then bob likes frank.\nIf car is small and george is happy and book is big, then alice is tall.\nIf ball is small and carol likes book and dave dislikes ball, then eve likes frank.\nIf car is big, then ball is wet.\nIf apple is big, then dave owns ball.\nIf dave likes dave, then bob is a friend of eve.\nIf george is sad, then carol is sad.\nIf dave is hungry and phone is small and it is sunny, then it is sunny.\nIf it is hot and it is hot, then frank is sad.\n\nAnd the following facts:\nball is wet.\ncarol owns ball.\neve dislikes bob.\ncarol owns phone.\ndave is sad.\ngeorge is a friend of eve.\ndave likes car.\nalice likes frank.\nfrank dislikes george.\nalice dislikes phone.\nfrank dislikes eve.\nalice is a friend of frank.\ndave is tall.\nfrank dislikes carol.\nbob dislikes dave.\ndave owns ball.\n\nOBSERVATION: alice is a friend of eve is true.\n\nQUESTION:\nCould alice dislikes phone be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sad(dave).",
    "c": "dislikes(carol,eve) :- wet(ball).\nbig(car) :- dislikes(carol,eve).\nowns(frank,book) :- big(car).\nlikes(eve,bob) :- owns(frank,book).\nparent(alice,alice) :- likes(eve,bob).\nfriend(alice,eve) :- parent(alice,alice).\ntall(bob) :- dislikes(frank,book).\nowns(george,phone) :- dislikes(frank,carol).\nwet(phone) :- cold, parent(frank,dave).\nwet(book) :- sibling(george,bob), dislikes(eve,alice), sad(dave).\nlikes(bob,frank) :- hungry(dave), cold, sad(bob).\ntall(alice) :- small(car), happy(george), big(book).\nlikes(eve,frank) :- small(ball), likes(carol,book), dislikes(dave,ball).\nwet(ball) :- big(car).\nowns(dave,ball) :- big(apple).\nfriend(bob,eve) :- likes(dave,dave).\nsad(carol) :- sad(george).\nsunny :- hungry(dave), small(phone), sunny.\nsad(frank) :- hot, hot.\nwet(ball).\nowns(carol,ball).\ndislikes(eve,bob).\nowns(carol,phone).\nfriend(george,eve).\nlikes(dave,car).\nlikes(alice,frank).\ndislikes(frank,george).\ndislikes(alice,phone).\ndislikes(frank,eve).\nfriend(alice,frank).\ntall(dave).\ndislikes(frank,carol).\ndislikes(bob,dave).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf ball is wet, then carol dislikes eve.\nIf carol dislikes eve, then car is big.\nIf car is big, then frank owns book.\nIf frank owns book, then eve likes bob.\nIf eve likes bob, then alice is a parent of alice.\nIf alice is a parent of alice, then alice is a friend of eve.\nIf frank dislikes book, then bob is tall.\nIf frank dislikes carol, then george owns phone.\nIf it is cold and frank is a parent of dave, then phone is wet.\nIf george is a sibling of bob and eve dislikes alice and dave is sad, then book is wet.\nIf dave is hungry and it is cold and bob is sad, then bob likes frank.\nIf car is small and george is happy and book is big, then alice is tall.\nIf ball is small and carol likes book and dave dislikes ball, then eve likes frank.\nIf car is big, then ball is wet.\nIf apple is big, then dave owns ball.\nIf dave likes dave, then bob is a friend of eve.\nIf george is sad, then carol is sad.\nIf dave is hungry and phone is small and it is sunny, then it is sunny.\nIf it is hot and it is hot, then frank is sad.\n\nAnd the following facts:\nball is wet.\ncarol owns ball.\neve dislikes bob.\ncarol owns phone.\ndave is sad.\ngeorge is a friend of eve.\ndave likes car.\nalice likes frank.\nfrank dislikes george.\nalice dislikes phone.\nfrank dislikes eve.\nalice is a friend of frank.\ndave is tall.\nfrank dislikes carol.\nbob dislikes dave.\ndave owns ball.\n\nOBSERVATION: alice is a friend of eve is true.\n\nQUESTION:\nCould dave is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(alice,phone).",
    "c": "tall(alice) :- sunny.\nparent(dave,alice) :- tall(alice).\ndislikes(carol,pencil) :- parent(dave,alice).\nenemy(eve,bob) :- dislikes(carol,pencil).\nwet(book) :- enemy(eve,bob).\nbig(car) :- wet(book).\nhot :- big(car).\nlikes(bob,alice) :- hot.\nsad(alice) :- sad(frank), friend(dave,eve).\nsad(dave) :- enemy(eve,frank), sad(dave).\nhungry(dave) :- hungry(frank).\nsad(dave) :- hungry(eve).\ndislikes(alice,eve) :- sad(bob), dislikes(eve,carol), small(pencil).\nfriend(dave,alice) :- parent(alice,frank).\nhungry(george) :- hungry(frank), hungry(alice).\nenemy(bob,carol) :- owns(frank,car), tall(eve), hot.\nsad(dave) :- tall(carol).\nhappy(eve) :- parent(dave,carol).\nlikes(frank,dave) :- cold, likes(george,car).\nsunny.\nlikes(bob,eve).\nparent(dave,alice).\nparent(bob,frank).\nlikes(carol,bob).\ndislikes(carol,ball).\ndislikes(eve,frank).\nfriend(eve,bob).\ntall(alice).\nsmall(car).\ndislikes(dave,george).\ndislikes(bob,book).\nenemy(frank,bob).\nparent(eve,frank).\ndislikes(alice,phone).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice is tall.\nIf alice is tall, then dave is a parent of alice.\nIf dave is a parent of alice, then carol dislikes pencil.\nIf carol dislikes pencil, then eve is an enemy of bob.\nIf eve is an enemy of bob, then book is wet.\nIf book is wet, then car is big.\nIf car is big, then it is hot.\nIf it is hot, then bob likes alice.\nIf frank is sad and dave is a friend of eve, then alice is sad.\nIf eve is an enemy of frank and dave is sad, then dave is sad.\nIf frank is hungry, then dave is hungry.\nIf eve is hungry, then dave is sad.\nIf bob is sad and eve dislikes carol and pencil is small, then alice dislikes eve.\nIf alice is a parent of frank, then dave is a friend of alice.\nIf frank is hungry and alice is hungry, then george is hungry.\nIf frank owns car and eve is tall and it is hot, then bob is an enemy of carol.\nIf carol is tall, then dave is sad.\nIf dave is a parent of carol, then eve is happy.\nIf it is cold and george likes car, then frank likes dave.\n\nAnd the following facts:\nit is sunny.\nbob likes eve.\ndave is a parent of alice.\nbob is a parent of frank.\ncarol likes bob.\ncarol dislikes ball.\neve dislikes frank.\neve is a friend of bob.\nalice is tall.\ncar is small.\ndave dislikes george.\nbob dislikes book.\nfrank is an enemy of bob.\neve is a parent of frank.\nalice dislikes phone.\nfrank dislikes apple.\n\nQUESTION:\nIs alice dislikes phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,bob).",
    "c": "tall(alice) :- sunny.\nparent(dave,alice) :- tall(alice).\ndislikes(carol,pencil) :- parent(dave,alice).\nenemy(eve,bob) :- dislikes(carol,pencil).\nwet(book) :- enemy(eve,bob).\nbig(car) :- wet(book).\nhot :- big(car).\nlikes(bob,alice) :- hot.\nsad(alice) :- sad(frank), friend(dave,eve).\nsad(dave) :- enemy(eve,frank), sad(dave).\nhungry(dave) :- hungry(frank).\nsad(dave) :- hungry(eve).\ndislikes(alice,eve) :- sad(bob), dislikes(eve,carol), small(pencil).\nfriend(dave,alice) :- parent(alice,frank).\nhungry(george) :- hungry(frank), hungry(alice).\nenemy(bob,carol) :- owns(frank,car), tall(eve), hot.\nsad(dave) :- tall(carol).\nhappy(eve) :- parent(dave,carol).\nlikes(frank,dave) :- cold, likes(george,car).\nsunny.\nlikes(bob,eve).\nparent(dave,alice).\nparent(bob,frank).\nlikes(carol,bob).\ndislikes(carol,ball).\ndislikes(eve,frank).\nfriend(eve,bob).\ntall(alice).\nsmall(car).\ndislikes(dave,george).\ndislikes(bob,book).\nenemy(frank,bob).\nparent(eve,frank).\ndislikes(alice,phone).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice is tall.\nIf alice is tall, then dave is a parent of alice.\nIf dave is a parent of alice, then carol dislikes pencil.\nIf carol dislikes pencil, then eve is an enemy of bob.\nIf eve is an enemy of bob, then book is wet.\nIf book is wet, then car is big.\nIf car is big, then it is hot.\nIf it is hot, then bob likes alice.\nIf frank is sad and dave is a friend of eve, then alice is sad.\nIf eve is an enemy of frank and dave is sad, then dave is sad.\nIf frank is hungry, then dave is hungry.\nIf eve is hungry, then dave is sad.\nIf bob is sad and eve dislikes carol and pencil is small, then alice dislikes eve.\nIf alice is a parent of frank, then dave is a friend of alice.\nIf frank is hungry and alice is hungry, then george is hungry.\nIf frank owns car and eve is tall and it is hot, then bob is an enemy of carol.\nIf carol is tall, then dave is sad.\nIf dave is a parent of carol, then eve is happy.\nIf it is cold and george likes car, then frank likes dave.\n\nAnd the following facts:\nit is sunny.\nbob likes eve.\ndave is a parent of alice.\nbob is a parent of frank.\ncarol likes bob.\ncarol dislikes ball.\neve dislikes frank.\neve is a friend of bob.\nalice is tall.\ncar is small.\ndave dislikes george.\nbob dislikes book.\nfrank is an enemy of bob.\neve is a parent of frank.\nalice dislikes phone.\nfrank dislikes apple.\n\nQUESTION:\nIs frank is an enemy of bob true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "tall(alice) :- sunny.\nparent(dave,alice) :- tall(alice).\ndislikes(carol,pencil) :- parent(dave,alice).\nenemy(eve,bob) :- dislikes(carol,pencil).\nwet(book) :- enemy(eve,bob).\nbig(car) :- wet(book).\nhot :- big(car).\nlikes(bob,alice) :- hot.\nsad(alice) :- sad(frank), friend(dave,eve).\nsad(dave) :- enemy(eve,frank), sad(dave).\nhungry(dave) :- hungry(frank).\nsad(dave) :- hungry(eve).\ndislikes(alice,eve) :- sad(bob), dislikes(eve,carol), small(pencil).\nfriend(dave,alice) :- parent(alice,frank).\nhungry(george) :- hungry(frank), hungry(alice).\nenemy(bob,carol) :- owns(frank,car), tall(eve), hot.\nsad(dave) :- tall(carol).\nhappy(eve) :- parent(dave,carol).\nlikes(frank,dave) :- cold, likes(george,car).\nsunny.\nlikes(bob,eve).\nparent(dave,alice).\nparent(bob,frank).\nlikes(carol,bob).\ndislikes(carol,ball).\ndislikes(eve,frank).\nfriend(eve,bob).\ntall(alice).\nsmall(car).\ndislikes(dave,george).\ndislikes(bob,book).\nenemy(frank,bob).\nparent(eve,frank).\ndislikes(alice,phone).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice is tall.\nIf alice is tall, then dave is a parent of alice.\nIf dave is a parent of alice, then carol dislikes pencil.\nIf carol dislikes pencil, then eve is an enemy of bob.\nIf eve is an enemy of bob, then book is wet.\nIf book is wet, then car is big.\nIf car is big, then it is hot.\nIf it is hot, then bob likes alice.\nIf frank is sad and dave is a friend of eve, then alice is sad.\nIf eve is an enemy of frank and dave is sad, then dave is sad.\nIf frank is hungry, then dave is hungry.\nIf eve is hungry, then dave is sad.\nIf bob is sad and eve dislikes carol and pencil is small, then alice dislikes eve.\nIf alice is a parent of frank, then dave is a friend of alice.\nIf frank is hungry and alice is hungry, then george is hungry.\nIf frank owns car and eve is tall and it is hot, then bob is an enemy of carol.\nIf carol is tall, then dave is sad.\nIf dave is a parent of carol, then eve is happy.\nIf it is cold and george likes car, then frank likes dave.\n\nAnd the following facts:\nit is sunny.\nbob likes eve.\ndave is a parent of alice.\nbob is a parent of frank.\ncarol likes bob.\ncarol dislikes ball.\neve dislikes frank.\neve is a friend of bob.\nalice is tall.\ncar is small.\ndave dislikes george.\nbob dislikes book.\nfrank is an enemy of bob.\neve is a parent of frank.\nalice dislikes phone.\nfrank dislikes apple.\n\nQUESTION:\nIs it is sunny true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,dave).",
    "c": "tall(alice) :- sunny.\nparent(dave,alice) :- tall(alice).\ndislikes(carol,pencil) :- parent(dave,alice).\nenemy(eve,bob) :- dislikes(carol,pencil).\nwet(book) :- enemy(eve,bob).\nbig(car) :- wet(book).\nhot :- big(car).\nlikes(bob,alice) :- hot.\nsad(alice) :- sad(frank), friend(dave,eve).\nsad(dave) :- enemy(eve,frank), sad(dave).\nhungry(dave) :- hungry(frank).\nsad(dave) :- hungry(eve).\ndislikes(alice,eve) :- sad(bob), dislikes(eve,carol), small(pencil).\nfriend(dave,alice) :- parent(alice,frank).\nhungry(george) :- hungry(frank), hungry(alice).\nenemy(bob,carol) :- owns(frank,car), tall(eve), hot.\nsad(dave) :- tall(carol).\nhappy(eve) :- parent(dave,carol).\nlikes(frank,dave) :- cold, likes(george,car).\nsunny.\nlikes(bob,eve).\nparent(dave,alice).\nparent(bob,frank).\nlikes(carol,bob).\ndislikes(carol,ball).\ndislikes(eve,frank).\nfriend(eve,bob).\ntall(alice).\nsmall(car).\ndislikes(dave,george).\ndislikes(bob,book).\nenemy(frank,bob).\nparent(eve,frank).\ndislikes(alice,phone).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice is tall.\nIf alice is tall, then dave is a parent of alice.\nIf dave is a parent of alice, then carol dislikes pencil.\nIf carol dislikes pencil, then eve is an enemy of bob.\nIf eve is an enemy of bob, then book is wet.\nIf book is wet, then car is big.\nIf car is big, then it is hot.\nIf it is hot, then bob likes alice.\nIf frank is sad and dave is a friend of eve, then alice is sad.\nIf eve is an enemy of frank and dave is sad, then dave is sad.\nIf frank is hungry, then dave is hungry.\nIf eve is hungry, then dave is sad.\nIf bob is sad and eve dislikes carol and pencil is small, then alice dislikes eve.\nIf alice is a parent of frank, then dave is a friend of alice.\nIf frank is hungry and alice is hungry, then george is hungry.\nIf frank owns car and eve is tall and it is hot, then bob is an enemy of carol.\nIf carol is tall, then dave is sad.\nIf dave is a parent of carol, then eve is happy.\nIf it is cold and george likes car, then frank likes dave.\n\nAnd the following facts:\nit is sunny.\nbob likes eve.\ndave is a parent of alice.\nbob is a parent of frank.\ncarol likes bob.\ncarol dislikes ball.\neve dislikes frank.\neve is a friend of bob.\nalice is tall.\ncar is small.\ndave dislikes george.\nbob dislikes book.\nfrank is an enemy of bob.\neve is a parent of frank.\nalice dislikes phone.\nfrank dislikes apple.\n\nQUESTION:\nIs eve likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,phone).",
    "c": "tall(alice) :- sunny.\nparent(dave,alice) :- tall(alice).\ndislikes(carol,pencil) :- parent(dave,alice).\nenemy(eve,bob) :- dislikes(carol,pencil).\nwet(book) :- enemy(eve,bob).\nbig(car) :- wet(book).\nhot :- big(car).\nlikes(bob,alice) :- hot.\nsad(alice) :- sad(frank), friend(dave,eve).\nsad(dave) :- enemy(eve,frank), sad(dave).\nhungry(dave) :- hungry(frank).\nsad(dave) :- hungry(eve).\ndislikes(alice,eve) :- sad(bob), dislikes(eve,carol), small(pencil).\nfriend(dave,alice) :- parent(alice,frank).\nhungry(george) :- hungry(frank), hungry(alice).\nenemy(bob,carol) :- owns(frank,car), tall(eve), hot.\nsad(dave) :- tall(carol).\nhappy(eve) :- parent(dave,carol).\nlikes(frank,dave) :- cold, likes(george,car).\nsunny.\nlikes(bob,eve).\nparent(dave,alice).\nparent(bob,frank).\nlikes(carol,bob).\ndislikes(carol,ball).\ndislikes(eve,frank).\nfriend(eve,bob).\ntall(alice).\nsmall(car).\ndislikes(dave,george).\ndislikes(bob,book).\nenemy(frank,bob).\nparent(eve,frank).\ndislikes(alice,phone).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice is tall.\nIf alice is tall, then dave is a parent of alice.\nIf dave is a parent of alice, then carol dislikes pencil.\nIf carol dislikes pencil, then eve is an enemy of bob.\nIf eve is an enemy of bob, then book is wet.\nIf book is wet, then car is big.\nIf car is big, then it is hot.\nIf it is hot, then bob likes alice.\nIf frank is sad and dave is a friend of eve, then alice is sad.\nIf eve is an enemy of frank and dave is sad, then dave is sad.\nIf frank is hungry, then dave is hungry.\nIf eve is hungry, then dave is sad.\nIf bob is sad and eve dislikes carol and pencil is small, then alice dislikes eve.\nIf alice is a parent of frank, then dave is a friend of alice.\nIf frank is hungry and alice is hungry, then george is hungry.\nIf frank owns car and eve is tall and it is hot, then bob is an enemy of carol.\nIf carol is tall, then dave is sad.\nIf dave is a parent of carol, then eve is happy.\nIf it is cold and george likes car, then frank likes dave.\n\nAnd the following facts:\nit is sunny.\nbob likes eve.\ndave is a parent of alice.\nbob is a parent of frank.\ncarol likes bob.\ncarol dislikes ball.\neve dislikes frank.\neve is a friend of bob.\nalice is tall.\ncar is small.\ndave dislikes george.\nbob dislikes book.\nfrank is an enemy of bob.\neve is a parent of frank.\nalice dislikes phone.\nfrank dislikes apple.\n\nQUESTION:\nIs eve owns phone true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "tall(alice) :- sunny.\nparent(dave,alice) :- tall(alice).\ndislikes(carol,pencil) :- parent(dave,alice).\nenemy(eve,bob) :- dislikes(carol,pencil).\nwet(book) :- enemy(eve,bob).\nbig(car) :- wet(book).\nhot :- big(car).\nlikes(bob,alice) :- hot.\nsad(alice) :- sad(frank), friend(dave,eve).\nsad(dave) :- enemy(eve,frank), sad(dave).\nhungry(dave) :- hungry(frank).\nsad(dave) :- hungry(eve).\ndislikes(alice,eve) :- sad(bob), dislikes(eve,carol), small(pencil).\nfriend(dave,alice) :- parent(alice,frank).\nhungry(george) :- hungry(frank), hungry(alice).\nenemy(bob,carol) :- owns(frank,car), tall(eve), hot.\nsad(dave) :- tall(carol).\nhappy(eve) :- parent(dave,carol).\nlikes(frank,dave) :- cold, likes(george,car).\nsunny.\nlikes(bob,eve).\nparent(bob,frank).\nlikes(carol,bob).\ndislikes(carol,ball).\ndislikes(eve,frank).\nfriend(eve,bob).\ntall(alice).\nsmall(car).\ndislikes(dave,george).\ndislikes(bob,book).\nenemy(frank,bob).\nparent(eve,frank).\ndislikes(alice,phone).\ndislikes(frank,apple).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice is tall.\nIf alice is tall, then dave is a parent of alice.\nIf dave is a parent of alice, then carol dislikes pencil.\nIf carol dislikes pencil, then eve is an enemy of bob.\nIf eve is an enemy of bob, then book is wet.\nIf book is wet, then car is big.\nIf car is big, then it is hot.\nIf it is hot, then bob likes alice.\nIf frank is sad and dave is a friend of eve, then alice is sad.\nIf eve is an enemy of frank and dave is sad, then dave is sad.\nIf frank is hungry, then dave is hungry.\nIf eve is hungry, then dave is sad.\nIf bob is sad and eve dislikes carol and pencil is small, then alice dislikes eve.\nIf alice is a parent of frank, then dave is a friend of alice.\nIf frank is hungry and alice is hungry, then george is hungry.\nIf frank owns car and eve is tall and it is hot, then bob is an enemy of carol.\nIf carol is tall, then dave is sad.\nIf dave is a parent of carol, then eve is happy.\nIf it is cold and george likes car, then frank likes dave.\n\nAnd the following facts:\nit is sunny.\nbob likes eve.\ndave is a parent of alice.\nbob is a parent of frank.\ncarol likes bob.\ncarol dislikes ball.\neve dislikes frank.\neve is a friend of bob.\nalice is tall.\ncar is small.\ndave dislikes george.\nbob dislikes book.\nfrank is an enemy of bob.\neve is a parent of frank.\nalice dislikes phone.\nfrank dislikes apple.\n\nOBSERVATION: bob likes alice is true.\n\nQUESTION:\nCould dave is a parent of alice be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(dave,george).",
    "c": "tall(alice) :- sunny.\nparent(dave,alice) :- tall(alice).\ndislikes(carol,pencil) :- parent(dave,alice).\nenemy(eve,bob) :- dislikes(carol,pencil).\nwet(book) :- enemy(eve,bob).\nbig(car) :- wet(book).\nhot :- big(car).\nlikes(bob,alice) :- hot.\nsad(alice) :- sad(frank), friend(dave,eve).\nsad(dave) :- enemy(eve,frank), sad(dave).\nhungry(dave) :- hungry(frank).\nsad(dave) :- hungry(eve).\ndislikes(alice,eve) :- sad(bob), dislikes(eve,carol), small(pencil).\nfriend(dave,alice) :- parent(alice,frank).\nhungry(george) :- hungry(frank), hungry(alice).\nenemy(bob,carol) :- owns(frank,car), tall(eve), hot.\nsad(dave) :- tall(carol).\nhappy(eve) :- parent(dave,carol).\nlikes(frank,dave) :- cold, likes(george,car).\nsunny.\nlikes(bob,eve).\nparent(dave,alice).\nparent(bob,frank).\nlikes(carol,bob).\ndislikes(carol,ball).\ndislikes(eve,frank).\nfriend(eve,bob).\ntall(alice).\nsmall(car).\ndislikes(bob,book).\nenemy(frank,bob).\nparent(eve,frank).\ndislikes(alice,phone).\ndislikes(frank,apple).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice is tall.\nIf alice is tall, then dave is a parent of alice.\nIf dave is a parent of alice, then carol dislikes pencil.\nIf carol dislikes pencil, then eve is an enemy of bob.\nIf eve is an enemy of bob, then book is wet.\nIf book is wet, then car is big.\nIf car is big, then it is hot.\nIf it is hot, then bob likes alice.\nIf frank is sad and dave is a friend of eve, then alice is sad.\nIf eve is an enemy of frank and dave is sad, then dave is sad.\nIf frank is hungry, then dave is hungry.\nIf eve is hungry, then dave is sad.\nIf bob is sad and eve dislikes carol and pencil is small, then alice dislikes eve.\nIf alice is a parent of frank, then dave is a friend of alice.\nIf frank is hungry and alice is hungry, then george is hungry.\nIf frank owns car and eve is tall and it is hot, then bob is an enemy of carol.\nIf carol is tall, then dave is sad.\nIf dave is a parent of carol, then eve is happy.\nIf it is cold and george likes car, then frank likes dave.\n\nAnd the following facts:\nit is sunny.\nbob likes eve.\ndave is a parent of alice.\nbob is a parent of frank.\ncarol likes bob.\ncarol dislikes ball.\neve dislikes frank.\neve is a friend of bob.\nalice is tall.\ncar is small.\ndave dislikes george.\nbob dislikes book.\nfrank is an enemy of bob.\neve is a parent of frank.\nalice dislikes phone.\nfrank dislikes apple.\n\nOBSERVATION: bob likes alice is true.\n\nQUESTION:\nCould dave dislikes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sunny.",
    "c": "tall(alice) :- sunny.\nparent(dave,alice) :- tall(alice).\ndislikes(carol,pencil) :- parent(dave,alice).\nenemy(eve,bob) :- dislikes(carol,pencil).\nwet(book) :- enemy(eve,bob).\nbig(car) :- wet(book).\nhot :- big(car).\nlikes(bob,alice) :- hot.\nsad(alice) :- sad(frank), friend(dave,eve).\nsad(dave) :- enemy(eve,frank), sad(dave).\nhungry(dave) :- hungry(frank).\nsad(dave) :- hungry(eve).\ndislikes(alice,eve) :- sad(bob), dislikes(eve,carol), small(pencil).\nfriend(dave,alice) :- parent(alice,frank).\nhungry(george) :- hungry(frank), hungry(alice).\nenemy(bob,carol) :- owns(frank,car), tall(eve), hot.\nsad(dave) :- tall(carol).\nhappy(eve) :- parent(dave,carol).\nlikes(frank,dave) :- cold, likes(george,car).\nlikes(bob,eve).\nparent(dave,alice).\nparent(bob,frank).\nlikes(carol,bob).\ndislikes(carol,ball).\ndislikes(eve,frank).\nfriend(eve,bob).\ntall(alice).\nsmall(car).\ndislikes(dave,george).\ndislikes(bob,book).\nenemy(frank,bob).\nparent(eve,frank).\ndislikes(alice,phone).\ndislikes(frank,apple).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice is tall.\nIf alice is tall, then dave is a parent of alice.\nIf dave is a parent of alice, then carol dislikes pencil.\nIf carol dislikes pencil, then eve is an enemy of bob.\nIf eve is an enemy of bob, then book is wet.\nIf book is wet, then car is big.\nIf car is big, then it is hot.\nIf it is hot, then bob likes alice.\nIf frank is sad and dave is a friend of eve, then alice is sad.\nIf eve is an enemy of frank and dave is sad, then dave is sad.\nIf frank is hungry, then dave is hungry.\nIf eve is hungry, then dave is sad.\nIf bob is sad and eve dislikes carol and pencil is small, then alice dislikes eve.\nIf alice is a parent of frank, then dave is a friend of alice.\nIf frank is hungry and alice is hungry, then george is hungry.\nIf frank owns car and eve is tall and it is hot, then bob is an enemy of carol.\nIf carol is tall, then dave is sad.\nIf dave is a parent of carol, then eve is happy.\nIf it is cold and george likes car, then frank likes dave.\n\nAnd the following facts:\nit is sunny.\nbob likes eve.\ndave is a parent of alice.\nbob is a parent of frank.\ncarol likes bob.\ncarol dislikes ball.\neve dislikes frank.\neve is a friend of bob.\nalice is tall.\ncar is small.\ndave dislikes george.\nbob dislikes book.\nfrank is an enemy of bob.\neve is a parent of frank.\nalice dislikes phone.\nfrank dislikes apple.\n\nOBSERVATION: bob likes alice is true.\n\nQUESTION:\nCould it is sunny be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "cold.",
    "c": "friend(alice,dave) :- hungry(eve).\nlikes(george,alice) :- friend(alice,dave).\nenemy(alice,alice) :- likes(george,alice).\ncold :- enemy(alice,alice).\nsibling(alice,frank) :- cold.\nhappy(carol) :- sibling(alice,frank).\nhot :- happy(carol).\nenemy(frank,frank) :- hot.\nparent(alice,frank) :- enemy(frank,bob), big(apple), likes(bob,pencil).\ndislikes(eve,eve) :- owns(alice,ball), friend(bob,carol), small(phone).\ncold :- sibling(carol,dave), friend(eve,carol).\nowns(frank,phone) :- sibling(frank,frank).\nenemy(bob,eve) :- sad(george), enemy(bob,frank).\nfriend(bob,dave) :- hungry(eve).\nowns(dave,book) :- enemy(bob,carol).\nparent(eve,alice) :- big(ball).\ncold :- enemy(frank,frank), hungry(carol), parent(eve,george).\nhungry(alice) :- sibling(frank,george).\nhappy(alice) :- big(ball), dislikes(bob,alice).\nhungry(eve).\nparent(carol,bob).\ndislikes(george,car).\nlikes(frank,bob).\ndislikes(bob,george).\nlikes(bob,eve).\nowns(eve,apple).\nenemy(carol,george).\ndislikes(frank,dave).\nowns(dave,apple).\nlikes(carol,book).\nlikes(eve,george).\nfriend(dave,george).\nfriend(eve,george).\nowns(carol,ball).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is hungry, then alice is a friend of dave.\nIf alice is a friend of dave, then george likes alice.\nIf george likes alice, then alice is an enemy of alice.\nIf alice is an enemy of alice, then it is cold.\nIf it is cold, then alice is a sibling of frank.\nIf alice is a sibling of frank, then carol is happy.\nIf carol is happy, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of bob and apple is big and bob likes pencil, then alice is a parent of frank.\nIf alice owns ball and bob is a friend of carol and phone is small, then eve dislikes eve.\nIf carol is a sibling of dave and eve is a friend of carol, then it is cold.\nIf frank is a sibling of frank, then frank owns phone.\nIf george is sad and bob is an enemy of frank, then bob is an enemy of eve.\nIf eve is hungry, then bob is a friend of dave.\nIf bob is an enemy of carol, then dave owns book.\nIf ball is big, then eve is a parent of alice.\nIf frank is an enemy of frank and carol is hungry and eve is a parent of george, then it is cold.\nIf frank is a sibling of george, then alice is hungry.\nIf ball is big and bob dislikes alice, then alice is happy.\n\nAnd the following facts:\neve is hungry.\ncarol is a parent of bob.\ngeorge dislikes car.\nfrank likes bob.\nbob dislikes george.\nbob likes eve.\neve owns apple.\ncarol is an enemy of george.\nfrank dislikes dave.\ndave owns apple.\ncarol likes book.\neve likes george.\ndave is a friend of george.\neve is a friend of george.\ncarol owns ball.\neve is a parent of bob.\n\nQUESTION:\nIs it is cold true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,ball).",
    "c": "friend(alice,dave) :- hungry(eve).\nlikes(george,alice) :- friend(alice,dave).\nenemy(alice,alice) :- likes(george,alice).\ncold :- enemy(alice,alice).\nsibling(alice,frank) :- cold.\nhappy(carol) :- sibling(alice,frank).\nhot :- happy(carol).\nenemy(frank,frank) :- hot.\nparent(alice,frank) :- enemy(frank,bob), big(apple), likes(bob,pencil).\ndislikes(eve,eve) :- owns(alice,ball), friend(bob,carol), small(phone).\ncold :- sibling(carol,dave), friend(eve,carol).\nowns(frank,phone) :- sibling(frank,frank).\nenemy(bob,eve) :- sad(george), enemy(bob,frank).\nfriend(bob,dave) :- hungry(eve).\nowns(dave,book) :- enemy(bob,carol).\nparent(eve,alice) :- big(ball).\ncold :- enemy(frank,frank), hungry(carol), parent(eve,george).\nhungry(alice) :- sibling(frank,george).\nhappy(alice) :- big(ball), dislikes(bob,alice).\nhungry(eve).\nparent(carol,bob).\ndislikes(george,car).\nlikes(frank,bob).\ndislikes(bob,george).\nlikes(bob,eve).\nowns(eve,apple).\nenemy(carol,george).\ndislikes(frank,dave).\nowns(dave,apple).\nlikes(carol,book).\nlikes(eve,george).\nfriend(dave,george).\nfriend(eve,george).\nowns(carol,ball).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is hungry, then alice is a friend of dave.\nIf alice is a friend of dave, then george likes alice.\nIf george likes alice, then alice is an enemy of alice.\nIf alice is an enemy of alice, then it is cold.\nIf it is cold, then alice is a sibling of frank.\nIf alice is a sibling of frank, then carol is happy.\nIf carol is happy, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of bob and apple is big and bob likes pencil, then alice is a parent of frank.\nIf alice owns ball and bob is a friend of carol and phone is small, then eve dislikes eve.\nIf carol is a sibling of dave and eve is a friend of carol, then it is cold.\nIf frank is a sibling of frank, then frank owns phone.\nIf george is sad and bob is an enemy of frank, then bob is an enemy of eve.\nIf eve is hungry, then bob is a friend of dave.\nIf bob is an enemy of carol, then dave owns book.\nIf ball is big, then eve is a parent of alice.\nIf frank is an enemy of frank and carol is hungry and eve is a parent of george, then it is cold.\nIf frank is a sibling of george, then alice is hungry.\nIf ball is big and bob dislikes alice, then alice is happy.\n\nAnd the following facts:\neve is hungry.\ncarol is a parent of bob.\ngeorge dislikes car.\nfrank likes bob.\nbob dislikes george.\nbob likes eve.\neve owns apple.\ncarol is an enemy of george.\nfrank dislikes dave.\ndave owns apple.\ncarol likes book.\neve likes george.\ndave is a friend of george.\neve is a friend of george.\ncarol owns ball.\neve is a parent of bob.\n\nQUESTION:\nIs carol owns ball true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,book).",
    "c": "friend(alice,dave) :- hungry(eve).\nlikes(george,alice) :- friend(alice,dave).\nenemy(alice,alice) :- likes(george,alice).\ncold :- enemy(alice,alice).\nsibling(alice,frank) :- cold.\nhappy(carol) :- sibling(alice,frank).\nhot :- happy(carol).\nenemy(frank,frank) :- hot.\nparent(alice,frank) :- enemy(frank,bob), big(apple), likes(bob,pencil).\ndislikes(eve,eve) :- owns(alice,ball), friend(bob,carol), small(phone).\ncold :- sibling(carol,dave), friend(eve,carol).\nowns(frank,phone) :- sibling(frank,frank).\nenemy(bob,eve) :- sad(george), enemy(bob,frank).\nfriend(bob,dave) :- hungry(eve).\nowns(dave,book) :- enemy(bob,carol).\nparent(eve,alice) :- big(ball).\ncold :- enemy(frank,frank), hungry(carol), parent(eve,george).\nhungry(alice) :- sibling(frank,george).\nhappy(alice) :- big(ball), dislikes(bob,alice).\nhungry(eve).\nparent(carol,bob).\ndislikes(george,car).\nlikes(frank,bob).\ndislikes(bob,george).\nlikes(bob,eve).\nowns(eve,apple).\nenemy(carol,george).\ndislikes(frank,dave).\nowns(dave,apple).\nlikes(carol,book).\nlikes(eve,george).\nfriend(dave,george).\nfriend(eve,george).\nowns(carol,ball).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is hungry, then alice is a friend of dave.\nIf alice is a friend of dave, then george likes alice.\nIf george likes alice, then alice is an enemy of alice.\nIf alice is an enemy of alice, then it is cold.\nIf it is cold, then alice is a sibling of frank.\nIf alice is a sibling of frank, then carol is happy.\nIf carol is happy, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of bob and apple is big and bob likes pencil, then alice is a parent of frank.\nIf alice owns ball and bob is a friend of carol and phone is small, then eve dislikes eve.\nIf carol is a sibling of dave and eve is a friend of carol, then it is cold.\nIf frank is a sibling of frank, then frank owns phone.\nIf george is sad and bob is an enemy of frank, then bob is an enemy of eve.\nIf eve is hungry, then bob is a friend of dave.\nIf bob is an enemy of carol, then dave owns book.\nIf ball is big, then eve is a parent of alice.\nIf frank is an enemy of frank and carol is hungry and eve is a parent of george, then it is cold.\nIf frank is a sibling of george, then alice is hungry.\nIf ball is big and bob dislikes alice, then alice is happy.\n\nAnd the following facts:\neve is hungry.\ncarol is a parent of bob.\ngeorge dislikes car.\nfrank likes bob.\nbob dislikes george.\nbob likes eve.\neve owns apple.\ncarol is an enemy of george.\nfrank dislikes dave.\ndave owns apple.\ncarol likes book.\neve likes george.\ndave is a friend of george.\neve is a friend of george.\ncarol owns ball.\neve is a parent of bob.\n\nQUESTION:\nIs carol likes book true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "friend(alice,dave) :- hungry(eve).\nlikes(george,alice) :- friend(alice,dave).\nenemy(alice,alice) :- likes(george,alice).\ncold :- enemy(alice,alice).\nsibling(alice,frank) :- cold.\nhappy(carol) :- sibling(alice,frank).\nhot :- happy(carol).\nenemy(frank,frank) :- hot.\nparent(alice,frank) :- enemy(frank,bob), big(apple), likes(bob,pencil).\ndislikes(eve,eve) :- owns(alice,ball), friend(bob,carol), small(phone).\ncold :- sibling(carol,dave), friend(eve,carol).\nowns(frank,phone) :- sibling(frank,frank).\nenemy(bob,eve) :- sad(george), enemy(bob,frank).\nfriend(bob,dave) :- hungry(eve).\nowns(dave,book) :- enemy(bob,carol).\nparent(eve,alice) :- big(ball).\ncold :- enemy(frank,frank), hungry(carol), parent(eve,george).\nhungry(alice) :- sibling(frank,george).\nhappy(alice) :- big(ball), dislikes(bob,alice).\nhungry(eve).\nparent(carol,bob).\ndislikes(george,car).\nlikes(frank,bob).\ndislikes(bob,george).\nlikes(bob,eve).\nowns(eve,apple).\nenemy(carol,george).\ndislikes(frank,dave).\nowns(dave,apple).\nlikes(carol,book).\nlikes(eve,george).\nfriend(dave,george).\nfriend(eve,george).\nowns(carol,ball).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is hungry, then alice is a friend of dave.\nIf alice is a friend of dave, then george likes alice.\nIf george likes alice, then alice is an enemy of alice.\nIf alice is an enemy of alice, then it is cold.\nIf it is cold, then alice is a sibling of frank.\nIf alice is a sibling of frank, then carol is happy.\nIf carol is happy, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of bob and apple is big and bob likes pencil, then alice is a parent of frank.\nIf alice owns ball and bob is a friend of carol and phone is small, then eve dislikes eve.\nIf carol is a sibling of dave and eve is a friend of carol, then it is cold.\nIf frank is a sibling of frank, then frank owns phone.\nIf george is sad and bob is an enemy of frank, then bob is an enemy of eve.\nIf eve is hungry, then bob is a friend of dave.\nIf bob is an enemy of carol, then dave owns book.\nIf ball is big, then eve is a parent of alice.\nIf frank is an enemy of frank and carol is hungry and eve is a parent of george, then it is cold.\nIf frank is a sibling of george, then alice is hungry.\nIf ball is big and bob dislikes alice, then alice is happy.\n\nAnd the following facts:\neve is hungry.\ncarol is a parent of bob.\ngeorge dislikes car.\nfrank likes bob.\nbob dislikes george.\nbob likes eve.\neve owns apple.\ncarol is an enemy of george.\nfrank dislikes dave.\ndave owns apple.\ncarol likes book.\neve likes george.\ndave is a friend of george.\neve is a friend of george.\ncarol owns ball.\neve is a parent of bob.\n\nQUESTION:\nIs dave is an enemy of george true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "friend(alice,dave) :- hungry(eve).\nlikes(george,alice) :- friend(alice,dave).\nenemy(alice,alice) :- likes(george,alice).\ncold :- enemy(alice,alice).\nsibling(alice,frank) :- cold.\nhappy(carol) :- sibling(alice,frank).\nhot :- happy(carol).\nenemy(frank,frank) :- hot.\nparent(alice,frank) :- enemy(frank,bob), big(apple), likes(bob,pencil).\ndislikes(eve,eve) :- owns(alice,ball), friend(bob,carol), small(phone).\ncold :- sibling(carol,dave), friend(eve,carol).\nowns(frank,phone) :- sibling(frank,frank).\nenemy(bob,eve) :- sad(george), enemy(bob,frank).\nfriend(bob,dave) :- hungry(eve).\nowns(dave,book) :- enemy(bob,carol).\nparent(eve,alice) :- big(ball).\ncold :- enemy(frank,frank), hungry(carol), parent(eve,george).\nhungry(alice) :- sibling(frank,george).\nhappy(alice) :- big(ball), dislikes(bob,alice).\nhungry(eve).\nparent(carol,bob).\ndislikes(george,car).\nlikes(frank,bob).\ndislikes(bob,george).\nlikes(bob,eve).\nowns(eve,apple).\nenemy(carol,george).\ndislikes(frank,dave).\nowns(dave,apple).\nlikes(carol,book).\nlikes(eve,george).\nfriend(dave,george).\nfriend(eve,george).\nowns(carol,ball).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf eve is hungry, then alice is a friend of dave.\nIf alice is a friend of dave, then george likes alice.\nIf george likes alice, then alice is an enemy of alice.\nIf alice is an enemy of alice, then it is cold.\nIf it is cold, then alice is a sibling of frank.\nIf alice is a sibling of frank, then carol is happy.\nIf carol is happy, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of bob and apple is big and bob likes pencil, then alice is a parent of frank.\nIf alice owns ball and bob is a friend of carol and phone is small, then eve dislikes eve.\nIf carol is a sibling of dave and eve is a friend of carol, then it is cold.\nIf frank is a sibling of frank, then frank owns phone.\nIf george is sad and bob is an enemy of frank, then bob is an enemy of eve.\nIf eve is hungry, then bob is a friend of dave.\nIf bob is an enemy of carol, then dave owns book.\nIf ball is big, then eve is a parent of alice.\nIf frank is an enemy of frank and carol is hungry and eve is a parent of george, then it is cold.\nIf frank is a sibling of george, then alice is hungry.\nIf ball is big and bob dislikes alice, then alice is happy.\n\nAnd the following facts:\neve is hungry.\ncarol is a parent of bob.\ngeorge dislikes car.\nfrank likes bob.\nbob dislikes george.\nbob likes eve.\neve owns apple.\ncarol is an enemy of george.\nfrank dislikes dave.\ndave owns apple.\ncarol likes book.\neve likes george.\ndave is a friend of george.\neve is a friend of george.\ncarol owns ball.\neve is a parent of bob.\n\nQUESTION:\nIs carol is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "friend(alice,dave) :- hungry(eve).\nlikes(george,alice) :- friend(alice,dave).\nenemy(alice,alice) :- likes(george,alice).\ncold :- enemy(alice,alice).\nsibling(alice,frank) :- cold.\nhappy(carol) :- sibling(alice,frank).\nhot :- happy(carol).\nenemy(frank,frank) :- hot.\nparent(alice,frank) :- enemy(frank,bob), big(apple), likes(bob,pencil).\ndislikes(eve,eve) :- owns(alice,ball), friend(bob,carol), small(phone).\ncold :- sibling(carol,dave), friend(eve,carol).\nowns(frank,phone) :- sibling(frank,frank).\nenemy(bob,eve) :- sad(george), enemy(bob,frank).\nfriend(bob,dave) :- hungry(eve).\nowns(dave,book) :- enemy(bob,carol).\nparent(eve,alice) :- big(ball).\ncold :- enemy(frank,frank), hungry(carol), parent(eve,george).\nhungry(alice) :- sibling(frank,george).\nhappy(alice) :- big(ball), dislikes(bob,alice).\nparent(carol,bob).\ndislikes(george,car).\nlikes(frank,bob).\ndislikes(bob,george).\nlikes(bob,eve).\nowns(eve,apple).\nenemy(carol,george).\ndislikes(frank,dave).\nowns(dave,apple).\nlikes(carol,book).\nlikes(eve,george).\nfriend(dave,george).\nfriend(eve,george).\nowns(carol,ball).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then alice is a friend of dave.\nIf alice is a friend of dave, then george likes alice.\nIf george likes alice, then alice is an enemy of alice.\nIf alice is an enemy of alice, then it is cold.\nIf it is cold, then alice is a sibling of frank.\nIf alice is a sibling of frank, then carol is happy.\nIf carol is happy, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of bob and apple is big and bob likes pencil, then alice is a parent of frank.\nIf alice owns ball and bob is a friend of carol and phone is small, then eve dislikes eve.\nIf carol is a sibling of dave and eve is a friend of carol, then it is cold.\nIf frank is a sibling of frank, then frank owns phone.\nIf george is sad and bob is an enemy of frank, then bob is an enemy of eve.\nIf eve is hungry, then bob is a friend of dave.\nIf bob is an enemy of carol, then dave owns book.\nIf ball is big, then eve is a parent of alice.\nIf frank is an enemy of frank and carol is hungry and eve is a parent of george, then it is cold.\nIf frank is a sibling of george, then alice is hungry.\nIf ball is big and bob dislikes alice, then alice is happy.\n\nAnd the following facts:\neve is hungry.\ncarol is a parent of bob.\ngeorge dislikes car.\nfrank likes bob.\nbob dislikes george.\nbob likes eve.\neve owns apple.\ncarol is an enemy of george.\nfrank dislikes dave.\ndave owns apple.\ncarol likes book.\neve likes george.\ndave is a friend of george.\neve is a friend of george.\ncarol owns ball.\neve is a parent of bob.\n\nOBSERVATION: frank is an enemy of frank is true.\n\nQUESTION:\nCould eve is hungry be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": 8,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(eve,apple).",
    "c": "friend(alice,dave) :- hungry(eve).\nlikes(george,alice) :- friend(alice,dave).\nenemy(alice,alice) :- likes(george,alice).\ncold :- enemy(alice,alice).\nsibling(alice,frank) :- cold.\nhappy(carol) :- sibling(alice,frank).\nhot :- happy(carol).\nenemy(frank,frank) :- hot.\nparent(alice,frank) :- enemy(frank,bob), big(apple), likes(bob,pencil).\ndislikes(eve,eve) :- owns(alice,ball), friend(bob,carol), small(phone).\ncold :- sibling(carol,dave), friend(eve,carol).\nowns(frank,phone) :- sibling(frank,frank).\nenemy(bob,eve) :- sad(george), enemy(bob,frank).\nfriend(bob,dave) :- hungry(eve).\nowns(dave,book) :- enemy(bob,carol).\nparent(eve,alice) :- big(ball).\ncold :- enemy(frank,frank), hungry(carol), parent(eve,george).\nhungry(alice) :- sibling(frank,george).\nhappy(alice) :- big(ball), dislikes(bob,alice).\nhungry(eve).\nparent(carol,bob).\ndislikes(george,car).\nlikes(frank,bob).\ndislikes(bob,george).\nlikes(bob,eve).\nenemy(carol,george).\ndislikes(frank,dave).\nowns(dave,apple).\nlikes(carol,book).\nlikes(eve,george).\nfriend(dave,george).\nfriend(eve,george).\nowns(carol,ball).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then alice is a friend of dave.\nIf alice is a friend of dave, then george likes alice.\nIf george likes alice, then alice is an enemy of alice.\nIf alice is an enemy of alice, then it is cold.\nIf it is cold, then alice is a sibling of frank.\nIf alice is a sibling of frank, then carol is happy.\nIf carol is happy, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of bob and apple is big and bob likes pencil, then alice is a parent of frank.\nIf alice owns ball and bob is a friend of carol and phone is small, then eve dislikes eve.\nIf carol is a sibling of dave and eve is a friend of carol, then it is cold.\nIf frank is a sibling of frank, then frank owns phone.\nIf george is sad and bob is an enemy of frank, then bob is an enemy of eve.\nIf eve is hungry, then bob is a friend of dave.\nIf bob is an enemy of carol, then dave owns book.\nIf ball is big, then eve is a parent of alice.\nIf frank is an enemy of frank and carol is hungry and eve is a parent of george, then it is cold.\nIf frank is a sibling of george, then alice is hungry.\nIf ball is big and bob dislikes alice, then alice is happy.\n\nAnd the following facts:\neve is hungry.\ncarol is a parent of bob.\ngeorge dislikes car.\nfrank likes bob.\nbob dislikes george.\nbob likes eve.\neve owns apple.\ncarol is an enemy of george.\nfrank dislikes dave.\ndave owns apple.\ncarol likes book.\neve likes george.\ndave is a friend of george.\neve is a friend of george.\ncarol owns ball.\neve is a parent of bob.\n\nOBSERVATION: frank is an enemy of frank is true.\n\nQUESTION:\nCould eve owns apple be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "likes(eve,george).",
    "c": "friend(alice,dave) :- hungry(eve).\nlikes(george,alice) :- friend(alice,dave).\nenemy(alice,alice) :- likes(george,alice).\ncold :- enemy(alice,alice).\nsibling(alice,frank) :- cold.\nhappy(carol) :- sibling(alice,frank).\nhot :- happy(carol).\nenemy(frank,frank) :- hot.\nparent(alice,frank) :- enemy(frank,bob), big(apple), likes(bob,pencil).\ndislikes(eve,eve) :- owns(alice,ball), friend(bob,carol), small(phone).\ncold :- sibling(carol,dave), friend(eve,carol).\nowns(frank,phone) :- sibling(frank,frank).\nenemy(bob,eve) :- sad(george), enemy(bob,frank).\nfriend(bob,dave) :- hungry(eve).\nowns(dave,book) :- enemy(bob,carol).\nparent(eve,alice) :- big(ball).\ncold :- enemy(frank,frank), hungry(carol), parent(eve,george).\nhungry(alice) :- sibling(frank,george).\nhappy(alice) :- big(ball), dislikes(bob,alice).\nhungry(eve).\nparent(carol,bob).\ndislikes(george,car).\nlikes(frank,bob).\ndislikes(bob,george).\nlikes(bob,eve).\nowns(eve,apple).\nenemy(carol,george).\ndislikes(frank,dave).\nowns(dave,apple).\nlikes(carol,book).\nfriend(dave,george).\nfriend(eve,george).\nowns(carol,ball).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then alice is a friend of dave.\nIf alice is a friend of dave, then george likes alice.\nIf george likes alice, then alice is an enemy of alice.\nIf alice is an enemy of alice, then it is cold.\nIf it is cold, then alice is a sibling of frank.\nIf alice is a sibling of frank, then carol is happy.\nIf carol is happy, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of bob and apple is big and bob likes pencil, then alice is a parent of frank.\nIf alice owns ball and bob is a friend of carol and phone is small, then eve dislikes eve.\nIf carol is a sibling of dave and eve is a friend of carol, then it is cold.\nIf frank is a sibling of frank, then frank owns phone.\nIf george is sad and bob is an enemy of frank, then bob is an enemy of eve.\nIf eve is hungry, then bob is a friend of dave.\nIf bob is an enemy of carol, then dave owns book.\nIf ball is big, then eve is a parent of alice.\nIf frank is an enemy of frank and carol is hungry and eve is a parent of george, then it is cold.\nIf frank is a sibling of george, then alice is hungry.\nIf ball is big and bob dislikes alice, then alice is happy.\n\nAnd the following facts:\neve is hungry.\ncarol is a parent of bob.\ngeorge dislikes car.\nfrank likes bob.\nbob dislikes george.\nbob likes eve.\neve owns apple.\ncarol is an enemy of george.\nfrank dislikes dave.\ndave owns apple.\ncarol likes book.\neve likes george.\ndave is a friend of george.\neve is a friend of george.\ncarol owns ball.\neve is a parent of bob.\n\nOBSERVATION: frank is an enemy of frank is true.\n\nQUESTION:\nCould eve likes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "enemy(eve,alice).",
    "c": "tall(eve) :- hungry(bob).\ndislikes(george,george) :- tall(eve).\nwet(phone) :- dislikes(george,george).\ndislikes(george,pencil) :- wet(phone).\ncold :- dislikes(george,pencil).\ntall(dave) :- cold.\nowns(alice,book) :- tall(dave).\ndislikes(alice,dave) :- owns(alice,book).\ncold :- dislikes(alice,dave).\nenemy(dave,eve) :- cold.\nwet(apple) :- hot, parent(frank,frank).\nsmall(pencil) :- likes(eve,bob).\nsibling(bob,frank) :- sad(bob), hungry(frank).\nsmall(pencil) :- cold, small(car).\nsibling(dave,carol) :- hungry(bob).\nhungry(carol) :- sibling(carol,alice), enemy(bob,frank).\nowns(carol,apple) :- enemy(alice,dave), owns(alice,apple), small(pencil).\nhungry(carol) :- hungry(bob).\nowns(bob,car) :- owns(eve,phone).\nhungry(bob).\ndislikes(dave,eve).\ndislikes(frank,george).\ndislikes(alice,dave).\ntall(carol).\nparent(dave,carol).\nowns(george,pencil).\nparent(bob,alice).\nowns(frank,ball).\nenemy(dave,george).\nparent(alice,bob).\nenemy(eve,alice).\nsibling(george,eve).\nlikes(bob,ball).\ndislikes(bob,pencil).\nowns(bob,apple).",
    "natural language": "You are given the following information:\nIf bob is hungry, then eve is tall.\nIf eve is tall, then george dislikes george.\nIf george dislikes george, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then alice owns book.\nIf alice owns book, then alice dislikes dave.\nIf alice dislikes dave, then it is cold.\nIf it is cold, then dave is an enemy of eve.\nIf it is hot and frank is a parent of frank, then apple is wet.\nIf eve likes bob, then pencil is small.\nIf bob is sad and frank is hungry, then bob is a sibling of frank.\nIf it is cold and car is small, then pencil is small.\nIf bob is hungry, then dave is a sibling of carol.\nIf carol is a sibling of alice and bob is an enemy of frank, then carol is hungry.\nIf alice is an enemy of dave and alice owns apple and pencil is small, then carol owns apple.\nIf bob is hungry, then carol is hungry.\nIf eve owns phone, then bob owns car.\n\nAnd the following facts:\nbob is hungry.\ndave dislikes eve.\nfrank dislikes george.\nalice dislikes dave.\ncarol is tall.\ndave is a parent of carol.\ngeorge owns pencil.\nbob is a parent of alice.\nfrank owns ball.\ndave is an enemy of george.\nalice is a parent of bob.\neve is an enemy of alice.\ngeorge is a sibling of eve.\nbob likes ball.\nbob dislikes pencil.\nbob owns apple.\n\nQUESTION:\nIs eve is an enemy of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,eve).",
    "c": "tall(eve) :- hungry(bob).\ndislikes(george,george) :- tall(eve).\nwet(phone) :- dislikes(george,george).\ndislikes(george,pencil) :- wet(phone).\ncold :- dislikes(george,pencil).\ntall(dave) :- cold.\nowns(alice,book) :- tall(dave).\ndislikes(alice,dave) :- owns(alice,book).\ncold :- dislikes(alice,dave).\nenemy(dave,eve) :- cold.\nwet(apple) :- hot, parent(frank,frank).\nsmall(pencil) :- likes(eve,bob).\nsibling(bob,frank) :- sad(bob), hungry(frank).\nsmall(pencil) :- cold, small(car).\nsibling(dave,carol) :- hungry(bob).\nhungry(carol) :- sibling(carol,alice), enemy(bob,frank).\nowns(carol,apple) :- enemy(alice,dave), owns(alice,apple), small(pencil).\nhungry(carol) :- hungry(bob).\nowns(bob,car) :- owns(eve,phone).\nhungry(bob).\ndislikes(dave,eve).\ndislikes(frank,george).\ndislikes(alice,dave).\ntall(carol).\nparent(dave,carol).\nowns(george,pencil).\nparent(bob,alice).\nowns(frank,ball).\nenemy(dave,george).\nparent(alice,bob).\nenemy(eve,alice).\nsibling(george,eve).\nlikes(bob,ball).\ndislikes(bob,pencil).\nowns(bob,apple).",
    "natural language": "You are given the following information:\nIf bob is hungry, then eve is tall.\nIf eve is tall, then george dislikes george.\nIf george dislikes george, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then alice owns book.\nIf alice owns book, then alice dislikes dave.\nIf alice dislikes dave, then it is cold.\nIf it is cold, then dave is an enemy of eve.\nIf it is hot and frank is a parent of frank, then apple is wet.\nIf eve likes bob, then pencil is small.\nIf bob is sad and frank is hungry, then bob is a sibling of frank.\nIf it is cold and car is small, then pencil is small.\nIf bob is hungry, then dave is a sibling of carol.\nIf carol is a sibling of alice and bob is an enemy of frank, then carol is hungry.\nIf alice is an enemy of dave and alice owns apple and pencil is small, then carol owns apple.\nIf bob is hungry, then carol is hungry.\nIf eve owns phone, then bob owns car.\n\nAnd the following facts:\nbob is hungry.\ndave dislikes eve.\nfrank dislikes george.\nalice dislikes dave.\ncarol is tall.\ndave is a parent of carol.\ngeorge owns pencil.\nbob is a parent of alice.\nfrank owns ball.\ndave is an enemy of george.\nalice is a parent of bob.\neve is an enemy of alice.\ngeorge is a sibling of eve.\nbob likes ball.\nbob dislikes pencil.\nbob owns apple.\n\nQUESTION:\nIs dave dislikes eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "tall(eve) :- hungry(bob).\ndislikes(george,george) :- tall(eve).\nwet(phone) :- dislikes(george,george).\ndislikes(george,pencil) :- wet(phone).\ncold :- dislikes(george,pencil).\ntall(dave) :- cold.\nowns(alice,book) :- tall(dave).\ndislikes(alice,dave) :- owns(alice,book).\ncold :- dislikes(alice,dave).\nenemy(dave,eve) :- cold.\nwet(apple) :- hot, parent(frank,frank).\nsmall(pencil) :- likes(eve,bob).\nsibling(bob,frank) :- sad(bob), hungry(frank).\nsmall(pencil) :- cold, small(car).\nsibling(dave,carol) :- hungry(bob).\nhungry(carol) :- sibling(carol,alice), enemy(bob,frank).\nowns(carol,apple) :- enemy(alice,dave), owns(alice,apple), small(pencil).\nhungry(carol) :- hungry(bob).\nowns(bob,car) :- owns(eve,phone).\nhungry(bob).\ndislikes(dave,eve).\ndislikes(frank,george).\ndislikes(alice,dave).\ntall(carol).\nparent(dave,carol).\nowns(george,pencil).\nparent(bob,alice).\nowns(frank,ball).\nenemy(dave,george).\nparent(alice,bob).\nenemy(eve,alice).\nsibling(george,eve).\nlikes(bob,ball).\ndislikes(bob,pencil).\nowns(bob,apple).",
    "natural language": "You are given the following information:\nIf bob is hungry, then eve is tall.\nIf eve is tall, then george dislikes george.\nIf george dislikes george, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then alice owns book.\nIf alice owns book, then alice dislikes dave.\nIf alice dislikes dave, then it is cold.\nIf it is cold, then dave is an enemy of eve.\nIf it is hot and frank is a parent of frank, then apple is wet.\nIf eve likes bob, then pencil is small.\nIf bob is sad and frank is hungry, then bob is a sibling of frank.\nIf it is cold and car is small, then pencil is small.\nIf bob is hungry, then dave is a sibling of carol.\nIf carol is a sibling of alice and bob is an enemy of frank, then carol is hungry.\nIf alice is an enemy of dave and alice owns apple and pencil is small, then carol owns apple.\nIf bob is hungry, then carol is hungry.\nIf eve owns phone, then bob owns car.\n\nAnd the following facts:\nbob is hungry.\ndave dislikes eve.\nfrank dislikes george.\nalice dislikes dave.\ncarol is tall.\ndave is a parent of carol.\ngeorge owns pencil.\nbob is a parent of alice.\nfrank owns ball.\ndave is an enemy of george.\nalice is a parent of bob.\neve is an enemy of alice.\ngeorge is a sibling of eve.\nbob likes ball.\nbob dislikes pencil.\nbob owns apple.\n\nQUESTION:\nIs dave is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "tall(eve) :- hungry(bob).\ndislikes(george,george) :- tall(eve).\nwet(phone) :- dislikes(george,george).\ndislikes(george,pencil) :- wet(phone).\ncold :- dislikes(george,pencil).\ntall(dave) :- cold.\nowns(alice,book) :- tall(dave).\ndislikes(alice,dave) :- owns(alice,book).\ncold :- dislikes(alice,dave).\nenemy(dave,eve) :- cold.\nwet(apple) :- hot, parent(frank,frank).\nsmall(pencil) :- likes(eve,bob).\nsibling(bob,frank) :- sad(bob), hungry(frank).\nsmall(pencil) :- cold, small(car).\nsibling(dave,carol) :- hungry(bob).\nhungry(carol) :- sibling(carol,alice), enemy(bob,frank).\nowns(carol,apple) :- enemy(alice,dave), owns(alice,apple), small(pencil).\nhungry(carol) :- hungry(bob).\nowns(bob,car) :- owns(eve,phone).\nhungry(bob).\ndislikes(dave,eve).\ndislikes(frank,george).\ndislikes(alice,dave).\ntall(carol).\nparent(dave,carol).\nowns(george,pencil).\nparent(bob,alice).\nowns(frank,ball).\nenemy(dave,george).\nparent(alice,bob).\nenemy(eve,alice).\nsibling(george,eve).\nlikes(bob,ball).\ndislikes(bob,pencil).\nowns(bob,apple).",
    "natural language": "You are given the following information:\nIf bob is hungry, then eve is tall.\nIf eve is tall, then george dislikes george.\nIf george dislikes george, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then alice owns book.\nIf alice owns book, then alice dislikes dave.\nIf alice dislikes dave, then it is cold.\nIf it is cold, then dave is an enemy of eve.\nIf it is hot and frank is a parent of frank, then apple is wet.\nIf eve likes bob, then pencil is small.\nIf bob is sad and frank is hungry, then bob is a sibling of frank.\nIf it is cold and car is small, then pencil is small.\nIf bob is hungry, then dave is a sibling of carol.\nIf carol is a sibling of alice and bob is an enemy of frank, then carol is hungry.\nIf alice is an enemy of dave and alice owns apple and pencil is small, then carol owns apple.\nIf bob is hungry, then carol is hungry.\nIf eve owns phone, then bob owns car.\n\nAnd the following facts:\nbob is hungry.\ndave dislikes eve.\nfrank dislikes george.\nalice dislikes dave.\ncarol is tall.\ndave is a parent of carol.\ngeorge owns pencil.\nbob is a parent of alice.\nfrank owns ball.\ndave is an enemy of george.\nalice is a parent of bob.\neve is an enemy of alice.\ngeorge is a sibling of eve.\nbob likes ball.\nbob dislikes pencil.\nbob owns apple.\n\nQUESTION:\nIs frank is a parent of alice true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,car).",
    "c": "tall(eve) :- hungry(bob).\ndislikes(george,george) :- tall(eve).\nwet(phone) :- dislikes(george,george).\ndislikes(george,pencil) :- wet(phone).\ncold :- dislikes(george,pencil).\ntall(dave) :- cold.\nowns(alice,book) :- tall(dave).\ndislikes(alice,dave) :- owns(alice,book).\ncold :- dislikes(alice,dave).\nenemy(dave,eve) :- cold.\nwet(apple) :- hot, parent(frank,frank).\nsmall(pencil) :- likes(eve,bob).\nsibling(bob,frank) :- sad(bob), hungry(frank).\nsmall(pencil) :- cold, small(car).\nsibling(dave,carol) :- hungry(bob).\nhungry(carol) :- sibling(carol,alice), enemy(bob,frank).\nowns(carol,apple) :- enemy(alice,dave), owns(alice,apple), small(pencil).\nhungry(carol) :- hungry(bob).\nowns(bob,car) :- owns(eve,phone).\nhungry(bob).\ndislikes(dave,eve).\ndislikes(frank,george).\ndislikes(alice,dave).\ntall(carol).\nparent(dave,carol).\nowns(george,pencil).\nparent(bob,alice).\nowns(frank,ball).\nenemy(dave,george).\nparent(alice,bob).\nenemy(eve,alice).\nsibling(george,eve).\nlikes(bob,ball).\ndislikes(bob,pencil).\nowns(bob,apple).",
    "natural language": "You are given the following information:\nIf bob is hungry, then eve is tall.\nIf eve is tall, then george dislikes george.\nIf george dislikes george, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then alice owns book.\nIf alice owns book, then alice dislikes dave.\nIf alice dislikes dave, then it is cold.\nIf it is cold, then dave is an enemy of eve.\nIf it is hot and frank is a parent of frank, then apple is wet.\nIf eve likes bob, then pencil is small.\nIf bob is sad and frank is hungry, then bob is a sibling of frank.\nIf it is cold and car is small, then pencil is small.\nIf bob is hungry, then dave is a sibling of carol.\nIf carol is a sibling of alice and bob is an enemy of frank, then carol is hungry.\nIf alice is an enemy of dave and alice owns apple and pencil is small, then carol owns apple.\nIf bob is hungry, then carol is hungry.\nIf eve owns phone, then bob owns car.\n\nAnd the following facts:\nbob is hungry.\ndave dislikes eve.\nfrank dislikes george.\nalice dislikes dave.\ncarol is tall.\ndave is a parent of carol.\ngeorge owns pencil.\nbob is a parent of alice.\nfrank owns ball.\ndave is an enemy of george.\nalice is a parent of bob.\neve is an enemy of alice.\ngeorge is a sibling of eve.\nbob likes ball.\nbob dislikes pencil.\nbob owns apple.\n\nQUESTION:\nIs alice owns car true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,dave).",
    "c": "tall(eve) :- hungry(bob).\ndislikes(george,george) :- tall(eve).\nwet(phone) :- dislikes(george,george).\ndislikes(george,pencil) :- wet(phone).\ncold :- dislikes(george,pencil).\ntall(dave) :- cold.\nowns(alice,book) :- tall(dave).\ndislikes(alice,dave) :- owns(alice,book).\ncold :- dislikes(alice,dave).\nenemy(dave,eve) :- cold.\nwet(apple) :- hot, parent(frank,frank).\nsmall(pencil) :- likes(eve,bob).\nsibling(bob,frank) :- sad(bob), hungry(frank).\nsmall(pencil) :- cold, small(car).\nsibling(dave,carol) :- hungry(bob).\nhungry(carol) :- sibling(carol,alice), enemy(bob,frank).\nowns(carol,apple) :- enemy(alice,dave), owns(alice,apple), small(pencil).\nhungry(carol) :- hungry(bob).\nowns(bob,car) :- owns(eve,phone).\nhungry(bob).\ndislikes(dave,eve).\ndislikes(frank,george).\ntall(carol).\nparent(dave,carol).\nowns(george,pencil).\nparent(bob,alice).\nowns(frank,ball).\nenemy(dave,george).\nparent(alice,bob).\nenemy(eve,alice).\nsibling(george,eve).\nlikes(bob,ball).\ndislikes(bob,pencil).\nowns(bob,apple).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then eve is tall.\nIf eve is tall, then george dislikes george.\nIf george dislikes george, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then alice owns book.\nIf alice owns book, then alice dislikes dave.\nIf alice dislikes dave, then it is cold.\nIf it is cold, then dave is an enemy of eve.\nIf it is hot and frank is a parent of frank, then apple is wet.\nIf eve likes bob, then pencil is small.\nIf bob is sad and frank is hungry, then bob is a sibling of frank.\nIf it is cold and car is small, then pencil is small.\nIf bob is hungry, then dave is a sibling of carol.\nIf carol is a sibling of alice and bob is an enemy of frank, then carol is hungry.\nIf alice is an enemy of dave and alice owns apple and pencil is small, then carol owns apple.\nIf bob is hungry, then carol is hungry.\nIf eve owns phone, then bob owns car.\n\nAnd the following facts:\nbob is hungry.\ndave dislikes eve.\nfrank dislikes george.\nalice dislikes dave.\ncarol is tall.\ndave is a parent of carol.\ngeorge owns pencil.\nbob is a parent of alice.\nfrank owns ball.\ndave is an enemy of george.\nalice is a parent of bob.\neve is an enemy of alice.\ngeorge is a sibling of eve.\nbob likes ball.\nbob dislikes pencil.\nbob owns apple.\n\nOBSERVATION: dave is an enemy of eve is true.\n\nQUESTION:\nCould alice dislikes dave be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(bob,pencil).",
    "c": "tall(eve) :- hungry(bob).\ndislikes(george,george) :- tall(eve).\nwet(phone) :- dislikes(george,george).\ndislikes(george,pencil) :- wet(phone).\ncold :- dislikes(george,pencil).\ntall(dave) :- cold.\nowns(alice,book) :- tall(dave).\ndislikes(alice,dave) :- owns(alice,book).\ncold :- dislikes(alice,dave).\nenemy(dave,eve) :- cold.\nwet(apple) :- hot, parent(frank,frank).\nsmall(pencil) :- likes(eve,bob).\nsibling(bob,frank) :- sad(bob), hungry(frank).\nsmall(pencil) :- cold, small(car).\nsibling(dave,carol) :- hungry(bob).\nhungry(carol) :- sibling(carol,alice), enemy(bob,frank).\nowns(carol,apple) :- enemy(alice,dave), owns(alice,apple), small(pencil).\nhungry(carol) :- hungry(bob).\nowns(bob,car) :- owns(eve,phone).\nhungry(bob).\ndislikes(dave,eve).\ndislikes(frank,george).\ndislikes(alice,dave).\ntall(carol).\nparent(dave,carol).\nowns(george,pencil).\nparent(bob,alice).\nowns(frank,ball).\nenemy(dave,george).\nparent(alice,bob).\nenemy(eve,alice).\nsibling(george,eve).\nlikes(bob,ball).\nowns(bob,apple).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then eve is tall.\nIf eve is tall, then george dislikes george.\nIf george dislikes george, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then alice owns book.\nIf alice owns book, then alice dislikes dave.\nIf alice dislikes dave, then it is cold.\nIf it is cold, then dave is an enemy of eve.\nIf it is hot and frank is a parent of frank, then apple is wet.\nIf eve likes bob, then pencil is small.\nIf bob is sad and frank is hungry, then bob is a sibling of frank.\nIf it is cold and car is small, then pencil is small.\nIf bob is hungry, then dave is a sibling of carol.\nIf carol is a sibling of alice and bob is an enemy of frank, then carol is hungry.\nIf alice is an enemy of dave and alice owns apple and pencil is small, then carol owns apple.\nIf bob is hungry, then carol is hungry.\nIf eve owns phone, then bob owns car.\n\nAnd the following facts:\nbob is hungry.\ndave dislikes eve.\nfrank dislikes george.\nalice dislikes dave.\ncarol is tall.\ndave is a parent of carol.\ngeorge owns pencil.\nbob is a parent of alice.\nfrank owns ball.\ndave is an enemy of george.\nalice is a parent of bob.\neve is an enemy of alice.\ngeorge is a sibling of eve.\nbob likes ball.\nbob dislikes pencil.\nbob owns apple.\n\nOBSERVATION: dave is an enemy of eve is true.\n\nQUESTION:\nCould bob dislikes pencil be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "dislikes(frank,george).",
    "c": "tall(eve) :- hungry(bob).\ndislikes(george,george) :- tall(eve).\nwet(phone) :- dislikes(george,george).\ndislikes(george,pencil) :- wet(phone).\ncold :- dislikes(george,pencil).\ntall(dave) :- cold.\nowns(alice,book) :- tall(dave).\ndislikes(alice,dave) :- owns(alice,book).\ncold :- dislikes(alice,dave).\nenemy(dave,eve) :- cold.\nwet(apple) :- hot, parent(frank,frank).\nsmall(pencil) :- likes(eve,bob).\nsibling(bob,frank) :- sad(bob), hungry(frank).\nsmall(pencil) :- cold, small(car).\nsibling(dave,carol) :- hungry(bob).\nhungry(carol) :- sibling(carol,alice), enemy(bob,frank).\nowns(carol,apple) :- enemy(alice,dave), owns(alice,apple), small(pencil).\nhungry(carol) :- hungry(bob).\nowns(bob,car) :- owns(eve,phone).\nhungry(bob).\ndislikes(dave,eve).\ndislikes(alice,dave).\ntall(carol).\nparent(dave,carol).\nowns(george,pencil).\nparent(bob,alice).\nowns(frank,ball).\nenemy(dave,george).\nparent(alice,bob).\nenemy(eve,alice).\nsibling(george,eve).\nlikes(bob,ball).\ndislikes(bob,pencil).\nowns(bob,apple).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then eve is tall.\nIf eve is tall, then george dislikes george.\nIf george dislikes george, then phone is wet.\nIf phone is wet, then george dislikes pencil.\nIf george dislikes pencil, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then alice owns book.\nIf alice owns book, then alice dislikes dave.\nIf alice dislikes dave, then it is cold.\nIf it is cold, then dave is an enemy of eve.\nIf it is hot and frank is a parent of frank, then apple is wet.\nIf eve likes bob, then pencil is small.\nIf bob is sad and frank is hungry, then bob is a sibling of frank.\nIf it is cold and car is small, then pencil is small.\nIf bob is hungry, then dave is a sibling of carol.\nIf carol is a sibling of alice and bob is an enemy of frank, then carol is hungry.\nIf alice is an enemy of dave and alice owns apple and pencil is small, then carol owns apple.\nIf bob is hungry, then carol is hungry.\nIf eve owns phone, then bob owns car.\n\nAnd the following facts:\nbob is hungry.\ndave dislikes eve.\nfrank dislikes george.\nalice dislikes dave.\ncarol is tall.\ndave is a parent of carol.\ngeorge owns pencil.\nbob is a parent of alice.\nfrank owns ball.\ndave is an enemy of george.\nalice is a parent of bob.\neve is an enemy of alice.\ngeorge is a sibling of eve.\nbob likes ball.\nbob dislikes pencil.\nbob owns apple.\n\nOBSERVATION: dave is an enemy of eve is true.\n\nQUESTION:\nCould frank dislikes george be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "tall(george) :- tall(bob).\nbig(phone) :- tall(george).\ntall(alice) :- big(phone).\nwet(phone) :- tall(alice).\nhot :- wet(phone).\ncold :- hot.\nhot :- cold.\nfriend(bob,dave) :- hot.\nsunny :- friend(bob,dave).\nparent(carol,carol) :- sunny.\nenemy(frank,frank) :- hot, parent(frank,george), happy(eve).\nfriend(bob,dave) :- big(car).\nenemy(eve,dave) :- likes(eve,ball).\nfriend(carol,george) :- tall(alice), hungry(frank), cold.\nsibling(carol,eve) :- sibling(carol,frank), enemy(bob,carol), parent(bob,george).\nsibling(dave,eve) :- sad(eve).\nparent(eve,alice) :- owns(alice,apple), cold.\nparent(alice,carol) :- cold, small(ball), hungry(eve).\nhungry(frank) :- sunny, sad(dave), tall(carol).\ntall(bob).\nfriend(frank,alice).\nowns(frank,book).\nwet(apple).\nlikes(alice,car).\nlikes(dave,alice).\nparent(alice,george).\nlikes(eve,dave).\nsmall(pencil).\nowns(eve,car).\nlikes(carol,bob).\nfriend(carol,alice).\nowns(alice,apple).\nhot.\nsad(dave).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf bob is tall, then george is tall.\nIf george is tall, then phone is big.\nIf phone is big, then alice is tall.\nIf alice is tall, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf bob is a friend of dave, then it is sunny.\nIf it is sunny, then carol is a parent of carol.\nIf it is hot and frank is a parent of george and eve is happy, then frank is an enemy of frank.\nIf car is big, then bob is a friend of dave.\nIf eve likes ball, then eve is an enemy of dave.\nIf alice is tall and frank is hungry and it is cold, then carol is a friend of george.\nIf carol is a sibling of frank and bob is an enemy of carol and bob is a parent of george, then carol is a sibling of eve.\nIf eve is sad, then dave is a sibling of eve.\nIf alice owns apple and it is cold, then eve is a parent of alice.\nIf it is cold and ball is small and eve is hungry, then alice is a parent of carol.\nIf it is sunny and dave is sad and carol is tall, then frank is hungry.\n\nAnd the following facts:\nbob is tall.\nfrank is a friend of alice.\nfrank owns book.\napple is wet.\nalice likes car.\ndave likes alice.\nalice is a parent of george.\neve likes dave.\npencil is small.\neve owns car.\ncarol likes bob.\ncarol is a friend of alice.\nalice owns apple.\nit is hot.\ndave is sad.\nbob owns ball.\n\nQUESTION:\nIs pencil is small true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,apple).",
    "c": "tall(george) :- tall(bob).\nbig(phone) :- tall(george).\ntall(alice) :- big(phone).\nwet(phone) :- tall(alice).\nhot :- wet(phone).\ncold :- hot.\nhot :- cold.\nfriend(bob,dave) :- hot.\nsunny :- friend(bob,dave).\nparent(carol,carol) :- sunny.\nenemy(frank,frank) :- hot, parent(frank,george), happy(eve).\nfriend(bob,dave) :- big(car).\nenemy(eve,dave) :- likes(eve,ball).\nfriend(carol,george) :- tall(alice), hungry(frank), cold.\nsibling(carol,eve) :- sibling(carol,frank), enemy(bob,carol), parent(bob,george).\nsibling(dave,eve) :- sad(eve).\nparent(eve,alice) :- owns(alice,apple), cold.\nparent(alice,carol) :- cold, small(ball), hungry(eve).\nhungry(frank) :- sunny, sad(dave), tall(carol).\ntall(bob).\nfriend(frank,alice).\nowns(frank,book).\nwet(apple).\nlikes(alice,car).\nlikes(dave,alice).\nparent(alice,george).\nlikes(eve,dave).\nsmall(pencil).\nowns(eve,car).\nlikes(carol,bob).\nfriend(carol,alice).\nowns(alice,apple).\nhot.\nsad(dave).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf bob is tall, then george is tall.\nIf george is tall, then phone is big.\nIf phone is big, then alice is tall.\nIf alice is tall, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf bob is a friend of dave, then it is sunny.\nIf it is sunny, then carol is a parent of carol.\nIf it is hot and frank is a parent of george and eve is happy, then frank is an enemy of frank.\nIf car is big, then bob is a friend of dave.\nIf eve likes ball, then eve is an enemy of dave.\nIf alice is tall and frank is hungry and it is cold, then carol is a friend of george.\nIf carol is a sibling of frank and bob is an enemy of carol and bob is a parent of george, then carol is a sibling of eve.\nIf eve is sad, then dave is a sibling of eve.\nIf alice owns apple and it is cold, then eve is a parent of alice.\nIf it is cold and ball is small and eve is hungry, then alice is a parent of carol.\nIf it is sunny and dave is sad and carol is tall, then frank is hungry.\n\nAnd the following facts:\nbob is tall.\nfrank is a friend of alice.\nfrank owns book.\napple is wet.\nalice likes car.\ndave likes alice.\nalice is a parent of george.\neve likes dave.\npencil is small.\neve owns car.\ncarol likes bob.\ncarol is a friend of alice.\nalice owns apple.\nit is hot.\ndave is sad.\nbob owns ball.\n\nQUESTION:\nIs alice owns apple true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,dave).",
    "c": "tall(george) :- tall(bob).\nbig(phone) :- tall(george).\ntall(alice) :- big(phone).\nwet(phone) :- tall(alice).\nhot :- wet(phone).\ncold :- hot.\nhot :- cold.\nfriend(bob,dave) :- hot.\nsunny :- friend(bob,dave).\nparent(carol,carol) :- sunny.\nenemy(frank,frank) :- hot, parent(frank,george), happy(eve).\nfriend(bob,dave) :- big(car).\nenemy(eve,dave) :- likes(eve,ball).\nfriend(carol,george) :- tall(alice), hungry(frank), cold.\nsibling(carol,eve) :- sibling(carol,frank), enemy(bob,carol), parent(bob,george).\nsibling(dave,eve) :- sad(eve).\nparent(eve,alice) :- owns(alice,apple), cold.\nparent(alice,carol) :- cold, small(ball), hungry(eve).\nhungry(frank) :- sunny, sad(dave), tall(carol).\ntall(bob).\nfriend(frank,alice).\nowns(frank,book).\nwet(apple).\nlikes(alice,car).\nlikes(dave,alice).\nparent(alice,george).\nlikes(eve,dave).\nsmall(pencil).\nowns(eve,car).\nlikes(carol,bob).\nfriend(carol,alice).\nowns(alice,apple).\nhot.\nsad(dave).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf bob is tall, then george is tall.\nIf george is tall, then phone is big.\nIf phone is big, then alice is tall.\nIf alice is tall, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf bob is a friend of dave, then it is sunny.\nIf it is sunny, then carol is a parent of carol.\nIf it is hot and frank is a parent of george and eve is happy, then frank is an enemy of frank.\nIf car is big, then bob is a friend of dave.\nIf eve likes ball, then eve is an enemy of dave.\nIf alice is tall and frank is hungry and it is cold, then carol is a friend of george.\nIf carol is a sibling of frank and bob is an enemy of carol and bob is a parent of george, then carol is a sibling of eve.\nIf eve is sad, then dave is a sibling of eve.\nIf alice owns apple and it is cold, then eve is a parent of alice.\nIf it is cold and ball is small and eve is hungry, then alice is a parent of carol.\nIf it is sunny and dave is sad and carol is tall, then frank is hungry.\n\nAnd the following facts:\nbob is tall.\nfrank is a friend of alice.\nfrank owns book.\napple is wet.\nalice likes car.\ndave likes alice.\nalice is a parent of george.\neve likes dave.\npencil is small.\neve owns car.\ncarol likes bob.\ncarol is a friend of alice.\nalice owns apple.\nit is hot.\ndave is sad.\nbob owns ball.\n\nQUESTION:\nIs eve likes dave true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,carol).",
    "c": "tall(george) :- tall(bob).\nbig(phone) :- tall(george).\ntall(alice) :- big(phone).\nwet(phone) :- tall(alice).\nhot :- wet(phone).\ncold :- hot.\nhot :- cold.\nfriend(bob,dave) :- hot.\nsunny :- friend(bob,dave).\nparent(carol,carol) :- sunny.\nenemy(frank,frank) :- hot, parent(frank,george), happy(eve).\nfriend(bob,dave) :- big(car).\nenemy(eve,dave) :- likes(eve,ball).\nfriend(carol,george) :- tall(alice), hungry(frank), cold.\nsibling(carol,eve) :- sibling(carol,frank), enemy(bob,carol), parent(bob,george).\nsibling(dave,eve) :- sad(eve).\nparent(eve,alice) :- owns(alice,apple), cold.\nparent(alice,carol) :- cold, small(ball), hungry(eve).\nhungry(frank) :- sunny, sad(dave), tall(carol).\ntall(bob).\nfriend(frank,alice).\nowns(frank,book).\nwet(apple).\nlikes(alice,car).\nlikes(dave,alice).\nparent(alice,george).\nlikes(eve,dave).\nsmall(pencil).\nowns(eve,car).\nlikes(carol,bob).\nfriend(carol,alice).\nowns(alice,apple).\nhot.\nsad(dave).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf bob is tall, then george is tall.\nIf george is tall, then phone is big.\nIf phone is big, then alice is tall.\nIf alice is tall, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf bob is a friend of dave, then it is sunny.\nIf it is sunny, then carol is a parent of carol.\nIf it is hot and frank is a parent of george and eve is happy, then frank is an enemy of frank.\nIf car is big, then bob is a friend of dave.\nIf eve likes ball, then eve is an enemy of dave.\nIf alice is tall and frank is hungry and it is cold, then carol is a friend of george.\nIf carol is a sibling of frank and bob is an enemy of carol and bob is a parent of george, then carol is a sibling of eve.\nIf eve is sad, then dave is a sibling of eve.\nIf alice owns apple and it is cold, then eve is a parent of alice.\nIf it is cold and ball is small and eve is hungry, then alice is a parent of carol.\nIf it is sunny and dave is sad and carol is tall, then frank is hungry.\n\nAnd the following facts:\nbob is tall.\nfrank is a friend of alice.\nfrank owns book.\napple is wet.\nalice likes car.\ndave likes alice.\nalice is a parent of george.\neve likes dave.\npencil is small.\neve owns car.\ncarol likes bob.\ncarol is a friend of alice.\nalice owns apple.\nit is hot.\ndave is sad.\nbob owns ball.\n\nQUESTION:\nIs bob likes carol true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,eve).",
    "c": "tall(george) :- tall(bob).\nbig(phone) :- tall(george).\ntall(alice) :- big(phone).\nwet(phone) :- tall(alice).\nhot :- wet(phone).\ncold :- hot.\nhot :- cold.\nfriend(bob,dave) :- hot.\nsunny :- friend(bob,dave).\nparent(carol,carol) :- sunny.\nenemy(frank,frank) :- hot, parent(frank,george), happy(eve).\nfriend(bob,dave) :- big(car).\nenemy(eve,dave) :- likes(eve,ball).\nfriend(carol,george) :- tall(alice), hungry(frank), cold.\nsibling(carol,eve) :- sibling(carol,frank), enemy(bob,carol), parent(bob,george).\nsibling(dave,eve) :- sad(eve).\nparent(eve,alice) :- owns(alice,apple), cold.\nparent(alice,carol) :- cold, small(ball), hungry(eve).\nhungry(frank) :- sunny, sad(dave), tall(carol).\ntall(bob).\nfriend(frank,alice).\nowns(frank,book).\nwet(apple).\nlikes(alice,car).\nlikes(dave,alice).\nparent(alice,george).\nlikes(eve,dave).\nsmall(pencil).\nowns(eve,car).\nlikes(carol,bob).\nfriend(carol,alice).\nowns(alice,apple).\nhot.\nsad(dave).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf bob is tall, then george is tall.\nIf george is tall, then phone is big.\nIf phone is big, then alice is tall.\nIf alice is tall, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf bob is a friend of dave, then it is sunny.\nIf it is sunny, then carol is a parent of carol.\nIf it is hot and frank is a parent of george and eve is happy, then frank is an enemy of frank.\nIf car is big, then bob is a friend of dave.\nIf eve likes ball, then eve is an enemy of dave.\nIf alice is tall and frank is hungry and it is cold, then carol is a friend of george.\nIf carol is a sibling of frank and bob is an enemy of carol and bob is a parent of george, then carol is a sibling of eve.\nIf eve is sad, then dave is a sibling of eve.\nIf alice owns apple and it is cold, then eve is a parent of alice.\nIf it is cold and ball is small and eve is hungry, then alice is a parent of carol.\nIf it is sunny and dave is sad and carol is tall, then frank is hungry.\n\nAnd the following facts:\nbob is tall.\nfrank is a friend of alice.\nfrank owns book.\napple is wet.\nalice likes car.\ndave likes alice.\nalice is a parent of george.\neve likes dave.\npencil is small.\neve owns car.\ncarol likes bob.\ncarol is a friend of alice.\nalice owns apple.\nit is hot.\ndave is sad.\nbob owns ball.\n\nQUESTION:\nIs alice is an enemy of eve true?\nFirst, think through each premise step by step. \n Answer exactly YES or NO, and in `rationale` briefly explain your reasoning",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "tall(george) :- tall(bob).\nbig(phone) :- tall(george).\ntall(alice) :- big(phone).\nwet(phone) :- tall(alice).\nhot :- wet(phone).\ncold :- hot.\nhot :- cold.\nfriend(bob,dave) :- hot.\nsunny :- friend(bob,dave).\nparent(carol,carol) :- sunny.\nenemy(frank,frank) :- hot, parent(frank,george), happy(eve).\nfriend(bob,dave) :- big(car).\nenemy(eve,dave) :- likes(eve,ball).\nfriend(carol,george) :- tall(alice), hungry(frank), cold.\nsibling(carol,eve) :- sibling(carol,frank), enemy(bob,carol), parent(bob,george).\nsibling(dave,eve) :- sad(eve).\nparent(eve,alice) :- owns(alice,apple), cold.\nparent(alice,carol) :- cold, small(ball), hungry(eve).\nhungry(frank) :- sunny, sad(dave), tall(carol).\ntall(bob).\nfriend(frank,alice).\nowns(frank,book).\nwet(apple).\nlikes(alice,car).\nlikes(dave,alice).\nparent(alice,george).\nlikes(eve,dave).\nsmall(pencil).\nowns(eve,car).\nlikes(carol,bob).\nfriend(carol,alice).\nowns(alice,apple).\nsad(dave).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf bob is tall, then george is tall.\nIf george is tall, then phone is big.\nIf phone is big, then alice is tall.\nIf alice is tall, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf bob is a friend of dave, then it is sunny.\nIf it is sunny, then carol is a parent of carol.\nIf it is hot and frank is a parent of george and eve is happy, then frank is an enemy of frank.\nIf car is big, then bob is a friend of dave.\nIf eve likes ball, then eve is an enemy of dave.\nIf alice is tall and frank is hungry and it is cold, then carol is a friend of george.\nIf carol is a sibling of frank and bob is an enemy of carol and bob is a parent of george, then carol is a sibling of eve.\nIf eve is sad, then dave is a sibling of eve.\nIf alice owns apple and it is cold, then eve is a parent of alice.\nIf it is cold and ball is small and eve is hungry, then alice is a parent of carol.\nIf it is sunny and dave is sad and carol is tall, then frank is hungry.\n\nAnd the following facts:\nbob is tall.\nfrank is a friend of alice.\nfrank owns book.\napple is wet.\nalice likes car.\ndave likes alice.\nalice is a parent of george.\neve likes dave.\npencil is small.\neve owns car.\ncarol likes bob.\ncarol is a friend of alice.\nalice owns apple.\nit is hot.\ndave is sad.\nbob owns ball.\n\nOBSERVATION: carol is a parent of carol is true.\n\nQUESTION:\nCould it is hot be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "YES",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": 10,
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "sad(dave).",
    "c": "tall(george) :- tall(bob).\nbig(phone) :- tall(george).\ntall(alice) :- big(phone).\nwet(phone) :- tall(alice).\nhot :- wet(phone).\ncold :- hot.\nhot :- cold.\nfriend(bob,dave) :- hot.\nsunny :- friend(bob,dave).\nparent(carol,carol) :- sunny.\nenemy(frank,frank) :- hot, parent(frank,george), happy(eve).\nfriend(bob,dave) :- big(car).\nenemy(eve,dave) :- likes(eve,ball).\nfriend(carol,george) :- tall(alice), hungry(frank), cold.\nsibling(carol,eve) :- sibling(carol,frank), enemy(bob,carol), parent(bob,george).\nsibling(dave,eve) :- sad(eve).\nparent(eve,alice) :- owns(alice,apple), cold.\nparent(alice,carol) :- cold, small(ball), hungry(eve).\nhungry(frank) :- sunny, sad(dave), tall(carol).\ntall(bob).\nfriend(frank,alice).\nowns(frank,book).\nwet(apple).\nlikes(alice,car).\nlikes(dave,alice).\nparent(alice,george).\nlikes(eve,dave).\nsmall(pencil).\nowns(eve,car).\nlikes(carol,bob).\nfriend(carol,alice).\nowns(alice,apple).\nhot.\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf bob is tall, then george is tall.\nIf george is tall, then phone is big.\nIf phone is big, then alice is tall.\nIf alice is tall, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf bob is a friend of dave, then it is sunny.\nIf it is sunny, then carol is a parent of carol.\nIf it is hot and frank is a parent of george and eve is happy, then frank is an enemy of frank.\nIf car is big, then bob is a friend of dave.\nIf eve likes ball, then eve is an enemy of dave.\nIf alice is tall and frank is hungry and it is cold, then carol is a friend of george.\nIf carol is a sibling of frank and bob is an enemy of carol and bob is a parent of george, then carol is a sibling of eve.\nIf eve is sad, then dave is a sibling of eve.\nIf alice owns apple and it is cold, then eve is a parent of alice.\nIf it is cold and ball is small and eve is hungry, then alice is a parent of carol.\nIf it is sunny and dave is sad and carol is tall, then frank is hungry.\n\nAnd the following facts:\nbob is tall.\nfrank is a friend of alice.\nfrank owns book.\napple is wet.\nalice likes car.\ndave likes alice.\nalice is a parent of george.\neve likes dave.\npencil is small.\neve owns car.\ncarol likes bob.\ncarol is a friend of alice.\nalice owns apple.\nit is hot.\ndave is sad.\nbob owns ball.\n\nOBSERVATION: carol is a parent of carol is true.\n\nQUESTION:\nCould dave is sad be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  },
  {
    "q": "owns(bob,ball).",
    "c": "tall(george) :- tall(bob).\nbig(phone) :- tall(george).\ntall(alice) :- big(phone).\nwet(phone) :- tall(alice).\nhot :- wet(phone).\ncold :- hot.\nhot :- cold.\nfriend(bob,dave) :- hot.\nsunny :- friend(bob,dave).\nparent(carol,carol) :- sunny.\nenemy(frank,frank) :- hot, parent(frank,george), happy(eve).\nfriend(bob,dave) :- big(car).\nenemy(eve,dave) :- likes(eve,ball).\nfriend(carol,george) :- tall(alice), hungry(frank), cold.\nsibling(carol,eve) :- sibling(carol,frank), enemy(bob,carol), parent(bob,george).\nsibling(dave,eve) :- sad(eve).\nparent(eve,alice) :- owns(alice,apple), cold.\nparent(alice,carol) :- cold, small(ball), hungry(eve).\nhungry(frank) :- sunny, sad(dave), tall(carol).\ntall(bob).\nfriend(frank,alice).\nowns(frank,book).\nwet(apple).\nlikes(alice,car).\nlikes(dave,alice).\nparent(alice,george).\nlikes(eve,dave).\nsmall(pencil).\nowns(eve,car).\nlikes(carol,bob).\nfriend(carol,alice).\nowns(alice,apple).\nhot.\nsad(dave).",
    "natural language": "You are given the following rules:\nIf bob is tall, then george is tall.\nIf george is tall, then phone is big.\nIf phone is big, then alice is tall.\nIf alice is tall, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf bob is a friend of dave, then it is sunny.\nIf it is sunny, then carol is a parent of carol.\nIf it is hot and frank is a parent of george and eve is happy, then frank is an enemy of frank.\nIf car is big, then bob is a friend of dave.\nIf eve likes ball, then eve is an enemy of dave.\nIf alice is tall and frank is hungry and it is cold, then carol is a friend of george.\nIf carol is a sibling of frank and bob is an enemy of carol and bob is a parent of george, then carol is a sibling of eve.\nIf eve is sad, then dave is a sibling of eve.\nIf alice owns apple and it is cold, then eve is a parent of alice.\nIf it is cold and ball is small and eve is hungry, then alice is a parent of carol.\nIf it is sunny and dave is sad and carol is tall, then frank is hungry.\n\nAnd the following facts:\nbob is tall.\nfrank is a friend of alice.\nfrank owns book.\napple is wet.\nalice likes car.\ndave likes alice.\nalice is a parent of george.\neve likes dave.\npencil is small.\neve owns car.\ncarol likes bob.\ncarol is a friend of alice.\nalice owns apple.\nit is hot.\ndave is sad.\nbob owns ball.\n\nOBSERVATION: carol is a parent of carol is true.\n\nQUESTION:\nCould bob owns ball be true?\nFirst, think through each premise step by step.\nAnswer exactly YES or NO, and in `rationale` briefly explain your reasoning.",
    "t": "NO",
    "metadata": {
      "num_rules": 20,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 16,
      "depth": "not applicable",
      "reasoning_type": "abduction"
    }
  }
]