[
  {
    "q": "sunny.",
    "c": "sunny :- parent(frank,george).\nowns(carol,ball) :- likes(alice,phone), small(apple), happy(frank).\nowns(bob,pencil) :- sad(dave).\ndislikes(bob,car) :- owns(bob,book), friend(alice,frank).\nparent(frank,george).\nfriend(frank,carol).\ndislikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is a parent of george, then it is sunny.\nIf alice likes phone and apple is small and frank is happy, then carol owns ball.\nIf dave is sad, then bob owns pencil.\nIf bob owns book and alice is a friend of frank, then bob dislikes car.\n\nAnd the following facts:\nfrank is a parent of george.\nfrank is a friend of carol.\ndave dislikes apple.\n\nQUESTION:\nIs it is sunny true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,carol).",
    "c": "sunny :- parent(frank,george).\nowns(carol,ball) :- likes(alice,phone), small(apple), happy(frank).\nowns(bob,pencil) :- sad(dave).\ndislikes(bob,car) :- owns(bob,book), friend(alice,frank).\nparent(frank,george).\nfriend(frank,carol).\ndislikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is a parent of george, then it is sunny.\nIf alice likes phone and apple is small and frank is happy, then carol owns ball.\nIf dave is sad, then bob owns pencil.\nIf bob owns book and alice is a friend of frank, then bob dislikes car.\n\nAnd the following facts:\nfrank is a parent of george.\nfrank is a friend of carol.\ndave dislikes apple.\n\nQUESTION:\nIs frank is a friend of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,alice).",
    "c": "sunny :- parent(frank,george).\nowns(carol,ball) :- likes(alice,phone), small(apple), happy(frank).\nowns(bob,pencil) :- sad(dave).\ndislikes(bob,car) :- owns(bob,book), friend(alice,frank).\nparent(frank,george).\nfriend(frank,carol).\ndislikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is a parent of george, then it is sunny.\nIf alice likes phone and apple is small and frank is happy, then carol owns ball.\nIf dave is sad, then bob owns pencil.\nIf bob owns book and alice is a friend of frank, then bob dislikes car.\n\nAnd the following facts:\nfrank is a parent of george.\nfrank is a friend of carol.\ndave dislikes apple.\n\nQUESTION:\nIs george is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,ball).",
    "c": "sunny :- parent(frank,george).\nowns(carol,ball) :- likes(alice,phone), small(apple), happy(frank).\nowns(bob,pencil) :- sad(dave).\ndislikes(bob,car) :- owns(bob,book), friend(alice,frank).\nparent(frank,george).\nfriend(frank,carol).\ndislikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is a parent of george, then it is sunny.\nIf alice likes phone and apple is small and frank is happy, then carol owns ball.\nIf dave is sad, then bob owns pencil.\nIf bob owns book and alice is a friend of frank, then bob dislikes car.\n\nAnd the following facts:\nfrank is a parent of george.\nfrank is a friend of carol.\ndave dislikes apple.\n\nQUESTION:\nIs frank dislikes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,carol).",
    "c": "sunny :- parent(frank,george).\nowns(carol,ball) :- likes(alice,phone), small(apple), happy(frank).\nowns(bob,pencil) :- sad(dave).\ndislikes(bob,car) :- owns(bob,book), friend(alice,frank).\nparent(frank,george).\nfriend(frank,carol).\ndislikes(dave,apple).",
    "natural language": "You are given the following information:\nIf frank is a parent of george, then it is sunny.\nIf alice likes phone and apple is small and frank is happy, then carol owns ball.\nIf dave is sad, then bob owns pencil.\nIf bob owns book and alice is a friend of frank, then bob dislikes car.\n\nAnd the following facts:\nfrank is a parent of george.\nfrank is a friend of carol.\ndave dislikes apple.\n\nQUESTION:\nIs george is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,george).",
    "c": "sunny :- parent(frank,george).\nowns(carol,ball) :- likes(alice,phone), small(apple), happy(frank).\nowns(bob,pencil) :- sad(dave).\ndislikes(bob,car) :- owns(bob,book), friend(alice,frank).\nfriend(frank,carol).\ndislikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf frank is a parent of george, then it is sunny.\nIf alice likes phone and apple is small and frank is happy, then carol owns ball.\nIf dave is sad, then bob owns pencil.\nIf bob owns book and alice is a friend of frank, then bob dislikes car.\n\nAnd the following facts:\nfrank is a friend of carol.\ndave dislikes apple.\n\nQUESTION:\nCould frank is a parent of george explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "parent(frank,george)"
    }
  },
  {
    "q": "dislikes(dave,apple).",
    "c": "sunny :- parent(frank,george).\nowns(carol,ball) :- likes(alice,phone), small(apple), happy(frank).\nowns(bob,pencil) :- sad(dave).\ndislikes(bob,car) :- owns(bob,book), friend(alice,frank).\nfriend(frank,carol).\ndislikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf frank is a parent of george, then it is sunny.\nIf alice likes phone and apple is small and frank is happy, then carol owns ball.\nIf dave is sad, then bob owns pencil.\nIf bob owns book and alice is a friend of frank, then bob dislikes car.\n\nAnd the following facts:\nfrank is a friend of carol.\ndave dislikes apple.\n\nQUESTION:\nCould dave dislikes apple explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "dislikes(dave,apple)"
    }
  },
  {
    "q": "friend(frank,carol).",
    "c": "sunny :- parent(frank,george).\nowns(carol,ball) :- likes(alice,phone), small(apple), happy(frank).\nowns(bob,pencil) :- sad(dave).\ndislikes(bob,car) :- owns(bob,book), friend(alice,frank).\nfriend(frank,carol).\ndislikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf frank is a parent of george, then it is sunny.\nIf alice likes phone and apple is small and frank is happy, then carol owns ball.\nIf dave is sad, then bob owns pencil.\nIf bob owns book and alice is a friend of frank, then bob dislikes car.\n\nAnd the following facts:\nfrank is a friend of carol.\ndave dislikes apple.\n\nQUESTION:\nCould frank is a friend of carol explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "friend(frank,carol)"
    }
  },
  {
    "q": "sibling(bob,dave).",
    "c": "sad(eve) :- sibling(bob,dave).\nfriend(george,eve) :- friend(eve,george).\ndislikes(eve,car) :- sad(eve), sad(eve), happy(alice).\nfriend(george,carol) :- big(pencil).\nsibling(bob,dave).\ndislikes(alice,car).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf bob is a sibling of dave, then eve is sad.\nIf eve is a friend of george, then george is a friend of eve.\nIf eve is sad and eve is sad and alice is happy, then eve dislikes car.\nIf pencil is big, then george is a friend of carol.\n\nAnd the following facts:\nbob is a sibling of dave.\nalice dislikes car.\neve dislikes apple.\n\nQUESTION:\nIs bob is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,apple).",
    "c": "sad(eve) :- sibling(bob,dave).\nfriend(george,eve) :- friend(eve,george).\ndislikes(eve,car) :- sad(eve), sad(eve), happy(alice).\nfriend(george,carol) :- big(pencil).\nsibling(bob,dave).\ndislikes(alice,car).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf bob is a sibling of dave, then eve is sad.\nIf eve is a friend of george, then george is a friend of eve.\nIf eve is sad and eve is sad and alice is happy, then eve dislikes car.\nIf pencil is big, then george is a friend of carol.\n\nAnd the following facts:\nbob is a sibling of dave.\nalice dislikes car.\neve dislikes apple.\n\nQUESTION:\nIs eve dislikes apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(apple).",
    "c": "sad(eve) :- sibling(bob,dave).\nfriend(george,eve) :- friend(eve,george).\ndislikes(eve,car) :- sad(eve), sad(eve), happy(alice).\nfriend(george,carol) :- big(pencil).\nsibling(bob,dave).\ndislikes(alice,car).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf bob is a sibling of dave, then eve is sad.\nIf eve is a friend of george, then george is a friend of eve.\nIf eve is sad and eve is sad and alice is happy, then eve dislikes car.\nIf pencil is big, then george is a friend of carol.\n\nAnd the following facts:\nbob is a sibling of dave.\nalice dislikes car.\neve dislikes apple.\n\nQUESTION:\nIs apple is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,phone).",
    "c": "sad(eve) :- sibling(bob,dave).\nfriend(george,eve) :- friend(eve,george).\ndislikes(eve,car) :- sad(eve), sad(eve), happy(alice).\nfriend(george,carol) :- big(pencil).\nsibling(bob,dave).\ndislikes(alice,car).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf bob is a sibling of dave, then eve is sad.\nIf eve is a friend of george, then george is a friend of eve.\nIf eve is sad and eve is sad and alice is happy, then eve dislikes car.\nIf pencil is big, then george is a friend of carol.\n\nAnd the following facts:\nbob is a sibling of dave.\nalice dislikes car.\neve dislikes apple.\n\nQUESTION:\nIs alice dislikes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,carol).",
    "c": "sad(eve) :- sibling(bob,dave).\nfriend(george,eve) :- friend(eve,george).\ndislikes(eve,car) :- sad(eve), sad(eve), happy(alice).\nfriend(george,carol) :- big(pencil).\nsibling(bob,dave).\ndislikes(alice,car).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf bob is a sibling of dave, then eve is sad.\nIf eve is a friend of george, then george is a friend of eve.\nIf eve is sad and eve is sad and alice is happy, then eve dislikes car.\nIf pencil is big, then george is a friend of carol.\n\nAnd the following facts:\nbob is a sibling of dave.\nalice dislikes car.\neve dislikes apple.\n\nQUESTION:\nIs dave is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,dave).",
    "c": "sad(eve) :- sibling(bob,dave).\nfriend(george,eve) :- friend(eve,george).\ndislikes(eve,car) :- sad(eve), sad(eve), happy(alice).\nfriend(george,carol) :- big(pencil).\ndislikes(alice,car).\ndislikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of dave, then eve is sad.\nIf eve is a friend of george, then george is a friend of eve.\nIf eve is sad and eve is sad and alice is happy, then eve dislikes car.\nIf pencil is big, then george is a friend of carol.\n\nAnd the following facts:\nalice dislikes car.\neve dislikes apple.\n\nQUESTION:\nCould bob is a sibling of dave explain eve is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sad(eve)",
      "explanation": "sibling(bob,dave)"
    }
  },
  {
    "q": "dislikes(eve,apple).",
    "c": "sad(eve) :- sibling(bob,dave).\nfriend(george,eve) :- friend(eve,george).\ndislikes(eve,car) :- sad(eve), sad(eve), happy(alice).\nfriend(george,carol) :- big(pencil).\ndislikes(alice,car).\ndislikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of dave, then eve is sad.\nIf eve is a friend of george, then george is a friend of eve.\nIf eve is sad and eve is sad and alice is happy, then eve dislikes car.\nIf pencil is big, then george is a friend of carol.\n\nAnd the following facts:\nalice dislikes car.\neve dislikes apple.\n\nQUESTION:\nCould eve dislikes apple explain eve is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sad(eve)",
      "non_explanation": "dislikes(eve,apple)"
    }
  },
  {
    "q": "dislikes(alice,car).",
    "c": "sad(eve) :- sibling(bob,dave).\nfriend(george,eve) :- friend(eve,george).\ndislikes(eve,car) :- sad(eve), sad(eve), happy(alice).\nfriend(george,carol) :- big(pencil).\ndislikes(alice,car).\ndislikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of dave, then eve is sad.\nIf eve is a friend of george, then george is a friend of eve.\nIf eve is sad and eve is sad and alice is happy, then eve dislikes car.\nIf pencil is big, then george is a friend of carol.\n\nAnd the following facts:\nalice dislikes car.\neve dislikes apple.\n\nQUESTION:\nCould alice dislikes car explain eve is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sad(eve)",
      "non_explanation": "dislikes(alice,car)"
    }
  },
  {
    "q": "enemy(frank,eve).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nenemy(alice,eve).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nIs frank is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,pencil).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nenemy(alice,eve).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nIs carol owns pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nenemy(alice,eve).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nIs dave is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,ball).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nenemy(alice,eve).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nIs george owns ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,book).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nenemy(alice,eve).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following information:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\nalice is an enemy of eve.\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nIs george owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,eve).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nCould alice is an enemy of eve explain george owns phone?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,phone)",
      "explanation": "enemy(alice,eve)"
    }
  },
  {
    "q": "enemy(alice,eve).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nCould alice is an enemy of eve explain eve is an enemy of alice?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(eve,alice)",
      "explanation": "enemy(alice,eve)"
    }
  },
  {
    "q": "owns(carol,pencil).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nCould carol owns pencil explain george owns phone?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,phone)",
      "non_explanation": "owns(carol,pencil)"
    }
  },
  {
    "q": "enemy(frank,eve).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nCould frank is an enemy of eve explain eve is an enemy of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(eve,alice)",
      "non_explanation": "enemy(frank,eve)"
    }
  },
  {
    "q": "owns(carol,pencil).",
    "c": "enemy(carol,frank) :- enemy(alice,eve).\ncold :- enemy(carol,frank).\nowns(george,phone) :- cold.\ntall(dave) :- owns(george,phone).\nenemy(eve,alice) :- tall(dave).\nowns(carol,pencil).\nenemy(frank,eve).",
    "natural language": "You are given the following rules:\nIf alice is an enemy of eve, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is cold.\nIf it is cold, then george owns phone.\nIf george owns phone, then dave is tall.\nIf dave is tall, then eve is an enemy of alice.\n\nAnd the following facts:\ncarol owns pencil.\nfrank is an enemy of eve.\n\nQUESTION:\nCould carol owns pencil explain eve is an enemy of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(eve,alice)",
      "non_explanation": "owns(carol,pencil)"
    }
  },
  {
    "q": "owns(eve,pencil).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nsmall(phone).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\nphone is small.\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nIs eve owns pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nsmall(phone).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\nphone is small.\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nIs carol is a sibling of george true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,ball).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nsmall(phone).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\nphone is small.\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nIs george owns ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,eve).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nsmall(phone).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\nphone is small.\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nIs bob is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,book).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nsmall(phone).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\nphone is small.\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nIs eve likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(phone).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nCould phone is small explain apple is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "wet(apple)",
      "explanation": "small(phone)"
    }
  },
  {
    "q": "small(phone).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nCould phone is small explain bob owns car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(bob,car)",
      "explanation": "small(phone)"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nCould carol is a sibling of george explain apple is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "wet(apple)",
      "non_explanation": "sibling(carol,george)"
    }
  },
  {
    "q": "owns(eve,pencil).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nCould eve owns pencil explain apple is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "wet(apple)",
      "non_explanation": "owns(eve,pencil)"
    }
  },
  {
    "q": "owns(eve,pencil).",
    "c": "sibling(george,dave) :- small(phone).\nwet(apple) :- sibling(george,dave).\nsmall(car) :- wet(apple).\nowns(bob,car) :- small(car).\nlikes(alice,apple) :- owns(bob,car).\nowns(eve,pencil).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is small, then george is a sibling of dave.\nIf george is a sibling of dave, then apple is wet.\nIf apple is wet, then car is small.\nIf car is small, then bob owns car.\nIf bob owns car, then alice likes apple.\n\nAnd the following facts:\neve owns pencil.\ncarol is a sibling of george.\n\nQUESTION:\nCould eve owns pencil explain bob owns car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(bob,car)",
      "non_explanation": "owns(eve,pencil)"
    }
  },
  {
    "q": "owns(carol,phone).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nenemy(frank,alice).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank is an enemy of alice.\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nIs carol owns phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,carol).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nenemy(frank,alice).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank is an enemy of alice.\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nIs alice is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,phone).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nenemy(frank,alice).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank is an enemy of alice.\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nIs dave dislikes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nenemy(frank,alice).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank is an enemy of alice.\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nIs bob is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,car).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nenemy(frank,alice).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following information:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank is an enemy of alice.\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nIs carol owns car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,alice).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following rules:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nCould frank is an enemy of alice explain carol owns phone?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "owns(carol,phone)",
      "explanation": "enemy(frank,alice)"
    }
  },
  {
    "q": "enemy(eve,frank).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following rules:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nCould eve is an enemy of frank explain carol owns phone?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "owns(carol,phone)",
      "non_explanation": "enemy(eve,frank)"
    }
  },
  {
    "q": "sad(alice).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following rules:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nCould alice is sad explain carol owns phone?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "owns(carol,phone)",
      "non_explanation": "sad(alice)"
    }
  },
  {
    "q": "dislikes(eve,ball).",
    "c": "owns(carol,phone) :- enemy(frank,alice).\ncold :- cold, dislikes(eve,ball).\ncold :- small(book), wet(phone), hungry(dave).\nwet(apple) :- friend(dave,eve), sad(alice), tall(bob).\nowns(frank,phone).\ndislikes(eve,ball).\nsad(alice).\nenemy(eve,frank).\nenemy(alice,carol).",
    "natural language": "You are given the following rules:\nIf frank is an enemy of alice, then carol owns phone.\nIf it is cold and eve dislikes ball, then it is cold.\nIf book is small and phone is wet and dave is hungry, then it is cold.\nIf dave is a friend of eve and alice is sad and bob is tall, then apple is wet.\n\nAnd the following facts:\nfrank owns phone.\neve dislikes ball.\nalice is sad.\neve is an enemy of frank.\nalice is an enemy of carol.\n\nQUESTION:\nCould eve dislikes ball explain carol owns phone?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "owns(carol,phone)",
      "non_explanation": "dislikes(eve,ball)"
    }
  },
  {
    "q": "small(pencil).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nsmall(pencil).\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\npencil is small.\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nIs pencil is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nsmall(pencil).\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\npencil is small.\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nIs george is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,apple).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nsmall(pencil).\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\npencil is small.\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nIs george likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,book).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nsmall(pencil).\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\npencil is small.\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nIs alice dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,car).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nsmall(pencil).\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\npencil is small.\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nIs george dislikes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nCould pencil is small explain bob is a sibling of bob?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(bob,bob)",
      "explanation": "small(pencil)"
    }
  },
  {
    "q": "likes(carol,book).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nCould carol likes book explain bob is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(bob,bob)",
      "non_explanation": "likes(carol,book)"
    }
  },
  {
    "q": "likes(frank,apple).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nCould frank likes apple explain bob is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(bob,bob)",
      "non_explanation": "likes(frank,apple)"
    }
  },
  {
    "q": "likes(bob,book).",
    "c": "sibling(bob,bob) :- small(pencil).\nlikes(frank,ball) :- sibling(carol,frank), hot, dislikes(bob,car).\nlikes(bob,book) :- happy(dave).\nhot :- cold.\nlikes(frank,apple).\nlikes(bob,book).\nlikes(carol,book).\nsibling(george,bob).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf pencil is small, then bob is a sibling of bob.\nIf carol is a sibling of frank and it is hot and bob dislikes car, then frank likes ball.\nIf dave is happy, then bob likes book.\nIf it is cold, then it is hot.\n\nAnd the following facts:\nfrank likes apple.\nbob likes book.\ncarol likes book.\ngeorge is a sibling of bob.\ndave is a sibling of eve.\n\nQUESTION:\nCould bob likes book explain bob is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(bob,bob)",
      "non_explanation": "likes(bob,book)"
    }
  },
  {
    "q": "dislikes(frank,phone).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nhappy(george).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following information:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\ngeorge is happy.\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nIs frank dislikes phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(george).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nhappy(george).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following information:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\ngeorge is happy.\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nIs george is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,ball).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nhappy(george).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following information:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\ngeorge is happy.\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nIs carol dislikes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,eve).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nhappy(george).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following information:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\ngeorge is happy.\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nIs dave is a parent of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,car).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nhappy(george).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following information:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\ngeorge is happy.\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nIs frank likes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(george).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following rules:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nCould george is happy explain bob is a parent of frank?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,frank)",
      "explanation": "happy(george)"
    }
  },
  {
    "q": "likes(alice,ball).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following rules:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nCould alice likes ball explain bob is a parent of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,frank)",
      "non_explanation": "likes(alice,ball)"
    }
  },
  {
    "q": "dislikes(carol,pencil).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following rules:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nCould carol dislikes pencil explain bob is a parent of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,frank)",
      "non_explanation": "dislikes(carol,pencil)"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "parent(bob,frank) :- happy(george).\nhot :- parent(bob,frank).\nlikes(eve,ball) :- hot.\ndislikes(frank,phone) :- likes(eve,ball).\nsmall(apple) :- dislikes(frank,phone).\nlikes(frank,pencil).\nparent(george,frank).\ndislikes(carol,pencil).\nlikes(alice,ball).\nhot.",
    "natural language": "You are given the following rules:\nIf george is happy, then bob is a parent of frank.\nIf bob is a parent of frank, then it is hot.\nIf it is hot, then eve likes ball.\nIf eve likes ball, then frank dislikes phone.\nIf frank dislikes phone, then apple is small.\n\nAnd the following facts:\nfrank likes pencil.\ngeorge is a parent of frank.\ncarol dislikes pencil.\nalice likes ball.\nit is hot.\n\nQUESTION:\nCould george is a parent of frank explain bob is a parent of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,frank)",
      "non_explanation": "parent(george,frank)"
    }
  },
  {
    "q": "tall(dave).",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\nsunny.\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\nit is sunny.\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs dave is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,alice).",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\nsunny.\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\nit is sunny.\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs george is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,car).",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\nsunny.\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\nit is sunny.\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs alice dislikes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,car).",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\nsunny.\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\nit is sunny.\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs dave dislikes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,alice).",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\nsunny.\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\nit is sunny.\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs bob is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nCould it is sunny explain dave is an enemy of bob?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "enemy(dave,bob)",
      "explanation": "sunny"
    }
  },
  {
    "q": "dislikes(bob,apple).",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nCould bob dislikes apple explain dave is an enemy of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "enemy(dave,bob)",
      "non_explanation": "dislikes(bob,apple)"
    }
  },
  {
    "q": "enemy(frank,george).",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nCould frank is an enemy of george explain dave is an enemy of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "enemy(dave,bob)",
      "non_explanation": "enemy(frank,george)"
    }
  },
  {
    "q": "dislikes(frank,car).",
    "c": "dislikes(alice,pencil) :- sunny.\nenemy(alice,dave) :- dislikes(alice,pencil).\ntall(bob) :- enemy(alice,dave).\nenemy(dave,bob) :- tall(bob).\nsmall(phone) :- enemy(dave,bob).\ntall(dave).\ndislikes(bob,apple).\ndislikes(frank,car).\nenemy(frank,george).\nenemy(george,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then alice dislikes pencil.\nIf alice dislikes pencil, then alice is an enemy of dave.\nIf alice is an enemy of dave, then bob is tall.\nIf bob is tall, then dave is an enemy of bob.\nIf dave is an enemy of bob, then phone is small.\n\nAnd the following facts:\ndave is tall.\nbob dislikes apple.\nfrank dislikes car.\nfrank is an enemy of george.\ngeorge is an enemy of alice.\n\nQUESTION:\nCould frank dislikes car explain dave is an enemy of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "enemy(dave,bob)",
      "non_explanation": "dislikes(frank,car)"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(carol,bob).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\ncarol is a sibling of bob.\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nIs carol likes apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(carol,bob).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\ncarol is a sibling of bob.\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nIs alice is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,pencil).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(carol,bob).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\ncarol is a sibling of bob.\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nIs carol likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,car).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(carol,bob).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\ncarol is a sibling of bob.\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nIs george likes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,alice).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(carol,bob).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\ncarol is a sibling of bob.\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nIs frank is a sibling of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,bob).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nCould carol is a sibling of bob explain it is hot?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "explanation": "sibling(carol,bob)"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nCould eve is a parent of dave explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "parent(eve,dave)"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nCould frank is hungry explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "hungry(frank)"
    }
  },
  {
    "q": "parent(frank,carol).",
    "c": "hot :- sibling(carol,bob).\nhungry(george) :- owns(alice,pencil), sibling(george,carol).\nhungry(alice) :- parent(alice,eve).\nsad(bob) :- sad(eve), likes(dave,phone).\nsibling(alice,bob).\nparent(eve,dave).\nhungry(frank).\nparent(frank,carol).\nhungry(alice).\nparent(alice,carol).\nlikes(carol,apple).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol is a sibling of bob, then it is hot.\nIf alice owns pencil and george is a sibling of carol, then george is hungry.\nIf alice is a parent of eve, then alice is hungry.\nIf eve is sad and dave likes phone, then bob is sad.\n\nAnd the following facts:\nalice is a sibling of bob.\neve is a parent of dave.\nfrank is hungry.\nfrank is a parent of carol.\nalice is hungry.\nalice is a parent of carol.\ncarol likes apple.\ncarol is sad.\n\nQUESTION:\nCould frank is a parent of carol explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "parent(frank,carol)"
    }
  },
  {
    "q": "owns(eve,pencil).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\ntall(carol).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).\ntall(carol).",
    "natural language": "You are given the following information:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\ncarol is tall.\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\ncarol is tall.\n\nQUESTION:\nIs eve owns pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(carol).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\ntall(carol).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).\ntall(carol).",
    "natural language": "You are given the following information:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\ncarol is tall.\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\ncarol is tall.\n\nQUESTION:\nIs carol is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,book).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\ntall(carol).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).\ntall(carol).",
    "natural language": "You are given the following information:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\ncarol is tall.\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\ncarol is tall.\n\nQUESTION:\nIs dave dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,book).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\ntall(carol).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).\ntall(carol).",
    "natural language": "You are given the following information:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\ncarol is tall.\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\ncarol is tall.\n\nQUESTION:\nIs eve dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,frank).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\ntall(carol).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).\ntall(carol).",
    "natural language": "You are given the following information:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\ncarol is tall.\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\ncarol is tall.\n\nQUESTION:\nIs george is a friend of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(carol).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).",
    "natural language": "You are given the following rules:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\n\nQUESTION:\nCould carol is tall explain frank is a friend of alice?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,alice)",
      "explanation": "tall(carol)"
    }
  },
  {
    "q": "friend(eve,george).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).",
    "natural language": "You are given the following rules:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\n\nQUESTION:\nCould eve is a friend of george explain frank is a friend of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,alice)",
      "non_explanation": "friend(eve,george)"
    }
  },
  {
    "q": "friend(frank,eve).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).",
    "natural language": "You are given the following rules:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\n\nQUESTION:\nCould frank is a friend of eve explain frank is a friend of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,alice)",
      "non_explanation": "friend(frank,eve)"
    }
  },
  {
    "q": "owns(eve,pencil).",
    "c": "friend(frank,alice) :- tall(carol).\nhappy(frank) :- hungry(frank), sunny, dislikes(carol,book).\nhappy(frank) :- owns(frank,ball), hungry(george), small(car).\nbig(car) :- big(car).\nfriend(eve,george).\nfriend(frank,eve).\nowns(eve,pencil).\nfriend(bob,alice).\ndislikes(eve,ball).\nfriend(dave,alice).\nfriend(dave,george).",
    "natural language": "You are given the following rules:\nIf carol is tall, then frank is a friend of alice.\nIf frank is hungry and it is sunny and carol dislikes book, then frank is happy.\nIf frank owns ball and george is hungry and car is small, then frank is happy.\nIf car is big, then car is big.\n\nAnd the following facts:\neve is a friend of george.\nfrank is a friend of eve.\neve owns pencil.\nbob is a friend of alice.\neve dislikes ball.\ndave is a friend of alice.\ndave is a friend of george.\n\nQUESTION:\nCould eve owns pencil explain frank is a friend of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,alice)",
      "non_explanation": "owns(eve,pencil)"
    }
  },
  {
    "q": "big(book).",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nsunny.\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nit is sunny.\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nIs book is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,phone).",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nsunny.\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nit is sunny.\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nIs carol owns phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,pencil).",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nsunny.\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nit is sunny.\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nIs bob owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,book).",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nsunny.\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nit is sunny.\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nIs eve owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,apple).",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nsunny.\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nit is sunny.\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nIs alice owns apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following rules:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nCould it is sunny explain car is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "small(car)",
      "explanation": "sunny"
    }
  },
  {
    "q": "tall(eve).",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following rules:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nCould eve is tall explain car is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "small(car)",
      "non_explanation": "tall(eve)"
    }
  },
  {
    "q": "big(apple).",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following rules:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nCould apple is big explain car is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "small(car)",
      "non_explanation": "big(apple)"
    }
  },
  {
    "q": "tall(carol).",
    "c": "small(car) :- sunny.\nowns(carol,phone) :- small(car).\nsunny :- owns(carol,phone).\nbig(apple) :- sunny.\ntall(eve) :- big(apple).\nowns(frank,apple).\nbig(apple).\ntall(carol).\ntall(eve).\nbig(book).\nowns(dave,car).\nowns(frank,pencil).\nowns(frank,book).",
    "natural language": "You are given the following rules:\nIf it is sunny, then car is small.\nIf car is small, then carol owns phone.\nIf carol owns phone, then it is sunny.\nIf it is sunny, then apple is big.\nIf apple is big, then eve is tall.\n\nAnd the following facts:\nfrank owns apple.\napple is big.\ncarol is tall.\neve is tall.\nbook is big.\ndave owns car.\nfrank owns pencil.\nfrank owns book.\n\nQUESTION:\nCould carol is tall explain car is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "small(car)",
      "non_explanation": "tall(carol)"
    }
  },
  {
    "q": "owns(carol,pencil).",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nsunny.\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nit is sunny.\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nIs carol owns pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,car).",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nsunny.\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nit is sunny.\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nIs alice likes car true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,book).",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nsunny.\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nit is sunny.\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nIs carol likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,phone).",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nsunny.\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nit is sunny.\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nIs george owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,apple).",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nsunny.\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following information:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nit is sunny.\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nIs eve owns apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following rules:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nCould it is sunny explain george owns car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,car)",
      "explanation": "sunny"
    }
  },
  {
    "q": "owns(carol,pencil).",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following rules:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nCould carol owns pencil explain george owns car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,car)",
      "non_explanation": "owns(carol,pencil)"
    }
  },
  {
    "q": "likes(alice,car).",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following rules:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nCould alice likes car explain george owns car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,car)",
      "non_explanation": "likes(alice,car)"
    }
  },
  {
    "q": "owns(alice,pencil).",
    "c": "owns(george,car) :- sunny.\nhot :- owns(george,car).\nbig(pencil) :- hot.\nlikes(alice,pencil) :- big(pencil).\nowns(alice,car) :- likes(alice,pencil).\nowns(alice,pencil).\nlikes(alice,car).\nowns(carol,pencil).\nowns(frank,apple).\nowns(alice,car).\nlikes(bob,pencil).\nbig(book).\nowns(dave,phone).",
    "natural language": "You are given the following rules:\nIf it is sunny, then george owns car.\nIf george owns car, then it is hot.\nIf it is hot, then pencil is big.\nIf pencil is big, then alice likes pencil.\nIf alice likes pencil, then alice owns car.\n\nAnd the following facts:\nalice owns pencil.\nalice likes car.\ncarol owns pencil.\nfrank owns apple.\nalice owns car.\nbob likes pencil.\nbook is big.\ndave owns phone.\n\nQUESTION:\nCould alice owns pencil explain george owns car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,car)",
      "non_explanation": "owns(alice,pencil)"
    }
  },
  {
    "q": "owns(alice,phone).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\ntall(frank).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nfrank is tall.\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nIs alice owns phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\ntall(frank).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nfrank is tall.\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nIs bob owns phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,book).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\ntall(frank).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nfrank is tall.\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nIs eve owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\ntall(frank).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nfrank is tall.\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nIs frank is a parent of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,bob).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\ntall(frank).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following information:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nfrank is tall.\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nIs alice is a parent of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following rules:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nCould frank is tall explain pencil is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(pencil)",
      "explanation": "tall(frank)"
    }
  },
  {
    "q": "parent(bob,alice).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following rules:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nCould bob is a parent of alice explain pencil is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(pencil)",
      "non_explanation": "parent(bob,alice)"
    }
  },
  {
    "q": "owns(alice,ball).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following rules:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nCould alice owns ball explain pencil is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(pencil)",
      "non_explanation": "owns(alice,ball)"
    }
  },
  {
    "q": "big(ball).",
    "c": "big(pencil) :- tall(frank).\nhungry(dave) :- hungry(eve), owns(alice,car).\nbig(ball) :- parent(alice,george), big(book), sunny.\nhungry(bob) :- happy(eve), hungry(dave), owns(dave,car).\nowns(alice,pencil).\nowns(alice,ball).\nbig(ball).\nparent(bob,alice).\nhappy(eve).\nowns(bob,phone).\nowns(alice,phone).\nowns(frank,pencil).\nowns(eve,ball).\ntall(carol).\nparent(george,dave).",
    "natural language": "You are given the following rules:\nIf frank is tall, then pencil is big.\nIf eve is hungry and alice owns car, then dave is hungry.\nIf alice is a parent of george and book is big and it is sunny, then ball is big.\nIf eve is happy and dave is hungry and dave owns car, then bob is hungry.\n\nAnd the following facts:\nalice owns pencil.\nalice owns ball.\nball is big.\nbob is a parent of alice.\neve is happy.\nbob owns phone.\nalice owns phone.\nfrank owns pencil.\neve owns ball.\ncarol is tall.\ngeorge is a parent of dave.\n\nQUESTION:\nCould ball is big explain pencil is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(pencil)",
      "non_explanation": "big(ball)"
    }
  },
  {
    "q": "enemy(alice,eve).",
    "c": "hot :- hot.\nsad(dave) :- enemy(frank,bob), hot, hot.\nparent(alice,alice) :- likes(frank,book), sunny.\nparent(george,frank) :- parent(eve,dave), sunny, happy(frank).\nhot.\nenemy(alice,eve).\nenemy(eve,alice).\nparent(carol,eve).\nparent(carol,dave).\nenemy(frank,george).\nlikes(carol,ball).\nlikes(dave,phone).\nlikes(carol,pencil).\nparent(bob,frank).\nparent(george,eve).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf frank is an enemy of bob and it is hot and it is hot, then dave is sad.\nIf frank likes book and it is sunny, then alice is a parent of alice.\nIf eve is a parent of dave and it is sunny and frank is happy, then george is a parent of frank.\n\nAnd the following facts:\nit is hot.\nalice is an enemy of eve.\neve is an enemy of alice.\ncarol is a parent of eve.\ncarol is a parent of dave.\nfrank is an enemy of george.\ncarol likes ball.\ndave likes phone.\ncarol likes pencil.\nbob is a parent of frank.\ngeorge is a parent of eve.\nbob likes ball.\n\nQUESTION:\nIs alice is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,phone).",
    "c": "hot :- hot.\nsad(dave) :- enemy(frank,bob), hot, hot.\nparent(alice,alice) :- likes(frank,book), sunny.\nparent(george,frank) :- parent(eve,dave), sunny, happy(frank).\nhot.\nenemy(alice,eve).\nenemy(eve,alice).\nparent(carol,eve).\nparent(carol,dave).\nenemy(frank,george).\nlikes(carol,ball).\nlikes(dave,phone).\nlikes(carol,pencil).\nparent(bob,frank).\nparent(george,eve).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf frank is an enemy of bob and it is hot and it is hot, then dave is sad.\nIf frank likes book and it is sunny, then alice is a parent of alice.\nIf eve is a parent of dave and it is sunny and frank is happy, then george is a parent of frank.\n\nAnd the following facts:\nit is hot.\nalice is an enemy of eve.\neve is an enemy of alice.\ncarol is a parent of eve.\ncarol is a parent of dave.\nfrank is an enemy of george.\ncarol likes ball.\ndave likes phone.\ncarol likes pencil.\nbob is a parent of frank.\ngeorge is a parent of eve.\nbob likes ball.\n\nQUESTION:\nIs dave likes phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,book).",
    "c": "hot :- hot.\nsad(dave) :- enemy(frank,bob), hot, hot.\nparent(alice,alice) :- likes(frank,book), sunny.\nparent(george,frank) :- parent(eve,dave), sunny, happy(frank).\nhot.\nenemy(alice,eve).\nenemy(eve,alice).\nparent(carol,eve).\nparent(carol,dave).\nenemy(frank,george).\nlikes(carol,ball).\nlikes(dave,phone).\nlikes(carol,pencil).\nparent(bob,frank).\nparent(george,eve).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf frank is an enemy of bob and it is hot and it is hot, then dave is sad.\nIf frank likes book and it is sunny, then alice is a parent of alice.\nIf eve is a parent of dave and it is sunny and frank is happy, then george is a parent of frank.\n\nAnd the following facts:\nit is hot.\nalice is an enemy of eve.\neve is an enemy of alice.\ncarol is a parent of eve.\ncarol is a parent of dave.\nfrank is an enemy of george.\ncarol likes ball.\ndave likes phone.\ncarol likes pencil.\nbob is a parent of frank.\ngeorge is a parent of eve.\nbob likes ball.\n\nQUESTION:\nIs frank likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,apple).",
    "c": "hot :- hot.\nsad(dave) :- enemy(frank,bob), hot, hot.\nparent(alice,alice) :- likes(frank,book), sunny.\nparent(george,frank) :- parent(eve,dave), sunny, happy(frank).\nhot.\nenemy(alice,eve).\nenemy(eve,alice).\nparent(carol,eve).\nparent(carol,dave).\nenemy(frank,george).\nlikes(carol,ball).\nlikes(dave,phone).\nlikes(carol,pencil).\nparent(bob,frank).\nparent(george,eve).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf frank is an enemy of bob and it is hot and it is hot, then dave is sad.\nIf frank likes book and it is sunny, then alice is a parent of alice.\nIf eve is a parent of dave and it is sunny and frank is happy, then george is a parent of frank.\n\nAnd the following facts:\nit is hot.\nalice is an enemy of eve.\neve is an enemy of alice.\ncarol is a parent of eve.\ncarol is a parent of dave.\nfrank is an enemy of george.\ncarol likes ball.\ndave likes phone.\ncarol likes pencil.\nbob is a parent of frank.\ngeorge is a parent of eve.\nbob likes ball.\n\nQUESTION:\nIs alice likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,book).",
    "c": "hot :- hot.\nsad(dave) :- enemy(frank,bob), hot, hot.\nparent(alice,alice) :- likes(frank,book), sunny.\nparent(george,frank) :- parent(eve,dave), sunny, happy(frank).\nhot.\nenemy(alice,eve).\nenemy(eve,alice).\nparent(carol,eve).\nparent(carol,dave).\nenemy(frank,george).\nlikes(carol,ball).\nlikes(dave,phone).\nlikes(carol,pencil).\nparent(bob,frank).\nparent(george,eve).\nlikes(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf frank is an enemy of bob and it is hot and it is hot, then dave is sad.\nIf frank likes book and it is sunny, then alice is a parent of alice.\nIf eve is a parent of dave and it is sunny and frank is happy, then george is a parent of frank.\n\nAnd the following facts:\nit is hot.\nalice is an enemy of eve.\neve is an enemy of alice.\ncarol is a parent of eve.\ncarol is a parent of dave.\nfrank is an enemy of george.\ncarol likes ball.\ndave likes phone.\ncarol likes pencil.\nbob is a parent of frank.\ngeorge is a parent of eve.\nbob likes ball.\n\nQUESTION:\nIs alice likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(frank,george).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\nfrank is a sibling of george.\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nIs dave is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(frank,george).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\nfrank is a sibling of george.\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nIs car is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(frank,george).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\nfrank is a sibling of george.\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(frank,george).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\nfrank is a sibling of george.\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nIs pencil is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,george).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(frank,george).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\nfrank is a sibling of george.\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nIs alice is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,george).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nCould frank is a sibling of george explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "sibling(frank,george)"
    }
  },
  {
    "q": "sibling(george,alice).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nCould george is a sibling of alice explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "sibling(george,alice)"
    }
  },
  {
    "q": "sibling(frank,dave).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nCould frank is a sibling of dave explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "sibling(frank,dave)"
    }
  },
  {
    "q": "sibling(dave,frank).",
    "c": "small(car) :- sibling(frank,george).\nsunny :- small(car).\nwet(book) :- sunny.\nhappy(bob) :- wet(book).\nwet(car) :- happy(bob).\nsibling(dave,frank).\nsibling(frank,dave).\nsibling(alice,frank).\nsibling(george,alice).\nsibling(frank,carol).\nsibling(dave,alice).\nsibling(bob,alice).\nhappy(dave).\nsibling(carol,alice).\nsibling(bob,frank).\nhappy(carol).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of george, then car is small.\nIf car is small, then it is sunny.\nIf it is sunny, then book is wet.\nIf book is wet, then bob is happy.\nIf bob is happy, then car is wet.\n\nAnd the following facts:\ndave is a sibling of frank.\nfrank is a sibling of dave.\nalice is a sibling of frank.\ngeorge is a sibling of alice.\nfrank is a sibling of carol.\ndave is a sibling of alice.\nbob is a sibling of alice.\ndave is happy.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ncarol is happy.\n\nQUESTION:\nCould dave is a sibling of frank explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "sibling(dave,frank)"
    }
  },
  {
    "q": "sibling(alice,frank).",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\ncold.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\nit is cold.\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs alice is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,ball).",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\ncold.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\nit is cold.\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs frank owns ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,pencil).",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\ncold.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\nit is cold.\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs frank owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,pencil).",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\ncold.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\nit is cold.\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs eve owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,dave).",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\ncold.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\nit is cold.\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nIs alice is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nCould it is cold explain carol is a sibling of alice?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,alice)",
      "explanation": "cold"
    }
  },
  {
    "q": "enemy(frank,eve).",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nCould frank is an enemy of eve explain carol is a sibling of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,alice)",
      "non_explanation": "enemy(frank,eve)"
    }
  },
  {
    "q": "owns(bob,book).",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nCould bob owns book explain carol is a sibling of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,alice)",
      "non_explanation": "owns(bob,book)"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "sibling(carol,alice) :- cold.\nowns(frank,ball) :- sibling(carol,alice).\nsmall(ball) :- owns(frank,ball).\nhot :- small(ball).\nenemy(alice,carol) :- hot.\nenemy(dave,frank).\nenemy(frank,eve).\nenemy(dave,eve).\nowns(bob,book).\nowns(dave,phone).\nenemy(alice,carol).\nenemy(frank,bob).\nsmall(ball).\nsibling(alice,frank).\nenemy(carol,bob).\nenemy(george,frank).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a sibling of alice.\nIf carol is a sibling of alice, then frank owns ball.\nIf frank owns ball, then ball is small.\nIf ball is small, then it is hot.\nIf it is hot, then alice is an enemy of carol.\n\nAnd the following facts:\ndave is an enemy of frank.\nfrank is an enemy of eve.\ndave is an enemy of eve.\nbob owns book.\ndave owns phone.\nalice is an enemy of carol.\nfrank is an enemy of bob.\nball is small.\nalice is a sibling of frank.\ncarol is an enemy of bob.\ngeorge is an enemy of frank.\n\nQUESTION:\nCould dave is an enemy of frank explain carol is a sibling of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,alice)",
      "non_explanation": "enemy(dave,frank)"
    }
  },
  {
    "q": "friend(george,bob).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,eve).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of eve.\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nIs george is a friend of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,eve).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,eve).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of eve.\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nIs george is a friend of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,apple).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,eve).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of eve.\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nIs eve owns apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,dave).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,eve).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of eve.\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nIs alice is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,alice).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,eve).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of eve.\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nIs frank is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,eve).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following rules:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nCould george is a friend of eve explain bob is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "explanation": "friend(george,eve)"
    }
  },
  {
    "q": "sibling(carol,alice).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following rules:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nCould carol is a sibling of alice explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "sibling(carol,alice)"
    }
  },
  {
    "q": "friend(george,bob).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following rules:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nCould george is a friend of bob explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "friend(george,bob)"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "tall(bob) :- friend(george,eve).\nowns(frank,phone) :- sibling(george,george), owns(alice,pencil).\nowns(dave,car) :- big(pencil).\nsad(alice) :- enemy(bob,alice), dislikes(alice,book).\nfriend(george,bob).\nsibling(carol,alice).\nenemy(dave,eve).\nbig(apple).\nfriend(george,frank).\nsibling(frank,george).\nowns(alice,car).\nfriend(alice,eve).\nsibling(bob,carol).\nsad(eve).\nowns(george,book).\ndislikes(bob,car).\nfriend(bob,eve).\ndislikes(george,car).",
    "natural language": "You are given the following rules:\nIf george is a friend of eve, then bob is tall.\nIf george is a sibling of george and alice owns pencil, then frank owns phone.\nIf pencil is big, then dave owns car.\nIf bob is an enemy of alice and alice dislikes book, then alice is sad.\n\nAnd the following facts:\ngeorge is a friend of bob.\ncarol is a sibling of alice.\ndave is an enemy of eve.\napple is big.\ngeorge is a friend of frank.\nfrank is a sibling of george.\nalice owns car.\nalice is a friend of eve.\nbob is a sibling of carol.\neve is sad.\ngeorge owns book.\nbob dislikes car.\nbob is a friend of eve.\ngeorge dislikes car.\n\nQUESTION:\nCould dave is an enemy of eve explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "enemy(dave,eve)"
    }
  },
  {
    "q": "wet(book).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\nowns(bob,phone).\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following information:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\nbob owns phone.\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nIs book is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\nowns(bob,phone).\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following information:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\nbob owns phone.\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nIs pencil is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,carol).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\nowns(bob,phone).\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following information:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\nbob owns phone.\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nIs george is a sibling of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,apple).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\nowns(bob,phone).\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following information:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\nbob owns phone.\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nIs bob likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,book).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\nowns(bob,phone).\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following information:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\nbob owns phone.\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nIs alice likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following rules:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nCould bob owns phone explain book is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "wet(book)",
      "explanation": "owns(bob,phone)"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following rules:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nCould pencil is wet explain book is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "wet(book)",
      "non_explanation": "wet(pencil)"
    }
  },
  {
    "q": "parent(george,alice).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following rules:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nCould george is a parent of alice explain book is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "wet(book)",
      "non_explanation": "parent(george,alice)"
    }
  },
  {
    "q": "sibling(carol,frank).",
    "c": "wet(book) :- owns(bob,phone).\nbig(apple) :- likes(carol,book).\nhappy(dave) :- tall(carol), likes(george,book).\nsibling(carol,george) :- parent(bob,carol), hot.\ntall(eve).\nparent(george,alice).\nwet(pencil).\nsibling(carol,frank).\nlikes(carol,apple).\nowns(bob,apple).\nowns(dave,ball).\nparent(george,eve).\nowns(eve,ball).\nsibling(dave,carol).\nlikes(frank,car).\nlikes(george,ball).\nlikes(eve,car).\nbig(ball).",
    "natural language": "You are given the following rules:\nIf bob owns phone, then book is wet.\nIf carol likes book, then apple is big.\nIf carol is tall and george likes book, then dave is happy.\nIf bob is a parent of carol and it is hot, then carol is a sibling of george.\n\nAnd the following facts:\neve is tall.\ngeorge is a parent of alice.\npencil is wet.\ncarol is a sibling of frank.\ncarol likes apple.\nbob owns apple.\ndave owns ball.\ngeorge is a parent of eve.\neve owns ball.\ndave is a sibling of carol.\nfrank likes car.\ngeorge likes ball.\neve likes car.\nball is big.\n\nQUESTION:\nCould carol is a sibling of frank explain book is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "wet(book)",
      "non_explanation": "sibling(carol,frank)"
    }
  },
  {
    "q": "happy(eve).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nbig(pencil).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following information:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\npencil is big.\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nIs eve is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,eve).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nbig(pencil).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following information:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\npencil is big.\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nIs alice is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,frank).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nbig(pencil).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following information:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\npencil is big.\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nIs george is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,dave).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nbig(pencil).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following information:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\npencil is big.\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nIs bob is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,bob).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nbig(pencil).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following information:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\npencil is big.\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nIs carol is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(pencil).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following rules:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nCould pencil is big explain carol is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(carol)",
      "explanation": "big(pencil)"
    }
  },
  {
    "q": "sibling(george,eve).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following rules:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nCould george is a sibling of eve explain carol is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(carol)",
      "non_explanation": "sibling(george,eve)"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following rules:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nCould carol is a sibling of george explain carol is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(carol)",
      "non_explanation": "sibling(carol,george)"
    }
  },
  {
    "q": "wet(apple).",
    "c": "sibling(eve,eve) :- big(pencil).\nhappy(carol) :- sibling(eve,eve).\nhappy(eve) :- happy(carol).\nwet(phone) :- happy(eve).\nhot :- wet(phone).\nwet(apple).\nsibling(frank,bob).\nsibling(carol,george).\nsibling(george,eve).\nbig(car).\nsibling(bob,carol).\nsibling(eve,alice).\nhappy(eve).\nsibling(alice,dave).\nwet(pencil).\nsibling(dave,carol).\nhappy(alice).\nsibling(alice,eve).\nbig(apple).",
    "natural language": "You are given the following rules:\nIf pencil is big, then eve is a sibling of eve.\nIf eve is a sibling of eve, then carol is happy.\nIf carol is happy, then eve is happy.\nIf eve is happy, then phone is wet.\nIf phone is wet, then it is hot.\n\nAnd the following facts:\napple is wet.\nfrank is a sibling of bob.\ncarol is a sibling of george.\ngeorge is a sibling of eve.\ncar is big.\nbob is a sibling of carol.\neve is a sibling of alice.\neve is happy.\nalice is a sibling of dave.\npencil is wet.\ndave is a sibling of carol.\nalice is happy.\nalice is a sibling of eve.\napple is big.\n\nQUESTION:\nCould apple is wet explain carol is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(carol)",
      "non_explanation": "wet(apple)"
    }
  },
  {
    "q": "owns(bob,apple).",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nhappy(dave).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\ndave is happy.\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nIs bob owns apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nhappy(dave).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\ndave is happy.\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nIs dave is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,alice).",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nhappy(dave).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\ndave is happy.\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nIs dave is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,carol).",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nhappy(dave).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\ndave is happy.\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nIs bob is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,book).",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nhappy(dave).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following information:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\ndave is happy.\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nIs dave owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following rules:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nCould dave is happy explain frank is a friend of carol?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,carol)",
      "explanation": "happy(dave)"
    }
  },
  {
    "q": "owns(frank,apple).",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following rules:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nCould frank owns apple explain frank is a friend of carol?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,carol)",
      "non_explanation": "owns(frank,apple)"
    }
  },
  {
    "q": "owns(george,ball).",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following rules:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nCould george owns ball explain frank is a friend of carol?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,carol)",
      "non_explanation": "owns(george,ball)"
    }
  },
  {
    "q": "cold.",
    "c": "friend(frank,carol) :- happy(dave).\nsad(carol) :- friend(frank,carol).\nsunny :- sad(carol).\nowns(carol,pencil) :- sunny.\ncold :- owns(carol,pencil).\nfriend(alice,george).\nowns(frank,apple).\ncold.\nowns(george,ball).\nowns(carol,ball).\nowns(eve,phone).\nowns(alice,ball).\nowns(frank,ball).\nowns(bob,apple).\nowns(george,book).\nfriend(frank,bob).\nfriend(dave,carol).\nfriend(frank,dave).\nfriend(alice,carol).",
    "natural language": "You are given the following rules:\nIf dave is happy, then frank is a friend of carol.\nIf frank is a friend of carol, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then carol owns pencil.\nIf carol owns pencil, then it is cold.\n\nAnd the following facts:\nalice is a friend of george.\nfrank owns apple.\nit is cold.\ngeorge owns ball.\ncarol owns ball.\neve owns phone.\nalice owns ball.\nfrank owns ball.\nbob owns apple.\ngeorge owns book.\nfrank is a friend of bob.\ndave is a friend of carol.\nfrank is a friend of dave.\nalice is a friend of carol.\n\nQUESTION:\nCould it is cold explain frank is a friend of carol?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 5,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,carol)",
      "non_explanation": "cold"
    }
  },
  {
    "q": "big(car).",
    "c": "big(car) :- happy(dave).\nparent(frank,alice) :- dislikes(eve,car).\nparent(frank,dave) :- enemy(george,eve).\ndislikes(bob,apple) :- dislikes(alice,phone).\nhot :- sad(dave), happy(alice), hot.\nlikes(george,phone) :- parent(carol,george), big(ball), parent(carol,george).\nparent(george,alice) :- dislikes(george,pencil), friend(frank,dave), small(phone).\ndislikes(frank,book) :- owns(carol,pencil), dislikes(eve,phone), wet(ball).\nhot :- sad(bob), hot.\nwet(pencil) :- cold, happy(bob), sibling(bob,george).\nwet(ball) :- tall(frank).\nlikes(eve,pencil) :- tall(frank).\ncold :- owns(george,apple), big(pencil), wet(phone).\nsunny :- tall(frank), happy(eve), sunny.\nhappy(dave).\nowns(dave,car).\nparent(george,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then car is big.\nIf eve dislikes car, then frank is a parent of alice.\nIf george is an enemy of eve, then frank is a parent of dave.\nIf alice dislikes phone, then bob dislikes apple.\nIf dave is sad and alice is happy and it is hot, then it is hot.\nIf carol is a parent of george and ball is big and carol is a parent of george, then george likes phone.\nIf george dislikes pencil and frank is a friend of dave and phone is small, then george is a parent of alice.\nIf carol owns pencil and eve dislikes phone and ball is wet, then frank dislikes book.\nIf bob is sad and it is hot, then it is hot.\nIf it is cold and bob is happy and bob is a sibling of george, then pencil is wet.\nIf frank is tall, then ball is wet.\nIf frank is tall, then eve likes pencil.\nIf george owns apple and pencil is big and phone is wet, then it is cold.\nIf frank is tall and eve is happy and it is sunny, then it is sunny.\n\nAnd the following facts:\ndave is happy.\ndave owns car.\ngeorge is a parent of bob.\n\nQUESTION:\nIs car is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "big(car) :- happy(dave).\nparent(frank,alice) :- dislikes(eve,car).\nparent(frank,dave) :- enemy(george,eve).\ndislikes(bob,apple) :- dislikes(alice,phone).\nhot :- sad(dave), happy(alice), hot.\nlikes(george,phone) :- parent(carol,george), big(ball), parent(carol,george).\nparent(george,alice) :- dislikes(george,pencil), friend(frank,dave), small(phone).\ndislikes(frank,book) :- owns(carol,pencil), dislikes(eve,phone), wet(ball).\nhot :- sad(bob), hot.\nwet(pencil) :- cold, happy(bob), sibling(bob,george).\nwet(ball) :- tall(frank).\nlikes(eve,pencil) :- tall(frank).\ncold :- owns(george,apple), big(pencil), wet(phone).\nsunny :- tall(frank), happy(eve), sunny.\nhappy(dave).\nowns(dave,car).\nparent(george,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then car is big.\nIf eve dislikes car, then frank is a parent of alice.\nIf george is an enemy of eve, then frank is a parent of dave.\nIf alice dislikes phone, then bob dislikes apple.\nIf dave is sad and alice is happy and it is hot, then it is hot.\nIf carol is a parent of george and ball is big and carol is a parent of george, then george likes phone.\nIf george dislikes pencil and frank is a friend of dave and phone is small, then george is a parent of alice.\nIf carol owns pencil and eve dislikes phone and ball is wet, then frank dislikes book.\nIf bob is sad and it is hot, then it is hot.\nIf it is cold and bob is happy and bob is a sibling of george, then pencil is wet.\nIf frank is tall, then ball is wet.\nIf frank is tall, then eve likes pencil.\nIf george owns apple and pencil is big and phone is wet, then it is cold.\nIf frank is tall and eve is happy and it is sunny, then it is sunny.\n\nAnd the following facts:\ndave is happy.\ndave owns car.\ngeorge is a parent of bob.\n\nQUESTION:\nIs dave is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,alice).",
    "c": "big(car) :- happy(dave).\nparent(frank,alice) :- dislikes(eve,car).\nparent(frank,dave) :- enemy(george,eve).\ndislikes(bob,apple) :- dislikes(alice,phone).\nhot :- sad(dave), happy(alice), hot.\nlikes(george,phone) :- parent(carol,george), big(ball), parent(carol,george).\nparent(george,alice) :- dislikes(george,pencil), friend(frank,dave), small(phone).\ndislikes(frank,book) :- owns(carol,pencil), dislikes(eve,phone), wet(ball).\nhot :- sad(bob), hot.\nwet(pencil) :- cold, happy(bob), sibling(bob,george).\nwet(ball) :- tall(frank).\nlikes(eve,pencil) :- tall(frank).\ncold :- owns(george,apple), big(pencil), wet(phone).\nsunny :- tall(frank), happy(eve), sunny.\nhappy(dave).\nowns(dave,car).\nparent(george,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then car is big.\nIf eve dislikes car, then frank is a parent of alice.\nIf george is an enemy of eve, then frank is a parent of dave.\nIf alice dislikes phone, then bob dislikes apple.\nIf dave is sad and alice is happy and it is hot, then it is hot.\nIf carol is a parent of george and ball is big and carol is a parent of george, then george likes phone.\nIf george dislikes pencil and frank is a friend of dave and phone is small, then george is a parent of alice.\nIf carol owns pencil and eve dislikes phone and ball is wet, then frank dislikes book.\nIf bob is sad and it is hot, then it is hot.\nIf it is cold and bob is happy and bob is a sibling of george, then pencil is wet.\nIf frank is tall, then ball is wet.\nIf frank is tall, then eve likes pencil.\nIf george owns apple and pencil is big and phone is wet, then it is cold.\nIf frank is tall and eve is happy and it is sunny, then it is sunny.\n\nAnd the following facts:\ndave is happy.\ndave owns car.\ngeorge is a parent of bob.\n\nQUESTION:\nIs carol is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,bob).",
    "c": "big(car) :- happy(dave).\nparent(frank,alice) :- dislikes(eve,car).\nparent(frank,dave) :- enemy(george,eve).\ndislikes(bob,apple) :- dislikes(alice,phone).\nhot :- sad(dave), happy(alice), hot.\nlikes(george,phone) :- parent(carol,george), big(ball), parent(carol,george).\nparent(george,alice) :- dislikes(george,pencil), friend(frank,dave), small(phone).\ndislikes(frank,book) :- owns(carol,pencil), dislikes(eve,phone), wet(ball).\nhot :- sad(bob), hot.\nwet(pencil) :- cold, happy(bob), sibling(bob,george).\nwet(ball) :- tall(frank).\nlikes(eve,pencil) :- tall(frank).\ncold :- owns(george,apple), big(pencil), wet(phone).\nsunny :- tall(frank), happy(eve), sunny.\nhappy(dave).\nowns(dave,car).\nparent(george,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then car is big.\nIf eve dislikes car, then frank is a parent of alice.\nIf george is an enemy of eve, then frank is a parent of dave.\nIf alice dislikes phone, then bob dislikes apple.\nIf dave is sad and alice is happy and it is hot, then it is hot.\nIf carol is a parent of george and ball is big and carol is a parent of george, then george likes phone.\nIf george dislikes pencil and frank is a friend of dave and phone is small, then george is a parent of alice.\nIf carol owns pencil and eve dislikes phone and ball is wet, then frank dislikes book.\nIf bob is sad and it is hot, then it is hot.\nIf it is cold and bob is happy and bob is a sibling of george, then pencil is wet.\nIf frank is tall, then ball is wet.\nIf frank is tall, then eve likes pencil.\nIf george owns apple and pencil is big and phone is wet, then it is cold.\nIf frank is tall and eve is happy and it is sunny, then it is sunny.\n\nAnd the following facts:\ndave is happy.\ndave owns car.\ngeorge is a parent of bob.\n\nQUESTION:\nIs carol is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(book).",
    "c": "big(car) :- happy(dave).\nparent(frank,alice) :- dislikes(eve,car).\nparent(frank,dave) :- enemy(george,eve).\ndislikes(bob,apple) :- dislikes(alice,phone).\nhot :- sad(dave), happy(alice), hot.\nlikes(george,phone) :- parent(carol,george), big(ball), parent(carol,george).\nparent(george,alice) :- dislikes(george,pencil), friend(frank,dave), small(phone).\ndislikes(frank,book) :- owns(carol,pencil), dislikes(eve,phone), wet(ball).\nhot :- sad(bob), hot.\nwet(pencil) :- cold, happy(bob), sibling(bob,george).\nwet(ball) :- tall(frank).\nlikes(eve,pencil) :- tall(frank).\ncold :- owns(george,apple), big(pencil), wet(phone).\nsunny :- tall(frank), happy(eve), sunny.\nhappy(dave).\nowns(dave,car).\nparent(george,bob).",
    "natural language": "You are given the following information:\nIf dave is happy, then car is big.\nIf eve dislikes car, then frank is a parent of alice.\nIf george is an enemy of eve, then frank is a parent of dave.\nIf alice dislikes phone, then bob dislikes apple.\nIf dave is sad and alice is happy and it is hot, then it is hot.\nIf carol is a parent of george and ball is big and carol is a parent of george, then george likes phone.\nIf george dislikes pencil and frank is a friend of dave and phone is small, then george is a parent of alice.\nIf carol owns pencil and eve dislikes phone and ball is wet, then frank dislikes book.\nIf bob is sad and it is hot, then it is hot.\nIf it is cold and bob is happy and bob is a sibling of george, then pencil is wet.\nIf frank is tall, then ball is wet.\nIf frank is tall, then eve likes pencil.\nIf george owns apple and pencil is big and phone is wet, then it is cold.\nIf frank is tall and eve is happy and it is sunny, then it is sunny.\n\nAnd the following facts:\ndave is happy.\ndave owns car.\ngeorge is a parent of bob.\n\nQUESTION:\nIs book is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "big(car) :- happy(dave).\nparent(frank,alice) :- dislikes(eve,car).\nparent(frank,dave) :- enemy(george,eve).\ndislikes(bob,apple) :- dislikes(alice,phone).\nhot :- sad(dave), happy(alice), hot.\nlikes(george,phone) :- parent(carol,george), big(ball), parent(carol,george).\nparent(george,alice) :- dislikes(george,pencil), friend(frank,dave), small(phone).\ndislikes(frank,book) :- owns(carol,pencil), dislikes(eve,phone), wet(ball).\nhot :- sad(bob), hot.\nwet(pencil) :- cold, happy(bob), sibling(bob,george).\nwet(ball) :- tall(frank).\nlikes(eve,pencil) :- tall(frank).\ncold :- owns(george,apple), big(pencil), wet(phone).\nsunny :- tall(frank), happy(eve), sunny.\nowns(dave,car).\nparent(george,bob).",
    "natural language": "You are given the following rules:\nIf dave is happy, then car is big.\nIf eve dislikes car, then frank is a parent of alice.\nIf george is an enemy of eve, then frank is a parent of dave.\nIf alice dislikes phone, then bob dislikes apple.\nIf dave is sad and alice is happy and it is hot, then it is hot.\nIf carol is a parent of george and ball is big and carol is a parent of george, then george likes phone.\nIf george dislikes pencil and frank is a friend of dave and phone is small, then george is a parent of alice.\nIf carol owns pencil and eve dislikes phone and ball is wet, then frank dislikes book.\nIf bob is sad and it is hot, then it is hot.\nIf it is cold and bob is happy and bob is a sibling of george, then pencil is wet.\nIf frank is tall, then ball is wet.\nIf frank is tall, then eve likes pencil.\nIf george owns apple and pencil is big and phone is wet, then it is cold.\nIf frank is tall and eve is happy and it is sunny, then it is sunny.\n\nAnd the following facts:\ndave owns car.\ngeorge is a parent of bob.\n\nQUESTION:\nCould dave is happy explain car is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(car)",
      "explanation": "happy(dave)"
    }
  },
  {
    "q": "owns(dave,car).",
    "c": "big(car) :- happy(dave).\nparent(frank,alice) :- dislikes(eve,car).\nparent(frank,dave) :- enemy(george,eve).\ndislikes(bob,apple) :- dislikes(alice,phone).\nhot :- sad(dave), happy(alice), hot.\nlikes(george,phone) :- parent(carol,george), big(ball), parent(carol,george).\nparent(george,alice) :- dislikes(george,pencil), friend(frank,dave), small(phone).\ndislikes(frank,book) :- owns(carol,pencil), dislikes(eve,phone), wet(ball).\nhot :- sad(bob), hot.\nwet(pencil) :- cold, happy(bob), sibling(bob,george).\nwet(ball) :- tall(frank).\nlikes(eve,pencil) :- tall(frank).\ncold :- owns(george,apple), big(pencil), wet(phone).\nsunny :- tall(frank), happy(eve), sunny.\nowns(dave,car).\nparent(george,bob).",
    "natural language": "You are given the following rules:\nIf dave is happy, then car is big.\nIf eve dislikes car, then frank is a parent of alice.\nIf george is an enemy of eve, then frank is a parent of dave.\nIf alice dislikes phone, then bob dislikes apple.\nIf dave is sad and alice is happy and it is hot, then it is hot.\nIf carol is a parent of george and ball is big and carol is a parent of george, then george likes phone.\nIf george dislikes pencil and frank is a friend of dave and phone is small, then george is a parent of alice.\nIf carol owns pencil and eve dislikes phone and ball is wet, then frank dislikes book.\nIf bob is sad and it is hot, then it is hot.\nIf it is cold and bob is happy and bob is a sibling of george, then pencil is wet.\nIf frank is tall, then ball is wet.\nIf frank is tall, then eve likes pencil.\nIf george owns apple and pencil is big and phone is wet, then it is cold.\nIf frank is tall and eve is happy and it is sunny, then it is sunny.\n\nAnd the following facts:\ndave owns car.\ngeorge is a parent of bob.\n\nQUESTION:\nCould dave owns car explain car is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(car)",
      "non_explanation": "owns(dave,car)"
    }
  },
  {
    "q": "parent(george,bob).",
    "c": "big(car) :- happy(dave).\nparent(frank,alice) :- dislikes(eve,car).\nparent(frank,dave) :- enemy(george,eve).\ndislikes(bob,apple) :- dislikes(alice,phone).\nhot :- sad(dave), happy(alice), hot.\nlikes(george,phone) :- parent(carol,george), big(ball), parent(carol,george).\nparent(george,alice) :- dislikes(george,pencil), friend(frank,dave), small(phone).\ndislikes(frank,book) :- owns(carol,pencil), dislikes(eve,phone), wet(ball).\nhot :- sad(bob), hot.\nwet(pencil) :- cold, happy(bob), sibling(bob,george).\nwet(ball) :- tall(frank).\nlikes(eve,pencil) :- tall(frank).\ncold :- owns(george,apple), big(pencil), wet(phone).\nsunny :- tall(frank), happy(eve), sunny.\nowns(dave,car).\nparent(george,bob).",
    "natural language": "You are given the following rules:\nIf dave is happy, then car is big.\nIf eve dislikes car, then frank is a parent of alice.\nIf george is an enemy of eve, then frank is a parent of dave.\nIf alice dislikes phone, then bob dislikes apple.\nIf dave is sad and alice is happy and it is hot, then it is hot.\nIf carol is a parent of george and ball is big and carol is a parent of george, then george likes phone.\nIf george dislikes pencil and frank is a friend of dave and phone is small, then george is a parent of alice.\nIf carol owns pencil and eve dislikes phone and ball is wet, then frank dislikes book.\nIf bob is sad and it is hot, then it is hot.\nIf it is cold and bob is happy and bob is a sibling of george, then pencil is wet.\nIf frank is tall, then ball is wet.\nIf frank is tall, then eve likes pencil.\nIf george owns apple and pencil is big and phone is wet, then it is cold.\nIf frank is tall and eve is happy and it is sunny, then it is sunny.\n\nAnd the following facts:\ndave owns car.\ngeorge is a parent of bob.\n\nQUESTION:\nCould george is a parent of bob explain car is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(car)",
      "non_explanation": "parent(george,bob)"
    }
  },
  {
    "q": "sibling(eve,alice).",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nhot.\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\nit is hot.\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nIs eve is a sibling of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nhot.\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\nit is hot.\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nIs dave is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,book).",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nhot.\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\nit is hot.\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nIs dave dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,car).",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nhot.\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\nit is hot.\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nIs eve dislikes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,george).",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nhot.\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following information:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\nit is hot.\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nIs bob is an enemy of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nCould it is hot explain frank is a friend of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,eve)",
      "explanation": "hot"
    }
  },
  {
    "q": "hot.",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nCould it is hot explain it is cold?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "cold",
      "explanation": "hot"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nCould dave is an enemy of eve explain frank is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,eve)",
      "non_explanation": "enemy(dave,eve)"
    }
  },
  {
    "q": "sibling(eve,alice).",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nCould eve is a sibling of alice explain it is cold?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "cold",
      "non_explanation": "sibling(eve,alice)"
    }
  },
  {
    "q": "sibling(eve,alice).",
    "c": "cold :- hot.\nenemy(carol,alice) :- dislikes(bob,book), sad(bob), likes(alice,ball).\nfriend(frank,frank) :- friend(frank,carol), tall(bob), sibling(alice,eve).\nhot :- sibling(alice,bob).\nhot :- dislikes(dave,car), sad(bob).\nsad(bob) :- sunny.\ndislikes(carol,book) :- parent(bob,frank), hungry(eve).\nfriend(frank,eve) :- cold.\nsad(carol) :- likes(dave,phone).\nenemy(bob,carol) :- enemy(carol,alice), cold.\ndislikes(george,apple) :- sunny, likes(bob,ball).\nowns(alice,phone) :- parent(eve,eve), happy(frank).\nfriend(bob,george) :- parent(dave,eve), wet(pencil), sunny.\nowns(bob,apple) :- friend(eve,frank).\nsibling(eve,alice).\nenemy(dave,eve).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is cold.\nIf bob dislikes book and bob is sad and alice likes ball, then carol is an enemy of alice.\nIf frank is a friend of carol and bob is tall and alice is a sibling of eve, then frank is a friend of frank.\nIf alice is a sibling of bob, then it is hot.\nIf dave dislikes car and bob is sad, then it is hot.\nIf it is sunny, then bob is sad.\nIf bob is a parent of frank and eve is hungry, then carol dislikes book.\nIf it is cold, then frank is a friend of eve.\nIf dave likes phone, then carol is sad.\nIf carol is an enemy of alice and it is cold, then bob is an enemy of carol.\nIf it is sunny and bob likes ball, then george dislikes apple.\nIf eve is a parent of eve and frank is happy, then alice owns phone.\nIf dave is a parent of eve and pencil is wet and it is sunny, then bob is a friend of george.\nIf eve is a friend of frank, then bob owns apple.\n\nAnd the following facts:\neve is a sibling of alice.\ndave is an enemy of eve.\n\nQUESTION:\nCould eve is a sibling of alice explain frank is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,eve)",
      "non_explanation": "sibling(eve,alice)"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nenemy(dave,carol).\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\ndave is an enemy of carol.\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nIs pencil is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,dave).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nenemy(dave,carol).\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\ndave is an enemy of carol.\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nIs frank is a friend of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,phone).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nenemy(dave,carol).\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\ndave is an enemy of carol.\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nIs alice likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,phone).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nenemy(dave,carol).\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\ndave is an enemy of carol.\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nIs dave likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,carol).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nenemy(dave,carol).\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following information:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\ndave is an enemy of carol.\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nIs eve is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,carol).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nCould dave is an enemy of carol explain george is a parent of bob?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "parent(george,bob)",
      "explanation": "enemy(dave,carol)"
    }
  },
  {
    "q": "enemy(dave,carol).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nCould dave is an enemy of carol explain pencil is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "explanation": "enemy(dave,carol)"
    }
  },
  {
    "q": "parent(bob,eve).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nCould bob is a parent of eve explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "non_explanation": "parent(bob,eve)"
    }
  },
  {
    "q": "friend(frank,dave).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nCould frank is a friend of dave explain george is a parent of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "parent(george,bob)",
      "non_explanation": "friend(frank,dave)"
    }
  },
  {
    "q": "friend(frank,dave).",
    "c": "small(ball) :- enemy(dave,carol).\ntall(frank) :- small(ball).\nparent(george,bob) :- tall(frank).\nsad(frank) :- parent(george,bob).\nwet(pencil) :- sad(frank).\nwet(apple) :- likes(bob,ball), friend(alice,eve).\ntall(carol) :- enemy(carol,frank), big(phone).\nfriend(alice,dave) :- tall(carol).\nwet(book) :- tall(dave).\ntall(alice) :- owns(bob,apple), tall(carol), tall(george).\ntall(bob) :- tall(dave), big(apple), tall(george).\nfriend(carol,george) :- happy(bob), friend(bob,alice).\nparent(alice,frank) :- enemy(eve,dave), happy(carol).\nparent(frank,dave) :- enemy(eve,george), wet(ball), sunny.\nfriend(frank,dave).\nparent(bob,eve).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of carol, then ball is small.\nIf ball is small, then frank is tall.\nIf frank is tall, then george is a parent of bob.\nIf george is a parent of bob, then frank is sad.\nIf frank is sad, then pencil is wet.\nIf bob likes ball and alice is a friend of eve, then apple is wet.\nIf carol is an enemy of frank and phone is big, then carol is tall.\nIf carol is tall, then alice is a friend of dave.\nIf dave is tall, then book is wet.\nIf bob owns apple and carol is tall and george is tall, then alice is tall.\nIf dave is tall and apple is big and george is tall, then bob is tall.\nIf bob is happy and bob is a friend of alice, then carol is a friend of george.\nIf eve is an enemy of dave and carol is happy, then alice is a parent of frank.\nIf eve is an enemy of george and ball is wet and it is sunny, then frank is a parent of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\nbob is a parent of eve.\n\nQUESTION:\nCould frank is a friend of dave explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "non_explanation": "friend(frank,dave)"
    }
  },
  {
    "q": "enemy(bob,carol).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nenemy(bob,carol).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\nbob is an enemy of carol.\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nIs bob is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nenemy(bob,carol).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\nbob is an enemy of carol.\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nIs ball is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,pencil).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nenemy(bob,carol).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\nbob is an enemy of carol.\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nIs alice owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,dave).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nenemy(bob,carol).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\nbob is an enemy of carol.\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nIs carol is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nenemy(bob,carol).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following information:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\nbob is an enemy of carol.\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nIs it is cold true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,carol).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following rules:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nCould bob is an enemy of carol explain eve is a sibling of george?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,george)",
      "explanation": "enemy(bob,carol)"
    }
  },
  {
    "q": "enemy(bob,carol).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following rules:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nCould bob is an enemy of carol explain ball is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(ball)",
      "explanation": "enemy(bob,carol)"
    }
  },
  {
    "q": "owns(george,pencil).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following rules:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nCould george owns pencil explain ball is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(ball)",
      "non_explanation": "owns(george,pencil)"
    }
  },
  {
    "q": "owns(george,pencil).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following rules:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nCould george owns pencil explain eve is a sibling of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,george)",
      "non_explanation": "owns(george,pencil)"
    }
  },
  {
    "q": "parent(eve,frank).",
    "c": "big(ball) :- enemy(bob,carol).\nsmall(ball) :- big(ball).\nsibling(eve,george) :- small(ball).\nlikes(alice,apple) :- sibling(eve,george).\nlikes(george,apple) :- likes(alice,apple).\ncold :- dislikes(alice,apple), big(apple), sad(alice).\nhappy(carol) :- wet(ball), wet(ball), tall(bob).\nsad(alice) :- hungry(carol), happy(carol).\nhappy(frank) :- likes(bob,car), sunny.\nsibling(carol,eve) :- parent(george,alice), friend(bob,bob).\nowns(bob,phone) :- parent(frank,frank).\nsad(carol) :- tall(george), tall(alice).\nsibling(eve,frank) :- hot, likes(carol,pencil), friend(frank,george).\ncold :- friend(bob,frank).\nowns(george,pencil).\nparent(eve,frank).",
    "natural language": "You are given the following rules:\nIf bob is an enemy of carol, then ball is big.\nIf ball is big, then ball is small.\nIf ball is small, then eve is a sibling of george.\nIf eve is a sibling of george, then alice likes apple.\nIf alice likes apple, then george likes apple.\nIf alice dislikes apple and apple is big and alice is sad, then it is cold.\nIf ball is wet and ball is wet and bob is tall, then carol is happy.\nIf carol is hungry and carol is happy, then alice is sad.\nIf bob likes car and it is sunny, then frank is happy.\nIf george is a parent of alice and bob is a friend of bob, then carol is a sibling of eve.\nIf frank is a parent of frank, then bob owns phone.\nIf george is tall and alice is tall, then carol is sad.\nIf it is hot and carol likes pencil and frank is a friend of george, then eve is a sibling of frank.\nIf bob is a friend of frank, then it is cold.\n\nAnd the following facts:\ngeorge owns pencil.\neve is a parent of frank.\n\nQUESTION:\nCould eve is a parent of frank explain eve is a sibling of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,george)",
      "non_explanation": "parent(eve,frank)"
    }
  },
  {
    "q": "likes(eve,ball).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nsad(eve).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\neve is sad.\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nIs eve likes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(eve).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nsad(eve).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\neve is sad.\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nIs eve is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,frank).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nsad(eve).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\neve is sad.\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nIs eve is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,pencil).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nsad(eve).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\neve is sad.\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nIs george dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,pencil).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nsad(eve).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following information:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\neve is sad.\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nIs carol dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(eve).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following rules:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nCould eve is sad explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "sad(eve)"
    }
  },
  {
    "q": "sad(eve).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following rules:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nCould eve is sad explain eve likes ball?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "likes(eve,ball)",
      "explanation": "sad(eve)"
    }
  },
  {
    "q": "owns(dave,car).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following rules:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nCould dave owns car explain eve likes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "likes(eve,ball)",
      "non_explanation": "owns(dave,car)"
    }
  },
  {
    "q": "owns(dave,car).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following rules:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nCould dave owns car explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "owns(dave,car)"
    }
  },
  {
    "q": "dislikes(alice,pencil).",
    "c": "dislikes(alice,car) :- sad(eve).\ntall(bob) :- dislikes(alice,car).\nsunny :- tall(bob).\ntall(carol) :- sunny.\ncold :- tall(carol).\nsunny :- cold.\ncold :- sunny.\nlikes(eve,ball) :- cold.\ntall(alice) :- likes(eve,ball).\nfriend(eve,dave) :- tall(alice).\nlikes(dave,book) :- likes(dave,phone), likes(frank,pencil), sibling(george,george).\nenemy(alice,eve) :- dislikes(frank,book), friend(george,carol), hot.\nenemy(carol,eve) :- big(pencil), enemy(george,bob).\nlikes(george,book) :- owns(george,car).\nowns(dave,car).\ndislikes(alice,pencil).",
    "natural language": "You are given the following rules:\nIf eve is sad, then alice dislikes car.\nIf alice dislikes car, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then carol is tall.\nIf carol is tall, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then eve likes ball.\nIf eve likes ball, then alice is tall.\nIf alice is tall, then eve is a friend of dave.\nIf dave likes phone and frank likes pencil and george is a sibling of george, then dave likes book.\nIf frank dislikes book and george is a friend of carol and it is hot, then alice is an enemy of eve.\nIf pencil is big and george is an enemy of bob, then carol is an enemy of eve.\nIf george owns car, then george likes book.\n\nAnd the following facts:\ndave owns car.\nalice dislikes pencil.\n\nQUESTION:\nCould alice dislikes pencil explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "dislikes(alice,pencil)"
    }
  },
  {
    "q": "dislikes(dave,ball).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\ndislikes(alice,apple).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following information:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\nalice dislikes apple.\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nIs dave dislikes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,bob).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\ndislikes(alice,apple).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following information:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\nalice dislikes apple.\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nIs eve is a parent of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,alice).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\ndislikes(alice,apple).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following information:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\nalice dislikes apple.\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nIs carol is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,pencil).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\ndislikes(alice,apple).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following information:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\nalice dislikes apple.\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nIs bob likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,frank).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\ndislikes(alice,apple).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following information:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\nalice dislikes apple.\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nIs george is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,apple).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nCould alice dislikes apple explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "dislikes(alice,apple)"
    }
  },
  {
    "q": "dislikes(alice,apple).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nCould alice dislikes apple explain dave is a sibling of bob?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(dave,bob)",
      "explanation": "dislikes(alice,apple)"
    }
  },
  {
    "q": "parent(george,carol).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nCould george is a parent of carol explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "parent(george,carol)"
    }
  },
  {
    "q": "parent(george,carol).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nCould george is a parent of carol explain dave is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(dave,bob)",
      "non_explanation": "parent(george,carol)"
    }
  },
  {
    "q": "dislikes(dave,ball).",
    "c": "sunny :- dislikes(alice,apple).\nfriend(bob,frank) :- sunny.\nlikes(dave,book) :- friend(bob,frank).\nparent(eve,bob) :- likes(dave,book).\nsmall(phone) :- parent(eve,bob).\nhot :- small(phone).\nlikes(alice,book) :- hot.\nparent(dave,frank) :- likes(alice,book).\nhappy(frank) :- parent(dave,frank).\nsibling(dave,bob) :- happy(frank).\nhappy(alice) :- dislikes(dave,pencil), enemy(eve,alice), small(pencil).\nhappy(dave) :- likes(eve,car), cold.\nparent(bob,dave) :- small(book).\nhungry(bob) :- wet(phone), big(book).\nparent(george,carol).\ndislikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf alice dislikes apple, then it is sunny.\nIf it is sunny, then bob is a friend of frank.\nIf bob is a friend of frank, then dave likes book.\nIf dave likes book, then eve is a parent of bob.\nIf eve is a parent of bob, then phone is small.\nIf phone is small, then it is hot.\nIf it is hot, then alice likes book.\nIf alice likes book, then dave is a parent of frank.\nIf dave is a parent of frank, then frank is happy.\nIf frank is happy, then dave is a sibling of bob.\nIf dave dislikes pencil and eve is an enemy of alice and pencil is small, then alice is happy.\nIf eve likes car and it is cold, then dave is happy.\nIf book is small, then bob is a parent of dave.\nIf phone is wet and book is big, then bob is hungry.\n\nAnd the following facts:\ngeorge is a parent of carol.\ndave dislikes ball.\n\nQUESTION:\nCould dave dislikes ball explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "dislikes(dave,ball)"
    }
  },
  {
    "q": "dislikes(frank,car).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nsad(bob).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following information:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nbob is sad.\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nIs frank dislikes car true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,frank).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nsad(bob).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following information:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nbob is sad.\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nIs dave is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,pencil).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nsad(bob).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following information:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nbob is sad.\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nIs alice owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,dave).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nsad(bob).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following information:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nbob is sad.\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nIs eve is a friend of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,pencil).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nsad(bob).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following information:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nbob is sad.\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nIs carol dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(bob).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following rules:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nCould bob is sad explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "explanation": "sad(bob)"
    }
  },
  {
    "q": "sibling(dave,frank).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following rules:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nCould dave is a sibling of frank explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "non_explanation": "sibling(dave,frank)"
    }
  },
  {
    "q": "enemy(alice,frank).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following rules:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nCould alice is an enemy of frank explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "non_explanation": "enemy(alice,frank)"
    }
  },
  {
    "q": "likes(frank,ball).",
    "c": "dislikes(frank,car) :- sad(bob).\nhot :- tall(frank).\nhot :- dislikes(bob,apple), sibling(dave,frank), hot.\nlikes(bob,phone) :- likes(alice,book).\nlikes(dave,ball) :- enemy(eve,george), friend(bob,dave).\nwet(apple) :- wet(pencil).\nsunny :- sad(alice), owns(bob,book), dislikes(alice,car).\nlikes(frank,phone) :- likes(dave,book).\nsunny :- small(book), wet(phone).\nwet(ball) :- enemy(carol,bob), hungry(alice).\nfriend(bob,dave) :- friend(george,george), friend(alice,bob).\nsunny :- hungry(dave), sunny, hot.\ntall(eve) :- tall(dave).\nbig(car) :- sibling(bob,frank).\nenemy(alice,frank).\nlikes(frank,ball).\nsibling(dave,frank).\nenemy(alice,eve).\nlikes(carol,phone).",
    "natural language": "You are given the following rules:\nIf bob is sad, then frank dislikes car.\nIf frank is tall, then it is hot.\nIf bob dislikes apple and dave is a sibling of frank and it is hot, then it is hot.\nIf alice likes book, then bob likes phone.\nIf eve is an enemy of george and bob is a friend of dave, then dave likes ball.\nIf pencil is wet, then apple is wet.\nIf alice is sad and bob owns book and alice dislikes car, then it is sunny.\nIf dave likes book, then frank likes phone.\nIf book is small and phone is wet, then it is sunny.\nIf carol is an enemy of bob and alice is hungry, then ball is wet.\nIf george is a friend of george and alice is a friend of bob, then bob is a friend of dave.\nIf dave is hungry and it is sunny and it is hot, then it is sunny.\nIf dave is tall, then eve is tall.\nIf bob is a sibling of frank, then car is big.\n\nAnd the following facts:\nalice is an enemy of frank.\nfrank likes ball.\ndave is a sibling of frank.\nalice is an enemy of eve.\ncarol likes phone.\n\nQUESTION:\nCould frank likes ball explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "non_explanation": "likes(frank,ball)"
    }
  },
  {
    "q": "parent(eve,carol).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nhungry(alice).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nalice is hungry.\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nIs eve is a parent of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,alice).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nhungry(alice).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nalice is hungry.\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nIs frank is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nhungry(alice).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nalice is hungry.\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nIs carol is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,car).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nhungry(alice).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nalice is hungry.\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nIs carol likes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,frank).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nhungry(alice).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following information:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nalice is hungry.\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nIs george is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following rules:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nCould alice is hungry explain carol likes ball?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "likes(carol,ball)",
      "explanation": "hungry(alice)"
    }
  },
  {
    "q": "enemy(bob,frank).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following rules:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nCould bob is an enemy of frank explain carol likes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "likes(carol,ball)",
      "non_explanation": "enemy(bob,frank)"
    }
  },
  {
    "q": "parent(eve,carol).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following rules:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nCould eve is a parent of carol explain carol likes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "likes(carol,ball)",
      "non_explanation": "parent(eve,carol)"
    }
  },
  {
    "q": "enemy(frank,alice).",
    "c": "likes(carol,ball) :- hungry(alice).\nlikes(george,phone) :- big(phone), small(phone), big(car).\nlikes(eve,ball) :- sibling(bob,bob), enemy(carol,carol).\nsibling(george,carol) :- enemy(bob,bob).\nsunny :- cold, hungry(bob).\nowns(carol,car) :- tall(carol), sibling(george,dave), likes(frank,ball).\nowns(george,ball) :- happy(bob), hot.\nfriend(eve,eve) :- sibling(eve,carol).\nsunny :- happy(frank), sunny, sad(dave).\nowns(alice,apple) :- happy(dave).\nsibling(alice,eve) :- happy(dave), sunny.\nfriend(carol,carol) :- big(ball), wet(book), wet(ball).\nenemy(frank,frank) :- sibling(dave,george), sibling(carol,eve).\nenemy(alice,bob) :- parent(eve,carol), happy(bob).\nenemy(frank,alice).\nparent(eve,carol).\nfriend(george,bob).\nenemy(bob,frank).\nlikes(eve,pencil).",
    "natural language": "You are given the following rules:\nIf alice is hungry, then carol likes ball.\nIf phone is big and phone is small and car is big, then george likes phone.\nIf bob is a sibling of bob and carol is an enemy of carol, then eve likes ball.\nIf bob is an enemy of bob, then george is a sibling of carol.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol is tall and george is a sibling of dave and frank likes ball, then carol owns car.\nIf bob is happy and it is hot, then george owns ball.\nIf eve is a sibling of carol, then eve is a friend of eve.\nIf frank is happy and it is sunny and dave is sad, then it is sunny.\nIf dave is happy, then alice owns apple.\nIf dave is happy and it is sunny, then alice is a sibling of eve.\nIf ball is big and book is wet and ball is wet, then carol is a friend of carol.\nIf dave is a sibling of george and carol is a sibling of eve, then frank is an enemy of frank.\nIf eve is a parent of carol and bob is happy, then alice is an enemy of bob.\n\nAnd the following facts:\nfrank is an enemy of alice.\neve is a parent of carol.\ngeorge is a friend of bob.\nbob is an enemy of frank.\neve likes pencil.\n\nQUESTION:\nCould frank is an enemy of alice explain carol likes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "likes(carol,ball)",
      "non_explanation": "enemy(frank,alice)"
    }
  },
  {
    "q": "friend(george,eve).",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nsunny.\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\nit is sunny.\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nIs george is a friend of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(apple).",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nsunny.\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\nit is sunny.\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nIs apple is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,pencil).",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nsunny.\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\nit is sunny.\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nIs alice likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,car).",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nsunny.\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\nit is sunny.\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nIs george likes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,bob).",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nsunny.\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\nit is sunny.\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nIs carol is a friend of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following rules:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nCould it is sunny explain dave is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "explanation": "sunny"
    }
  },
  {
    "q": "likes(frank,ball).",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following rules:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nCould frank likes ball explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "likes(frank,ball)"
    }
  },
  {
    "q": "friend(george,eve).",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following rules:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nCould george is a friend of eve explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "friend(george,eve)"
    }
  },
  {
    "q": "sibling(carol,frank).",
    "c": "sad(dave) :- sunny.\nsunny :- sad(dave).\nowns(george,pencil) :- sunny.\ntall(frank) :- owns(george,pencil).\nbig(apple) :- tall(frank).\nsad(carol) :- tall(dave).\nsad(bob) :- sad(eve), likes(dave,car).\nfriend(george,eve) :- cold, small(phone).\nsunny :- sunny.\nowns(frank,phone) :- enemy(george,eve), owns(alice,apple), owns(bob,book).\nsunny :- sunny, friend(carol,eve), wet(phone).\nowns(frank,car) :- tall(eve), sibling(bob,carol), small(ball).\nhungry(frank) :- sad(frank).\ntall(eve) :- sibling(carol,bob).\nlikes(carol,pencil).\nlikes(frank,ball).\nsibling(carol,frank).\nfriend(george,eve).\nfriend(george,carol).",
    "natural language": "You are given the following rules:\nIf it is sunny, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then george owns pencil.\nIf george owns pencil, then frank is tall.\nIf frank is tall, then apple is big.\nIf dave is tall, then carol is sad.\nIf eve is sad and dave likes car, then bob is sad.\nIf it is cold and phone is small, then george is a friend of eve.\nIf it is sunny, then it is sunny.\nIf george is an enemy of eve and alice owns apple and bob owns book, then frank owns phone.\nIf it is sunny and carol is a friend of eve and phone is wet, then it is sunny.\nIf eve is tall and bob is a sibling of carol and ball is small, then frank owns car.\nIf frank is sad, then frank is hungry.\nIf carol is a sibling of bob, then eve is tall.\n\nAnd the following facts:\ncarol likes pencil.\nfrank likes ball.\ncarol is a sibling of frank.\ngeorge is a friend of eve.\ngeorge is a friend of carol.\n\nQUESTION:\nCould carol is a sibling of frank explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "sibling(carol,frank)"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nsmall(car).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following information:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncar is small.\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nIs bob is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,phone).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nsmall(car).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following information:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncar is small.\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nIs bob dislikes phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nsmall(car).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following information:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncar is small.\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nIs frank is a parent of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,george).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nsmall(car).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following information:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncar is small.\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nIs carol is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,apple).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nsmall(car).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following information:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncar is small.\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nIs alice likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following rules:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nCould car is small explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "small(car)"
    }
  },
  {
    "q": "dislikes(bob,phone).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following rules:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nCould bob dislikes phone explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "dislikes(bob,phone)"
    }
  },
  {
    "q": "likes(carol,ball).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following rules:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nCould carol likes ball explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "likes(carol,ball)"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "likes(bob,book) :- small(car).\nhungry(bob) :- likes(bob,book).\nsibling(frank,carol) :- hungry(bob).\nsunny :- sibling(frank,carol).\nparent(bob,eve) :- sunny.\nfriend(frank,george) :- likes(frank,car), sad(eve).\nowns(eve,car) :- hot, friend(eve,dave).\nsunny :- hungry(eve), sibling(eve,bob).\nfriend(carol,bob) :- dislikes(george,book).\nwet(book) :- friend(alice,carol), hungry(alice).\ndislikes(george,pencil) :- sibling(eve,bob).\nhot :- hot.\nowns(dave,ball) :- tall(frank), wet(pencil).\nsunny :- big(ball).\nlikes(carol,ball).\ndislikes(bob,phone).\nfriend(carol,bob).\nfriend(eve,alice).\nbig(book).",
    "natural language": "You are given the following rules:\nIf car is small, then bob likes book.\nIf bob likes book, then bob is hungry.\nIf bob is hungry, then frank is a sibling of carol.\nIf frank is a sibling of carol, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf frank likes car and eve is sad, then frank is a friend of george.\nIf it is hot and eve is a friend of dave, then eve owns car.\nIf eve is hungry and eve is a sibling of bob, then it is sunny.\nIf george dislikes book, then carol is a friend of bob.\nIf alice is a friend of carol and alice is hungry, then book is wet.\nIf eve is a sibling of bob, then george dislikes pencil.\nIf it is hot, then it is hot.\nIf frank is tall and pencil is wet, then dave owns ball.\nIf ball is big, then it is sunny.\n\nAnd the following facts:\ncarol likes ball.\nbob dislikes phone.\ncarol is a friend of bob.\neve is a friend of alice.\nbook is big.\n\nQUESTION:\nCould eve is a friend of alice explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "friend(eve,alice)"
    }
  },
  {
    "q": "sibling(bob,frank).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nfriend(frank,dave).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nIs bob is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(bob).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nfriend(frank,dave).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nIs bob is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,pencil).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nfriend(frank,dave).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nIs dave likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,carol).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nfriend(frank,dave).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nIs frank is a sibling of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nfriend(frank,dave).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\nfrank is a friend of dave.\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nIs frank is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,dave).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following rules:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nCould frank is a friend of dave explain pencil is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "explanation": "friend(frank,dave)"
    }
  },
  {
    "q": "dislikes(carol,ball).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following rules:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nCould carol dislikes ball explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "non_explanation": "dislikes(carol,ball)"
    }
  },
  {
    "q": "owns(dave,pencil).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following rules:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nCould dave owns pencil explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "non_explanation": "owns(dave,pencil)"
    }
  },
  {
    "q": "likes(frank,phone).",
    "c": "tall(bob) :- friend(frank,dave).\nenemy(carol,frank) :- tall(bob).\nhot :- enemy(carol,frank).\nlikes(alice,pencil) :- hot.\ndislikes(alice,book) :- likes(alice,pencil).\nwet(pencil) :- dislikes(alice,book).\nfriend(frank,carol) :- wet(pencil).\nsibling(bob,frank) :- friend(frank,carol).\nwet(pencil) :- sibling(bob,frank).\nhappy(carol) :- wet(pencil).\nowns(dave,car) :- sad(bob), sad(carol), friend(eve,eve).\nhungry(dave) :- hungry(eve), dislikes(frank,pencil), hungry(eve).\ncold :- sunny, cold.\nfriend(bob,dave) :- friend(george,carol), friend(eve,bob), enemy(frank,bob).\nenemy(eve,george).\nowns(dave,pencil).\ndislikes(carol,ball).\nlikes(frank,phone).\nfriend(dave,carol).",
    "natural language": "You are given the following rules:\nIf frank is a friend of dave, then bob is tall.\nIf bob is tall, then carol is an enemy of frank.\nIf carol is an enemy of frank, then it is hot.\nIf it is hot, then alice likes pencil.\nIf alice likes pencil, then alice dislikes book.\nIf alice dislikes book, then pencil is wet.\nIf pencil is wet, then frank is a friend of carol.\nIf frank is a friend of carol, then bob is a sibling of frank.\nIf bob is a sibling of frank, then pencil is wet.\nIf pencil is wet, then carol is happy.\nIf bob is sad and carol is sad and eve is a friend of eve, then dave owns car.\nIf eve is hungry and frank dislikes pencil and eve is hungry, then dave is hungry.\nIf it is sunny and it is cold, then it is cold.\nIf george is a friend of carol and eve is a friend of bob and frank is an enemy of bob, then bob is a friend of dave.\n\nAnd the following facts:\neve is an enemy of george.\ndave owns pencil.\ncarol dislikes ball.\nfrank likes phone.\ndave is a friend of carol.\n\nQUESTION:\nCould frank likes phone explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "non_explanation": "likes(frank,phone)"
    }
  },
  {
    "q": "likes(carol,ball).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\ntall(alice).\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nalice is tall.\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nIs carol likes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,carol).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\ntall(alice).\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nalice is tall.\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nIs george is a friend of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\ntall(alice).\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nalice is tall.\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nIs carol is a parent of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\ntall(alice).\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nalice is tall.\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nIs frank is a parent of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,bob).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\ntall(alice).\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following information:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nalice is tall.\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nIs eve is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(alice).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following rules:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nCould alice is tall explain george owns book?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,book)",
      "explanation": "tall(alice)"
    }
  },
  {
    "q": "friend(frank,george).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following rules:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nCould frank is a friend of george explain george owns book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,book)",
      "non_explanation": "friend(frank,george)"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following rules:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nCould carol likes apple explain george owns book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,book)",
      "non_explanation": "likes(carol,apple)"
    }
  },
  {
    "q": "parent(alice,carol).",
    "c": "enemy(dave,dave) :- tall(alice).\nhungry(alice) :- enemy(dave,dave).\nowns(george,book) :- hungry(alice).\nowns(frank,phone) :- owns(george,book).\nwet(book) :- owns(frank,phone).\nsunny :- wet(book).\nsunny :- sunny.\nhappy(eve) :- sunny.\nowns(dave,pencil) :- happy(eve).\nlikes(carol,ball) :- owns(dave,pencil).\nparent(carol,george) :- sibling(alice,dave).\ncold :- owns(frank,pencil), sad(dave), small(ball).\nlikes(alice,apple) :- wet(car).\nlikes(eve,phone) :- happy(dave), friend(dave,frank), cold.\nfriend(frank,george).\nfriend(bob,frank).\nlikes(carol,apple).\nparent(alice,carol).\nfriend(george,carol).",
    "natural language": "You are given the following rules:\nIf alice is tall, then dave is an enemy of dave.\nIf dave is an enemy of dave, then alice is hungry.\nIf alice is hungry, then george owns book.\nIf george owns book, then frank owns phone.\nIf frank owns phone, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then eve is happy.\nIf eve is happy, then dave owns pencil.\nIf dave owns pencil, then carol likes ball.\nIf alice is a sibling of dave, then carol is a parent of george.\nIf frank owns pencil and dave is sad and ball is small, then it is cold.\nIf car is wet, then alice likes apple.\nIf dave is happy and dave is a friend of frank and it is cold, then eve likes phone.\n\nAnd the following facts:\nfrank is a friend of george.\nbob is a friend of frank.\ncarol likes apple.\nalice is a parent of carol.\ngeorge is a friend of carol.\n\nQUESTION:\nCould alice is a parent of carol explain george owns book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "owns(george,book)",
      "non_explanation": "parent(alice,carol)"
    }
  },
  {
    "q": "sibling(george,carol).",
    "c": "cold :- cold.\nhot :- small(car), hot.\nhot :- sad(george).\ncold :- owns(frank,apple).\ncold :- likes(bob,apple), cold, sad(eve).\nparent(dave,frank) :- wet(apple), tall(dave), likes(george,book).\nparent(bob,george) :- big(pencil), hungry(george), parent(eve,george).\nhungry(dave) :- small(book), parent(eve,alice), hungry(george).\nowns(frank,ball) :- sibling(frank,frank), big(apple), owns(alice,pencil).\nparent(alice,dave) :- wet(car), friend(bob,frank), parent(george,dave).\nowns(frank,phone) :- hot.\ncold :- friend(bob,carol), enemy(carol,carol), cold.\nwet(book) :- small(ball), cold.\nwet(ball) :- wet(apple), hungry(bob).\ncold.\nsad(carol).\nfriend(eve,dave).\nsibling(george,carol).\nhungry(eve).\nfriend(alice,frank).\nlikes(eve,ball).\nparent(dave,bob).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then it is cold.\nIf car is small and it is hot, then it is hot.\nIf george is sad, then it is hot.\nIf frank owns apple, then it is cold.\nIf bob likes apple and it is cold and eve is sad, then it is cold.\nIf apple is wet and dave is tall and george likes book, then dave is a parent of frank.\nIf pencil is big and george is hungry and eve is a parent of george, then bob is a parent of george.\nIf book is small and eve is a parent of alice and george is hungry, then dave is hungry.\nIf frank is a sibling of frank and apple is big and alice owns pencil, then frank owns ball.\nIf car is wet and bob is a friend of frank and george is a parent of dave, then alice is a parent of dave.\nIf it is hot, then frank owns phone.\nIf bob is a friend of carol and carol is an enemy of carol and it is cold, then it is cold.\nIf ball is small and it is cold, then book is wet.\nIf apple is wet and bob is hungry, then ball is wet.\n\nAnd the following facts:\nit is cold.\ncarol is sad.\neve is a friend of dave.\ngeorge is a sibling of carol.\neve is hungry.\nalice is a friend of frank.\neve likes ball.\ndave is a parent of bob.\nalice is a parent of dave.\n\nQUESTION:\nIs george is a sibling of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,dave).",
    "c": "cold :- cold.\nhot :- small(car), hot.\nhot :- sad(george).\ncold :- owns(frank,apple).\ncold :- likes(bob,apple), cold, sad(eve).\nparent(dave,frank) :- wet(apple), tall(dave), likes(george,book).\nparent(bob,george) :- big(pencil), hungry(george), parent(eve,george).\nhungry(dave) :- small(book), parent(eve,alice), hungry(george).\nowns(frank,ball) :- sibling(frank,frank), big(apple), owns(alice,pencil).\nparent(alice,dave) :- wet(car), friend(bob,frank), parent(george,dave).\nowns(frank,phone) :- hot.\ncold :- friend(bob,carol), enemy(carol,carol), cold.\nwet(book) :- small(ball), cold.\nwet(ball) :- wet(apple), hungry(bob).\ncold.\nsad(carol).\nfriend(eve,dave).\nsibling(george,carol).\nhungry(eve).\nfriend(alice,frank).\nlikes(eve,ball).\nparent(dave,bob).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then it is cold.\nIf car is small and it is hot, then it is hot.\nIf george is sad, then it is hot.\nIf frank owns apple, then it is cold.\nIf bob likes apple and it is cold and eve is sad, then it is cold.\nIf apple is wet and dave is tall and george likes book, then dave is a parent of frank.\nIf pencil is big and george is hungry and eve is a parent of george, then bob is a parent of george.\nIf book is small and eve is a parent of alice and george is hungry, then dave is hungry.\nIf frank is a sibling of frank and apple is big and alice owns pencil, then frank owns ball.\nIf car is wet and bob is a friend of frank and george is a parent of dave, then alice is a parent of dave.\nIf it is hot, then frank owns phone.\nIf bob is a friend of carol and carol is an enemy of carol and it is cold, then it is cold.\nIf ball is small and it is cold, then book is wet.\nIf apple is wet and bob is hungry, then ball is wet.\n\nAnd the following facts:\nit is cold.\ncarol is sad.\neve is a friend of dave.\ngeorge is a sibling of carol.\neve is hungry.\nalice is a friend of frank.\neve likes ball.\ndave is a parent of bob.\nalice is a parent of dave.\n\nQUESTION:\nIs alice is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,phone).",
    "c": "cold :- cold.\nhot :- small(car), hot.\nhot :- sad(george).\ncold :- owns(frank,apple).\ncold :- likes(bob,apple), cold, sad(eve).\nparent(dave,frank) :- wet(apple), tall(dave), likes(george,book).\nparent(bob,george) :- big(pencil), hungry(george), parent(eve,george).\nhungry(dave) :- small(book), parent(eve,alice), hungry(george).\nowns(frank,ball) :- sibling(frank,frank), big(apple), owns(alice,pencil).\nparent(alice,dave) :- wet(car), friend(bob,frank), parent(george,dave).\nowns(frank,phone) :- hot.\ncold :- friend(bob,carol), enemy(carol,carol), cold.\nwet(book) :- small(ball), cold.\nwet(ball) :- wet(apple), hungry(bob).\ncold.\nsad(carol).\nfriend(eve,dave).\nsibling(george,carol).\nhungry(eve).\nfriend(alice,frank).\nlikes(eve,ball).\nparent(dave,bob).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then it is cold.\nIf car is small and it is hot, then it is hot.\nIf george is sad, then it is hot.\nIf frank owns apple, then it is cold.\nIf bob likes apple and it is cold and eve is sad, then it is cold.\nIf apple is wet and dave is tall and george likes book, then dave is a parent of frank.\nIf pencil is big and george is hungry and eve is a parent of george, then bob is a parent of george.\nIf book is small and eve is a parent of alice and george is hungry, then dave is hungry.\nIf frank is a sibling of frank and apple is big and alice owns pencil, then frank owns ball.\nIf car is wet and bob is a friend of frank and george is a parent of dave, then alice is a parent of dave.\nIf it is hot, then frank owns phone.\nIf bob is a friend of carol and carol is an enemy of carol and it is cold, then it is cold.\nIf ball is small and it is cold, then book is wet.\nIf apple is wet and bob is hungry, then ball is wet.\n\nAnd the following facts:\nit is cold.\ncarol is sad.\neve is a friend of dave.\ngeorge is a sibling of carol.\neve is hungry.\nalice is a friend of frank.\neve likes ball.\ndave is a parent of bob.\nalice is a parent of dave.\n\nQUESTION:\nIs carol owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,alice).",
    "c": "cold :- cold.\nhot :- small(car), hot.\nhot :- sad(george).\ncold :- owns(frank,apple).\ncold :- likes(bob,apple), cold, sad(eve).\nparent(dave,frank) :- wet(apple), tall(dave), likes(george,book).\nparent(bob,george) :- big(pencil), hungry(george), parent(eve,george).\nhungry(dave) :- small(book), parent(eve,alice), hungry(george).\nowns(frank,ball) :- sibling(frank,frank), big(apple), owns(alice,pencil).\nparent(alice,dave) :- wet(car), friend(bob,frank), parent(george,dave).\nowns(frank,phone) :- hot.\ncold :- friend(bob,carol), enemy(carol,carol), cold.\nwet(book) :- small(ball), cold.\nwet(ball) :- wet(apple), hungry(bob).\ncold.\nsad(carol).\nfriend(eve,dave).\nsibling(george,carol).\nhungry(eve).\nfriend(alice,frank).\nlikes(eve,ball).\nparent(dave,bob).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then it is cold.\nIf car is small and it is hot, then it is hot.\nIf george is sad, then it is hot.\nIf frank owns apple, then it is cold.\nIf bob likes apple and it is cold and eve is sad, then it is cold.\nIf apple is wet and dave is tall and george likes book, then dave is a parent of frank.\nIf pencil is big and george is hungry and eve is a parent of george, then bob is a parent of george.\nIf book is small and eve is a parent of alice and george is hungry, then dave is hungry.\nIf frank is a sibling of frank and apple is big and alice owns pencil, then frank owns ball.\nIf car is wet and bob is a friend of frank and george is a parent of dave, then alice is a parent of dave.\nIf it is hot, then frank owns phone.\nIf bob is a friend of carol and carol is an enemy of carol and it is cold, then it is cold.\nIf ball is small and it is cold, then book is wet.\nIf apple is wet and bob is hungry, then ball is wet.\n\nAnd the following facts:\nit is cold.\ncarol is sad.\neve is a friend of dave.\ngeorge is a sibling of carol.\neve is hungry.\nalice is a friend of frank.\neve likes ball.\ndave is a parent of bob.\nalice is a parent of dave.\n\nQUESTION:\nIs dave is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,eve).",
    "c": "cold :- cold.\nhot :- small(car), hot.\nhot :- sad(george).\ncold :- owns(frank,apple).\ncold :- likes(bob,apple), cold, sad(eve).\nparent(dave,frank) :- wet(apple), tall(dave), likes(george,book).\nparent(bob,george) :- big(pencil), hungry(george), parent(eve,george).\nhungry(dave) :- small(book), parent(eve,alice), hungry(george).\nowns(frank,ball) :- sibling(frank,frank), big(apple), owns(alice,pencil).\nparent(alice,dave) :- wet(car), friend(bob,frank), parent(george,dave).\nowns(frank,phone) :- hot.\ncold :- friend(bob,carol), enemy(carol,carol), cold.\nwet(book) :- small(ball), cold.\nwet(ball) :- wet(apple), hungry(bob).\ncold.\nsad(carol).\nfriend(eve,dave).\nsibling(george,carol).\nhungry(eve).\nfriend(alice,frank).\nlikes(eve,ball).\nparent(dave,bob).\nparent(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then it is cold.\nIf car is small and it is hot, then it is hot.\nIf george is sad, then it is hot.\nIf frank owns apple, then it is cold.\nIf bob likes apple and it is cold and eve is sad, then it is cold.\nIf apple is wet and dave is tall and george likes book, then dave is a parent of frank.\nIf pencil is big and george is hungry and eve is a parent of george, then bob is a parent of george.\nIf book is small and eve is a parent of alice and george is hungry, then dave is hungry.\nIf frank is a sibling of frank and apple is big and alice owns pencil, then frank owns ball.\nIf car is wet and bob is a friend of frank and george is a parent of dave, then alice is a parent of dave.\nIf it is hot, then frank owns phone.\nIf bob is a friend of carol and carol is an enemy of carol and it is cold, then it is cold.\nIf ball is small and it is cold, then book is wet.\nIf apple is wet and bob is hungry, then ball is wet.\n\nAnd the following facts:\nit is cold.\ncarol is sad.\neve is a friend of dave.\ngeorge is a sibling of carol.\neve is hungry.\nalice is a friend of frank.\neve likes ball.\ndave is a parent of bob.\nalice is a parent of dave.\n\nQUESTION:\nIs george is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nowns(george,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following information:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge owns ball.\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,car).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nowns(george,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following information:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge owns ball.\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nIs eve dislikes car true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,george).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nowns(george,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following information:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge owns ball.\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nIs eve is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,apple).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nowns(george,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following information:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge owns ball.\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nIs frank owns apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,pencil).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nowns(george,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following information:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge owns ball.\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nIs eve likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,ball).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following rules:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nCould george owns ball explain eve dislikes car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,car)",
      "explanation": "owns(george,ball)"
    }
  },
  {
    "q": "parent(george,dave).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following rules:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nCould george is a parent of dave explain eve dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,car)",
      "non_explanation": "parent(george,dave)"
    }
  },
  {
    "q": "happy(frank).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following rules:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nCould frank is happy explain eve dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,car)",
      "non_explanation": "happy(frank)"
    }
  },
  {
    "q": "dislikes(frank,apple).",
    "c": "dislikes(eve,car) :- owns(george,ball).\nwet(phone) :- sibling(george,bob), friend(george,dave).\nhappy(frank) :- owns(eve,apple), wet(car).\nwet(car) :- wet(apple), sunny.\nhappy(dave) :- wet(pencil), sad(eve), wet(ball).\nlikes(dave,ball) :- sad(dave).\nhungry(bob) :- sibling(george,george), hot, tall(bob).\nowns(dave,car) :- sibling(dave,eve), big(book).\nhungry(bob) :- hot, sibling(carol,frank).\nowns(george,phone) :- dislikes(frank,pencil), friend(dave,alice), big(book).\nwet(phone) :- hungry(bob).\nlikes(george,book) :- parent(george,george), happy(alice), likes(alice,apple).\nparent(alice,bob) :- sad(eve), dislikes(frank,car), sunny.\nbig(phone) :- dislikes(alice,ball).\nparent(george,dave).\ndislikes(frank,apple).\nparent(carol,eve).\nhappy(frank).\nlikes(dave,phone).\ndislikes(carol,phone).\nowns(carol,ball).\nparent(eve,carol).",
    "natural language": "You are given the following rules:\nIf george owns ball, then eve dislikes car.\nIf george is a sibling of bob and george is a friend of dave, then phone is wet.\nIf eve owns apple and car is wet, then frank is happy.\nIf apple is wet and it is sunny, then car is wet.\nIf pencil is wet and eve is sad and ball is wet, then dave is happy.\nIf dave is sad, then dave likes ball.\nIf george is a sibling of george and it is hot and bob is tall, then bob is hungry.\nIf dave is a sibling of eve and book is big, then dave owns car.\nIf it is hot and carol is a sibling of frank, then bob is hungry.\nIf frank dislikes pencil and dave is a friend of alice and book is big, then george owns phone.\nIf bob is hungry, then phone is wet.\nIf george is a parent of george and alice is happy and alice likes apple, then george likes book.\nIf eve is sad and frank dislikes car and it is sunny, then alice is a parent of bob.\nIf alice dislikes ball, then phone is big.\n\nAnd the following facts:\ngeorge is a parent of dave.\nfrank dislikes apple.\ncarol is a parent of eve.\nfrank is happy.\ndave likes phone.\ncarol dislikes phone.\ncarol owns ball.\neve is a parent of carol.\n\nQUESTION:\nCould frank dislikes apple explain eve dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,car)",
      "non_explanation": "dislikes(frank,apple)"
    }
  },
  {
    "q": "enemy(dave,dave).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nenemy(dave,dave).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ndave is an enemy of dave.\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nIs dave is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(car).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nenemy(dave,dave).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ndave is an enemy of dave.\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nIs car is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(bob).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nenemy(dave,dave).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ndave is an enemy of dave.\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nIs bob is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(bob).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nenemy(dave,dave).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ndave is an enemy of dave.\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nIs bob is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,george).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nenemy(dave,dave).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\ndave is an enemy of dave.\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nIs dave is a friend of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,dave).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nCould dave is an enemy of dave explain car is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(car)",
      "explanation": "enemy(dave,dave)"
    }
  },
  {
    "q": "big(pencil).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nCould pencil is big explain car is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(car)",
      "non_explanation": "big(pencil)"
    }
  },
  {
    "q": "owns(bob,pencil).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nCould bob owns pencil explain car is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(car)",
      "non_explanation": "owns(bob,pencil)"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "cold :- enemy(dave,dave).\ndislikes(alice,phone) :- cold.\nwet(ball) :- dislikes(alice,phone).\nbig(car) :- wet(ball).\ndislikes(george,ball) :- big(car).\ndislikes(alice,ball) :- small(pencil), owns(eve,phone), enemy(bob,alice).\ndislikes(carol,car) :- happy(george), sad(bob).\nsunny :- sunny, parent(alice,bob).\nhappy(dave) :- friend(eve,eve), sad(alice).\nsunny :- friend(frank,bob), big(phone).\nsad(bob) :- parent(alice,dave), likes(frank,book), sad(frank).\nhungry(dave) :- happy(bob).\nhot :- enemy(alice,bob).\nhungry(dave) :- hot, tall(george), hungry(carol).\nfriend(alice,carol).\nbig(pencil).\nfriend(eve,carol).\nowns(bob,pencil).\nfriend(dave,frank).\nsad(eve).\nowns(bob,car).\nowns(dave,ball).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of dave, then it is cold.\nIf it is cold, then alice dislikes phone.\nIf alice dislikes phone, then ball is wet.\nIf ball is wet, then car is big.\nIf car is big, then george dislikes ball.\nIf pencil is small and eve owns phone and bob is an enemy of alice, then alice dislikes ball.\nIf george is happy and bob is sad, then carol dislikes car.\nIf it is sunny and alice is a parent of bob, then it is sunny.\nIf eve is a friend of eve and alice is sad, then dave is happy.\nIf frank is a friend of bob and phone is big, then it is sunny.\nIf alice is a parent of dave and frank likes book and frank is sad, then bob is sad.\nIf bob is happy, then dave is hungry.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot and george is tall and carol is hungry, then dave is hungry.\n\nAnd the following facts:\nalice is a friend of carol.\npencil is big.\neve is a friend of carol.\nbob owns pencil.\ndave is a friend of frank.\neve is sad.\nbob owns car.\ndave owns ball.\n\nQUESTION:\nCould alice is a friend of carol explain car is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(car)",
      "non_explanation": "friend(alice,carol)"
    }
  },
  {
    "q": "parent(george,eve).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nsibling(bob,bob).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following information:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\nbob is a sibling of bob.\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nIs george is a parent of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nsibling(bob,bob).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following information:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\nbob is a sibling of bob.\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nIs alice is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,bob).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nsibling(bob,bob).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following information:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\nbob is a sibling of bob.\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nIs eve is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,bob).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nsibling(bob,bob).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following information:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\nbob is a sibling of bob.\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nIs carol is a parent of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nsibling(bob,bob).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following information:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\nbob is a sibling of bob.\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nIs frank is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,bob).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nCould bob is a sibling of bob explain dave is a friend of dave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(dave,dave)",
      "explanation": "sibling(bob,bob)"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nCould alice is hungry explain dave is a friend of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(dave,dave)",
      "non_explanation": "hungry(alice)"
    }
  },
  {
    "q": "parent(george,eve).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nCould george is a parent of eve explain dave is a friend of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(dave,dave)",
      "non_explanation": "parent(george,eve)"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "friend(dave,dave) :- sibling(bob,bob).\ntall(dave) :- friend(dave,dave).\nhappy(alice) :- tall(dave).\nowns(bob,ball) :- happy(alice).\nsad(alice) :- owns(bob,ball).\ncold :- happy(eve), friend(carol,bob), sad(carol).\ncold :- owns(carol,book), hot.\nwet(car) :- happy(george), parent(frank,eve), small(apple).\nsmall(ball) :- sad(george), likes(carol,pencil), cold.\nwet(pencil) :- small(pencil), happy(bob), owns(carol,ball).\nsmall(apple) :- sad(frank), hungry(alice), likes(dave,car).\nowns(eve,pencil) :- tall(bob).\nfriend(dave,dave) :- small(pencil), hungry(george).\nfriend(bob,george) :- wet(phone), hungry(george), big(apple).\nparent(george,eve).\nsad(eve).\nhungry(alice).\nparent(dave,bob).\nowns(dave,phone).\nlikes(george,apple).\nowns(alice,car).\nfriend(frank,eve).",
    "natural language": "You are given the following rules:\nIf bob is a sibling of bob, then dave is a friend of dave.\nIf dave is a friend of dave, then dave is tall.\nIf dave is tall, then alice is happy.\nIf alice is happy, then bob owns ball.\nIf bob owns ball, then alice is sad.\nIf eve is happy and carol is a friend of bob and carol is sad, then it is cold.\nIf carol owns book and it is hot, then it is cold.\nIf george is happy and frank is a parent of eve and apple is small, then car is wet.\nIf george is sad and carol likes pencil and it is cold, then ball is small.\nIf pencil is small and bob is happy and carol owns ball, then pencil is wet.\nIf frank is sad and alice is hungry and dave likes car, then apple is small.\nIf bob is tall, then eve owns pencil.\nIf pencil is small and george is hungry, then dave is a friend of dave.\nIf phone is wet and george is hungry and apple is big, then bob is a friend of george.\n\nAnd the following facts:\ngeorge is a parent of eve.\neve is sad.\nalice is hungry.\ndave is a parent of bob.\ndave owns phone.\ngeorge likes apple.\nalice owns car.\nfrank is a friend of eve.\n\nQUESTION:\nCould dave is a parent of bob explain dave is a friend of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(dave,dave)",
      "non_explanation": "parent(dave,bob)"
    }
  },
  {
    "q": "parent(alice,dave).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nhappy(carol).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\ncarol is happy.\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nIs alice is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(carol).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nhappy(carol).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\ncarol is happy.\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nIs carol is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,book).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nhappy(carol).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\ncarol is happy.\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nIs bob owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,bob).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nhappy(carol).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\ncarol is happy.\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nIs eve is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,dave).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nhappy(carol).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following information:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\ncarol is happy.\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nIs alice is a friend of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(carol).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following rules:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nCould carol is happy explain carol is a friend of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,eve)",
      "explanation": "happy(carol)"
    }
  },
  {
    "q": "parent(alice,dave).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following rules:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nCould alice is a parent of dave explain carol is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,eve)",
      "non_explanation": "parent(alice,dave)"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following rules:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nCould george is a parent of frank explain carol is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,eve)",
      "non_explanation": "parent(george,frank)"
    }
  },
  {
    "q": "friend(george,alice).",
    "c": "cold :- happy(carol).\nfriend(george,alice) :- cold.\nenemy(alice,carol) :- friend(george,alice).\nhappy(eve) :- enemy(alice,carol).\nenemy(carol,carol) :- happy(eve).\nowns(alice,car) :- enemy(carol,carol).\nhungry(george) :- owns(alice,car).\nsmall(pencil) :- hungry(george).\nsunny :- small(pencil).\nhappy(frank) :- sunny.\nfriend(carol,eve) :- cold.\ncold :- cold, cold.\nwet(ball) :- friend(alice,carol), sibling(alice,carol), parent(carol,alice).\ncold :- parent(eve,bob), big(phone).\nparent(alice,dave).\nfriend(george,alice).\nparent(george,frank).\nenemy(george,eve).\nowns(carol,ball).\nenemy(eve,george).\nfriend(alice,bob).\nparent(frank,bob).",
    "natural language": "You are given the following rules:\nIf carol is happy, then it is cold.\nIf it is cold, then george is a friend of alice.\nIf george is a friend of alice, then alice is an enemy of carol.\nIf alice is an enemy of carol, then eve is happy.\nIf eve is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then alice owns car.\nIf alice owns car, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf it is cold, then carol is a friend of eve.\nIf it is cold and it is cold, then it is cold.\nIf alice is a friend of carol and alice is a sibling of carol and carol is a parent of alice, then ball is wet.\nIf eve is a parent of bob and phone is big, then it is cold.\n\nAnd the following facts:\nalice is a parent of dave.\ngeorge is a friend of alice.\ngeorge is a parent of frank.\ngeorge is an enemy of eve.\ncarol owns ball.\neve is an enemy of george.\nalice is a friend of bob.\nfrank is a parent of bob.\n\nQUESTION:\nCould george is a friend of alice explain carol is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,eve)",
      "non_explanation": "friend(george,alice)"
    }
  },
  {
    "q": "wet(apple).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nwet(phone).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\nphone is wet.\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,pencil).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nwet(phone).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\nphone is wet.\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs frank likes pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,alice).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nwet(phone).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\nphone is wet.\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs dave is a sibling of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,bob).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nwet(phone).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\nphone is wet.\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs carol is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,frank).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nwet(phone).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\nphone is wet.\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs dave is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nCould phone is wet explain frank likes pencil?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(frank,pencil)",
      "explanation": "wet(phone)"
    }
  },
  {
    "q": "enemy(eve,frank).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nCould eve is an enemy of frank explain frank likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(frank,pencil)",
      "non_explanation": "enemy(eve,frank)"
    }
  },
  {
    "q": "enemy(dave,alice).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nCould dave is an enemy of alice explain frank likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(frank,pencil)",
      "non_explanation": "enemy(dave,alice)"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "cold :- wet(phone).\nwet(apple) :- cold.\nsad(george) :- wet(apple).\nfriend(bob,bob) :- sad(george).\nlikes(frank,pencil) :- friend(bob,bob).\nhappy(george) :- likes(frank,pencil).\nfriend(bob,eve) :- happy(george).\ncold :- friend(bob,eve).\nhot :- cold.\nhungry(alice) :- hot.\nsibling(eve,frank) :- enemy(george,eve), cold, cold.\nsibling(dave,alice) :- sunny, wet(ball), happy(dave).\nhappy(george) :- parent(eve,frank).\nhappy(eve) :- hungry(carol).\nparent(eve,dave).\nenemy(eve,frank).\nenemy(dave,alice).\nparent(george,carol).\nsibling(bob,carol).\nsibling(bob,frank).\nenemy(alice,dave).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf phone is wet, then it is cold.\nIf it is cold, then apple is wet.\nIf apple is wet, then george is sad.\nIf george is sad, then bob is a friend of bob.\nIf bob is a friend of bob, then frank likes pencil.\nIf frank likes pencil, then george is happy.\nIf george is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then alice is hungry.\nIf george is an enemy of eve and it is cold and it is cold, then eve is a sibling of frank.\nIf it is sunny and ball is wet and dave is happy, then dave is a sibling of alice.\nIf eve is a parent of frank, then george is happy.\nIf carol is hungry, then eve is happy.\n\nAnd the following facts:\neve is a parent of dave.\neve is an enemy of frank.\ndave is an enemy of alice.\ngeorge is a parent of carol.\nbob is a sibling of carol.\nbob is a sibling of frank.\nalice is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nCould eve is a parent of dave explain frank likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(frank,pencil)",
      "non_explanation": "parent(eve,dave)"
    }
  },
  {
    "q": "parent(frank,carol).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nwet(ball).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\nball is wet.\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nIs frank is a parent of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(car).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nwet(ball).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\nball is wet.\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nIs car is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nwet(ball).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\nball is wet.\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nIs carol likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nwet(ball).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\nball is wet.\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nIs bob owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,phone).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nwet(ball).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\nball is wet.\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nIs george likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nCould ball is wet explain it is hot?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "explanation": "wet(ball)"
    }
  },
  {
    "q": "likes(alice,book).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nCould alice likes book explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "likes(alice,book)"
    }
  },
  {
    "q": "owns(eve,phone).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nCould eve owns phone explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "owns(eve,phone)"
    }
  },
  {
    "q": "big(car).",
    "c": "hot :- wet(ball).\nhappy(alice) :- happy(frank), happy(alice), sunny.\nhappy(carol) :- big(book).\ndislikes(dave,book) :- hungry(dave), dislikes(dave,car), cold.\ndislikes(george,ball) :- owns(eve,car), dislikes(alice,book), dislikes(frank,phone).\nsibling(carol,frank) :- sibling(dave,george), dislikes(george,book), sad(dave).\ndislikes(dave,pencil) :- dislikes(frank,car).\nsibling(carol,eve) :- likes(eve,apple), small(ball).\nsunny :- hungry(dave), sunny.\nsibling(george,carol) :- sibling(carol,frank), sibling(eve,alice), big(car).\nsunny :- sunny, happy(george).\nhot :- tall(frank), sibling(alice,george), happy(dave).\nhot :- cold, hot, sunny.\nparent(carol,carol) :- tall(george).\nbig(car).\nowns(eve,phone).\ncold.\nlikes(alice,book).\nbig(ball).\nwet(car).\nparent(frank,carol).\nlikes(eve,car).\nowns(bob,apple).\ntall(dave).\nparent(carol,eve).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is hot.\nIf frank is happy and alice is happy and it is sunny, then alice is happy.\nIf book is big, then carol is happy.\nIf dave is hungry and dave dislikes car and it is cold, then dave dislikes book.\nIf eve owns car and alice dislikes book and frank dislikes phone, then george dislikes ball.\nIf dave is a sibling of george and george dislikes book and dave is sad, then carol is a sibling of frank.\nIf frank dislikes car, then dave dislikes pencil.\nIf eve likes apple and ball is small, then carol is a sibling of eve.\nIf dave is hungry and it is sunny, then it is sunny.\nIf carol is a sibling of frank and eve is a sibling of alice and car is big, then george is a sibling of carol.\nIf it is sunny and george is happy, then it is sunny.\nIf frank is tall and alice is a sibling of george and dave is happy, then it is hot.\nIf it is cold and it is hot and it is sunny, then it is hot.\nIf george is tall, then carol is a parent of carol.\n\nAnd the following facts:\ncar is big.\neve owns phone.\nit is cold.\nalice likes book.\nball is big.\ncar is wet.\nfrank is a parent of carol.\neve likes car.\nbob owns apple.\ndave is tall.\ncarol is a parent of eve.\n\nQUESTION:\nCould car is big explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "big(car)"
    }
  },
  {
    "q": "sad(alice).",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nbig(ball).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nball is big.\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nIs alice is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,pencil).",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nbig(ball).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nball is big.\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nIs dave dislikes pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,pencil).",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nbig(ball).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nball is big.\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nIs george dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,george).",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nbig(ball).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nball is big.\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nIs eve is a friend of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nbig(ball).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following information:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nball is big.\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nIs it is sunny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following rules:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nCould ball is big explain alice is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(alice)",
      "explanation": "big(ball)"
    }
  },
  {
    "q": "enemy(bob,george).",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following rules:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nCould bob is an enemy of george explain alice is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(alice)",
      "non_explanation": "enemy(bob,george)"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following rules:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nCould dave likes apple explain alice is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(alice)",
      "non_explanation": "likes(dave,apple)"
    }
  },
  {
    "q": "sibling(eve,george).",
    "c": "sad(alice) :- big(ball).\nenemy(dave,alice) :- cold, likes(george,car), dislikes(dave,ball).\nhungry(dave) :- owns(eve,apple), owns(frank,car), happy(carol).\nenemy(george,bob) :- big(pencil).\nhungry(george) :- sunny, sunny, wet(ball).\nbig(car) :- wet(book), owns(frank,ball).\nfriend(frank,carol) :- hungry(carol).\nparent(carol,bob) :- hot, small(book).\nbig(pencil) :- tall(frank), happy(eve), sunny.\nparent(frank,bob) :- sibling(george,bob), likes(dave,apple).\ncold :- small(phone), happy(george).\nbig(ball) :- tall(dave).\nfriend(george,bob) :- hungry(eve), owns(eve,car).\ncold :- friend(george,george), happy(carol), wet(phone).\nenemy(bob,eve).\nlikes(dave,apple).\nsibling(eve,george).\nenemy(bob,george).\nlikes(george,car).\nowns(george,ball).\nfriend(frank,alice).\ndislikes(dave,pencil).\nhappy(carol).\ndislikes(carol,pencil).\nowns(alice,apple).",
    "natural language": "You are given the following rules:\nIf ball is big, then alice is sad.\nIf it is cold and george likes car and dave dislikes ball, then dave is an enemy of alice.\nIf eve owns apple and frank owns car and carol is happy, then dave is hungry.\nIf pencil is big, then george is an enemy of bob.\nIf it is sunny and it is sunny and ball is wet, then george is hungry.\nIf book is wet and frank owns ball, then car is big.\nIf carol is hungry, then frank is a friend of carol.\nIf it is hot and book is small, then carol is a parent of bob.\nIf frank is tall and eve is happy and it is sunny, then pencil is big.\nIf george is a sibling of bob and dave likes apple, then frank is a parent of bob.\nIf phone is small and george is happy, then it is cold.\nIf dave is tall, then ball is big.\nIf eve is hungry and eve owns car, then george is a friend of bob.\nIf george is a friend of george and carol is happy and phone is wet, then it is cold.\n\nAnd the following facts:\nbob is an enemy of eve.\ndave likes apple.\neve is a sibling of george.\nbob is an enemy of george.\ngeorge likes car.\ngeorge owns ball.\nfrank is a friend of alice.\ndave dislikes pencil.\ncarol is happy.\ncarol dislikes pencil.\nalice owns apple.\n\nQUESTION:\nCould eve is a sibling of george explain alice is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(alice)",
      "non_explanation": "sibling(eve,george)"
    }
  },
  {
    "q": "dislikes(eve,apple).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nsibling(carol,alice).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\ncarol is a sibling of alice.\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nIs eve dislikes apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,pencil).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nsibling(carol,alice).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\ncarol is a sibling of alice.\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nIs dave likes pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(book).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nsibling(carol,alice).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\ncarol is a sibling of alice.\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nIs book is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nsibling(carol,alice).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\ncarol is a sibling of alice.\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nIs george is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,pencil).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nsibling(carol,alice).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following information:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\ncarol is a sibling of alice.\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nIs dave owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,alice).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nCould carol is a sibling of alice explain george is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "explanation": "sibling(carol,alice)"
    }
  },
  {
    "q": "friend(eve,alice).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nCould eve is a friend of alice explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "friend(eve,alice)"
    }
  },
  {
    "q": "likes(dave,car).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nCould dave likes car explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "likes(dave,car)"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "likes(dave,pencil) :- sibling(carol,alice).\ncold :- likes(dave,pencil).\nhappy(george) :- cold.\nsmall(apple) :- happy(george).\nlikes(bob,apple) :- small(apple).\nenemy(alice,frank) :- sunny.\nenemy(bob,carol) :- enemy(frank,george), wet(phone), happy(frank).\nsad(alice) :- dislikes(eve,ball), parent(george,bob).\nsad(bob) :- sunny.\nhappy(carol) :- enemy(eve,dave), owns(dave,ball), happy(eve).\nhappy(frank) :- happy(carol), hungry(eve).\nfriend(george,dave) :- big(car), friend(alice,carol).\nhot :- hot.\ntall(carol) :- happy(frank), big(apple), sad(george).\nparent(eve,bob).\nlikes(dave,car).\nfriend(eve,alice).\nlikes(carol,apple).\nsibling(dave,eve).\nowns(carol,ball).\nenemy(carol,george).\nlikes(frank,book).\nparent(george,frank).\nsibling(eve,bob).\ndislikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf carol is a sibling of alice, then dave likes pencil.\nIf dave likes pencil, then it is cold.\nIf it is cold, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob likes apple.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of george and phone is wet and frank is happy, then bob is an enemy of carol.\nIf eve dislikes ball and george is a parent of bob, then alice is sad.\nIf it is sunny, then bob is sad.\nIf eve is an enemy of dave and dave owns ball and eve is happy, then carol is happy.\nIf carol is happy and eve is hungry, then frank is happy.\nIf car is big and alice is a friend of carol, then george is a friend of dave.\nIf it is hot, then it is hot.\nIf frank is happy and apple is big and george is sad, then carol is tall.\n\nAnd the following facts:\neve is a parent of bob.\ndave likes car.\neve is a friend of alice.\ncarol likes apple.\ndave is a sibling of eve.\ncarol owns ball.\ncarol is an enemy of george.\nfrank likes book.\ngeorge is a parent of frank.\neve is a sibling of bob.\neve dislikes apple.\n\nQUESTION:\nCould carol likes apple explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "likes(carol,apple)"
    }
  },
  {
    "q": "small(phone).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\ndislikes(carol,phone).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\ncarol dislikes phone.\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,carol).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\ndislikes(carol,phone).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\ncarol dislikes phone.\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs alice is a sibling of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,eve).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\ndislikes(carol,phone).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\ncarol dislikes phone.\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs dave is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,george).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\ndislikes(carol,phone).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\ncarol dislikes phone.\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs carol is a friend of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,apple).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\ndislikes(carol,phone).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\ncarol dislikes phone.\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs alice dislikes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,phone).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould carol dislikes phone explain phone is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(phone)",
      "explanation": "dislikes(carol,phone)"
    }
  },
  {
    "q": "sibling(alice,carol).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould alice is a sibling of carol explain phone is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(phone)",
      "non_explanation": "sibling(alice,carol)"
    }
  },
  {
    "q": "friend(frank,carol).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould frank is a friend of carol explain phone is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(phone)",
      "non_explanation": "friend(frank,carol)"
    }
  },
  {
    "q": "sibling(bob,frank).",
    "c": "big(phone) :- dislikes(carol,phone).\nhappy(frank) :- big(phone).\nbig(phone) :- happy(frank).\nowns(frank,car) :- big(phone).\nbig(phone) :- owns(frank,car).\nbig(pencil) :- sunny, enemy(bob,frank), hot.\nbig(phone) :- dislikes(eve,pencil), sunny.\nhappy(george) :- hot.\nsad(bob) :- friend(george,carol), cold, small(pencil).\nsad(eve) :- dislikes(frank,apple).\nenemy(bob,dave) :- owns(eve,apple), small(car), sibling(george,eve).\nhappy(dave) :- tall(george), sad(eve).\nhungry(frank) :- wet(ball), sad(george), small(car).\nparent(alice,alice) :- small(car).\nsibling(bob,frank).\nsibling(alice,carol).\nfriend(frank,carol).\nsmall(phone).\nsmall(car).\nfriend(george,carol).\ndislikes(alice,phone).\nowns(bob,ball).\ndislikes(eve,phone).\nowns(eve,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf carol dislikes phone, then phone is big.\nIf phone is big, then frank is happy.\nIf frank is happy, then phone is big.\nIf phone is big, then frank owns car.\nIf frank owns car, then phone is big.\nIf it is sunny and bob is an enemy of frank and it is hot, then pencil is big.\nIf eve dislikes pencil and it is sunny, then phone is big.\nIf it is hot, then george is happy.\nIf george is a friend of carol and it is cold and pencil is small, then bob is sad.\nIf frank dislikes apple, then eve is sad.\nIf eve owns apple and car is small and george is a sibling of eve, then bob is an enemy of dave.\nIf george is tall and eve is sad, then dave is happy.\nIf ball is wet and george is sad and car is small, then frank is hungry.\nIf car is small, then alice is a parent of alice.\n\nAnd the following facts:\nbob is a sibling of frank.\nalice is a sibling of carol.\nfrank is a friend of carol.\nphone is small.\ncar is small.\ngeorge is a friend of carol.\nalice dislikes phone.\nbob owns ball.\neve dislikes phone.\neve owns apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould bob is a sibling of frank explain phone is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(phone)",
      "non_explanation": "sibling(bob,frank)"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nsunny.\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\nit is sunny.\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nIs frank is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nsunny.\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\nit is sunny.\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nIs it is sunny true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nsunny.\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\nit is sunny.\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nIs eve is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,frank).",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nsunny.\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\nit is sunny.\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nIs carol is a parent of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,dave).",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nsunny.\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following information:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\nit is sunny.\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nIs frank is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following rules:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nCould it is sunny explain eve is a parent of dave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "parent(eve,dave)",
      "explanation": "sunny"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following rules:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nCould carol is an enemy of eve explain eve is a parent of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "parent(eve,dave)",
      "non_explanation": "enemy(carol,eve)"
    }
  },
  {
    "q": "parent(carol,eve).",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following rules:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nCould carol is a parent of eve explain eve is a parent of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "parent(eve,dave)",
      "non_explanation": "parent(carol,eve)"
    }
  },
  {
    "q": "enemy(carol,frank).",
    "c": "parent(eve,dave) :- sunny.\ncold :- parent(eve,dave).\ntall(alice) :- cold.\ntall(alice) :- tall(alice).\nbig(ball) :- tall(alice).\nfriend(george,bob) :- big(ball).\nhot :- friend(george,bob).\ncold :- hot.\nsibling(carol,george) :- cold.\nhungry(alice) :- sibling(carol,george).\nsunny :- owns(dave,car), tall(dave), parent(bob,dave).\nsunny :- enemy(alice,alice), hot.\ncold :- cold.\nbig(pencil) :- hungry(eve).\nparent(carol,eve).\nenemy(carol,eve).\nbig(car).\nenemy(carol,frank).\nenemy(dave,eve).\nenemy(carol,george).\nbig(ball).\nparent(george,eve).\nhungry(frank).\nfriend(carol,eve).\nsibling(george,bob).",
    "natural language": "You are given the following rules:\nIf it is sunny, then eve is a parent of dave.\nIf eve is a parent of dave, then it is cold.\nIf it is cold, then alice is tall.\nIf alice is tall, then alice is tall.\nIf alice is tall, then ball is big.\nIf ball is big, then george is a friend of bob.\nIf george is a friend of bob, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol is a sibling of george.\nIf carol is a sibling of george, then alice is hungry.\nIf dave owns car and dave is tall and bob is a parent of dave, then it is sunny.\nIf alice is an enemy of alice and it is hot, then it is sunny.\nIf it is cold, then it is cold.\nIf eve is hungry, then pencil is big.\n\nAnd the following facts:\ncarol is a parent of eve.\ncarol is an enemy of eve.\ncar is big.\ncarol is an enemy of frank.\ndave is an enemy of eve.\ncarol is an enemy of george.\nball is big.\ngeorge is a parent of eve.\nfrank is hungry.\ncarol is a friend of eve.\ngeorge is a sibling of bob.\n\nQUESTION:\nCould carol is an enemy of frank explain eve is a parent of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "parent(eve,dave)",
      "non_explanation": "enemy(carol,frank)"
    }
  },
  {
    "q": "enemy(dave,carol).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nowns(alice,phone).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\nalice owns phone.\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nIs dave is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,frank).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nowns(alice,phone).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\nalice owns phone.\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nIs frank is a friend of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,carol).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nowns(alice,phone).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\nalice owns phone.\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nIs frank is a sibling of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,dave).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nowns(alice,phone).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\nalice owns phone.\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nIs carol is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,pencil).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nowns(alice,phone).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following information:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\nalice owns phone.\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nIs carol owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,phone).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following rules:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nCould alice owns phone explain frank is a friend of frank?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,frank)",
      "explanation": "owns(alice,phone)"
    }
  },
  {
    "q": "enemy(frank,dave).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following rules:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nCould frank is an enemy of dave explain frank is a friend of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,frank)",
      "non_explanation": "enemy(frank,dave)"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following rules:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nCould george is a sibling of bob explain frank is a friend of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,frank)",
      "non_explanation": "sibling(george,bob)"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "friend(frank,frank) :- owns(alice,phone).\nbig(phone) :- friend(frank,frank).\ntall(carol) :- big(phone).\ntall(dave) :- tall(carol).\nbig(phone) :- tall(dave).\nparent(bob,bob) :- big(phone).\nbig(apple) :- parent(bob,bob).\nwet(apple) :- big(apple).\nsunny :- wet(apple).\nsunny :- sunny.\nsibling(dave,dave) :- parent(alice,george).\nsibling(dave,carol) :- happy(carol).\nsibling(carol,george) :- enemy(eve,alice), enemy(frank,bob).\nparent(george,alice) :- happy(bob).\nenemy(dave,carol).\nsibling(george,bob).\nenemy(frank,dave).\nenemy(carol,eve).\nsibling(bob,dave).\nowns(george,pencil).\ntall(eve).\ntall(frank).\nsibling(alice,dave).\nfriend(bob,frank).\nfriend(bob,george).",
    "natural language": "You are given the following rules:\nIf alice owns phone, then frank is a friend of frank.\nIf frank is a friend of frank, then phone is big.\nIf phone is big, then carol is tall.\nIf carol is tall, then dave is tall.\nIf dave is tall, then phone is big.\nIf phone is big, then bob is a parent of bob.\nIf bob is a parent of bob, then apple is big.\nIf apple is big, then apple is wet.\nIf apple is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf alice is a parent of george, then dave is a sibling of dave.\nIf carol is happy, then dave is a sibling of carol.\nIf eve is an enemy of alice and frank is an enemy of bob, then carol is a sibling of george.\nIf bob is happy, then george is a parent of alice.\n\nAnd the following facts:\ndave is an enemy of carol.\ngeorge is a sibling of bob.\nfrank is an enemy of dave.\ncarol is an enemy of eve.\nbob is a sibling of dave.\ngeorge owns pencil.\neve is tall.\nfrank is tall.\nalice is a sibling of dave.\nbob is a friend of frank.\nbob is a friend of george.\n\nQUESTION:\nCould carol is an enemy of eve explain frank is a friend of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "friend(frank,frank)",
      "non_explanation": "enemy(carol,eve)"
    }
  },
  {
    "q": "likes(george,book).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nparent(dave,frank).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\ndave is a parent of frank.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nIs george likes book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,bob).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nparent(dave,frank).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\ndave is a parent of frank.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nIs frank is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(book).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nparent(dave,frank).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\ndave is a parent of frank.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nIs book is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,ball).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nparent(dave,frank).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\ndave is a parent of frank.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nIs alice owns ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nparent(dave,frank).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\ndave is a parent of frank.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nIs dave is a parent of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,frank).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nCould dave is a parent of frank explain carol is a sibling of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,eve)",
      "explanation": "parent(dave,frank)"
    }
  },
  {
    "q": "cold.",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\nsibling(eve,carol).\nparent(dave,frank).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\neve is a sibling of carol.\ndave is a parent of frank.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nCould it is cold explain carol is a sibling of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,eve)",
      "explanation": "cold"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nCould frank owns car explain carol is a sibling of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,eve)",
      "non_explanation": "owns(frank,car)"
    }
  },
  {
    "q": "parent(dave,george).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nCould dave is a parent of george explain carol is a sibling of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,eve)",
      "non_explanation": "parent(dave,george)"
    }
  },
  {
    "q": "sibling(eve,carol).",
    "c": "tall(bob) :- cold.\nowns(bob,phone) :- hungry(alice).\nfriend(bob,frank) :- friend(alice,george), sibling(dave,carol), friend(bob,alice).\nlikes(frank,book) :- likes(bob,ball), friend(carol,eve), tall(eve).\nowns(bob,apple) :- wet(pencil), tall(frank).\nfriend(alice,bob) :- parent(bob,alice), hungry(alice).\nfriend(frank,george) :- big(pencil), likes(bob,book), hot.\nsibling(alice,eve) :- small(pencil), sibling(bob,eve), big(ball).\nsmall(car) :- hungry(frank), parent(george,eve).\nsibling(carol,eve) :- parent(dave,frank), cold.\nsmall(ball) :- sunny, small(pencil), cold.\ntall(dave) :- hungry(george).\nparent(alice,bob) :- cold, hot.\ntall(frank) :- happy(eve).\ncold.\nsibling(eve,carol).\nowns(frank,car).\nparent(dave,george).\nowns(dave,phone).\nowns(frank,book).\nfriend(eve,george).\nsunny.\nsibling(bob,frank).\nlikes(george,book).\nsibling(frank,bob).\ntall(dave).\nlikes(carol,ball).\nsibling(dave,alice).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf alice is hungry, then bob owns phone.\nIf alice is a friend of george and dave is a sibling of carol and bob is a friend of alice, then bob is a friend of frank.\nIf bob likes ball and carol is a friend of eve and eve is tall, then frank likes book.\nIf pencil is wet and frank is tall, then bob owns apple.\nIf bob is a parent of alice and alice is hungry, then alice is a friend of bob.\nIf pencil is big and bob likes book and it is hot, then frank is a friend of george.\nIf pencil is small and bob is a sibling of eve and ball is big, then alice is a sibling of eve.\nIf frank is hungry and george is a parent of eve, then car is small.\nIf dave is a parent of frank and it is cold, then carol is a sibling of eve.\nIf it is sunny and pencil is small and it is cold, then ball is small.\nIf george is hungry, then dave is tall.\nIf it is cold and it is hot, then alice is a parent of bob.\nIf eve is happy, then frank is tall.\n\nAnd the following facts:\nit is cold.\neve is a sibling of carol.\nfrank owns car.\ndave is a parent of george.\ndave owns phone.\nfrank owns book.\neve is a friend of george.\nit is sunny.\nbob is a sibling of frank.\ngeorge likes book.\nfrank is a sibling of bob.\ndave is tall.\ncarol likes ball.\ndave is a sibling of alice.\n\nQUESTION:\nCould eve is a sibling of carol explain carol is a sibling of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,eve)",
      "non_explanation": "sibling(eve,carol)"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nbig(phone).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\nphone is big.\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nIs eve is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,book).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nbig(phone).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\nphone is big.\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nIs george owns book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,carol).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nbig(phone).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\nphone is big.\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nIs george is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,eve).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nbig(phone).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\nphone is big.\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nIs frank is a parent of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nbig(phone).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\nphone is big.\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nIs frank is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(phone).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nCould phone is big explain bob is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(bob)",
      "explanation": "big(phone)"
    }
  },
  {
    "q": "owns(bob,book).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nCould bob owns book explain bob is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(bob)",
      "non_explanation": "owns(bob,book)"
    }
  },
  {
    "q": "enemy(george,dave).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nCould george is an enemy of dave explain bob is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(bob)",
      "non_explanation": "enemy(george,dave)"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "happy(bob) :- big(phone).\nparent(alice,alice) :- hot, sibling(bob,frank), enemy(bob,carol).\nlikes(alice,car) :- parent(bob,eve), parent(george,bob), sunny.\nparent(carol,eve) :- hungry(dave), wet(book).\ndislikes(bob,phone) :- parent(alice,carol), dislikes(frank,phone), enemy(frank,eve).\nhappy(george) :- tall(dave).\ncold :- happy(alice), sunny.\nhappy(alice) :- hungry(eve), cold, parent(george,dave).\ncold :- owns(frank,car), friend(bob,eve).\ncold :- sad(bob).\nowns(eve,pencil) :- parent(frank,carol), sunny.\ndislikes(george,book) :- owns(frank,apple), happy(dave).\nlikes(frank,book) :- tall(frank).\nhot :- hungry(george).\nwet(pencil).\nowns(bob,book).\nenemy(george,dave).\nenemy(bob,dave).\nparent(eve,dave).\nenemy(alice,dave).\nenemy(eve,carol).\nsad(dave).\nlikes(frank,apple).\nsibling(bob,alice).\nlikes(frank,book).\nowns(george,book).\nfriend(carol,eve).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf phone is big, then bob is happy.\nIf it is hot and bob is a sibling of frank and bob is an enemy of carol, then alice is a parent of alice.\nIf bob is a parent of eve and george is a parent of bob and it is sunny, then alice likes car.\nIf dave is hungry and book is wet, then carol is a parent of eve.\nIf alice is a parent of carol and frank dislikes phone and frank is an enemy of eve, then bob dislikes phone.\nIf dave is tall, then george is happy.\nIf alice is happy and it is sunny, then it is cold.\nIf eve is hungry and it is cold and george is a parent of dave, then alice is happy.\nIf frank owns car and bob is a friend of eve, then it is cold.\nIf bob is sad, then it is cold.\nIf frank is a parent of carol and it is sunny, then eve owns pencil.\nIf frank owns apple and dave is happy, then george dislikes book.\nIf frank is tall, then frank likes book.\nIf george is hungry, then it is hot.\n\nAnd the following facts:\npencil is wet.\nbob owns book.\ngeorge is an enemy of dave.\nbob is an enemy of dave.\neve is a parent of dave.\nalice is an enemy of dave.\neve is an enemy of carol.\ndave is sad.\nfrank likes apple.\nbob is a sibling of alice.\nfrank likes book.\ngeorge owns book.\ncarol is a friend of eve.\nfrank is an enemy of dave.\n\nQUESTION:\nCould pencil is wet explain bob is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(bob)",
      "non_explanation": "wet(pencil)"
    }
  },
  {
    "q": "sibling(dave,eve).",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nhot.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\nit is hot.\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nIs dave is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,frank).",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nhot.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\nit is hot.\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nIs alice is a parent of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nhot.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\nit is hot.\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nIs eve is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,ball).",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nhot.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\nit is hot.\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nIs george owns ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nhot.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\nit is hot.\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nIs carol is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nCould it is hot explain george is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "explanation": "hot"
    }
  },
  {
    "q": "sad(george).",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nCould george is sad explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "sad(george)"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nCould carol is a parent of alice explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "parent(carol,alice)"
    }
  },
  {
    "q": "parent(carol,george).",
    "c": "hot :- hot.\nhungry(george) :- hot.\nparent(carol,carol) :- hungry(george).\nsad(george) :- parent(carol,carol).\nbig(car) :- sad(george).\nbig(apple) :- owns(alice,car).\nbig(pencil) :- small(ball), big(phone).\nlikes(eve,pencil) :- sibling(dave,dave).\nsmall(pencil) :- dislikes(george,pencil), small(pencil), parent(bob,bob).\nlikes(alice,phone) :- sad(alice), big(book), likes(dave,car).\nsibling(frank,bob) :- sibling(george,bob).\nhot :- happy(carol), hot.\nsibling(dave,bob) :- friend(alice,eve), sad(alice).\nhappy(carol) :- happy(eve), sibling(alice,frank), sunny.\nparent(carol,george).\nowns(frank,apple).\nparent(carol,alice).\nsad(george).\nlikes(frank,apple).\nowns(bob,ball).\nowns(frank,ball).\nfriend(alice,bob).\nparent(eve,bob).\nparent(bob,eve).\nfriend(alice,eve).\nsibling(dave,eve).\nfriend(eve,george).\nparent(alice,frank).",
    "natural language": "You are given the following rules:\nIf it is hot, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then carol is a parent of carol.\nIf carol is a parent of carol, then george is sad.\nIf george is sad, then car is big.\nIf alice owns car, then apple is big.\nIf ball is small and phone is big, then pencil is big.\nIf dave is a sibling of dave, then eve likes pencil.\nIf george dislikes pencil and pencil is small and bob is a parent of bob, then pencil is small.\nIf alice is sad and book is big and dave likes car, then alice likes phone.\nIf george is a sibling of bob, then frank is a sibling of bob.\nIf carol is happy and it is hot, then it is hot.\nIf alice is a friend of eve and alice is sad, then dave is a sibling of bob.\nIf eve is happy and alice is a sibling of frank and it is sunny, then carol is happy.\n\nAnd the following facts:\ncarol is a parent of george.\nfrank owns apple.\ncarol is a parent of alice.\ngeorge is sad.\nfrank likes apple.\nbob owns ball.\nfrank owns ball.\nalice is a friend of bob.\neve is a parent of bob.\nbob is a parent of eve.\nalice is a friend of eve.\ndave is a sibling of eve.\neve is a friend of george.\nalice is a parent of frank.\n\nQUESTION:\nCould carol is a parent of george explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "parent(carol,george)"
    }
  },
  {
    "q": "owns(alice,phone).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(dave,dave).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\ndave is an enemy of dave.\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nIs alice owns phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,pencil).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(dave,dave).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\ndave is an enemy of dave.\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nIs dave dislikes pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(dave,dave).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\ndave is an enemy of dave.\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(dave,dave).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\ndave is an enemy of dave.\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nIs george is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(dave,dave).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\ndave is an enemy of dave.\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nIs frank is a parent of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,dave).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nCould dave is an enemy of dave explain frank is an enemy of frank?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "enemy(frank,frank)",
      "explanation": "enemy(dave,dave)"
    }
  },
  {
    "q": "enemy(frank,george).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nCould frank is an enemy of george explain frank is an enemy of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "enemy(frank,frank)",
      "non_explanation": "enemy(frank,george)"
    }
  },
  {
    "q": "enemy(bob,carol).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nCould bob is an enemy of carol explain frank is an enemy of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "enemy(frank,frank)",
      "non_explanation": "enemy(bob,carol)"
    }
  },
  {
    "q": "happy(george).",
    "c": "hot :- enemy(dave,dave).\ncold :- hot.\ndislikes(bob,ball) :- cold.\nsad(george) :- dislikes(bob,ball).\nenemy(frank,frank) :- sad(george).\nsunny :- hungry(george).\nhot :- sad(eve), happy(dave), owns(george,pencil).\nenemy(bob,alice) :- dislikes(dave,pencil), wet(book).\nhot :- enemy(eve,bob), sunny.\nsunny :- hot, parent(dave,carol).\ndislikes(alice,ball) :- owns(alice,pencil).\ntall(alice) :- owns(dave,phone), dislikes(george,pencil), sad(frank).\nbig(book) :- hungry(frank).\nenemy(bob,dave) :- enemy(alice,frank).\nenemy(bob,carol).\nenemy(frank,eve).\nenemy(frank,george).\nhappy(george).\ndislikes(alice,phone).\ndislikes(dave,pencil).\nenemy(george,frank).\nhappy(eve).\nenemy(eve,george).\nhungry(bob).\nowns(alice,phone).\nsad(frank).\nbig(pencil).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of dave, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then bob dislikes ball.\nIf bob dislikes ball, then george is sad.\nIf george is sad, then frank is an enemy of frank.\nIf george is hungry, then it is sunny.\nIf eve is sad and dave is happy and george owns pencil, then it is hot.\nIf dave dislikes pencil and book is wet, then bob is an enemy of alice.\nIf eve is an enemy of bob and it is sunny, then it is hot.\nIf it is hot and dave is a parent of carol, then it is sunny.\nIf alice owns pencil, then alice dislikes ball.\nIf dave owns phone and george dislikes pencil and frank is sad, then alice is tall.\nIf frank is hungry, then book is big.\nIf alice is an enemy of frank, then bob is an enemy of dave.\n\nAnd the following facts:\nbob is an enemy of carol.\nfrank is an enemy of eve.\nfrank is an enemy of george.\ngeorge is happy.\nalice dislikes phone.\ndave dislikes pencil.\ngeorge is an enemy of frank.\neve is happy.\neve is an enemy of george.\nbob is hungry.\nalice owns phone.\nfrank is sad.\npencil is big.\ncarol is an enemy of dave.\n\nQUESTION:\nCould george is happy explain frank is an enemy of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "enemy(frank,frank)",
      "non_explanation": "happy(george)"
    }
  },
  {
    "q": "parent(eve,bob).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nsmall(car).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\ncar is small.\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nIs eve is a parent of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,bob).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nsmall(car).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\ncar is small.\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nIs bob is a friend of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,george).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nsmall(car).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\ncar is small.\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nIs carol is a friend of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,ball).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nsmall(car).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\ncar is small.\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nIs dave likes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,phone).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nsmall(car).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\ncar is small.\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nIs george owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nCould car is small explain eve is a sibling of bob?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,bob)",
      "explanation": "small(car)"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nCould george is a sibling of bob explain eve is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,bob)",
      "non_explanation": "sibling(george,bob)"
    }
  },
  {
    "q": "parent(eve,bob).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nCould eve is a parent of bob explain eve is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,bob)",
      "non_explanation": "parent(eve,bob)"
    }
  },
  {
    "q": "parent(alice,bob).",
    "c": "happy(carol) :- small(car).\nenemy(carol,eve) :- happy(carol).\nhappy(carol) :- enemy(carol,eve).\nfriend(bob,bob) :- happy(carol).\ncold :- friend(bob,bob).\nhot :- cold.\nsibling(eve,bob) :- hot.\nhungry(eve) :- sibling(eve,bob).\ncold :- hungry(eve).\nlikes(frank,phone) :- cold.\ntall(eve) :- dislikes(bob,ball), parent(dave,george).\ntall(dave) :- tall(dave), enemy(frank,alice).\nowns(carol,book) :- owns(george,phone).\nowns(carol,book) :- owns(alice,phone).\nparent(alice,bob).\nparent(eve,bob).\nsibling(george,bob).\nowns(bob,ball).\nowns(carol,ball).\nenemy(bob,alice).\ndislikes(carol,book).\nsibling(bob,carol).\nparent(frank,bob).\nowns(dave,car).\nlikes(carol,apple).\nenemy(alice,carol).\ndislikes(carol,pencil).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf car is small, then carol is happy.\nIf carol is happy, then carol is an enemy of eve.\nIf carol is an enemy of eve, then carol is happy.\nIf carol is happy, then bob is a friend of bob.\nIf bob is a friend of bob, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve is a sibling of bob.\nIf eve is a sibling of bob, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then frank likes phone.\nIf bob dislikes ball and dave is a parent of george, then eve is tall.\nIf dave is tall and frank is an enemy of alice, then dave is tall.\nIf george owns phone, then carol owns book.\nIf alice owns phone, then carol owns book.\n\nAnd the following facts:\nalice is a parent of bob.\neve is a parent of bob.\ngeorge is a sibling of bob.\nbob owns ball.\ncarol owns ball.\nbob is an enemy of alice.\ncarol dislikes book.\nbob is a sibling of carol.\nfrank is a parent of bob.\ndave owns car.\ncarol likes apple.\nalice is an enemy of carol.\ncarol dislikes pencil.\npencil is small.\n\nQUESTION:\nCould alice is a parent of bob explain eve is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,bob)",
      "non_explanation": "parent(alice,bob)"
    }
  },
  {
    "q": "sibling(dave,carol).",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(frank,frank).\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\nfrank is a sibling of frank.\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nIs dave is a sibling of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(frank,frank).\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\nfrank is a sibling of frank.\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nIs it is cold true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(alice).",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(frank,frank).\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\nfrank is a sibling of frank.\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nIs alice is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,dave).",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(frank,frank).\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\nfrank is a sibling of frank.\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nIs carol is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(frank,frank).\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following information:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\nfrank is a sibling of frank.\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nIs dave is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,frank).",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nCould frank is a sibling of frank explain car is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "wet(car)",
      "explanation": "sibling(frank,frank)"
    }
  },
  {
    "q": "owns(dave,book).",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nCould dave owns book explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "wet(car)",
      "non_explanation": "owns(dave,book)"
    }
  },
  {
    "q": "owns(eve,apple).",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nCould eve owns apple explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "wet(car)",
      "non_explanation": "owns(eve,apple)"
    }
  },
  {
    "q": "sibling(dave,carol).",
    "c": "wet(car) :- sibling(frank,frank).\nowns(george,phone) :- wet(car).\nhappy(dave) :- owns(george,phone).\nhappy(bob) :- happy(dave).\ncold :- happy(bob).\nenemy(alice,eve) :- cold.\nsad(frank) :- enemy(alice,eve).\nsmall(apple) :- sad(frank).\nsmall(pencil) :- small(apple).\nhappy(eve) :- small(pencil).\nowns(eve,pencil) :- sunny, hungry(bob), hungry(bob).\nowns(frank,apple) :- dislikes(dave,book).\ntall(alice) :- small(pencil), sunny, cold.\nsibling(george,frank) :- small(car), sunny.\nsibling(dave,carol).\nowns(eve,apple).\nowns(alice,car).\nowns(dave,book).\nenemy(george,alice).\ndislikes(carol,car).\nsmall(pencil).\nsibling(frank,dave).\ntall(frank).\ndislikes(alice,apple).\nsibling(eve,carol).\nhappy(dave).\nhappy(frank).\ndislikes(alice,ball).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of frank, then car is wet.\nIf car is wet, then george owns phone.\nIf george owns phone, then dave is happy.\nIf dave is happy, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then alice is an enemy of eve.\nIf alice is an enemy of eve, then frank is sad.\nIf frank is sad, then apple is small.\nIf apple is small, then pencil is small.\nIf pencil is small, then eve is happy.\nIf it is sunny and bob is hungry and bob is hungry, then eve owns pencil.\nIf dave dislikes book, then frank owns apple.\nIf pencil is small and it is sunny and it is cold, then alice is tall.\nIf car is small and it is sunny, then george is a sibling of frank.\n\nAnd the following facts:\ndave is a sibling of carol.\neve owns apple.\nalice owns car.\ndave owns book.\ngeorge is an enemy of alice.\ncarol dislikes car.\npencil is small.\nfrank is a sibling of dave.\nfrank is tall.\nalice dislikes apple.\neve is a sibling of carol.\ndave is happy.\nfrank is happy.\nalice dislikes ball.\n\nQUESTION:\nCould dave is a sibling of carol explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 15,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "wet(car)",
      "non_explanation": "sibling(dave,carol)"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "friend(alice,alice) :- sibling(george,bob).\nfriend(dave,eve) :- big(book), cold.\ndislikes(bob,car) :- parent(dave,dave), dislikes(george,phone).\ndislikes(bob,car) :- cold, dislikes(dave,car).\nfriend(eve,bob) :- happy(carol), friend(dave,eve).\nbig(car) :- big(ball), big(phone), big(ball).\nowns(bob,apple) :- hot.\nhot :- hungry(alice), sad(frank), hot.\nhot :- sad(alice).\nowns(alice,phone) :- cold.\nbig(phone) :- dislikes(dave,apple).\nsibling(george,carol) :- sibling(dave,frank).\nsibling(eve,frank) :- cold, wet(car), sad(frank).\nparent(carol,eve) :- parent(alice,alice), parent(carol,dave).\nhungry(eve) :- owns(alice,car), sunny, likes(frank,phone).\nlikes(carol,pencil) :- hungry(frank), parent(george,frank), happy(eve).\nhungry(bob) :- wet(apple).\nparent(alice,carol) :- small(apple), parent(alice,dave), parent(eve,alice).\nlikes(frank,car) :- happy(eve), small(phone).\nenemy(frank,carol) :- hungry(alice).\nenemy(alice,alice) :- owns(carol,book), sad(george), small(phone).\nhungry(carol) :- hungry(eve), hungry(bob).\nenemy(eve,carol) :- likes(carol,book), enemy(carol,carol), big(phone).\nsibling(frank,frank) :- sad(dave), friend(bob,eve), big(book).\nsibling(george,bob).\nfriend(george,dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of bob, then alice is a friend of alice.\nIf book is big and it is cold, then dave is a friend of eve.\nIf dave is a parent of dave and george dislikes phone, then bob dislikes car.\nIf it is cold and dave dislikes car, then bob dislikes car.\nIf carol is happy and dave is a friend of eve, then eve is a friend of bob.\nIf ball is big and phone is big and ball is big, then car is big.\nIf it is hot, then bob owns apple.\nIf alice is hungry and frank is sad and it is hot, then it is hot.\nIf alice is sad, then it is hot.\nIf it is cold, then alice owns phone.\nIf dave dislikes apple, then phone is big.\nIf dave is a sibling of frank, then george is a sibling of carol.\nIf it is cold and car is wet and frank is sad, then eve is a sibling of frank.\nIf alice is a parent of alice and carol is a parent of dave, then carol is a parent of eve.\nIf alice owns car and it is sunny and frank likes phone, then eve is hungry.\nIf frank is hungry and george is a parent of frank and eve is happy, then carol likes pencil.\nIf apple is wet, then bob is hungry.\nIf apple is small and alice is a parent of dave and eve is a parent of alice, then alice is a parent of carol.\nIf eve is happy and phone is small, then frank likes car.\nIf alice is hungry, then frank is an enemy of carol.\nIf carol owns book and george is sad and phone is small, then alice is an enemy of alice.\nIf eve is hungry and bob is hungry, then carol is hungry.\nIf carol likes book and carol is an enemy of carol and phone is big, then eve is an enemy of carol.\nIf dave is sad and bob is a friend of eve and book is big, then frank is a sibling of frank.\n\nAnd the following facts:\ngeorge is a sibling of bob.\ngeorge is a friend of dave.\ndave is a friend of carol.\n\nQUESTION:\nIs george is a friend of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "friend(alice,alice) :- sibling(george,bob).\nfriend(dave,eve) :- big(book), cold.\ndislikes(bob,car) :- parent(dave,dave), dislikes(george,phone).\ndislikes(bob,car) :- cold, dislikes(dave,car).\nfriend(eve,bob) :- happy(carol), friend(dave,eve).\nbig(car) :- big(ball), big(phone), big(ball).\nowns(bob,apple) :- hot.\nhot :- hungry(alice), sad(frank), hot.\nhot :- sad(alice).\nowns(alice,phone) :- cold.\nbig(phone) :- dislikes(dave,apple).\nsibling(george,carol) :- sibling(dave,frank).\nsibling(eve,frank) :- cold, wet(car), sad(frank).\nparent(carol,eve) :- parent(alice,alice), parent(carol,dave).\nhungry(eve) :- owns(alice,car), sunny, likes(frank,phone).\nlikes(carol,pencil) :- hungry(frank), parent(george,frank), happy(eve).\nhungry(bob) :- wet(apple).\nparent(alice,carol) :- small(apple), parent(alice,dave), parent(eve,alice).\nlikes(frank,car) :- happy(eve), small(phone).\nenemy(frank,carol) :- hungry(alice).\nenemy(alice,alice) :- owns(carol,book), sad(george), small(phone).\nhungry(carol) :- hungry(eve), hungry(bob).\nenemy(eve,carol) :- likes(carol,book), enemy(carol,carol), big(phone).\nsibling(frank,frank) :- sad(dave), friend(bob,eve), big(book).\nsibling(george,bob).\nfriend(george,dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of bob, then alice is a friend of alice.\nIf book is big and it is cold, then dave is a friend of eve.\nIf dave is a parent of dave and george dislikes phone, then bob dislikes car.\nIf it is cold and dave dislikes car, then bob dislikes car.\nIf carol is happy and dave is a friend of eve, then eve is a friend of bob.\nIf ball is big and phone is big and ball is big, then car is big.\nIf it is hot, then bob owns apple.\nIf alice is hungry and frank is sad and it is hot, then it is hot.\nIf alice is sad, then it is hot.\nIf it is cold, then alice owns phone.\nIf dave dislikes apple, then phone is big.\nIf dave is a sibling of frank, then george is a sibling of carol.\nIf it is cold and car is wet and frank is sad, then eve is a sibling of frank.\nIf alice is a parent of alice and carol is a parent of dave, then carol is a parent of eve.\nIf alice owns car and it is sunny and frank likes phone, then eve is hungry.\nIf frank is hungry and george is a parent of frank and eve is happy, then carol likes pencil.\nIf apple is wet, then bob is hungry.\nIf apple is small and alice is a parent of dave and eve is a parent of alice, then alice is a parent of carol.\nIf eve is happy and phone is small, then frank likes car.\nIf alice is hungry, then frank is an enemy of carol.\nIf carol owns book and george is sad and phone is small, then alice is an enemy of alice.\nIf eve is hungry and bob is hungry, then carol is hungry.\nIf carol likes book and carol is an enemy of carol and phone is big, then eve is an enemy of carol.\nIf dave is sad and bob is a friend of eve and book is big, then frank is a sibling of frank.\n\nAnd the following facts:\ngeorge is a sibling of bob.\ngeorge is a friend of dave.\ndave is a friend of carol.\n\nQUESTION:\nIs george is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,ball).",
    "c": "friend(alice,alice) :- sibling(george,bob).\nfriend(dave,eve) :- big(book), cold.\ndislikes(bob,car) :- parent(dave,dave), dislikes(george,phone).\ndislikes(bob,car) :- cold, dislikes(dave,car).\nfriend(eve,bob) :- happy(carol), friend(dave,eve).\nbig(car) :- big(ball), big(phone), big(ball).\nowns(bob,apple) :- hot.\nhot :- hungry(alice), sad(frank), hot.\nhot :- sad(alice).\nowns(alice,phone) :- cold.\nbig(phone) :- dislikes(dave,apple).\nsibling(george,carol) :- sibling(dave,frank).\nsibling(eve,frank) :- cold, wet(car), sad(frank).\nparent(carol,eve) :- parent(alice,alice), parent(carol,dave).\nhungry(eve) :- owns(alice,car), sunny, likes(frank,phone).\nlikes(carol,pencil) :- hungry(frank), parent(george,frank), happy(eve).\nhungry(bob) :- wet(apple).\nparent(alice,carol) :- small(apple), parent(alice,dave), parent(eve,alice).\nlikes(frank,car) :- happy(eve), small(phone).\nenemy(frank,carol) :- hungry(alice).\nenemy(alice,alice) :- owns(carol,book), sad(george), small(phone).\nhungry(carol) :- hungry(eve), hungry(bob).\nenemy(eve,carol) :- likes(carol,book), enemy(carol,carol), big(phone).\nsibling(frank,frank) :- sad(dave), friend(bob,eve), big(book).\nsibling(george,bob).\nfriend(george,dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of bob, then alice is a friend of alice.\nIf book is big and it is cold, then dave is a friend of eve.\nIf dave is a parent of dave and george dislikes phone, then bob dislikes car.\nIf it is cold and dave dislikes car, then bob dislikes car.\nIf carol is happy and dave is a friend of eve, then eve is a friend of bob.\nIf ball is big and phone is big and ball is big, then car is big.\nIf it is hot, then bob owns apple.\nIf alice is hungry and frank is sad and it is hot, then it is hot.\nIf alice is sad, then it is hot.\nIf it is cold, then alice owns phone.\nIf dave dislikes apple, then phone is big.\nIf dave is a sibling of frank, then george is a sibling of carol.\nIf it is cold and car is wet and frank is sad, then eve is a sibling of frank.\nIf alice is a parent of alice and carol is a parent of dave, then carol is a parent of eve.\nIf alice owns car and it is sunny and frank likes phone, then eve is hungry.\nIf frank is hungry and george is a parent of frank and eve is happy, then carol likes pencil.\nIf apple is wet, then bob is hungry.\nIf apple is small and alice is a parent of dave and eve is a parent of alice, then alice is a parent of carol.\nIf eve is happy and phone is small, then frank likes car.\nIf alice is hungry, then frank is an enemy of carol.\nIf carol owns book and george is sad and phone is small, then alice is an enemy of alice.\nIf eve is hungry and bob is hungry, then carol is hungry.\nIf carol likes book and carol is an enemy of carol and phone is big, then eve is an enemy of carol.\nIf dave is sad and bob is a friend of eve and book is big, then frank is a sibling of frank.\n\nAnd the following facts:\ngeorge is a sibling of bob.\ngeorge is a friend of dave.\ndave is a friend of carol.\n\nQUESTION:\nIs carol dislikes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,ball).",
    "c": "friend(alice,alice) :- sibling(george,bob).\nfriend(dave,eve) :- big(book), cold.\ndislikes(bob,car) :- parent(dave,dave), dislikes(george,phone).\ndislikes(bob,car) :- cold, dislikes(dave,car).\nfriend(eve,bob) :- happy(carol), friend(dave,eve).\nbig(car) :- big(ball), big(phone), big(ball).\nowns(bob,apple) :- hot.\nhot :- hungry(alice), sad(frank), hot.\nhot :- sad(alice).\nowns(alice,phone) :- cold.\nbig(phone) :- dislikes(dave,apple).\nsibling(george,carol) :- sibling(dave,frank).\nsibling(eve,frank) :- cold, wet(car), sad(frank).\nparent(carol,eve) :- parent(alice,alice), parent(carol,dave).\nhungry(eve) :- owns(alice,car), sunny, likes(frank,phone).\nlikes(carol,pencil) :- hungry(frank), parent(george,frank), happy(eve).\nhungry(bob) :- wet(apple).\nparent(alice,carol) :- small(apple), parent(alice,dave), parent(eve,alice).\nlikes(frank,car) :- happy(eve), small(phone).\nenemy(frank,carol) :- hungry(alice).\nenemy(alice,alice) :- owns(carol,book), sad(george), small(phone).\nhungry(carol) :- hungry(eve), hungry(bob).\nenemy(eve,carol) :- likes(carol,book), enemy(carol,carol), big(phone).\nsibling(frank,frank) :- sad(dave), friend(bob,eve), big(book).\nsibling(george,bob).\nfriend(george,dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of bob, then alice is a friend of alice.\nIf book is big and it is cold, then dave is a friend of eve.\nIf dave is a parent of dave and george dislikes phone, then bob dislikes car.\nIf it is cold and dave dislikes car, then bob dislikes car.\nIf carol is happy and dave is a friend of eve, then eve is a friend of bob.\nIf ball is big and phone is big and ball is big, then car is big.\nIf it is hot, then bob owns apple.\nIf alice is hungry and frank is sad and it is hot, then it is hot.\nIf alice is sad, then it is hot.\nIf it is cold, then alice owns phone.\nIf dave dislikes apple, then phone is big.\nIf dave is a sibling of frank, then george is a sibling of carol.\nIf it is cold and car is wet and frank is sad, then eve is a sibling of frank.\nIf alice is a parent of alice and carol is a parent of dave, then carol is a parent of eve.\nIf alice owns car and it is sunny and frank likes phone, then eve is hungry.\nIf frank is hungry and george is a parent of frank and eve is happy, then carol likes pencil.\nIf apple is wet, then bob is hungry.\nIf apple is small and alice is a parent of dave and eve is a parent of alice, then alice is a parent of carol.\nIf eve is happy and phone is small, then frank likes car.\nIf alice is hungry, then frank is an enemy of carol.\nIf carol owns book and george is sad and phone is small, then alice is an enemy of alice.\nIf eve is hungry and bob is hungry, then carol is hungry.\nIf carol likes book and carol is an enemy of carol and phone is big, then eve is an enemy of carol.\nIf dave is sad and bob is a friend of eve and book is big, then frank is a sibling of frank.\n\nAnd the following facts:\ngeorge is a sibling of bob.\ngeorge is a friend of dave.\ndave is a friend of carol.\n\nQUESTION:\nIs carol likes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,dave).",
    "c": "friend(alice,alice) :- sibling(george,bob).\nfriend(dave,eve) :- big(book), cold.\ndislikes(bob,car) :- parent(dave,dave), dislikes(george,phone).\ndislikes(bob,car) :- cold, dislikes(dave,car).\nfriend(eve,bob) :- happy(carol), friend(dave,eve).\nbig(car) :- big(ball), big(phone), big(ball).\nowns(bob,apple) :- hot.\nhot :- hungry(alice), sad(frank), hot.\nhot :- sad(alice).\nowns(alice,phone) :- cold.\nbig(phone) :- dislikes(dave,apple).\nsibling(george,carol) :- sibling(dave,frank).\nsibling(eve,frank) :- cold, wet(car), sad(frank).\nparent(carol,eve) :- parent(alice,alice), parent(carol,dave).\nhungry(eve) :- owns(alice,car), sunny, likes(frank,phone).\nlikes(carol,pencil) :- hungry(frank), parent(george,frank), happy(eve).\nhungry(bob) :- wet(apple).\nparent(alice,carol) :- small(apple), parent(alice,dave), parent(eve,alice).\nlikes(frank,car) :- happy(eve), small(phone).\nenemy(frank,carol) :- hungry(alice).\nenemy(alice,alice) :- owns(carol,book), sad(george), small(phone).\nhungry(carol) :- hungry(eve), hungry(bob).\nenemy(eve,carol) :- likes(carol,book), enemy(carol,carol), big(phone).\nsibling(frank,frank) :- sad(dave), friend(bob,eve), big(book).\nsibling(george,bob).\nfriend(george,dave).\nfriend(dave,carol).",
    "natural language": "You are given the following information:\nIf george is a sibling of bob, then alice is a friend of alice.\nIf book is big and it is cold, then dave is a friend of eve.\nIf dave is a parent of dave and george dislikes phone, then bob dislikes car.\nIf it is cold and dave dislikes car, then bob dislikes car.\nIf carol is happy and dave is a friend of eve, then eve is a friend of bob.\nIf ball is big and phone is big and ball is big, then car is big.\nIf it is hot, then bob owns apple.\nIf alice is hungry and frank is sad and it is hot, then it is hot.\nIf alice is sad, then it is hot.\nIf it is cold, then alice owns phone.\nIf dave dislikes apple, then phone is big.\nIf dave is a sibling of frank, then george is a sibling of carol.\nIf it is cold and car is wet and frank is sad, then eve is a sibling of frank.\nIf alice is a parent of alice and carol is a parent of dave, then carol is a parent of eve.\nIf alice owns car and it is sunny and frank likes phone, then eve is hungry.\nIf frank is hungry and george is a parent of frank and eve is happy, then carol likes pencil.\nIf apple is wet, then bob is hungry.\nIf apple is small and alice is a parent of dave and eve is a parent of alice, then alice is a parent of carol.\nIf eve is happy and phone is small, then frank likes car.\nIf alice is hungry, then frank is an enemy of carol.\nIf carol owns book and george is sad and phone is small, then alice is an enemy of alice.\nIf eve is hungry and bob is hungry, then carol is hungry.\nIf carol likes book and carol is an enemy of carol and phone is big, then eve is an enemy of carol.\nIf dave is sad and bob is a friend of eve and book is big, then frank is a sibling of frank.\n\nAnd the following facts:\ngeorge is a sibling of bob.\ngeorge is a friend of dave.\ndave is a friend of carol.\n\nQUESTION:\nIs carol is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "friend(alice,alice) :- sibling(george,bob).\nfriend(dave,eve) :- big(book), cold.\ndislikes(bob,car) :- parent(dave,dave), dislikes(george,phone).\ndislikes(bob,car) :- cold, dislikes(dave,car).\nfriend(eve,bob) :- happy(carol), friend(dave,eve).\nbig(car) :- big(ball), big(phone), big(ball).\nowns(bob,apple) :- hot.\nhot :- hungry(alice), sad(frank), hot.\nhot :- sad(alice).\nowns(alice,phone) :- cold.\nbig(phone) :- dislikes(dave,apple).\nsibling(george,carol) :- sibling(dave,frank).\nsibling(eve,frank) :- cold, wet(car), sad(frank).\nparent(carol,eve) :- parent(alice,alice), parent(carol,dave).\nhungry(eve) :- owns(alice,car), sunny, likes(frank,phone).\nlikes(carol,pencil) :- hungry(frank), parent(george,frank), happy(eve).\nhungry(bob) :- wet(apple).\nparent(alice,carol) :- small(apple), parent(alice,dave), parent(eve,alice).\nlikes(frank,car) :- happy(eve), small(phone).\nenemy(frank,carol) :- hungry(alice).\nenemy(alice,alice) :- owns(carol,book), sad(george), small(phone).\nhungry(carol) :- hungry(eve), hungry(bob).\nenemy(eve,carol) :- likes(carol,book), enemy(carol,carol), big(phone).\nsibling(frank,frank) :- sad(dave), friend(bob,eve), big(book).\nfriend(george,dave).\nfriend(dave,carol).",
    "natural language": "You are given the following rules:\nIf george is a sibling of bob, then alice is a friend of alice.\nIf book is big and it is cold, then dave is a friend of eve.\nIf dave is a parent of dave and george dislikes phone, then bob dislikes car.\nIf it is cold and dave dislikes car, then bob dislikes car.\nIf carol is happy and dave is a friend of eve, then eve is a friend of bob.\nIf ball is big and phone is big and ball is big, then car is big.\nIf it is hot, then bob owns apple.\nIf alice is hungry and frank is sad and it is hot, then it is hot.\nIf alice is sad, then it is hot.\nIf it is cold, then alice owns phone.\nIf dave dislikes apple, then phone is big.\nIf dave is a sibling of frank, then george is a sibling of carol.\nIf it is cold and car is wet and frank is sad, then eve is a sibling of frank.\nIf alice is a parent of alice and carol is a parent of dave, then carol is a parent of eve.\nIf alice owns car and it is sunny and frank likes phone, then eve is hungry.\nIf frank is hungry and george is a parent of frank and eve is happy, then carol likes pencil.\nIf apple is wet, then bob is hungry.\nIf apple is small and alice is a parent of dave and eve is a parent of alice, then alice is a parent of carol.\nIf eve is happy and phone is small, then frank likes car.\nIf alice is hungry, then frank is an enemy of carol.\nIf carol owns book and george is sad and phone is small, then alice is an enemy of alice.\nIf eve is hungry and bob is hungry, then carol is hungry.\nIf carol likes book and carol is an enemy of carol and phone is big, then eve is an enemy of carol.\nIf dave is sad and bob is a friend of eve and book is big, then frank is a sibling of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ndave is a friend of carol.\n\nQUESTION:\nCould george is a sibling of bob explain alice is a friend of alice?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "friend(alice,alice)",
      "explanation": "sibling(george,bob)"
    }
  },
  {
    "q": "friend(dave,carol).",
    "c": "friend(alice,alice) :- sibling(george,bob).\nfriend(dave,eve) :- big(book), cold.\ndislikes(bob,car) :- parent(dave,dave), dislikes(george,phone).\ndislikes(bob,car) :- cold, dislikes(dave,car).\nfriend(eve,bob) :- happy(carol), friend(dave,eve).\nbig(car) :- big(ball), big(phone), big(ball).\nowns(bob,apple) :- hot.\nhot :- hungry(alice), sad(frank), hot.\nhot :- sad(alice).\nowns(alice,phone) :- cold.\nbig(phone) :- dislikes(dave,apple).\nsibling(george,carol) :- sibling(dave,frank).\nsibling(eve,frank) :- cold, wet(car), sad(frank).\nparent(carol,eve) :- parent(alice,alice), parent(carol,dave).\nhungry(eve) :- owns(alice,car), sunny, likes(frank,phone).\nlikes(carol,pencil) :- hungry(frank), parent(george,frank), happy(eve).\nhungry(bob) :- wet(apple).\nparent(alice,carol) :- small(apple), parent(alice,dave), parent(eve,alice).\nlikes(frank,car) :- happy(eve), small(phone).\nenemy(frank,carol) :- hungry(alice).\nenemy(alice,alice) :- owns(carol,book), sad(george), small(phone).\nhungry(carol) :- hungry(eve), hungry(bob).\nenemy(eve,carol) :- likes(carol,book), enemy(carol,carol), big(phone).\nsibling(frank,frank) :- sad(dave), friend(bob,eve), big(book).\nfriend(george,dave).\nfriend(dave,carol).",
    "natural language": "You are given the following rules:\nIf george is a sibling of bob, then alice is a friend of alice.\nIf book is big and it is cold, then dave is a friend of eve.\nIf dave is a parent of dave and george dislikes phone, then bob dislikes car.\nIf it is cold and dave dislikes car, then bob dislikes car.\nIf carol is happy and dave is a friend of eve, then eve is a friend of bob.\nIf ball is big and phone is big and ball is big, then car is big.\nIf it is hot, then bob owns apple.\nIf alice is hungry and frank is sad and it is hot, then it is hot.\nIf alice is sad, then it is hot.\nIf it is cold, then alice owns phone.\nIf dave dislikes apple, then phone is big.\nIf dave is a sibling of frank, then george is a sibling of carol.\nIf it is cold and car is wet and frank is sad, then eve is a sibling of frank.\nIf alice is a parent of alice and carol is a parent of dave, then carol is a parent of eve.\nIf alice owns car and it is sunny and frank likes phone, then eve is hungry.\nIf frank is hungry and george is a parent of frank and eve is happy, then carol likes pencil.\nIf apple is wet, then bob is hungry.\nIf apple is small and alice is a parent of dave and eve is a parent of alice, then alice is a parent of carol.\nIf eve is happy and phone is small, then frank likes car.\nIf alice is hungry, then frank is an enemy of carol.\nIf carol owns book and george is sad and phone is small, then alice is an enemy of alice.\nIf eve is hungry and bob is hungry, then carol is hungry.\nIf carol likes book and carol is an enemy of carol and phone is big, then eve is an enemy of carol.\nIf dave is sad and bob is a friend of eve and book is big, then frank is a sibling of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ndave is a friend of carol.\n\nQUESTION:\nCould dave is a friend of carol explain alice is a friend of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "friend(alice,alice)",
      "non_explanation": "friend(dave,carol)"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "friend(alice,alice) :- sibling(george,bob).\nfriend(dave,eve) :- big(book), cold.\ndislikes(bob,car) :- parent(dave,dave), dislikes(george,phone).\ndislikes(bob,car) :- cold, dislikes(dave,car).\nfriend(eve,bob) :- happy(carol), friend(dave,eve).\nbig(car) :- big(ball), big(phone), big(ball).\nowns(bob,apple) :- hot.\nhot :- hungry(alice), sad(frank), hot.\nhot :- sad(alice).\nowns(alice,phone) :- cold.\nbig(phone) :- dislikes(dave,apple).\nsibling(george,carol) :- sibling(dave,frank).\nsibling(eve,frank) :- cold, wet(car), sad(frank).\nparent(carol,eve) :- parent(alice,alice), parent(carol,dave).\nhungry(eve) :- owns(alice,car), sunny, likes(frank,phone).\nlikes(carol,pencil) :- hungry(frank), parent(george,frank), happy(eve).\nhungry(bob) :- wet(apple).\nparent(alice,carol) :- small(apple), parent(alice,dave), parent(eve,alice).\nlikes(frank,car) :- happy(eve), small(phone).\nenemy(frank,carol) :- hungry(alice).\nenemy(alice,alice) :- owns(carol,book), sad(george), small(phone).\nhungry(carol) :- hungry(eve), hungry(bob).\nenemy(eve,carol) :- likes(carol,book), enemy(carol,carol), big(phone).\nsibling(frank,frank) :- sad(dave), friend(bob,eve), big(book).\nfriend(george,dave).\nfriend(dave,carol).",
    "natural language": "You are given the following rules:\nIf george is a sibling of bob, then alice is a friend of alice.\nIf book is big and it is cold, then dave is a friend of eve.\nIf dave is a parent of dave and george dislikes phone, then bob dislikes car.\nIf it is cold and dave dislikes car, then bob dislikes car.\nIf carol is happy and dave is a friend of eve, then eve is a friend of bob.\nIf ball is big and phone is big and ball is big, then car is big.\nIf it is hot, then bob owns apple.\nIf alice is hungry and frank is sad and it is hot, then it is hot.\nIf alice is sad, then it is hot.\nIf it is cold, then alice owns phone.\nIf dave dislikes apple, then phone is big.\nIf dave is a sibling of frank, then george is a sibling of carol.\nIf it is cold and car is wet and frank is sad, then eve is a sibling of frank.\nIf alice is a parent of alice and carol is a parent of dave, then carol is a parent of eve.\nIf alice owns car and it is sunny and frank likes phone, then eve is hungry.\nIf frank is hungry and george is a parent of frank and eve is happy, then carol likes pencil.\nIf apple is wet, then bob is hungry.\nIf apple is small and alice is a parent of dave and eve is a parent of alice, then alice is a parent of carol.\nIf eve is happy and phone is small, then frank likes car.\nIf alice is hungry, then frank is an enemy of carol.\nIf carol owns book and george is sad and phone is small, then alice is an enemy of alice.\nIf eve is hungry and bob is hungry, then carol is hungry.\nIf carol likes book and carol is an enemy of carol and phone is big, then eve is an enemy of carol.\nIf dave is sad and bob is a friend of eve and book is big, then frank is a sibling of frank.\n\nAnd the following facts:\ngeorge is a friend of dave.\ndave is a friend of carol.\n\nQUESTION:\nCould george is a friend of dave explain alice is a friend of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "friend(alice,alice)",
      "non_explanation": "friend(george,dave)"
    }
  },
  {
    "q": "parent(bob,carol).",
    "c": "dislikes(george,book) :- sibling(frank,eve).\nfriend(eve,eve) :- wet(pencil), sad(dave), sad(dave).\nwet(pencil) :- parent(bob,alice).\nfriend(alice,dave) :- likes(frank,pencil), wet(car), hungry(bob).\nhungry(carol) :- tall(frank), cold, tall(alice).\nhungry(eve) :- tall(george).\nparent(bob,eve) :- wet(book).\nparent(george,alice) :- parent(dave,dave).\nsunny :- sunny, owns(dave,apple), likes(dave,phone).\ncold :- parent(dave,bob), hungry(frank).\ndislikes(bob,book) :- happy(eve), owns(bob,apple), hungry(frank).\ndislikes(bob,ball) :- enemy(frank,frank).\nsunny :- big(car), sad(frank).\nbig(ball) :- sad(bob), parent(carol,alice).\ncold :- small(pencil), owns(frank,car), sibling(eve,eve).\nfriend(alice,eve) :- owns(frank,apple).\nwet(apple) :- sibling(bob,george), enemy(dave,eve).\nsibling(george,carol) :- wet(book), sad(carol).\nbig(car) :- sad(alice), hungry(bob).\nsibling(carol,carol) :- small(phone), happy(eve), tall(carol).\nhappy(eve) :- enemy(alice,bob).\nparent(george,bob) :- wet(ball).\nhappy(frank) :- happy(frank), hot.\nowns(bob,pencil) :- parent(carol,dave), owns(george,car).\nsibling(frank,eve).\nfriend(carol,frank).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of eve, then george dislikes book.\nIf pencil is wet and dave is sad and dave is sad, then eve is a friend of eve.\nIf bob is a parent of alice, then pencil is wet.\nIf frank likes pencil and car is wet and bob is hungry, then alice is a friend of dave.\nIf frank is tall and it is cold and alice is tall, then carol is hungry.\nIf george is tall, then eve is hungry.\nIf book is wet, then bob is a parent of eve.\nIf dave is a parent of dave, then george is a parent of alice.\nIf it is sunny and dave owns apple and dave likes phone, then it is sunny.\nIf dave is a parent of bob and frank is hungry, then it is cold.\nIf eve is happy and bob owns apple and frank is hungry, then bob dislikes book.\nIf frank is an enemy of frank, then bob dislikes ball.\nIf car is big and frank is sad, then it is sunny.\nIf bob is sad and carol is a parent of alice, then ball is big.\nIf pencil is small and frank owns car and eve is a sibling of eve, then it is cold.\nIf frank owns apple, then alice is a friend of eve.\nIf bob is a sibling of george and dave is an enemy of eve, then apple is wet.\nIf book is wet and carol is sad, then george is a sibling of carol.\nIf alice is sad and bob is hungry, then car is big.\nIf phone is small and eve is happy and carol is tall, then carol is a sibling of carol.\nIf alice is an enemy of bob, then eve is happy.\nIf ball is wet, then george is a parent of bob.\nIf frank is happy and it is hot, then frank is happy.\nIf carol is a parent of dave and george owns car, then bob owns pencil.\n\nAnd the following facts:\nfrank is a sibling of eve.\ncarol is a friend of frank.\nbob is a parent of carol.\n\nQUESTION:\nIs bob is a parent of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,book).",
    "c": "dislikes(george,book) :- sibling(frank,eve).\nfriend(eve,eve) :- wet(pencil), sad(dave), sad(dave).\nwet(pencil) :- parent(bob,alice).\nfriend(alice,dave) :- likes(frank,pencil), wet(car), hungry(bob).\nhungry(carol) :- tall(frank), cold, tall(alice).\nhungry(eve) :- tall(george).\nparent(bob,eve) :- wet(book).\nparent(george,alice) :- parent(dave,dave).\nsunny :- sunny, owns(dave,apple), likes(dave,phone).\ncold :- parent(dave,bob), hungry(frank).\ndislikes(bob,book) :- happy(eve), owns(bob,apple), hungry(frank).\ndislikes(bob,ball) :- enemy(frank,frank).\nsunny :- big(car), sad(frank).\nbig(ball) :- sad(bob), parent(carol,alice).\ncold :- small(pencil), owns(frank,car), sibling(eve,eve).\nfriend(alice,eve) :- owns(frank,apple).\nwet(apple) :- sibling(bob,george), enemy(dave,eve).\nsibling(george,carol) :- wet(book), sad(carol).\nbig(car) :- sad(alice), hungry(bob).\nsibling(carol,carol) :- small(phone), happy(eve), tall(carol).\nhappy(eve) :- enemy(alice,bob).\nparent(george,bob) :- wet(ball).\nhappy(frank) :- happy(frank), hot.\nowns(bob,pencil) :- parent(carol,dave), owns(george,car).\nsibling(frank,eve).\nfriend(carol,frank).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of eve, then george dislikes book.\nIf pencil is wet and dave is sad and dave is sad, then eve is a friend of eve.\nIf bob is a parent of alice, then pencil is wet.\nIf frank likes pencil and car is wet and bob is hungry, then alice is a friend of dave.\nIf frank is tall and it is cold and alice is tall, then carol is hungry.\nIf george is tall, then eve is hungry.\nIf book is wet, then bob is a parent of eve.\nIf dave is a parent of dave, then george is a parent of alice.\nIf it is sunny and dave owns apple and dave likes phone, then it is sunny.\nIf dave is a parent of bob and frank is hungry, then it is cold.\nIf eve is happy and bob owns apple and frank is hungry, then bob dislikes book.\nIf frank is an enemy of frank, then bob dislikes ball.\nIf car is big and frank is sad, then it is sunny.\nIf bob is sad and carol is a parent of alice, then ball is big.\nIf pencil is small and frank owns car and eve is a sibling of eve, then it is cold.\nIf frank owns apple, then alice is a friend of eve.\nIf bob is a sibling of george and dave is an enemy of eve, then apple is wet.\nIf book is wet and carol is sad, then george is a sibling of carol.\nIf alice is sad and bob is hungry, then car is big.\nIf phone is small and eve is happy and carol is tall, then carol is a sibling of carol.\nIf alice is an enemy of bob, then eve is happy.\nIf ball is wet, then george is a parent of bob.\nIf frank is happy and it is hot, then frank is happy.\nIf carol is a parent of dave and george owns car, then bob owns pencil.\n\nAnd the following facts:\nfrank is a sibling of eve.\ncarol is a friend of frank.\nbob is a parent of carol.\n\nQUESTION:\nIs george dislikes book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,carol).",
    "c": "dislikes(george,book) :- sibling(frank,eve).\nfriend(eve,eve) :- wet(pencil), sad(dave), sad(dave).\nwet(pencil) :- parent(bob,alice).\nfriend(alice,dave) :- likes(frank,pencil), wet(car), hungry(bob).\nhungry(carol) :- tall(frank), cold, tall(alice).\nhungry(eve) :- tall(george).\nparent(bob,eve) :- wet(book).\nparent(george,alice) :- parent(dave,dave).\nsunny :- sunny, owns(dave,apple), likes(dave,phone).\ncold :- parent(dave,bob), hungry(frank).\ndislikes(bob,book) :- happy(eve), owns(bob,apple), hungry(frank).\ndislikes(bob,ball) :- enemy(frank,frank).\nsunny :- big(car), sad(frank).\nbig(ball) :- sad(bob), parent(carol,alice).\ncold :- small(pencil), owns(frank,car), sibling(eve,eve).\nfriend(alice,eve) :- owns(frank,apple).\nwet(apple) :- sibling(bob,george), enemy(dave,eve).\nsibling(george,carol) :- wet(book), sad(carol).\nbig(car) :- sad(alice), hungry(bob).\nsibling(carol,carol) :- small(phone), happy(eve), tall(carol).\nhappy(eve) :- enemy(alice,bob).\nparent(george,bob) :- wet(ball).\nhappy(frank) :- happy(frank), hot.\nowns(bob,pencil) :- parent(carol,dave), owns(george,car).\nsibling(frank,eve).\nfriend(carol,frank).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of eve, then george dislikes book.\nIf pencil is wet and dave is sad and dave is sad, then eve is a friend of eve.\nIf bob is a parent of alice, then pencil is wet.\nIf frank likes pencil and car is wet and bob is hungry, then alice is a friend of dave.\nIf frank is tall and it is cold and alice is tall, then carol is hungry.\nIf george is tall, then eve is hungry.\nIf book is wet, then bob is a parent of eve.\nIf dave is a parent of dave, then george is a parent of alice.\nIf it is sunny and dave owns apple and dave likes phone, then it is sunny.\nIf dave is a parent of bob and frank is hungry, then it is cold.\nIf eve is happy and bob owns apple and frank is hungry, then bob dislikes book.\nIf frank is an enemy of frank, then bob dislikes ball.\nIf car is big and frank is sad, then it is sunny.\nIf bob is sad and carol is a parent of alice, then ball is big.\nIf pencil is small and frank owns car and eve is a sibling of eve, then it is cold.\nIf frank owns apple, then alice is a friend of eve.\nIf bob is a sibling of george and dave is an enemy of eve, then apple is wet.\nIf book is wet and carol is sad, then george is a sibling of carol.\nIf alice is sad and bob is hungry, then car is big.\nIf phone is small and eve is happy and carol is tall, then carol is a sibling of carol.\nIf alice is an enemy of bob, then eve is happy.\nIf ball is wet, then george is a parent of bob.\nIf frank is happy and it is hot, then frank is happy.\nIf carol is a parent of dave and george owns car, then bob owns pencil.\n\nAnd the following facts:\nfrank is a sibling of eve.\ncarol is a friend of frank.\nbob is a parent of carol.\n\nQUESTION:\nIs alice is a sibling of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,phone).",
    "c": "dislikes(george,book) :- sibling(frank,eve).\nfriend(eve,eve) :- wet(pencil), sad(dave), sad(dave).\nwet(pencil) :- parent(bob,alice).\nfriend(alice,dave) :- likes(frank,pencil), wet(car), hungry(bob).\nhungry(carol) :- tall(frank), cold, tall(alice).\nhungry(eve) :- tall(george).\nparent(bob,eve) :- wet(book).\nparent(george,alice) :- parent(dave,dave).\nsunny :- sunny, owns(dave,apple), likes(dave,phone).\ncold :- parent(dave,bob), hungry(frank).\ndislikes(bob,book) :- happy(eve), owns(bob,apple), hungry(frank).\ndislikes(bob,ball) :- enemy(frank,frank).\nsunny :- big(car), sad(frank).\nbig(ball) :- sad(bob), parent(carol,alice).\ncold :- small(pencil), owns(frank,car), sibling(eve,eve).\nfriend(alice,eve) :- owns(frank,apple).\nwet(apple) :- sibling(bob,george), enemy(dave,eve).\nsibling(george,carol) :- wet(book), sad(carol).\nbig(car) :- sad(alice), hungry(bob).\nsibling(carol,carol) :- small(phone), happy(eve), tall(carol).\nhappy(eve) :- enemy(alice,bob).\nparent(george,bob) :- wet(ball).\nhappy(frank) :- happy(frank), hot.\nowns(bob,pencil) :- parent(carol,dave), owns(george,car).\nsibling(frank,eve).\nfriend(carol,frank).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of eve, then george dislikes book.\nIf pencil is wet and dave is sad and dave is sad, then eve is a friend of eve.\nIf bob is a parent of alice, then pencil is wet.\nIf frank likes pencil and car is wet and bob is hungry, then alice is a friend of dave.\nIf frank is tall and it is cold and alice is tall, then carol is hungry.\nIf george is tall, then eve is hungry.\nIf book is wet, then bob is a parent of eve.\nIf dave is a parent of dave, then george is a parent of alice.\nIf it is sunny and dave owns apple and dave likes phone, then it is sunny.\nIf dave is a parent of bob and frank is hungry, then it is cold.\nIf eve is happy and bob owns apple and frank is hungry, then bob dislikes book.\nIf frank is an enemy of frank, then bob dislikes ball.\nIf car is big and frank is sad, then it is sunny.\nIf bob is sad and carol is a parent of alice, then ball is big.\nIf pencil is small and frank owns car and eve is a sibling of eve, then it is cold.\nIf frank owns apple, then alice is a friend of eve.\nIf bob is a sibling of george and dave is an enemy of eve, then apple is wet.\nIf book is wet and carol is sad, then george is a sibling of carol.\nIf alice is sad and bob is hungry, then car is big.\nIf phone is small and eve is happy and carol is tall, then carol is a sibling of carol.\nIf alice is an enemy of bob, then eve is happy.\nIf ball is wet, then george is a parent of bob.\nIf frank is happy and it is hot, then frank is happy.\nIf carol is a parent of dave and george owns car, then bob owns pencil.\n\nAnd the following facts:\nfrank is a sibling of eve.\ncarol is a friend of frank.\nbob is a parent of carol.\n\nQUESTION:\nIs eve owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,pencil).",
    "c": "dislikes(george,book) :- sibling(frank,eve).\nfriend(eve,eve) :- wet(pencil), sad(dave), sad(dave).\nwet(pencil) :- parent(bob,alice).\nfriend(alice,dave) :- likes(frank,pencil), wet(car), hungry(bob).\nhungry(carol) :- tall(frank), cold, tall(alice).\nhungry(eve) :- tall(george).\nparent(bob,eve) :- wet(book).\nparent(george,alice) :- parent(dave,dave).\nsunny :- sunny, owns(dave,apple), likes(dave,phone).\ncold :- parent(dave,bob), hungry(frank).\ndislikes(bob,book) :- happy(eve), owns(bob,apple), hungry(frank).\ndislikes(bob,ball) :- enemy(frank,frank).\nsunny :- big(car), sad(frank).\nbig(ball) :- sad(bob), parent(carol,alice).\ncold :- small(pencil), owns(frank,car), sibling(eve,eve).\nfriend(alice,eve) :- owns(frank,apple).\nwet(apple) :- sibling(bob,george), enemy(dave,eve).\nsibling(george,carol) :- wet(book), sad(carol).\nbig(car) :- sad(alice), hungry(bob).\nsibling(carol,carol) :- small(phone), happy(eve), tall(carol).\nhappy(eve) :- enemy(alice,bob).\nparent(george,bob) :- wet(ball).\nhappy(frank) :- happy(frank), hot.\nowns(bob,pencil) :- parent(carol,dave), owns(george,car).\nsibling(frank,eve).\nfriend(carol,frank).\nparent(bob,carol).",
    "natural language": "You are given the following information:\nIf frank is a sibling of eve, then george dislikes book.\nIf pencil is wet and dave is sad and dave is sad, then eve is a friend of eve.\nIf bob is a parent of alice, then pencil is wet.\nIf frank likes pencil and car is wet and bob is hungry, then alice is a friend of dave.\nIf frank is tall and it is cold and alice is tall, then carol is hungry.\nIf george is tall, then eve is hungry.\nIf book is wet, then bob is a parent of eve.\nIf dave is a parent of dave, then george is a parent of alice.\nIf it is sunny and dave owns apple and dave likes phone, then it is sunny.\nIf dave is a parent of bob and frank is hungry, then it is cold.\nIf eve is happy and bob owns apple and frank is hungry, then bob dislikes book.\nIf frank is an enemy of frank, then bob dislikes ball.\nIf car is big and frank is sad, then it is sunny.\nIf bob is sad and carol is a parent of alice, then ball is big.\nIf pencil is small and frank owns car and eve is a sibling of eve, then it is cold.\nIf frank owns apple, then alice is a friend of eve.\nIf bob is a sibling of george and dave is an enemy of eve, then apple is wet.\nIf book is wet and carol is sad, then george is a sibling of carol.\nIf alice is sad and bob is hungry, then car is big.\nIf phone is small and eve is happy and carol is tall, then carol is a sibling of carol.\nIf alice is an enemy of bob, then eve is happy.\nIf ball is wet, then george is a parent of bob.\nIf frank is happy and it is hot, then frank is happy.\nIf carol is a parent of dave and george owns car, then bob owns pencil.\n\nAnd the following facts:\nfrank is a sibling of eve.\ncarol is a friend of frank.\nbob is a parent of carol.\n\nQUESTION:\nIs george dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,eve).",
    "c": "dislikes(george,book) :- sibling(frank,eve).\nfriend(eve,eve) :- wet(pencil), sad(dave), sad(dave).\nwet(pencil) :- parent(bob,alice).\nfriend(alice,dave) :- likes(frank,pencil), wet(car), hungry(bob).\nhungry(carol) :- tall(frank), cold, tall(alice).\nhungry(eve) :- tall(george).\nparent(bob,eve) :- wet(book).\nparent(george,alice) :- parent(dave,dave).\nsunny :- sunny, owns(dave,apple), likes(dave,phone).\ncold :- parent(dave,bob), hungry(frank).\ndislikes(bob,book) :- happy(eve), owns(bob,apple), hungry(frank).\ndislikes(bob,ball) :- enemy(frank,frank).\nsunny :- big(car), sad(frank).\nbig(ball) :- sad(bob), parent(carol,alice).\ncold :- small(pencil), owns(frank,car), sibling(eve,eve).\nfriend(alice,eve) :- owns(frank,apple).\nwet(apple) :- sibling(bob,george), enemy(dave,eve).\nsibling(george,carol) :- wet(book), sad(carol).\nbig(car) :- sad(alice), hungry(bob).\nsibling(carol,carol) :- small(phone), happy(eve), tall(carol).\nhappy(eve) :- enemy(alice,bob).\nparent(george,bob) :- wet(ball).\nhappy(frank) :- happy(frank), hot.\nowns(bob,pencil) :- parent(carol,dave), owns(george,car).\nfriend(carol,frank).\nparent(bob,carol).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of eve, then george dislikes book.\nIf pencil is wet and dave is sad and dave is sad, then eve is a friend of eve.\nIf bob is a parent of alice, then pencil is wet.\nIf frank likes pencil and car is wet and bob is hungry, then alice is a friend of dave.\nIf frank is tall and it is cold and alice is tall, then carol is hungry.\nIf george is tall, then eve is hungry.\nIf book is wet, then bob is a parent of eve.\nIf dave is a parent of dave, then george is a parent of alice.\nIf it is sunny and dave owns apple and dave likes phone, then it is sunny.\nIf dave is a parent of bob and frank is hungry, then it is cold.\nIf eve is happy and bob owns apple and frank is hungry, then bob dislikes book.\nIf frank is an enemy of frank, then bob dislikes ball.\nIf car is big and frank is sad, then it is sunny.\nIf bob is sad and carol is a parent of alice, then ball is big.\nIf pencil is small and frank owns car and eve is a sibling of eve, then it is cold.\nIf frank owns apple, then alice is a friend of eve.\nIf bob is a sibling of george and dave is an enemy of eve, then apple is wet.\nIf book is wet and carol is sad, then george is a sibling of carol.\nIf alice is sad and bob is hungry, then car is big.\nIf phone is small and eve is happy and carol is tall, then carol is a sibling of carol.\nIf alice is an enemy of bob, then eve is happy.\nIf ball is wet, then george is a parent of bob.\nIf frank is happy and it is hot, then frank is happy.\nIf carol is a parent of dave and george owns car, then bob owns pencil.\n\nAnd the following facts:\ncarol is a friend of frank.\nbob is a parent of carol.\n\nQUESTION:\nCould frank is a sibling of eve explain george dislikes book?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,book)",
      "explanation": "sibling(frank,eve)"
    }
  },
  {
    "q": "parent(bob,carol).",
    "c": "dislikes(george,book) :- sibling(frank,eve).\nfriend(eve,eve) :- wet(pencil), sad(dave), sad(dave).\nwet(pencil) :- parent(bob,alice).\nfriend(alice,dave) :- likes(frank,pencil), wet(car), hungry(bob).\nhungry(carol) :- tall(frank), cold, tall(alice).\nhungry(eve) :- tall(george).\nparent(bob,eve) :- wet(book).\nparent(george,alice) :- parent(dave,dave).\nsunny :- sunny, owns(dave,apple), likes(dave,phone).\ncold :- parent(dave,bob), hungry(frank).\ndislikes(bob,book) :- happy(eve), owns(bob,apple), hungry(frank).\ndislikes(bob,ball) :- enemy(frank,frank).\nsunny :- big(car), sad(frank).\nbig(ball) :- sad(bob), parent(carol,alice).\ncold :- small(pencil), owns(frank,car), sibling(eve,eve).\nfriend(alice,eve) :- owns(frank,apple).\nwet(apple) :- sibling(bob,george), enemy(dave,eve).\nsibling(george,carol) :- wet(book), sad(carol).\nbig(car) :- sad(alice), hungry(bob).\nsibling(carol,carol) :- small(phone), happy(eve), tall(carol).\nhappy(eve) :- enemy(alice,bob).\nparent(george,bob) :- wet(ball).\nhappy(frank) :- happy(frank), hot.\nowns(bob,pencil) :- parent(carol,dave), owns(george,car).\nfriend(carol,frank).\nparent(bob,carol).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of eve, then george dislikes book.\nIf pencil is wet and dave is sad and dave is sad, then eve is a friend of eve.\nIf bob is a parent of alice, then pencil is wet.\nIf frank likes pencil and car is wet and bob is hungry, then alice is a friend of dave.\nIf frank is tall and it is cold and alice is tall, then carol is hungry.\nIf george is tall, then eve is hungry.\nIf book is wet, then bob is a parent of eve.\nIf dave is a parent of dave, then george is a parent of alice.\nIf it is sunny and dave owns apple and dave likes phone, then it is sunny.\nIf dave is a parent of bob and frank is hungry, then it is cold.\nIf eve is happy and bob owns apple and frank is hungry, then bob dislikes book.\nIf frank is an enemy of frank, then bob dislikes ball.\nIf car is big and frank is sad, then it is sunny.\nIf bob is sad and carol is a parent of alice, then ball is big.\nIf pencil is small and frank owns car and eve is a sibling of eve, then it is cold.\nIf frank owns apple, then alice is a friend of eve.\nIf bob is a sibling of george and dave is an enemy of eve, then apple is wet.\nIf book is wet and carol is sad, then george is a sibling of carol.\nIf alice is sad and bob is hungry, then car is big.\nIf phone is small and eve is happy and carol is tall, then carol is a sibling of carol.\nIf alice is an enemy of bob, then eve is happy.\nIf ball is wet, then george is a parent of bob.\nIf frank is happy and it is hot, then frank is happy.\nIf carol is a parent of dave and george owns car, then bob owns pencil.\n\nAnd the following facts:\ncarol is a friend of frank.\nbob is a parent of carol.\n\nQUESTION:\nCould bob is a parent of carol explain george dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,book)",
      "non_explanation": "parent(bob,carol)"
    }
  },
  {
    "q": "friend(carol,frank).",
    "c": "dislikes(george,book) :- sibling(frank,eve).\nfriend(eve,eve) :- wet(pencil), sad(dave), sad(dave).\nwet(pencil) :- parent(bob,alice).\nfriend(alice,dave) :- likes(frank,pencil), wet(car), hungry(bob).\nhungry(carol) :- tall(frank), cold, tall(alice).\nhungry(eve) :- tall(george).\nparent(bob,eve) :- wet(book).\nparent(george,alice) :- parent(dave,dave).\nsunny :- sunny, owns(dave,apple), likes(dave,phone).\ncold :- parent(dave,bob), hungry(frank).\ndislikes(bob,book) :- happy(eve), owns(bob,apple), hungry(frank).\ndislikes(bob,ball) :- enemy(frank,frank).\nsunny :- big(car), sad(frank).\nbig(ball) :- sad(bob), parent(carol,alice).\ncold :- small(pencil), owns(frank,car), sibling(eve,eve).\nfriend(alice,eve) :- owns(frank,apple).\nwet(apple) :- sibling(bob,george), enemy(dave,eve).\nsibling(george,carol) :- wet(book), sad(carol).\nbig(car) :- sad(alice), hungry(bob).\nsibling(carol,carol) :- small(phone), happy(eve), tall(carol).\nhappy(eve) :- enemy(alice,bob).\nparent(george,bob) :- wet(ball).\nhappy(frank) :- happy(frank), hot.\nowns(bob,pencil) :- parent(carol,dave), owns(george,car).\nfriend(carol,frank).\nparent(bob,carol).",
    "natural language": "You are given the following rules:\nIf frank is a sibling of eve, then george dislikes book.\nIf pencil is wet and dave is sad and dave is sad, then eve is a friend of eve.\nIf bob is a parent of alice, then pencil is wet.\nIf frank likes pencil and car is wet and bob is hungry, then alice is a friend of dave.\nIf frank is tall and it is cold and alice is tall, then carol is hungry.\nIf george is tall, then eve is hungry.\nIf book is wet, then bob is a parent of eve.\nIf dave is a parent of dave, then george is a parent of alice.\nIf it is sunny and dave owns apple and dave likes phone, then it is sunny.\nIf dave is a parent of bob and frank is hungry, then it is cold.\nIf eve is happy and bob owns apple and frank is hungry, then bob dislikes book.\nIf frank is an enemy of frank, then bob dislikes ball.\nIf car is big and frank is sad, then it is sunny.\nIf bob is sad and carol is a parent of alice, then ball is big.\nIf pencil is small and frank owns car and eve is a sibling of eve, then it is cold.\nIf frank owns apple, then alice is a friend of eve.\nIf bob is a sibling of george and dave is an enemy of eve, then apple is wet.\nIf book is wet and carol is sad, then george is a sibling of carol.\nIf alice is sad and bob is hungry, then car is big.\nIf phone is small and eve is happy and carol is tall, then carol is a sibling of carol.\nIf alice is an enemy of bob, then eve is happy.\nIf ball is wet, then george is a parent of bob.\nIf frank is happy and it is hot, then frank is happy.\nIf carol is a parent of dave and george owns car, then bob owns pencil.\n\nAnd the following facts:\ncarol is a friend of frank.\nbob is a parent of carol.\n\nQUESTION:\nCould carol is a friend of frank explain george dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,book)",
      "non_explanation": "friend(carol,frank)"
    }
  },
  {
    "q": "sad(dave).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nsmall(ball).\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following information:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nball is small.\nfrank owns car.\nalice is tall.\n\nQUESTION:\nIs dave is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,dave).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nsmall(ball).\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following information:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nball is small.\nfrank owns car.\nalice is tall.\n\nQUESTION:\nIs carol is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,carol).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nsmall(ball).\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following information:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nball is small.\nfrank owns car.\nalice is tall.\n\nQUESTION:\nIs frank is a sibling of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,dave).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nsmall(ball).\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following information:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nball is small.\nfrank owns car.\nalice is tall.\n\nQUESTION:\nIs bob is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,book).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nsmall(ball).\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following information:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nball is small.\nfrank owns car.\nalice is tall.\n\nQUESTION:\nIs dave owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(ball).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following rules:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nfrank owns car.\nalice is tall.\n\nQUESTION:\nCould ball is small explain carol is a sibling of dave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,dave)",
      "explanation": "small(ball)"
    }
  },
  {
    "q": "small(ball).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following rules:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nfrank owns car.\nalice is tall.\n\nQUESTION:\nCould ball is small explain dave is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "explanation": "small(ball)"
    }
  },
  {
    "q": "tall(alice).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following rules:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nfrank owns car.\nalice is tall.\n\nQUESTION:\nCould alice is tall explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "tall(alice)"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following rules:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nfrank owns car.\nalice is tall.\n\nQUESTION:\nCould frank owns car explain carol is a sibling of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(carol,dave)",
      "non_explanation": "owns(frank,car)"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "hungry(eve) :- small(ball).\nsibling(carol,dave) :- hungry(eve).\ndislikes(frank,apple) :- sibling(carol,dave).\nsad(dave) :- dislikes(frank,apple).\nowns(bob,ball) :- sad(dave).\ntall(eve) :- cold.\nhappy(eve) :- happy(george), dislikes(george,pencil), friend(dave,dave).\ntall(frank) :- tall(dave).\ntall(eve) :- tall(frank), happy(bob), happy(dave).\nhappy(frank) :- happy(dave).\nsibling(george,george) :- likes(alice,car), happy(bob), likes(george,apple).\nlikes(eve,book) :- likes(carol,apple), sunny.\nsibling(george,carol) :- happy(frank), sibling(george,alice).\nsunny :- hot, dislikes(carol,book).\ntall(bob) :- tall(alice), cold, small(ball).\nlikes(eve,pencil) :- enemy(bob,george), likes(carol,pencil).\nwet(phone) :- wet(book), friend(carol,alice), parent(george,alice).\nsunny :- enemy(carol,dave), happy(george), sunny.\nsunny :- sunny, sunny.\nwet(phone) :- small(book).\nenemy(george,eve) :- likes(bob,pencil).\nenemy(eve,alice) :- parent(bob,carol), parent(george,carol), likes(dave,apple).\nsibling(george,dave) :- sibling(alice,carol), hot.\nsunny :- dislikes(george,ball), sibling(bob,bob), cold.\nowns(frank,car).\ntall(alice).",
    "natural language": "You are given the following rules:\nIf ball is small, then eve is hungry.\nIf eve is hungry, then carol is a sibling of dave.\nIf carol is a sibling of dave, then frank dislikes apple.\nIf frank dislikes apple, then dave is sad.\nIf dave is sad, then bob owns ball.\nIf it is cold, then eve is tall.\nIf george is happy and george dislikes pencil and dave is a friend of dave, then eve is happy.\nIf dave is tall, then frank is tall.\nIf frank is tall and bob is happy and dave is happy, then eve is tall.\nIf dave is happy, then frank is happy.\nIf alice likes car and bob is happy and george likes apple, then george is a sibling of george.\nIf carol likes apple and it is sunny, then eve likes book.\nIf frank is happy and george is a sibling of alice, then george is a sibling of carol.\nIf it is hot and carol dislikes book, then it is sunny.\nIf alice is tall and it is cold and ball is small, then bob is tall.\nIf bob is an enemy of george and carol likes pencil, then eve likes pencil.\nIf book is wet and carol is a friend of alice and george is a parent of alice, then phone is wet.\nIf carol is an enemy of dave and george is happy and it is sunny, then it is sunny.\nIf it is sunny and it is sunny, then it is sunny.\nIf book is small, then phone is wet.\nIf bob likes pencil, then george is an enemy of eve.\nIf bob is a parent of carol and george is a parent of carol and dave likes apple, then eve is an enemy of alice.\nIf alice is a sibling of carol and it is hot, then george is a sibling of dave.\nIf george dislikes ball and bob is a sibling of bob and it is cold, then it is sunny.\n\nAnd the following facts:\nfrank owns car.\nalice is tall.\n\nQUESTION:\nCould frank owns car explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "owns(frank,car)"
    }
  },
  {
    "q": "hot.",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nowns(eve,ball).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\neve owns ball.\napple is big.\ngeorge owns apple.\n\nQUESTION:\nIs it is hot true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,pencil).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nowns(eve,ball).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\neve owns ball.\napple is big.\ngeorge owns apple.\n\nQUESTION:\nIs eve owns pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nowns(eve,ball).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\neve owns ball.\napple is big.\ngeorge owns apple.\n\nQUESTION:\nIs eve is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,george).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nowns(eve,ball).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\neve owns ball.\napple is big.\ngeorge owns apple.\n\nQUESTION:\nIs dave is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,book).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nowns(eve,ball).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following information:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\neve owns ball.\napple is big.\ngeorge owns apple.\n\nQUESTION:\nIs frank likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,ball).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\napple is big.\ngeorge owns apple.\n\nQUESTION:\nCould eve owns ball explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "owns(eve,ball)"
    }
  },
  {
    "q": "owns(eve,ball).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\napple is big.\ngeorge owns apple.\n\nQUESTION:\nCould eve owns ball explain book is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(book)",
      "explanation": "owns(eve,ball)"
    }
  },
  {
    "q": "big(apple).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\napple is big.\ngeorge owns apple.\n\nQUESTION:\nCould apple is big explain book is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(book)",
      "non_explanation": "big(apple)"
    }
  },
  {
    "q": "big(apple).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\napple is big.\ngeorge owns apple.\n\nQUESTION:\nCould apple is big explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "big(apple)"
    }
  },
  {
    "q": "owns(george,apple).",
    "c": "likes(dave,apple) :- owns(eve,ball).\nsmall(book) :- likes(dave,apple).\nowns(eve,pencil) :- small(book).\nhot :- owns(eve,pencil).\nbig(book) :- hot.\nsmall(book) :- big(car).\nsmall(ball) :- parent(carol,bob), cold.\nbig(book) :- hungry(dave), parent(frank,eve).\nparent(carol,dave) :- friend(carol,bob), sunny.\nlikes(frank,car) :- big(pencil).\nbig(ball) :- owns(carol,pencil), sad(dave), tall(carol).\nparent(carol,george) :- tall(carol).\nlikes(george,pencil) :- dislikes(bob,apple), parent(carol,carol).\nowns(bob,phone) :- big(pencil).\nowns(dave,ball) :- sad(carol).\nparent(eve,bob) :- sunny, sad(eve).\ncold :- cold.\ncold :- sad(dave), hungry(frank), sibling(frank,alice).\ncold :- hot, likes(bob,car).\nsmall(pencil) :- sad(eve), happy(alice), sunny.\nparent(dave,bob) :- parent(eve,frank), owns(frank,apple), dislikes(frank,ball).\nhappy(bob) :- sunny.\ncold :- happy(dave), big(book), small(car).\nwet(phone) :- happy(eve), sibling(frank,eve).\nbig(apple).\nowns(george,apple).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then dave likes apple.\nIf dave likes apple, then book is small.\nIf book is small, then eve owns pencil.\nIf eve owns pencil, then it is hot.\nIf it is hot, then book is big.\nIf car is big, then book is small.\nIf carol is a parent of bob and it is cold, then ball is small.\nIf dave is hungry and frank is a parent of eve, then book is big.\nIf carol is a friend of bob and it is sunny, then carol is a parent of dave.\nIf pencil is big, then frank likes car.\nIf carol owns pencil and dave is sad and carol is tall, then ball is big.\nIf carol is tall, then carol is a parent of george.\nIf bob dislikes apple and carol is a parent of carol, then george likes pencil.\nIf pencil is big, then bob owns phone.\nIf carol is sad, then dave owns ball.\nIf it is sunny and eve is sad, then eve is a parent of bob.\nIf it is cold, then it is cold.\nIf dave is sad and frank is hungry and frank is a sibling of alice, then it is cold.\nIf it is hot and bob likes car, then it is cold.\nIf eve is sad and alice is happy and it is sunny, then pencil is small.\nIf eve is a parent of frank and frank owns apple and frank dislikes ball, then dave is a parent of bob.\nIf it is sunny, then bob is happy.\nIf dave is happy and book is big and car is small, then it is cold.\nIf eve is happy and frank is a sibling of eve, then phone is wet.\n\nAnd the following facts:\napple is big.\ngeorge owns apple.\n\nQUESTION:\nCould george owns apple explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "owns(george,apple)"
    }
  },
  {
    "q": "tall(frank).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nowns(carol,apple).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ncarol owns apple.\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nIs frank is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nowns(carol,apple).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ncarol owns apple.\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nIs frank is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,ball).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nowns(carol,apple).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ncarol owns apple.\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nIs bob owns ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nowns(carol,apple).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ncarol owns apple.\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nIs eve is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,george).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nowns(carol,apple).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following information:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ncarol owns apple.\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nIs eve is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,apple).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nCould carol owns apple explain eve is a sibling of carol?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,carol)",
      "explanation": "owns(carol,apple)"
    }
  },
  {
    "q": "owns(carol,apple).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nCould carol owns apple explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "owns(carol,apple)"
    }
  },
  {
    "q": "enemy(dave,carol).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nCould dave is an enemy of carol explain eve is a sibling of carol?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,carol)",
      "non_explanation": "enemy(dave,carol)"
    }
  },
  {
    "q": "enemy(dave,carol).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nCould dave is an enemy of carol explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "enemy(dave,carol)"
    }
  },
  {
    "q": "sad(carol).",
    "c": "happy(frank) :- owns(carol,apple).\ncold :- happy(frank).\ndislikes(dave,car) :- cold.\ntall(frank) :- dislikes(dave,car).\nhot :- tall(frank).\nhappy(bob) :- hot.\nsmall(phone) :- happy(bob).\nsunny :- small(phone).\nlikes(alice,ball) :- sunny.\ntall(eve) :- likes(alice,ball).\nsibling(eve,carol) :- hot.\nhappy(eve) :- sad(george), dislikes(alice,car).\nwet(apple) :- hungry(carol), likes(dave,phone), dislikes(dave,apple).\ncold :- owns(bob,car), enemy(frank,carol), friend(george,carol).\nsibling(alice,carol) :- parent(bob,alice), sibling(george,eve).\nowns(carol,car) :- tall(eve), big(car).\nhappy(carol) :- sunny.\nhappy(frank) :- owns(carol,pencil).\nowns(carol,apple) :- sibling(frank,alice), tall(carol), owns(alice,pencil).\nwet(phone) :- friend(bob,alice).\ndislikes(eve,apple) :- dislikes(george,phone).\nbig(car) :- happy(eve), big(apple), big(pencil).\nwet(apple) :- tall(frank), friend(carol,carol).\nlikes(frank,car) :- dislikes(dave,phone), wet(pencil), owns(frank,pencil).\nenemy(dave,carol).\nsad(carol).",
    "natural language": "You are given the following rules:\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then dave dislikes car.\nIf dave dislikes car, then frank is tall.\nIf frank is tall, then it is hot.\nIf it is hot, then bob is happy.\nIf bob is happy, then phone is small.\nIf phone is small, then it is sunny.\nIf it is sunny, then alice likes ball.\nIf alice likes ball, then eve is tall.\nIf it is hot, then eve is a sibling of carol.\nIf george is sad and alice dislikes car, then eve is happy.\nIf carol is hungry and dave likes phone and dave dislikes apple, then apple is wet.\nIf bob owns car and frank is an enemy of carol and george is a friend of carol, then it is cold.\nIf bob is a parent of alice and george is a sibling of eve, then alice is a sibling of carol.\nIf eve is tall and car is big, then carol owns car.\nIf it is sunny, then carol is happy.\nIf carol owns pencil, then frank is happy.\nIf frank is a sibling of alice and carol is tall and alice owns pencil, then carol owns apple.\nIf bob is a friend of alice, then phone is wet.\nIf george dislikes phone, then eve dislikes apple.\nIf eve is happy and apple is big and pencil is big, then car is big.\nIf frank is tall and carol is a friend of carol, then apple is wet.\nIf dave dislikes phone and pencil is wet and frank owns pencil, then frank likes car.\n\nAnd the following facts:\ndave is an enemy of carol.\ncarol is sad.\n\nQUESTION:\nCould carol is sad explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "sad(carol)"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(frank,frank).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\nfrank is a parent of frank.\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nIs eve is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(frank,frank).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\nfrank is a parent of frank.\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nIs it is hot true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(bob).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(frank,frank).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\nfrank is a parent of frank.\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nIs bob is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(frank,frank).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\nfrank is a parent of frank.\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nIs frank is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(frank,frank).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following information:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\nfrank is a parent of frank.\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nIs dave likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,frank).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following rules:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nCould frank is a parent of frank explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "parent(frank,frank)"
    }
  },
  {
    "q": "parent(frank,frank).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following rules:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nCould frank is a parent of frank explain frank is an enemy of carol?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(frank,carol)",
      "explanation": "parent(frank,frank)"
    }
  },
  {
    "q": "parent(alice,eve).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following rules:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nCould alice is a parent of eve explain frank is an enemy of carol?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(frank,carol)",
      "non_explanation": "parent(alice,eve)"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following rules:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nCould dave is a parent of bob explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "parent(dave,bob)"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "hot :- parent(frank,frank).\nenemy(frank,carol) :- hot.\nenemy(alice,bob) :- enemy(frank,carol).\nhot :- enemy(alice,bob).\nhot :- hot.\nparent(frank,dave) :- hot.\nsibling(carol,eve) :- parent(frank,dave).\nsunny :- sibling(carol,eve).\nhungry(eve) :- sunny.\nwet(book) :- hungry(eve).\nhot :- wet(car), small(apple), wet(apple).\nenemy(eve,alice) :- sad(eve).\nfriend(eve,frank) :- happy(eve), big(phone), sad(alice).\nparent(george,frank) :- sad(dave), sunny, dislikes(bob,book).\ndislikes(eve,ball) :- happy(frank), hot.\nbig(book) :- sad(frank), hungry(dave).\ndislikes(frank,book) :- hot.\nhot :- cold.\nhot :- hot, happy(eve).\nenemy(carol,alice) :- likes(carol,pencil).\nparent(eve,dave) :- tall(bob), sibling(frank,dave).\nbig(book) :- sunny, sunny, sad(frank).\nsunny :- friend(carol,dave), big(ball).\nhappy(frank) :- parent(alice,frank), owns(frank,book).\nparent(dave,bob).\nparent(alice,eve).",
    "natural language": "You are given the following rules:\nIf frank is a parent of frank, then it is hot.\nIf it is hot, then frank is an enemy of carol.\nIf frank is an enemy of carol, then alice is an enemy of bob.\nIf alice is an enemy of bob, then it is hot.\nIf it is hot, then it is hot.\nIf it is hot, then frank is a parent of dave.\nIf frank is a parent of dave, then carol is a sibling of eve.\nIf carol is a sibling of eve, then it is sunny.\nIf it is sunny, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf car is wet and apple is small and apple is wet, then it is hot.\nIf eve is sad, then eve is an enemy of alice.\nIf eve is happy and phone is big and alice is sad, then eve is a friend of frank.\nIf dave is sad and it is sunny and bob dislikes book, then george is a parent of frank.\nIf frank is happy and it is hot, then eve dislikes ball.\nIf frank is sad and dave is hungry, then book is big.\nIf it is hot, then frank dislikes book.\nIf it is cold, then it is hot.\nIf it is hot and eve is happy, then it is hot.\nIf carol likes pencil, then carol is an enemy of alice.\nIf bob is tall and frank is a sibling of dave, then eve is a parent of dave.\nIf it is sunny and it is sunny and frank is sad, then book is big.\nIf carol is a friend of dave and ball is big, then it is sunny.\nIf alice is a parent of frank and frank owns book, then frank is happy.\n\nAnd the following facts:\ndave is a parent of bob.\nalice is a parent of eve.\n\nQUESTION:\nCould dave is a parent of bob explain frank is an enemy of carol?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(frank,carol)",
      "non_explanation": "parent(dave,bob)"
    }
  },
  {
    "q": "wet(book).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nhappy(carol).\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\ncarol is happy.\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nIs book is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nhappy(carol).\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\ncarol is happy.\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nIs george is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,ball).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nhappy(carol).\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\ncarol is happy.\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nIs alice likes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,dave).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nhappy(carol).\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\ncarol is happy.\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nIs bob is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,apple).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nhappy(carol).\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\ncarol is happy.\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nIs alice dislikes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(carol).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nCould carol is happy explain bob is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 15,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "explanation": "happy(carol)"
    }
  },
  {
    "q": "happy(carol).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nCould carol is happy explain alice likes pencil?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 11,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "likes(alice,pencil)",
      "explanation": "happy(carol)"
    }
  },
  {
    "q": "enemy(dave,carol).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nCould dave is an enemy of carol explain alice likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "likes(alice,pencil)",
      "non_explanation": "enemy(dave,carol)"
    }
  },
  {
    "q": "enemy(bob,george).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nCould bob is an enemy of george explain alice likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "likes(alice,pencil)",
      "non_explanation": "enemy(bob,george)"
    }
  },
  {
    "q": "enemy(bob,george).",
    "c": "friend(carol,bob) :- happy(carol).\nparent(carol,eve) :- friend(carol,bob).\nsibling(bob,eve) :- parent(carol,eve).\nhot :- sibling(bob,eve).\ntall(carol) :- hot.\ntall(george) :- tall(carol).\nwet(phone) :- tall(george).\nsunny :- wet(phone).\nlikes(eve,book) :- sunny.\nsad(dave) :- likes(eve,book).\nlikes(alice,pencil) :- sad(dave).\nlikes(carol,car) :- likes(alice,pencil).\nsibling(carol,george) :- likes(carol,car).\ndislikes(frank,apple) :- sibling(carol,george).\ntall(bob) :- dislikes(frank,apple).\nenemy(carol,george) :- tall(bob).\ndislikes(frank,apple) :- enemy(carol,george).\nfriend(george,frank) :- dislikes(frank,apple).\nwet(book) :- friend(george,frank).\ntall(carol) :- wet(book).\nsmall(ball) :- small(apple).\nsmall(ball) :- small(phone).\nowns(bob,ball) :- sunny, owns(eve,car), owns(dave,car).\nhappy(george) :- likes(alice,apple), sunny.\nenemy(bob,george).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf carol is happy, then carol is a friend of bob.\nIf carol is a friend of bob, then carol is a parent of eve.\nIf carol is a parent of eve, then bob is a sibling of eve.\nIf bob is a sibling of eve, then it is hot.\nIf it is hot, then carol is tall.\nIf carol is tall, then george is tall.\nIf george is tall, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then dave is sad.\nIf dave is sad, then alice likes pencil.\nIf alice likes pencil, then carol likes car.\nIf carol likes car, then carol is a sibling of george.\nIf carol is a sibling of george, then frank dislikes apple.\nIf frank dislikes apple, then bob is tall.\nIf bob is tall, then carol is an enemy of george.\nIf carol is an enemy of george, then frank dislikes apple.\nIf frank dislikes apple, then george is a friend of frank.\nIf george is a friend of frank, then book is wet.\nIf book is wet, then carol is tall.\nIf apple is small, then ball is small.\nIf phone is small, then ball is small.\nIf it is sunny and eve owns car and dave owns car, then bob owns ball.\nIf alice likes apple and it is sunny, then george is happy.\n\nAnd the following facts:\nbob is an enemy of george.\ndave is an enemy of carol.\n\nQUESTION:\nCould bob is an enemy of george explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "enemy(bob,george)"
    }
  },
  {
    "q": "likes(george,ball).",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\nsunny.\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nit is sunny.\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nIs george likes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,phone).",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\nsunny.\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nit is sunny.\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nIs eve owns phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,george).",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\nsunny.\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nit is sunny.\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nIs frank is an enemy of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,dave).",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\nsunny.\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nit is sunny.\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nIs frank is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,apple).",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\nsunny.\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following information:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nit is sunny.\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nIs george dislikes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nCould it is sunny explain frank is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "happy(frank)",
      "explanation": "sunny"
    }
  },
  {
    "q": "sunny.",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nCould it is sunny explain pencil is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(pencil)",
      "explanation": "sunny"
    }
  },
  {
    "q": "dislikes(bob,pencil).",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nCould bob dislikes pencil explain frank is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "happy(frank)",
      "non_explanation": "dislikes(bob,pencil)"
    }
  },
  {
    "q": "sibling(frank,alice).",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nCould frank is a sibling of alice explain frank is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "happy(frank)",
      "non_explanation": "sibling(frank,alice)"
    }
  },
  {
    "q": "dislikes(bob,pencil).",
    "c": "small(apple) :- sunny.\ncold :- small(apple).\ndislikes(george,pencil) :- cold.\nowns(eve,phone) :- dislikes(george,pencil).\nsad(george) :- owns(eve,phone).\ndislikes(carol,ball) :- sad(george).\ncold :- dislikes(carol,ball).\nsmall(pencil) :- cold.\nlikes(george,ball) :- small(pencil).\nsibling(eve,alice) :- likes(george,ball).\nwet(book) :- sibling(eve,alice).\ntall(frank) :- wet(book).\ncold :- tall(frank).\nhappy(frank) :- cold.\ncold :- happy(frank).\ntall(george) :- cold.\nhungry(eve) :- tall(george).\nenemy(bob,dave) :- hungry(eve).\ncold :- enemy(bob,dave).\nenemy(alice,frank) :- cold.\nowns(eve,apple) :- happy(carol).\nsmall(phone) :- dislikes(alice,apple).\nsad(eve) :- small(phone).\nsad(carol) :- hot, enemy(alice,carol).\ndislikes(bob,pencil).\nsibling(frank,alice).",
    "natural language": "You are given the following rules:\nIf it is sunny, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then george dislikes pencil.\nIf george dislikes pencil, then eve owns phone.\nIf eve owns phone, then george is sad.\nIf george is sad, then carol dislikes ball.\nIf carol dislikes ball, then it is cold.\nIf it is cold, then pencil is small.\nIf pencil is small, then george likes ball.\nIf george likes ball, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then frank is tall.\nIf frank is tall, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then eve is hungry.\nIf eve is hungry, then bob is an enemy of dave.\nIf bob is an enemy of dave, then it is cold.\nIf it is cold, then alice is an enemy of frank.\nIf carol is happy, then eve owns apple.\nIf alice dislikes apple, then phone is small.\nIf phone is small, then eve is sad.\nIf it is hot and alice is an enemy of carol, then carol is sad.\n\nAnd the following facts:\nbob dislikes pencil.\nfrank is a sibling of alice.\n\nQUESTION:\nCould bob dislikes pencil explain pencil is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(pencil)",
      "non_explanation": "dislikes(bob,pencil)"
    }
  },
  {
    "q": "tall(george).",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\ncold.\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nIs george is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(alice).",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\ncold.\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nIs alice is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,car).",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\ncold.\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nIs bob dislikes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,frank).",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\ncold.\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nIs eve is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\ncold.\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following information:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nIs george is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following rules:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nCould it is cold explain alice is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "tall(alice)",
      "explanation": "cold"
    }
  },
  {
    "q": "sibling(carol,alice).",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following rules:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nCould carol is a sibling of alice explain alice is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "tall(alice)",
      "non_explanation": "sibling(carol,alice)"
    }
  },
  {
    "q": "tall(george).",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following rules:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nCould george is tall explain alice is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "tall(alice)",
      "non_explanation": "tall(george)"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "tall(alice) :- cold.\nwet(book) :- friend(eve,alice), sad(frank), sibling(dave,bob).\nfriend(george,carol) :- owns(frank,pencil), hot.\nsad(carol) :- likes(dave,ball), likes(alice,pencil).\nfriend(bob,george) :- friend(bob,eve).\nsibling(frank,carol) :- enemy(george,alice).\nbig(apple) :- hot, likes(carol,apple), wet(car).\nowns(george,pencil) :- owns(george,car).\nsad(george) :- enemy(eve,frank), dislikes(george,apple).\nwet(book) :- big(apple).\nsunny :- sunny, sunny, sunny.\nsunny :- sibling(carol,carol), sad(eve), sunny.\nsmall(book) :- small(apple), friend(george,eve).\nbig(apple) :- big(book).\nsibling(eve,frank) :- tall(dave), sibling(alice,carol), hungry(frank).\nlikes(eve,pencil) :- cold, dislikes(bob,car).\nsmall(pencil) :- likes(george,phone), small(book).\nlikes(eve,book) :- sunny, owns(dave,ball), hungry(dave).\nsmall(pencil) :- small(pencil), small(phone).\nfriend(eve,dave) :- friend(alice,frank), friend(bob,frank), friend(alice,alice).\nowns(george,apple) :- owns(bob,book), owns(alice,phone).\nparent(bob,alice) :- friend(bob,bob).\nparent(bob,frank) :- hungry(frank), sunny, happy(george).\nsunny :- sad(eve).\nparent(frank,dave).\nsibling(carol,alice).\nsibling(bob,frank).\ntall(george).\nenemy(alice,dave).",
    "natural language": "You are given the following rules:\nIf it is cold, then alice is tall.\nIf eve is a friend of alice and frank is sad and dave is a sibling of bob, then book is wet.\nIf frank owns pencil and it is hot, then george is a friend of carol.\nIf dave likes ball and alice likes pencil, then carol is sad.\nIf bob is a friend of eve, then bob is a friend of george.\nIf george is an enemy of alice, then frank is a sibling of carol.\nIf it is hot and carol likes apple and car is wet, then apple is big.\nIf george owns car, then george owns pencil.\nIf eve is an enemy of frank and george dislikes apple, then george is sad.\nIf apple is big, then book is wet.\nIf it is sunny and it is sunny and it is sunny, then it is sunny.\nIf carol is a sibling of carol and eve is sad and it is sunny, then it is sunny.\nIf apple is small and george is a friend of eve, then book is small.\nIf book is big, then apple is big.\nIf dave is tall and alice is a sibling of carol and frank is hungry, then eve is a sibling of frank.\nIf it is cold and bob dislikes car, then eve likes pencil.\nIf george likes phone and book is small, then pencil is small.\nIf it is sunny and dave owns ball and dave is hungry, then eve likes book.\nIf pencil is small and phone is small, then pencil is small.\nIf alice is a friend of frank and bob is a friend of frank and alice is a friend of alice, then eve is a friend of dave.\nIf bob owns book and alice owns phone, then george owns apple.\nIf bob is a friend of bob, then bob is a parent of alice.\nIf frank is hungry and it is sunny and george is happy, then bob is a parent of frank.\nIf eve is sad, then it is sunny.\n\nAnd the following facts:\nfrank is a parent of dave.\ncarol is a sibling of alice.\nbob is a sibling of frank.\ngeorge is tall.\nalice is an enemy of dave.\n\nQUESTION:\nCould frank is a parent of dave explain alice is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "tall(alice)",
      "non_explanation": "parent(frank,dave)"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nenemy(carol,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nIs dave is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,ball).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nenemy(carol,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nIs dave likes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,carol).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nenemy(carol,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nIs frank is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,apple).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nenemy(carol,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nIs dave owns apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,eve).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nenemy(carol,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nIs frank is a friend of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,frank).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nCould carol is an enemy of frank explain dave is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "hungry(dave)",
      "explanation": "enemy(carol,frank)"
    }
  },
  {
    "q": "enemy(bob,frank).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nCould bob is an enemy of frank explain dave is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "hungry(dave)",
      "non_explanation": "enemy(bob,frank)"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nCould dave is an enemy of frank explain dave is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "hungry(dave)",
      "non_explanation": "enemy(dave,frank)"
    }
  },
  {
    "q": "dislikes(frank,ball).",
    "c": "hungry(dave) :- enemy(carol,frank).\nsmall(apple) :- sibling(dave,eve), wet(phone), happy(alice).\nsmall(phone) :- dislikes(bob,phone), hungry(dave), parent(bob,frank).\nsunny :- enemy(alice,carol).\nsunny :- enemy(george,frank), owns(alice,book), happy(eve).\nhappy(george) :- hungry(george), big(car), parent(bob,george).\nsmall(book) :- big(phone), friend(eve,carol), cold.\nhappy(eve) :- tall(george), parent(alice,alice), tall(frank).\ntall(alice) :- likes(alice,car), cold, tall(alice).\nsunny :- friend(eve,eve), hot.\ntall(bob) :- sad(frank), hot, hot.\nsmall(ball) :- owns(carol,phone), tall(frank), sunny.\nsmall(ball) :- happy(alice), dislikes(george,phone), cold.\ncold :- cold.\ncold :- friend(eve,carol), hungry(george), big(book).\ntall(bob) :- sunny, wet(apple), dislikes(alice,pencil).\nlikes(frank,pencil) :- owns(george,phone).\nlikes(eve,apple) :- likes(eve,ball), tall(george).\ncold :- parent(dave,carol), small(car).\nbig(book) :- small(ball), happy(frank), small(book).\nbig(phone) :- hot.\ntall(frank) :- sibling(frank,bob).\nsunny :- hot, sunny.\ncold :- likes(carol,car), sibling(alice,frank).\nfriend(eve,dave).\nenemy(dave,frank).\nenemy(bob,frank).\ndislikes(frank,ball).\nlikes(dave,ball).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of frank, then dave is hungry.\nIf dave is a sibling of eve and phone is wet and alice is happy, then apple is small.\nIf bob dislikes phone and dave is hungry and bob is a parent of frank, then phone is small.\nIf alice is an enemy of carol, then it is sunny.\nIf george is an enemy of frank and alice owns book and eve is happy, then it is sunny.\nIf george is hungry and car is big and bob is a parent of george, then george is happy.\nIf phone is big and eve is a friend of carol and it is cold, then book is small.\nIf george is tall and alice is a parent of alice and frank is tall, then eve is happy.\nIf alice likes car and it is cold and alice is tall, then alice is tall.\nIf eve is a friend of eve and it is hot, then it is sunny.\nIf frank is sad and it is hot and it is hot, then bob is tall.\nIf carol owns phone and frank is tall and it is sunny, then ball is small.\nIf alice is happy and george dislikes phone and it is cold, then ball is small.\nIf it is cold, then it is cold.\nIf eve is a friend of carol and george is hungry and book is big, then it is cold.\nIf it is sunny and apple is wet and alice dislikes pencil, then bob is tall.\nIf george owns phone, then frank likes pencil.\nIf eve likes ball and george is tall, then eve likes apple.\nIf dave is a parent of carol and car is small, then it is cold.\nIf ball is small and frank is happy and book is small, then book is big.\nIf it is hot, then phone is big.\nIf frank is a sibling of bob, then frank is tall.\nIf it is hot and it is sunny, then it is sunny.\nIf carol likes car and alice is a sibling of frank, then it is cold.\n\nAnd the following facts:\neve is a friend of dave.\ndave is an enemy of frank.\nbob is an enemy of frank.\nfrank dislikes ball.\ndave likes ball.\n\nQUESTION:\nCould frank dislikes ball explain dave is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "hungry(dave)",
      "non_explanation": "dislikes(frank,ball)"
    }
  },
  {
    "q": "sibling(eve,eve).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nsad(carol).\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following information:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\ncarol is sad.\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nIs eve is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nsad(carol).\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following information:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\ncarol is sad.\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nIs eve is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,george).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nsad(carol).\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following information:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\ncarol is sad.\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nIs carol is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,george).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nsad(carol).\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following information:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\ncarol is sad.\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nIs eve is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,bob).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nsad(carol).\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following information:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\ncarol is sad.\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nIs alice is a parent of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following rules:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nCould carol is sad explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "sad(carol)"
    }
  },
  {
    "q": "dislikes(frank,book).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following rules:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nCould frank dislikes book explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "dislikes(frank,book)"
    }
  },
  {
    "q": "owns(eve,ball).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following rules:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nCould eve owns ball explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "owns(eve,ball)"
    }
  },
  {
    "q": "dislikes(eve,apple).",
    "c": "sunny :- sad(carol).\ntall(dave) :- sunny.\nsibling(eve,eve) :- tall(dave).\nhungry(eve) :- sibling(eve,eve).\nhappy(bob) :- hungry(eve).\nhappy(eve) :- big(apple).\nhappy(alice) :- happy(alice).\nhungry(alice) :- small(book), wet(ball).\nhungry(dave) :- hungry(dave).\nbig(pencil) :- owns(eve,car), wet(apple).\ndislikes(alice,ball) :- hungry(frank), friend(george,bob).\ndislikes(carol,car) :- sunny, dislikes(dave,ball).\nbig(pencil) :- big(ball).\nbig(book) :- sad(eve).\nbig(ball) :- big(ball), big(pencil), enemy(frank,carol).\nfriend(bob,alice) :- hot, sad(alice), sibling(frank,george).\nfriend(carol,carol) :- dislikes(alice,car), hot, hungry(bob).\nhungry(alice) :- small(ball), big(pencil).\nparent(dave,eve) :- friend(george,george), dislikes(eve,phone).\nparent(george,dave) :- parent(frank,eve), owns(eve,car).\ntall(eve) :- tall(bob).\ntall(george) :- friend(eve,carol), sunny, friend(george,eve).\nhungry(eve) :- sunny, hot, hungry(carol).\nsmall(ball) :- cold, cold.\nowns(eve,ball).\ndislikes(frank,book).\ndislikes(eve,apple).\nenemy(eve,bob).\nparent(eve,alice).",
    "natural language": "You are given the following rules:\nIf carol is sad, then it is sunny.\nIf it is sunny, then dave is tall.\nIf dave is tall, then eve is a sibling of eve.\nIf eve is a sibling of eve, then eve is hungry.\nIf eve is hungry, then bob is happy.\nIf apple is big, then eve is happy.\nIf alice is happy, then alice is happy.\nIf book is small and ball is wet, then alice is hungry.\nIf dave is hungry, then dave is hungry.\nIf eve owns car and apple is wet, then pencil is big.\nIf frank is hungry and george is a friend of bob, then alice dislikes ball.\nIf it is sunny and dave dislikes ball, then carol dislikes car.\nIf ball is big, then pencil is big.\nIf eve is sad, then book is big.\nIf ball is big and pencil is big and frank is an enemy of carol, then ball is big.\nIf it is hot and alice is sad and frank is a sibling of george, then bob is a friend of alice.\nIf alice dislikes car and it is hot and bob is hungry, then carol is a friend of carol.\nIf ball is small and pencil is big, then alice is hungry.\nIf george is a friend of george and eve dislikes phone, then dave is a parent of eve.\nIf frank is a parent of eve and eve owns car, then george is a parent of dave.\nIf bob is tall, then eve is tall.\nIf eve is a friend of carol and it is sunny and george is a friend of eve, then george is tall.\nIf it is sunny and it is hot and carol is hungry, then eve is hungry.\nIf it is cold and it is cold, then ball is small.\n\nAnd the following facts:\neve owns ball.\nfrank dislikes book.\neve dislikes apple.\neve is an enemy of bob.\neve is a parent of alice.\n\nQUESTION:\nCould eve dislikes apple explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "dislikes(eve,apple)"
    }
  },
  {
    "q": "sad(carol).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nfriend(alice,eve).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nalice is a friend of eve.\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nIs carol is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,ball).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nfriend(alice,eve).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nalice is a friend of eve.\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nIs carol dislikes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,phone).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nfriend(alice,eve).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nalice is a friend of eve.\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nIs dave owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nfriend(alice,eve).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nalice is a friend of eve.\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nIs george is a parent of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,bob).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nfriend(alice,eve).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nalice is a friend of eve.\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nIs alice is a parent of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nCould alice is a friend of eve explain george is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "explanation": "friend(alice,eve)"
    }
  },
  {
    "q": "owns(bob,car).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nCould bob owns car explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "owns(bob,car)"
    }
  },
  {
    "q": "sad(carol).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nCould carol is sad explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "sad(carol)"
    }
  },
  {
    "q": "parent(dave,carol).",
    "c": "small(book) :- friend(alice,eve).\ndislikes(george,apple) :- small(book).\nhungry(george) :- dislikes(george,apple).\nenemy(carol,dave) :- hungry(george).\nlikes(eve,apple) :- enemy(carol,dave).\nlikes(bob,book) :- happy(bob), friend(eve,frank).\nlikes(alice,pencil) :- dislikes(carol,phone), wet(book), big(phone).\nhappy(alice) :- wet(book).\nwet(book) :- sibling(bob,eve), sunny, hungry(bob).\ncold :- enemy(bob,george).\nenemy(george,frank) :- tall(dave), parent(alice,eve), sad(carol).\ncold :- wet(book), dislikes(dave,phone).\nsunny :- parent(frank,alice), dislikes(carol,apple).\nenemy(carol,dave) :- hot, owns(eve,phone), cold.\nsmall(book) :- wet(ball), wet(ball), enemy(carol,george).\nwet(car) :- friend(dave,carol).\nbig(apple) :- dislikes(frank,book), small(pencil).\nsibling(carol,alice) :- cold.\nsmall(pencil) :- hot, likes(carol,pencil).\nbig(ball) :- sibling(eve,george).\nsunny :- likes(bob,apple), owns(alice,apple).\nhot :- tall(dave), big(pencil), sad(george).\nwet(ball) :- sad(frank).\nhot :- owns(alice,car).\nowns(bob,car).\nsad(carol).\nparent(bob,frank).\nparent(dave,carol).\ndislikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf alice is a friend of eve, then book is small.\nIf book is small, then george dislikes apple.\nIf george dislikes apple, then george is hungry.\nIf george is hungry, then carol is an enemy of dave.\nIf carol is an enemy of dave, then eve likes apple.\nIf bob is happy and eve is a friend of frank, then bob likes book.\nIf carol dislikes phone and book is wet and phone is big, then alice likes pencil.\nIf book is wet, then alice is happy.\nIf bob is a sibling of eve and it is sunny and bob is hungry, then book is wet.\nIf bob is an enemy of george, then it is cold.\nIf dave is tall and alice is a parent of eve and carol is sad, then george is an enemy of frank.\nIf book is wet and dave dislikes phone, then it is cold.\nIf frank is a parent of alice and carol dislikes apple, then it is sunny.\nIf it is hot and eve owns phone and it is cold, then carol is an enemy of dave.\nIf ball is wet and ball is wet and carol is an enemy of george, then book is small.\nIf dave is a friend of carol, then car is wet.\nIf frank dislikes book and pencil is small, then apple is big.\nIf it is cold, then carol is a sibling of alice.\nIf it is hot and carol likes pencil, then pencil is small.\nIf eve is a sibling of george, then ball is big.\nIf bob likes apple and alice owns apple, then it is sunny.\nIf dave is tall and pencil is big and george is sad, then it is hot.\nIf frank is sad, then ball is wet.\nIf alice owns car, then it is hot.\n\nAnd the following facts:\nbob owns car.\ncarol is sad.\nbob is a parent of frank.\ndave is a parent of carol.\ncarol dislikes ball.\n\nQUESTION:\nCould dave is a parent of carol explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "parent(dave,carol)"
    }
  },
  {
    "q": "enemy(carol,frank).",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nhot.\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\nit is hot.\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nIs carol is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nhot.\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\nit is hot.\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,george).",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nhot.\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\nit is hot.\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nIs alice is a friend of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,george).",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nhot.\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\nit is hot.\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nIs dave is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(eve).",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nhot.\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\nit is hot.\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nIs eve is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nCould it is hot explain car is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 7,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(car)",
      "explanation": "hot"
    }
  },
  {
    "q": "enemy(dave,bob).",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nCould dave is an enemy of bob explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(car)",
      "non_explanation": "enemy(dave,bob)"
    }
  },
  {
    "q": "enemy(frank,dave).",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nCould frank is an enemy of dave explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(car)",
      "non_explanation": "enemy(frank,dave)"
    }
  },
  {
    "q": "sibling(george,alice).",
    "c": "wet(book) :- hot.\nhungry(bob) :- wet(book).\nhot :- hungry(bob).\nfriend(dave,bob) :- hot.\nenemy(dave,alice) :- friend(dave,bob).\nowns(george,apple) :- enemy(dave,alice).\ndislikes(eve,car) :- owns(george,apple).\nenemy(carol,frank) :- dislikes(eve,car).\ntall(carol) :- enemy(carol,frank).\nwet(car) :- tall(carol).\nhot :- tall(alice).\nhappy(dave) :- happy(bob).\nhappy(carol) :- happy(frank), wet(car).\nsad(carol) :- parent(eve,george), hot.\nsad(bob) :- enemy(frank,eve), happy(eve), enemy(frank,dave).\nhot :- enemy(alice,frank), big(car).\nsunny :- sunny, small(apple).\nparent(eve,alice) :- dislikes(alice,car), sad(alice), parent(dave,carol).\nlikes(frank,apple) :- tall(frank), small(car), dislikes(eve,pencil).\nowns(george,ball) :- happy(frank).\nowns(frank,ball) :- owns(alice,car), cold.\nparent(eve,carol) :- big(ball), sibling(bob,bob), parent(dave,alice).\nsunny :- sibling(carol,bob), sunny, sunny.\nlikes(george,car) :- friend(frank,george).\nenemy(dave,bob).\nenemy(dave,george).\nsibling(george,alice).\nenemy(frank,dave).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf it is hot, then book is wet.\nIf book is wet, then bob is hungry.\nIf bob is hungry, then it is hot.\nIf it is hot, then dave is a friend of bob.\nIf dave is a friend of bob, then dave is an enemy of alice.\nIf dave is an enemy of alice, then george owns apple.\nIf george owns apple, then eve dislikes car.\nIf eve dislikes car, then carol is an enemy of frank.\nIf carol is an enemy of frank, then carol is tall.\nIf carol is tall, then car is wet.\nIf alice is tall, then it is hot.\nIf bob is happy, then dave is happy.\nIf frank is happy and car is wet, then carol is happy.\nIf eve is a parent of george and it is hot, then carol is sad.\nIf frank is an enemy of eve and eve is happy and frank is an enemy of dave, then bob is sad.\nIf alice is an enemy of frank and car is big, then it is hot.\nIf it is sunny and apple is small, then it is sunny.\nIf alice dislikes car and alice is sad and dave is a parent of carol, then eve is a parent of alice.\nIf frank is tall and car is small and eve dislikes pencil, then frank likes apple.\nIf frank is happy, then george owns ball.\nIf alice owns car and it is cold, then frank owns ball.\nIf ball is big and bob is a sibling of bob and dave is a parent of alice, then eve is a parent of carol.\nIf carol is a sibling of bob and it is sunny and it is sunny, then it is sunny.\nIf frank is a friend of george, then george likes car.\n\nAnd the following facts:\ndave is an enemy of bob.\ndave is an enemy of george.\ngeorge is a sibling of alice.\nfrank is an enemy of dave.\neve is a parent of bob.\n\nQUESTION:\nCould george is a sibling of alice explain car is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(car)",
      "non_explanation": "sibling(george,alice)"
    }
  },
  {
    "q": "enemy(carol,frank).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\nenemy(carol,frank).\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nIs carol is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,dave).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\nenemy(carol,frank).\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nIs carol is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(book).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\nenemy(carol,frank).\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nIs book is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,car).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\nenemy(carol,frank).\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nIs carol dislikes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\nenemy(carol,frank).\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following information:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\ncarol is an enemy of frank.\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nIs alice is a friend of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,frank).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nCould carol is an enemy of frank explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "enemy(carol,frank)"
    }
  },
  {
    "q": "dislikes(eve,ball).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nCould eve dislikes ball explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "dislikes(eve,ball)"
    }
  },
  {
    "q": "enemy(frank,carol).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nCould frank is an enemy of carol explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "enemy(frank,carol)"
    }
  },
  {
    "q": "likes(bob,pencil).",
    "c": "sibling(carol,george) :- enemy(carol,frank).\nenemy(bob,eve) :- sibling(carol,george).\ndislikes(carol,phone) :- enemy(bob,eve).\nsunny :- dislikes(carol,phone).\nwet(ball) :- sunny.\nenemy(dave,carol) :- wet(ball).\ndislikes(alice,apple) :- enemy(dave,carol).\ncold :- dislikes(alice,apple).\nwet(ball) :- cold.\nfriend(eve,carol) :- wet(ball).\nfriend(dave,alice) :- sunny, likes(george,pencil), big(phone).\nfriend(bob,frank) :- hot, small(car), hungry(bob).\ntall(dave) :- likes(dave,car), cold, likes(alice,apple).\ntall(frank) :- sad(frank), sibling(george,frank), owns(eve,car).\nsunny :- hungry(carol), hungry(eve).\nsibling(frank,george) :- owns(eve,apple), enemy(eve,george).\nsibling(frank,bob) :- sibling(bob,george), owns(george,apple), happy(carol).\ncold :- happy(eve), parent(carol,bob), parent(bob,eve).\nsunny :- wet(apple), small(pencil).\ncold :- wet(book), sibling(eve,eve).\nhungry(frank) :- friend(george,carol).\nowns(frank,car) :- enemy(dave,george).\nowns(bob,phone) :- sad(eve).\ntall(carol) :- cold.\ndislikes(eve,ball).\nenemy(frank,carol).\nlikes(bob,pencil).\nparent(eve,frank).\nenemy(carol,dave).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of frank, then carol is a sibling of george.\nIf carol is a sibling of george, then bob is an enemy of eve.\nIf bob is an enemy of eve, then carol dislikes phone.\nIf carol dislikes phone, then it is sunny.\nIf it is sunny, then ball is wet.\nIf ball is wet, then dave is an enemy of carol.\nIf dave is an enemy of carol, then alice dislikes apple.\nIf alice dislikes apple, then it is cold.\nIf it is cold, then ball is wet.\nIf ball is wet, then eve is a friend of carol.\nIf it is sunny and george likes pencil and phone is big, then dave is a friend of alice.\nIf it is hot and car is small and bob is hungry, then bob is a friend of frank.\nIf dave likes car and it is cold and alice likes apple, then dave is tall.\nIf frank is sad and george is a sibling of frank and eve owns car, then frank is tall.\nIf carol is hungry and eve is hungry, then it is sunny.\nIf eve owns apple and eve is an enemy of george, then frank is a sibling of george.\nIf bob is a sibling of george and george owns apple and carol is happy, then frank is a sibling of bob.\nIf eve is happy and carol is a parent of bob and bob is a parent of eve, then it is cold.\nIf apple is wet and pencil is small, then it is sunny.\nIf book is wet and eve is a sibling of eve, then it is cold.\nIf george is a friend of carol, then frank is hungry.\nIf dave is an enemy of george, then frank owns car.\nIf eve is sad, then bob owns phone.\nIf it is cold, then carol is tall.\n\nAnd the following facts:\neve dislikes ball.\nfrank is an enemy of carol.\nbob likes pencil.\neve is a parent of frank.\ncarol is an enemy of dave.\n\nQUESTION:\nCould bob likes pencil explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "likes(bob,pencil)"
    }
  },
  {
    "q": "likes(bob,book).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\ntall(bob).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).\ntall(bob).",
    "natural language": "You are given the following information:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\nbob is tall.\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\nbob is tall.\n\nQUESTION:\nIs bob likes book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,dave).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\ntall(bob).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).\ntall(bob).",
    "natural language": "You are given the following information:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\nbob is tall.\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\nbob is tall.\n\nQUESTION:\nIs carol is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,carol).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\ntall(bob).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).\ntall(bob).",
    "natural language": "You are given the following information:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\nbob is tall.\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\nbob is tall.\n\nQUESTION:\nIs frank is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,frank).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\ntall(bob).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).\ntall(bob).",
    "natural language": "You are given the following information:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\nbob is tall.\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\nbob is tall.\n\nQUESTION:\nIs carol is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,book).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\ntall(bob).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).\ntall(bob).",
    "natural language": "You are given the following information:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\nbob is tall.\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\nbob is tall.\n\nQUESTION:\nIs dave likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(bob).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).",
    "natural language": "You are given the following rules:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\n\nQUESTION:\nCould bob is tall explain george is an enemy of dave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 13,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "enemy(george,dave)",
      "explanation": "tall(bob)"
    }
  },
  {
    "q": "likes(carol,pencil).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).",
    "natural language": "You are given the following rules:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\n\nQUESTION:\nCould carol likes pencil explain george is an enemy of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "enemy(george,dave)",
      "non_explanation": "likes(carol,pencil)"
    }
  },
  {
    "q": "dislikes(bob,pencil).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).",
    "natural language": "You are given the following rules:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\n\nQUESTION:\nCould bob dislikes pencil explain george is an enemy of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "enemy(george,dave)",
      "non_explanation": "dislikes(bob,pencil)"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "hot :- tall(bob).\nsmall(car) :- hot.\nsmall(ball) :- small(car).\nbig(ball) :- small(ball).\nhungry(bob) :- big(ball).\nhappy(george) :- hungry(bob).\nlikes(bob,book) :- happy(george).\ncold :- likes(bob,book).\nparent(dave,frank) :- cold.\nsunny :- parent(dave,frank).\nparent(dave,george) :- sunny.\nlikes(carol,ball) :- parent(dave,george).\nenemy(george,dave) :- likes(carol,ball).\nsad(bob) :- enemy(george,dave).\nsmall(book) :- sad(bob).\nhappy(eve) :- small(book).\nhappy(dave) :- happy(eve).\nhappy(carol) :- happy(dave).\nhungry(bob) :- happy(carol).\ntall(george) :- hungry(bob).\nenemy(carol,george) :- enemy(dave,bob), friend(carol,bob).\nenemy(bob,frank) :- enemy(dave,frank).\nenemy(carol,alice) :- wet(apple), hot, owns(bob,phone).\nhot :- dislikes(dave,pencil), cold, likes(eve,apple).\nparent(dave,alice).\nenemy(carol,dave).\ndislikes(bob,pencil).\nlikes(carol,pencil).",
    "natural language": "You are given the following rules:\nIf bob is tall, then it is hot.\nIf it is hot, then car is small.\nIf car is small, then ball is small.\nIf ball is small, then ball is big.\nIf ball is big, then bob is hungry.\nIf bob is hungry, then george is happy.\nIf george is happy, then bob likes book.\nIf bob likes book, then it is cold.\nIf it is cold, then dave is a parent of frank.\nIf dave is a parent of frank, then it is sunny.\nIf it is sunny, then dave is a parent of george.\nIf dave is a parent of george, then carol likes ball.\nIf carol likes ball, then george is an enemy of dave.\nIf george is an enemy of dave, then bob is sad.\nIf bob is sad, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then dave is happy.\nIf dave is happy, then carol is happy.\nIf carol is happy, then bob is hungry.\nIf bob is hungry, then george is tall.\nIf dave is an enemy of bob and carol is a friend of bob, then carol is an enemy of george.\nIf dave is an enemy of frank, then bob is an enemy of frank.\nIf apple is wet and it is hot and bob owns phone, then carol is an enemy of alice.\nIf dave dislikes pencil and it is cold and eve likes apple, then it is hot.\n\nAnd the following facts:\ndave is a parent of alice.\ncarol is an enemy of dave.\nbob dislikes pencil.\ncarol likes pencil.\n\nQUESTION:\nCould dave is a parent of alice explain george is an enemy of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "enemy(george,dave)",
      "non_explanation": "parent(dave,alice)"
    }
  },
  {
    "q": "hungry(george).",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\ncold.\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\nit is cold.\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nIs george is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\ncold.\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\nit is cold.\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,dave).",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\ncold.\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\nit is cold.\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nIs frank is a friend of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,frank).",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\ncold.\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\nit is cold.\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nIs alice is a parent of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,apple).",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\ncold.\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\nit is cold.\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nIs bob likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nCould it is cold explain eve is a sibling of bob?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,bob)",
      "explanation": "cold"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nCould eve is a sibling of dave explain eve is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,bob)",
      "non_explanation": "sibling(eve,dave)"
    }
  },
  {
    "q": "dislikes(carol,book).",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nCould carol dislikes book explain eve is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,bob)",
      "non_explanation": "dislikes(carol,book)"
    }
  },
  {
    "q": "wet(apple).",
    "c": "hot :- cold.\nsunny :- hot.\nfriend(alice,frank) :- sunny.\nsad(frank) :- friend(alice,frank).\nowns(carol,book) :- sad(frank).\nwet(car) :- owns(carol,book).\ntall(alice) :- wet(car).\nparent(carol,eve) :- tall(alice).\nenemy(eve,alice) :- parent(carol,eve).\nwet(phone) :- enemy(eve,alice).\nsunny :- wet(phone).\nsibling(eve,alice) :- sunny.\nwet(book) :- sibling(eve,alice).\nsad(george) :- wet(book).\nlikes(carol,ball) :- sad(george).\nhot :- likes(carol,ball).\nowns(bob,pencil) :- hot.\nhungry(george) :- owns(bob,pencil).\nsunny :- hungry(george).\nsibling(eve,bob) :- sunny.\nlikes(frank,pencil) :- tall(george), dislikes(eve,pencil).\nfriend(frank,frank) :- friend(alice,alice), likes(eve,apple).\nsmall(book) :- parent(carol,dave).\nsmall(book) :- hot, sad(dave).\nsibling(eve,dave).\nwet(apple).\ndislikes(carol,book).\nenemy(frank,bob).\nowns(dave,car).",
    "natural language": "You are given the following rules:\nIf it is cold, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then alice is a friend of frank.\nIf alice is a friend of frank, then frank is sad.\nIf frank is sad, then carol owns book.\nIf carol owns book, then car is wet.\nIf car is wet, then alice is tall.\nIf alice is tall, then carol is a parent of eve.\nIf carol is a parent of eve, then eve is an enemy of alice.\nIf eve is an enemy of alice, then phone is wet.\nIf phone is wet, then it is sunny.\nIf it is sunny, then eve is a sibling of alice.\nIf eve is a sibling of alice, then book is wet.\nIf book is wet, then george is sad.\nIf george is sad, then carol likes ball.\nIf carol likes ball, then it is hot.\nIf it is hot, then bob owns pencil.\nIf bob owns pencil, then george is hungry.\nIf george is hungry, then it is sunny.\nIf it is sunny, then eve is a sibling of bob.\nIf george is tall and eve dislikes pencil, then frank likes pencil.\nIf alice is a friend of alice and eve likes apple, then frank is a friend of frank.\nIf carol is a parent of dave, then book is small.\nIf it is hot and dave is sad, then book is small.\n\nAnd the following facts:\neve is a sibling of dave.\napple is wet.\ncarol dislikes book.\nfrank is an enemy of bob.\ndave owns car.\n\nQUESTION:\nCould apple is wet explain eve is a sibling of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,bob)",
      "non_explanation": "wet(apple)"
    }
  },
  {
    "q": "owns(alice,apple).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nsibling(alice,frank).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following information:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\nalice is a sibling of frank.\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nIs alice owns apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,phone).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nsibling(alice,frank).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following information:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\nalice is a sibling of frank.\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nIs carol likes phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nsibling(alice,frank).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following information:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\nalice is a sibling of frank.\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nIs frank is a parent of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(bob).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nsibling(alice,frank).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following information:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\nalice is a sibling of frank.\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nIs bob is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,carol).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nsibling(alice,frank).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following information:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\nalice is a sibling of frank.\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nIs bob is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,frank).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following rules:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nCould alice is a sibling of frank explain george is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sad(george)",
      "explanation": "sibling(alice,frank)"
    }
  },
  {
    "q": "owns(alice,apple).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following rules:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nCould alice owns apple explain george is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sad(george)",
      "non_explanation": "owns(alice,apple)"
    }
  },
  {
    "q": "likes(dave,ball).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following rules:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nCould dave likes ball explain george is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sad(george)",
      "non_explanation": "likes(dave,ball)"
    }
  },
  {
    "q": "dislikes(alice,car).",
    "c": "sad(george) :- sibling(alice,frank).\nbig(ball) :- sad(carol).\ncold :- hungry(george), dislikes(eve,phone).\ncold :- enemy(george,alice).\nbig(phone) :- parent(carol,frank), big(book).\nfriend(frank,dave) :- hot, friend(frank,bob).\nsunny :- happy(frank).\nsunny :- dislikes(george,phone), big(book), dislikes(eve,apple).\nfriend(alice,frank) :- hot.\nenemy(carol,bob) :- hot, dislikes(bob,pencil).\nfriend(carol,carol) :- sad(bob).\nsmall(ball) :- small(book), small(car), tall(george).\nwet(book) :- hot.\nsmall(book) :- hot.\nenemy(alice,alice) :- enemy(eve,carol).\nowns(dave,pencil) :- owns(dave,pencil), happy(eve).\nenemy(alice,frank) :- sunny.\nbig(pencil) :- enemy(frank,frank), hot.\ncold :- cold, dislikes(george,pencil).\nowns(george,ball) :- owns(frank,pencil), friend(frank,george), cold.\nwet(phone) :- happy(alice), wet(book).\ncold :- cold, cold.\nsunny :- cold.\nsibling(carol,carol) :- likes(alice,phone), sibling(carol,dave), sibling(eve,alice).\nparent(eve,dave).\ndislikes(alice,car).\nlikes(dave,ball).\nowns(alice,apple).\nlikes(carol,phone).\nowns(dave,book).\nsibling(bob,george).\nsibling(bob,dave).",
    "natural language": "You are given the following rules:\nIf alice is a sibling of frank, then george is sad.\nIf carol is sad, then ball is big.\nIf george is hungry and eve dislikes phone, then it is cold.\nIf george is an enemy of alice, then it is cold.\nIf carol is a parent of frank and book is big, then phone is big.\nIf it is hot and frank is a friend of bob, then frank is a friend of dave.\nIf frank is happy, then it is sunny.\nIf george dislikes phone and book is big and eve dislikes apple, then it is sunny.\nIf it is hot, then alice is a friend of frank.\nIf it is hot and bob dislikes pencil, then carol is an enemy of bob.\nIf bob is sad, then carol is a friend of carol.\nIf book is small and car is small and george is tall, then ball is small.\nIf it is hot, then book is wet.\nIf it is hot, then book is small.\nIf eve is an enemy of carol, then alice is an enemy of alice.\nIf dave owns pencil and eve is happy, then dave owns pencil.\nIf it is sunny, then alice is an enemy of frank.\nIf frank is an enemy of frank and it is hot, then pencil is big.\nIf it is cold and george dislikes pencil, then it is cold.\nIf frank owns pencil and frank is a friend of george and it is cold, then george owns ball.\nIf alice is happy and book is wet, then phone is wet.\nIf it is cold and it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf alice likes phone and carol is a sibling of dave and eve is a sibling of alice, then carol is a sibling of carol.\n\nAnd the following facts:\neve is a parent of dave.\nalice dislikes car.\ndave likes ball.\nalice owns apple.\ncarol likes phone.\ndave owns book.\nbob is a sibling of george.\nbob is a sibling of dave.\n\nQUESTION:\nCould alice dislikes car explain george is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sad(george)",
      "non_explanation": "dislikes(alice,car)"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nhungry(bob).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\nbob is hungry.\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nIs bob is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,alice).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nhungry(bob).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\nbob is hungry.\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nIs eve is a sibling of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,bob).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nhungry(bob).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\nbob is hungry.\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nIs frank is a parent of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,alice).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nhungry(bob).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\nbob is hungry.\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nIs bob is a parent of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(dave).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nhungry(bob).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\nbob is hungry.\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nIs dave is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nCould bob is hungry explain it is cold?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "cold",
      "explanation": "hungry(bob)"
    }
  },
  {
    "q": "happy(dave).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nCould dave is happy explain it is cold?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "cold",
      "non_explanation": "happy(dave)"
    }
  },
  {
    "q": "sibling(frank,george).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nCould frank is a sibling of george explain it is cold?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "cold",
      "non_explanation": "sibling(frank,george)"
    }
  },
  {
    "q": "wet(book).",
    "c": "cold :- hungry(bob).\ntall(frank) :- small(book), sunny, wet(ball).\nhungry(bob) :- dislikes(frank,pencil).\nhot :- enemy(george,eve), big(phone).\ntall(bob) :- hot.\nhot :- tall(bob).\nparent(frank,carol) :- small(apple).\nhot :- parent(alice,george), sunny, friend(dave,dave).\nparent(carol,frank) :- sibling(george,dave).\nhungry(carol) :- happy(frank), tall(carol), cold.\nsmall(car) :- hungry(eve), sibling(carol,eve), small(apple).\nfriend(george,george) :- sad(alice).\nsad(eve) :- cold, hot, happy(eve).\nsunny :- friend(bob,george), happy(dave), sunny.\nsmall(car) :- sunny, small(ball), happy(frank).\nwet(pencil) :- wet(car), wet(book), happy(eve).\nbig(ball) :- sibling(dave,alice), likes(eve,apple).\nwet(apple) :- hot.\nsunny :- happy(frank), small(pencil), tall(bob).\nsad(bob) :- hot, dislikes(frank,book), big(apple).\nfriend(alice,carol) :- parent(frank,george), sibling(carol,alice), likes(dave,ball).\nhappy(carol) :- friend(george,frank), big(car).\nhappy(frank) :- big(phone).\nsmall(book) :- enemy(alice,eve).\nparent(george,dave).\nwet(book).\nhappy(dave).\nsibling(frank,george).\nenemy(carol,bob).\nsibling(eve,alice).\nsibling(carol,george).\ndislikes(carol,book).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then it is cold.\nIf book is small and it is sunny and ball is wet, then frank is tall.\nIf frank dislikes pencil, then bob is hungry.\nIf george is an enemy of eve and phone is big, then it is hot.\nIf it is hot, then bob is tall.\nIf bob is tall, then it is hot.\nIf apple is small, then frank is a parent of carol.\nIf alice is a parent of george and it is sunny and dave is a friend of dave, then it is hot.\nIf george is a sibling of dave, then carol is a parent of frank.\nIf frank is happy and carol is tall and it is cold, then carol is hungry.\nIf eve is hungry and carol is a sibling of eve and apple is small, then car is small.\nIf alice is sad, then george is a friend of george.\nIf it is cold and it is hot and eve is happy, then eve is sad.\nIf bob is a friend of george and dave is happy and it is sunny, then it is sunny.\nIf it is sunny and ball is small and frank is happy, then car is small.\nIf car is wet and book is wet and eve is happy, then pencil is wet.\nIf dave is a sibling of alice and eve likes apple, then ball is big.\nIf it is hot, then apple is wet.\nIf frank is happy and pencil is small and bob is tall, then it is sunny.\nIf it is hot and frank dislikes book and apple is big, then bob is sad.\nIf frank is a parent of george and carol is a sibling of alice and dave likes ball, then alice is a friend of carol.\nIf george is a friend of frank and car is big, then carol is happy.\nIf phone is big, then frank is happy.\nIf alice is an enemy of eve, then book is small.\n\nAnd the following facts:\ngeorge is a parent of dave.\nbook is wet.\ndave is happy.\nfrank is a sibling of george.\ncarol is an enemy of bob.\neve is a sibling of alice.\ncarol is a sibling of george.\ncarol dislikes book.\n\nQUESTION:\nCould book is wet explain it is cold?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "cold",
      "non_explanation": "wet(book)"
    }
  },
  {
    "q": "enemy(eve,dave).",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(dave,alice).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following information:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of alice.\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nIs eve is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,ball).",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(dave,alice).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following information:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of alice.\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nIs dave likes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,alice).",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(dave,alice).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following information:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of alice.\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nIs george is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sunny.",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(dave,alice).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following information:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of alice.\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nIs it is sunny true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,dave).",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(dave,alice).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following information:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of alice.\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nIs alice is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,alice).",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nCould dave is an enemy of alice explain eve dislikes apple?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,apple)",
      "explanation": "enemy(dave,alice)"
    }
  },
  {
    "q": "likes(eve,phone).",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nCould eve likes phone explain eve dislikes apple?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,apple)",
      "non_explanation": "likes(eve,phone)"
    }
  },
  {
    "q": "friend(carol,alice).",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nCould carol is a friend of alice explain eve dislikes apple?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,apple)",
      "non_explanation": "friend(carol,alice)"
    }
  },
  {
    "q": "enemy(bob,frank).",
    "c": "likes(dave,ball) :- enemy(dave,alice).\nenemy(alice,alice) :- likes(dave,ball).\nenemy(eve,dave) :- enemy(alice,alice).\ndislikes(eve,apple) :- enemy(eve,dave).\nparent(bob,bob) :- dislikes(eve,apple).\nsmall(phone) :- tall(bob), small(pencil).\nsmall(book) :- parent(dave,carol).\nbig(book) :- friend(bob,alice).\nbig(pencil) :- sibling(eve,bob), owns(george,ball).\nwet(phone) :- enemy(eve,george), wet(car), wet(ball).\nhappy(carol) :- hungry(dave), hungry(bob).\nwet(ball) :- wet(phone).\nhappy(dave) :- happy(george), dislikes(bob,pencil).\nparent(carol,eve) :- enemy(george,carol), likes(george,ball), parent(carol,alice).\nsmall(apple) :- hot, happy(frank).\nhappy(carol) :- sunny, cold, enemy(dave,carol).\nowns(dave,phone) :- owns(bob,pencil), happy(alice).\ntall(dave) :- dislikes(george,apple).\nlikes(alice,phone) :- likes(bob,car), big(car).\nlikes(george,ball) :- cold.\nhungry(bob) :- sunny.\nhungry(bob) :- hungry(frank), wet(ball), enemy(george,alice).\ndislikes(dave,apple) :- cold, tall(eve).\ntall(frank) :- big(book).\nenemy(bob,frank).\nlikes(eve,phone).\nparent(carol,dave).\nfriend(carol,alice).\nfriend(bob,george).\ndislikes(carol,apple).\nlikes(bob,book).\nowns(george,book).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of alice, then dave likes ball.\nIf dave likes ball, then alice is an enemy of alice.\nIf alice is an enemy of alice, then eve is an enemy of dave.\nIf eve is an enemy of dave, then eve dislikes apple.\nIf eve dislikes apple, then bob is a parent of bob.\nIf bob is tall and pencil is small, then phone is small.\nIf dave is a parent of carol, then book is small.\nIf bob is a friend of alice, then book is big.\nIf eve is a sibling of bob and george owns ball, then pencil is big.\nIf eve is an enemy of george and car is wet and ball is wet, then phone is wet.\nIf dave is hungry and bob is hungry, then carol is happy.\nIf phone is wet, then ball is wet.\nIf george is happy and bob dislikes pencil, then dave is happy.\nIf george is an enemy of carol and george likes ball and carol is a parent of alice, then carol is a parent of eve.\nIf it is hot and frank is happy, then apple is small.\nIf it is sunny and it is cold and dave is an enemy of carol, then carol is happy.\nIf bob owns pencil and alice is happy, then dave owns phone.\nIf george dislikes apple, then dave is tall.\nIf bob likes car and car is big, then alice likes phone.\nIf it is cold, then george likes ball.\nIf it is sunny, then bob is hungry.\nIf frank is hungry and ball is wet and george is an enemy of alice, then bob is hungry.\nIf it is cold and eve is tall, then dave dislikes apple.\nIf book is big, then frank is tall.\n\nAnd the following facts:\nbob is an enemy of frank.\neve likes phone.\ncarol is a parent of dave.\ncarol is a friend of alice.\nbob is a friend of george.\ncarol dislikes apple.\nbob likes book.\ngeorge owns book.\n\nQUESTION:\nCould bob is an enemy of frank explain eve dislikes apple?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,apple)",
      "non_explanation": "enemy(bob,frank)"
    }
  },
  {
    "q": "tall(dave).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nhungry(bob).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following information:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\nbob is hungry.\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nIs dave is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nhungry(bob).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following information:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\nbob is hungry.\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nIs car is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,frank).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nhungry(bob).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following information:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\nbob is hungry.\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nIs carol is a parent of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,eve).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nhungry(bob).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following information:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\nbob is hungry.\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nIs bob is a friend of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,pencil).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nhungry(bob).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following information:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\nbob is hungry.\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nIs carol likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nCould bob is hungry explain bob is a parent of alice?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,alice)",
      "explanation": "hungry(bob)"
    }
  },
  {
    "q": "owns(dave,phone).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nCould dave owns phone explain bob is a parent of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,alice)",
      "non_explanation": "owns(dave,phone)"
    }
  },
  {
    "q": "friend(george,dave).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nCould george is a friend of dave explain bob is a parent of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,alice)",
      "non_explanation": "friend(george,dave)"
    }
  },
  {
    "q": "dislikes(bob,phone).",
    "c": "hungry(carol) :- hungry(bob).\nsmall(car) :- hungry(carol).\nparent(bob,alice) :- small(car).\ntall(dave) :- parent(bob,alice).\nlikes(george,apple) :- tall(dave).\ntall(eve) :- happy(dave), wet(pencil), big(book).\ntall(george) :- parent(carol,frank), dislikes(bob,phone), cold.\ndislikes(bob,pencil) :- owns(george,ball), parent(bob,bob), cold.\nenemy(dave,dave) :- hungry(alice), friend(carol,eve).\ndislikes(carol,ball) :- sad(eve), parent(bob,bob), wet(ball).\nenemy(eve,frank) :- cold.\nparent(eve,eve) :- enemy(dave,bob).\nparent(alice,carol) :- dislikes(frank,ball), hot.\ntall(bob) :- sibling(carol,alice), tall(alice), tall(bob).\nfriend(george,bob) :- sibling(frank,alice), parent(george,carol).\nfriend(carol,bob) :- big(car), hot.\ndislikes(alice,apple) :- big(apple).\nowns(carol,book) :- tall(carol), enemy(george,frank).\nowns(frank,ball) :- hungry(bob), sibling(dave,george), sibling(alice,carol).\nsad(eve) :- cold.\nsad(frank) :- tall(alice).\ntall(eve) :- sunny.\nenemy(carol,dave) :- wet(pencil), likes(eve,book), big(pencil).\nenemy(eve,bob) :- friend(dave,george), cold, wet(ball).\nowns(dave,phone).\nfriend(alice,carol).\nfriend(george,dave).\ndislikes(bob,phone).\nowns(frank,book).\nparent(bob,carol).\ndislikes(frank,book).\ndislikes(alice,car).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then carol is hungry.\nIf carol is hungry, then car is small.\nIf car is small, then bob is a parent of alice.\nIf bob is a parent of alice, then dave is tall.\nIf dave is tall, then george likes apple.\nIf dave is happy and pencil is wet and book is big, then eve is tall.\nIf carol is a parent of frank and bob dislikes phone and it is cold, then george is tall.\nIf george owns ball and bob is a parent of bob and it is cold, then bob dislikes pencil.\nIf alice is hungry and carol is a friend of eve, then dave is an enemy of dave.\nIf eve is sad and bob is a parent of bob and ball is wet, then carol dislikes ball.\nIf it is cold, then eve is an enemy of frank.\nIf dave is an enemy of bob, then eve is a parent of eve.\nIf frank dislikes ball and it is hot, then alice is a parent of carol.\nIf carol is a sibling of alice and alice is tall and bob is tall, then bob is tall.\nIf frank is a sibling of alice and george is a parent of carol, then george is a friend of bob.\nIf car is big and it is hot, then carol is a friend of bob.\nIf apple is big, then alice dislikes apple.\nIf carol is tall and george is an enemy of frank, then carol owns book.\nIf bob is hungry and dave is a sibling of george and alice is a sibling of carol, then frank owns ball.\nIf it is cold, then eve is sad.\nIf alice is tall, then frank is sad.\nIf it is sunny, then eve is tall.\nIf pencil is wet and eve likes book and pencil is big, then carol is an enemy of dave.\nIf dave is a friend of george and it is cold and ball is wet, then eve is an enemy of bob.\n\nAnd the following facts:\ndave owns phone.\nalice is a friend of carol.\ngeorge is a friend of dave.\nbob dislikes phone.\nfrank owns book.\nbob is a parent of carol.\nfrank dislikes book.\nalice dislikes car.\n\nQUESTION:\nCould bob dislikes phone explain bob is a parent of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,alice)",
      "non_explanation": "dislikes(bob,phone)"
    }
  },
  {
    "q": "sibling(dave,alice).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nlikes(george,apple).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\ngeorge likes apple.\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nIs dave is a sibling of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,carol).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nlikes(george,apple).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\ngeorge likes apple.\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nIs alice is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(ball).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nlikes(george,apple).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\ngeorge likes apple.\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nIs ball is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,book).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nlikes(george,apple).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\ngeorge likes apple.\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nIs bob dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,book).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nlikes(george,apple).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following information:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\ngeorge likes apple.\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nIs dave dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,apple).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following rules:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nCould george likes apple explain eve is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "happy(eve)",
      "explanation": "likes(george,apple)"
    }
  },
  {
    "q": "sibling(frank,george).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following rules:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nCould frank is a sibling of george explain eve is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "happy(eve)",
      "non_explanation": "sibling(frank,george)"
    }
  },
  {
    "q": "likes(eve,pencil).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following rules:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nCould eve likes pencil explain eve is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "happy(eve)",
      "non_explanation": "likes(eve,pencil)"
    }
  },
  {
    "q": "big(phone).",
    "c": "enemy(carol,carol) :- likes(george,apple).\nwet(ball) :- enemy(carol,carol).\nsibling(bob,frank) :- wet(ball).\nsibling(dave,alice) :- sibling(bob,frank).\nsibling(alice,dave) :- sibling(dave,alice).\ntall(bob) :- sibling(alice,dave).\nhot :- tall(bob).\nhappy(eve) :- hot.\nenemy(alice,carol) :- happy(eve).\nhot :- enemy(alice,carol).\nsmall(apple) :- cold, parent(carol,carol), big(phone).\nbig(ball) :- big(book).\nsmall(ball) :- small(pencil), small(car), hot.\nbig(ball) :- tall(dave), likes(dave,book).\nhot :- cold.\nsunny :- big(apple).\nhot :- tall(eve).\nowns(frank,apple) :- owns(alice,ball).\nfriend(frank,dave) :- wet(ball), dislikes(eve,ball).\nowns(bob,book) :- dislikes(carol,ball).\nfriend(george,dave) :- sunny, dislikes(george,pencil), sibling(george,dave).\nsunny :- sunny, owns(carol,phone), friend(carol,frank).\nhappy(bob) :- hot, happy(alice).\nhappy(dave) :- happy(frank), happy(bob), happy(eve).\nsibling(frank,george).\nbig(phone).\nfriend(carol,george).\nlikes(eve,pencil).\nparent(alice,dave).\nenemy(carol,eve).\nparent(eve,alice).\ndislikes(alice,book).",
    "natural language": "You are given the following rules:\nIf george likes apple, then carol is an enemy of carol.\nIf carol is an enemy of carol, then ball is wet.\nIf ball is wet, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is a sibling of alice.\nIf dave is a sibling of alice, then alice is a sibling of dave.\nIf alice is a sibling of dave, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then eve is happy.\nIf eve is happy, then alice is an enemy of carol.\nIf alice is an enemy of carol, then it is hot.\nIf it is cold and carol is a parent of carol and phone is big, then apple is small.\nIf book is big, then ball is big.\nIf pencil is small and car is small and it is hot, then ball is small.\nIf dave is tall and dave likes book, then ball is big.\nIf it is cold, then it is hot.\nIf apple is big, then it is sunny.\nIf eve is tall, then it is hot.\nIf alice owns ball, then frank owns apple.\nIf ball is wet and eve dislikes ball, then frank is a friend of dave.\nIf carol dislikes ball, then bob owns book.\nIf it is sunny and george dislikes pencil and george is a sibling of dave, then george is a friend of dave.\nIf it is sunny and carol owns phone and carol is a friend of frank, then it is sunny.\nIf it is hot and alice is happy, then bob is happy.\nIf frank is happy and bob is happy and eve is happy, then dave is happy.\n\nAnd the following facts:\nfrank is a sibling of george.\nphone is big.\ncarol is a friend of george.\neve likes pencil.\nalice is a parent of dave.\ncarol is an enemy of eve.\neve is a parent of alice.\nalice dislikes book.\n\nQUESTION:\nCould phone is big explain eve is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "happy(eve)",
      "non_explanation": "big(phone)"
    }
  },
  {
    "q": "friend(alice,frank).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\nwet(car).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\ncar is wet.\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nIs alice is a friend of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\nwet(car).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\ncar is wet.\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,pencil).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\nwet(car).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\ncar is wet.\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nIs dave owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,phone).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\nwet(car).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\ncar is wet.\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nIs frank dislikes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(eve).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\nwet(car).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following information:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\ncar is wet.\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nIs eve is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following rules:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nCould car is wet explain george is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "explanation": "wet(car)"
    }
  },
  {
    "q": "likes(frank,phone).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following rules:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nCould frank likes phone explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "likes(frank,phone)"
    }
  },
  {
    "q": "dislikes(eve,pencil).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following rules:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nCould eve dislikes pencil explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "dislikes(eve,pencil)"
    }
  },
  {
    "q": "friend(alice,frank).",
    "c": "likes(carol,pencil) :- wet(car).\nhungry(eve) :- likes(carol,pencil).\nsad(eve) :- hungry(eve).\nhungry(eve) :- sad(eve).\nhappy(george) :- hungry(eve).\ntall(bob) :- happy(george).\nparent(george,carol) :- tall(bob).\nhappy(frank) :- parent(george,carol).\nlikes(bob,phone) :- happy(frank).\nsad(frank) :- likes(bob,phone).\nhot :- sad(frank), tall(bob).\nfriend(dave,dave) :- enemy(alice,bob), likes(dave,car).\nfriend(dave,alice) :- hot, hungry(george).\ncold :- parent(alice,eve), small(phone), tall(frank).\ncold :- big(phone), sunny, dislikes(alice,book).\nhot :- big(apple), hungry(eve).\nhungry(carol) :- wet(book), tall(george).\nhungry(carol) :- small(phone).\nsunny :- tall(bob), sad(eve).\nsunny :- happy(carol), big(book), hungry(carol).\nlikes(george,car) :- hungry(eve).\nowns(carol,book) :- cold, wet(pencil), cold.\ntall(dave) :- happy(bob), hot.\nowns(carol,book) :- dislikes(frank,phone).\ndislikes(eve,pencil).\nlikes(frank,phone).\nlikes(frank,pencil).\nfriend(alice,frank).\nenemy(dave,alice).\nenemy(carol,george).\nlikes(dave,pencil).\nowns(eve,ball).",
    "natural language": "You are given the following rules:\nIf car is wet, then carol likes pencil.\nIf carol likes pencil, then eve is hungry.\nIf eve is hungry, then eve is sad.\nIf eve is sad, then eve is hungry.\nIf eve is hungry, then george is happy.\nIf george is happy, then bob is tall.\nIf bob is tall, then george is a parent of carol.\nIf george is a parent of carol, then frank is happy.\nIf frank is happy, then bob likes phone.\nIf bob likes phone, then frank is sad.\nIf frank is sad and bob is tall, then it is hot.\nIf alice is an enemy of bob and dave likes car, then dave is a friend of dave.\nIf it is hot and george is hungry, then dave is a friend of alice.\nIf alice is a parent of eve and phone is small and frank is tall, then it is cold.\nIf phone is big and it is sunny and alice dislikes book, then it is cold.\nIf apple is big and eve is hungry, then it is hot.\nIf book is wet and george is tall, then carol is hungry.\nIf phone is small, then carol is hungry.\nIf bob is tall and eve is sad, then it is sunny.\nIf carol is happy and book is big and carol is hungry, then it is sunny.\nIf eve is hungry, then george likes car.\nIf it is cold and pencil is wet and it is cold, then carol owns book.\nIf bob is happy and it is hot, then dave is tall.\nIf frank dislikes phone, then carol owns book.\n\nAnd the following facts:\neve dislikes pencil.\nfrank likes phone.\nfrank likes pencil.\nalice is a friend of frank.\ndave is an enemy of alice.\ncarol is an enemy of george.\ndave likes pencil.\neve owns ball.\n\nQUESTION:\nCould alice is a friend of frank explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "friend(alice,frank)"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nhappy(frank).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following information:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nfrank is happy.\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nIs frank is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nhappy(frank).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following information:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nfrank is happy.\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nIs it is hot true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,alice).",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nhappy(frank).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following information:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nfrank is happy.\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nIs george is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,pencil).",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nhappy(frank).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following information:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nfrank is happy.\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nIs bob dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nhappy(frank).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following information:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nfrank is happy.\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nIs frank is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following rules:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nCould frank is happy explain bob is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "explanation": "happy(frank)"
    }
  },
  {
    "q": "friend(carol,george).",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following rules:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nCould carol is a friend of george explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "friend(carol,george)"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following rules:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nCould frank is a parent of alice explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "parent(frank,alice)"
    }
  },
  {
    "q": "enemy(alice,frank).",
    "c": "small(car) :- happy(frank).\nenemy(carol,alice) :- small(car).\nsmall(book) :- enemy(carol,alice).\ncold :- small(book).\nlikes(carol,phone) :- cold.\nbig(ball) :- likes(carol,phone).\nhungry(george) :- big(ball).\ncold :- hungry(george).\nenemy(bob,eve) :- cold.\nhot :- enemy(bob,eve).\nenemy(george,george) :- hot.\nparent(frank,dave) :- enemy(george,george).\nhungry(alice) :- parent(frank,dave).\nbig(pencil) :- hungry(alice).\nfriend(george,dave) :- big(pencil).\nsad(carol) :- friend(george,dave).\nenemy(carol,alice) :- sad(carol).\ntall(bob) :- enemy(carol,alice).\nhot :- tall(bob).\nfriend(bob,dave) :- hot.\ndislikes(george,apple) :- dislikes(dave,pencil), wet(phone).\ndislikes(bob,apple) :- cold, happy(dave), dislikes(george,apple).\nfriend(alice,george) :- wet(ball).\nhungry(george) :- hungry(frank), hungry(carol).\nenemy(alice,frank).\nenemy(frank,carol).\nparent(frank,alice).\nfriend(carol,george).\nlikes(carol,car).\nbig(apple).\nlikes(eve,ball).\nbig(book).",
    "natural language": "You are given the following rules:\nIf frank is happy, then car is small.\nIf car is small, then carol is an enemy of alice.\nIf carol is an enemy of alice, then book is small.\nIf book is small, then it is cold.\nIf it is cold, then carol likes phone.\nIf carol likes phone, then ball is big.\nIf ball is big, then george is hungry.\nIf george is hungry, then it is cold.\nIf it is cold, then bob is an enemy of eve.\nIf bob is an enemy of eve, then it is hot.\nIf it is hot, then george is an enemy of george.\nIf george is an enemy of george, then frank is a parent of dave.\nIf frank is a parent of dave, then alice is hungry.\nIf alice is hungry, then pencil is big.\nIf pencil is big, then george is a friend of dave.\nIf george is a friend of dave, then carol is sad.\nIf carol is sad, then carol is an enemy of alice.\nIf carol is an enemy of alice, then bob is tall.\nIf bob is tall, then it is hot.\nIf it is hot, then bob is a friend of dave.\nIf dave dislikes pencil and phone is wet, then george dislikes apple.\nIf it is cold and dave is happy and george dislikes apple, then bob dislikes apple.\nIf ball is wet, then alice is a friend of george.\nIf frank is hungry and carol is hungry, then george is hungry.\n\nAnd the following facts:\nalice is an enemy of frank.\nfrank is an enemy of carol.\nfrank is a parent of alice.\ncarol is a friend of george.\ncarol likes car.\napple is big.\neve likes ball.\nbook is big.\n\nQUESTION:\nCould alice is an enemy of frank explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "enemy(alice,frank)"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nsmall(book).\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\nbook is small.\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs carol is a parent of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,frank).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nsmall(book).\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\nbook is small.\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs eve is a parent of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,carol).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nsmall(book).\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\nbook is small.\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs george is a parent of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(car).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nsmall(book).\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\nbook is small.\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs car is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nsmall(book).\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following information:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\nbook is small.\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nIs carol is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(book).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nCould book is small explain bob is a parent of bob?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,bob)",
      "explanation": "small(book)"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nCould dave is a parent of alice explain bob is a parent of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,bob)",
      "non_explanation": "parent(dave,alice)"
    }
  },
  {
    "q": "parent(eve,frank).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nCould eve is a parent of frank explain bob is a parent of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,bob)",
      "non_explanation": "parent(eve,frank)"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "dislikes(alice,apple) :- small(book).\nsad(frank) :- dislikes(alice,apple).\ntall(eve) :- sad(frank).\nsunny :- tall(eve).\nhappy(frank) :- sunny.\nhungry(bob) :- happy(frank).\nhappy(alice) :- hungry(bob).\nhappy(george) :- happy(alice).\ncold :- happy(george).\ncold :- cold.\nsunny :- cold.\nlikes(george,phone) :- sunny.\nenemy(george,carol) :- likes(george,phone).\nparent(frank,alice) :- enemy(george,carol).\ntall(george) :- parent(frank,alice).\nbig(pencil) :- tall(george).\ndislikes(bob,apple) :- big(pencil).\nbig(ball) :- dislikes(bob,apple).\ncold :- big(ball).\nparent(bob,bob) :- cold.\nbig(ball) :- sibling(alice,bob), enemy(eve,carol), happy(george).\nbig(phone) :- big(phone), big(ball).\nparent(frank,eve) :- dislikes(frank,pencil), dislikes(dave,ball), parent(alice,bob).\nparent(eve,dave) :- hot.\nparent(dave,alice).\nparent(eve,alice).\nparent(eve,frank).\nparent(carol,alice).\nparent(george,alice).\nparent(alice,george).\nenemy(george,dave).\nparent(carol,george).",
    "natural language": "You are given the following rules:\nIf book is small, then alice dislikes apple.\nIf alice dislikes apple, then frank is sad.\nIf frank is sad, then eve is tall.\nIf eve is tall, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then bob is hungry.\nIf bob is hungry, then alice is happy.\nIf alice is happy, then george is happy.\nIf george is happy, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then george likes phone.\nIf george likes phone, then george is an enemy of carol.\nIf george is an enemy of carol, then frank is a parent of alice.\nIf frank is a parent of alice, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then bob dislikes apple.\nIf bob dislikes apple, then ball is big.\nIf ball is big, then it is cold.\nIf it is cold, then bob is a parent of bob.\nIf alice is a sibling of bob and eve is an enemy of carol and george is happy, then ball is big.\nIf phone is big and ball is big, then phone is big.\nIf frank dislikes pencil and dave dislikes ball and alice is a parent of bob, then frank is a parent of eve.\nIf it is hot, then eve is a parent of dave.\n\nAnd the following facts:\ndave is a parent of alice.\neve is a parent of alice.\neve is a parent of frank.\ncarol is a parent of alice.\ngeorge is a parent of alice.\nalice is a parent of george.\ngeorge is an enemy of dave.\ncarol is a parent of george.\n\nQUESTION:\nCould carol is a parent of alice explain bob is a parent of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,bob)",
      "non_explanation": "parent(carol,alice)"
    }
  },
  {
    "q": "dislikes(carol,ball).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nfriend(alice,bob).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following information:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\nalice is a friend of bob.\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nIs carol dislikes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,apple).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nfriend(alice,bob).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following information:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\nalice is a friend of bob.\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nIs frank likes apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,book).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nfriend(alice,bob).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following information:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\nalice is a friend of bob.\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nIs alice likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,car).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nfriend(alice,bob).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following information:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\nalice is a friend of bob.\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nIs eve owns car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nfriend(alice,bob).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following information:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\nalice is a friend of bob.\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nIs bob is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,bob).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following rules:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nCould alice is a friend of bob explain george is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "tall(george)",
      "explanation": "friend(alice,bob)"
    }
  },
  {
    "q": "owns(dave,apple).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following rules:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nCould dave owns apple explain george is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "tall(george)",
      "non_explanation": "owns(dave,apple)"
    }
  },
  {
    "q": "dislikes(frank,pencil).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following rules:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nCould frank dislikes pencil explain george is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "tall(george)",
      "non_explanation": "dislikes(frank,pencil)"
    }
  },
  {
    "q": "enemy(alice,george).",
    "c": "tall(george) :- friend(alice,bob).\nowns(bob,pencil) :- hot.\nowns(frank,phone) :- likes(eve,book), hot.\nlikes(carol,apple) :- dislikes(eve,book), cold.\nlikes(alice,book) :- sad(dave), likes(carol,apple).\ndislikes(eve,book) :- sad(bob).\nsmall(ball) :- hot, sad(alice).\nhot :- happy(bob), enemy(dave,eve), big(book).\ndislikes(carol,book) :- dislikes(carol,apple), tall(bob).\ndislikes(bob,book) :- sunny, parent(carol,dave).\nlikes(alice,apple) :- likes(dave,pencil).\nhot :- hot, small(book).\nsmall(phone) :- tall(frank), enemy(dave,george).\nbig(car) :- likes(carol,ball), enemy(frank,alice), big(apple).\nbig(apple) :- parent(eve,bob).\ndislikes(dave,ball) :- likes(carol,car), likes(bob,phone).\nwet(pencil) :- sunny, wet(pencil), small(ball).\nwet(phone) :- owns(george,ball).\nenemy(frank,dave) :- big(car).\nenemy(george,frank) :- owns(alice,phone), small(car), enemy(frank,alice).\nhot :- happy(george), hot.\nparent(alice,bob) :- enemy(frank,dave), small(book).\nsunny :- wet(ball), enemy(eve,bob).\nparent(carol,dave) :- parent(alice,bob), cold, hungry(frank).\nowns(dave,apple).\ndislikes(frank,pencil).\ndislikes(george,book).\nenemy(alice,george).\nenemy(eve,carol).\nlikes(frank,apple).\nenemy(alice,eve).\nlikes(eve,phone).\ndislikes(carol,ball).\nenemy(frank,bob).\nowns(eve,book).",
    "natural language": "You are given the following rules:\nIf alice is a friend of bob, then george is tall.\nIf it is hot, then bob owns pencil.\nIf eve likes book and it is hot, then frank owns phone.\nIf eve dislikes book and it is cold, then carol likes apple.\nIf dave is sad and carol likes apple, then alice likes book.\nIf bob is sad, then eve dislikes book.\nIf it is hot and alice is sad, then ball is small.\nIf bob is happy and dave is an enemy of eve and book is big, then it is hot.\nIf carol dislikes apple and bob is tall, then carol dislikes book.\nIf it is sunny and carol is a parent of dave, then bob dislikes book.\nIf dave likes pencil, then alice likes apple.\nIf it is hot and book is small, then it is hot.\nIf frank is tall and dave is an enemy of george, then phone is small.\nIf carol likes ball and frank is an enemy of alice and apple is big, then car is big.\nIf eve is a parent of bob, then apple is big.\nIf carol likes car and bob likes phone, then dave dislikes ball.\nIf it is sunny and pencil is wet and ball is small, then pencil is wet.\nIf george owns ball, then phone is wet.\nIf car is big, then frank is an enemy of dave.\nIf alice owns phone and car is small and frank is an enemy of alice, then george is an enemy of frank.\nIf george is happy and it is hot, then it is hot.\nIf frank is an enemy of dave and book is small, then alice is a parent of bob.\nIf ball is wet and eve is an enemy of bob, then it is sunny.\nIf alice is a parent of bob and it is cold and frank is hungry, then carol is a parent of dave.\n\nAnd the following facts:\ndave owns apple.\nfrank dislikes pencil.\ngeorge dislikes book.\nalice is an enemy of george.\neve is an enemy of carol.\nfrank likes apple.\nalice is an enemy of eve.\neve likes phone.\ncarol dislikes ball.\nfrank is an enemy of bob.\neve owns book.\n\nQUESTION:\nCould alice is an enemy of george explain george is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "tall(george)",
      "non_explanation": "enemy(alice,george)"
    }
  },
  {
    "q": "enemy(bob,dave).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nhungry(eve).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\neve is hungry.\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nIs bob is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nhungry(eve).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\neve is hungry.\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nIs eve is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nhungry(eve).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\neve is hungry.\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nIs pencil is small true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,dave).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nhungry(eve).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\neve is hungry.\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nIs carol is a friend of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,carol).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nhungry(eve).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following information:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\neve is hungry.\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nIs eve is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nCould eve is hungry explain book is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "wet(book)",
      "explanation": "hungry(eve)"
    }
  },
  {
    "q": "likes(bob,ball).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nCould bob likes ball explain book is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "wet(book)",
      "non_explanation": "likes(bob,ball)"
    }
  },
  {
    "q": "friend(dave,bob).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nCould dave is a friend of bob explain book is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "wet(book)",
      "non_explanation": "friend(dave,bob)"
    }
  },
  {
    "q": "owns(dave,book).",
    "c": "wet(book) :- hungry(eve).\nenemy(george,alice) :- parent(george,george).\nhot :- sibling(eve,alice), tall(frank).\nhot :- dislikes(bob,ball), sunny.\nenemy(carol,dave) :- hungry(george), tall(carol), dislikes(frank,pencil).\nparent(dave,frank) :- hungry(alice), sibling(alice,alice), enemy(dave,dave).\nsmall(car) :- likes(george,book), dislikes(carol,car).\nenemy(carol,carol) :- wet(ball), cold, enemy(frank,frank).\nsmall(apple) :- owns(carol,apple), tall(bob), hot.\nsunny :- sibling(george,dave), tall(frank).\nlikes(frank,apple) :- wet(apple).\nhot :- parent(george,frank), wet(pencil).\nlikes(frank,book) :- friend(dave,bob), wet(apple).\nparent(frank,alice) :- hot.\ncold :- friend(carol,eve).\ncold :- sibling(frank,eve), likes(alice,car), sad(eve).\nsunny :- tall(bob).\nsmall(phone) :- happy(carol), sad(carol).\ncold :- hungry(bob).\nsmall(phone) :- big(phone), happy(dave).\nhungry(eve) :- happy(bob), sad(bob), dislikes(eve,pencil).\nowns(george,pencil) :- wet(pencil), likes(alice,ball).\nowns(frank,ball) :- hot, wet(apple), sad(alice).\nbig(phone) :- sunny, big(ball).\nfriend(dave,bob).\nlikes(bob,ball).\nowns(dave,book).\nlikes(bob,car).\nsibling(bob,george).\nenemy(bob,dave).\nenemy(dave,george).\nenemy(bob,alice).\nhappy(dave).\nlikes(frank,apple).\nlikes(george,pencil).",
    "natural language": "You are given the following rules:\nIf eve is hungry, then book is wet.\nIf george is a parent of george, then george is an enemy of alice.\nIf eve is a sibling of alice and frank is tall, then it is hot.\nIf bob dislikes ball and it is sunny, then it is hot.\nIf george is hungry and carol is tall and frank dislikes pencil, then carol is an enemy of dave.\nIf alice is hungry and alice is a sibling of alice and dave is an enemy of dave, then dave is a parent of frank.\nIf george likes book and carol dislikes car, then car is small.\nIf ball is wet and it is cold and frank is an enemy of frank, then carol is an enemy of carol.\nIf carol owns apple and bob is tall and it is hot, then apple is small.\nIf george is a sibling of dave and frank is tall, then it is sunny.\nIf apple is wet, then frank likes apple.\nIf george is a parent of frank and pencil is wet, then it is hot.\nIf dave is a friend of bob and apple is wet, then frank likes book.\nIf it is hot, then frank is a parent of alice.\nIf carol is a friend of eve, then it is cold.\nIf frank is a sibling of eve and alice likes car and eve is sad, then it is cold.\nIf bob is tall, then it is sunny.\nIf carol is happy and carol is sad, then phone is small.\nIf bob is hungry, then it is cold.\nIf phone is big and dave is happy, then phone is small.\nIf bob is happy and bob is sad and eve dislikes pencil, then eve is hungry.\nIf pencil is wet and alice likes ball, then george owns pencil.\nIf it is hot and apple is wet and alice is sad, then frank owns ball.\nIf it is sunny and ball is big, then phone is big.\n\nAnd the following facts:\ndave is a friend of bob.\nbob likes ball.\ndave owns book.\nbob likes car.\nbob is a sibling of george.\nbob is an enemy of dave.\ndave is an enemy of george.\nbob is an enemy of alice.\ndave is happy.\nfrank likes apple.\ngeorge likes pencil.\n\nQUESTION:\nCould dave owns book explain book is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "wet(book)",
      "non_explanation": "owns(dave,book)"
    }
  },
  {
    "q": "parent(george,dave).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,george).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of george.\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nIs george is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,phone).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,george).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of george.\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nIs frank dislikes phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,carol).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,george).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of george.\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nIs bob is a parent of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,book).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,george).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of george.\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nIs carol likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,alice).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,george).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following information:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of george.\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nIs george is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nCould dave is an enemy of george explain george likes car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "likes(george,car)",
      "explanation": "enemy(dave,george)"
    }
  },
  {
    "q": "enemy(dave,frank).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nCould dave is an enemy of frank explain george likes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "likes(george,car)",
      "non_explanation": "enemy(dave,frank)"
    }
  },
  {
    "q": "sibling(eve,george).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nCould eve is a sibling of george explain george likes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "likes(george,car)",
      "non_explanation": "sibling(eve,george)"
    }
  },
  {
    "q": "dislikes(carol,apple).",
    "c": "likes(george,car) :- enemy(dave,george).\nhot :- likes(george,car).\nowns(eve,car) :- hot.\nhungry(eve) :- owns(eve,car).\nwet(book) :- hungry(eve).\nsunny :- dislikes(george,apple).\nsunny :- dislikes(bob,car), sunny.\nhungry(alice) :- hungry(carol), hungry(eve).\nhungry(alice) :- big(pencil).\nparent(carol,george) :- small(pencil), wet(car).\nhot :- owns(eve,apple).\nparent(eve,carol) :- parent(eve,alice).\nhot :- hot.\nsmall(apple) :- sibling(bob,alice).\nsmall(pencil) :- small(pencil), cold.\nhot :- wet(pencil), hungry(george), hot.\nsunny :- sad(dave), sad(bob).\nowns(carol,book) :- owns(bob,book).\nowns(eve,ball) :- dislikes(dave,car), owns(alice,book), owns(alice,apple).\nwet(book) :- wet(ball).\nwet(apple) :- wet(phone).\nhot :- sunny, enemy(george,carol).\nwet(ball) :- happy(carol).\ntall(frank) :- enemy(eve,george), tall(eve).\nenemy(dave,frank).\ndislikes(carol,apple).\nlikes(dave,phone).\nsibling(eve,george).\nparent(george,dave).\ntall(eve).\nsibling(eve,carol).\ndislikes(frank,phone).\nlikes(dave,ball).\nsibling(alice,bob).\nenemy(frank,dave).",
    "natural language": "You are given the following rules:\nIf dave is an enemy of george, then george likes car.\nIf george likes car, then it is hot.\nIf it is hot, then eve owns car.\nIf eve owns car, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf george dislikes apple, then it is sunny.\nIf bob dislikes car and it is sunny, then it is sunny.\nIf carol is hungry and eve is hungry, then alice is hungry.\nIf pencil is big, then alice is hungry.\nIf pencil is small and car is wet, then carol is a parent of george.\nIf eve owns apple, then it is hot.\nIf eve is a parent of alice, then eve is a parent of carol.\nIf it is hot, then it is hot.\nIf bob is a sibling of alice, then apple is small.\nIf pencil is small and it is cold, then pencil is small.\nIf pencil is wet and george is hungry and it is hot, then it is hot.\nIf dave is sad and bob is sad, then it is sunny.\nIf bob owns book, then carol owns book.\nIf dave dislikes car and alice owns book and alice owns apple, then eve owns ball.\nIf ball is wet, then book is wet.\nIf phone is wet, then apple is wet.\nIf it is sunny and george is an enemy of carol, then it is hot.\nIf carol is happy, then ball is wet.\nIf eve is an enemy of george and eve is tall, then frank is tall.\n\nAnd the following facts:\ndave is an enemy of frank.\ncarol dislikes apple.\ndave likes phone.\neve is a sibling of george.\ngeorge is a parent of dave.\neve is tall.\neve is a sibling of carol.\nfrank dislikes phone.\ndave likes ball.\nalice is a sibling of bob.\nfrank is an enemy of dave.\n\nQUESTION:\nCould carol dislikes apple explain george likes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "likes(george,car)",
      "non_explanation": "dislikes(carol,apple)"
    }
  },
  {
    "q": "dislikes(dave,book).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(bob,phone).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\nlikes(bob,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nbob likes phone.\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\nbob likes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nIs dave dislikes book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,alice).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(bob,phone).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\nlikes(bob,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nbob likes phone.\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\nbob likes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nIs eve is a parent of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,phone).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(bob,phone).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\nlikes(bob,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nbob likes phone.\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\nbob likes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nIs george owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,bob).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(bob,phone).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\nlikes(bob,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nbob likes phone.\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\nbob likes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nIs dave is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,frank).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(bob,phone).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\nlikes(bob,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following information:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nbob likes phone.\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\nbob likes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nIs dave is a parent of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,phone).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nCould bob likes phone explain dave is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "explanation": "likes(bob,phone)"
    }
  },
  {
    "q": "likes(frank,ball).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nCould frank likes ball explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "likes(frank,ball)"
    }
  },
  {
    "q": "dislikes(frank,phone).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nCould frank dislikes phone explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "dislikes(frank,phone)"
    }
  },
  {
    "q": "parent(eve,alice).",
    "c": "dislikes(dave,book) :- likes(bob,phone).\nsad(dave) :- dislikes(dave,book).\nhungry(dave) :- sad(dave).\nsibling(eve,dave) :- hungry(dave).\ntall(carol) :- sibling(eve,dave).\ntall(george) :- big(car), tall(carol).\nhot :- friend(george,alice).\nhot :- owns(eve,pencil).\nenemy(alice,george) :- hot.\nparent(alice,eve) :- dislikes(bob,phone), likes(george,car), likes(eve,pencil).\nsibling(alice,bob) :- cold, parent(bob,dave), sibling(carol,eve).\nenemy(george,carol) :- wet(phone), friend(frank,frank).\nsibling(carol,dave) :- sibling(bob,alice), enemy(dave,dave), likes(eve,phone).\nhungry(frank) :- wet(phone), sibling(george,eve), wet(pencil).\nparent(bob,eve) :- dislikes(carol,apple).\nparent(dave,alice) :- enemy(dave,bob).\nsad(eve) :- hungry(frank), big(apple), enemy(frank,frank).\nsmall(phone) :- owns(alice,book), wet(book).\ntall(eve) :- friend(george,alice), sibling(dave,dave), hungry(eve).\nsmall(ball) :- happy(eve), hot.\nowns(frank,apple) :- hot.\nhungry(george) :- big(pencil), small(ball).\nowns(carol,ball) :- happy(carol).\nfriend(dave,carol) :- hot, friend(frank,george), owns(eve,apple).\nlikes(frank,ball).\nparent(eve,alice).\nsibling(george,dave).\ndislikes(frank,phone).\ndislikes(george,phone).\nfriend(alice,carol).\ndislikes(frank,ball).\nlikes(dave,apple).\ndislikes(alice,pencil).\nparent(eve,bob).",
    "natural language": "You are given the following rules:\nIf bob likes phone, then dave dislikes book.\nIf dave dislikes book, then dave is sad.\nIf dave is sad, then dave is hungry.\nIf dave is hungry, then eve is a sibling of dave.\nIf eve is a sibling of dave, then carol is tall.\nIf car is big and carol is tall, then george is tall.\nIf george is a friend of alice, then it is hot.\nIf eve owns pencil, then it is hot.\nIf it is hot, then alice is an enemy of george.\nIf bob dislikes phone and george likes car and eve likes pencil, then alice is a parent of eve.\nIf it is cold and bob is a parent of dave and carol is a sibling of eve, then alice is a sibling of bob.\nIf phone is wet and frank is a friend of frank, then george is an enemy of carol.\nIf bob is a sibling of alice and dave is an enemy of dave and eve likes phone, then carol is a sibling of dave.\nIf phone is wet and george is a sibling of eve and pencil is wet, then frank is hungry.\nIf carol dislikes apple, then bob is a parent of eve.\nIf dave is an enemy of bob, then dave is a parent of alice.\nIf frank is hungry and apple is big and frank is an enemy of frank, then eve is sad.\nIf alice owns book and book is wet, then phone is small.\nIf george is a friend of alice and dave is a sibling of dave and eve is hungry, then eve is tall.\nIf eve is happy and it is hot, then ball is small.\nIf it is hot, then frank owns apple.\nIf pencil is big and ball is small, then george is hungry.\nIf carol is happy, then carol owns ball.\nIf it is hot and frank is a friend of george and eve owns apple, then dave is a friend of carol.\n\nAnd the following facts:\nfrank likes ball.\neve is a parent of alice.\ngeorge is a sibling of dave.\nfrank dislikes phone.\ngeorge dislikes phone.\nalice is a friend of carol.\nfrank dislikes ball.\ndave likes apple.\nalice dislikes pencil.\neve is a parent of bob.\n\nQUESTION:\nCould eve is a parent of alice explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "parent(eve,alice)"
    }
  },
  {
    "q": "likes(eve,ball).",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\ncold.\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\nit is cold.\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nIs eve likes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,alice).",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\ncold.\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\nit is cold.\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nIs alice is a parent of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\ncold.\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\nit is cold.\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nIs dave is an enemy of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\ncold.\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\nit is cold.\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nIs carol is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,apple).",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\ncold.\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following information:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\nit is cold.\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nIs frank dislikes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nCould it is cold explain bob is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "explanation": "cold"
    }
  },
  {
    "q": "big(pencil).",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nCould pencil is big explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "big(pencil)"
    }
  },
  {
    "q": "friend(bob,alice).",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nCould bob is a friend of alice explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "friend(bob,alice)"
    }
  },
  {
    "q": "likes(frank,phone).",
    "c": "tall(bob) :- cold.\nsunny :- tall(bob).\ntall(eve) :- sunny.\nlikes(eve,apple) :- tall(eve).\nsmall(ball) :- likes(eve,apple).\ndislikes(alice,book) :- small(ball).\nowns(carol,phone) :- dislikes(alice,book).\ntall(bob) :- owns(carol,phone).\ndislikes(carol,ball) :- tall(bob).\nparent(alice,alice) :- dislikes(carol,ball).\nsunny :- enemy(dave,bob), big(phone), sunny.\nhappy(dave) :- owns(alice,car), sunny, hot.\ntall(dave) :- tall(dave), friend(frank,frank).\ntall(frank) :- owns(dave,ball), likes(george,ball).\nhappy(carol) :- enemy(alice,dave), hungry(dave), sunny.\nsunny :- friend(alice,dave), sunny.\nsmall(book) :- parent(carol,frank).\nsmall(book) :- parent(dave,dave), wet(book), dislikes(eve,apple).\nwet(car) :- dislikes(dave,apple), big(phone).\nhungry(dave) :- big(apple), big(ball), owns(alice,car).\nwet(apple) :- enemy(alice,dave), tall(eve), happy(alice).\nhungry(frank) :- hungry(carol), hungry(carol), likes(dave,book).\nenemy(eve,george) :- sibling(dave,alice), enemy(bob,alice), wet(pencil).\nenemy(alice,eve) :- wet(book), hungry(carol).\nbig(pencil).\nfriend(frank,dave).\nfriend(bob,alice).\nlikes(frank,phone).\nlikes(eve,ball).\nsmall(book).\nwet(pencil).\nsibling(carol,frank).\nowns(george,phone).\nfriend(george,eve).\nowns(frank,ball).",
    "natural language": "You are given the following rules:\nIf it is cold, then bob is tall.\nIf bob is tall, then it is sunny.\nIf it is sunny, then eve is tall.\nIf eve is tall, then eve likes apple.\nIf eve likes apple, then ball is small.\nIf ball is small, then alice dislikes book.\nIf alice dislikes book, then carol owns phone.\nIf carol owns phone, then bob is tall.\nIf bob is tall, then carol dislikes ball.\nIf carol dislikes ball, then alice is a parent of alice.\nIf dave is an enemy of bob and phone is big and it is sunny, then it is sunny.\nIf alice owns car and it is sunny and it is hot, then dave is happy.\nIf dave is tall and frank is a friend of frank, then dave is tall.\nIf dave owns ball and george likes ball, then frank is tall.\nIf alice is an enemy of dave and dave is hungry and it is sunny, then carol is happy.\nIf alice is a friend of dave and it is sunny, then it is sunny.\nIf carol is a parent of frank, then book is small.\nIf dave is a parent of dave and book is wet and eve dislikes apple, then book is small.\nIf dave dislikes apple and phone is big, then car is wet.\nIf apple is big and ball is big and alice owns car, then dave is hungry.\nIf alice is an enemy of dave and eve is tall and alice is happy, then apple is wet.\nIf carol is hungry and carol is hungry and dave likes book, then frank is hungry.\nIf dave is a sibling of alice and bob is an enemy of alice and pencil is wet, then eve is an enemy of george.\nIf book is wet and carol is hungry, then alice is an enemy of eve.\n\nAnd the following facts:\npencil is big.\nfrank is a friend of dave.\nbob is a friend of alice.\nfrank likes phone.\neve likes ball.\nbook is small.\npencil is wet.\ncarol is a sibling of frank.\ngeorge owns phone.\ngeorge is a friend of eve.\nfrank owns ball.\n\nQUESTION:\nCould frank likes phone explain bob is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "tall(bob)",
      "non_explanation": "likes(frank,phone)"
    }
  },
  {
    "q": "big(pencil).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\ndislikes(frank,phone).\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank dislikes phone.\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nIs pencil is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\ndislikes(frank,phone).\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank dislikes phone.\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nIs car is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,dave).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\ndislikes(frank,phone).\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank dislikes phone.\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nIs bob is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\ndislikes(frank,phone).\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank dislikes phone.\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nIs eve is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,ball).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\ndislikes(frank,phone).\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following information:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank dislikes phone.\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nIs dave dislikes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,phone).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following rules:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nCould frank dislikes phone explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 7,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "dislikes(frank,phone)"
    }
  },
  {
    "q": "sad(frank).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following rules:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nCould frank is sad explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "sad(frank)"
    }
  },
  {
    "q": "dislikes(george,ball).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following rules:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nCould george dislikes ball explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "dislikes(george,ball)"
    }
  },
  {
    "q": "owns(frank,phone).",
    "c": "big(pencil) :- dislikes(frank,phone).\nsmall(car) :- big(pencil).\nwet(car) :- small(car).\nsibling(george,frank) :- wet(car).\nhot :- sibling(george,frank).\nsunny :- hot.\nbig(book) :- sunny.\nhungry(dave) :- big(book).\nhungry(george) :- hungry(dave).\nsad(bob) :- hungry(george).\nsunny :- parent(george,frank), hot.\ntall(eve) :- hungry(eve).\ndislikes(eve,phone) :- friend(alice,bob), dislikes(bob,apple).\ntall(dave) :- happy(eve), sibling(bob,bob), parent(dave,carol).\nsunny :- hot.\ndislikes(bob,car) :- tall(carol), hungry(frank).\nenemy(dave,alice) :- big(pencil), sunny.\nenemy(dave,frank) :- cold.\nsibling(bob,frank) :- likes(frank,book), sad(eve), parent(alice,frank).\nenemy(dave,bob) :- happy(dave), parent(george,bob), hungry(george).\nsibling(eve,dave) :- sad(george), owns(bob,apple), cold.\nhappy(bob) :- dislikes(alice,car), sibling(frank,frank).\nhappy(bob) :- small(apple), hot, sunny.\nparent(george,eve) :- happy(frank), dislikes(dave,ball), cold.\nsad(frank).\nowns(frank,phone).\nfriend(george,bob).\ndislikes(george,ball).\nlikes(carol,ball).\ndislikes(dave,book).\nfriend(dave,alice).\nenemy(bob,frank).\nenemy(frank,alice).\nfriend(carol,frank).\nparent(dave,carol).",
    "natural language": "You are given the following rules:\nIf frank dislikes phone, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then car is wet.\nIf car is wet, then george is a sibling of frank.\nIf george is a sibling of frank, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then book is big.\nIf book is big, then dave is hungry.\nIf dave is hungry, then george is hungry.\nIf george is hungry, then bob is sad.\nIf george is a parent of frank and it is hot, then it is sunny.\nIf eve is hungry, then eve is tall.\nIf alice is a friend of bob and bob dislikes apple, then eve dislikes phone.\nIf eve is happy and bob is a sibling of bob and dave is a parent of carol, then dave is tall.\nIf it is hot, then it is sunny.\nIf carol is tall and frank is hungry, then bob dislikes car.\nIf pencil is big and it is sunny, then dave is an enemy of alice.\nIf it is cold, then dave is an enemy of frank.\nIf frank likes book and eve is sad and alice is a parent of frank, then bob is a sibling of frank.\nIf dave is happy and george is a parent of bob and george is hungry, then dave is an enemy of bob.\nIf george is sad and bob owns apple and it is cold, then eve is a sibling of dave.\nIf alice dislikes car and frank is a sibling of frank, then bob is happy.\nIf apple is small and it is hot and it is sunny, then bob is happy.\nIf frank is happy and dave dislikes ball and it is cold, then george is a parent of eve.\n\nAnd the following facts:\nfrank is sad.\nfrank owns phone.\ngeorge is a friend of bob.\ngeorge dislikes ball.\ncarol likes ball.\ndave dislikes book.\ndave is a friend of alice.\nbob is an enemy of frank.\nfrank is an enemy of alice.\ncarol is a friend of frank.\ndave is a parent of carol.\n\nQUESTION:\nCould frank owns phone explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "owns(frank,phone)"
    }
  },
  {
    "q": "enemy(george,eve).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nparent(dave,alice).\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\ndave is a parent of alice.\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nIs george is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,eve).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nparent(dave,alice).\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\ndave is a parent of alice.\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nIs bob is a friend of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nparent(dave,alice).\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\ndave is a parent of alice.\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nIs alice is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,ball).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nparent(dave,alice).\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\ndave is a parent of alice.\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nIs eve owns ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,apple).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nparent(dave,alice).\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\ndave is a parent of alice.\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nIs alice owns apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following rules:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nCould dave is a parent of alice explain bob owns book?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "owns(bob,book)",
      "explanation": "parent(dave,alice)"
    }
  },
  {
    "q": "hungry(carol).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following rules:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nCould carol is hungry explain bob owns book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "owns(bob,book)",
      "non_explanation": "hungry(carol)"
    }
  },
  {
    "q": "big(apple).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following rules:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nCould apple is big explain bob owns book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "owns(bob,book)",
      "non_explanation": "big(apple)"
    }
  },
  {
    "q": "sibling(alice,eve).",
    "c": "small(book) :- parent(dave,alice).\nhappy(eve) :- small(book).\nfriend(bob,eve) :- happy(eve).\nlikes(dave,pencil) :- friend(bob,eve).\nsad(george) :- likes(dave,pencil).\nenemy(george,eve) :- sad(george).\nhungry(dave) :- enemy(george,eve).\nsad(bob) :- hungry(dave).\nhappy(carol) :- sad(bob).\nowns(eve,car) :- happy(carol).\ntall(dave) :- owns(eve,car).\nhot :- tall(dave).\nowns(frank,apple) :- hot.\nsunny :- owns(frank,apple).\nenemy(bob,carol) :- sunny.\nfriend(bob,eve) :- enemy(bob,carol).\ndislikes(eve,ball) :- friend(bob,eve).\nowns(bob,book) :- dislikes(eve,ball).\nsibling(frank,frank) :- owns(bob,book).\nenemy(george,frank) :- sibling(frank,frank).\ntall(frank) :- wet(book), parent(bob,dave).\nsibling(dave,alice) :- happy(dave), cold, sibling(carol,alice).\ntall(george) :- enemy(dave,george), owns(frank,book), tall(eve).\nbig(phone) :- happy(eve), hot.\nsmall(apple).\nhungry(carol).\nbig(apple).\nsibling(alice,eve).\nparent(dave,carol).\nparent(george,frank).\nsad(frank).\ndislikes(eve,book).\ndislikes(george,car).\nfriend(dave,eve).\nhappy(bob).",
    "natural language": "You are given the following rules:\nIf dave is a parent of alice, then book is small.\nIf book is small, then eve is happy.\nIf eve is happy, then bob is a friend of eve.\nIf bob is a friend of eve, then dave likes pencil.\nIf dave likes pencil, then george is sad.\nIf george is sad, then george is an enemy of eve.\nIf george is an enemy of eve, then dave is hungry.\nIf dave is hungry, then bob is sad.\nIf bob is sad, then carol is happy.\nIf carol is happy, then eve owns car.\nIf eve owns car, then dave is tall.\nIf dave is tall, then it is hot.\nIf it is hot, then frank owns apple.\nIf frank owns apple, then it is sunny.\nIf it is sunny, then bob is an enemy of carol.\nIf bob is an enemy of carol, then bob is a friend of eve.\nIf bob is a friend of eve, then eve dislikes ball.\nIf eve dislikes ball, then bob owns book.\nIf bob owns book, then frank is a sibling of frank.\nIf frank is a sibling of frank, then george is an enemy of frank.\nIf book is wet and bob is a parent of dave, then frank is tall.\nIf dave is happy and it is cold and carol is a sibling of alice, then dave is a sibling of alice.\nIf dave is an enemy of george and frank owns book and eve is tall, then george is tall.\nIf eve is happy and it is hot, then phone is big.\n\nAnd the following facts:\napple is small.\ncarol is hungry.\napple is big.\nalice is a sibling of eve.\ndave is a parent of carol.\ngeorge is a parent of frank.\nfrank is sad.\neve dislikes book.\ngeorge dislikes car.\ndave is a friend of eve.\nbob is happy.\n\nQUESTION:\nCould alice is a sibling of eve explain bob owns book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "owns(bob,book)",
      "non_explanation": "sibling(alice,eve)"
    }
  },
  {
    "q": "cold.",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\nhappy(frank).\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nfrank is happy.\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nIs it is cold true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\nhappy(frank).\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nfrank is happy.\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nIs it is hot true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,car).",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\nhappy(frank).\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nfrank is happy.\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nIs bob likes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(eve).",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\nhappy(frank).\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nfrank is happy.\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nIs eve is happy true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,frank).",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\nhappy(frank).\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following information:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nfrank is happy.\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nIs alice is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nCould frank is happy explain bob is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "hungry(bob)",
      "explanation": "happy(frank)"
    }
  },
  {
    "q": "enemy(carol,george).",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nCould carol is an enemy of george explain bob is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "hungry(bob)",
      "non_explanation": "enemy(carol,george)"
    }
  },
  {
    "q": "dislikes(bob,book).",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nCould bob dislikes book explain bob is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "hungry(bob)",
      "non_explanation": "dislikes(bob,book)"
    }
  },
  {
    "q": "dislikes(bob,apple).",
    "c": "owns(george,car) :- happy(frank).\nenemy(frank,bob) :- owns(george,car).\nsad(eve) :- enemy(frank,bob).\nsunny :- sad(eve).\nlikes(frank,apple) :- sunny.\nenemy(frank,dave) :- likes(frank,apple).\nfriend(bob,george) :- enemy(frank,dave).\nsad(eve) :- friend(bob,george).\nsad(bob) :- sad(eve).\ncold :- sad(bob).\nhot :- cold.\nowns(eve,pencil) :- hot.\nowns(eve,book) :- owns(eve,pencil).\nsad(carol) :- owns(eve,book).\nsunny :- sad(carol).\nhot :- sunny.\nsibling(alice,carol) :- hot.\nowns(bob,phone) :- sibling(alice,carol).\nowns(eve,pencil) :- owns(bob,phone).\ndislikes(dave,ball) :- owns(eve,pencil).\nhungry(bob) :- sunny, cold.\nsibling(frank,george) :- big(pencil), hot, sad(carol).\nsibling(alice,george) :- wet(car).\nsunny :- cold.\ndislikes(bob,phone).\ndislikes(bob,book).\ndislikes(bob,apple).\nenemy(carol,george).\nowns(eve,car).\nowns(george,book).\nsibling(eve,frank).\nlikes(bob,phone).\nowns(frank,phone).\nfriend(eve,frank).\nlikes(eve,apple).",
    "natural language": "You are given the following rules:\nIf frank is happy, then george owns car.\nIf george owns car, then frank is an enemy of bob.\nIf frank is an enemy of bob, then eve is sad.\nIf eve is sad, then it is sunny.\nIf it is sunny, then frank likes apple.\nIf frank likes apple, then frank is an enemy of dave.\nIf frank is an enemy of dave, then bob is a friend of george.\nIf bob is a friend of george, then eve is sad.\nIf eve is sad, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then it is hot.\nIf it is hot, then eve owns pencil.\nIf eve owns pencil, then eve owns book.\nIf eve owns book, then carol is sad.\nIf carol is sad, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then alice is a sibling of carol.\nIf alice is a sibling of carol, then bob owns phone.\nIf bob owns phone, then eve owns pencil.\nIf eve owns pencil, then dave dislikes ball.\nIf it is sunny and it is cold, then bob is hungry.\nIf pencil is big and it is hot and carol is sad, then frank is a sibling of george.\nIf car is wet, then alice is a sibling of george.\nIf it is cold, then it is sunny.\n\nAnd the following facts:\nbob dislikes phone.\nbob dislikes book.\nbob dislikes apple.\ncarol is an enemy of george.\neve owns car.\ngeorge owns book.\neve is a sibling of frank.\nbob likes phone.\nfrank owns phone.\neve is a friend of frank.\neve likes apple.\n\nQUESTION:\nCould bob dislikes apple explain bob is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "hungry(bob)",
      "non_explanation": "dislikes(bob,apple)"
    }
  },
  {
    "q": "sibling(bob,frank).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,george).\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of george.\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nIs bob is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,george).\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of george.\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nIs eve is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,apple).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,george).\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of george.\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nIs george dislikes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,george).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,george).\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of george.\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nIs frank is an enemy of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,bob).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,george).\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following information:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of george.\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nIs eve is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,george).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following rules:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nCould george is an enemy of george explain bob is an enemy of frank?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "enemy(bob,frank)",
      "explanation": "enemy(george,george)"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following rules:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nCould george is an enemy of bob explain bob is an enemy of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "enemy(bob,frank)",
      "non_explanation": "enemy(george,bob)"
    }
  },
  {
    "q": "parent(bob,george).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following rules:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nCould bob is a parent of george explain bob is an enemy of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "enemy(bob,frank)",
      "non_explanation": "parent(bob,george)"
    }
  },
  {
    "q": "sibling(bob,frank).",
    "c": "enemy(bob,frank) :- enemy(george,george).\ntall(george) :- sad(dave), dislikes(frank,pencil).\ntall(alice) :- hot, sad(dave), parent(george,carol).\nbig(phone) :- friend(dave,george), sibling(alice,bob), big(book).\nhungry(eve) :- tall(eve).\nwet(phone) :- wet(book).\nhungry(carol) :- wet(book), hungry(george), hungry(bob).\nwet(phone) :- sibling(frank,frank), parent(frank,bob).\nbig(book) :- dislikes(eve,phone), dislikes(bob,book), hungry(dave).\nfriend(george,dave) :- likes(dave,phone), friend(carol,frank), cold.\nhungry(dave) :- likes(carol,apple), wet(pencil).\nfriend(bob,eve) :- sibling(george,george), small(ball).\nsad(george) :- sad(carol).\nsad(bob) :- sad(bob), sad(dave).\nparent(eve,dave) :- friend(dave,alice), tall(frank), happy(dave).\nparent(dave,frank) :- parent(dave,carol), sunny.\nhappy(alice) :- hot, happy(alice), happy(dave).\nhappy(eve) :- hungry(carol), sibling(eve,frank).\ncold :- likes(dave,car).\ncold :- sunny.\nenemy(george,dave) :- enemy(carol,dave), enemy(bob,bob).\nsmall(apple) :- big(book), small(phone), happy(bob).\nsmall(car) :- big(phone), likes(dave,pencil), sad(dave).\nenemy(eve,george) :- hot.\nenemy(george,bob).\nparent(bob,george).\nenemy(george,carol).\nsibling(bob,frank).\nparent(eve,dave).\ndislikes(bob,pencil).\ndislikes(bob,phone).\ndislikes(george,phone).\nparent(dave,carol).\nsibling(alice,frank).\nenemy(eve,dave).\nlikes(bob,phone).\nenemy(carol,george).\nenemy(carol,eve).",
    "natural language": "You are given the following rules:\nIf george is an enemy of george, then bob is an enemy of frank.\nIf dave is sad and frank dislikes pencil, then george is tall.\nIf it is hot and dave is sad and george is a parent of carol, then alice is tall.\nIf dave is a friend of george and alice is a sibling of bob and book is big, then phone is big.\nIf eve is tall, then eve is hungry.\nIf book is wet, then phone is wet.\nIf book is wet and george is hungry and bob is hungry, then carol is hungry.\nIf frank is a sibling of frank and frank is a parent of bob, then phone is wet.\nIf eve dislikes phone and bob dislikes book and dave is hungry, then book is big.\nIf dave likes phone and carol is a friend of frank and it is cold, then george is a friend of dave.\nIf carol likes apple and pencil is wet, then dave is hungry.\nIf george is a sibling of george and ball is small, then bob is a friend of eve.\nIf carol is sad, then george is sad.\nIf bob is sad and dave is sad, then bob is sad.\nIf dave is a friend of alice and frank is tall and dave is happy, then eve is a parent of dave.\nIf dave is a parent of carol and it is sunny, then dave is a parent of frank.\nIf it is hot and alice is happy and dave is happy, then alice is happy.\nIf carol is hungry and eve is a sibling of frank, then eve is happy.\nIf dave likes car, then it is cold.\nIf it is sunny, then it is cold.\nIf carol is an enemy of dave and bob is an enemy of bob, then george is an enemy of dave.\nIf book is big and phone is small and bob is happy, then apple is small.\nIf phone is big and dave likes pencil and dave is sad, then car is small.\nIf it is hot, then eve is an enemy of george.\n\nAnd the following facts:\ngeorge is an enemy of bob.\nbob is a parent of george.\ngeorge is an enemy of carol.\nbob is a sibling of frank.\neve is a parent of dave.\nbob dislikes pencil.\nbob dislikes phone.\ngeorge dislikes phone.\ndave is a parent of carol.\nalice is a sibling of frank.\neve is an enemy of dave.\nbob likes phone.\ncarol is an enemy of george.\ncarol is an enemy of eve.\n\nQUESTION:\nCould bob is a sibling of frank explain bob is an enemy of frank?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "enemy(bob,frank)",
      "non_explanation": "sibling(bob,frank)"
    }
  },
  {
    "q": "parent(george,frank).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nbig(pencil).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\npencil is big.\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nIs george is a parent of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nbig(pencil).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\npencil is big.\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nIs carol is a parent of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,alice).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nbig(pencil).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\npencil is big.\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nIs eve is a sibling of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,ball).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nbig(pencil).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\npencil is big.\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nIs bob dislikes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,dave).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nbig(pencil).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following information:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\npencil is big.\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nIs frank is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(pencil).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nCould pencil is big explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "big(pencil)"
    }
  },
  {
    "q": "sibling(eve,carol).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nCould eve is a sibling of carol explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "sibling(eve,carol)"
    }
  },
  {
    "q": "friend(carol,eve).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nCould carol is a friend of eve explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "friend(carol,eve)"
    }
  },
  {
    "q": "friend(george,bob).",
    "c": "big(book) :- big(pencil).\nhungry(george) :- hot, sibling(carol,dave).\nhungry(carol) :- sunny, hot, friend(dave,carol).\nowns(george,apple) :- enemy(george,george).\nowns(frank,car) :- hot.\nowns(dave,car) :- hot, likes(carol,pencil).\nhungry(alice) :- hot, hot, sibling(frank,eve).\nlikes(carol,pencil) :- friend(bob,alice).\nowns(alice,phone) :- cold.\nhappy(dave) :- enemy(bob,george).\nlikes(dave,phone) :- small(car), dislikes(alice,book).\nhungry(george) :- parent(george,frank), likes(bob,car).\nhappy(eve) :- enemy(alice,george), hungry(carol).\nowns(alice,car) :- parent(frank,dave), owns(george,apple), sibling(eve,carol).\nwet(pencil) :- small(ball), owns(frank,apple).\nwet(apple) :- dislikes(george,ball), hot.\nenemy(carol,carol) :- big(ball), parent(carol,carol), friend(dave,george).\nfriend(eve,carol) :- sunny, big(pencil), parent(dave,carol).\nfriend(george,carol) :- hungry(alice), sunny.\nenemy(george,eve) :- small(phone), owns(frank,ball).\nsibling(bob,eve) :- small(phone), sad(carol), happy(frank).\nfriend(dave,george) :- sad(bob), cold, sad(alice).\nsibling(eve,alice) :- sibling(alice,carol), owns(alice,car).\nparent(george,dave) :- sad(dave).\nfriend(carol,eve).\nparent(carol,alice).\nfriend(george,bob).\nsibling(eve,carol).\nhungry(carol).\nenemy(dave,frank).\nfriend(carol,george).\nowns(alice,book).\nparent(george,frank).\nfriend(eve,dave).\nparent(eve,bob).\ndislikes(carol,pencil).\nparent(george,dave).\nenemy(dave,carol).",
    "natural language": "You are given the following rules:\nIf pencil is big, then book is big.\nIf it is hot and carol is a sibling of dave, then george is hungry.\nIf it is sunny and it is hot and dave is a friend of carol, then carol is hungry.\nIf george is an enemy of george, then george owns apple.\nIf it is hot, then frank owns car.\nIf it is hot and carol likes pencil, then dave owns car.\nIf it is hot and it is hot and frank is a sibling of eve, then alice is hungry.\nIf bob is a friend of alice, then carol likes pencil.\nIf it is cold, then alice owns phone.\nIf bob is an enemy of george, then dave is happy.\nIf car is small and alice dislikes book, then dave likes phone.\nIf george is a parent of frank and bob likes car, then george is hungry.\nIf alice is an enemy of george and carol is hungry, then eve is happy.\nIf frank is a parent of dave and george owns apple and eve is a sibling of carol, then alice owns car.\nIf ball is small and frank owns apple, then pencil is wet.\nIf george dislikes ball and it is hot, then apple is wet.\nIf ball is big and carol is a parent of carol and dave is a friend of george, then carol is an enemy of carol.\nIf it is sunny and pencil is big and dave is a parent of carol, then eve is a friend of carol.\nIf alice is hungry and it is sunny, then george is a friend of carol.\nIf phone is small and frank owns ball, then george is an enemy of eve.\nIf phone is small and carol is sad and frank is happy, then bob is a sibling of eve.\nIf bob is sad and it is cold and alice is sad, then dave is a friend of george.\nIf alice is a sibling of carol and alice owns car, then eve is a sibling of alice.\nIf dave is sad, then george is a parent of dave.\n\nAnd the following facts:\ncarol is a friend of eve.\ncarol is a parent of alice.\ngeorge is a friend of bob.\neve is a sibling of carol.\ncarol is hungry.\ndave is an enemy of frank.\ncarol is a friend of george.\nalice owns book.\ngeorge is a parent of frank.\neve is a friend of dave.\neve is a parent of bob.\ncarol dislikes pencil.\ngeorge is a parent of dave.\ndave is an enemy of carol.\n\nQUESTION:\nCould george is a friend of bob explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "friend(george,bob)"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nbig(pencil).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\npencil is big.\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nIs bob owns phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,eve).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nbig(pencil).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\npencil is big.\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nIs george is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,bob).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nbig(pencil).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\npencil is big.\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nIs carol is a parent of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(bob,frank).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nbig(pencil).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\npencil is big.\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nIs bob is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(eve).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nbig(pencil).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following information:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\npencil is big.\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nIs eve is sad true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(pencil).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nCould pencil is big explain carol is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(carol)",
      "explanation": "big(pencil)"
    }
  },
  {
    "q": "parent(bob,frank).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nCould bob is a parent of frank explain carol is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(carol)",
      "non_explanation": "parent(bob,frank)"
    }
  },
  {
    "q": "owns(alice,pencil).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nCould alice owns pencil explain carol is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(carol)",
      "non_explanation": "owns(alice,pencil)"
    }
  },
  {
    "q": "sibling(carol,eve).",
    "c": "sad(george) :- big(pencil).\nowns(dave,phone) :- sad(george).\nowns(frank,pencil) :- owns(dave,phone).\nhappy(carol) :- owns(frank,pencil).\nowns(carol,apple) :- happy(carol).\nsmall(book) :- tall(alice), tall(alice), wet(apple).\nenemy(frank,eve) :- sunny, big(pencil), dislikes(bob,phone).\nbig(phone) :- big(ball).\nfriend(alice,alice) :- enemy(alice,george), sad(frank), parent(bob,frank).\nsunny :- sibling(eve,george).\nparent(carol,alice) :- big(car).\nbig(ball) :- sunny, likes(george,car).\nparent(eve,frank) :- likes(frank,apple), tall(carol).\ndislikes(bob,pencil) :- dislikes(alice,book), dislikes(alice,apple).\nfriend(george,george) :- enemy(frank,frank), owns(bob,pencil).\ndislikes(frank,car) :- dislikes(bob,ball), dislikes(dave,pencil), dislikes(eve,car).\nsunny :- hot.\nenemy(frank,george) :- sunny, friend(bob,frank).\nsmall(apple) :- owns(frank,apple).\nbig(apple) :- sunny, dislikes(george,book).\ntall(frank) :- friend(george,eve), enemy(frank,carol).\ntall(frank) :- wet(book), likes(eve,pencil), enemy(alice,dave).\ncold :- hot.\ncold :- dislikes(frank,car).\nfriend(dave,alice).\nparent(bob,frank).\nsibling(carol,eve).\nowns(alice,pencil).\nsad(dave).\nfriend(eve,george).\nsibling(george,eve).\nsibling(dave,george).\nowns(bob,phone).\nfriend(carol,bob).\nlikes(frank,phone).\nlikes(frank,book).\nfriend(bob,alice).\nsibling(dave,eve).",
    "natural language": "You are given the following rules:\nIf pencil is big, then george is sad.\nIf george is sad, then dave owns phone.\nIf dave owns phone, then frank owns pencil.\nIf frank owns pencil, then carol is happy.\nIf carol is happy, then carol owns apple.\nIf alice is tall and alice is tall and apple is wet, then book is small.\nIf it is sunny and pencil is big and bob dislikes phone, then frank is an enemy of eve.\nIf ball is big, then phone is big.\nIf alice is an enemy of george and frank is sad and bob is a parent of frank, then alice is a friend of alice.\nIf eve is a sibling of george, then it is sunny.\nIf car is big, then carol is a parent of alice.\nIf it is sunny and george likes car, then ball is big.\nIf frank likes apple and carol is tall, then eve is a parent of frank.\nIf alice dislikes book and alice dislikes apple, then bob dislikes pencil.\nIf frank is an enemy of frank and bob owns pencil, then george is a friend of george.\nIf bob dislikes ball and dave dislikes pencil and eve dislikes car, then frank dislikes car.\nIf it is hot, then it is sunny.\nIf it is sunny and bob is a friend of frank, then frank is an enemy of george.\nIf frank owns apple, then apple is small.\nIf it is sunny and george dislikes book, then apple is big.\nIf george is a friend of eve and frank is an enemy of carol, then frank is tall.\nIf book is wet and eve likes pencil and alice is an enemy of dave, then frank is tall.\nIf it is hot, then it is cold.\nIf frank dislikes car, then it is cold.\n\nAnd the following facts:\ndave is a friend of alice.\nbob is a parent of frank.\ncarol is a sibling of eve.\nalice owns pencil.\ndave is sad.\neve is a friend of george.\ngeorge is a sibling of eve.\ndave is a sibling of george.\nbob owns phone.\ncarol is a friend of bob.\nfrank likes phone.\nfrank likes book.\nbob is a friend of alice.\ndave is a sibling of eve.\n\nQUESTION:\nCould carol is a sibling of eve explain carol is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(carol)",
      "non_explanation": "sibling(carol,eve)"
    }
  },
  {
    "q": "tall(eve).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\nhungry(carol).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ncarol is hungry.\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nIs eve is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,pencil).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\nhungry(carol).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ncarol is hungry.\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nIs eve dislikes pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,george).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\nhungry(carol).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ncarol is hungry.\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nIs bob is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,frank).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\nhungry(carol).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ncarol is hungry.\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nIs eve is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,book).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\nhungry(carol).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following information:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ncarol is hungry.\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nIs dave likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(carol).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nCould carol is hungry explain george is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "explanation": "hungry(carol)"
    }
  },
  {
    "q": "dislikes(dave,apple).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nCould dave dislikes apple explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "dislikes(dave,apple)"
    }
  },
  {
    "q": "dislikes(frank,pencil).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nCould frank dislikes pencil explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "dislikes(frank,pencil)"
    }
  },
  {
    "q": "tall(eve).",
    "c": "happy(george) :- hungry(carol).\nsunny :- happy(george).\nparent(george,eve) :- sunny.\ncold :- parent(george,eve).\nsunny :- cold.\nsunny :- sibling(carol,carol).\nsunny :- hot, likes(alice,pencil).\nlikes(george,ball) :- sunny.\nlikes(bob,phone) :- small(ball).\nlikes(bob,ball) :- tall(george), big(car), wet(ball).\nhungry(george) :- happy(carol), parent(alice,eve), dislikes(frank,ball).\nsunny :- small(apple), big(car).\nhungry(bob) :- dislikes(alice,phone), wet(ball), big(pencil).\nhappy(george) :- dislikes(eve,pencil), parent(george,bob).\nwet(book) :- sibling(frank,alice), sibling(george,carol), friend(carol,carol).\nwet(car) :- friend(bob,bob).\ndislikes(frank,car) :- hot.\ndislikes(alice,pencil) :- wet(apple), hot, big(book).\nsibling(bob,alice) :- hungry(frank), cold.\nhappy(carol) :- tall(george), parent(bob,frank).\nsibling(alice,george) :- cold, likes(dave,pencil).\ntall(alice) :- hungry(carol), sunny, enemy(bob,alice).\nhungry(bob) :- parent(bob,george), dislikes(alice,pencil).\ntall(carol) :- hot, sibling(alice,dave), big(book).\ndislikes(dave,apple).\ndislikes(frank,pencil).\ntall(eve).\nenemy(frank,carol).\nbig(apple).\nparent(bob,alice).\nfriend(carol,george).\nlikes(bob,car).\nenemy(alice,george).\nsibling(bob,eve).\nenemy(frank,dave).\nlikes(frank,apple).\ndislikes(eve,pencil).\nsmall(ball).",
    "natural language": "You are given the following rules:\nIf carol is hungry, then george is happy.\nIf george is happy, then it is sunny.\nIf it is sunny, then george is a parent of eve.\nIf george is a parent of eve, then it is cold.\nIf it is cold, then it is sunny.\nIf carol is a sibling of carol, then it is sunny.\nIf it is hot and alice likes pencil, then it is sunny.\nIf it is sunny, then george likes ball.\nIf ball is small, then bob likes phone.\nIf george is tall and car is big and ball is wet, then bob likes ball.\nIf carol is happy and alice is a parent of eve and frank dislikes ball, then george is hungry.\nIf apple is small and car is big, then it is sunny.\nIf alice dislikes phone and ball is wet and pencil is big, then bob is hungry.\nIf eve dislikes pencil and george is a parent of bob, then george is happy.\nIf frank is a sibling of alice and george is a sibling of carol and carol is a friend of carol, then book is wet.\nIf bob is a friend of bob, then car is wet.\nIf it is hot, then frank dislikes car.\nIf apple is wet and it is hot and book is big, then alice dislikes pencil.\nIf frank is hungry and it is cold, then bob is a sibling of alice.\nIf george is tall and bob is a parent of frank, then carol is happy.\nIf it is cold and dave likes pencil, then alice is a sibling of george.\nIf carol is hungry and it is sunny and bob is an enemy of alice, then alice is tall.\nIf bob is a parent of george and alice dislikes pencil, then bob is hungry.\nIf it is hot and alice is a sibling of dave and book is big, then carol is tall.\n\nAnd the following facts:\ndave dislikes apple.\nfrank dislikes pencil.\neve is tall.\nfrank is an enemy of carol.\napple is big.\nbob is a parent of alice.\ncarol is a friend of george.\nbob likes car.\nalice is an enemy of george.\nbob is a sibling of eve.\nfrank is an enemy of dave.\nfrank likes apple.\neve dislikes pencil.\nball is small.\n\nQUESTION:\nCould eve is tall explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "tall(eve)"
    }
  },
  {
    "q": "likes(dave,phone).",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nhot.\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nit is hot.\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nIs dave likes phone true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,pencil).",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nhot.\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nit is hot.\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nIs frank dislikes pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,george).",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nhot.\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nit is hot.\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nIs alice is a friend of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,frank).",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nhot.\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nit is hot.\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nIs george is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,frank).",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nhot.\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nit is hot.\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nIs carol is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nCould it is hot explain eve dislikes book?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,book)",
      "explanation": "hot"
    }
  },
  {
    "q": "owns(george,car).",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nCould george owns car explain eve dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,book)",
      "non_explanation": "owns(george,car)"
    }
  },
  {
    "q": "friend(frank,carol).",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nCould frank is a friend of carol explain eve dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,book)",
      "non_explanation": "friend(frank,carol)"
    }
  },
  {
    "q": "parent(alice,george).",
    "c": "hungry(dave) :- hot.\ntall(bob) :- hungry(dave).\ndislikes(eve,book) :- tall(bob).\nsibling(alice,carol) :- dislikes(eve,book).\nfriend(eve,bob) :- sibling(alice,carol).\nowns(dave,book) :- friend(eve,bob).\nenemy(eve,alice) :- owns(dave,book).\nsunny :- enemy(eve,alice).\nlikes(dave,phone) :- sunny.\nwet(ball) :- likes(dave,phone).\nsad(bob) :- sad(dave).\nhot :- owns(dave,phone), sunny, hungry(alice).\ntall(alice) :- hot.\ntall(bob) :- tall(eve).\nhot :- sibling(frank,frank), parent(frank,frank).\nbig(pencil) :- hungry(bob), big(phone).\ndislikes(dave,pencil) :- big(ball), sunny, sibling(george,george).\nsad(dave) :- sibling(george,eve).\nbig(car) :- big(ball), big(phone), big(apple).\ndislikes(alice,car) :- sunny, small(ball), friend(eve,george).\ntall(bob) :- big(pencil), friend(carol,eve), wet(book).\nhappy(alice) :- parent(dave,bob), small(book).\nparent(dave,bob) :- dislikes(alice,apple).\nhungry(george) :- dislikes(frank,ball), hot, likes(george,book).\nsibling(bob,alice).\nfriend(frank,carol).\nowns(george,car).\nparent(alice,george).\nowns(alice,pencil).\nowns(carol,ball).\ndislikes(frank,pencil).\nlikes(carol,apple).\nsibling(alice,george).\nsibling(alice,frank).\ndislikes(dave,car).\ndislikes(george,ball).\nfriend(dave,bob).\ndislikes(carol,ball).",
    "natural language": "You are given the following rules:\nIf it is hot, then dave is hungry.\nIf dave is hungry, then bob is tall.\nIf bob is tall, then eve dislikes book.\nIf eve dislikes book, then alice is a sibling of carol.\nIf alice is a sibling of carol, then eve is a friend of bob.\nIf eve is a friend of bob, then dave owns book.\nIf dave owns book, then eve is an enemy of alice.\nIf eve is an enemy of alice, then it is sunny.\nIf it is sunny, then dave likes phone.\nIf dave likes phone, then ball is wet.\nIf dave is sad, then bob is sad.\nIf dave owns phone and it is sunny and alice is hungry, then it is hot.\nIf it is hot, then alice is tall.\nIf eve is tall, then bob is tall.\nIf frank is a sibling of frank and frank is a parent of frank, then it is hot.\nIf bob is hungry and phone is big, then pencil is big.\nIf ball is big and it is sunny and george is a sibling of george, then dave dislikes pencil.\nIf george is a sibling of eve, then dave is sad.\nIf ball is big and phone is big and apple is big, then car is big.\nIf it is sunny and ball is small and eve is a friend of george, then alice dislikes car.\nIf pencil is big and carol is a friend of eve and book is wet, then bob is tall.\nIf dave is a parent of bob and book is small, then alice is happy.\nIf alice dislikes apple, then dave is a parent of bob.\nIf frank dislikes ball and it is hot and george likes book, then george is hungry.\n\nAnd the following facts:\nbob is a sibling of alice.\nfrank is a friend of carol.\ngeorge owns car.\nalice is a parent of george.\nalice owns pencil.\ncarol owns ball.\nfrank dislikes pencil.\ncarol likes apple.\nalice is a sibling of george.\nalice is a sibling of frank.\ndave dislikes car.\ngeorge dislikes ball.\ndave is a friend of bob.\ncarol dislikes ball.\n\nQUESTION:\nCould alice is a parent of george explain eve dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,book)",
      "non_explanation": "parent(alice,george)"
    }
  },
  {
    "q": "tall(frank).",
    "c": "sad(dave) :- sunny.\nsibling(frank,dave) :- sad(dave).\ntall(dave) :- sibling(frank,dave).\ndislikes(frank,car) :- tall(dave).\nbig(pencil) :- dislikes(frank,car).\ntall(carol) :- big(pencil).\nsunny :- tall(carol).\nhungry(dave) :- sunny.\nlikes(carol,car) :- hungry(dave).\nwet(car) :- likes(carol,car).\nhot :- sibling(eve,frank).\nhot :- happy(carol).\nenemy(frank,alice) :- cold.\nlikes(alice,car) :- sunny, small(book), happy(alice).\nlikes(frank,car) :- tall(alice), hot.\nsad(george) :- hungry(carol).\nsad(george) :- owns(george,book), cold.\nenemy(george,dave) :- sad(frank), hungry(alice).\ntall(frank) :- hungry(bob), big(car), friend(bob,carol).\ntall(alice) :- likes(frank,apple).\nparent(frank,eve) :- tall(dave), parent(dave,eve), dislikes(bob,car).\nlikes(dave,book) :- sibling(frank,george), wet(pencil).\nparent(alice,alice) :- owns(george,apple), sad(eve).\nlikes(eve,phone) :- likes(dave,car).\nsunny.\nhungry(alice).\ndislikes(frank,car).\nparent(frank,george).\ntall(frank).\ntall(carol).\nenemy(eve,dave).\nowns(carol,book).\nfriend(eve,carol).\ndislikes(dave,ball).\nfriend(alice,bob).\nowns(george,phone).\nfriend(alice,eve).\ndislikes(eve,apple).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then frank is a sibling of dave.\nIf frank is a sibling of dave, then dave is tall.\nIf dave is tall, then frank dislikes car.\nIf frank dislikes car, then pencil is big.\nIf pencil is big, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol likes car.\nIf carol likes car, then car is wet.\nIf eve is a sibling of frank, then it is hot.\nIf carol is happy, then it is hot.\nIf it is cold, then frank is an enemy of alice.\nIf it is sunny and book is small and alice is happy, then alice likes car.\nIf alice is tall and it is hot, then frank likes car.\nIf carol is hungry, then george is sad.\nIf george owns book and it is cold, then george is sad.\nIf frank is sad and alice is hungry, then george is an enemy of dave.\nIf bob is hungry and car is big and bob is a friend of carol, then frank is tall.\nIf frank likes apple, then alice is tall.\nIf dave is tall and dave is a parent of eve and bob dislikes car, then frank is a parent of eve.\nIf frank is a sibling of george and pencil is wet, then dave likes book.\nIf george owns apple and eve is sad, then alice is a parent of alice.\nIf dave likes car, then eve likes phone.\n\nAnd the following facts:\nit is sunny.\nalice is hungry.\nfrank dislikes car.\nfrank is a parent of george.\nfrank is tall.\ncarol is tall.\neve is an enemy of dave.\ncarol owns book.\neve is a friend of carol.\ndave dislikes ball.\nalice is a friend of bob.\ngeorge owns phone.\nalice is a friend of eve.\neve dislikes apple.\nfrank dislikes apple.\n\nQUESTION:\nIs frank is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,book).",
    "c": "sad(dave) :- sunny.\nsibling(frank,dave) :- sad(dave).\ntall(dave) :- sibling(frank,dave).\ndislikes(frank,car) :- tall(dave).\nbig(pencil) :- dislikes(frank,car).\ntall(carol) :- big(pencil).\nsunny :- tall(carol).\nhungry(dave) :- sunny.\nlikes(carol,car) :- hungry(dave).\nwet(car) :- likes(carol,car).\nhot :- sibling(eve,frank).\nhot :- happy(carol).\nenemy(frank,alice) :- cold.\nlikes(alice,car) :- sunny, small(book), happy(alice).\nlikes(frank,car) :- tall(alice), hot.\nsad(george) :- hungry(carol).\nsad(george) :- owns(george,book), cold.\nenemy(george,dave) :- sad(frank), hungry(alice).\ntall(frank) :- hungry(bob), big(car), friend(bob,carol).\ntall(alice) :- likes(frank,apple).\nparent(frank,eve) :- tall(dave), parent(dave,eve), dislikes(bob,car).\nlikes(dave,book) :- sibling(frank,george), wet(pencil).\nparent(alice,alice) :- owns(george,apple), sad(eve).\nlikes(eve,phone) :- likes(dave,car).\nsunny.\nhungry(alice).\ndislikes(frank,car).\nparent(frank,george).\ntall(frank).\ntall(carol).\nenemy(eve,dave).\nowns(carol,book).\nfriend(eve,carol).\ndislikes(dave,ball).\nfriend(alice,bob).\nowns(george,phone).\nfriend(alice,eve).\ndislikes(eve,apple).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then frank is a sibling of dave.\nIf frank is a sibling of dave, then dave is tall.\nIf dave is tall, then frank dislikes car.\nIf frank dislikes car, then pencil is big.\nIf pencil is big, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol likes car.\nIf carol likes car, then car is wet.\nIf eve is a sibling of frank, then it is hot.\nIf carol is happy, then it is hot.\nIf it is cold, then frank is an enemy of alice.\nIf it is sunny and book is small and alice is happy, then alice likes car.\nIf alice is tall and it is hot, then frank likes car.\nIf carol is hungry, then george is sad.\nIf george owns book and it is cold, then george is sad.\nIf frank is sad and alice is hungry, then george is an enemy of dave.\nIf bob is hungry and car is big and bob is a friend of carol, then frank is tall.\nIf frank likes apple, then alice is tall.\nIf dave is tall and dave is a parent of eve and bob dislikes car, then frank is a parent of eve.\nIf frank is a sibling of george and pencil is wet, then dave likes book.\nIf george owns apple and eve is sad, then alice is a parent of alice.\nIf dave likes car, then eve likes phone.\n\nAnd the following facts:\nit is sunny.\nalice is hungry.\nfrank dislikes car.\nfrank is a parent of george.\nfrank is tall.\ncarol is tall.\neve is an enemy of dave.\ncarol owns book.\neve is a friend of carol.\ndave dislikes ball.\nalice is a friend of bob.\ngeorge owns phone.\nalice is a friend of eve.\neve dislikes apple.\nfrank dislikes apple.\n\nQUESTION:\nIs carol owns book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,apple).",
    "c": "sad(dave) :- sunny.\nsibling(frank,dave) :- sad(dave).\ntall(dave) :- sibling(frank,dave).\ndislikes(frank,car) :- tall(dave).\nbig(pencil) :- dislikes(frank,car).\ntall(carol) :- big(pencil).\nsunny :- tall(carol).\nhungry(dave) :- sunny.\nlikes(carol,car) :- hungry(dave).\nwet(car) :- likes(carol,car).\nhot :- sibling(eve,frank).\nhot :- happy(carol).\nenemy(frank,alice) :- cold.\nlikes(alice,car) :- sunny, small(book), happy(alice).\nlikes(frank,car) :- tall(alice), hot.\nsad(george) :- hungry(carol).\nsad(george) :- owns(george,book), cold.\nenemy(george,dave) :- sad(frank), hungry(alice).\ntall(frank) :- hungry(bob), big(car), friend(bob,carol).\ntall(alice) :- likes(frank,apple).\nparent(frank,eve) :- tall(dave), parent(dave,eve), dislikes(bob,car).\nlikes(dave,book) :- sibling(frank,george), wet(pencil).\nparent(alice,alice) :- owns(george,apple), sad(eve).\nlikes(eve,phone) :- likes(dave,car).\nsunny.\nhungry(alice).\ndislikes(frank,car).\nparent(frank,george).\ntall(frank).\ntall(carol).\nenemy(eve,dave).\nowns(carol,book).\nfriend(eve,carol).\ndislikes(dave,ball).\nfriend(alice,bob).\nowns(george,phone).\nfriend(alice,eve).\ndislikes(eve,apple).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then frank is a sibling of dave.\nIf frank is a sibling of dave, then dave is tall.\nIf dave is tall, then frank dislikes car.\nIf frank dislikes car, then pencil is big.\nIf pencil is big, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol likes car.\nIf carol likes car, then car is wet.\nIf eve is a sibling of frank, then it is hot.\nIf carol is happy, then it is hot.\nIf it is cold, then frank is an enemy of alice.\nIf it is sunny and book is small and alice is happy, then alice likes car.\nIf alice is tall and it is hot, then frank likes car.\nIf carol is hungry, then george is sad.\nIf george owns book and it is cold, then george is sad.\nIf frank is sad and alice is hungry, then george is an enemy of dave.\nIf bob is hungry and car is big and bob is a friend of carol, then frank is tall.\nIf frank likes apple, then alice is tall.\nIf dave is tall and dave is a parent of eve and bob dislikes car, then frank is a parent of eve.\nIf frank is a sibling of george and pencil is wet, then dave likes book.\nIf george owns apple and eve is sad, then alice is a parent of alice.\nIf dave likes car, then eve likes phone.\n\nAnd the following facts:\nit is sunny.\nalice is hungry.\nfrank dislikes car.\nfrank is a parent of george.\nfrank is tall.\ncarol is tall.\neve is an enemy of dave.\ncarol owns book.\neve is a friend of carol.\ndave dislikes ball.\nalice is a friend of bob.\ngeorge owns phone.\nalice is a friend of eve.\neve dislikes apple.\nfrank dislikes apple.\n\nQUESTION:\nIs bob dislikes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,carol).",
    "c": "sad(dave) :- sunny.\nsibling(frank,dave) :- sad(dave).\ntall(dave) :- sibling(frank,dave).\ndislikes(frank,car) :- tall(dave).\nbig(pencil) :- dislikes(frank,car).\ntall(carol) :- big(pencil).\nsunny :- tall(carol).\nhungry(dave) :- sunny.\nlikes(carol,car) :- hungry(dave).\nwet(car) :- likes(carol,car).\nhot :- sibling(eve,frank).\nhot :- happy(carol).\nenemy(frank,alice) :- cold.\nlikes(alice,car) :- sunny, small(book), happy(alice).\nlikes(frank,car) :- tall(alice), hot.\nsad(george) :- hungry(carol).\nsad(george) :- owns(george,book), cold.\nenemy(george,dave) :- sad(frank), hungry(alice).\ntall(frank) :- hungry(bob), big(car), friend(bob,carol).\ntall(alice) :- likes(frank,apple).\nparent(frank,eve) :- tall(dave), parent(dave,eve), dislikes(bob,car).\nlikes(dave,book) :- sibling(frank,george), wet(pencil).\nparent(alice,alice) :- owns(george,apple), sad(eve).\nlikes(eve,phone) :- likes(dave,car).\nsunny.\nhungry(alice).\ndislikes(frank,car).\nparent(frank,george).\ntall(frank).\ntall(carol).\nenemy(eve,dave).\nowns(carol,book).\nfriend(eve,carol).\ndislikes(dave,ball).\nfriend(alice,bob).\nowns(george,phone).\nfriend(alice,eve).\ndislikes(eve,apple).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then frank is a sibling of dave.\nIf frank is a sibling of dave, then dave is tall.\nIf dave is tall, then frank dislikes car.\nIf frank dislikes car, then pencil is big.\nIf pencil is big, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol likes car.\nIf carol likes car, then car is wet.\nIf eve is a sibling of frank, then it is hot.\nIf carol is happy, then it is hot.\nIf it is cold, then frank is an enemy of alice.\nIf it is sunny and book is small and alice is happy, then alice likes car.\nIf alice is tall and it is hot, then frank likes car.\nIf carol is hungry, then george is sad.\nIf george owns book and it is cold, then george is sad.\nIf frank is sad and alice is hungry, then george is an enemy of dave.\nIf bob is hungry and car is big and bob is a friend of carol, then frank is tall.\nIf frank likes apple, then alice is tall.\nIf dave is tall and dave is a parent of eve and bob dislikes car, then frank is a parent of eve.\nIf frank is a sibling of george and pencil is wet, then dave likes book.\nIf george owns apple and eve is sad, then alice is a parent of alice.\nIf dave likes car, then eve likes phone.\n\nAnd the following facts:\nit is sunny.\nalice is hungry.\nfrank dislikes car.\nfrank is a parent of george.\nfrank is tall.\ncarol is tall.\neve is an enemy of dave.\ncarol owns book.\neve is a friend of carol.\ndave dislikes ball.\nalice is a friend of bob.\ngeorge owns phone.\nalice is a friend of eve.\neve dislikes apple.\nfrank dislikes apple.\n\nQUESTION:\nIs dave is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "sad(dave) :- sunny.\nsibling(frank,dave) :- sad(dave).\ntall(dave) :- sibling(frank,dave).\ndislikes(frank,car) :- tall(dave).\nbig(pencil) :- dislikes(frank,car).\ntall(carol) :- big(pencil).\nsunny :- tall(carol).\nhungry(dave) :- sunny.\nlikes(carol,car) :- hungry(dave).\nwet(car) :- likes(carol,car).\nhot :- sibling(eve,frank).\nhot :- happy(carol).\nenemy(frank,alice) :- cold.\nlikes(alice,car) :- sunny, small(book), happy(alice).\nlikes(frank,car) :- tall(alice), hot.\nsad(george) :- hungry(carol).\nsad(george) :- owns(george,book), cold.\nenemy(george,dave) :- sad(frank), hungry(alice).\ntall(frank) :- hungry(bob), big(car), friend(bob,carol).\ntall(alice) :- likes(frank,apple).\nparent(frank,eve) :- tall(dave), parent(dave,eve), dislikes(bob,car).\nlikes(dave,book) :- sibling(frank,george), wet(pencil).\nparent(alice,alice) :- owns(george,apple), sad(eve).\nlikes(eve,phone) :- likes(dave,car).\nsunny.\nhungry(alice).\ndislikes(frank,car).\nparent(frank,george).\ntall(frank).\ntall(carol).\nenemy(eve,dave).\nowns(carol,book).\nfriend(eve,carol).\ndislikes(dave,ball).\nfriend(alice,bob).\nowns(george,phone).\nfriend(alice,eve).\ndislikes(eve,apple).\ndislikes(frank,apple).",
    "natural language": "You are given the following information:\nIf it is sunny, then dave is sad.\nIf dave is sad, then frank is a sibling of dave.\nIf frank is a sibling of dave, then dave is tall.\nIf dave is tall, then frank dislikes car.\nIf frank dislikes car, then pencil is big.\nIf pencil is big, then carol is tall.\nIf carol is tall, then it is sunny.\nIf it is sunny, then dave is hungry.\nIf dave is hungry, then carol likes car.\nIf carol likes car, then car is wet.\nIf eve is a sibling of frank, then it is hot.\nIf carol is happy, then it is hot.\nIf it is cold, then frank is an enemy of alice.\nIf it is sunny and book is small and alice is happy, then alice likes car.\nIf alice is tall and it is hot, then frank likes car.\nIf carol is hungry, then george is sad.\nIf george owns book and it is cold, then george is sad.\nIf frank is sad and alice is hungry, then george is an enemy of dave.\nIf bob is hungry and car is big and bob is a friend of carol, then frank is tall.\nIf frank likes apple, then alice is tall.\nIf dave is tall and dave is a parent of eve and bob dislikes car, then frank is a parent of eve.\nIf frank is a sibling of george and pencil is wet, then dave likes book.\nIf george owns apple and eve is sad, then alice is a parent of alice.\nIf dave likes car, then eve likes phone.\n\nAnd the following facts:\nit is sunny.\nalice is hungry.\nfrank dislikes car.\nfrank is a parent of george.\nfrank is tall.\ncarol is tall.\neve is an enemy of dave.\ncarol owns book.\neve is a friend of carol.\ndave dislikes ball.\nalice is a friend of bob.\ngeorge owns phone.\nalice is a friend of eve.\neve dislikes apple.\nfrank dislikes apple.\n\nQUESTION:\nIs george is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nlikes(dave,phone).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\ndave likes phone.\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nIs carol is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nlikes(dave,phone).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\ndave likes phone.\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,bob).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nlikes(dave,phone).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\ndave likes phone.\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nIs alice is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,phone).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nlikes(dave,phone).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\ndave likes phone.\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nIs george owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,ball).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nlikes(dave,phone).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following information:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\ndave likes phone.\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nIs george dislikes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,phone).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following rules:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nCould dave likes phone explain carol owns car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "owns(carol,car)",
      "explanation": "likes(dave,phone)"
    }
  },
  {
    "q": "likes(bob,car).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following rules:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nCould bob likes car explain carol owns car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "owns(carol,car)",
      "non_explanation": "likes(bob,car)"
    }
  },
  {
    "q": "dislikes(carol,phone).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following rules:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nCould carol dislikes phone explain carol owns car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "owns(carol,car)",
      "non_explanation": "dislikes(carol,phone)"
    }
  },
  {
    "q": "likes(alice,phone).",
    "c": "owns(carol,car) :- likes(dave,phone).\nhot :- owns(carol,car).\nbig(phone) :- hot.\nowns(alice,car) :- big(phone).\nsunny :- owns(alice,car).\nhappy(dave) :- sunny.\nbig(pencil) :- happy(dave).\nhungry(eve) :- big(pencil).\nsibling(alice,frank) :- hungry(eve).\nsunny :- sibling(alice,frank).\nenemy(dave,eve) :- sunny.\ndislikes(eve,ball) :- enemy(dave,eve).\nowns(george,pencil) :- dislikes(eve,ball).\ncold :- owns(george,pencil).\nsad(alice) :- cold.\nsibling(dave,alice) :- sad(alice).\nsunny :- sibling(dave,alice).\nsad(eve) :- sunny.\nowns(frank,ball) :- sad(eve).\nsibling(george,dave) :- owns(frank,ball).\nhot :- sibling(george,alice).\nhungry(frank) :- happy(eve), big(apple).\nhungry(bob) :- dislikes(eve,car).\ncold :- sad(alice), wet(ball), sibling(bob,dave).\nwet(ball).\ndislikes(carol,phone).\nlikes(bob,car).\nlikes(alice,phone).\nenemy(carol,eve).\nlikes(george,phone).\nsibling(dave,eve).\nwet(apple).\nsad(alice).\nhappy(bob).\nhappy(eve).\nenemy(eve,frank).\nowns(dave,apple).\ndislikes(george,car).",
    "natural language": "You are given the following rules:\nIf dave likes phone, then carol owns car.\nIf carol owns car, then it is hot.\nIf it is hot, then phone is big.\nIf phone is big, then alice owns car.\nIf alice owns car, then it is sunny.\nIf it is sunny, then dave is happy.\nIf dave is happy, then pencil is big.\nIf pencil is big, then eve is hungry.\nIf eve is hungry, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is sunny.\nIf it is sunny, then dave is an enemy of eve.\nIf dave is an enemy of eve, then eve dislikes ball.\nIf eve dislikes ball, then george owns pencil.\nIf george owns pencil, then it is cold.\nIf it is cold, then alice is sad.\nIf alice is sad, then dave is a sibling of alice.\nIf dave is a sibling of alice, then it is sunny.\nIf it is sunny, then eve is sad.\nIf eve is sad, then frank owns ball.\nIf frank owns ball, then george is a sibling of dave.\nIf george is a sibling of alice, then it is hot.\nIf eve is happy and apple is big, then frank is hungry.\nIf eve dislikes car, then bob is hungry.\nIf alice is sad and ball is wet and bob is a sibling of dave, then it is cold.\n\nAnd the following facts:\nball is wet.\ncarol dislikes phone.\nbob likes car.\nalice likes phone.\ncarol is an enemy of eve.\ngeorge likes phone.\ndave is a sibling of eve.\napple is wet.\nalice is sad.\nbob is happy.\neve is happy.\neve is an enemy of frank.\ndave owns apple.\ngeorge dislikes car.\n\nQUESTION:\nCould alice likes phone explain carol owns car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "owns(carol,car)",
      "non_explanation": "likes(alice,phone)"
    }
  },
  {
    "q": "parent(frank,frank).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(george,apple).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\ngeorge likes apple.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nIs frank is a parent of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(george,apple).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\ngeorge likes apple.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nIs frank is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,dave).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(george,apple).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\ngeorge likes apple.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nIs carol is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,ball).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(george,apple).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\ngeorge likes apple.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nIs dave likes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(george,dave).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(george,apple).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following information:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\ngeorge likes apple.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nIs george is a parent of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,apple).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following rules:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nCould george likes apple explain alice dislikes apple?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(alice,apple)",
      "explanation": "likes(george,apple)"
    }
  },
  {
    "q": "likes(carol,phone).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following rules:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nCould carol likes phone explain alice dislikes apple?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(alice,apple)",
      "non_explanation": "likes(carol,phone)"
    }
  },
  {
    "q": "dislikes(dave,book).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following rules:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nCould dave dislikes book explain alice dislikes apple?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(alice,apple)",
      "non_explanation": "dislikes(dave,book)"
    }
  },
  {
    "q": "sibling(george,dave).",
    "c": "tall(george) :- likes(carol,phone).\nparent(frank,dave) :- tall(george).\nowns(carol,apple) :- parent(frank,dave).\ntall(carol) :- owns(carol,apple).\nbig(car) :- tall(carol).\nhappy(alice) :- big(car).\nsibling(alice,carol) :- happy(alice).\nhot :- sibling(alice,carol).\nsunny :- hot.\nhungry(frank) :- sunny.\ntall(frank) :- hungry(frank).\nparent(frank,frank) :- tall(frank).\nowns(frank,car) :- parent(frank,frank).\nowns(bob,car) :- owns(frank,car).\ntall(alice) :- owns(bob,car).\nsibling(alice,carol) :- tall(alice).\nsmall(phone) :- sibling(alice,carol).\nsmall(apple) :- small(phone).\ncold :- small(apple).\nhot :- cold.\ndislikes(bob,phone) :- sibling(bob,frank), big(car).\nowns(bob,pencil) :- small(book), tall(bob), parent(george,carol).\nowns(alice,phone) :- tall(alice), tall(frank).\ndislikes(alice,apple) :- likes(george,apple).\nlikes(carol,phone).\ndislikes(bob,apple).\ndislikes(dave,book).\nsibling(george,dave).\nlikes(alice,phone).\nhungry(bob).\nlikes(george,pencil).\nowns(eve,ball).\nsibling(dave,bob).\nparent(frank,dave).\nlikes(alice,ball).\nowns(carol,phone).\nlikes(bob,car).\ndislikes(george,apple).",
    "natural language": "You are given the following rules:\nIf carol likes phone, then george is tall.\nIf george is tall, then frank is a parent of dave.\nIf frank is a parent of dave, then carol owns apple.\nIf carol owns apple, then carol is tall.\nIf carol is tall, then car is big.\nIf car is big, then alice is happy.\nIf alice is happy, then alice is a sibling of carol.\nIf alice is a sibling of carol, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then frank is hungry.\nIf frank is hungry, then frank is tall.\nIf frank is tall, then frank is a parent of frank.\nIf frank is a parent of frank, then frank owns car.\nIf frank owns car, then bob owns car.\nIf bob owns car, then alice is tall.\nIf alice is tall, then alice is a sibling of carol.\nIf alice is a sibling of carol, then phone is small.\nIf phone is small, then apple is small.\nIf apple is small, then it is cold.\nIf it is cold, then it is hot.\nIf bob is a sibling of frank and car is big, then bob dislikes phone.\nIf book is small and bob is tall and george is a parent of carol, then bob owns pencil.\nIf alice is tall and frank is tall, then alice owns phone.\nIf george likes apple, then alice dislikes apple.\n\nAnd the following facts:\ncarol likes phone.\nbob dislikes apple.\ndave dislikes book.\ngeorge is a sibling of dave.\nalice likes phone.\nbob is hungry.\ngeorge likes pencil.\neve owns ball.\ndave is a sibling of bob.\nfrank is a parent of dave.\nalice likes ball.\ncarol owns phone.\nbob likes car.\ngeorge dislikes apple.\n\nQUESTION:\nCould george is a sibling of dave explain alice dislikes apple?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 25,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(alice,apple)",
      "non_explanation": "sibling(george,dave)"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "enemy(carol,eve) :- sad(frank).\nsmall(phone) :- small(book), owns(bob,car).\nsunny :- owns(dave,ball).\nhappy(alice) :- sunny.\ntall(carol) :- big(ball), tall(alice), sibling(alice,frank).\ncold :- cold, cold.\nsmall(book) :- tall(alice).\nsunny :- hungry(george), sunny, dislikes(dave,apple).\nhappy(eve) :- happy(eve), enemy(george,george), big(pencil).\ntall(george) :- cold.\ncold :- enemy(alice,george), hungry(eve).\nsmall(apple) :- sibling(alice,george), friend(george,alice).\nowns(carol,apple) :- big(pencil), friend(carol,frank), big(car).\nfriend(frank,bob) :- friend(eve,dave).\nfriend(dave,bob) :- hot, friend(george,bob).\nowns(eve,phone) :- sad(bob), owns(dave,pencil).\ndislikes(eve,book) :- owns(alice,book), parent(eve,george).\ndislikes(carol,phone) :- dislikes(george,car), dislikes(eve,car), small(apple).\nsmall(phone) :- cold.\nsmall(ball) :- small(ball).\ncold :- happy(dave).\nsmall(book) :- sunny.\ncold :- cold, owns(dave,car), hungry(dave).\nparent(eve,alice) :- happy(frank), sibling(george,carol).\nparent(alice,george) :- likes(carol,pencil), sad(dave).\nenemy(dave,george) :- small(car), hungry(bob), hot.\nhot :- hot, happy(frank).\nhot :- friend(bob,frank), sibling(bob,george).\nsmall(phone) :- hot, wet(car).\ndislikes(eve,apple) :- dislikes(carol,car).\nenemy(bob,george) :- small(pencil), hot.\nsad(bob) :- hungry(alice), hungry(alice), sad(dave).\nhungry(frank) :- dislikes(eve,pencil), big(apple).\nhungry(eve) :- hungry(alice), parent(george,dave), happy(carol).\nsad(frank).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf frank is sad, then carol is an enemy of eve.\nIf book is small and bob owns car, then phone is small.\nIf dave owns ball, then it is sunny.\nIf it is sunny, then alice is happy.\nIf ball is big and alice is tall and alice is a sibling of frank, then carol is tall.\nIf it is cold and it is cold, then it is cold.\nIf alice is tall, then book is small.\nIf george is hungry and it is sunny and dave dislikes apple, then it is sunny.\nIf eve is happy and george is an enemy of george and pencil is big, then eve is happy.\nIf it is cold, then george is tall.\nIf alice is an enemy of george and eve is hungry, then it is cold.\nIf alice is a sibling of george and george is a friend of alice, then apple is small.\nIf pencil is big and carol is a friend of frank and car is big, then carol owns apple.\nIf eve is a friend of dave, then frank is a friend of bob.\nIf it is hot and george is a friend of bob, then dave is a friend of bob.\nIf bob is sad and dave owns pencil, then eve owns phone.\nIf alice owns book and eve is a parent of george, then eve dislikes book.\nIf george dislikes car and eve dislikes car and apple is small, then carol dislikes phone.\nIf it is cold, then phone is small.\nIf ball is small, then ball is small.\nIf dave is happy, then it is cold.\nIf it is sunny, then book is small.\nIf it is cold and dave owns car and dave is hungry, then it is cold.\nIf frank is happy and george is a sibling of carol, then eve is a parent of alice.\nIf carol likes pencil and dave is sad, then alice is a parent of george.\nIf car is small and bob is hungry and it is hot, then dave is an enemy of george.\nIf it is hot and frank is happy, then it is hot.\nIf bob is a friend of frank and bob is a sibling of george, then it is hot.\nIf it is hot and car is wet, then phone is small.\nIf carol dislikes car, then eve dislikes apple.\nIf pencil is small and it is hot, then bob is an enemy of george.\nIf alice is hungry and alice is hungry and dave is sad, then bob is sad.\nIf eve dislikes pencil and apple is big, then frank is hungry.\nIf alice is hungry and george is a parent of dave and carol is happy, then eve is hungry.\n\nAnd the following facts:\nfrank is sad.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nIs carol is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "enemy(carol,eve) :- sad(frank).\nsmall(phone) :- small(book), owns(bob,car).\nsunny :- owns(dave,ball).\nhappy(alice) :- sunny.\ntall(carol) :- big(ball), tall(alice), sibling(alice,frank).\ncold :- cold, cold.\nsmall(book) :- tall(alice).\nsunny :- hungry(george), sunny, dislikes(dave,apple).\nhappy(eve) :- happy(eve), enemy(george,george), big(pencil).\ntall(george) :- cold.\ncold :- enemy(alice,george), hungry(eve).\nsmall(apple) :- sibling(alice,george), friend(george,alice).\nowns(carol,apple) :- big(pencil), friend(carol,frank), big(car).\nfriend(frank,bob) :- friend(eve,dave).\nfriend(dave,bob) :- hot, friend(george,bob).\nowns(eve,phone) :- sad(bob), owns(dave,pencil).\ndislikes(eve,book) :- owns(alice,book), parent(eve,george).\ndislikes(carol,phone) :- dislikes(george,car), dislikes(eve,car), small(apple).\nsmall(phone) :- cold.\nsmall(ball) :- small(ball).\ncold :- happy(dave).\nsmall(book) :- sunny.\ncold :- cold, owns(dave,car), hungry(dave).\nparent(eve,alice) :- happy(frank), sibling(george,carol).\nparent(alice,george) :- likes(carol,pencil), sad(dave).\nenemy(dave,george) :- small(car), hungry(bob), hot.\nhot :- hot, happy(frank).\nhot :- friend(bob,frank), sibling(bob,george).\nsmall(phone) :- hot, wet(car).\ndislikes(eve,apple) :- dislikes(carol,car).\nenemy(bob,george) :- small(pencil), hot.\nsad(bob) :- hungry(alice), hungry(alice), sad(dave).\nhungry(frank) :- dislikes(eve,pencil), big(apple).\nhungry(eve) :- hungry(alice), parent(george,dave), happy(carol).\nsad(frank).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf frank is sad, then carol is an enemy of eve.\nIf book is small and bob owns car, then phone is small.\nIf dave owns ball, then it is sunny.\nIf it is sunny, then alice is happy.\nIf ball is big and alice is tall and alice is a sibling of frank, then carol is tall.\nIf it is cold and it is cold, then it is cold.\nIf alice is tall, then book is small.\nIf george is hungry and it is sunny and dave dislikes apple, then it is sunny.\nIf eve is happy and george is an enemy of george and pencil is big, then eve is happy.\nIf it is cold, then george is tall.\nIf alice is an enemy of george and eve is hungry, then it is cold.\nIf alice is a sibling of george and george is a friend of alice, then apple is small.\nIf pencil is big and carol is a friend of frank and car is big, then carol owns apple.\nIf eve is a friend of dave, then frank is a friend of bob.\nIf it is hot and george is a friend of bob, then dave is a friend of bob.\nIf bob is sad and dave owns pencil, then eve owns phone.\nIf alice owns book and eve is a parent of george, then eve dislikes book.\nIf george dislikes car and eve dislikes car and apple is small, then carol dislikes phone.\nIf it is cold, then phone is small.\nIf ball is small, then ball is small.\nIf dave is happy, then it is cold.\nIf it is sunny, then book is small.\nIf it is cold and dave owns car and dave is hungry, then it is cold.\nIf frank is happy and george is a sibling of carol, then eve is a parent of alice.\nIf carol likes pencil and dave is sad, then alice is a parent of george.\nIf car is small and bob is hungry and it is hot, then dave is an enemy of george.\nIf it is hot and frank is happy, then it is hot.\nIf bob is a friend of frank and bob is a sibling of george, then it is hot.\nIf it is hot and car is wet, then phone is small.\nIf carol dislikes car, then eve dislikes apple.\nIf pencil is small and it is hot, then bob is an enemy of george.\nIf alice is hungry and alice is hungry and dave is sad, then bob is sad.\nIf eve dislikes pencil and apple is big, then frank is hungry.\nIf alice is hungry and george is a parent of dave and carol is happy, then eve is hungry.\n\nAnd the following facts:\nfrank is sad.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nIs frank is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,book).",
    "c": "enemy(carol,eve) :- sad(frank).\nsmall(phone) :- small(book), owns(bob,car).\nsunny :- owns(dave,ball).\nhappy(alice) :- sunny.\ntall(carol) :- big(ball), tall(alice), sibling(alice,frank).\ncold :- cold, cold.\nsmall(book) :- tall(alice).\nsunny :- hungry(george), sunny, dislikes(dave,apple).\nhappy(eve) :- happy(eve), enemy(george,george), big(pencil).\ntall(george) :- cold.\ncold :- enemy(alice,george), hungry(eve).\nsmall(apple) :- sibling(alice,george), friend(george,alice).\nowns(carol,apple) :- big(pencil), friend(carol,frank), big(car).\nfriend(frank,bob) :- friend(eve,dave).\nfriend(dave,bob) :- hot, friend(george,bob).\nowns(eve,phone) :- sad(bob), owns(dave,pencil).\ndislikes(eve,book) :- owns(alice,book), parent(eve,george).\ndislikes(carol,phone) :- dislikes(george,car), dislikes(eve,car), small(apple).\nsmall(phone) :- cold.\nsmall(ball) :- small(ball).\ncold :- happy(dave).\nsmall(book) :- sunny.\ncold :- cold, owns(dave,car), hungry(dave).\nparent(eve,alice) :- happy(frank), sibling(george,carol).\nparent(alice,george) :- likes(carol,pencil), sad(dave).\nenemy(dave,george) :- small(car), hungry(bob), hot.\nhot :- hot, happy(frank).\nhot :- friend(bob,frank), sibling(bob,george).\nsmall(phone) :- hot, wet(car).\ndislikes(eve,apple) :- dislikes(carol,car).\nenemy(bob,george) :- small(pencil), hot.\nsad(bob) :- hungry(alice), hungry(alice), sad(dave).\nhungry(frank) :- dislikes(eve,pencil), big(apple).\nhungry(eve) :- hungry(alice), parent(george,dave), happy(carol).\nsad(frank).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf frank is sad, then carol is an enemy of eve.\nIf book is small and bob owns car, then phone is small.\nIf dave owns ball, then it is sunny.\nIf it is sunny, then alice is happy.\nIf ball is big and alice is tall and alice is a sibling of frank, then carol is tall.\nIf it is cold and it is cold, then it is cold.\nIf alice is tall, then book is small.\nIf george is hungry and it is sunny and dave dislikes apple, then it is sunny.\nIf eve is happy and george is an enemy of george and pencil is big, then eve is happy.\nIf it is cold, then george is tall.\nIf alice is an enemy of george and eve is hungry, then it is cold.\nIf alice is a sibling of george and george is a friend of alice, then apple is small.\nIf pencil is big and carol is a friend of frank and car is big, then carol owns apple.\nIf eve is a friend of dave, then frank is a friend of bob.\nIf it is hot and george is a friend of bob, then dave is a friend of bob.\nIf bob is sad and dave owns pencil, then eve owns phone.\nIf alice owns book and eve is a parent of george, then eve dislikes book.\nIf george dislikes car and eve dislikes car and apple is small, then carol dislikes phone.\nIf it is cold, then phone is small.\nIf ball is small, then ball is small.\nIf dave is happy, then it is cold.\nIf it is sunny, then book is small.\nIf it is cold and dave owns car and dave is hungry, then it is cold.\nIf frank is happy and george is a sibling of carol, then eve is a parent of alice.\nIf carol likes pencil and dave is sad, then alice is a parent of george.\nIf car is small and bob is hungry and it is hot, then dave is an enemy of george.\nIf it is hot and frank is happy, then it is hot.\nIf bob is a friend of frank and bob is a sibling of george, then it is hot.\nIf it is hot and car is wet, then phone is small.\nIf carol dislikes car, then eve dislikes apple.\nIf pencil is small and it is hot, then bob is an enemy of george.\nIf alice is hungry and alice is hungry and dave is sad, then bob is sad.\nIf eve dislikes pencil and apple is big, then frank is hungry.\nIf alice is hungry and george is a parent of dave and carol is happy, then eve is hungry.\n\nAnd the following facts:\nfrank is sad.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nIs frank likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,book).",
    "c": "enemy(carol,eve) :- sad(frank).\nsmall(phone) :- small(book), owns(bob,car).\nsunny :- owns(dave,ball).\nhappy(alice) :- sunny.\ntall(carol) :- big(ball), tall(alice), sibling(alice,frank).\ncold :- cold, cold.\nsmall(book) :- tall(alice).\nsunny :- hungry(george), sunny, dislikes(dave,apple).\nhappy(eve) :- happy(eve), enemy(george,george), big(pencil).\ntall(george) :- cold.\ncold :- enemy(alice,george), hungry(eve).\nsmall(apple) :- sibling(alice,george), friend(george,alice).\nowns(carol,apple) :- big(pencil), friend(carol,frank), big(car).\nfriend(frank,bob) :- friend(eve,dave).\nfriend(dave,bob) :- hot, friend(george,bob).\nowns(eve,phone) :- sad(bob), owns(dave,pencil).\ndislikes(eve,book) :- owns(alice,book), parent(eve,george).\ndislikes(carol,phone) :- dislikes(george,car), dislikes(eve,car), small(apple).\nsmall(phone) :- cold.\nsmall(ball) :- small(ball).\ncold :- happy(dave).\nsmall(book) :- sunny.\ncold :- cold, owns(dave,car), hungry(dave).\nparent(eve,alice) :- happy(frank), sibling(george,carol).\nparent(alice,george) :- likes(carol,pencil), sad(dave).\nenemy(dave,george) :- small(car), hungry(bob), hot.\nhot :- hot, happy(frank).\nhot :- friend(bob,frank), sibling(bob,george).\nsmall(phone) :- hot, wet(car).\ndislikes(eve,apple) :- dislikes(carol,car).\nenemy(bob,george) :- small(pencil), hot.\nsad(bob) :- hungry(alice), hungry(alice), sad(dave).\nhungry(frank) :- dislikes(eve,pencil), big(apple).\nhungry(eve) :- hungry(alice), parent(george,dave), happy(carol).\nsad(frank).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf frank is sad, then carol is an enemy of eve.\nIf book is small and bob owns car, then phone is small.\nIf dave owns ball, then it is sunny.\nIf it is sunny, then alice is happy.\nIf ball is big and alice is tall and alice is a sibling of frank, then carol is tall.\nIf it is cold and it is cold, then it is cold.\nIf alice is tall, then book is small.\nIf george is hungry and it is sunny and dave dislikes apple, then it is sunny.\nIf eve is happy and george is an enemy of george and pencil is big, then eve is happy.\nIf it is cold, then george is tall.\nIf alice is an enemy of george and eve is hungry, then it is cold.\nIf alice is a sibling of george and george is a friend of alice, then apple is small.\nIf pencil is big and carol is a friend of frank and car is big, then carol owns apple.\nIf eve is a friend of dave, then frank is a friend of bob.\nIf it is hot and george is a friend of bob, then dave is a friend of bob.\nIf bob is sad and dave owns pencil, then eve owns phone.\nIf alice owns book and eve is a parent of george, then eve dislikes book.\nIf george dislikes car and eve dislikes car and apple is small, then carol dislikes phone.\nIf it is cold, then phone is small.\nIf ball is small, then ball is small.\nIf dave is happy, then it is cold.\nIf it is sunny, then book is small.\nIf it is cold and dave owns car and dave is hungry, then it is cold.\nIf frank is happy and george is a sibling of carol, then eve is a parent of alice.\nIf carol likes pencil and dave is sad, then alice is a parent of george.\nIf car is small and bob is hungry and it is hot, then dave is an enemy of george.\nIf it is hot and frank is happy, then it is hot.\nIf bob is a friend of frank and bob is a sibling of george, then it is hot.\nIf it is hot and car is wet, then phone is small.\nIf carol dislikes car, then eve dislikes apple.\nIf pencil is small and it is hot, then bob is an enemy of george.\nIf alice is hungry and alice is hungry and dave is sad, then bob is sad.\nIf eve dislikes pencil and apple is big, then frank is hungry.\nIf alice is hungry and george is a parent of dave and carol is happy, then eve is hungry.\n\nAnd the following facts:\nfrank is sad.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nIs alice owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,carol).",
    "c": "enemy(carol,eve) :- sad(frank).\nsmall(phone) :- small(book), owns(bob,car).\nsunny :- owns(dave,ball).\nhappy(alice) :- sunny.\ntall(carol) :- big(ball), tall(alice), sibling(alice,frank).\ncold :- cold, cold.\nsmall(book) :- tall(alice).\nsunny :- hungry(george), sunny, dislikes(dave,apple).\nhappy(eve) :- happy(eve), enemy(george,george), big(pencil).\ntall(george) :- cold.\ncold :- enemy(alice,george), hungry(eve).\nsmall(apple) :- sibling(alice,george), friend(george,alice).\nowns(carol,apple) :- big(pencil), friend(carol,frank), big(car).\nfriend(frank,bob) :- friend(eve,dave).\nfriend(dave,bob) :- hot, friend(george,bob).\nowns(eve,phone) :- sad(bob), owns(dave,pencil).\ndislikes(eve,book) :- owns(alice,book), parent(eve,george).\ndislikes(carol,phone) :- dislikes(george,car), dislikes(eve,car), small(apple).\nsmall(phone) :- cold.\nsmall(ball) :- small(ball).\ncold :- happy(dave).\nsmall(book) :- sunny.\ncold :- cold, owns(dave,car), hungry(dave).\nparent(eve,alice) :- happy(frank), sibling(george,carol).\nparent(alice,george) :- likes(carol,pencil), sad(dave).\nenemy(dave,george) :- small(car), hungry(bob), hot.\nhot :- hot, happy(frank).\nhot :- friend(bob,frank), sibling(bob,george).\nsmall(phone) :- hot, wet(car).\ndislikes(eve,apple) :- dislikes(carol,car).\nenemy(bob,george) :- small(pencil), hot.\nsad(bob) :- hungry(alice), hungry(alice), sad(dave).\nhungry(frank) :- dislikes(eve,pencil), big(apple).\nhungry(eve) :- hungry(alice), parent(george,dave), happy(carol).\nsad(frank).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf frank is sad, then carol is an enemy of eve.\nIf book is small and bob owns car, then phone is small.\nIf dave owns ball, then it is sunny.\nIf it is sunny, then alice is happy.\nIf ball is big and alice is tall and alice is a sibling of frank, then carol is tall.\nIf it is cold and it is cold, then it is cold.\nIf alice is tall, then book is small.\nIf george is hungry and it is sunny and dave dislikes apple, then it is sunny.\nIf eve is happy and george is an enemy of george and pencil is big, then eve is happy.\nIf it is cold, then george is tall.\nIf alice is an enemy of george and eve is hungry, then it is cold.\nIf alice is a sibling of george and george is a friend of alice, then apple is small.\nIf pencil is big and carol is a friend of frank and car is big, then carol owns apple.\nIf eve is a friend of dave, then frank is a friend of bob.\nIf it is hot and george is a friend of bob, then dave is a friend of bob.\nIf bob is sad and dave owns pencil, then eve owns phone.\nIf alice owns book and eve is a parent of george, then eve dislikes book.\nIf george dislikes car and eve dislikes car and apple is small, then carol dislikes phone.\nIf it is cold, then phone is small.\nIf ball is small, then ball is small.\nIf dave is happy, then it is cold.\nIf it is sunny, then book is small.\nIf it is cold and dave owns car and dave is hungry, then it is cold.\nIf frank is happy and george is a sibling of carol, then eve is a parent of alice.\nIf carol likes pencil and dave is sad, then alice is a parent of george.\nIf car is small and bob is hungry and it is hot, then dave is an enemy of george.\nIf it is hot and frank is happy, then it is hot.\nIf bob is a friend of frank and bob is a sibling of george, then it is hot.\nIf it is hot and car is wet, then phone is small.\nIf carol dislikes car, then eve dislikes apple.\nIf pencil is small and it is hot, then bob is an enemy of george.\nIf alice is hungry and alice is hungry and dave is sad, then bob is sad.\nIf eve dislikes pencil and apple is big, then frank is hungry.\nIf alice is hungry and george is a parent of dave and carol is happy, then eve is hungry.\n\nAnd the following facts:\nfrank is sad.\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nIs alice is a parent of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "enemy(carol,eve) :- sad(frank).\nsmall(phone) :- small(book), owns(bob,car).\nsunny :- owns(dave,ball).\nhappy(alice) :- sunny.\ntall(carol) :- big(ball), tall(alice), sibling(alice,frank).\ncold :- cold, cold.\nsmall(book) :- tall(alice).\nsunny :- hungry(george), sunny, dislikes(dave,apple).\nhappy(eve) :- happy(eve), enemy(george,george), big(pencil).\ntall(george) :- cold.\ncold :- enemy(alice,george), hungry(eve).\nsmall(apple) :- sibling(alice,george), friend(george,alice).\nowns(carol,apple) :- big(pencil), friend(carol,frank), big(car).\nfriend(frank,bob) :- friend(eve,dave).\nfriend(dave,bob) :- hot, friend(george,bob).\nowns(eve,phone) :- sad(bob), owns(dave,pencil).\ndislikes(eve,book) :- owns(alice,book), parent(eve,george).\ndislikes(carol,phone) :- dislikes(george,car), dislikes(eve,car), small(apple).\nsmall(phone) :- cold.\nsmall(ball) :- small(ball).\ncold :- happy(dave).\nsmall(book) :- sunny.\ncold :- cold, owns(dave,car), hungry(dave).\nparent(eve,alice) :- happy(frank), sibling(george,carol).\nparent(alice,george) :- likes(carol,pencil), sad(dave).\nenemy(dave,george) :- small(car), hungry(bob), hot.\nhot :- hot, happy(frank).\nhot :- friend(bob,frank), sibling(bob,george).\nsmall(phone) :- hot, wet(car).\ndislikes(eve,apple) :- dislikes(carol,car).\nenemy(bob,george) :- small(pencil), hot.\nsad(bob) :- hungry(alice), hungry(alice), sad(dave).\nhungry(frank) :- dislikes(eve,pencil), big(apple).\nhungry(eve) :- hungry(alice), parent(george,dave), happy(carol).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf frank is sad, then carol is an enemy of eve.\nIf book is small and bob owns car, then phone is small.\nIf dave owns ball, then it is sunny.\nIf it is sunny, then alice is happy.\nIf ball is big and alice is tall and alice is a sibling of frank, then carol is tall.\nIf it is cold and it is cold, then it is cold.\nIf alice is tall, then book is small.\nIf george is hungry and it is sunny and dave dislikes apple, then it is sunny.\nIf eve is happy and george is an enemy of george and pencil is big, then eve is happy.\nIf it is cold, then george is tall.\nIf alice is an enemy of george and eve is hungry, then it is cold.\nIf alice is a sibling of george and george is a friend of alice, then apple is small.\nIf pencil is big and carol is a friend of frank and car is big, then carol owns apple.\nIf eve is a friend of dave, then frank is a friend of bob.\nIf it is hot and george is a friend of bob, then dave is a friend of bob.\nIf bob is sad and dave owns pencil, then eve owns phone.\nIf alice owns book and eve is a parent of george, then eve dislikes book.\nIf george dislikes car and eve dislikes car and apple is small, then carol dislikes phone.\nIf it is cold, then phone is small.\nIf ball is small, then ball is small.\nIf dave is happy, then it is cold.\nIf it is sunny, then book is small.\nIf it is cold and dave owns car and dave is hungry, then it is cold.\nIf frank is happy and george is a sibling of carol, then eve is a parent of alice.\nIf carol likes pencil and dave is sad, then alice is a parent of george.\nIf car is small and bob is hungry and it is hot, then dave is an enemy of george.\nIf it is hot and frank is happy, then it is hot.\nIf bob is a friend of frank and bob is a sibling of george, then it is hot.\nIf it is hot and car is wet, then phone is small.\nIf carol dislikes car, then eve dislikes apple.\nIf pencil is small and it is hot, then bob is an enemy of george.\nIf alice is hungry and alice is hungry and dave is sad, then bob is sad.\nIf eve dislikes pencil and apple is big, then frank is hungry.\nIf alice is hungry and george is a parent of dave and carol is happy, then eve is hungry.\n\nAnd the following facts:\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nCould frank is sad explain carol is an enemy of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(carol,eve)",
      "explanation": "sad(frank)"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "enemy(carol,eve) :- sad(frank).\nsmall(phone) :- small(book), owns(bob,car).\nsunny :- owns(dave,ball).\nhappy(alice) :- sunny.\ntall(carol) :- big(ball), tall(alice), sibling(alice,frank).\ncold :- cold, cold.\nsmall(book) :- tall(alice).\nsunny :- hungry(george), sunny, dislikes(dave,apple).\nhappy(eve) :- happy(eve), enemy(george,george), big(pencil).\ntall(george) :- cold.\ncold :- enemy(alice,george), hungry(eve).\nsmall(apple) :- sibling(alice,george), friend(george,alice).\nowns(carol,apple) :- big(pencil), friend(carol,frank), big(car).\nfriend(frank,bob) :- friend(eve,dave).\nfriend(dave,bob) :- hot, friend(george,bob).\nowns(eve,phone) :- sad(bob), owns(dave,pencil).\ndislikes(eve,book) :- owns(alice,book), parent(eve,george).\ndislikes(carol,phone) :- dislikes(george,car), dislikes(eve,car), small(apple).\nsmall(phone) :- cold.\nsmall(ball) :- small(ball).\ncold :- happy(dave).\nsmall(book) :- sunny.\ncold :- cold, owns(dave,car), hungry(dave).\nparent(eve,alice) :- happy(frank), sibling(george,carol).\nparent(alice,george) :- likes(carol,pencil), sad(dave).\nenemy(dave,george) :- small(car), hungry(bob), hot.\nhot :- hot, happy(frank).\nhot :- friend(bob,frank), sibling(bob,george).\nsmall(phone) :- hot, wet(car).\ndislikes(eve,apple) :- dislikes(carol,car).\nenemy(bob,george) :- small(pencil), hot.\nsad(bob) :- hungry(alice), hungry(alice), sad(dave).\nhungry(frank) :- dislikes(eve,pencil), big(apple).\nhungry(eve) :- hungry(alice), parent(george,dave), happy(carol).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf frank is sad, then carol is an enemy of eve.\nIf book is small and bob owns car, then phone is small.\nIf dave owns ball, then it is sunny.\nIf it is sunny, then alice is happy.\nIf ball is big and alice is tall and alice is a sibling of frank, then carol is tall.\nIf it is cold and it is cold, then it is cold.\nIf alice is tall, then book is small.\nIf george is hungry and it is sunny and dave dislikes apple, then it is sunny.\nIf eve is happy and george is an enemy of george and pencil is big, then eve is happy.\nIf it is cold, then george is tall.\nIf alice is an enemy of george and eve is hungry, then it is cold.\nIf alice is a sibling of george and george is a friend of alice, then apple is small.\nIf pencil is big and carol is a friend of frank and car is big, then carol owns apple.\nIf eve is a friend of dave, then frank is a friend of bob.\nIf it is hot and george is a friend of bob, then dave is a friend of bob.\nIf bob is sad and dave owns pencil, then eve owns phone.\nIf alice owns book and eve is a parent of george, then eve dislikes book.\nIf george dislikes car and eve dislikes car and apple is small, then carol dislikes phone.\nIf it is cold, then phone is small.\nIf ball is small, then ball is small.\nIf dave is happy, then it is cold.\nIf it is sunny, then book is small.\nIf it is cold and dave owns car and dave is hungry, then it is cold.\nIf frank is happy and george is a sibling of carol, then eve is a parent of alice.\nIf carol likes pencil and dave is sad, then alice is a parent of george.\nIf car is small and bob is hungry and it is hot, then dave is an enemy of george.\nIf it is hot and frank is happy, then it is hot.\nIf bob is a friend of frank and bob is a sibling of george, then it is hot.\nIf it is hot and car is wet, then phone is small.\nIf carol dislikes car, then eve dislikes apple.\nIf pencil is small and it is hot, then bob is an enemy of george.\nIf alice is hungry and alice is hungry and dave is sad, then bob is sad.\nIf eve dislikes pencil and apple is big, then frank is hungry.\nIf alice is hungry and george is a parent of dave and carol is happy, then eve is hungry.\n\nAnd the following facts:\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nCould frank owns car explain carol is an enemy of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(carol,eve)",
      "non_explanation": "owns(frank,car)"
    }
  },
  {
    "q": "likes(carol,book).",
    "c": "enemy(carol,eve) :- sad(frank).\nsmall(phone) :- small(book), owns(bob,car).\nsunny :- owns(dave,ball).\nhappy(alice) :- sunny.\ntall(carol) :- big(ball), tall(alice), sibling(alice,frank).\ncold :- cold, cold.\nsmall(book) :- tall(alice).\nsunny :- hungry(george), sunny, dislikes(dave,apple).\nhappy(eve) :- happy(eve), enemy(george,george), big(pencil).\ntall(george) :- cold.\ncold :- enemy(alice,george), hungry(eve).\nsmall(apple) :- sibling(alice,george), friend(george,alice).\nowns(carol,apple) :- big(pencil), friend(carol,frank), big(car).\nfriend(frank,bob) :- friend(eve,dave).\nfriend(dave,bob) :- hot, friend(george,bob).\nowns(eve,phone) :- sad(bob), owns(dave,pencil).\ndislikes(eve,book) :- owns(alice,book), parent(eve,george).\ndislikes(carol,phone) :- dislikes(george,car), dislikes(eve,car), small(apple).\nsmall(phone) :- cold.\nsmall(ball) :- small(ball).\ncold :- happy(dave).\nsmall(book) :- sunny.\ncold :- cold, owns(dave,car), hungry(dave).\nparent(eve,alice) :- happy(frank), sibling(george,carol).\nparent(alice,george) :- likes(carol,pencil), sad(dave).\nenemy(dave,george) :- small(car), hungry(bob), hot.\nhot :- hot, happy(frank).\nhot :- friend(bob,frank), sibling(bob,george).\nsmall(phone) :- hot, wet(car).\ndislikes(eve,apple) :- dislikes(carol,car).\nenemy(bob,george) :- small(pencil), hot.\nsad(bob) :- hungry(alice), hungry(alice), sad(dave).\nhungry(frank) :- dislikes(eve,pencil), big(apple).\nhungry(eve) :- hungry(alice), parent(george,dave), happy(carol).\nowns(frank,car).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf frank is sad, then carol is an enemy of eve.\nIf book is small and bob owns car, then phone is small.\nIf dave owns ball, then it is sunny.\nIf it is sunny, then alice is happy.\nIf ball is big and alice is tall and alice is a sibling of frank, then carol is tall.\nIf it is cold and it is cold, then it is cold.\nIf alice is tall, then book is small.\nIf george is hungry and it is sunny and dave dislikes apple, then it is sunny.\nIf eve is happy and george is an enemy of george and pencil is big, then eve is happy.\nIf it is cold, then george is tall.\nIf alice is an enemy of george and eve is hungry, then it is cold.\nIf alice is a sibling of george and george is a friend of alice, then apple is small.\nIf pencil is big and carol is a friend of frank and car is big, then carol owns apple.\nIf eve is a friend of dave, then frank is a friend of bob.\nIf it is hot and george is a friend of bob, then dave is a friend of bob.\nIf bob is sad and dave owns pencil, then eve owns phone.\nIf alice owns book and eve is a parent of george, then eve dislikes book.\nIf george dislikes car and eve dislikes car and apple is small, then carol dislikes phone.\nIf it is cold, then phone is small.\nIf ball is small, then ball is small.\nIf dave is happy, then it is cold.\nIf it is sunny, then book is small.\nIf it is cold and dave owns car and dave is hungry, then it is cold.\nIf frank is happy and george is a sibling of carol, then eve is a parent of alice.\nIf carol likes pencil and dave is sad, then alice is a parent of george.\nIf car is small and bob is hungry and it is hot, then dave is an enemy of george.\nIf it is hot and frank is happy, then it is hot.\nIf bob is a friend of frank and bob is a sibling of george, then it is hot.\nIf it is hot and car is wet, then phone is small.\nIf carol dislikes car, then eve dislikes apple.\nIf pencil is small and it is hot, then bob is an enemy of george.\nIf alice is hungry and alice is hungry and dave is sad, then bob is sad.\nIf eve dislikes pencil and apple is big, then frank is hungry.\nIf alice is hungry and george is a parent of dave and carol is happy, then eve is hungry.\n\nAnd the following facts:\nfrank owns car.\ncarol likes book.\n\nQUESTION:\nCould carol likes book explain carol is an enemy of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "enemy(carol,eve)",
      "non_explanation": "likes(carol,book)"
    }
  },
  {
    "q": "likes(dave,book).",
    "c": "small(ball) :- hot.\nwet(car) :- wet(ball), wet(phone), hot.\nwet(ball) :- parent(dave,dave), friend(george,alice).\nwet(car) :- parent(dave,frank), enemy(carol,alice).\nfriend(eve,george) :- hungry(george), likes(bob,apple).\nfriend(frank,alice) :- happy(eve).\ntall(dave) :- big(book), cold, sad(bob).\nhot :- likes(eve,pencil), sad(bob), sibling(bob,frank).\nsmall(ball) :- small(pencil), tall(carol).\nhot :- sad(george).\ndislikes(dave,book) :- cold.\ndislikes(bob,car) :- happy(george), enemy(alice,alice).\nsad(carol) :- happy(bob), dislikes(frank,apple).\nfriend(carol,bob) :- tall(dave), enemy(alice,carol), sibling(eve,alice).\nsmall(pencil) :- cold.\ntall(alice) :- sibling(bob,frank), happy(alice).\nfriend(carol,frank) :- big(phone), hungry(bob), friend(frank,frank).\nsad(bob) :- likes(dave,apple).\nenemy(bob,frank) :- hot, sibling(bob,carol), sad(eve).\nhungry(carol) :- likes(dave,pencil), big(apple).\nhungry(dave) :- happy(frank), enemy(george,frank).\nparent(bob,eve) :- small(phone), cold, parent(eve,eve).\ncold :- dislikes(eve,car).\nlikes(frank,phone) :- sibling(george,george), happy(bob), small(phone).\ncold :- sibling(bob,george).\nlikes(george,ball) :- wet(book), tall(carol).\nenemy(dave,alice) :- cold, owns(eve,phone), owns(eve,car).\nlikes(frank,book) :- hungry(bob), hungry(bob).\nparent(dave,dave) :- sad(dave), sunny, sunny.\nsad(bob) :- owns(bob,phone), friend(bob,bob), wet(car).\nhot :- hot, parent(george,alice).\ntall(frank) :- dislikes(george,phone).\nlikes(eve,pencil) :- big(ball), big(pencil), dislikes(carol,book).\nhappy(carol) :- cold, sibling(frank,eve), likes(george,book).\nhot.\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then ball is small.\nIf ball is wet and phone is wet and it is hot, then car is wet.\nIf dave is a parent of dave and george is a friend of alice, then ball is wet.\nIf dave is a parent of frank and carol is an enemy of alice, then car is wet.\nIf george is hungry and bob likes apple, then eve is a friend of george.\nIf eve is happy, then frank is a friend of alice.\nIf book is big and it is cold and bob is sad, then dave is tall.\nIf eve likes pencil and bob is sad and bob is a sibling of frank, then it is hot.\nIf pencil is small and carol is tall, then ball is small.\nIf george is sad, then it is hot.\nIf it is cold, then dave dislikes book.\nIf george is happy and alice is an enemy of alice, then bob dislikes car.\nIf bob is happy and frank dislikes apple, then carol is sad.\nIf dave is tall and alice is an enemy of carol and eve is a sibling of alice, then carol is a friend of bob.\nIf it is cold, then pencil is small.\nIf bob is a sibling of frank and alice is happy, then alice is tall.\nIf phone is big and bob is hungry and frank is a friend of frank, then carol is a friend of frank.\nIf dave likes apple, then bob is sad.\nIf it is hot and bob is a sibling of carol and eve is sad, then bob is an enemy of frank.\nIf dave likes pencil and apple is big, then carol is hungry.\nIf frank is happy and george is an enemy of frank, then dave is hungry.\nIf phone is small and it is cold and eve is a parent of eve, then bob is a parent of eve.\nIf eve dislikes car, then it is cold.\nIf george is a sibling of george and bob is happy and phone is small, then frank likes phone.\nIf bob is a sibling of george, then it is cold.\nIf book is wet and carol is tall, then george likes ball.\nIf it is cold and eve owns phone and eve owns car, then dave is an enemy of alice.\nIf bob is hungry and bob is hungry, then frank likes book.\nIf dave is sad and it is sunny and it is sunny, then dave is a parent of dave.\nIf bob owns phone and bob is a friend of bob and car is wet, then bob is sad.\nIf it is hot and george is a parent of alice, then it is hot.\nIf george dislikes phone, then frank is tall.\nIf ball is big and pencil is big and carol dislikes book, then eve likes pencil.\nIf it is cold and frank is a sibling of eve and george likes book, then carol is happy.\n\nAnd the following facts:\nit is hot.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nIs dave likes book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(ball).",
    "c": "small(ball) :- hot.\nwet(car) :- wet(ball), wet(phone), hot.\nwet(ball) :- parent(dave,dave), friend(george,alice).\nwet(car) :- parent(dave,frank), enemy(carol,alice).\nfriend(eve,george) :- hungry(george), likes(bob,apple).\nfriend(frank,alice) :- happy(eve).\ntall(dave) :- big(book), cold, sad(bob).\nhot :- likes(eve,pencil), sad(bob), sibling(bob,frank).\nsmall(ball) :- small(pencil), tall(carol).\nhot :- sad(george).\ndislikes(dave,book) :- cold.\ndislikes(bob,car) :- happy(george), enemy(alice,alice).\nsad(carol) :- happy(bob), dislikes(frank,apple).\nfriend(carol,bob) :- tall(dave), enemy(alice,carol), sibling(eve,alice).\nsmall(pencil) :- cold.\ntall(alice) :- sibling(bob,frank), happy(alice).\nfriend(carol,frank) :- big(phone), hungry(bob), friend(frank,frank).\nsad(bob) :- likes(dave,apple).\nenemy(bob,frank) :- hot, sibling(bob,carol), sad(eve).\nhungry(carol) :- likes(dave,pencil), big(apple).\nhungry(dave) :- happy(frank), enemy(george,frank).\nparent(bob,eve) :- small(phone), cold, parent(eve,eve).\ncold :- dislikes(eve,car).\nlikes(frank,phone) :- sibling(george,george), happy(bob), small(phone).\ncold :- sibling(bob,george).\nlikes(george,ball) :- wet(book), tall(carol).\nenemy(dave,alice) :- cold, owns(eve,phone), owns(eve,car).\nlikes(frank,book) :- hungry(bob), hungry(bob).\nparent(dave,dave) :- sad(dave), sunny, sunny.\nsad(bob) :- owns(bob,phone), friend(bob,bob), wet(car).\nhot :- hot, parent(george,alice).\ntall(frank) :- dislikes(george,phone).\nlikes(eve,pencil) :- big(ball), big(pencil), dislikes(carol,book).\nhappy(carol) :- cold, sibling(frank,eve), likes(george,book).\nhot.\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then ball is small.\nIf ball is wet and phone is wet and it is hot, then car is wet.\nIf dave is a parent of dave and george is a friend of alice, then ball is wet.\nIf dave is a parent of frank and carol is an enemy of alice, then car is wet.\nIf george is hungry and bob likes apple, then eve is a friend of george.\nIf eve is happy, then frank is a friend of alice.\nIf book is big and it is cold and bob is sad, then dave is tall.\nIf eve likes pencil and bob is sad and bob is a sibling of frank, then it is hot.\nIf pencil is small and carol is tall, then ball is small.\nIf george is sad, then it is hot.\nIf it is cold, then dave dislikes book.\nIf george is happy and alice is an enemy of alice, then bob dislikes car.\nIf bob is happy and frank dislikes apple, then carol is sad.\nIf dave is tall and alice is an enemy of carol and eve is a sibling of alice, then carol is a friend of bob.\nIf it is cold, then pencil is small.\nIf bob is a sibling of frank and alice is happy, then alice is tall.\nIf phone is big and bob is hungry and frank is a friend of frank, then carol is a friend of frank.\nIf dave likes apple, then bob is sad.\nIf it is hot and bob is a sibling of carol and eve is sad, then bob is an enemy of frank.\nIf dave likes pencil and apple is big, then carol is hungry.\nIf frank is happy and george is an enemy of frank, then dave is hungry.\nIf phone is small and it is cold and eve is a parent of eve, then bob is a parent of eve.\nIf eve dislikes car, then it is cold.\nIf george is a sibling of george and bob is happy and phone is small, then frank likes phone.\nIf bob is a sibling of george, then it is cold.\nIf book is wet and carol is tall, then george likes ball.\nIf it is cold and eve owns phone and eve owns car, then dave is an enemy of alice.\nIf bob is hungry and bob is hungry, then frank likes book.\nIf dave is sad and it is sunny and it is sunny, then dave is a parent of dave.\nIf bob owns phone and bob is a friend of bob and car is wet, then bob is sad.\nIf it is hot and george is a parent of alice, then it is hot.\nIf george dislikes phone, then frank is tall.\nIf ball is big and pencil is big and carol dislikes book, then eve likes pencil.\nIf it is cold and frank is a sibling of eve and george likes book, then carol is happy.\n\nAnd the following facts:\nit is hot.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nIs ball is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,frank).",
    "c": "small(ball) :- hot.\nwet(car) :- wet(ball), wet(phone), hot.\nwet(ball) :- parent(dave,dave), friend(george,alice).\nwet(car) :- parent(dave,frank), enemy(carol,alice).\nfriend(eve,george) :- hungry(george), likes(bob,apple).\nfriend(frank,alice) :- happy(eve).\ntall(dave) :- big(book), cold, sad(bob).\nhot :- likes(eve,pencil), sad(bob), sibling(bob,frank).\nsmall(ball) :- small(pencil), tall(carol).\nhot :- sad(george).\ndislikes(dave,book) :- cold.\ndislikes(bob,car) :- happy(george), enemy(alice,alice).\nsad(carol) :- happy(bob), dislikes(frank,apple).\nfriend(carol,bob) :- tall(dave), enemy(alice,carol), sibling(eve,alice).\nsmall(pencil) :- cold.\ntall(alice) :- sibling(bob,frank), happy(alice).\nfriend(carol,frank) :- big(phone), hungry(bob), friend(frank,frank).\nsad(bob) :- likes(dave,apple).\nenemy(bob,frank) :- hot, sibling(bob,carol), sad(eve).\nhungry(carol) :- likes(dave,pencil), big(apple).\nhungry(dave) :- happy(frank), enemy(george,frank).\nparent(bob,eve) :- small(phone), cold, parent(eve,eve).\ncold :- dislikes(eve,car).\nlikes(frank,phone) :- sibling(george,george), happy(bob), small(phone).\ncold :- sibling(bob,george).\nlikes(george,ball) :- wet(book), tall(carol).\nenemy(dave,alice) :- cold, owns(eve,phone), owns(eve,car).\nlikes(frank,book) :- hungry(bob), hungry(bob).\nparent(dave,dave) :- sad(dave), sunny, sunny.\nsad(bob) :- owns(bob,phone), friend(bob,bob), wet(car).\nhot :- hot, parent(george,alice).\ntall(frank) :- dislikes(george,phone).\nlikes(eve,pencil) :- big(ball), big(pencil), dislikes(carol,book).\nhappy(carol) :- cold, sibling(frank,eve), likes(george,book).\nhot.\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then ball is small.\nIf ball is wet and phone is wet and it is hot, then car is wet.\nIf dave is a parent of dave and george is a friend of alice, then ball is wet.\nIf dave is a parent of frank and carol is an enemy of alice, then car is wet.\nIf george is hungry and bob likes apple, then eve is a friend of george.\nIf eve is happy, then frank is a friend of alice.\nIf book is big and it is cold and bob is sad, then dave is tall.\nIf eve likes pencil and bob is sad and bob is a sibling of frank, then it is hot.\nIf pencil is small and carol is tall, then ball is small.\nIf george is sad, then it is hot.\nIf it is cold, then dave dislikes book.\nIf george is happy and alice is an enemy of alice, then bob dislikes car.\nIf bob is happy and frank dislikes apple, then carol is sad.\nIf dave is tall and alice is an enemy of carol and eve is a sibling of alice, then carol is a friend of bob.\nIf it is cold, then pencil is small.\nIf bob is a sibling of frank and alice is happy, then alice is tall.\nIf phone is big and bob is hungry and frank is a friend of frank, then carol is a friend of frank.\nIf dave likes apple, then bob is sad.\nIf it is hot and bob is a sibling of carol and eve is sad, then bob is an enemy of frank.\nIf dave likes pencil and apple is big, then carol is hungry.\nIf frank is happy and george is an enemy of frank, then dave is hungry.\nIf phone is small and it is cold and eve is a parent of eve, then bob is a parent of eve.\nIf eve dislikes car, then it is cold.\nIf george is a sibling of george and bob is happy and phone is small, then frank likes phone.\nIf bob is a sibling of george, then it is cold.\nIf book is wet and carol is tall, then george likes ball.\nIf it is cold and eve owns phone and eve owns car, then dave is an enemy of alice.\nIf bob is hungry and bob is hungry, then frank likes book.\nIf dave is sad and it is sunny and it is sunny, then dave is a parent of dave.\nIf bob owns phone and bob is a friend of bob and car is wet, then bob is sad.\nIf it is hot and george is a parent of alice, then it is hot.\nIf george dislikes phone, then frank is tall.\nIf ball is big and pencil is big and carol dislikes book, then eve likes pencil.\nIf it is cold and frank is a sibling of eve and george likes book, then carol is happy.\n\nAnd the following facts:\nit is hot.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nIs alice is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,bob).",
    "c": "small(ball) :- hot.\nwet(car) :- wet(ball), wet(phone), hot.\nwet(ball) :- parent(dave,dave), friend(george,alice).\nwet(car) :- parent(dave,frank), enemy(carol,alice).\nfriend(eve,george) :- hungry(george), likes(bob,apple).\nfriend(frank,alice) :- happy(eve).\ntall(dave) :- big(book), cold, sad(bob).\nhot :- likes(eve,pencil), sad(bob), sibling(bob,frank).\nsmall(ball) :- small(pencil), tall(carol).\nhot :- sad(george).\ndislikes(dave,book) :- cold.\ndislikes(bob,car) :- happy(george), enemy(alice,alice).\nsad(carol) :- happy(bob), dislikes(frank,apple).\nfriend(carol,bob) :- tall(dave), enemy(alice,carol), sibling(eve,alice).\nsmall(pencil) :- cold.\ntall(alice) :- sibling(bob,frank), happy(alice).\nfriend(carol,frank) :- big(phone), hungry(bob), friend(frank,frank).\nsad(bob) :- likes(dave,apple).\nenemy(bob,frank) :- hot, sibling(bob,carol), sad(eve).\nhungry(carol) :- likes(dave,pencil), big(apple).\nhungry(dave) :- happy(frank), enemy(george,frank).\nparent(bob,eve) :- small(phone), cold, parent(eve,eve).\ncold :- dislikes(eve,car).\nlikes(frank,phone) :- sibling(george,george), happy(bob), small(phone).\ncold :- sibling(bob,george).\nlikes(george,ball) :- wet(book), tall(carol).\nenemy(dave,alice) :- cold, owns(eve,phone), owns(eve,car).\nlikes(frank,book) :- hungry(bob), hungry(bob).\nparent(dave,dave) :- sad(dave), sunny, sunny.\nsad(bob) :- owns(bob,phone), friend(bob,bob), wet(car).\nhot :- hot, parent(george,alice).\ntall(frank) :- dislikes(george,phone).\nlikes(eve,pencil) :- big(ball), big(pencil), dislikes(carol,book).\nhappy(carol) :- cold, sibling(frank,eve), likes(george,book).\nhot.\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then ball is small.\nIf ball is wet and phone is wet and it is hot, then car is wet.\nIf dave is a parent of dave and george is a friend of alice, then ball is wet.\nIf dave is a parent of frank and carol is an enemy of alice, then car is wet.\nIf george is hungry and bob likes apple, then eve is a friend of george.\nIf eve is happy, then frank is a friend of alice.\nIf book is big and it is cold and bob is sad, then dave is tall.\nIf eve likes pencil and bob is sad and bob is a sibling of frank, then it is hot.\nIf pencil is small and carol is tall, then ball is small.\nIf george is sad, then it is hot.\nIf it is cold, then dave dislikes book.\nIf george is happy and alice is an enemy of alice, then bob dislikes car.\nIf bob is happy and frank dislikes apple, then carol is sad.\nIf dave is tall and alice is an enemy of carol and eve is a sibling of alice, then carol is a friend of bob.\nIf it is cold, then pencil is small.\nIf bob is a sibling of frank and alice is happy, then alice is tall.\nIf phone is big and bob is hungry and frank is a friend of frank, then carol is a friend of frank.\nIf dave likes apple, then bob is sad.\nIf it is hot and bob is a sibling of carol and eve is sad, then bob is an enemy of frank.\nIf dave likes pencil and apple is big, then carol is hungry.\nIf frank is happy and george is an enemy of frank, then dave is hungry.\nIf phone is small and it is cold and eve is a parent of eve, then bob is a parent of eve.\nIf eve dislikes car, then it is cold.\nIf george is a sibling of george and bob is happy and phone is small, then frank likes phone.\nIf bob is a sibling of george, then it is cold.\nIf book is wet and carol is tall, then george likes ball.\nIf it is cold and eve owns phone and eve owns car, then dave is an enemy of alice.\nIf bob is hungry and bob is hungry, then frank likes book.\nIf dave is sad and it is sunny and it is sunny, then dave is a parent of dave.\nIf bob owns phone and bob is a friend of bob and car is wet, then bob is sad.\nIf it is hot and george is a parent of alice, then it is hot.\nIf george dislikes phone, then frank is tall.\nIf ball is big and pencil is big and carol dislikes book, then eve likes pencil.\nIf it is cold and frank is a sibling of eve and george likes book, then carol is happy.\n\nAnd the following facts:\nit is hot.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nIs dave is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,dave).",
    "c": "small(ball) :- hot.\nwet(car) :- wet(ball), wet(phone), hot.\nwet(ball) :- parent(dave,dave), friend(george,alice).\nwet(car) :- parent(dave,frank), enemy(carol,alice).\nfriend(eve,george) :- hungry(george), likes(bob,apple).\nfriend(frank,alice) :- happy(eve).\ntall(dave) :- big(book), cold, sad(bob).\nhot :- likes(eve,pencil), sad(bob), sibling(bob,frank).\nsmall(ball) :- small(pencil), tall(carol).\nhot :- sad(george).\ndislikes(dave,book) :- cold.\ndislikes(bob,car) :- happy(george), enemy(alice,alice).\nsad(carol) :- happy(bob), dislikes(frank,apple).\nfriend(carol,bob) :- tall(dave), enemy(alice,carol), sibling(eve,alice).\nsmall(pencil) :- cold.\ntall(alice) :- sibling(bob,frank), happy(alice).\nfriend(carol,frank) :- big(phone), hungry(bob), friend(frank,frank).\nsad(bob) :- likes(dave,apple).\nenemy(bob,frank) :- hot, sibling(bob,carol), sad(eve).\nhungry(carol) :- likes(dave,pencil), big(apple).\nhungry(dave) :- happy(frank), enemy(george,frank).\nparent(bob,eve) :- small(phone), cold, parent(eve,eve).\ncold :- dislikes(eve,car).\nlikes(frank,phone) :- sibling(george,george), happy(bob), small(phone).\ncold :- sibling(bob,george).\nlikes(george,ball) :- wet(book), tall(carol).\nenemy(dave,alice) :- cold, owns(eve,phone), owns(eve,car).\nlikes(frank,book) :- hungry(bob), hungry(bob).\nparent(dave,dave) :- sad(dave), sunny, sunny.\nsad(bob) :- owns(bob,phone), friend(bob,bob), wet(car).\nhot :- hot, parent(george,alice).\ntall(frank) :- dislikes(george,phone).\nlikes(eve,pencil) :- big(ball), big(pencil), dislikes(carol,book).\nhappy(carol) :- cold, sibling(frank,eve), likes(george,book).\nhot.\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf it is hot, then ball is small.\nIf ball is wet and phone is wet and it is hot, then car is wet.\nIf dave is a parent of dave and george is a friend of alice, then ball is wet.\nIf dave is a parent of frank and carol is an enemy of alice, then car is wet.\nIf george is hungry and bob likes apple, then eve is a friend of george.\nIf eve is happy, then frank is a friend of alice.\nIf book is big and it is cold and bob is sad, then dave is tall.\nIf eve likes pencil and bob is sad and bob is a sibling of frank, then it is hot.\nIf pencil is small and carol is tall, then ball is small.\nIf george is sad, then it is hot.\nIf it is cold, then dave dislikes book.\nIf george is happy and alice is an enemy of alice, then bob dislikes car.\nIf bob is happy and frank dislikes apple, then carol is sad.\nIf dave is tall and alice is an enemy of carol and eve is a sibling of alice, then carol is a friend of bob.\nIf it is cold, then pencil is small.\nIf bob is a sibling of frank and alice is happy, then alice is tall.\nIf phone is big and bob is hungry and frank is a friend of frank, then carol is a friend of frank.\nIf dave likes apple, then bob is sad.\nIf it is hot and bob is a sibling of carol and eve is sad, then bob is an enemy of frank.\nIf dave likes pencil and apple is big, then carol is hungry.\nIf frank is happy and george is an enemy of frank, then dave is hungry.\nIf phone is small and it is cold and eve is a parent of eve, then bob is a parent of eve.\nIf eve dislikes car, then it is cold.\nIf george is a sibling of george and bob is happy and phone is small, then frank likes phone.\nIf bob is a sibling of george, then it is cold.\nIf book is wet and carol is tall, then george likes ball.\nIf it is cold and eve owns phone and eve owns car, then dave is an enemy of alice.\nIf bob is hungry and bob is hungry, then frank likes book.\nIf dave is sad and it is sunny and it is sunny, then dave is a parent of dave.\nIf bob owns phone and bob is a friend of bob and car is wet, then bob is sad.\nIf it is hot and george is a parent of alice, then it is hot.\nIf george dislikes phone, then frank is tall.\nIf ball is big and pencil is big and carol dislikes book, then eve likes pencil.\nIf it is cold and frank is a sibling of eve and george likes book, then carol is happy.\n\nAnd the following facts:\nit is hot.\ndave likes book.\nbob owns ball.\n\nQUESTION:\nIs bob is a friend of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "small(ball) :- hot.\nwet(car) :- wet(ball), wet(phone), hot.\nwet(ball) :- parent(dave,dave), friend(george,alice).\nwet(car) :- parent(dave,frank), enemy(carol,alice).\nfriend(eve,george) :- hungry(george), likes(bob,apple).\nfriend(frank,alice) :- happy(eve).\ntall(dave) :- big(book), cold, sad(bob).\nhot :- likes(eve,pencil), sad(bob), sibling(bob,frank).\nsmall(ball) :- small(pencil), tall(carol).\nhot :- sad(george).\ndislikes(dave,book) :- cold.\ndislikes(bob,car) :- happy(george), enemy(alice,alice).\nsad(carol) :- happy(bob), dislikes(frank,apple).\nfriend(carol,bob) :- tall(dave), enemy(alice,carol), sibling(eve,alice).\nsmall(pencil) :- cold.\ntall(alice) :- sibling(bob,frank), happy(alice).\nfriend(carol,frank) :- big(phone), hungry(bob), friend(frank,frank).\nsad(bob) :- likes(dave,apple).\nenemy(bob,frank) :- hot, sibling(bob,carol), sad(eve).\nhungry(carol) :- likes(dave,pencil), big(apple).\nhungry(dave) :- happy(frank), enemy(george,frank).\nparent(bob,eve) :- small(phone), cold, parent(eve,eve).\ncold :- dislikes(eve,car).\nlikes(frank,phone) :- sibling(george,george), happy(bob), small(phone).\ncold :- sibling(bob,george).\nlikes(george,ball) :- wet(book), tall(carol).\nenemy(dave,alice) :- cold, owns(eve,phone), owns(eve,car).\nlikes(frank,book) :- hungry(bob), hungry(bob).\nparent(dave,dave) :- sad(dave), sunny, sunny.\nsad(bob) :- owns(bob,phone), friend(bob,bob), wet(car).\nhot :- hot, parent(george,alice).\ntall(frank) :- dislikes(george,phone).\nlikes(eve,pencil) :- big(ball), big(pencil), dislikes(carol,book).\nhappy(carol) :- cold, sibling(frank,eve), likes(george,book).\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf it is hot, then ball is small.\nIf ball is wet and phone is wet and it is hot, then car is wet.\nIf dave is a parent of dave and george is a friend of alice, then ball is wet.\nIf dave is a parent of frank and carol is an enemy of alice, then car is wet.\nIf george is hungry and bob likes apple, then eve is a friend of george.\nIf eve is happy, then frank is a friend of alice.\nIf book is big and it is cold and bob is sad, then dave is tall.\nIf eve likes pencil and bob is sad and bob is a sibling of frank, then it is hot.\nIf pencil is small and carol is tall, then ball is small.\nIf george is sad, then it is hot.\nIf it is cold, then dave dislikes book.\nIf george is happy and alice is an enemy of alice, then bob dislikes car.\nIf bob is happy and frank dislikes apple, then carol is sad.\nIf dave is tall and alice is an enemy of carol and eve is a sibling of alice, then carol is a friend of bob.\nIf it is cold, then pencil is small.\nIf bob is a sibling of frank and alice is happy, then alice is tall.\nIf phone is big and bob is hungry and frank is a friend of frank, then carol is a friend of frank.\nIf dave likes apple, then bob is sad.\nIf it is hot and bob is a sibling of carol and eve is sad, then bob is an enemy of frank.\nIf dave likes pencil and apple is big, then carol is hungry.\nIf frank is happy and george is an enemy of frank, then dave is hungry.\nIf phone is small and it is cold and eve is a parent of eve, then bob is a parent of eve.\nIf eve dislikes car, then it is cold.\nIf george is a sibling of george and bob is happy and phone is small, then frank likes phone.\nIf bob is a sibling of george, then it is cold.\nIf book is wet and carol is tall, then george likes ball.\nIf it is cold and eve owns phone and eve owns car, then dave is an enemy of alice.\nIf bob is hungry and bob is hungry, then frank likes book.\nIf dave is sad and it is sunny and it is sunny, then dave is a parent of dave.\nIf bob owns phone and bob is a friend of bob and car is wet, then bob is sad.\nIf it is hot and george is a parent of alice, then it is hot.\nIf george dislikes phone, then frank is tall.\nIf ball is big and pencil is big and carol dislikes book, then eve likes pencil.\nIf it is cold and frank is a sibling of eve and george likes book, then carol is happy.\n\nAnd the following facts:\ndave likes book.\nbob owns ball.\n\nQUESTION:\nCould it is hot explain ball is small?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(ball)",
      "explanation": "hot"
    }
  },
  {
    "q": "likes(dave,book).",
    "c": "small(ball) :- hot.\nwet(car) :- wet(ball), wet(phone), hot.\nwet(ball) :- parent(dave,dave), friend(george,alice).\nwet(car) :- parent(dave,frank), enemy(carol,alice).\nfriend(eve,george) :- hungry(george), likes(bob,apple).\nfriend(frank,alice) :- happy(eve).\ntall(dave) :- big(book), cold, sad(bob).\nhot :- likes(eve,pencil), sad(bob), sibling(bob,frank).\nsmall(ball) :- small(pencil), tall(carol).\nhot :- sad(george).\ndislikes(dave,book) :- cold.\ndislikes(bob,car) :- happy(george), enemy(alice,alice).\nsad(carol) :- happy(bob), dislikes(frank,apple).\nfriend(carol,bob) :- tall(dave), enemy(alice,carol), sibling(eve,alice).\nsmall(pencil) :- cold.\ntall(alice) :- sibling(bob,frank), happy(alice).\nfriend(carol,frank) :- big(phone), hungry(bob), friend(frank,frank).\nsad(bob) :- likes(dave,apple).\nenemy(bob,frank) :- hot, sibling(bob,carol), sad(eve).\nhungry(carol) :- likes(dave,pencil), big(apple).\nhungry(dave) :- happy(frank), enemy(george,frank).\nparent(bob,eve) :- small(phone), cold, parent(eve,eve).\ncold :- dislikes(eve,car).\nlikes(frank,phone) :- sibling(george,george), happy(bob), small(phone).\ncold :- sibling(bob,george).\nlikes(george,ball) :- wet(book), tall(carol).\nenemy(dave,alice) :- cold, owns(eve,phone), owns(eve,car).\nlikes(frank,book) :- hungry(bob), hungry(bob).\nparent(dave,dave) :- sad(dave), sunny, sunny.\nsad(bob) :- owns(bob,phone), friend(bob,bob), wet(car).\nhot :- hot, parent(george,alice).\ntall(frank) :- dislikes(george,phone).\nlikes(eve,pencil) :- big(ball), big(pencil), dislikes(carol,book).\nhappy(carol) :- cold, sibling(frank,eve), likes(george,book).\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf it is hot, then ball is small.\nIf ball is wet and phone is wet and it is hot, then car is wet.\nIf dave is a parent of dave and george is a friend of alice, then ball is wet.\nIf dave is a parent of frank and carol is an enemy of alice, then car is wet.\nIf george is hungry and bob likes apple, then eve is a friend of george.\nIf eve is happy, then frank is a friend of alice.\nIf book is big and it is cold and bob is sad, then dave is tall.\nIf eve likes pencil and bob is sad and bob is a sibling of frank, then it is hot.\nIf pencil is small and carol is tall, then ball is small.\nIf george is sad, then it is hot.\nIf it is cold, then dave dislikes book.\nIf george is happy and alice is an enemy of alice, then bob dislikes car.\nIf bob is happy and frank dislikes apple, then carol is sad.\nIf dave is tall and alice is an enemy of carol and eve is a sibling of alice, then carol is a friend of bob.\nIf it is cold, then pencil is small.\nIf bob is a sibling of frank and alice is happy, then alice is tall.\nIf phone is big and bob is hungry and frank is a friend of frank, then carol is a friend of frank.\nIf dave likes apple, then bob is sad.\nIf it is hot and bob is a sibling of carol and eve is sad, then bob is an enemy of frank.\nIf dave likes pencil and apple is big, then carol is hungry.\nIf frank is happy and george is an enemy of frank, then dave is hungry.\nIf phone is small and it is cold and eve is a parent of eve, then bob is a parent of eve.\nIf eve dislikes car, then it is cold.\nIf george is a sibling of george and bob is happy and phone is small, then frank likes phone.\nIf bob is a sibling of george, then it is cold.\nIf book is wet and carol is tall, then george likes ball.\nIf it is cold and eve owns phone and eve owns car, then dave is an enemy of alice.\nIf bob is hungry and bob is hungry, then frank likes book.\nIf dave is sad and it is sunny and it is sunny, then dave is a parent of dave.\nIf bob owns phone and bob is a friend of bob and car is wet, then bob is sad.\nIf it is hot and george is a parent of alice, then it is hot.\nIf george dislikes phone, then frank is tall.\nIf ball is big and pencil is big and carol dislikes book, then eve likes pencil.\nIf it is cold and frank is a sibling of eve and george likes book, then carol is happy.\n\nAnd the following facts:\ndave likes book.\nbob owns ball.\n\nQUESTION:\nCould dave likes book explain ball is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(ball)",
      "non_explanation": "likes(dave,book)"
    }
  },
  {
    "q": "owns(bob,ball).",
    "c": "small(ball) :- hot.\nwet(car) :- wet(ball), wet(phone), hot.\nwet(ball) :- parent(dave,dave), friend(george,alice).\nwet(car) :- parent(dave,frank), enemy(carol,alice).\nfriend(eve,george) :- hungry(george), likes(bob,apple).\nfriend(frank,alice) :- happy(eve).\ntall(dave) :- big(book), cold, sad(bob).\nhot :- likes(eve,pencil), sad(bob), sibling(bob,frank).\nsmall(ball) :- small(pencil), tall(carol).\nhot :- sad(george).\ndislikes(dave,book) :- cold.\ndislikes(bob,car) :- happy(george), enemy(alice,alice).\nsad(carol) :- happy(bob), dislikes(frank,apple).\nfriend(carol,bob) :- tall(dave), enemy(alice,carol), sibling(eve,alice).\nsmall(pencil) :- cold.\ntall(alice) :- sibling(bob,frank), happy(alice).\nfriend(carol,frank) :- big(phone), hungry(bob), friend(frank,frank).\nsad(bob) :- likes(dave,apple).\nenemy(bob,frank) :- hot, sibling(bob,carol), sad(eve).\nhungry(carol) :- likes(dave,pencil), big(apple).\nhungry(dave) :- happy(frank), enemy(george,frank).\nparent(bob,eve) :- small(phone), cold, parent(eve,eve).\ncold :- dislikes(eve,car).\nlikes(frank,phone) :- sibling(george,george), happy(bob), small(phone).\ncold :- sibling(bob,george).\nlikes(george,ball) :- wet(book), tall(carol).\nenemy(dave,alice) :- cold, owns(eve,phone), owns(eve,car).\nlikes(frank,book) :- hungry(bob), hungry(bob).\nparent(dave,dave) :- sad(dave), sunny, sunny.\nsad(bob) :- owns(bob,phone), friend(bob,bob), wet(car).\nhot :- hot, parent(george,alice).\ntall(frank) :- dislikes(george,phone).\nlikes(eve,pencil) :- big(ball), big(pencil), dislikes(carol,book).\nhappy(carol) :- cold, sibling(frank,eve), likes(george,book).\nlikes(dave,book).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf it is hot, then ball is small.\nIf ball is wet and phone is wet and it is hot, then car is wet.\nIf dave is a parent of dave and george is a friend of alice, then ball is wet.\nIf dave is a parent of frank and carol is an enemy of alice, then car is wet.\nIf george is hungry and bob likes apple, then eve is a friend of george.\nIf eve is happy, then frank is a friend of alice.\nIf book is big and it is cold and bob is sad, then dave is tall.\nIf eve likes pencil and bob is sad and bob is a sibling of frank, then it is hot.\nIf pencil is small and carol is tall, then ball is small.\nIf george is sad, then it is hot.\nIf it is cold, then dave dislikes book.\nIf george is happy and alice is an enemy of alice, then bob dislikes car.\nIf bob is happy and frank dislikes apple, then carol is sad.\nIf dave is tall and alice is an enemy of carol and eve is a sibling of alice, then carol is a friend of bob.\nIf it is cold, then pencil is small.\nIf bob is a sibling of frank and alice is happy, then alice is tall.\nIf phone is big and bob is hungry and frank is a friend of frank, then carol is a friend of frank.\nIf dave likes apple, then bob is sad.\nIf it is hot and bob is a sibling of carol and eve is sad, then bob is an enemy of frank.\nIf dave likes pencil and apple is big, then carol is hungry.\nIf frank is happy and george is an enemy of frank, then dave is hungry.\nIf phone is small and it is cold and eve is a parent of eve, then bob is a parent of eve.\nIf eve dislikes car, then it is cold.\nIf george is a sibling of george and bob is happy and phone is small, then frank likes phone.\nIf bob is a sibling of george, then it is cold.\nIf book is wet and carol is tall, then george likes ball.\nIf it is cold and eve owns phone and eve owns car, then dave is an enemy of alice.\nIf bob is hungry and bob is hungry, then frank likes book.\nIf dave is sad and it is sunny and it is sunny, then dave is a parent of dave.\nIf bob owns phone and bob is a friend of bob and car is wet, then bob is sad.\nIf it is hot and george is a parent of alice, then it is hot.\nIf george dislikes phone, then frank is tall.\nIf ball is big and pencil is big and carol dislikes book, then eve likes pencil.\nIf it is cold and frank is a sibling of eve and george likes book, then carol is happy.\n\nAnd the following facts:\ndave likes book.\nbob owns ball.\n\nQUESTION:\nCould bob owns ball explain ball is small?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "small(ball)",
      "non_explanation": "owns(bob,ball)"
    }
  },
  {
    "q": "parent(carol,alice).",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\ncold.\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nIs carol is a parent of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,car).",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\ncold.\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nIs carol owns car true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,book).",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\ncold.\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nIs george likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,alice).",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\ncold.\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nIs dave is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,phone).",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\ncold.\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following information:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nit is cold.\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nIs carol likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "cold.",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nCould it is cold explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "cold"
    }
  },
  {
    "q": "cold.",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nCould it is cold explain carol is a parent of alice?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "parent(carol,alice)",
      "explanation": "cold"
    }
  },
  {
    "q": "small(pencil).",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nCould pencil is small explain carol is a parent of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "parent(carol,alice)",
      "non_explanation": "small(pencil)"
    }
  },
  {
    "q": "parent(frank,bob).",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nCould frank is a parent of bob explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "parent(frank,bob)"
    }
  },
  {
    "q": "parent(frank,bob).",
    "c": "parent(carol,alice) :- cold.\ndislikes(bob,car) :- parent(carol,alice).\nbig(book) :- dislikes(bob,car).\nowns(carol,car) :- big(book).\nenemy(dave,bob) :- owns(carol,car).\nbig(car) :- big(car), cold.\nbig(car) :- likes(eve,book), sibling(eve,alice), hungry(eve).\nowns(frank,apple) :- owns(dave,ball), owns(george,pencil).\ntall(george) :- cold.\nsibling(bob,dave) :- sibling(eve,dave), likes(frank,apple), sibling(carol,bob).\ntall(frank) :- tall(dave).\nhappy(frank) :- parent(eve,carol), parent(george,george), parent(alice,frank).\nsunny :- wet(phone), big(pencil), friend(bob,carol).\nsunny :- happy(alice), sunny, sunny.\nsibling(alice,alice) :- small(apple).\nsunny :- hot, hungry(eve).\nsad(george) :- wet(apple).\nhappy(alice) :- sad(bob), friend(bob,bob).\nsad(dave) :- hot.\nsunny :- sad(bob), wet(ball).\ntall(george) :- sad(frank), big(book), likes(frank,phone).\nowns(eve,car) :- sibling(eve,bob).\nsunny :- sunny.\nsad(dave) :- likes(carol,pencil), likes(frank,book), likes(bob,apple).\nsad(eve) :- friend(dave,george), cold.\nfriend(alice,bob) :- hungry(alice).\nfriend(dave,eve) :- friend(dave,alice).\nsunny :- wet(book), sunny.\nowns(frank,pencil) :- owns(carol,ball), tall(alice), parent(george,eve).\nwet(car) :- wet(apple).\nenemy(dave,bob) :- sibling(frank,bob).\ncold :- dislikes(dave,apple).\nwet(ball) :- wet(pencil), sad(bob), wet(car).\nenemy(alice,frank) :- enemy(eve,carol).\nparent(frank,bob).\nsmall(pencil).",
    "natural language": "You are given the following rules:\nIf it is cold, then carol is a parent of alice.\nIf carol is a parent of alice, then bob dislikes car.\nIf bob dislikes car, then book is big.\nIf book is big, then carol owns car.\nIf carol owns car, then dave is an enemy of bob.\nIf car is big and it is cold, then car is big.\nIf eve likes book and eve is a sibling of alice and eve is hungry, then car is big.\nIf dave owns ball and george owns pencil, then frank owns apple.\nIf it is cold, then george is tall.\nIf eve is a sibling of dave and frank likes apple and carol is a sibling of bob, then bob is a sibling of dave.\nIf dave is tall, then frank is tall.\nIf eve is a parent of carol and george is a parent of george and alice is a parent of frank, then frank is happy.\nIf phone is wet and pencil is big and bob is a friend of carol, then it is sunny.\nIf alice is happy and it is sunny and it is sunny, then it is sunny.\nIf apple is small, then alice is a sibling of alice.\nIf it is hot and eve is hungry, then it is sunny.\nIf apple is wet, then george is sad.\nIf bob is sad and bob is a friend of bob, then alice is happy.\nIf it is hot, then dave is sad.\nIf bob is sad and ball is wet, then it is sunny.\nIf frank is sad and book is big and frank likes phone, then george is tall.\nIf eve is a sibling of bob, then eve owns car.\nIf it is sunny, then it is sunny.\nIf carol likes pencil and frank likes book and bob likes apple, then dave is sad.\nIf dave is a friend of george and it is cold, then eve is sad.\nIf alice is hungry, then alice is a friend of bob.\nIf dave is a friend of alice, then dave is a friend of eve.\nIf book is wet and it is sunny, then it is sunny.\nIf carol owns ball and alice is tall and george is a parent of eve, then frank owns pencil.\nIf apple is wet, then car is wet.\nIf frank is a sibling of bob, then dave is an enemy of bob.\nIf dave dislikes apple, then it is cold.\nIf pencil is wet and bob is sad and car is wet, then ball is wet.\nIf eve is an enemy of carol, then alice is an enemy of frank.\n\nAnd the following facts:\nfrank is a parent of bob.\npencil is small.\n\nQUESTION:\nCould frank is a parent of bob explain carol is a parent of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "parent(carol,alice)",
      "non_explanation": "parent(frank,bob)"
    }
  },
  {
    "q": "big(book).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nsad(alice).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\nalice is sad.\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nIs book is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(dave).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nsad(alice).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\nalice is sad.\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nIs dave is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,phone).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nsad(alice).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\nalice is sad.\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nIs george likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,frank).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nsad(alice).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\nalice is sad.\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nIs carol is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,car).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nsad(alice).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following information:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\nalice is sad.\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nIs bob dislikes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(alice).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following rules:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nCould alice is sad explain george is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "explanation": "sad(alice)"
    }
  },
  {
    "q": "sad(alice).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following rules:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nCould alice is sad explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "sad(alice)"
    }
  },
  {
    "q": "enemy(carol,george).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following rules:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nCould carol is an enemy of george explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "enemy(carol,george)"
    }
  },
  {
    "q": "sad(dave).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following rules:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nCould dave is sad explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "sad(dave)"
    }
  },
  {
    "q": "enemy(carol,george).",
    "c": "hungry(eve) :- sad(alice).\nhungry(frank) :- hungry(eve).\nhungry(george) :- hungry(frank).\nbig(book) :- hungry(george).\ndislikes(george,apple) :- big(book).\nlikes(eve,phone) :- hungry(dave), friend(george,bob), parent(carol,carol).\nlikes(dave,phone) :- wet(ball), cold, friend(dave,bob).\nfriend(eve,eve) :- likes(alice,phone), enemy(bob,alice), enemy(alice,carol).\nlikes(carol,car) :- hot, enemy(dave,george), tall(bob).\nfriend(george,bob) :- hot.\nlikes(eve,book) :- cold, parent(alice,carol), big(apple).\nenemy(bob,bob) :- small(phone), hungry(frank), hot.\ntall(carol) :- owns(eve,phone), small(pencil).\nsibling(dave,dave) :- sad(carol).\ntall(george) :- happy(frank), enemy(carol,carol), sad(dave).\nwet(book) :- hungry(frank).\ntall(bob) :- sibling(carol,george).\nhungry(frank) :- parent(george,eve), small(car).\nhungry(bob) :- small(pencil), hungry(frank), sad(frank).\nhappy(dave) :- friend(dave,eve), parent(alice,carol).\nsad(bob) :- big(apple), sibling(alice,carol).\nhungry(george) :- small(ball).\nenemy(carol,george) :- small(apple), dislikes(alice,phone), sad(eve).\nsmall(ball) :- big(apple), hungry(bob), hot.\nsibling(alice,alice) :- tall(george), happy(carol), friend(alice,frank).\nsmall(pencil) :- small(pencil), likes(bob,apple), dislikes(frank,car).\nwet(phone) :- dislikes(alice,car), sad(carol), wet(ball).\nbig(car) :- cold, friend(eve,bob).\nhappy(george) :- tall(george).\nbig(apple) :- happy(george), parent(frank,alice).\nsad(frank) :- small(pencil), sibling(frank,carol), hot.\nsunny :- wet(car), cold.\nhappy(carol) :- wet(ball), small(pencil).\nsmall(phone) :- big(phone), enemy(eve,eve), big(pencil).\nenemy(carol,george).\nsad(dave).",
    "natural language": "You are given the following rules:\nIf alice is sad, then eve is hungry.\nIf eve is hungry, then frank is hungry.\nIf frank is hungry, then george is hungry.\nIf george is hungry, then book is big.\nIf book is big, then george dislikes apple.\nIf dave is hungry and george is a friend of bob and carol is a parent of carol, then eve likes phone.\nIf ball is wet and it is cold and dave is a friend of bob, then dave likes phone.\nIf alice likes phone and bob is an enemy of alice and alice is an enemy of carol, then eve is a friend of eve.\nIf it is hot and dave is an enemy of george and bob is tall, then carol likes car.\nIf it is hot, then george is a friend of bob.\nIf it is cold and alice is a parent of carol and apple is big, then eve likes book.\nIf phone is small and frank is hungry and it is hot, then bob is an enemy of bob.\nIf eve owns phone and pencil is small, then carol is tall.\nIf carol is sad, then dave is a sibling of dave.\nIf frank is happy and carol is an enemy of carol and dave is sad, then george is tall.\nIf frank is hungry, then book is wet.\nIf carol is a sibling of george, then bob is tall.\nIf george is a parent of eve and car is small, then frank is hungry.\nIf pencil is small and frank is hungry and frank is sad, then bob is hungry.\nIf dave is a friend of eve and alice is a parent of carol, then dave is happy.\nIf apple is big and alice is a sibling of carol, then bob is sad.\nIf ball is small, then george is hungry.\nIf apple is small and alice dislikes phone and eve is sad, then carol is an enemy of george.\nIf apple is big and bob is hungry and it is hot, then ball is small.\nIf george is tall and carol is happy and alice is a friend of frank, then alice is a sibling of alice.\nIf pencil is small and bob likes apple and frank dislikes car, then pencil is small.\nIf alice dislikes car and carol is sad and ball is wet, then phone is wet.\nIf it is cold and eve is a friend of bob, then car is big.\nIf george is tall, then george is happy.\nIf george is happy and frank is a parent of alice, then apple is big.\nIf pencil is small and frank is a sibling of carol and it is hot, then frank is sad.\nIf car is wet and it is cold, then it is sunny.\nIf ball is wet and pencil is small, then carol is happy.\nIf phone is big and eve is an enemy of eve and pencil is big, then phone is small.\n\nAnd the following facts:\ncarol is an enemy of george.\ndave is sad.\n\nQUESTION:\nCould carol is an enemy of george explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "enemy(carol,george)"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nsmall(pencil).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\npencil is small.\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nIs alice is a friend of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nsmall(pencil).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\npencil is small.\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nIs frank is a parent of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,book).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nsmall(pencil).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\npencil is small.\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nIs bob likes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,eve).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nsmall(pencil).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\npencil is small.\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nIs bob is a friend of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(carol).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nsmall(pencil).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following information:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\npencil is small.\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nIs carol is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(pencil).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following rules:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nCould pencil is small explain george is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "explanation": "small(pencil)"
    }
  },
  {
    "q": "small(pencil).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following rules:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nCould pencil is small explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "small(pencil)"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following rules:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nCould alice is a friend of carol explain george is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "hungry(george)",
      "non_explanation": "friend(alice,carol)"
    }
  },
  {
    "q": "parent(frank,alice).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following rules:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nCould frank is a parent of alice explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "parent(frank,alice)"
    }
  },
  {
    "q": "friend(alice,carol).",
    "c": "big(apple) :- small(pencil).\nwet(book) :- big(apple).\nhappy(dave) :- wet(book).\nsad(frank) :- happy(dave).\nhot :- sad(frank).\nsmall(pencil) :- hot.\nhungry(george) :- small(pencil).\nhungry(eve) :- hungry(george).\nwet(book) :- hungry(eve).\nsunny :- wet(book).\nbig(book) :- big(book), owns(eve,book), big(car).\nbig(pencil) :- small(ball).\nsmall(apple) :- sunny.\nsmall(book) :- big(book), happy(bob).\nsad(carol) :- sad(alice), sad(eve), friend(frank,bob).\ncold :- tall(dave), dislikes(carol,phone), hungry(carol).\ncold :- happy(george), happy(dave), hungry(dave).\nsunny :- tall(alice), sunny, sunny.\nsunny :- wet(phone), hungry(carol), dislikes(carol,ball).\nsunny :- cold, dislikes(eve,book).\nsad(alice) :- dislikes(alice,ball), wet(book), sad(frank).\ndislikes(carol,ball) :- cold, dislikes(bob,phone), sad(frank).\nparent(eve,frank) :- sibling(dave,dave), cold, parent(eve,alice).\nsunny :- tall(frank).\ndislikes(alice,pencil) :- dislikes(dave,car), small(phone).\nparent(george,frank) :- parent(george,bob).\ndislikes(carol,car) :- parent(frank,frank), dislikes(eve,pencil), dislikes(frank,phone).\nparent(carol,frank) :- cold, owns(alice,car).\ndislikes(george,ball) :- friend(dave,george), wet(car).\nparent(frank,frank) :- hot, tall(carol).\nparent(bob,bob) :- owns(bob,ball), parent(frank,bob), parent(eve,alice).\nsunny :- parent(eve,george), sibling(george,carol), likes(carol,apple).\ntall(alice) :- tall(george), tall(dave), enemy(frank,dave).\ntall(george) :- big(ball), enemy(eve,frank).\nfriend(alice,carol).\nparent(frank,alice).",
    "natural language": "You are given the following rules:\nIf pencil is small, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then dave is happy.\nIf dave is happy, then frank is sad.\nIf frank is sad, then it is hot.\nIf it is hot, then pencil is small.\nIf pencil is small, then george is hungry.\nIf george is hungry, then eve is hungry.\nIf eve is hungry, then book is wet.\nIf book is wet, then it is sunny.\nIf book is big and eve owns book and car is big, then book is big.\nIf ball is small, then pencil is big.\nIf it is sunny, then apple is small.\nIf book is big and bob is happy, then book is small.\nIf alice is sad and eve is sad and frank is a friend of bob, then carol is sad.\nIf dave is tall and carol dislikes phone and carol is hungry, then it is cold.\nIf george is happy and dave is happy and dave is hungry, then it is cold.\nIf alice is tall and it is sunny and it is sunny, then it is sunny.\nIf phone is wet and carol is hungry and carol dislikes ball, then it is sunny.\nIf it is cold and eve dislikes book, then it is sunny.\nIf alice dislikes ball and book is wet and frank is sad, then alice is sad.\nIf it is cold and bob dislikes phone and frank is sad, then carol dislikes ball.\nIf dave is a sibling of dave and it is cold and eve is a parent of alice, then eve is a parent of frank.\nIf frank is tall, then it is sunny.\nIf dave dislikes car and phone is small, then alice dislikes pencil.\nIf george is a parent of bob, then george is a parent of frank.\nIf frank is a parent of frank and eve dislikes pencil and frank dislikes phone, then carol dislikes car.\nIf it is cold and alice owns car, then carol is a parent of frank.\nIf dave is a friend of george and car is wet, then george dislikes ball.\nIf it is hot and carol is tall, then frank is a parent of frank.\nIf bob owns ball and frank is a parent of bob and eve is a parent of alice, then bob is a parent of bob.\nIf eve is a parent of george and george is a sibling of carol and carol likes apple, then it is sunny.\nIf george is tall and dave is tall and frank is an enemy of dave, then alice is tall.\nIf ball is big and eve is an enemy of frank, then george is tall.\n\nAnd the following facts:\nalice is a friend of carol.\nfrank is a parent of alice.\n\nQUESTION:\nCould alice is a friend of carol explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "friend(alice,carol)"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\nwet(ball).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nball is wet.\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs frank is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,bob).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\nwet(ball).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nball is wet.\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs bob is a friend of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,alice).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\nwet(ball).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nball is wet.\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs eve is a parent of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,car).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\nwet(ball).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nball is wet.\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs george likes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,dave).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\nwet(ball).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following information:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nball is wet.\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nIs alice is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould ball is wet explain frank owns book?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(frank,book)",
      "explanation": "wet(ball)"
    }
  },
  {
    "q": "wet(ball).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould ball is wet explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "wet(ball)"
    }
  },
  {
    "q": "dislikes(frank,apple).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould frank dislikes apple explain frank owns book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(frank,book)",
      "non_explanation": "dislikes(frank,apple)"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould carol is a sibling of george explain frank owns book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(frank,book)",
      "non_explanation": "sibling(carol,george)"
    }
  },
  {
    "q": "dislikes(frank,apple).",
    "c": "sunny :- wet(ball).\nhot :- sunny.\nfriend(bob,bob) :- hot.\nowns(frank,book) :- friend(bob,bob).\nlikes(carol,ball) :- owns(frank,book).\ntall(bob) :- likes(carol,ball).\ndislikes(dave,phone) :- tall(bob).\nparent(frank,dave) :- dislikes(dave,phone).\nwet(book) :- parent(frank,dave).\nowns(frank,book) :- wet(book).\ndislikes(frank,ball) :- big(pencil), tall(eve).\ndislikes(bob,book) :- happy(bob).\ncold :- dislikes(bob,pencil), sibling(george,alice), tall(carol).\nparent(eve,carol) :- sibling(carol,dave).\nwet(phone) :- dislikes(alice,ball), sad(frank).\nwet(phone) :- enemy(alice,dave), enemy(bob,carol), sunny.\ncold :- small(apple), friend(dave,frank).\nwet(apple) :- likes(george,book), enemy(frank,dave).\ntall(bob) :- happy(carol), friend(eve,carol), parent(eve,bob).\ntall(alice) :- tall(dave), tall(eve), sunny.\nwet(phone) :- small(ball), sad(george), enemy(dave,george).\nparent(carol,alice) :- friend(alice,eve), likes(george,apple), tall(bob).\nsunny :- big(ball), owns(frank,phone).\nsmall(car) :- friend(frank,eve), wet(car), sibling(carol,george).\nwet(book) :- friend(frank,frank), small(phone).\nbig(apple) :- friend(dave,eve).\nowns(dave,phone) :- tall(eve), friend(dave,george).\nsunny :- dislikes(carol,apple), big(ball).\nbig(apple) :- likes(alice,apple), big(ball).\nowns(alice,phone) :- big(pencil), cold, cold.\nsad(eve) :- happy(bob), dislikes(dave,phone), parent(george,carol).\ntall(dave) :- parent(frank,carol), tall(carol), happy(alice).\nsad(george) :- happy(carol), parent(carol,frank), sunny.\nsmall(apple) :- sibling(george,eve).\ndislikes(frank,apple).\nsibling(carol,george).",
    "natural language": "You are given the following rules:\nIf ball is wet, then it is sunny.\nIf it is sunny, then it is hot.\nIf it is hot, then bob is a friend of bob.\nIf bob is a friend of bob, then frank owns book.\nIf frank owns book, then carol likes ball.\nIf carol likes ball, then bob is tall.\nIf bob is tall, then dave dislikes phone.\nIf dave dislikes phone, then frank is a parent of dave.\nIf frank is a parent of dave, then book is wet.\nIf book is wet, then frank owns book.\nIf pencil is big and eve is tall, then frank dislikes ball.\nIf bob is happy, then bob dislikes book.\nIf bob dislikes pencil and george is a sibling of alice and carol is tall, then it is cold.\nIf carol is a sibling of dave, then eve is a parent of carol.\nIf alice dislikes ball and frank is sad, then phone is wet.\nIf alice is an enemy of dave and bob is an enemy of carol and it is sunny, then phone is wet.\nIf apple is small and dave is a friend of frank, then it is cold.\nIf george likes book and frank is an enemy of dave, then apple is wet.\nIf carol is happy and eve is a friend of carol and eve is a parent of bob, then bob is tall.\nIf dave is tall and eve is tall and it is sunny, then alice is tall.\nIf ball is small and george is sad and dave is an enemy of george, then phone is wet.\nIf alice is a friend of eve and george likes apple and bob is tall, then carol is a parent of alice.\nIf ball is big and frank owns phone, then it is sunny.\nIf frank is a friend of eve and car is wet and carol is a sibling of george, then car is small.\nIf frank is a friend of frank and phone is small, then book is wet.\nIf dave is a friend of eve, then apple is big.\nIf eve is tall and dave is a friend of george, then dave owns phone.\nIf carol dislikes apple and ball is big, then it is sunny.\nIf alice likes apple and ball is big, then apple is big.\nIf pencil is big and it is cold and it is cold, then alice owns phone.\nIf bob is happy and dave dislikes phone and george is a parent of carol, then eve is sad.\nIf frank is a parent of carol and carol is tall and alice is happy, then dave is tall.\nIf carol is happy and carol is a parent of frank and it is sunny, then george is sad.\nIf george is a sibling of eve, then apple is small.\n\nAnd the following facts:\nfrank dislikes apple.\ncarol is a sibling of george.\n\nQUESTION:\nCould frank dislikes apple explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "dislikes(frank,apple)"
    }
  },
  {
    "q": "big(pencil).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nhungry(george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\ngeorge is hungry.\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nIs pencil is big true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,eve).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nhungry(george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\ngeorge is hungry.\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nIs eve is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,pencil).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nhungry(george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\ngeorge is hungry.\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nIs carol dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,carol).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nhungry(george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\ngeorge is hungry.\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nIs alice is a parent of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,ball).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nhungry(george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following information:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\ngeorge is hungry.\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nIs george likes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(george).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nCould george is hungry explain bob is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "hungry(bob)",
      "explanation": "hungry(george)"
    }
  },
  {
    "q": "hungry(george).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nCould george is hungry explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "explanation": "hungry(george)"
    }
  },
  {
    "q": "enemy(frank,bob).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nCould frank is an enemy of bob explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "non_explanation": "enemy(frank,bob)"
    }
  },
  {
    "q": "enemy(frank,bob).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nCould frank is an enemy of bob explain bob is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "hungry(bob)",
      "non_explanation": "enemy(frank,bob)"
    }
  },
  {
    "q": "owns(bob,ball).",
    "c": "small(phone) :- hungry(george).\ndislikes(frank,car) :- small(phone).\ncold :- dislikes(frank,car).\nenemy(bob,frank) :- cold.\ntall(george) :- enemy(bob,frank).\ncold :- tall(george).\nsmall(phone) :- cold.\nlikes(dave,ball) :- small(phone).\nenemy(eve,eve) :- likes(dave,ball).\nsmall(phone) :- enemy(eve,eve).\nhappy(alice) :- small(phone).\nhungry(bob) :- happy(alice).\nenemy(alice,eve) :- hungry(bob).\nbig(pencil) :- enemy(alice,eve).\nsmall(car) :- big(pencil).\nsad(dave) :- small(car).\nowns(alice,car) :- sad(dave).\nsmall(pencil) :- owns(alice,car).\nparent(carol,george) :- small(pencil).\nhappy(alice) :- parent(carol,george).\nowns(bob,pencil) :- sibling(alice,dave), likes(frank,ball).\nowns(frank,car) :- likes(george,pencil), friend(dave,alice).\nlikes(bob,car) :- likes(bob,apple), likes(dave,book), likes(carol,pencil).\nlikes(dave,pencil) :- enemy(alice,carol), cold, hot.\nwet(pencil) :- small(car), owns(alice,ball).\nhot :- hot.\ntall(dave) :- hot, tall(frank).\nenemy(carol,george) :- likes(eve,apple), small(ball).\nenemy(george,eve) :- cold.\nsad(eve) :- friend(frank,george).\nhungry(carol) :- hungry(dave).\nhot :- parent(frank,frank), happy(dave).\nowns(bob,book) :- dislikes(dave,car), enemy(george,george), hot.\nsad(bob) :- sibling(george,george).\nenemy(frank,bob).\nowns(bob,ball).",
    "natural language": "You are given the following rules:\nIf george is hungry, then phone is small.\nIf phone is small, then frank dislikes car.\nIf frank dislikes car, then it is cold.\nIf it is cold, then bob is an enemy of frank.\nIf bob is an enemy of frank, then george is tall.\nIf george is tall, then it is cold.\nIf it is cold, then phone is small.\nIf phone is small, then dave likes ball.\nIf dave likes ball, then eve is an enemy of eve.\nIf eve is an enemy of eve, then phone is small.\nIf phone is small, then alice is happy.\nIf alice is happy, then bob is hungry.\nIf bob is hungry, then alice is an enemy of eve.\nIf alice is an enemy of eve, then pencil is big.\nIf pencil is big, then car is small.\nIf car is small, then dave is sad.\nIf dave is sad, then alice owns car.\nIf alice owns car, then pencil is small.\nIf pencil is small, then carol is a parent of george.\nIf carol is a parent of george, then alice is happy.\nIf alice is a sibling of dave and frank likes ball, then bob owns pencil.\nIf george likes pencil and dave is a friend of alice, then frank owns car.\nIf bob likes apple and dave likes book and carol likes pencil, then bob likes car.\nIf alice is an enemy of carol and it is cold and it is hot, then dave likes pencil.\nIf car is small and alice owns ball, then pencil is wet.\nIf it is hot, then it is hot.\nIf it is hot and frank is tall, then dave is tall.\nIf eve likes apple and ball is small, then carol is an enemy of george.\nIf it is cold, then george is an enemy of eve.\nIf frank is a friend of george, then eve is sad.\nIf dave is hungry, then carol is hungry.\nIf frank is a parent of frank and dave is happy, then it is hot.\nIf dave dislikes car and george is an enemy of george and it is hot, then bob owns book.\nIf george is a sibling of george, then bob is sad.\n\nAnd the following facts:\nfrank is an enemy of bob.\nbob owns ball.\n\nQUESTION:\nCould bob owns ball explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "non_explanation": "owns(bob,ball)"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\nwet(ball).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nball is wet.\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nIs dave likes apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,frank).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\nwet(ball).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nball is wet.\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nIs frank is a parent of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,pencil).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\nwet(ball).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nball is wet.\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nIs bob likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,apple).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\nwet(ball).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nball is wet.\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nIs bob dislikes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,pencil).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\nwet(ball).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nball is wet.\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nIs frank dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 3,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nCould ball is wet explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "wet(ball)"
    }
  },
  {
    "q": "wet(ball).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nCould ball is wet explain eve owns apple?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(eve,apple)",
      "explanation": "wet(ball)"
    }
  },
  {
    "q": "tall(frank).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nCould frank is tall explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "tall(frank)"
    }
  },
  {
    "q": "tall(frank).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nCould frank is tall explain eve owns apple?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(eve,apple)",
      "non_explanation": "tall(frank)"
    }
  },
  {
    "q": "owns(george,ball).",
    "c": "likes(dave,apple) :- wet(ball).\nhappy(eve) :- likes(dave,apple).\nparent(frank,frank) :- happy(eve).\nenemy(eve,frank) :- parent(frank,frank).\ncold :- enemy(eve,frank).\ndislikes(carol,ball) :- cold.\ndislikes(carol,phone) :- dislikes(carol,ball).\nowns(bob,car) :- dislikes(carol,phone).\nhungry(alice) :- owns(bob,car).\nowns(eve,apple) :- hungry(alice).\nsmall(book) :- owns(eve,apple).\nhot :- small(book).\nbig(book) :- hot.\ncold :- big(book).\nsibling(bob,frank) :- cold.\nhappy(dave) :- sibling(bob,frank).\nlikes(george,apple) :- happy(dave).\nhot :- likes(george,apple).\nparent(carol,eve) :- hot.\nhappy(george) :- parent(carol,eve).\nsad(dave) :- happy(bob).\ntall(alice) :- small(pencil).\ntall(frank) :- big(book), happy(bob), owns(alice,book).\nsad(frank) :- sibling(carol,alice), happy(george), small(phone).\nhot :- sunny, small(book), hot.\ntall(frank) :- likes(bob,car).\nhot :- friend(eve,eve), parent(carol,bob).\ndislikes(alice,car) :- happy(george).\ndislikes(frank,ball) :- wet(car), dislikes(eve,pencil).\nlikes(carol,phone) :- big(book), tall(frank), owns(eve,car).\nhappy(frank) :- enemy(dave,alice), friend(george,eve).\ndislikes(dave,car) :- tall(eve), sunny.\nlikes(alice,apple) :- big(car).\nsibling(alice,frank) :- tall(frank).\ntall(frank).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf ball is wet, then dave likes apple.\nIf dave likes apple, then eve is happy.\nIf eve is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then eve is an enemy of frank.\nIf eve is an enemy of frank, then it is cold.\nIf it is cold, then carol dislikes ball.\nIf carol dislikes ball, then carol dislikes phone.\nIf carol dislikes phone, then bob owns car.\nIf bob owns car, then alice is hungry.\nIf alice is hungry, then eve owns apple.\nIf eve owns apple, then book is small.\nIf book is small, then it is hot.\nIf it is hot, then book is big.\nIf book is big, then it is cold.\nIf it is cold, then bob is a sibling of frank.\nIf bob is a sibling of frank, then dave is happy.\nIf dave is happy, then george likes apple.\nIf george likes apple, then it is hot.\nIf it is hot, then carol is a parent of eve.\nIf carol is a parent of eve, then george is happy.\nIf bob is happy, then dave is sad.\nIf pencil is small, then alice is tall.\nIf book is big and bob is happy and alice owns book, then frank is tall.\nIf carol is a sibling of alice and george is happy and phone is small, then frank is sad.\nIf it is sunny and book is small and it is hot, then it is hot.\nIf bob likes car, then frank is tall.\nIf eve is a friend of eve and carol is a parent of bob, then it is hot.\nIf george is happy, then alice dislikes car.\nIf car is wet and eve dislikes pencil, then frank dislikes ball.\nIf book is big and frank is tall and eve owns car, then carol likes phone.\nIf dave is an enemy of alice and george is a friend of eve, then frank is happy.\nIf eve is tall and it is sunny, then dave dislikes car.\nIf car is big, then alice likes apple.\nIf frank is tall, then alice is a sibling of frank.\n\nAnd the following facts:\nfrank is tall.\ngeorge owns ball.\n\nQUESTION:\nCould george owns ball explain eve owns apple?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "owns(eve,apple)",
      "non_explanation": "owns(george,ball)"
    }
  },
  {
    "q": "big(phone).",
    "c": "hungry(carol) :- big(phone).\nsmall(apple) :- hungry(carol).\ndislikes(frank,book) :- small(apple).\ncold :- dislikes(frank,book).\nsibling(eve,dave) :- cold.\nwet(car) :- sibling(eve,dave).\nbig(pencil) :- wet(car).\nenemy(george,frank) :- big(pencil).\nhot :- enemy(george,frank).\nsmall(ball) :- hot.\nsibling(alice,george) :- small(ball).\nbig(phone) :- sibling(alice,george).\ncold :- big(phone).\ncold :- cold.\nsmall(apple) :- cold.\nsunny :- small(apple).\nenemy(george,george) :- sunny.\nbig(ball) :- enemy(george,george).\nhungry(dave) :- big(ball).\nfriend(eve,bob) :- hungry(dave).\nlikes(bob,phone) :- friend(eve,bob).\nparent(alice,frank) :- likes(bob,phone).\ncold :- parent(alice,frank).\nsibling(george,frank) :- cold.\nowns(carol,apple) :- sibling(george,frank).\nhappy(frank) :- owns(carol,apple).\ncold :- happy(frank).\nsad(eve) :- cold.\nparent(frank,eve) :- sad(eve).\ndislikes(alice,phone) :- parent(frank,eve).\ndislikes(eve,ball) :- cold, dislikes(eve,apple), likes(frank,pencil).\ndislikes(eve,phone) :- dislikes(alice,ball), happy(george).\nowns(eve,book) :- owns(bob,car).\nowns(frank,apple) :- small(apple), owns(eve,car), owns(george,apple).\nsibling(bob,eve).\nenemy(dave,bob).",
    "natural language": "You are given the following rules:\nIf phone is big, then carol is hungry.\nIf carol is hungry, then apple is small.\nIf apple is small, then frank dislikes book.\nIf frank dislikes book, then it is cold.\nIf it is cold, then eve is a sibling of dave.\nIf eve is a sibling of dave, then car is wet.\nIf car is wet, then pencil is big.\nIf pencil is big, then george is an enemy of frank.\nIf george is an enemy of frank, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then alice is a sibling of george.\nIf alice is a sibling of george, then phone is big.\nIf phone is big, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then apple is small.\nIf apple is small, then it is sunny.\nIf it is sunny, then george is an enemy of george.\nIf george is an enemy of george, then ball is big.\nIf ball is big, then dave is hungry.\nIf dave is hungry, then eve is a friend of bob.\nIf eve is a friend of bob, then bob likes phone.\nIf bob likes phone, then alice is a parent of frank.\nIf alice is a parent of frank, then it is cold.\nIf it is cold, then george is a sibling of frank.\nIf george is a sibling of frank, then carol owns apple.\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then eve is sad.\nIf eve is sad, then frank is a parent of eve.\nIf frank is a parent of eve, then alice dislikes phone.\nIf it is cold and eve dislikes apple and frank likes pencil, then eve dislikes ball.\nIf alice dislikes ball and george is happy, then eve dislikes phone.\nIf bob owns car, then eve owns book.\nIf apple is small and eve owns car and george owns apple, then frank owns apple.\n\nAnd the following facts:\nbob is a sibling of eve.\ndave is an enemy of bob.\n\nQUESTION:\nCould phone is big explain alice is a sibling of george?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(alice,george)",
      "explanation": "big(phone)"
    }
  },
  {
    "q": "big(phone).",
    "c": "hungry(carol) :- big(phone).\nsmall(apple) :- hungry(carol).\ndislikes(frank,book) :- small(apple).\ncold :- dislikes(frank,book).\nsibling(eve,dave) :- cold.\nwet(car) :- sibling(eve,dave).\nbig(pencil) :- wet(car).\nenemy(george,frank) :- big(pencil).\nhot :- enemy(george,frank).\nsmall(ball) :- hot.\nsibling(alice,george) :- small(ball).\nbig(phone) :- sibling(alice,george).\ncold :- big(phone).\ncold :- cold.\nsmall(apple) :- cold.\nsunny :- small(apple).\nenemy(george,george) :- sunny.\nbig(ball) :- enemy(george,george).\nhungry(dave) :- big(ball).\nfriend(eve,bob) :- hungry(dave).\nlikes(bob,phone) :- friend(eve,bob).\nparent(alice,frank) :- likes(bob,phone).\ncold :- parent(alice,frank).\nsibling(george,frank) :- cold.\nowns(carol,apple) :- sibling(george,frank).\nhappy(frank) :- owns(carol,apple).\ncold :- happy(frank).\nsad(eve) :- cold.\nparent(frank,eve) :- sad(eve).\ndislikes(alice,phone) :- parent(frank,eve).\ndislikes(eve,ball) :- cold, dislikes(eve,apple), likes(frank,pencil).\ndislikes(eve,phone) :- dislikes(alice,ball), happy(george).\nowns(eve,book) :- owns(bob,car).\nowns(frank,apple) :- small(apple), owns(eve,car), owns(george,apple).\nsibling(bob,eve).\nenemy(dave,bob).",
    "natural language": "You are given the following rules:\nIf phone is big, then carol is hungry.\nIf carol is hungry, then apple is small.\nIf apple is small, then frank dislikes book.\nIf frank dislikes book, then it is cold.\nIf it is cold, then eve is a sibling of dave.\nIf eve is a sibling of dave, then car is wet.\nIf car is wet, then pencil is big.\nIf pencil is big, then george is an enemy of frank.\nIf george is an enemy of frank, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then alice is a sibling of george.\nIf alice is a sibling of george, then phone is big.\nIf phone is big, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then apple is small.\nIf apple is small, then it is sunny.\nIf it is sunny, then george is an enemy of george.\nIf george is an enemy of george, then ball is big.\nIf ball is big, then dave is hungry.\nIf dave is hungry, then eve is a friend of bob.\nIf eve is a friend of bob, then bob likes phone.\nIf bob likes phone, then alice is a parent of frank.\nIf alice is a parent of frank, then it is cold.\nIf it is cold, then george is a sibling of frank.\nIf george is a sibling of frank, then carol owns apple.\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then eve is sad.\nIf eve is sad, then frank is a parent of eve.\nIf frank is a parent of eve, then alice dislikes phone.\nIf it is cold and eve dislikes apple and frank likes pencil, then eve dislikes ball.\nIf alice dislikes ball and george is happy, then eve dislikes phone.\nIf bob owns car, then eve owns book.\nIf apple is small and eve owns car and george owns apple, then frank owns apple.\n\nAnd the following facts:\nbob is a sibling of eve.\ndave is an enemy of bob.\n\nQUESTION:\nCould phone is big explain frank is a parent of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "parent(frank,eve)",
      "explanation": "big(phone)"
    }
  },
  {
    "q": "enemy(dave,bob).",
    "c": "hungry(carol) :- big(phone).\nsmall(apple) :- hungry(carol).\ndislikes(frank,book) :- small(apple).\ncold :- dislikes(frank,book).\nsibling(eve,dave) :- cold.\nwet(car) :- sibling(eve,dave).\nbig(pencil) :- wet(car).\nenemy(george,frank) :- big(pencil).\nhot :- enemy(george,frank).\nsmall(ball) :- hot.\nsibling(alice,george) :- small(ball).\nbig(phone) :- sibling(alice,george).\ncold :- big(phone).\ncold :- cold.\nsmall(apple) :- cold.\nsunny :- small(apple).\nenemy(george,george) :- sunny.\nbig(ball) :- enemy(george,george).\nhungry(dave) :- big(ball).\nfriend(eve,bob) :- hungry(dave).\nlikes(bob,phone) :- friend(eve,bob).\nparent(alice,frank) :- likes(bob,phone).\ncold :- parent(alice,frank).\nsibling(george,frank) :- cold.\nowns(carol,apple) :- sibling(george,frank).\nhappy(frank) :- owns(carol,apple).\ncold :- happy(frank).\nsad(eve) :- cold.\nparent(frank,eve) :- sad(eve).\ndislikes(alice,phone) :- parent(frank,eve).\ndislikes(eve,ball) :- cold, dislikes(eve,apple), likes(frank,pencil).\ndislikes(eve,phone) :- dislikes(alice,ball), happy(george).\nowns(eve,book) :- owns(bob,car).\nowns(frank,apple) :- small(apple), owns(eve,car), owns(george,apple).\nsibling(bob,eve).\nenemy(dave,bob).",
    "natural language": "You are given the following rules:\nIf phone is big, then carol is hungry.\nIf carol is hungry, then apple is small.\nIf apple is small, then frank dislikes book.\nIf frank dislikes book, then it is cold.\nIf it is cold, then eve is a sibling of dave.\nIf eve is a sibling of dave, then car is wet.\nIf car is wet, then pencil is big.\nIf pencil is big, then george is an enemy of frank.\nIf george is an enemy of frank, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then alice is a sibling of george.\nIf alice is a sibling of george, then phone is big.\nIf phone is big, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then apple is small.\nIf apple is small, then it is sunny.\nIf it is sunny, then george is an enemy of george.\nIf george is an enemy of george, then ball is big.\nIf ball is big, then dave is hungry.\nIf dave is hungry, then eve is a friend of bob.\nIf eve is a friend of bob, then bob likes phone.\nIf bob likes phone, then alice is a parent of frank.\nIf alice is a parent of frank, then it is cold.\nIf it is cold, then george is a sibling of frank.\nIf george is a sibling of frank, then carol owns apple.\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then eve is sad.\nIf eve is sad, then frank is a parent of eve.\nIf frank is a parent of eve, then alice dislikes phone.\nIf it is cold and eve dislikes apple and frank likes pencil, then eve dislikes ball.\nIf alice dislikes ball and george is happy, then eve dislikes phone.\nIf bob owns car, then eve owns book.\nIf apple is small and eve owns car and george owns apple, then frank owns apple.\n\nAnd the following facts:\nbob is a sibling of eve.\ndave is an enemy of bob.\n\nQUESTION:\nCould dave is an enemy of bob explain frank is a parent of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "parent(frank,eve)",
      "non_explanation": "enemy(dave,bob)"
    }
  },
  {
    "q": "sibling(bob,eve).",
    "c": "hungry(carol) :- big(phone).\nsmall(apple) :- hungry(carol).\ndislikes(frank,book) :- small(apple).\ncold :- dislikes(frank,book).\nsibling(eve,dave) :- cold.\nwet(car) :- sibling(eve,dave).\nbig(pencil) :- wet(car).\nenemy(george,frank) :- big(pencil).\nhot :- enemy(george,frank).\nsmall(ball) :- hot.\nsibling(alice,george) :- small(ball).\nbig(phone) :- sibling(alice,george).\ncold :- big(phone).\ncold :- cold.\nsmall(apple) :- cold.\nsunny :- small(apple).\nenemy(george,george) :- sunny.\nbig(ball) :- enemy(george,george).\nhungry(dave) :- big(ball).\nfriend(eve,bob) :- hungry(dave).\nlikes(bob,phone) :- friend(eve,bob).\nparent(alice,frank) :- likes(bob,phone).\ncold :- parent(alice,frank).\nsibling(george,frank) :- cold.\nowns(carol,apple) :- sibling(george,frank).\nhappy(frank) :- owns(carol,apple).\ncold :- happy(frank).\nsad(eve) :- cold.\nparent(frank,eve) :- sad(eve).\ndislikes(alice,phone) :- parent(frank,eve).\ndislikes(eve,ball) :- cold, dislikes(eve,apple), likes(frank,pencil).\ndislikes(eve,phone) :- dislikes(alice,ball), happy(george).\nowns(eve,book) :- owns(bob,car).\nowns(frank,apple) :- small(apple), owns(eve,car), owns(george,apple).\nsibling(bob,eve).\nenemy(dave,bob).",
    "natural language": "You are given the following rules:\nIf phone is big, then carol is hungry.\nIf carol is hungry, then apple is small.\nIf apple is small, then frank dislikes book.\nIf frank dislikes book, then it is cold.\nIf it is cold, then eve is a sibling of dave.\nIf eve is a sibling of dave, then car is wet.\nIf car is wet, then pencil is big.\nIf pencil is big, then george is an enemy of frank.\nIf george is an enemy of frank, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then alice is a sibling of george.\nIf alice is a sibling of george, then phone is big.\nIf phone is big, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then apple is small.\nIf apple is small, then it is sunny.\nIf it is sunny, then george is an enemy of george.\nIf george is an enemy of george, then ball is big.\nIf ball is big, then dave is hungry.\nIf dave is hungry, then eve is a friend of bob.\nIf eve is a friend of bob, then bob likes phone.\nIf bob likes phone, then alice is a parent of frank.\nIf alice is a parent of frank, then it is cold.\nIf it is cold, then george is a sibling of frank.\nIf george is a sibling of frank, then carol owns apple.\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then eve is sad.\nIf eve is sad, then frank is a parent of eve.\nIf frank is a parent of eve, then alice dislikes phone.\nIf it is cold and eve dislikes apple and frank likes pencil, then eve dislikes ball.\nIf alice dislikes ball and george is happy, then eve dislikes phone.\nIf bob owns car, then eve owns book.\nIf apple is small and eve owns car and george owns apple, then frank owns apple.\n\nAnd the following facts:\nbob is a sibling of eve.\ndave is an enemy of bob.\n\nQUESTION:\nCould bob is a sibling of eve explain frank is a parent of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "parent(frank,eve)",
      "non_explanation": "sibling(bob,eve)"
    }
  },
  {
    "q": "sibling(bob,eve).",
    "c": "hungry(carol) :- big(phone).\nsmall(apple) :- hungry(carol).\ndislikes(frank,book) :- small(apple).\ncold :- dislikes(frank,book).\nsibling(eve,dave) :- cold.\nwet(car) :- sibling(eve,dave).\nbig(pencil) :- wet(car).\nenemy(george,frank) :- big(pencil).\nhot :- enemy(george,frank).\nsmall(ball) :- hot.\nsibling(alice,george) :- small(ball).\nbig(phone) :- sibling(alice,george).\ncold :- big(phone).\ncold :- cold.\nsmall(apple) :- cold.\nsunny :- small(apple).\nenemy(george,george) :- sunny.\nbig(ball) :- enemy(george,george).\nhungry(dave) :- big(ball).\nfriend(eve,bob) :- hungry(dave).\nlikes(bob,phone) :- friend(eve,bob).\nparent(alice,frank) :- likes(bob,phone).\ncold :- parent(alice,frank).\nsibling(george,frank) :- cold.\nowns(carol,apple) :- sibling(george,frank).\nhappy(frank) :- owns(carol,apple).\ncold :- happy(frank).\nsad(eve) :- cold.\nparent(frank,eve) :- sad(eve).\ndislikes(alice,phone) :- parent(frank,eve).\ndislikes(eve,ball) :- cold, dislikes(eve,apple), likes(frank,pencil).\ndislikes(eve,phone) :- dislikes(alice,ball), happy(george).\nowns(eve,book) :- owns(bob,car).\nowns(frank,apple) :- small(apple), owns(eve,car), owns(george,apple).\nsibling(bob,eve).\nenemy(dave,bob).",
    "natural language": "You are given the following rules:\nIf phone is big, then carol is hungry.\nIf carol is hungry, then apple is small.\nIf apple is small, then frank dislikes book.\nIf frank dislikes book, then it is cold.\nIf it is cold, then eve is a sibling of dave.\nIf eve is a sibling of dave, then car is wet.\nIf car is wet, then pencil is big.\nIf pencil is big, then george is an enemy of frank.\nIf george is an enemy of frank, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then alice is a sibling of george.\nIf alice is a sibling of george, then phone is big.\nIf phone is big, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then apple is small.\nIf apple is small, then it is sunny.\nIf it is sunny, then george is an enemy of george.\nIf george is an enemy of george, then ball is big.\nIf ball is big, then dave is hungry.\nIf dave is hungry, then eve is a friend of bob.\nIf eve is a friend of bob, then bob likes phone.\nIf bob likes phone, then alice is a parent of frank.\nIf alice is a parent of frank, then it is cold.\nIf it is cold, then george is a sibling of frank.\nIf george is a sibling of frank, then carol owns apple.\nIf carol owns apple, then frank is happy.\nIf frank is happy, then it is cold.\nIf it is cold, then eve is sad.\nIf eve is sad, then frank is a parent of eve.\nIf frank is a parent of eve, then alice dislikes phone.\nIf it is cold and eve dislikes apple and frank likes pencil, then eve dislikes ball.\nIf alice dislikes ball and george is happy, then eve dislikes phone.\nIf bob owns car, then eve owns book.\nIf apple is small and eve owns car and george owns apple, then frank owns apple.\n\nAnd the following facts:\nbob is a sibling of eve.\ndave is an enemy of bob.\n\nQUESTION:\nCould bob is a sibling of eve explain alice is a sibling of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "sibling(alice,george)",
      "non_explanation": "sibling(bob,eve)"
    }
  },
  {
    "q": "cold.",
    "c": "friend(frank,carol) :- cold.\nlikes(frank,ball) :- friend(frank,carol).\ntall(bob) :- likes(frank,ball).\nhappy(carol) :- tall(bob).\nfriend(alice,dave) :- happy(carol).\nparent(george,carol) :- friend(alice,dave).\ncold :- parent(george,carol).\nhappy(carol) :- cold.\nenemy(alice,bob) :- happy(carol).\nbig(book) :- enemy(alice,bob).\nsibling(dave,frank) :- big(book).\nbig(book) :- sibling(dave,frank).\nlikes(alice,book) :- big(book).\nlikes(bob,pencil) :- likes(alice,book).\nsad(george) :- likes(bob,pencil).\nhot :- sad(george).\nsmall(ball) :- hot.\nhungry(eve) :- small(ball).\nhappy(frank) :- hungry(eve).\nhappy(carol) :- happy(frank).\ntall(frank) :- happy(carol).\nhungry(eve) :- tall(frank).\nparent(bob,eve) :- hungry(eve).\nsunny :- parent(bob,eve).\nsad(dave) :- sunny.\nfriend(dave,eve) :- sad(dave).\nwet(car) :- friend(dave,eve).\nlikes(carol,ball) :- wet(car).\nhappy(george) :- likes(carol,ball).\nhot :- happy(george).\nsad(frank) :- hungry(alice), friend(bob,bob), owns(dave,ball).\nbig(phone) :- happy(dave), hungry(carol), sunny.\ndislikes(george,apple) :- happy(eve), sad(carol).\ndislikes(alice,book) :- tall(alice), hot.\nlikes(eve,ball).\nfriend(alice,eve).",
    "natural language": "You are given the following rules:\nIf it is cold, then frank is a friend of carol.\nIf frank is a friend of carol, then frank likes ball.\nIf frank likes ball, then bob is tall.\nIf bob is tall, then carol is happy.\nIf carol is happy, then alice is a friend of dave.\nIf alice is a friend of dave, then george is a parent of carol.\nIf george is a parent of carol, then it is cold.\nIf it is cold, then carol is happy.\nIf carol is happy, then alice is an enemy of bob.\nIf alice is an enemy of bob, then book is big.\nIf book is big, then dave is a sibling of frank.\nIf dave is a sibling of frank, then book is big.\nIf book is big, then alice likes book.\nIf alice likes book, then bob likes pencil.\nIf bob likes pencil, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then eve is hungry.\nIf eve is hungry, then frank is happy.\nIf frank is happy, then carol is happy.\nIf carol is happy, then frank is tall.\nIf frank is tall, then eve is hungry.\nIf eve is hungry, then bob is a parent of eve.\nIf bob is a parent of eve, then it is sunny.\nIf it is sunny, then dave is sad.\nIf dave is sad, then dave is a friend of eve.\nIf dave is a friend of eve, then car is wet.\nIf car is wet, then carol likes ball.\nIf carol likes ball, then george is happy.\nIf george is happy, then it is hot.\nIf alice is hungry and bob is a friend of bob and dave owns ball, then frank is sad.\nIf dave is happy and carol is hungry and it is sunny, then phone is big.\nIf eve is happy and carol is sad, then george dislikes apple.\nIf alice is tall and it is hot, then alice dislikes book.\n\nAnd the following facts:\neve likes ball.\nalice is a friend of eve.\n\nQUESTION:\nCould it is cold explain bob likes pencil?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "likes(bob,pencil)",
      "explanation": "cold"
    }
  },
  {
    "q": "cold.",
    "c": "friend(frank,carol) :- cold.\nlikes(frank,ball) :- friend(frank,carol).\ntall(bob) :- likes(frank,ball).\nhappy(carol) :- tall(bob).\nfriend(alice,dave) :- happy(carol).\nparent(george,carol) :- friend(alice,dave).\ncold :- parent(george,carol).\nhappy(carol) :- cold.\nenemy(alice,bob) :- happy(carol).\nbig(book) :- enemy(alice,bob).\nsibling(dave,frank) :- big(book).\nbig(book) :- sibling(dave,frank).\nlikes(alice,book) :- big(book).\nlikes(bob,pencil) :- likes(alice,book).\nsad(george) :- likes(bob,pencil).\nhot :- sad(george).\nsmall(ball) :- hot.\nhungry(eve) :- small(ball).\nhappy(frank) :- hungry(eve).\nhappy(carol) :- happy(frank).\ntall(frank) :- happy(carol).\nhungry(eve) :- tall(frank).\nparent(bob,eve) :- hungry(eve).\nsunny :- parent(bob,eve).\nsad(dave) :- sunny.\nfriend(dave,eve) :- sad(dave).\nwet(car) :- friend(dave,eve).\nlikes(carol,ball) :- wet(car).\nhappy(george) :- likes(carol,ball).\nhot :- happy(george).\nsad(frank) :- hungry(alice), friend(bob,bob), owns(dave,ball).\nbig(phone) :- happy(dave), hungry(carol), sunny.\ndislikes(george,apple) :- happy(eve), sad(carol).\ndislikes(alice,book) :- tall(alice), hot.\nlikes(eve,ball).\nfriend(alice,eve).",
    "natural language": "You are given the following rules:\nIf it is cold, then frank is a friend of carol.\nIf frank is a friend of carol, then frank likes ball.\nIf frank likes ball, then bob is tall.\nIf bob is tall, then carol is happy.\nIf carol is happy, then alice is a friend of dave.\nIf alice is a friend of dave, then george is a parent of carol.\nIf george is a parent of carol, then it is cold.\nIf it is cold, then carol is happy.\nIf carol is happy, then alice is an enemy of bob.\nIf alice is an enemy of bob, then book is big.\nIf book is big, then dave is a sibling of frank.\nIf dave is a sibling of frank, then book is big.\nIf book is big, then alice likes book.\nIf alice likes book, then bob likes pencil.\nIf bob likes pencil, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then eve is hungry.\nIf eve is hungry, then frank is happy.\nIf frank is happy, then carol is happy.\nIf carol is happy, then frank is tall.\nIf frank is tall, then eve is hungry.\nIf eve is hungry, then bob is a parent of eve.\nIf bob is a parent of eve, then it is sunny.\nIf it is sunny, then dave is sad.\nIf dave is sad, then dave is a friend of eve.\nIf dave is a friend of eve, then car is wet.\nIf car is wet, then carol likes ball.\nIf carol likes ball, then george is happy.\nIf george is happy, then it is hot.\nIf alice is hungry and bob is a friend of bob and dave owns ball, then frank is sad.\nIf dave is happy and carol is hungry and it is sunny, then phone is big.\nIf eve is happy and carol is sad, then george dislikes apple.\nIf alice is tall and it is hot, then alice dislikes book.\n\nAnd the following facts:\neve likes ball.\nalice is a friend of eve.\n\nQUESTION:\nCould it is cold explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "cold"
    }
  },
  {
    "q": "likes(eve,ball).",
    "c": "friend(frank,carol) :- cold.\nlikes(frank,ball) :- friend(frank,carol).\ntall(bob) :- likes(frank,ball).\nhappy(carol) :- tall(bob).\nfriend(alice,dave) :- happy(carol).\nparent(george,carol) :- friend(alice,dave).\ncold :- parent(george,carol).\nhappy(carol) :- cold.\nenemy(alice,bob) :- happy(carol).\nbig(book) :- enemy(alice,bob).\nsibling(dave,frank) :- big(book).\nbig(book) :- sibling(dave,frank).\nlikes(alice,book) :- big(book).\nlikes(bob,pencil) :- likes(alice,book).\nsad(george) :- likes(bob,pencil).\nhot :- sad(george).\nsmall(ball) :- hot.\nhungry(eve) :- small(ball).\nhappy(frank) :- hungry(eve).\nhappy(carol) :- happy(frank).\ntall(frank) :- happy(carol).\nhungry(eve) :- tall(frank).\nparent(bob,eve) :- hungry(eve).\nsunny :- parent(bob,eve).\nsad(dave) :- sunny.\nfriend(dave,eve) :- sad(dave).\nwet(car) :- friend(dave,eve).\nlikes(carol,ball) :- wet(car).\nhappy(george) :- likes(carol,ball).\nhot :- happy(george).\nsad(frank) :- hungry(alice), friend(bob,bob), owns(dave,ball).\nbig(phone) :- happy(dave), hungry(carol), sunny.\ndislikes(george,apple) :- happy(eve), sad(carol).\ndislikes(alice,book) :- tall(alice), hot.\nlikes(eve,ball).\nfriend(alice,eve).",
    "natural language": "You are given the following rules:\nIf it is cold, then frank is a friend of carol.\nIf frank is a friend of carol, then frank likes ball.\nIf frank likes ball, then bob is tall.\nIf bob is tall, then carol is happy.\nIf carol is happy, then alice is a friend of dave.\nIf alice is a friend of dave, then george is a parent of carol.\nIf george is a parent of carol, then it is cold.\nIf it is cold, then carol is happy.\nIf carol is happy, then alice is an enemy of bob.\nIf alice is an enemy of bob, then book is big.\nIf book is big, then dave is a sibling of frank.\nIf dave is a sibling of frank, then book is big.\nIf book is big, then alice likes book.\nIf alice likes book, then bob likes pencil.\nIf bob likes pencil, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then eve is hungry.\nIf eve is hungry, then frank is happy.\nIf frank is happy, then carol is happy.\nIf carol is happy, then frank is tall.\nIf frank is tall, then eve is hungry.\nIf eve is hungry, then bob is a parent of eve.\nIf bob is a parent of eve, then it is sunny.\nIf it is sunny, then dave is sad.\nIf dave is sad, then dave is a friend of eve.\nIf dave is a friend of eve, then car is wet.\nIf car is wet, then carol likes ball.\nIf carol likes ball, then george is happy.\nIf george is happy, then it is hot.\nIf alice is hungry and bob is a friend of bob and dave owns ball, then frank is sad.\nIf dave is happy and carol is hungry and it is sunny, then phone is big.\nIf eve is happy and carol is sad, then george dislikes apple.\nIf alice is tall and it is hot, then alice dislikes book.\n\nAnd the following facts:\neve likes ball.\nalice is a friend of eve.\n\nQUESTION:\nCould eve likes ball explain bob likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "likes(bob,pencil)",
      "non_explanation": "likes(eve,ball)"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "friend(frank,carol) :- cold.\nlikes(frank,ball) :- friend(frank,carol).\ntall(bob) :- likes(frank,ball).\nhappy(carol) :- tall(bob).\nfriend(alice,dave) :- happy(carol).\nparent(george,carol) :- friend(alice,dave).\ncold :- parent(george,carol).\nhappy(carol) :- cold.\nenemy(alice,bob) :- happy(carol).\nbig(book) :- enemy(alice,bob).\nsibling(dave,frank) :- big(book).\nbig(book) :- sibling(dave,frank).\nlikes(alice,book) :- big(book).\nlikes(bob,pencil) :- likes(alice,book).\nsad(george) :- likes(bob,pencil).\nhot :- sad(george).\nsmall(ball) :- hot.\nhungry(eve) :- small(ball).\nhappy(frank) :- hungry(eve).\nhappy(carol) :- happy(frank).\ntall(frank) :- happy(carol).\nhungry(eve) :- tall(frank).\nparent(bob,eve) :- hungry(eve).\nsunny :- parent(bob,eve).\nsad(dave) :- sunny.\nfriend(dave,eve) :- sad(dave).\nwet(car) :- friend(dave,eve).\nlikes(carol,ball) :- wet(car).\nhappy(george) :- likes(carol,ball).\nhot :- happy(george).\nsad(frank) :- hungry(alice), friend(bob,bob), owns(dave,ball).\nbig(phone) :- happy(dave), hungry(carol), sunny.\ndislikes(george,apple) :- happy(eve), sad(carol).\ndislikes(alice,book) :- tall(alice), hot.\nlikes(eve,ball).\nfriend(alice,eve).",
    "natural language": "You are given the following rules:\nIf it is cold, then frank is a friend of carol.\nIf frank is a friend of carol, then frank likes ball.\nIf frank likes ball, then bob is tall.\nIf bob is tall, then carol is happy.\nIf carol is happy, then alice is a friend of dave.\nIf alice is a friend of dave, then george is a parent of carol.\nIf george is a parent of carol, then it is cold.\nIf it is cold, then carol is happy.\nIf carol is happy, then alice is an enemy of bob.\nIf alice is an enemy of bob, then book is big.\nIf book is big, then dave is a sibling of frank.\nIf dave is a sibling of frank, then book is big.\nIf book is big, then alice likes book.\nIf alice likes book, then bob likes pencil.\nIf bob likes pencil, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then eve is hungry.\nIf eve is hungry, then frank is happy.\nIf frank is happy, then carol is happy.\nIf carol is happy, then frank is tall.\nIf frank is tall, then eve is hungry.\nIf eve is hungry, then bob is a parent of eve.\nIf bob is a parent of eve, then it is sunny.\nIf it is sunny, then dave is sad.\nIf dave is sad, then dave is a friend of eve.\nIf dave is a friend of eve, then car is wet.\nIf car is wet, then carol likes ball.\nIf carol likes ball, then george is happy.\nIf george is happy, then it is hot.\nIf alice is hungry and bob is a friend of bob and dave owns ball, then frank is sad.\nIf dave is happy and carol is hungry and it is sunny, then phone is big.\nIf eve is happy and carol is sad, then george dislikes apple.\nIf alice is tall and it is hot, then alice dislikes book.\n\nAnd the following facts:\neve likes ball.\nalice is a friend of eve.\n\nQUESTION:\nCould alice is a friend of eve explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "friend(alice,eve)"
    }
  },
  {
    "q": "likes(eve,ball).",
    "c": "friend(frank,carol) :- cold.\nlikes(frank,ball) :- friend(frank,carol).\ntall(bob) :- likes(frank,ball).\nhappy(carol) :- tall(bob).\nfriend(alice,dave) :- happy(carol).\nparent(george,carol) :- friend(alice,dave).\ncold :- parent(george,carol).\nhappy(carol) :- cold.\nenemy(alice,bob) :- happy(carol).\nbig(book) :- enemy(alice,bob).\nsibling(dave,frank) :- big(book).\nbig(book) :- sibling(dave,frank).\nlikes(alice,book) :- big(book).\nlikes(bob,pencil) :- likes(alice,book).\nsad(george) :- likes(bob,pencil).\nhot :- sad(george).\nsmall(ball) :- hot.\nhungry(eve) :- small(ball).\nhappy(frank) :- hungry(eve).\nhappy(carol) :- happy(frank).\ntall(frank) :- happy(carol).\nhungry(eve) :- tall(frank).\nparent(bob,eve) :- hungry(eve).\nsunny :- parent(bob,eve).\nsad(dave) :- sunny.\nfriend(dave,eve) :- sad(dave).\nwet(car) :- friend(dave,eve).\nlikes(carol,ball) :- wet(car).\nhappy(george) :- likes(carol,ball).\nhot :- happy(george).\nsad(frank) :- hungry(alice), friend(bob,bob), owns(dave,ball).\nbig(phone) :- happy(dave), hungry(carol), sunny.\ndislikes(george,apple) :- happy(eve), sad(carol).\ndislikes(alice,book) :- tall(alice), hot.\nlikes(eve,ball).\nfriend(alice,eve).",
    "natural language": "You are given the following rules:\nIf it is cold, then frank is a friend of carol.\nIf frank is a friend of carol, then frank likes ball.\nIf frank likes ball, then bob is tall.\nIf bob is tall, then carol is happy.\nIf carol is happy, then alice is a friend of dave.\nIf alice is a friend of dave, then george is a parent of carol.\nIf george is a parent of carol, then it is cold.\nIf it is cold, then carol is happy.\nIf carol is happy, then alice is an enemy of bob.\nIf alice is an enemy of bob, then book is big.\nIf book is big, then dave is a sibling of frank.\nIf dave is a sibling of frank, then book is big.\nIf book is big, then alice likes book.\nIf alice likes book, then bob likes pencil.\nIf bob likes pencil, then george is sad.\nIf george is sad, then it is hot.\nIf it is hot, then ball is small.\nIf ball is small, then eve is hungry.\nIf eve is hungry, then frank is happy.\nIf frank is happy, then carol is happy.\nIf carol is happy, then frank is tall.\nIf frank is tall, then eve is hungry.\nIf eve is hungry, then bob is a parent of eve.\nIf bob is a parent of eve, then it is sunny.\nIf it is sunny, then dave is sad.\nIf dave is sad, then dave is a friend of eve.\nIf dave is a friend of eve, then car is wet.\nIf car is wet, then carol likes ball.\nIf carol likes ball, then george is happy.\nIf george is happy, then it is hot.\nIf alice is hungry and bob is a friend of bob and dave owns ball, then frank is sad.\nIf dave is happy and carol is hungry and it is sunny, then phone is big.\nIf eve is happy and carol is sad, then george dislikes apple.\nIf alice is tall and it is hot, then alice dislikes book.\n\nAnd the following facts:\neve likes ball.\nalice is a friend of eve.\n\nQUESTION:\nCould eve likes ball explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 3,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "likes(eve,ball)"
    }
  },
  {
    "q": "happy(alice).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nhappy(alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\nalice is happy.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nIs alice is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nhappy(alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\nalice is happy.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nIs car is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,frank).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nhappy(alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\nalice is happy.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nIs bob is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,pencil).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nhappy(alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\nalice is happy.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nIs bob owns pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,bob).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nhappy(alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following information:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\nalice is happy.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nIs alice is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(alice).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nCould alice is happy explain alice is a sibling of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(alice,eve)",
      "explanation": "happy(alice)"
    }
  },
  {
    "q": "likes(dave,ball).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nCould dave likes ball explain alice is a sibling of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(alice,eve)",
      "non_explanation": "likes(dave,ball)"
    }
  },
  {
    "q": "sibling(bob,alice).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nCould bob is a sibling of alice explain alice is a sibling of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(alice,eve)",
      "non_explanation": "sibling(bob,alice)"
    }
  },
  {
    "q": "owns(alice,pencil).",
    "c": "small(car) :- owns(alice,pencil).\ntall(george) :- tall(frank), sunny, enemy(frank,frank).\nwet(book) :- wet(book).\nhungry(george) :- small(book), big(apple).\nsmall(book) :- owns(george,ball), dislikes(dave,book).\ntall(george) :- big(ball), friend(frank,frank), tall(carol).\nsmall(pencil) :- hungry(eve), parent(carol,carol), hot.\nlikes(frank,apple) :- sunny.\nsibling(alice,alice) :- sibling(carol,carol), cold, happy(bob).\nlikes(alice,pencil) :- hungry(dave), big(ball), friend(frank,alice).\nsibling(carol,alice) :- sibling(eve,bob).\nwet(apple) :- wet(ball).\nhappy(eve) :- happy(bob), happy(dave), cold.\nhappy(alice) :- enemy(frank,bob), likes(eve,apple).\nhungry(alice) :- sibling(bob,frank), likes(eve,pencil).\nfriend(dave,eve) :- small(ball).\nwet(car) :- cold.\nsmall(apple) :- happy(bob).\ntall(bob) :- small(book), tall(eve), wet(phone).\nsibling(dave,frank) :- parent(dave,george), hot, sibling(bob,dave).\nfriend(alice,carol) :- friend(frank,carol), friend(carol,eve), friend(dave,frank).\nsmall(pencil) :- big(car).\nlikes(frank,book) :- tall(carol), friend(alice,george), wet(pencil).\nsibling(alice,eve) :- happy(alice).\nsmall(apple) :- sibling(frank,carol), cold, small(apple).\nsibling(george,carol) :- likes(george,apple), dislikes(dave,car), hungry(frank).\nenemy(eve,george) :- cold.\nowns(dave,book) :- owns(frank,ball).\nsad(eve) :- cold.\nbig(pencil) :- tall(bob), happy(bob), sad(bob).\nowns(eve,ball) :- hungry(frank).\nsad(eve) :- dislikes(eve,ball).\nbig(phone) :- dislikes(bob,book).\nenemy(george,george) :- friend(eve,carol), enemy(alice,dave), sad(eve).\nowns(alice,pencil).\nlikes(dave,ball).\nsibling(bob,alice).\nparent(eve,carol).\nlikes(dave,apple).",
    "natural language": "You are given the following rules:\nIf alice owns pencil, then car is small.\nIf frank is tall and it is sunny and frank is an enemy of frank, then george is tall.\nIf book is wet, then book is wet.\nIf book is small and apple is big, then george is hungry.\nIf george owns ball and dave dislikes book, then book is small.\nIf ball is big and frank is a friend of frank and carol is tall, then george is tall.\nIf eve is hungry and carol is a parent of carol and it is hot, then pencil is small.\nIf it is sunny, then frank likes apple.\nIf carol is a sibling of carol and it is cold and bob is happy, then alice is a sibling of alice.\nIf dave is hungry and ball is big and frank is a friend of alice, then alice likes pencil.\nIf eve is a sibling of bob, then carol is a sibling of alice.\nIf ball is wet, then apple is wet.\nIf bob is happy and dave is happy and it is cold, then eve is happy.\nIf frank is an enemy of bob and eve likes apple, then alice is happy.\nIf bob is a sibling of frank and eve likes pencil, then alice is hungry.\nIf ball is small, then dave is a friend of eve.\nIf it is cold, then car is wet.\nIf bob is happy, then apple is small.\nIf book is small and eve is tall and phone is wet, then bob is tall.\nIf dave is a parent of george and it is hot and bob is a sibling of dave, then dave is a sibling of frank.\nIf frank is a friend of carol and carol is a friend of eve and dave is a friend of frank, then alice is a friend of carol.\nIf car is big, then pencil is small.\nIf carol is tall and alice is a friend of george and pencil is wet, then frank likes book.\nIf alice is happy, then alice is a sibling of eve.\nIf frank is a sibling of carol and it is cold and apple is small, then apple is small.\nIf george likes apple and dave dislikes car and frank is hungry, then george is a sibling of carol.\nIf it is cold, then eve is an enemy of george.\nIf frank owns ball, then dave owns book.\nIf it is cold, then eve is sad.\nIf bob is tall and bob is happy and bob is sad, then pencil is big.\nIf frank is hungry, then eve owns ball.\nIf eve dislikes ball, then eve is sad.\nIf bob dislikes book, then phone is big.\nIf eve is a friend of carol and alice is an enemy of dave and eve is sad, then george is an enemy of george.\n\nAnd the following facts:\nalice owns pencil.\ndave likes ball.\nbob is a sibling of alice.\neve is a parent of carol.\ndave likes apple.\n\nQUESTION:\nCould alice owns pencil explain alice is a sibling of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sibling(alice,eve)",
      "non_explanation": "owns(alice,pencil)"
    }
  },
  {
    "q": "parent(alice,eve).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nhungry(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is hungry.\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nIs alice is a parent of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,bob).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nhungry(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is hungry.\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nIs frank is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,frank).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nhungry(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is hungry.\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nIs alice is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,eve).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nhungry(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is hungry.\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nIs george is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,apple).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nhungry(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following information:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is hungry.\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nIs carol likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nCould frank is hungry explain dave is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "explanation": "hungry(frank)"
    }
  },
  {
    "q": "parent(george,eve).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nCould george is a parent of eve explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "parent(george,eve)"
    }
  },
  {
    "q": "parent(alice,eve).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nCould alice is a parent of eve explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "parent(alice,eve)"
    }
  },
  {
    "q": "enemy(frank,bob).",
    "c": "sad(dave) :- hungry(frank).\nfriend(alice,george) :- sunny, big(book).\nfriend(frank,george) :- cold.\ndislikes(alice,ball) :- owns(frank,book).\ndislikes(carol,ball) :- sad(alice), dislikes(alice,phone), sunny.\nwet(book) :- dislikes(carol,book).\ncold :- tall(alice), happy(eve), parent(eve,alice).\nenemy(george,carol) :- hungry(frank), parent(eve,george).\nhungry(carol) :- enemy(carol,dave), dislikes(dave,ball), hot.\nowns(alice,ball) :- sibling(eve,george), friend(eve,bob).\ncold :- likes(dave,apple), tall(carol), wet(pencil).\nlikes(dave,ball) :- happy(alice), sunny.\nsunny :- tall(bob).\nlikes(carol,book) :- enemy(carol,bob).\nhungry(frank) :- sad(dave), wet(phone).\nwet(ball) :- happy(eve), enemy(bob,carol).\nowns(eve,apple) :- owns(dave,book), small(apple).\nsunny :- wet(apple).\nparent(dave,bob) :- sunny, happy(dave).\nenemy(alice,bob) :- big(apple), sunny.\nparent(dave,eve) :- sibling(george,carol), dislikes(george,ball), enemy(alice,frank).\ntall(dave) :- sunny.\ntall(alice) :- wet(car), hungry(carol), owns(carol,phone).\nhot :- parent(bob,eve).\nhot :- sad(bob).\ncold :- sibling(carol,dave), owns(carol,phone), owns(alice,car).\nsibling(frank,bob) :- sibling(bob,alice), owns(eve,apple).\nsibling(dave,eve) :- dislikes(dave,pencil).\nparent(eve,eve) :- dislikes(frank,phone).\nenemy(george,carol) :- parent(eve,george).\nsad(eve) :- sunny.\ncold :- hot, sad(carol).\nfriend(alice,eve) :- sad(alice), likes(bob,pencil).\nhungry(frank) :- happy(frank).\nenemy(frank,bob).\ndislikes(frank,book).\nparent(george,eve).\nparent(alice,eve).\nparent(carol,bob).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then dave is sad.\nIf it is sunny and book is big, then alice is a friend of george.\nIf it is cold, then frank is a friend of george.\nIf frank owns book, then alice dislikes ball.\nIf alice is sad and alice dislikes phone and it is sunny, then carol dislikes ball.\nIf carol dislikes book, then book is wet.\nIf alice is tall and eve is happy and eve is a parent of alice, then it is cold.\nIf frank is hungry and eve is a parent of george, then george is an enemy of carol.\nIf carol is an enemy of dave and dave dislikes ball and it is hot, then carol is hungry.\nIf eve is a sibling of george and eve is a friend of bob, then alice owns ball.\nIf dave likes apple and carol is tall and pencil is wet, then it is cold.\nIf alice is happy and it is sunny, then dave likes ball.\nIf bob is tall, then it is sunny.\nIf carol is an enemy of bob, then carol likes book.\nIf dave is sad and phone is wet, then frank is hungry.\nIf eve is happy and bob is an enemy of carol, then ball is wet.\nIf dave owns book and apple is small, then eve owns apple.\nIf apple is wet, then it is sunny.\nIf it is sunny and dave is happy, then dave is a parent of bob.\nIf apple is big and it is sunny, then alice is an enemy of bob.\nIf george is a sibling of carol and george dislikes ball and alice is an enemy of frank, then dave is a parent of eve.\nIf it is sunny, then dave is tall.\nIf car is wet and carol is hungry and carol owns phone, then alice is tall.\nIf bob is a parent of eve, then it is hot.\nIf bob is sad, then it is hot.\nIf carol is a sibling of dave and carol owns phone and alice owns car, then it is cold.\nIf bob is a sibling of alice and eve owns apple, then frank is a sibling of bob.\nIf dave dislikes pencil, then dave is a sibling of eve.\nIf frank dislikes phone, then eve is a parent of eve.\nIf eve is a parent of george, then george is an enemy of carol.\nIf it is sunny, then eve is sad.\nIf it is hot and carol is sad, then it is cold.\nIf alice is sad and bob likes pencil, then alice is a friend of eve.\nIf frank is happy, then frank is hungry.\n\nAnd the following facts:\nfrank is an enemy of bob.\nfrank dislikes book.\ngeorge is a parent of eve.\nalice is a parent of eve.\ncarol is a parent of bob.\n\nQUESTION:\nCould frank is an enemy of bob explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "enemy(frank,bob)"
    }
  },
  {
    "q": "tall(bob).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nwet(ball).\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nball is wet.\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nIs bob is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,pencil).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nwet(ball).\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nball is wet.\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nIs bob dislikes pencil true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,alice).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nwet(ball).\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nball is wet.\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nIs george is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,pencil).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nwet(ball).\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nball is wet.\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nIs george dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,dave).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nwet(ball).\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following information:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nball is wet.\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nIs alice is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following rules:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nCould ball is wet explain frank is tall?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "tall(frank)",
      "explanation": "wet(ball)"
    }
  },
  {
    "q": "likes(george,ball).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following rules:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nCould george likes ball explain frank is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "tall(frank)",
      "non_explanation": "likes(george,ball)"
    }
  },
  {
    "q": "tall(bob).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following rules:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nCould bob is tall explain frank is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "tall(frank)",
      "non_explanation": "tall(bob)"
    }
  },
  {
    "q": "hungry(carol).",
    "c": "dislikes(bob,pencil) :- wet(ball).\nowns(alice,pencil) :- dislikes(bob,pencil).\ntall(frank) :- owns(alice,pencil).\nhungry(carol) :- tall(frank).\ncold :- hungry(carol).\nsmall(book) :- big(pencil).\nenemy(eve,bob) :- sunny, enemy(frank,alice).\nsmall(phone) :- sunny.\nenemy(eve,carol) :- enemy(frank,alice).\ndislikes(frank,car) :- big(car), dislikes(frank,phone), dislikes(dave,phone).\nsibling(bob,frank) :- cold.\nwet(phone) :- dislikes(dave,pencil).\ndislikes(alice,pencil) :- dislikes(eve,car), dislikes(bob,pencil).\nenemy(carol,alice) :- dislikes(eve,apple), enemy(carol,george).\nowns(george,car) :- sunny.\nlikes(frank,apple) :- cold, likes(carol,ball), hot.\nsmall(apple) :- big(pencil), small(car), sad(dave).\nsibling(george,alice) :- tall(eve).\nlikes(george,ball) :- owns(carol,phone).\nwet(car) :- dislikes(dave,apple).\nowns(george,car) :- owns(bob,apple), small(ball), tall(george).\nsad(bob) :- sad(bob), sad(eve).\nsunny :- wet(ball), sibling(frank,frank), parent(alice,bob).\nsad(carol) :- hungry(frank), sunny.\nsunny :- sibling(frank,eve), enemy(dave,eve), friend(eve,eve).\nfriend(alice,george) :- likes(alice,phone), small(apple), parent(eve,alice).\nparent(carol,bob) :- parent(dave,bob), friend(eve,dave).\nfriend(eve,frank) :- friend(alice,frank), happy(frank).\nparent(bob,bob) :- sad(carol).\ntall(george) :- hot, sad(frank).\nsad(eve) :- sibling(eve,carol).\ntall(george) :- sunny, tall(george).\nowns(bob,phone) :- enemy(frank,bob), hot, owns(alice,phone).\nsunny :- small(book), sunny, sunny.\nlikes(bob,book).\nhungry(carol).\ntall(bob).\nlikes(george,ball).\nowns(frank,book).",
    "natural language": "You are given the following rules:\nIf ball is wet, then bob dislikes pencil.\nIf bob dislikes pencil, then alice owns pencil.\nIf alice owns pencil, then frank is tall.\nIf frank is tall, then carol is hungry.\nIf carol is hungry, then it is cold.\nIf pencil is big, then book is small.\nIf it is sunny and frank is an enemy of alice, then eve is an enemy of bob.\nIf it is sunny, then phone is small.\nIf frank is an enemy of alice, then eve is an enemy of carol.\nIf car is big and frank dislikes phone and dave dislikes phone, then frank dislikes car.\nIf it is cold, then bob is a sibling of frank.\nIf dave dislikes pencil, then phone is wet.\nIf eve dislikes car and bob dislikes pencil, then alice dislikes pencil.\nIf eve dislikes apple and carol is an enemy of george, then carol is an enemy of alice.\nIf it is sunny, then george owns car.\nIf it is cold and carol likes ball and it is hot, then frank likes apple.\nIf pencil is big and car is small and dave is sad, then apple is small.\nIf eve is tall, then george is a sibling of alice.\nIf carol owns phone, then george likes ball.\nIf dave dislikes apple, then car is wet.\nIf bob owns apple and ball is small and george is tall, then george owns car.\nIf bob is sad and eve is sad, then bob is sad.\nIf ball is wet and frank is a sibling of frank and alice is a parent of bob, then it is sunny.\nIf frank is hungry and it is sunny, then carol is sad.\nIf frank is a sibling of eve and dave is an enemy of eve and eve is a friend of eve, then it is sunny.\nIf alice likes phone and apple is small and eve is a parent of alice, then alice is a friend of george.\nIf dave is a parent of bob and eve is a friend of dave, then carol is a parent of bob.\nIf alice is a friend of frank and frank is happy, then eve is a friend of frank.\nIf carol is sad, then bob is a parent of bob.\nIf it is hot and frank is sad, then george is tall.\nIf eve is a sibling of carol, then eve is sad.\nIf it is sunny and george is tall, then george is tall.\nIf frank is an enemy of bob and it is hot and alice owns phone, then bob owns phone.\nIf book is small and it is sunny and it is sunny, then it is sunny.\n\nAnd the following facts:\nbob likes book.\ncarol is hungry.\nbob is tall.\ngeorge likes ball.\nfrank owns book.\n\nQUESTION:\nCould carol is hungry explain frank is tall?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "tall(frank)",
      "non_explanation": "hungry(carol)"
    }
  },
  {
    "q": "sunny.",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nwet(ball).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following information:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\nball is wet.\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nIs it is sunny true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,eve).",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nwet(ball).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following information:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\nball is wet.\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nIs carol is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,carol).",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nwet(ball).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following information:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\nball is wet.\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nIs frank is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(carol,alice).",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nwet(ball).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following information:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\nball is wet.\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nIs carol is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,dave).",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nwet(ball).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following information:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\nball is wet.\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nIs bob is a friend of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(ball).",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following rules:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nCould ball is wet explain pencil is wet?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "explanation": "wet(ball)"
    }
  },
  {
    "q": "owns(dave,apple).",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following rules:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nCould dave owns apple explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "non_explanation": "owns(dave,apple)"
    }
  },
  {
    "q": "enemy(george,dave).",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following rules:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nCould george is an enemy of dave explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "non_explanation": "enemy(george,dave)"
    }
  },
  {
    "q": "owns(george,book).",
    "c": "enemy(alice,dave) :- wet(ball).\nwet(pencil) :- enemy(alice,dave).\nfriend(dave,alice) :- wet(pencil).\ncold :- friend(dave,alice).\nsunny :- cold.\ncold :- cold, sad(eve), tall(frank).\nparent(frank,george) :- cold, hungry(george), hungry(dave).\nsmall(book) :- happy(bob).\nhappy(eve) :- sibling(frank,alice), enemy(dave,alice).\nhappy(george) :- wet(book).\nlikes(bob,pencil) :- small(car), enemy(alice,george).\nhot :- parent(carol,bob).\nsmall(ball) :- hungry(eve), dislikes(carol,phone), hungry(george).\nenemy(bob,frank) :- small(apple).\ncold :- small(apple), happy(alice).\nfriend(george,eve) :- big(apple).\nhappy(alice) :- big(car).\nenemy(bob,alice) :- wet(phone), hot.\nhot :- sibling(george,frank), tall(eve).\nlikes(frank,car) :- friend(alice,carol).\nparent(george,dave) :- enemy(george,eve), small(car).\nfriend(george,dave) :- parent(carol,frank), likes(eve,ball), big(phone).\ndislikes(dave,apple) :- big(phone), sibling(alice,dave), sad(bob).\ndislikes(frank,pencil) :- happy(george), friend(dave,george), sibling(frank,alice).\nlikes(dave,phone) :- happy(george), hot.\nhungry(george) :- owns(eve,apple), wet(ball).\nhungry(frank) :- happy(bob), enemy(eve,dave).\nparent(frank,frank) :- small(car), small(car), cold.\nparent(frank,dave) :- sibling(eve,carol), parent(bob,george).\ntall(bob) :- sad(bob), cold.\nsad(eve) :- sibling(eve,george), big(phone), sibling(alice,dave).\ntall(dave) :- small(pencil), big(apple), hungry(carol).\nsad(frank) :- friend(alice,eve), likes(bob,car), owns(alice,car).\nsibling(carol,eve) :- big(car), wet(book).\nenemy(carol,eve).\nowns(george,book).\nenemy(george,dave).\nowns(dave,apple).\nsibling(eve,dave).",
    "natural language": "You are given the following rules:\nIf ball is wet, then alice is an enemy of dave.\nIf alice is an enemy of dave, then pencil is wet.\nIf pencil is wet, then dave is a friend of alice.\nIf dave is a friend of alice, then it is cold.\nIf it is cold, then it is sunny.\nIf it is cold and eve is sad and frank is tall, then it is cold.\nIf it is cold and george is hungry and dave is hungry, then frank is a parent of george.\nIf bob is happy, then book is small.\nIf frank is a sibling of alice and dave is an enemy of alice, then eve is happy.\nIf book is wet, then george is happy.\nIf car is small and alice is an enemy of george, then bob likes pencil.\nIf carol is a parent of bob, then it is hot.\nIf eve is hungry and carol dislikes phone and george is hungry, then ball is small.\nIf apple is small, then bob is an enemy of frank.\nIf apple is small and alice is happy, then it is cold.\nIf apple is big, then george is a friend of eve.\nIf car is big, then alice is happy.\nIf phone is wet and it is hot, then bob is an enemy of alice.\nIf george is a sibling of frank and eve is tall, then it is hot.\nIf alice is a friend of carol, then frank likes car.\nIf george is an enemy of eve and car is small, then george is a parent of dave.\nIf carol is a parent of frank and eve likes ball and phone is big, then george is a friend of dave.\nIf phone is big and alice is a sibling of dave and bob is sad, then dave dislikes apple.\nIf george is happy and dave is a friend of george and frank is a sibling of alice, then frank dislikes pencil.\nIf george is happy and it is hot, then dave likes phone.\nIf eve owns apple and ball is wet, then george is hungry.\nIf bob is happy and eve is an enemy of dave, then frank is hungry.\nIf car is small and car is small and it is cold, then frank is a parent of frank.\nIf eve is a sibling of carol and bob is a parent of george, then frank is a parent of dave.\nIf bob is sad and it is cold, then bob is tall.\nIf eve is a sibling of george and phone is big and alice is a sibling of dave, then eve is sad.\nIf pencil is small and apple is big and carol is hungry, then dave is tall.\nIf alice is a friend of eve and bob likes car and alice owns car, then frank is sad.\nIf car is big and book is wet, then carol is a sibling of eve.\n\nAnd the following facts:\ncarol is an enemy of eve.\ngeorge owns book.\ngeorge is an enemy of dave.\ndave owns apple.\neve is a sibling of dave.\n\nQUESTION:\nCould george owns book explain pencil is wet?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "wet(pencil)",
      "non_explanation": "owns(george,book)"
    }
  },
  {
    "q": "sibling(alice,dave).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nfriend(dave,frank).\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following information:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\ndave is a friend of frank.\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nIs alice is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,frank).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nfriend(dave,frank).\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following information:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\ndave is a friend of frank.\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nIs dave is a friend of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,pencil).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nfriend(dave,frank).\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following information:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\ndave is a friend of frank.\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nIs dave dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,pencil).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nfriend(dave,frank).\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following information:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\ndave is a friend of frank.\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nIs frank dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nfriend(dave,frank).\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following information:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\ndave is a friend of frank.\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nIs carol is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,frank).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following rules:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nCould dave is a friend of frank explain eve likes ball?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "likes(eve,ball)",
      "explanation": "friend(dave,frank)"
    }
  },
  {
    "q": "enemy(alice,dave).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following rules:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nCould alice is an enemy of dave explain eve likes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "likes(eve,ball)",
      "non_explanation": "enemy(alice,dave)"
    }
  },
  {
    "q": "likes(frank,car).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following rules:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nCould frank likes car explain eve likes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "likes(eve,ball)",
      "non_explanation": "likes(frank,car)"
    }
  },
  {
    "q": "sibling(alice,dave).",
    "c": "sad(alice) :- friend(dave,frank).\nenemy(alice,bob) :- sad(alice).\nfriend(eve,carol) :- enemy(alice,bob).\nlikes(eve,ball) :- friend(eve,carol).\ntall(dave) :- likes(eve,ball).\ndislikes(eve,book) :- tall(dave).\nsibling(bob,george) :- dislikes(eve,book).\nhot :- sibling(bob,george).\nwet(apple) :- hot.\ntall(frank) :- wet(apple).\nfriend(eve,dave) :- owns(frank,pencil), friend(frank,eve).\nhot :- dislikes(george,book), sunny, hot.\nfriend(george,dave) :- friend(bob,eve), happy(bob).\ntall(dave) :- tall(alice), tall(bob).\nsad(eve) :- parent(dave,dave).\nhot :- hot, cold, wet(car).\ntall(alice) :- tall(carol).\nhappy(frank) :- happy(carol).\nsad(eve) :- sad(frank), tall(carol), hungry(eve).\nhappy(george) :- happy(bob), sunny.\nwet(pencil) :- dislikes(george,pencil), enemy(frank,alice).\nsmall(ball) :- owns(george,book), enemy(alice,carol), likes(frank,ball).\nsmall(phone) :- hot, friend(george,bob), owns(dave,pencil).\nwet(book) :- wet(phone).\nsibling(dave,alice) :- sibling(dave,eve).\nhungry(alice) :- hungry(dave), friend(dave,dave).\nsibling(dave,bob) :- sibling(carol,carol), tall(frank).\nwet(car) :- sibling(bob,george).\nhungry(eve) :- hungry(alice).\ncold :- cold.\ndislikes(george,ball) :- dislikes(eve,pencil), hungry(alice).\ndislikes(eve,phone) :- enemy(dave,frank).\nfriend(carol,alice) :- cold, cold.\ncold :- sunny, cold.\nlikes(frank,car).\nenemy(alice,dave).\ntall(carol).\nsibling(alice,dave).\nparent(frank,carol).",
    "natural language": "You are given the following rules:\nIf dave is a friend of frank, then alice is sad.\nIf alice is sad, then alice is an enemy of bob.\nIf alice is an enemy of bob, then eve is a friend of carol.\nIf eve is a friend of carol, then eve likes ball.\nIf eve likes ball, then dave is tall.\nIf dave is tall, then eve dislikes book.\nIf eve dislikes book, then bob is a sibling of george.\nIf bob is a sibling of george, then it is hot.\nIf it is hot, then apple is wet.\nIf apple is wet, then frank is tall.\nIf frank owns pencil and frank is a friend of eve, then eve is a friend of dave.\nIf george dislikes book and it is sunny and it is hot, then it is hot.\nIf bob is a friend of eve and bob is happy, then george is a friend of dave.\nIf alice is tall and bob is tall, then dave is tall.\nIf dave is a parent of dave, then eve is sad.\nIf it is hot and it is cold and car is wet, then it is hot.\nIf carol is tall, then alice is tall.\nIf carol is happy, then frank is happy.\nIf frank is sad and carol is tall and eve is hungry, then eve is sad.\nIf bob is happy and it is sunny, then george is happy.\nIf george dislikes pencil and frank is an enemy of alice, then pencil is wet.\nIf george owns book and alice is an enemy of carol and frank likes ball, then ball is small.\nIf it is hot and george is a friend of bob and dave owns pencil, then phone is small.\nIf phone is wet, then book is wet.\nIf dave is a sibling of eve, then dave is a sibling of alice.\nIf dave is hungry and dave is a friend of dave, then alice is hungry.\nIf carol is a sibling of carol and frank is tall, then dave is a sibling of bob.\nIf bob is a sibling of george, then car is wet.\nIf alice is hungry, then eve is hungry.\nIf it is cold, then it is cold.\nIf eve dislikes pencil and alice is hungry, then george dislikes ball.\nIf dave is an enemy of frank, then eve dislikes phone.\nIf it is cold and it is cold, then carol is a friend of alice.\nIf it is sunny and it is cold, then it is cold.\n\nAnd the following facts:\nfrank likes car.\nalice is an enemy of dave.\ncarol is tall.\nalice is a sibling of dave.\nfrank is a parent of carol.\n\nQUESTION:\nCould alice is a sibling of dave explain eve likes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "likes(eve,ball)",
      "non_explanation": "sibling(alice,dave)"
    }
  },
  {
    "q": "tall(alice).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nowns(alice,car).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following information:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nalice owns car.\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nIs alice is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(dave).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nowns(alice,car).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following information:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nalice owns car.\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nIs dave is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,alice).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nowns(alice,car).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following information:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nalice owns car.\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nIs dave is a friend of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,book).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nowns(alice,car).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following information:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nalice owns car.\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nIs frank owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,eve).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nowns(alice,car).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following information:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nalice owns car.\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nIs george is a friend of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,car).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nCould alice owns car explain carol is a friend of dave?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,dave)",
      "explanation": "owns(alice,car)"
    }
  },
  {
    "q": "sad(frank).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nCould frank is sad explain carol is a friend of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,dave)",
      "non_explanation": "sad(frank)"
    }
  },
  {
    "q": "hungry(dave).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nCould dave is hungry explain carol is a friend of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,dave)",
      "non_explanation": "hungry(dave)"
    }
  },
  {
    "q": "likes(dave,car).",
    "c": "small(apple) :- owns(alice,car).\ntall(dave) :- small(apple).\ntall(frank) :- tall(dave).\nwet(book) :- tall(frank).\ntall(dave) :- wet(book).\ntall(alice) :- tall(dave).\nfriend(carol,dave) :- tall(alice).\nowns(dave,apple) :- friend(carol,dave).\nhungry(bob) :- owns(dave,apple).\nlikes(alice,phone) :- hungry(bob).\nsmall(pencil) :- friend(frank,bob), wet(apple), hot.\nsmall(book) :- dislikes(dave,ball), hungry(eve), dislikes(carol,car).\ntall(bob) :- hot.\nsunny :- friend(frank,dave), owns(frank,car), hot.\nsunny :- cold, hungry(bob).\ntall(eve) :- likes(carol,apple), wet(book).\ntall(bob) :- dislikes(alice,pencil).\nsmall(ball) :- sibling(alice,george).\nenemy(eve,bob) :- tall(eve), sunny.\nhot :- cold.\nhot :- happy(carol), hungry(eve).\nowns(dave,pencil) :- dislikes(carol,apple).\nsad(bob) :- wet(phone).\nsad(frank) :- dislikes(frank,phone), enemy(carol,george).\nenemy(frank,bob) :- big(ball), small(phone).\nowns(eve,car) :- cold.\nlikes(bob,car) :- enemy(bob,dave), cold.\nlikes(bob,pencil) :- sibling(frank,frank).\ntall(george) :- happy(frank), hungry(bob).\nsunny :- hungry(frank), sibling(alice,dave), dislikes(george,ball).\nsunny :- sad(carol), likes(dave,phone), happy(george).\nsunny :- hot.\nenemy(dave,alice) :- friend(eve,eve), parent(george,frank).\nsmall(car) :- wet(book), owns(dave,book), friend(bob,bob).\nsad(frank).\nlikes(george,car).\nhungry(dave).\nlikes(dave,car).\nsmall(book).",
    "natural language": "You are given the following rules:\nIf alice owns car, then apple is small.\nIf apple is small, then dave is tall.\nIf dave is tall, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is tall.\nIf dave is tall, then alice is tall.\nIf alice is tall, then carol is a friend of dave.\nIf carol is a friend of dave, then dave owns apple.\nIf dave owns apple, then bob is hungry.\nIf bob is hungry, then alice likes phone.\nIf frank is a friend of bob and apple is wet and it is hot, then pencil is small.\nIf dave dislikes ball and eve is hungry and carol dislikes car, then book is small.\nIf it is hot, then bob is tall.\nIf frank is a friend of dave and frank owns car and it is hot, then it is sunny.\nIf it is cold and bob is hungry, then it is sunny.\nIf carol likes apple and book is wet, then eve is tall.\nIf alice dislikes pencil, then bob is tall.\nIf alice is a sibling of george, then ball is small.\nIf eve is tall and it is sunny, then eve is an enemy of bob.\nIf it is cold, then it is hot.\nIf carol is happy and eve is hungry, then it is hot.\nIf carol dislikes apple, then dave owns pencil.\nIf phone is wet, then bob is sad.\nIf frank dislikes phone and carol is an enemy of george, then frank is sad.\nIf ball is big and phone is small, then frank is an enemy of bob.\nIf it is cold, then eve owns car.\nIf bob is an enemy of dave and it is cold, then bob likes car.\nIf frank is a sibling of frank, then bob likes pencil.\nIf frank is happy and bob is hungry, then george is tall.\nIf frank is hungry and alice is a sibling of dave and george dislikes ball, then it is sunny.\nIf carol is sad and dave likes phone and george is happy, then it is sunny.\nIf it is hot, then it is sunny.\nIf eve is a friend of eve and george is a parent of frank, then dave is an enemy of alice.\nIf book is wet and dave owns book and bob is a friend of bob, then car is small.\n\nAnd the following facts:\nfrank is sad.\ngeorge likes car.\ndave is hungry.\ndave likes car.\nbook is small.\n\nQUESTION:\nCould dave likes car explain carol is a friend of dave?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,dave)",
      "non_explanation": "likes(dave,car)"
    }
  },
  {
    "q": "sibling(dave,george).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nhappy(frank).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following information:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nfrank is happy.\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nIs dave is a sibling of george true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,eve).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nhappy(frank).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following information:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nfrank is happy.\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nIs dave is a parent of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,apple).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nhappy(frank).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following information:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nfrank is happy.\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nIs alice owns apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,pencil).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nhappy(frank).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following information:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nfrank is happy.\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nIs dave likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(george,pencil).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nhappy(frank).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following information:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nfrank is happy.\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nIs george likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following rules:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nCould frank is happy explain bob is a friend of alice?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(bob,alice)",
      "explanation": "happy(frank)"
    }
  },
  {
    "q": "parent(eve,frank).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following rules:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nCould eve is a parent of frank explain bob is a friend of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(bob,alice)",
      "non_explanation": "parent(eve,frank)"
    }
  },
  {
    "q": "parent(dave,eve).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following rules:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nCould dave is a parent of eve explain bob is a friend of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(bob,alice)",
      "non_explanation": "parent(dave,eve)"
    }
  },
  {
    "q": "sibling(frank,eve).",
    "c": "wet(phone) :- happy(frank).\nlikes(eve,phone) :- wet(phone).\nenemy(alice,george) :- likes(eve,phone).\nbig(pencil) :- enemy(alice,george).\nowns(dave,car) :- big(pencil).\nsibling(bob,alice) :- owns(dave,car).\nhappy(bob) :- sibling(bob,alice).\nlikes(eve,ball) :- happy(bob).\nhungry(frank) :- likes(eve,ball).\nlikes(bob,car) :- hungry(frank).\ncold :- likes(bob,car).\nhappy(eve) :- cold.\nhappy(bob) :- happy(eve).\nenemy(frank,eve) :- happy(bob).\nsunny :- enemy(frank,eve).\nfriend(bob,alice) :- sunny.\nhappy(bob) :- friend(bob,alice).\ndislikes(alice,pencil) :- happy(bob).\nowns(frank,apple) :- dislikes(alice,pencil).\nowns(bob,phone) :- owns(frank,apple).\nparent(dave,dave) :- likes(frank,book).\nparent(dave,bob) :- sad(dave).\nenemy(carol,carol) :- big(car), cold, cold.\nenemy(dave,frank) :- sibling(bob,george), sunny.\nhungry(dave) :- hungry(dave), hungry(alice), hungry(george).\nbig(pencil) :- big(apple), friend(dave,alice), big(car).\nbig(car) :- wet(book).\nfriend(frank,george) :- friend(eve,alice), dislikes(george,book), likes(frank,phone).\nfriend(bob,bob) :- likes(alice,car), tall(alice), friend(bob,dave).\nsunny :- wet(car), tall(frank).\nsunny :- sunny.\nhungry(alice) :- small(car), hungry(bob), dislikes(george,phone).\nbig(book) :- big(book), cold, happy(alice).\nfriend(frank,carol) :- parent(bob,bob), friend(alice,eve).\nfriend(alice,george).\nparent(eve,frank).\nsibling(frank,eve).\nparent(dave,eve).\nsibling(dave,george).",
    "natural language": "You are given the following rules:\nIf frank is happy, then phone is wet.\nIf phone is wet, then eve likes phone.\nIf eve likes phone, then alice is an enemy of george.\nIf alice is an enemy of george, then pencil is big.\nIf pencil is big, then dave owns car.\nIf dave owns car, then bob is a sibling of alice.\nIf bob is a sibling of alice, then bob is happy.\nIf bob is happy, then eve likes ball.\nIf eve likes ball, then frank is hungry.\nIf frank is hungry, then bob likes car.\nIf bob likes car, then it is cold.\nIf it is cold, then eve is happy.\nIf eve is happy, then bob is happy.\nIf bob is happy, then frank is an enemy of eve.\nIf frank is an enemy of eve, then it is sunny.\nIf it is sunny, then bob is a friend of alice.\nIf bob is a friend of alice, then bob is happy.\nIf bob is happy, then alice dislikes pencil.\nIf alice dislikes pencil, then frank owns apple.\nIf frank owns apple, then bob owns phone.\nIf frank likes book, then dave is a parent of dave.\nIf dave is sad, then dave is a parent of bob.\nIf car is big and it is cold and it is cold, then carol is an enemy of carol.\nIf bob is a sibling of george and it is sunny, then dave is an enemy of frank.\nIf dave is hungry and alice is hungry and george is hungry, then dave is hungry.\nIf apple is big and dave is a friend of alice and car is big, then pencil is big.\nIf book is wet, then car is big.\nIf eve is a friend of alice and george dislikes book and frank likes phone, then frank is a friend of george.\nIf alice likes car and alice is tall and bob is a friend of dave, then bob is a friend of bob.\nIf car is wet and frank is tall, then it is sunny.\nIf it is sunny, then it is sunny.\nIf car is small and bob is hungry and george dislikes phone, then alice is hungry.\nIf book is big and it is cold and alice is happy, then book is big.\nIf bob is a parent of bob and alice is a friend of eve, then frank is a friend of carol.\n\nAnd the following facts:\nalice is a friend of george.\neve is a parent of frank.\nfrank is a sibling of eve.\ndave is a parent of eve.\ndave is a sibling of george.\n\nQUESTION:\nCould frank is a sibling of eve explain bob is a friend of alice?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(bob,alice)",
      "non_explanation": "sibling(frank,eve)"
    }
  },
  {
    "q": "hungry(george).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nsad(carol).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nIs george is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,carol).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nsad(carol).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nIs eve is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,dave).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nsad(carol).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nIs alice is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,carol).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nsad(carol).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nIs bob is a parent of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nsad(carol).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following information:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 6,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nCould carol is sad explain george is a friend of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(george,eve)",
      "explanation": "sad(carol)"
    }
  },
  {
    "q": "likes(eve,pencil).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nCould eve likes pencil explain george is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(george,eve)",
      "non_explanation": "likes(eve,pencil)"
    }
  },
  {
    "q": "enemy(eve,carol).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nCould eve is an enemy of carol explain george is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(george,eve)",
      "non_explanation": "enemy(eve,carol)"
    }
  },
  {
    "q": "likes(george,apple).",
    "c": "sad(dave) :- sad(carol).\nbig(phone) :- sad(dave).\nparent(frank,alice) :- big(phone).\nsunny :- parent(frank,alice).\nparent(bob,eve) :- sunny.\nsmall(apple) :- parent(bob,eve).\ndislikes(alice,phone) :- small(apple).\ncold :- dislikes(alice,phone).\nenemy(frank,george) :- cold.\nsunny :- enemy(frank,george).\nsunny :- sunny.\nsmall(car) :- sunny.\nfriend(george,eve) :- small(car).\nhot :- friend(george,eve).\nsunny :- hot.\nsmall(ball) :- sunny.\nsad(dave) :- small(ball).\nhungry(george) :- sad(dave).\nbig(phone) :- hungry(george).\nsmall(pencil) :- big(phone).\nhot :- parent(carol,alice), dislikes(dave,book).\nhot :- wet(car), owns(bob,phone), owns(frank,apple).\nhungry(george) :- dislikes(eve,book), happy(eve).\nenemy(frank,frank) :- wet(pencil).\nhungry(bob) :- dislikes(alice,book), cold, likes(alice,book).\nenemy(frank,carol) :- cold, sad(frank), big(phone).\nparent(bob,alice) :- tall(carol), enemy(alice,carol).\nwet(book) :- sibling(carol,alice), tall(alice).\nwet(phone) :- big(apple), wet(car).\nhot :- likes(dave,apple), small(pencil).\ntall(alice) :- hot.\nparent(carol,carol) :- sunny, sibling(bob,bob).\ntall(frank) :- parent(carol,bob), likes(frank,phone).\nhungry(george) :- sibling(dave,alice).\nlikes(george,apple).\nlikes(frank,pencil).\nlikes(eve,pencil).\nenemy(eve,carol).\nparent(george,carol).",
    "natural language": "You are given the following rules:\nIf carol is sad, then dave is sad.\nIf dave is sad, then phone is big.\nIf phone is big, then frank is a parent of alice.\nIf frank is a parent of alice, then it is sunny.\nIf it is sunny, then bob is a parent of eve.\nIf bob is a parent of eve, then apple is small.\nIf apple is small, then alice dislikes phone.\nIf alice dislikes phone, then it is cold.\nIf it is cold, then frank is an enemy of george.\nIf frank is an enemy of george, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then george is a friend of eve.\nIf george is a friend of eve, then it is hot.\nIf it is hot, then it is sunny.\nIf it is sunny, then ball is small.\nIf ball is small, then dave is sad.\nIf dave is sad, then george is hungry.\nIf george is hungry, then phone is big.\nIf phone is big, then pencil is small.\nIf carol is a parent of alice and dave dislikes book, then it is hot.\nIf car is wet and bob owns phone and frank owns apple, then it is hot.\nIf eve dislikes book and eve is happy, then george is hungry.\nIf pencil is wet, then frank is an enemy of frank.\nIf alice dislikes book and it is cold and alice likes book, then bob is hungry.\nIf it is cold and frank is sad and phone is big, then frank is an enemy of carol.\nIf carol is tall and alice is an enemy of carol, then bob is a parent of alice.\nIf carol is a sibling of alice and alice is tall, then book is wet.\nIf apple is big and car is wet, then phone is wet.\nIf dave likes apple and pencil is small, then it is hot.\nIf it is hot, then alice is tall.\nIf it is sunny and bob is a sibling of bob, then carol is a parent of carol.\nIf carol is a parent of bob and frank likes phone, then frank is tall.\nIf dave is a sibling of alice, then george is hungry.\n\nAnd the following facts:\ngeorge likes apple.\nfrank likes pencil.\neve likes pencil.\neve is an enemy of carol.\ngeorge is a parent of carol.\n\nQUESTION:\nCould george likes apple explain george is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(george,eve)",
      "non_explanation": "likes(george,apple)"
    }
  },
  {
    "q": "owns(george,pencil).",
    "c": "cold :- owns(george,pencil).\nenemy(bob,carol) :- cold.\nenemy(carol,bob) :- enemy(bob,carol).\nparent(carol,george) :- enemy(carol,bob).\nwet(car) :- parent(carol,george).\nsunny :- wet(car).\ncold :- sunny.\nowns(george,car) :- cold.\nwet(ball) :- owns(george,car).\nsunny :- wet(ball).\nlikes(bob,car) :- sunny.\nbig(pencil) :- likes(bob,car).\nsmall(pencil) :- big(pencil).\nbig(phone) :- small(pencil).\nenemy(carol,eve) :- big(phone).\nhot :- enemy(carol,eve).\nhappy(frank) :- hot.\ntall(frank) :- happy(frank).\nowns(frank,car) :- tall(frank).\nsibling(carol,dave) :- owns(frank,car).\nparent(alice,carol) :- sibling(carol,dave).\nlikes(george,ball) :- parent(alice,carol).\ntall(alice) :- likes(george,ball).\nfriend(dave,eve) :- tall(alice).\nsmall(book) :- friend(dave,eve).\nsmall(phone) :- small(book).\ndislikes(alice,phone) :- small(phone).\nsad(alice) :- dislikes(alice,phone).\ntall(carol) :- sad(alice).\nsunny :- tall(carol).\nparent(george,carol) :- owns(george,car), sad(alice).\ndislikes(frank,phone) :- sibling(eve,carol), hungry(eve), sad(george).\nsibling(eve,dave) :- tall(alice), hot, cold.\nfriend(eve,alice) :- wet(phone), small(apple).\ndislikes(eve,pencil).\nfriend(george,carol).\nowns(carol,ball).\ndislikes(george,ball).\nfriend(eve,george).",
    "natural language": "You are given the following rules:\nIf george owns pencil, then it is cold.\nIf it is cold, then bob is an enemy of carol.\nIf bob is an enemy of carol, then carol is an enemy of bob.\nIf carol is an enemy of bob, then carol is a parent of george.\nIf carol is a parent of george, then car is wet.\nIf car is wet, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then george owns car.\nIf george owns car, then ball is wet.\nIf ball is wet, then it is sunny.\nIf it is sunny, then bob likes car.\nIf bob likes car, then pencil is big.\nIf pencil is big, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then carol is an enemy of eve.\nIf carol is an enemy of eve, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then frank is tall.\nIf frank is tall, then frank owns car.\nIf frank owns car, then carol is a sibling of dave.\nIf carol is a sibling of dave, then alice is a parent of carol.\nIf alice is a parent of carol, then george likes ball.\nIf george likes ball, then alice is tall.\nIf alice is tall, then dave is a friend of eve.\nIf dave is a friend of eve, then book is small.\nIf book is small, then phone is small.\nIf phone is small, then alice dislikes phone.\nIf alice dislikes phone, then alice is sad.\nIf alice is sad, then carol is tall.\nIf carol is tall, then it is sunny.\nIf george owns car and alice is sad, then george is a parent of carol.\nIf eve is a sibling of carol and eve is hungry and george is sad, then frank dislikes phone.\nIf alice is tall and it is hot and it is cold, then eve is a sibling of dave.\nIf phone is wet and apple is small, then eve is a friend of alice.\n\nAnd the following facts:\neve dislikes pencil.\ngeorge is a friend of carol.\ncarol owns ball.\ngeorge dislikes ball.\neve is a friend of george.\n\nQUESTION:\nCould george owns pencil explain dave is a friend of eve?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 18,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(dave,eve)",
      "explanation": "owns(george,pencil)"
    }
  },
  {
    "q": "dislikes(eve,pencil).",
    "c": "cold :- owns(george,pencil).\nenemy(bob,carol) :- cold.\nenemy(carol,bob) :- enemy(bob,carol).\nparent(carol,george) :- enemy(carol,bob).\nwet(car) :- parent(carol,george).\nsunny :- wet(car).\ncold :- sunny.\nowns(george,car) :- cold.\nwet(ball) :- owns(george,car).\nsunny :- wet(ball).\nlikes(bob,car) :- sunny.\nbig(pencil) :- likes(bob,car).\nsmall(pencil) :- big(pencil).\nbig(phone) :- small(pencil).\nenemy(carol,eve) :- big(phone).\nhot :- enemy(carol,eve).\nhappy(frank) :- hot.\ntall(frank) :- happy(frank).\nowns(frank,car) :- tall(frank).\nsibling(carol,dave) :- owns(frank,car).\nparent(alice,carol) :- sibling(carol,dave).\nlikes(george,ball) :- parent(alice,carol).\ntall(alice) :- likes(george,ball).\nfriend(dave,eve) :- tall(alice).\nsmall(book) :- friend(dave,eve).\nsmall(phone) :- small(book).\ndislikes(alice,phone) :- small(phone).\nsad(alice) :- dislikes(alice,phone).\ntall(carol) :- sad(alice).\nsunny :- tall(carol).\nparent(george,carol) :- owns(george,car), sad(alice).\ndislikes(frank,phone) :- sibling(eve,carol), hungry(eve), sad(george).\nsibling(eve,dave) :- tall(alice), hot, cold.\nfriend(eve,alice) :- wet(phone), small(apple).\ndislikes(eve,pencil).\nfriend(george,carol).\nowns(carol,ball).\ndislikes(george,ball).\nfriend(eve,george).",
    "natural language": "You are given the following rules:\nIf george owns pencil, then it is cold.\nIf it is cold, then bob is an enemy of carol.\nIf bob is an enemy of carol, then carol is an enemy of bob.\nIf carol is an enemy of bob, then carol is a parent of george.\nIf carol is a parent of george, then car is wet.\nIf car is wet, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then george owns car.\nIf george owns car, then ball is wet.\nIf ball is wet, then it is sunny.\nIf it is sunny, then bob likes car.\nIf bob likes car, then pencil is big.\nIf pencil is big, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then carol is an enemy of eve.\nIf carol is an enemy of eve, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then frank is tall.\nIf frank is tall, then frank owns car.\nIf frank owns car, then carol is a sibling of dave.\nIf carol is a sibling of dave, then alice is a parent of carol.\nIf alice is a parent of carol, then george likes ball.\nIf george likes ball, then alice is tall.\nIf alice is tall, then dave is a friend of eve.\nIf dave is a friend of eve, then book is small.\nIf book is small, then phone is small.\nIf phone is small, then alice dislikes phone.\nIf alice dislikes phone, then alice is sad.\nIf alice is sad, then carol is tall.\nIf carol is tall, then it is sunny.\nIf george owns car and alice is sad, then george is a parent of carol.\nIf eve is a sibling of carol and eve is hungry and george is sad, then frank dislikes phone.\nIf alice is tall and it is hot and it is cold, then eve is a sibling of dave.\nIf phone is wet and apple is small, then eve is a friend of alice.\n\nAnd the following facts:\neve dislikes pencil.\ngeorge is a friend of carol.\ncarol owns ball.\ngeorge dislikes ball.\neve is a friend of george.\n\nQUESTION:\nCould eve dislikes pencil explain dave is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(dave,eve)",
      "non_explanation": "dislikes(eve,pencil)"
    }
  },
  {
    "q": "dislikes(george,ball).",
    "c": "cold :- owns(george,pencil).\nenemy(bob,carol) :- cold.\nenemy(carol,bob) :- enemy(bob,carol).\nparent(carol,george) :- enemy(carol,bob).\nwet(car) :- parent(carol,george).\nsunny :- wet(car).\ncold :- sunny.\nowns(george,car) :- cold.\nwet(ball) :- owns(george,car).\nsunny :- wet(ball).\nlikes(bob,car) :- sunny.\nbig(pencil) :- likes(bob,car).\nsmall(pencil) :- big(pencil).\nbig(phone) :- small(pencil).\nenemy(carol,eve) :- big(phone).\nhot :- enemy(carol,eve).\nhappy(frank) :- hot.\ntall(frank) :- happy(frank).\nowns(frank,car) :- tall(frank).\nsibling(carol,dave) :- owns(frank,car).\nparent(alice,carol) :- sibling(carol,dave).\nlikes(george,ball) :- parent(alice,carol).\ntall(alice) :- likes(george,ball).\nfriend(dave,eve) :- tall(alice).\nsmall(book) :- friend(dave,eve).\nsmall(phone) :- small(book).\ndislikes(alice,phone) :- small(phone).\nsad(alice) :- dislikes(alice,phone).\ntall(carol) :- sad(alice).\nsunny :- tall(carol).\nparent(george,carol) :- owns(george,car), sad(alice).\ndislikes(frank,phone) :- sibling(eve,carol), hungry(eve), sad(george).\nsibling(eve,dave) :- tall(alice), hot, cold.\nfriend(eve,alice) :- wet(phone), small(apple).\ndislikes(eve,pencil).\nfriend(george,carol).\nowns(carol,ball).\ndislikes(george,ball).\nfriend(eve,george).",
    "natural language": "You are given the following rules:\nIf george owns pencil, then it is cold.\nIf it is cold, then bob is an enemy of carol.\nIf bob is an enemy of carol, then carol is an enemy of bob.\nIf carol is an enemy of bob, then carol is a parent of george.\nIf carol is a parent of george, then car is wet.\nIf car is wet, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then george owns car.\nIf george owns car, then ball is wet.\nIf ball is wet, then it is sunny.\nIf it is sunny, then bob likes car.\nIf bob likes car, then pencil is big.\nIf pencil is big, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then carol is an enemy of eve.\nIf carol is an enemy of eve, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then frank is tall.\nIf frank is tall, then frank owns car.\nIf frank owns car, then carol is a sibling of dave.\nIf carol is a sibling of dave, then alice is a parent of carol.\nIf alice is a parent of carol, then george likes ball.\nIf george likes ball, then alice is tall.\nIf alice is tall, then dave is a friend of eve.\nIf dave is a friend of eve, then book is small.\nIf book is small, then phone is small.\nIf phone is small, then alice dislikes phone.\nIf alice dislikes phone, then alice is sad.\nIf alice is sad, then carol is tall.\nIf carol is tall, then it is sunny.\nIf george owns car and alice is sad, then george is a parent of carol.\nIf eve is a sibling of carol and eve is hungry and george is sad, then frank dislikes phone.\nIf alice is tall and it is hot and it is cold, then eve is a sibling of dave.\nIf phone is wet and apple is small, then eve is a friend of alice.\n\nAnd the following facts:\neve dislikes pencil.\ngeorge is a friend of carol.\ncarol owns ball.\ngeorge dislikes ball.\neve is a friend of george.\n\nQUESTION:\nCould george dislikes ball explain dave is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(dave,eve)",
      "non_explanation": "dislikes(george,ball)"
    }
  },
  {
    "q": "owns(carol,ball).",
    "c": "cold :- owns(george,pencil).\nenemy(bob,carol) :- cold.\nenemy(carol,bob) :- enemy(bob,carol).\nparent(carol,george) :- enemy(carol,bob).\nwet(car) :- parent(carol,george).\nsunny :- wet(car).\ncold :- sunny.\nowns(george,car) :- cold.\nwet(ball) :- owns(george,car).\nsunny :- wet(ball).\nlikes(bob,car) :- sunny.\nbig(pencil) :- likes(bob,car).\nsmall(pencil) :- big(pencil).\nbig(phone) :- small(pencil).\nenemy(carol,eve) :- big(phone).\nhot :- enemy(carol,eve).\nhappy(frank) :- hot.\ntall(frank) :- happy(frank).\nowns(frank,car) :- tall(frank).\nsibling(carol,dave) :- owns(frank,car).\nparent(alice,carol) :- sibling(carol,dave).\nlikes(george,ball) :- parent(alice,carol).\ntall(alice) :- likes(george,ball).\nfriend(dave,eve) :- tall(alice).\nsmall(book) :- friend(dave,eve).\nsmall(phone) :- small(book).\ndislikes(alice,phone) :- small(phone).\nsad(alice) :- dislikes(alice,phone).\ntall(carol) :- sad(alice).\nsunny :- tall(carol).\nparent(george,carol) :- owns(george,car), sad(alice).\ndislikes(frank,phone) :- sibling(eve,carol), hungry(eve), sad(george).\nsibling(eve,dave) :- tall(alice), hot, cold.\nfriend(eve,alice) :- wet(phone), small(apple).\ndislikes(eve,pencil).\nfriend(george,carol).\nowns(carol,ball).\ndislikes(george,ball).\nfriend(eve,george).",
    "natural language": "You are given the following rules:\nIf george owns pencil, then it is cold.\nIf it is cold, then bob is an enemy of carol.\nIf bob is an enemy of carol, then carol is an enemy of bob.\nIf carol is an enemy of bob, then carol is a parent of george.\nIf carol is a parent of george, then car is wet.\nIf car is wet, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then george owns car.\nIf george owns car, then ball is wet.\nIf ball is wet, then it is sunny.\nIf it is sunny, then bob likes car.\nIf bob likes car, then pencil is big.\nIf pencil is big, then pencil is small.\nIf pencil is small, then phone is big.\nIf phone is big, then carol is an enemy of eve.\nIf carol is an enemy of eve, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then frank is tall.\nIf frank is tall, then frank owns car.\nIf frank owns car, then carol is a sibling of dave.\nIf carol is a sibling of dave, then alice is a parent of carol.\nIf alice is a parent of carol, then george likes ball.\nIf george likes ball, then alice is tall.\nIf alice is tall, then dave is a friend of eve.\nIf dave is a friend of eve, then book is small.\nIf book is small, then phone is small.\nIf phone is small, then alice dislikes phone.\nIf alice dislikes phone, then alice is sad.\nIf alice is sad, then carol is tall.\nIf carol is tall, then it is sunny.\nIf george owns car and alice is sad, then george is a parent of carol.\nIf eve is a sibling of carol and eve is hungry and george is sad, then frank dislikes phone.\nIf alice is tall and it is hot and it is cold, then eve is a sibling of dave.\nIf phone is wet and apple is small, then eve is a friend of alice.\n\nAnd the following facts:\neve dislikes pencil.\ngeorge is a friend of carol.\ncarol owns ball.\ngeorge dislikes ball.\neve is a friend of george.\n\nQUESTION:\nCould carol owns ball explain dave is a friend of eve?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(dave,eve)",
      "non_explanation": "owns(carol,ball)"
    }
  },
  {
    "q": "happy(bob).",
    "c": "hot :- happy(bob).\nhappy(george) :- hot.\nwet(ball) :- happy(george).\nbig(apple) :- wet(ball).\nsmall(ball) :- big(apple).\ncold :- small(ball).\nsunny :- cold.\ntall(alice) :- sunny.\nsibling(eve,dave) :- tall(alice).\ntall(dave) :- sibling(eve,dave).\nlikes(bob,car) :- tall(dave).\nsibling(frank,george) :- likes(bob,car).\nowns(alice,apple) :- sibling(frank,george).\ncold :- owns(alice,apple).\nbig(book) :- cold.\nhappy(bob) :- big(book).\ncold :- happy(bob).\nwet(book) :- cold.\nsunny :- wet(book).\nsibling(dave,bob) :- sunny.\nsmall(book) :- sibling(dave,bob).\nenemy(bob,eve) :- small(book).\nsmall(apple) :- enemy(bob,eve).\nhot :- small(apple).\nparent(frank,carol) :- hot.\nfriend(george,alice) :- parent(frank,carol).\ndislikes(alice,apple) :- friend(george,alice).\nhungry(carol) :- dislikes(alice,apple).\nfriend(eve,george) :- hungry(carol).\nparent(carol,bob) :- friend(eve,george).\ncold :- wet(pencil).\nsunny :- dislikes(carol,phone).\ntall(george) :- enemy(george,frank).\nsunny :- small(phone), small(ball).\nparent(eve,frank).\nfriend(george,frank).\ntall(carol).\nowns(alice,car).\nenemy(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob is happy, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then ball is wet.\nIf ball is wet, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then alice is tall.\nIf alice is tall, then eve is a sibling of dave.\nIf eve is a sibling of dave, then dave is tall.\nIf dave is tall, then bob likes car.\nIf bob likes car, then frank is a sibling of george.\nIf frank is a sibling of george, then alice owns apple.\nIf alice owns apple, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then dave is a sibling of bob.\nIf dave is a sibling of bob, then book is small.\nIf book is small, then bob is an enemy of eve.\nIf bob is an enemy of eve, then apple is small.\nIf apple is small, then it is hot.\nIf it is hot, then frank is a parent of carol.\nIf frank is a parent of carol, then george is a friend of alice.\nIf george is a friend of alice, then alice dislikes apple.\nIf alice dislikes apple, then carol is hungry.\nIf carol is hungry, then eve is a friend of george.\nIf eve is a friend of george, then carol is a parent of bob.\nIf pencil is wet, then it is cold.\nIf carol dislikes phone, then it is sunny.\nIf george is an enemy of frank, then george is tall.\nIf phone is small and ball is small, then it is sunny.\n\nAnd the following facts:\neve is a parent of frank.\ngeorge is a friend of frank.\ncarol is tall.\nalice owns car.\nbob is an enemy of frank.\n\nQUESTION:\nCould bob is happy explain eve is a friend of george?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 6,
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(eve,george)",
      "explanation": "happy(bob)"
    }
  },
  {
    "q": "owns(alice,car).",
    "c": "hot :- happy(bob).\nhappy(george) :- hot.\nwet(ball) :- happy(george).\nbig(apple) :- wet(ball).\nsmall(ball) :- big(apple).\ncold :- small(ball).\nsunny :- cold.\ntall(alice) :- sunny.\nsibling(eve,dave) :- tall(alice).\ntall(dave) :- sibling(eve,dave).\nlikes(bob,car) :- tall(dave).\nsibling(frank,george) :- likes(bob,car).\nowns(alice,apple) :- sibling(frank,george).\ncold :- owns(alice,apple).\nbig(book) :- cold.\nhappy(bob) :- big(book).\ncold :- happy(bob).\nwet(book) :- cold.\nsunny :- wet(book).\nsibling(dave,bob) :- sunny.\nsmall(book) :- sibling(dave,bob).\nenemy(bob,eve) :- small(book).\nsmall(apple) :- enemy(bob,eve).\nhot :- small(apple).\nparent(frank,carol) :- hot.\nfriend(george,alice) :- parent(frank,carol).\ndislikes(alice,apple) :- friend(george,alice).\nhungry(carol) :- dislikes(alice,apple).\nfriend(eve,george) :- hungry(carol).\nparent(carol,bob) :- friend(eve,george).\ncold :- wet(pencil).\nsunny :- dislikes(carol,phone).\ntall(george) :- enemy(george,frank).\nsunny :- small(phone), small(ball).\nparent(eve,frank).\nfriend(george,frank).\ntall(carol).\nowns(alice,car).\nenemy(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob is happy, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then ball is wet.\nIf ball is wet, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then alice is tall.\nIf alice is tall, then eve is a sibling of dave.\nIf eve is a sibling of dave, then dave is tall.\nIf dave is tall, then bob likes car.\nIf bob likes car, then frank is a sibling of george.\nIf frank is a sibling of george, then alice owns apple.\nIf alice owns apple, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then dave is a sibling of bob.\nIf dave is a sibling of bob, then book is small.\nIf book is small, then bob is an enemy of eve.\nIf bob is an enemy of eve, then apple is small.\nIf apple is small, then it is hot.\nIf it is hot, then frank is a parent of carol.\nIf frank is a parent of carol, then george is a friend of alice.\nIf george is a friend of alice, then alice dislikes apple.\nIf alice dislikes apple, then carol is hungry.\nIf carol is hungry, then eve is a friend of george.\nIf eve is a friend of george, then carol is a parent of bob.\nIf pencil is wet, then it is cold.\nIf carol dislikes phone, then it is sunny.\nIf george is an enemy of frank, then george is tall.\nIf phone is small and ball is small, then it is sunny.\n\nAnd the following facts:\neve is a parent of frank.\ngeorge is a friend of frank.\ncarol is tall.\nalice owns car.\nbob is an enemy of frank.\n\nQUESTION:\nCould alice owns car explain eve is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(eve,george)",
      "non_explanation": "owns(alice,car)"
    }
  },
  {
    "q": "tall(carol).",
    "c": "hot :- happy(bob).\nhappy(george) :- hot.\nwet(ball) :- happy(george).\nbig(apple) :- wet(ball).\nsmall(ball) :- big(apple).\ncold :- small(ball).\nsunny :- cold.\ntall(alice) :- sunny.\nsibling(eve,dave) :- tall(alice).\ntall(dave) :- sibling(eve,dave).\nlikes(bob,car) :- tall(dave).\nsibling(frank,george) :- likes(bob,car).\nowns(alice,apple) :- sibling(frank,george).\ncold :- owns(alice,apple).\nbig(book) :- cold.\nhappy(bob) :- big(book).\ncold :- happy(bob).\nwet(book) :- cold.\nsunny :- wet(book).\nsibling(dave,bob) :- sunny.\nsmall(book) :- sibling(dave,bob).\nenemy(bob,eve) :- small(book).\nsmall(apple) :- enemy(bob,eve).\nhot :- small(apple).\nparent(frank,carol) :- hot.\nfriend(george,alice) :- parent(frank,carol).\ndislikes(alice,apple) :- friend(george,alice).\nhungry(carol) :- dislikes(alice,apple).\nfriend(eve,george) :- hungry(carol).\nparent(carol,bob) :- friend(eve,george).\ncold :- wet(pencil).\nsunny :- dislikes(carol,phone).\ntall(george) :- enemy(george,frank).\nsunny :- small(phone), small(ball).\nparent(eve,frank).\nfriend(george,frank).\ntall(carol).\nowns(alice,car).\nenemy(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob is happy, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then ball is wet.\nIf ball is wet, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then alice is tall.\nIf alice is tall, then eve is a sibling of dave.\nIf eve is a sibling of dave, then dave is tall.\nIf dave is tall, then bob likes car.\nIf bob likes car, then frank is a sibling of george.\nIf frank is a sibling of george, then alice owns apple.\nIf alice owns apple, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then dave is a sibling of bob.\nIf dave is a sibling of bob, then book is small.\nIf book is small, then bob is an enemy of eve.\nIf bob is an enemy of eve, then apple is small.\nIf apple is small, then it is hot.\nIf it is hot, then frank is a parent of carol.\nIf frank is a parent of carol, then george is a friend of alice.\nIf george is a friend of alice, then alice dislikes apple.\nIf alice dislikes apple, then carol is hungry.\nIf carol is hungry, then eve is a friend of george.\nIf eve is a friend of george, then carol is a parent of bob.\nIf pencil is wet, then it is cold.\nIf carol dislikes phone, then it is sunny.\nIf george is an enemy of frank, then george is tall.\nIf phone is small and ball is small, then it is sunny.\n\nAnd the following facts:\neve is a parent of frank.\ngeorge is a friend of frank.\ncarol is tall.\nalice owns car.\nbob is an enemy of frank.\n\nQUESTION:\nCould carol is tall explain eve is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(eve,george)",
      "non_explanation": "tall(carol)"
    }
  },
  {
    "q": "friend(george,frank).",
    "c": "hot :- happy(bob).\nhappy(george) :- hot.\nwet(ball) :- happy(george).\nbig(apple) :- wet(ball).\nsmall(ball) :- big(apple).\ncold :- small(ball).\nsunny :- cold.\ntall(alice) :- sunny.\nsibling(eve,dave) :- tall(alice).\ntall(dave) :- sibling(eve,dave).\nlikes(bob,car) :- tall(dave).\nsibling(frank,george) :- likes(bob,car).\nowns(alice,apple) :- sibling(frank,george).\ncold :- owns(alice,apple).\nbig(book) :- cold.\nhappy(bob) :- big(book).\ncold :- happy(bob).\nwet(book) :- cold.\nsunny :- wet(book).\nsibling(dave,bob) :- sunny.\nsmall(book) :- sibling(dave,bob).\nenemy(bob,eve) :- small(book).\nsmall(apple) :- enemy(bob,eve).\nhot :- small(apple).\nparent(frank,carol) :- hot.\nfriend(george,alice) :- parent(frank,carol).\ndislikes(alice,apple) :- friend(george,alice).\nhungry(carol) :- dislikes(alice,apple).\nfriend(eve,george) :- hungry(carol).\nparent(carol,bob) :- friend(eve,george).\ncold :- wet(pencil).\nsunny :- dislikes(carol,phone).\ntall(george) :- enemy(george,frank).\nsunny :- small(phone), small(ball).\nparent(eve,frank).\nfriend(george,frank).\ntall(carol).\nowns(alice,car).\nenemy(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob is happy, then it is hot.\nIf it is hot, then george is happy.\nIf george is happy, then ball is wet.\nIf ball is wet, then apple is big.\nIf apple is big, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then alice is tall.\nIf alice is tall, then eve is a sibling of dave.\nIf eve is a sibling of dave, then dave is tall.\nIf dave is tall, then bob likes car.\nIf bob likes car, then frank is a sibling of george.\nIf frank is a sibling of george, then alice owns apple.\nIf alice owns apple, then it is cold.\nIf it is cold, then book is big.\nIf book is big, then bob is happy.\nIf bob is happy, then it is cold.\nIf it is cold, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then dave is a sibling of bob.\nIf dave is a sibling of bob, then book is small.\nIf book is small, then bob is an enemy of eve.\nIf bob is an enemy of eve, then apple is small.\nIf apple is small, then it is hot.\nIf it is hot, then frank is a parent of carol.\nIf frank is a parent of carol, then george is a friend of alice.\nIf george is a friend of alice, then alice dislikes apple.\nIf alice dislikes apple, then carol is hungry.\nIf carol is hungry, then eve is a friend of george.\nIf eve is a friend of george, then carol is a parent of bob.\nIf pencil is wet, then it is cold.\nIf carol dislikes phone, then it is sunny.\nIf george is an enemy of frank, then george is tall.\nIf phone is small and ball is small, then it is sunny.\n\nAnd the following facts:\neve is a parent of frank.\ngeorge is a friend of frank.\ncarol is tall.\nalice owns car.\nbob is an enemy of frank.\n\nQUESTION:\nCould george is a friend of frank explain eve is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 6,
      "reasoning_type": "abduction",
      "conclusion": "friend(eve,george)",
      "non_explanation": "friend(george,frank)"
    }
  },
  {
    "q": "wet(phone).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nwet(phone).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nphone is wet.\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nIs phone is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(ball).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nwet(phone).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nphone is wet.\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nIs ball is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,phone).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nwet(phone).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nphone is wet.\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nIs dave owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,alice).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nwet(phone).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nphone is wet.\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nIs dave is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,george).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nwet(phone).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following information:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nphone is wet.\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nIs eve is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(phone).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following rules:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nCould phone is wet explain carol likes car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(carol,car)",
      "explanation": "wet(phone)"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following rules:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nCould eve is hungry explain carol likes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(carol,car)",
      "non_explanation": "hungry(eve)"
    }
  },
  {
    "q": "small(ball).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following rules:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nCould ball is small explain carol likes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(carol,car)",
      "non_explanation": "small(ball)"
    }
  },
  {
    "q": "owns(frank,book).",
    "c": "likes(carol,car) :- wet(phone).\nsad(eve) :- sad(eve).\nsad(frank) :- sad(bob), small(car), cold.\nsad(bob) :- dislikes(eve,ball), cold, hungry(carol).\nenemy(frank,george) :- enemy(bob,dave), big(apple).\nenemy(alice,bob) :- happy(frank), sibling(frank,george).\nfriend(frank,george) :- sunny, big(phone).\nfriend(carol,frank) :- wet(pencil), dislikes(eve,book), small(pencil).\nparent(alice,dave) :- hot, parent(george,dave).\nparent(dave,frank) :- parent(bob,george), hot.\nlikes(bob,book) :- small(ball).\nlikes(alice,pencil) :- likes(bob,car), parent(carol,eve), sunny.\nbig(phone) :- big(book), sibling(dave,eve), big(apple).\nbig(ball) :- owns(george,phone), parent(frank,bob), happy(eve).\nsibling(carol,bob) :- cold, sibling(alice,bob), sibling(bob,george).\nsibling(carol,bob) :- friend(eve,carol), owns(bob,pencil), sibling(alice,dave).\ncold :- parent(alice,eve), parent(alice,frank), sunny.\ncold :- hungry(george), big(pencil), sad(dave).\ntall(george) :- small(phone), tall(george).\nenemy(carol,george) :- happy(alice), likes(alice,pencil).\nenemy(bob,bob) :- big(book), big(apple).\ntall(dave) :- sibling(george,eve).\nparent(bob,bob) :- hot, big(apple), enemy(carol,eve).\nsibling(carol,george) :- big(pencil), happy(bob), friend(carol,alice).\nhot :- tall(frank), hot.\ntall(alice) :- dislikes(dave,phone), hungry(frank).\nhot :- parent(eve,alice), hot, likes(alice,apple).\ncold :- owns(eve,pencil).\nwet(book) :- sunny.\nwet(car) :- big(apple), friend(frank,eve), wet(phone).\nsunny :- hot, sibling(alice,george), sunny.\nsunny :- small(car).\ntall(george) :- sad(carol), small(book).\nparent(alice,frank) :- owns(george,car).\nsmall(ball).\nowns(frank,book).\nhungry(eve).\nenemy(carol,alice).\nsibling(eve,carol).\nsibling(carol,alice).\nparent(bob,dave).\ndislikes(george,phone).",
    "natural language": "You are given the following rules:\nIf phone is wet, then carol likes car.\nIf eve is sad, then eve is sad.\nIf bob is sad and car is small and it is cold, then frank is sad.\nIf eve dislikes ball and it is cold and carol is hungry, then bob is sad.\nIf bob is an enemy of dave and apple is big, then frank is an enemy of george.\nIf frank is happy and frank is a sibling of george, then alice is an enemy of bob.\nIf it is sunny and phone is big, then frank is a friend of george.\nIf pencil is wet and eve dislikes book and pencil is small, then carol is a friend of frank.\nIf it is hot and george is a parent of dave, then alice is a parent of dave.\nIf bob is a parent of george and it is hot, then dave is a parent of frank.\nIf ball is small, then bob likes book.\nIf bob likes car and carol is a parent of eve and it is sunny, then alice likes pencil.\nIf book is big and dave is a sibling of eve and apple is big, then phone is big.\nIf george owns phone and frank is a parent of bob and eve is happy, then ball is big.\nIf it is cold and alice is a sibling of bob and bob is a sibling of george, then carol is a sibling of bob.\nIf eve is a friend of carol and bob owns pencil and alice is a sibling of dave, then carol is a sibling of bob.\nIf alice is a parent of eve and alice is a parent of frank and it is sunny, then it is cold.\nIf george is hungry and pencil is big and dave is sad, then it is cold.\nIf phone is small and george is tall, then george is tall.\nIf alice is happy and alice likes pencil, then carol is an enemy of george.\nIf book is big and apple is big, then bob is an enemy of bob.\nIf george is a sibling of eve, then dave is tall.\nIf it is hot and apple is big and carol is an enemy of eve, then bob is a parent of bob.\nIf pencil is big and bob is happy and carol is a friend of alice, then carol is a sibling of george.\nIf frank is tall and it is hot, then it is hot.\nIf dave dislikes phone and frank is hungry, then alice is tall.\nIf eve is a parent of alice and it is hot and alice likes apple, then it is hot.\nIf eve owns pencil, then it is cold.\nIf it is sunny, then book is wet.\nIf apple is big and frank is a friend of eve and phone is wet, then car is wet.\nIf it is hot and alice is a sibling of george and it is sunny, then it is sunny.\nIf car is small, then it is sunny.\nIf carol is sad and book is small, then george is tall.\nIf george owns car, then alice is a parent of frank.\n\nAnd the following facts:\nball is small.\nfrank owns book.\neve is hungry.\ncarol is an enemy of alice.\neve is a sibling of carol.\ncarol is a sibling of alice.\nbob is a parent of dave.\ngeorge dislikes phone.\n\nQUESTION:\nCould frank owns book explain carol likes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(carol,car)",
      "non_explanation": "owns(frank,book)"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(dave,alice).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\ndave is a parent of alice.\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nIs dave is a parent of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,eve).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(dave,alice).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\ndave is a parent of alice.\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nIs frank is a parent of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(dave,alice).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\ndave is a parent of alice.\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nIs george is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,frank).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(dave,alice).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\ndave is a parent of alice.\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nIs george is a sibling of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,eve).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(dave,alice).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following information:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\ndave is a parent of alice.\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nIs george is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,alice).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following rules:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nCould dave is a parent of alice explain frank dislikes pencil?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,pencil)",
      "explanation": "parent(dave,alice)"
    }
  },
  {
    "q": "likes(frank,ball).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following rules:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nCould frank likes ball explain frank dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,pencil)",
      "non_explanation": "likes(frank,ball)"
    }
  },
  {
    "q": "parent(frank,eve).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following rules:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nCould frank is a parent of eve explain frank dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,pencil)",
      "non_explanation": "parent(frank,eve)"
    }
  },
  {
    "q": "dislikes(bob,car).",
    "c": "dislikes(frank,pencil) :- parent(dave,alice).\ntall(dave) :- sad(dave).\ntall(dave) :- hot, parent(eve,alice), friend(alice,bob).\nenemy(george,alice) :- friend(george,carol), owns(dave,apple).\nenemy(alice,carol) :- big(book), hungry(bob), tall(george).\nwet(book) :- big(ball), enemy(alice,eve).\nlikes(dave,book) :- hungry(eve), sad(frank).\nsad(dave) :- wet(pencil).\nwet(car) :- parent(frank,frank).\nwet(car) :- tall(eve), big(car).\nlikes(eve,book) :- likes(alice,pencil), likes(george,book).\nsad(george) :- sad(george).\nowns(carol,phone) :- tall(eve).\nowns(carol,apple) :- sad(dave), small(book).\ntall(george) :- likes(george,ball), parent(carol,bob), owns(bob,ball).\nsunny :- happy(eve).\nlikes(bob,car) :- owns(alice,pencil), tall(bob), cold.\nsunny :- parent(eve,dave).\nhappy(alice) :- sad(frank), sibling(bob,carol), sad(eve).\nhappy(george) :- owns(eve,ball), small(phone).\nowns(eve,book) :- parent(dave,carol), likes(george,book), small(car).\ncold :- tall(george), friend(dave,eve).\ncold :- wet(pencil), wet(car).\nenemy(frank,george) :- tall(george), small(pencil), big(apple).\nwet(car) :- big(car), dislikes(eve,book).\nowns(eve,apple) :- likes(eve,ball), owns(eve,book).\ncold :- sunny, small(phone), sunny.\nwet(phone) :- parent(eve,frank).\nfriend(alice,carol) :- sunny, sad(carol).\nfriend(carol,eve) :- enemy(alice,carol), sunny.\nbig(car) :- happy(frank), cold, dislikes(bob,pencil).\nbig(car) :- wet(book), hungry(eve).\nowns(eve,phone) :- sibling(eve,george), hot.\nsibling(frank,carol) :- enemy(frank,bob), enemy(bob,dave).\nparent(frank,bob).\nparent(frank,eve).\nlikes(frank,ball).\ndislikes(bob,car).\nwet(book).\nlikes(alice,phone).\nenemy(frank,bob).\nsibling(eve,george).",
    "natural language": "You are given the following rules:\nIf dave is a parent of alice, then frank dislikes pencil.\nIf dave is sad, then dave is tall.\nIf it is hot and eve is a parent of alice and alice is a friend of bob, then dave is tall.\nIf george is a friend of carol and dave owns apple, then george is an enemy of alice.\nIf book is big and bob is hungry and george is tall, then alice is an enemy of carol.\nIf ball is big and alice is an enemy of eve, then book is wet.\nIf eve is hungry and frank is sad, then dave likes book.\nIf pencil is wet, then dave is sad.\nIf frank is a parent of frank, then car is wet.\nIf eve is tall and car is big, then car is wet.\nIf alice likes pencil and george likes book, then eve likes book.\nIf george is sad, then george is sad.\nIf eve is tall, then carol owns phone.\nIf dave is sad and book is small, then carol owns apple.\nIf george likes ball and carol is a parent of bob and bob owns ball, then george is tall.\nIf eve is happy, then it is sunny.\nIf alice owns pencil and bob is tall and it is cold, then bob likes car.\nIf eve is a parent of dave, then it is sunny.\nIf frank is sad and bob is a sibling of carol and eve is sad, then alice is happy.\nIf eve owns ball and phone is small, then george is happy.\nIf dave is a parent of carol and george likes book and car is small, then eve owns book.\nIf george is tall and dave is a friend of eve, then it is cold.\nIf pencil is wet and car is wet, then it is cold.\nIf george is tall and pencil is small and apple is big, then frank is an enemy of george.\nIf car is big and eve dislikes book, then car is wet.\nIf eve likes ball and eve owns book, then eve owns apple.\nIf it is sunny and phone is small and it is sunny, then it is cold.\nIf eve is a parent of frank, then phone is wet.\nIf it is sunny and carol is sad, then alice is a friend of carol.\nIf alice is an enemy of carol and it is sunny, then carol is a friend of eve.\nIf frank is happy and it is cold and bob dislikes pencil, then car is big.\nIf book is wet and eve is hungry, then car is big.\nIf eve is a sibling of george and it is hot, then eve owns phone.\nIf frank is an enemy of bob and bob is an enemy of dave, then frank is a sibling of carol.\n\nAnd the following facts:\nfrank is a parent of bob.\nfrank is a parent of eve.\nfrank likes ball.\nbob dislikes car.\nbook is wet.\nalice likes phone.\nfrank is an enemy of bob.\neve is a sibling of george.\n\nQUESTION:\nCould bob dislikes car explain frank dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,pencil)",
      "non_explanation": "dislikes(bob,car)"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nsmall(car).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following information:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\ncar is small.\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nIs alice is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(bob,apple).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nsmall(car).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following information:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\ncar is small.\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nIs bob owns apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(alice,phone).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nsmall(car).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following information:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\ncar is small.\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nIs alice owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,eve).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nsmall(car).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following information:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\ncar is small.\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nIs frank is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,carol).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nsmall(car).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following information:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\ncar is small.\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nIs george is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(car).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following rules:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nCould car is small explain ball is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(ball)",
      "explanation": "small(car)"
    }
  },
  {
    "q": "dislikes(eve,book).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following rules:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nCould eve dislikes book explain ball is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(ball)",
      "non_explanation": "dislikes(eve,book)"
    }
  },
  {
    "q": "sibling(dave,frank).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following rules:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nCould dave is a sibling of frank explain ball is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(ball)",
      "non_explanation": "sibling(dave,frank)"
    }
  },
  {
    "q": "dislikes(frank,pencil).",
    "c": "big(ball) :- small(car).\nbig(ball) :- big(ball).\nsmall(phone) :- big(ball).\nsibling(carol,frank) :- small(phone).\nhungry(alice) :- sibling(carol,frank).\nhot :- hot, hot, wet(phone).\nenemy(bob,carol) :- owns(george,car), enemy(dave,eve).\nhot :- big(book).\nhappy(bob) :- owns(eve,pencil), hungry(dave).\nenemy(bob,eve) :- sad(eve), enemy(george,george).\nhappy(alice) :- dislikes(bob,phone).\nfriend(frank,george) :- hungry(eve).\nfriend(dave,eve) :- small(book).\ntall(george) :- enemy(dave,eve).\ntall(frank) :- tall(alice).\nwet(pencil) :- wet(pencil), sunny, cold.\nwet(car) :- wet(ball), friend(frank,frank).\nsad(eve) :- sad(dave), likes(bob,car), sad(george).\nwet(apple) :- wet(apple).\nsad(frank) :- sad(eve).\nfriend(alice,eve) :- big(pencil).\nsunny :- sad(frank).\nhappy(eve) :- sunny, hungry(bob).\nsunny :- wet(car).\nsad(alice) :- friend(george,george), friend(george,eve), sad(dave).\nhappy(alice) :- happy(george), sad(bob), happy(eve).\ntall(dave) :- tall(dave).\nbig(phone) :- tall(dave), big(apple), happy(eve).\nbig(car) :- hungry(dave).\nsibling(george,bob) :- sibling(alice,frank), sibling(bob,george).\nsibling(dave,dave) :- tall(bob), sibling(eve,bob).\nhungry(bob) :- friend(eve,eve).\nfriend(george,eve) :- friend(bob,george), sunny, wet(phone).\ntall(bob) :- small(book).\nhappy(frank).\nsibling(dave,frank).\ndislikes(frank,pencil).\ndislikes(eve,book).\nsmall(phone).\nhot.\nowns(bob,apple).\nsad(george).",
    "natural language": "You are given the following rules:\nIf car is small, then ball is big.\nIf ball is big, then ball is big.\nIf ball is big, then phone is small.\nIf phone is small, then carol is a sibling of frank.\nIf carol is a sibling of frank, then alice is hungry.\nIf it is hot and it is hot and phone is wet, then it is hot.\nIf george owns car and dave is an enemy of eve, then bob is an enemy of carol.\nIf book is big, then it is hot.\nIf eve owns pencil and dave is hungry, then bob is happy.\nIf eve is sad and george is an enemy of george, then bob is an enemy of eve.\nIf bob dislikes phone, then alice is happy.\nIf eve is hungry, then frank is a friend of george.\nIf book is small, then dave is a friend of eve.\nIf dave is an enemy of eve, then george is tall.\nIf alice is tall, then frank is tall.\nIf pencil is wet and it is sunny and it is cold, then pencil is wet.\nIf ball is wet and frank is a friend of frank, then car is wet.\nIf dave is sad and bob likes car and george is sad, then eve is sad.\nIf apple is wet, then apple is wet.\nIf eve is sad, then frank is sad.\nIf pencil is big, then alice is a friend of eve.\nIf frank is sad, then it is sunny.\nIf it is sunny and bob is hungry, then eve is happy.\nIf car is wet, then it is sunny.\nIf george is a friend of george and george is a friend of eve and dave is sad, then alice is sad.\nIf george is happy and bob is sad and eve is happy, then alice is happy.\nIf dave is tall, then dave is tall.\nIf dave is tall and apple is big and eve is happy, then phone is big.\nIf dave is hungry, then car is big.\nIf alice is a sibling of frank and bob is a sibling of george, then george is a sibling of bob.\nIf bob is tall and eve is a sibling of bob, then dave is a sibling of dave.\nIf eve is a friend of eve, then bob is hungry.\nIf bob is a friend of george and it is sunny and phone is wet, then george is a friend of eve.\nIf book is small, then bob is tall.\n\nAnd the following facts:\nfrank is happy.\ndave is a sibling of frank.\nfrank dislikes pencil.\neve dislikes book.\nphone is small.\nit is hot.\nbob owns apple.\ngeorge is sad.\n\nQUESTION:\nCould frank dislikes pencil explain ball is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(ball)",
      "non_explanation": "dislikes(frank,pencil)"
    }
  },
  {
    "q": "hungry(eve).",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nhot.\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nit is hot.\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nIs eve is hungry true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,ball).",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nhot.\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nit is hot.\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nIs george dislikes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(carol).",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nhot.\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nit is hot.\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nIs carol is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(frank,george).",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nhot.\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nit is hot.\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nIs frank is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,apple).",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nhot.\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following information:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nit is hot.\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nIs dave owns apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following rules:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nCould it is hot explain eve is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "hungry(eve)",
      "explanation": "hot"
    }
  },
  {
    "q": "owns(bob,ball).",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following rules:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nCould bob owns ball explain eve is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "hungry(eve)",
      "non_explanation": "owns(bob,ball)"
    }
  },
  {
    "q": "small(pencil).",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following rules:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nCould pencil is small explain eve is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "hungry(eve)",
      "non_explanation": "small(pencil)"
    }
  },
  {
    "q": "sibling(carol,bob).",
    "c": "hungry(eve) :- hot.\nlikes(bob,book) :- hungry(eve).\ndislikes(carol,book) :- likes(bob,book).\ndislikes(george,ball) :- dislikes(carol,book).\nsmall(car) :- dislikes(george,ball).\nhungry(frank) :- sibling(bob,alice), friend(carol,carol), owns(bob,phone).\nhungry(george) :- happy(dave), likes(frank,ball).\nlikes(frank,car) :- cold, parent(frank,eve).\nwet(phone) :- sibling(george,alice).\nlikes(alice,car) :- enemy(eve,eve), enemy(bob,bob).\nhungry(eve) :- dislikes(eve,phone), small(ball).\nwet(book) :- small(ball), tall(eve), likes(frank,phone).\nsunny :- wet(book), sunny.\nsunny :- big(apple), likes(bob,phone), friend(dave,dave).\nhungry(eve) :- hungry(eve), sibling(carol,bob), hungry(george).\ncold :- sad(eve).\ncold :- likes(frank,car), sunny.\nparent(carol,george) :- friend(eve,bob), likes(george,pencil), sibling(eve,eve).\nfriend(bob,george) :- owns(dave,pencil).\nsibling(dave,carol) :- friend(carol,frank), big(car).\ncold :- likes(bob,pencil), sibling(carol,alice), owns(alice,book).\nparent(eve,george) :- friend(carol,carol).\ndislikes(george,ball) :- parent(george,bob).\nsibling(bob,eve) :- hot, wet(ball), hungry(frank).\ndislikes(dave,book) :- enemy(dave,carol), sad(bob).\nfriend(eve,bob) :- dislikes(frank,book), hungry(bob).\nsibling(dave,dave) :- hot, hungry(alice).\ncold :- sunny.\nsibling(frank,eve) :- sad(carol), friend(dave,eve), small(pencil).\nfriend(alice,alice) :- happy(bob), owns(dave,phone), parent(carol,carol).\nbig(pencil) :- hungry(dave), owns(eve,phone).\nbig(ball) :- friend(frank,alice).\nlikes(bob,pencil) :- wet(pencil).\nsad(eve) :- owns(alice,car), wet(pencil).\nlikes(alice,apple).\nsibling(carol,bob).\nowns(bob,ball).\nsmall(pencil).\nfriend(carol,george).\nenemy(carol,dave).\ndislikes(carol,car).\nenemy(eve,frank).",
    "natural language": "You are given the following rules:\nIf it is hot, then eve is hungry.\nIf eve is hungry, then bob likes book.\nIf bob likes book, then carol dislikes book.\nIf carol dislikes book, then george dislikes ball.\nIf george dislikes ball, then car is small.\nIf bob is a sibling of alice and carol is a friend of carol and bob owns phone, then frank is hungry.\nIf dave is happy and frank likes ball, then george is hungry.\nIf it is cold and frank is a parent of eve, then frank likes car.\nIf george is a sibling of alice, then phone is wet.\nIf eve is an enemy of eve and bob is an enemy of bob, then alice likes car.\nIf eve dislikes phone and ball is small, then eve is hungry.\nIf ball is small and eve is tall and frank likes phone, then book is wet.\nIf book is wet and it is sunny, then it is sunny.\nIf apple is big and bob likes phone and dave is a friend of dave, then it is sunny.\nIf eve is hungry and carol is a sibling of bob and george is hungry, then eve is hungry.\nIf eve is sad, then it is cold.\nIf frank likes car and it is sunny, then it is cold.\nIf eve is a friend of bob and george likes pencil and eve is a sibling of eve, then carol is a parent of george.\nIf dave owns pencil, then bob is a friend of george.\nIf carol is a friend of frank and car is big, then dave is a sibling of carol.\nIf bob likes pencil and carol is a sibling of alice and alice owns book, then it is cold.\nIf carol is a friend of carol, then eve is a parent of george.\nIf george is a parent of bob, then george dislikes ball.\nIf it is hot and ball is wet and frank is hungry, then bob is a sibling of eve.\nIf dave is an enemy of carol and bob is sad, then dave dislikes book.\nIf frank dislikes book and bob is hungry, then eve is a friend of bob.\nIf it is hot and alice is hungry, then dave is a sibling of dave.\nIf it is sunny, then it is cold.\nIf carol is sad and dave is a friend of eve and pencil is small, then frank is a sibling of eve.\nIf bob is happy and dave owns phone and carol is a parent of carol, then alice is a friend of alice.\nIf dave is hungry and eve owns phone, then pencil is big.\nIf frank is a friend of alice, then ball is big.\nIf pencil is wet, then bob likes pencil.\nIf alice owns car and pencil is wet, then eve is sad.\n\nAnd the following facts:\nalice likes apple.\ncarol is a sibling of bob.\nbob owns ball.\npencil is small.\ncarol is a friend of george.\ncarol is an enemy of dave.\ncarol dislikes car.\neve is an enemy of frank.\n\nQUESTION:\nCould carol is a sibling of bob explain eve is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "hungry(eve)",
      "non_explanation": "sibling(carol,bob)"
    }
  },
  {
    "q": "friend(carol,alice).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nlikes(bob,pencil).\nfriend(alice,bob).\nlikes(bob,pencil).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nbob likes pencil.\nalice is a friend of bob.\nbob likes pencil.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nIs carol is a friend of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(carol,book).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nlikes(bob,pencil).\nfriend(alice,bob).\nlikes(bob,pencil).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nbob likes pencil.\nalice is a friend of bob.\nbob likes pencil.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nIs carol likes book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nlikes(bob,pencil).\nfriend(alice,bob).\nlikes(bob,pencil).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nbob likes pencil.\nalice is a friend of bob.\nbob likes pencil.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nIs george is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,eve).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nlikes(bob,pencil).\nfriend(alice,bob).\nlikes(bob,pencil).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nbob likes pencil.\nalice is a friend of bob.\nbob likes pencil.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nIs frank is a parent of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,bob).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nlikes(bob,pencil).\nfriend(alice,bob).\nlikes(bob,pencil).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following information:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nbob likes pencil.\nalice is a friend of bob.\nbob likes pencil.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nIs eve is a parent of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,pencil).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nfriend(alice,bob).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nalice is a friend of bob.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nCould bob likes pencil explain eve is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sad(eve)",
      "explanation": "likes(bob,pencil)"
    }
  },
  {
    "q": "friend(carol,alice).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nfriend(alice,bob).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nalice is a friend of bob.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nCould carol is a friend of alice explain eve is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sad(eve)",
      "non_explanation": "friend(carol,alice)"
    }
  },
  {
    "q": "friend(alice,bob).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nfriend(alice,bob).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nalice is a friend of bob.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nCould alice is a friend of bob explain eve is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sad(eve)",
      "non_explanation": "friend(alice,bob)"
    }
  },
  {
    "q": "sad(bob).",
    "c": "sad(eve) :- likes(bob,pencil).\nhot :- sad(eve).\ntall(eve) :- hot.\nhungry(alice) :- tall(eve).\nowns(frank,car) :- hungry(alice).\ncold :- owns(frank,car).\nbig(pencil) :- cold.\nhot :- big(pencil).\ncold :- hot.\ndislikes(carol,phone) :- cold.\nwet(pencil) :- sibling(eve,frank), owns(george,apple), wet(phone).\nsunny :- sunny.\nparent(george,frank) :- parent(eve,carol), sad(eve), friend(eve,eve).\nsunny :- small(car).\nparent(dave,alice) :- hungry(bob), big(pencil), hungry(alice).\nlikes(george,car) :- likes(dave,pencil), likes(bob,apple).\nenemy(dave,carol) :- friend(eve,eve), enemy(carol,george).\nhappy(bob) :- enemy(alice,dave), happy(bob).\nhot :- likes(dave,ball), sad(alice), sad(bob).\nwet(apple) :- wet(apple), tall(dave), wet(ball).\ntall(carol) :- cold, dislikes(alice,ball).\nlikes(george,pencil) :- likes(bob,ball), likes(eve,ball), likes(dave,pencil).\nhappy(dave) :- friend(carol,eve), wet(ball), sunny.\ntall(dave) :- sunny.\nbig(ball) :- sad(carol), big(ball).\nparent(alice,carol) :- dislikes(dave,ball).\nenemy(eve,dave) :- enemy(frank,eve).\nhot :- wet(book), hot.\nbig(pencil) :- likes(carol,phone), big(ball).\ndislikes(dave,apple) :- dislikes(george,book).\nwet(phone) :- friend(eve,eve).\ndislikes(alice,phone) :- big(book), sad(alice).\nsmall(car) :- small(pencil).\ndislikes(frank,apple) :- cold, owns(alice,ball).\nfriend(alice,bob).\nfriend(carol,alice).\nbig(phone).\nsad(bob).\ndislikes(carol,ball).\ndislikes(george,pencil).\nlikes(carol,book).",
    "natural language": "You are given the following rules:\nIf bob likes pencil, then eve is sad.\nIf eve is sad, then it is hot.\nIf it is hot, then eve is tall.\nIf eve is tall, then alice is hungry.\nIf alice is hungry, then frank owns car.\nIf frank owns car, then it is cold.\nIf it is cold, then pencil is big.\nIf pencil is big, then it is hot.\nIf it is hot, then it is cold.\nIf it is cold, then carol dislikes phone.\nIf eve is a sibling of frank and george owns apple and phone is wet, then pencil is wet.\nIf it is sunny, then it is sunny.\nIf eve is a parent of carol and eve is sad and eve is a friend of eve, then george is a parent of frank.\nIf car is small, then it is sunny.\nIf bob is hungry and pencil is big and alice is hungry, then dave is a parent of alice.\nIf dave likes pencil and bob likes apple, then george likes car.\nIf eve is a friend of eve and carol is an enemy of george, then dave is an enemy of carol.\nIf alice is an enemy of dave and bob is happy, then bob is happy.\nIf dave likes ball and alice is sad and bob is sad, then it is hot.\nIf apple is wet and dave is tall and ball is wet, then apple is wet.\nIf it is cold and alice dislikes ball, then carol is tall.\nIf bob likes ball and eve likes ball and dave likes pencil, then george likes pencil.\nIf carol is a friend of eve and ball is wet and it is sunny, then dave is happy.\nIf it is sunny, then dave is tall.\nIf carol is sad and ball is big, then ball is big.\nIf dave dislikes ball, then alice is a parent of carol.\nIf frank is an enemy of eve, then eve is an enemy of dave.\nIf book is wet and it is hot, then it is hot.\nIf carol likes phone and ball is big, then pencil is big.\nIf george dislikes book, then dave dislikes apple.\nIf eve is a friend of eve, then phone is wet.\nIf book is big and alice is sad, then alice dislikes phone.\nIf pencil is small, then car is small.\nIf it is cold and alice owns ball, then frank dislikes apple.\n\nAnd the following facts:\nalice is a friend of bob.\ncarol is a friend of alice.\nphone is big.\nbob is sad.\ncarol dislikes ball.\ngeorge dislikes pencil.\ncarol likes book.\n\nQUESTION:\nCould bob is sad explain eve is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sad(eve)",
      "non_explanation": "sad(bob)"
    }
  },
  {
    "q": "owns(eve,book).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ntall(george).\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ngeorge is tall.\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nIs eve owns book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ntall(george).\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ngeorge is tall.\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nIs george is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(alice,dave).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ntall(george).\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ngeorge is tall.\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nIs alice is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(carol,dave).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ntall(george).\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ngeorge is tall.\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nIs carol is a parent of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ntall(george).\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following information:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ngeorge is tall.\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nIs eve is a sibling of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following rules:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nCould george is tall explain eve is a sibling of george?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,george)",
      "explanation": "tall(george)"
    }
  },
  {
    "q": "owns(eve,book).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following rules:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nCould eve owns book explain eve is a sibling of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,george)",
      "non_explanation": "owns(eve,book)"
    }
  },
  {
    "q": "parent(george,alice).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following rules:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nCould george is a parent of alice explain eve is a sibling of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,george)",
      "non_explanation": "parent(george,alice)"
    }
  },
  {
    "q": "dislikes(carol,car).",
    "c": "big(pencil) :- tall(george).\nsunny :- big(pencil).\nlikes(eve,book) :- sunny.\nhot :- likes(eve,book).\nsibling(eve,george) :- hot.\nsmall(ball) :- sibling(eve,george).\ntall(george) :- small(ball).\ntall(george) :- tall(george).\nsmall(ball) :- tall(george).\nfriend(eve,dave) :- small(ball).\ndislikes(alice,phone) :- happy(eve), enemy(dave,alice).\ndislikes(frank,book) :- tall(carol).\nhungry(alice) :- sad(frank), small(phone), big(ball).\nenemy(george,george) :- friend(dave,alice).\nhungry(george) :- happy(eve).\nsunny :- tall(dave).\nenemy(bob,eve) :- friend(carol,dave), parent(alice,george).\nsunny :- enemy(eve,frank), sunny.\ncold :- hot, hot.\ncold :- hot.\nenemy(dave,frank) :- wet(car).\nsibling(dave,alice) :- cold, likes(frank,car), owns(eve,book).\nsibling(dave,dave) :- enemy(eve,carol), sibling(bob,eve), hot.\nsmall(phone) :- hot, owns(alice,apple).\nsmall(phone) :- dislikes(eve,phone).\ndislikes(frank,apple) :- sad(frank).\nsunny :- hot, happy(bob).\nhungry(frank) :- dislikes(eve,ball), wet(car), sunny.\nbig(phone) :- likes(dave,ball), happy(frank).\nbig(car) :- tall(carol).\ndislikes(frank,apple) :- big(ball), tall(alice).\nsunny :- cold, dislikes(dave,ball).\nparent(dave,bob) :- likes(dave,book), hungry(bob).\nhungry(frank) :- cold.\ndislikes(carol,car).\nparent(george,alice).\nfriend(george,carol).\nowns(eve,book).\nlikes(dave,pencil).\nenemy(frank,carol).\nlikes(george,pencil).\nlikes(frank,ball).",
    "natural language": "You are given the following rules:\nIf george is tall, then pencil is big.\nIf pencil is big, then it is sunny.\nIf it is sunny, then eve likes book.\nIf eve likes book, then it is hot.\nIf it is hot, then eve is a sibling of george.\nIf eve is a sibling of george, then ball is small.\nIf ball is small, then george is tall.\nIf george is tall, then george is tall.\nIf george is tall, then ball is small.\nIf ball is small, then eve is a friend of dave.\nIf eve is happy and dave is an enemy of alice, then alice dislikes phone.\nIf carol is tall, then frank dislikes book.\nIf frank is sad and phone is small and ball is big, then alice is hungry.\nIf dave is a friend of alice, then george is an enemy of george.\nIf eve is happy, then george is hungry.\nIf dave is tall, then it is sunny.\nIf carol is a friend of dave and alice is a parent of george, then bob is an enemy of eve.\nIf eve is an enemy of frank and it is sunny, then it is sunny.\nIf it is hot and it is hot, then it is cold.\nIf it is hot, then it is cold.\nIf car is wet, then dave is an enemy of frank.\nIf it is cold and frank likes car and eve owns book, then dave is a sibling of alice.\nIf eve is an enemy of carol and bob is a sibling of eve and it is hot, then dave is a sibling of dave.\nIf it is hot and alice owns apple, then phone is small.\nIf eve dislikes phone, then phone is small.\nIf frank is sad, then frank dislikes apple.\nIf it is hot and bob is happy, then it is sunny.\nIf eve dislikes ball and car is wet and it is sunny, then frank is hungry.\nIf dave likes ball and frank is happy, then phone is big.\nIf carol is tall, then car is big.\nIf ball is big and alice is tall, then frank dislikes apple.\nIf it is cold and dave dislikes ball, then it is sunny.\nIf dave likes book and bob is hungry, then dave is a parent of bob.\nIf it is cold, then frank is hungry.\n\nAnd the following facts:\ncarol dislikes car.\ngeorge is a parent of alice.\ngeorge is a friend of carol.\neve owns book.\ndave likes pencil.\nfrank is an enemy of carol.\ngeorge likes pencil.\nfrank likes ball.\n\nQUESTION:\nCould carol dislikes car explain eve is a sibling of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sibling(eve,george)",
      "non_explanation": "dislikes(carol,car)"
    }
  },
  {
    "q": "wet(apple).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nwet(pencil).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\npencil is wet.\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(bob).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nwet(pencil).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\npencil is wet.\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nIs bob is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,apple).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nwet(pencil).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\npencil is wet.\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nIs eve dislikes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,eve).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nwet(pencil).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\npencil is wet.\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nIs george is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,george).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nwet(pencil).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following information:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\npencil is wet.\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nIs eve is a friend of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(pencil).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nCould pencil is wet explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "wet(pencil)"
    }
  },
  {
    "q": "friend(bob,dave).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nCould bob is a friend of dave explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "friend(bob,dave)"
    }
  },
  {
    "q": "parent(frank,george).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nCould frank is a parent of george explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "parent(frank,george)"
    }
  },
  {
    "q": "enemy(frank,carol).",
    "c": "big(book) :- wet(pencil).\nenemy(alice,bob) :- big(book).\nowns(bob,pencil) :- enemy(alice,bob).\ndislikes(dave,apple) :- owns(bob,pencil).\nenemy(bob,carol) :- dislikes(dave,apple).\nbig(phone) :- enemy(bob,carol).\nsmall(apple) :- big(phone).\nowns(frank,phone) :- small(apple).\nwet(apple) :- owns(frank,phone).\nhot :- wet(apple).\nhappy(frank) :- hot.\nowns(dave,car) :- happy(frank).\nsad(bob) :- owns(dave,car).\ncold :- sad(bob).\ndislikes(george,book) :- cold.\nsmall(car) :- dislikes(george,book).\nhungry(bob) :- small(car).\ntall(frank) :- hungry(bob).\nbig(pencil) :- tall(frank).\nparent(alice,frank) :- big(pencil).\nbig(ball) :- dislikes(dave,pencil), big(pencil).\nhungry(eve) :- friend(carol,dave), dislikes(eve,ball), wet(ball).\nhungry(george) :- cold.\nowns(bob,pencil) :- owns(bob,book), small(apple), sunny.\nbig(phone) :- small(ball), likes(dave,ball), enemy(alice,george).\nhungry(frank) :- parent(carol,carol).\nowns(george,ball) :- friend(eve,alice), owns(george,apple).\nwet(apple) :- enemy(carol,george), cold, wet(apple).\nsibling(alice,dave) :- sibling(bob,frank), dislikes(carol,phone).\nwet(ball) :- owns(carol,car), small(phone), likes(bob,book).\nsibling(eve,bob) :- sibling(carol,bob).\nsad(george) :- tall(carol), sad(george), big(book).\nfriend(carol,george) :- friend(carol,bob), happy(frank), dislikes(george,phone).\nsmall(book) :- friend(alice,carol), small(ball), sibling(alice,george).\nfriend(bob,dave).\nenemy(frank,carol).\nparent(frank,george).\nlikes(carol,book).\nparent(carol,eve).\nenemy(george,carol).\nhot.\nowns(dave,car).",
    "natural language": "You are given the following rules:\nIf pencil is wet, then book is big.\nIf book is big, then alice is an enemy of bob.\nIf alice is an enemy of bob, then bob owns pencil.\nIf bob owns pencil, then dave dislikes apple.\nIf dave dislikes apple, then bob is an enemy of carol.\nIf bob is an enemy of carol, then phone is big.\nIf phone is big, then apple is small.\nIf apple is small, then frank owns phone.\nIf frank owns phone, then apple is wet.\nIf apple is wet, then it is hot.\nIf it is hot, then frank is happy.\nIf frank is happy, then dave owns car.\nIf dave owns car, then bob is sad.\nIf bob is sad, then it is cold.\nIf it is cold, then george dislikes book.\nIf george dislikes book, then car is small.\nIf car is small, then bob is hungry.\nIf bob is hungry, then frank is tall.\nIf frank is tall, then pencil is big.\nIf pencil is big, then alice is a parent of frank.\nIf dave dislikes pencil and pencil is big, then ball is big.\nIf carol is a friend of dave and eve dislikes ball and ball is wet, then eve is hungry.\nIf it is cold, then george is hungry.\nIf bob owns book and apple is small and it is sunny, then bob owns pencil.\nIf ball is small and dave likes ball and alice is an enemy of george, then phone is big.\nIf carol is a parent of carol, then frank is hungry.\nIf eve is a friend of alice and george owns apple, then george owns ball.\nIf carol is an enemy of george and it is cold and apple is wet, then apple is wet.\nIf bob is a sibling of frank and carol dislikes phone, then alice is a sibling of dave.\nIf carol owns car and phone is small and bob likes book, then ball is wet.\nIf carol is a sibling of bob, then eve is a sibling of bob.\nIf carol is tall and george is sad and book is big, then george is sad.\nIf carol is a friend of bob and frank is happy and george dislikes phone, then carol is a friend of george.\nIf alice is a friend of carol and ball is small and alice is a sibling of george, then book is small.\n\nAnd the following facts:\nbob is a friend of dave.\nfrank is an enemy of carol.\nfrank is a parent of george.\ncarol likes book.\ncarol is a parent of eve.\ngeorge is an enemy of carol.\nit is hot.\ndave owns car.\n\nQUESTION:\nCould frank is an enemy of carol explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "enemy(frank,carol)"
    }
  },
  {
    "q": "sad(carol).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\ntall(eve).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\neve is tall.\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nIs carol is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,george).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\ntall(eve).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\neve is tall.\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nIs alice is a friend of george true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(bob,ball).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\ntall(eve).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\neve is tall.\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nIs bob dislikes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,car).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\ntall(eve).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\neve is tall.\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nIs bob likes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(eve,frank).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\ntall(eve).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following information:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\neve is tall.\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nIs eve is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 9,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(eve).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following rules:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nCould eve is tall explain carol is a friend of george?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 14,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,george)",
      "explanation": "tall(eve)"
    }
  },
  {
    "q": "friend(eve,carol).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following rules:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nCould eve is a friend of carol explain carol is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,george)",
      "non_explanation": "friend(eve,carol)"
    }
  },
  {
    "q": "dislikes(carol,pencil).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following rules:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nCould carol dislikes pencil explain carol is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,george)",
      "non_explanation": "dislikes(carol,pencil)"
    }
  },
  {
    "q": "friend(alice,frank).",
    "c": "tall(george) :- tall(eve).\nsad(carol) :- tall(george).\ndislikes(bob,apple) :- sad(carol).\nbig(car) :- dislikes(bob,apple).\nsmall(phone) :- big(car).\nsibling(bob,carol) :- small(phone).\nfriend(alice,bob) :- sibling(bob,carol).\nowns(dave,pencil) :- friend(alice,bob).\nowns(bob,car) :- owns(dave,pencil).\nowns(dave,apple) :- owns(bob,car).\nenemy(frank,alice) :- owns(dave,apple).\nbig(pencil) :- enemy(frank,alice).\nenemy(bob,alice) :- big(pencil).\nfriend(carol,george) :- enemy(bob,alice).\nhappy(bob) :- friend(carol,george).\nsunny :- happy(bob).\nsmall(car) :- sunny.\nhungry(alice) :- small(car).\nparent(alice,bob) :- hungry(alice).\nsibling(bob,dave) :- parent(alice,bob).\nhot :- enemy(alice,eve), dislikes(george,car).\nhot :- small(car), likes(carol,pencil), sunny.\nsad(eve) :- likes(carol,ball), sad(bob).\nsad(eve) :- cold, big(car), owns(dave,pencil).\nparent(bob,bob) :- dislikes(eve,phone), friend(george,alice), sunny.\ncold :- friend(eve,frank), friend(carol,frank).\nsunny :- friend(frank,dave).\ncold :- parent(carol,george), small(car), parent(dave,carol).\nsunny :- enemy(eve,george).\nhappy(alice) :- sunny, owns(frank,book).\nsmall(apple) :- tall(alice).\nhappy(bob) :- big(pencil).\nsad(eve) :- friend(dave,frank), likes(frank,book).\nparent(alice,george) :- tall(alice), hungry(carol).\nfriend(frank,alice).\nfriend(eve,carol).\ndislikes(carol,pencil).\nfriend(alice,frank).\nenemy(alice,george).\nfriend(alice,george).\nparent(eve,frank).\nparent(bob,alice).",
    "natural language": "You are given the following rules:\nIf eve is tall, then george is tall.\nIf george is tall, then carol is sad.\nIf carol is sad, then bob dislikes apple.\nIf bob dislikes apple, then car is big.\nIf car is big, then phone is small.\nIf phone is small, then bob is a sibling of carol.\nIf bob is a sibling of carol, then alice is a friend of bob.\nIf alice is a friend of bob, then dave owns pencil.\nIf dave owns pencil, then bob owns car.\nIf bob owns car, then dave owns apple.\nIf dave owns apple, then frank is an enemy of alice.\nIf frank is an enemy of alice, then pencil is big.\nIf pencil is big, then bob is an enemy of alice.\nIf bob is an enemy of alice, then carol is a friend of george.\nIf carol is a friend of george, then bob is happy.\nIf bob is happy, then it is sunny.\nIf it is sunny, then car is small.\nIf car is small, then alice is hungry.\nIf alice is hungry, then alice is a parent of bob.\nIf alice is a parent of bob, then bob is a sibling of dave.\nIf alice is an enemy of eve and george dislikes car, then it is hot.\nIf car is small and carol likes pencil and it is sunny, then it is hot.\nIf carol likes ball and bob is sad, then eve is sad.\nIf it is cold and car is big and dave owns pencil, then eve is sad.\nIf eve dislikes phone and george is a friend of alice and it is sunny, then bob is a parent of bob.\nIf eve is a friend of frank and carol is a friend of frank, then it is cold.\nIf frank is a friend of dave, then it is sunny.\nIf carol is a parent of george and car is small and dave is a parent of carol, then it is cold.\nIf eve is an enemy of george, then it is sunny.\nIf it is sunny and frank owns book, then alice is happy.\nIf alice is tall, then apple is small.\nIf pencil is big, then bob is happy.\nIf dave is a friend of frank and frank likes book, then eve is sad.\nIf alice is tall and carol is hungry, then alice is a parent of george.\n\nAnd the following facts:\nfrank is a friend of alice.\neve is a friend of carol.\ncarol dislikes pencil.\nalice is a friend of frank.\nalice is an enemy of george.\nalice is a friend of george.\neve is a parent of frank.\nbob is a parent of alice.\n\nQUESTION:\nCould alice is a friend of frank explain carol is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,george)",
      "non_explanation": "friend(alice,frank)"
    }
  },
  {
    "q": "big(book).",
    "c": "tall(george) :- big(book).\nsad(dave) :- tall(george).\nparent(eve,carol) :- sad(dave).\nfriend(george,alice) :- parent(eve,carol).\ncold :- friend(george,alice).\nfriend(dave,alice) :- cold.\nhungry(george) :- friend(dave,alice).\nlikes(carol,apple) :- hungry(george).\nlikes(alice,pencil) :- likes(carol,apple).\nlikes(george,ball) :- likes(alice,pencil).\nhungry(alice) :- likes(george,ball).\nsmall(apple) :- hungry(alice).\nsad(dave) :- small(apple).\nowns(carol,car) :- sad(dave).\nhappy(frank) :- owns(carol,car).\nhot :- happy(frank).\nhungry(frank) :- hot.\nsad(frank) :- hungry(frank).\nsad(dave) :- sad(frank).\nsunny :- sad(dave).\ncold :- sunny.\nhappy(frank) :- cold.\nenemy(carol,carol) :- happy(frank).\nparent(dave,eve) :- enemy(carol,carol).\nhot :- parent(dave,eve).\ntall(frank) :- hot.\nowns(eve,ball) :- tall(frank).\nsad(eve) :- owns(eve,ball).\nlikes(george,phone) :- sad(eve).\nsmall(ball) :- likes(george,phone).\nsad(carol) :- dislikes(carol,book), wet(ball).\ncold :- friend(bob,george).\nwet(phone) :- sad(george), wet(apple), hot.\ncold :- hungry(alice), cold.\nparent(george,carol).\nsad(bob).\nenemy(frank,bob).\nenemy(frank,dave).\nparent(alice,eve).\nowns(george,phone).\ndislikes(frank,pencil).\nowns(bob,phone).",
    "natural language": "You are given the following rules:\nIf book is big, then george is tall.\nIf george is tall, then dave is sad.\nIf dave is sad, then eve is a parent of carol.\nIf eve is a parent of carol, then george is a friend of alice.\nIf george is a friend of alice, then it is cold.\nIf it is cold, then dave is a friend of alice.\nIf dave is a friend of alice, then george is hungry.\nIf george is hungry, then carol likes apple.\nIf carol likes apple, then alice likes pencil.\nIf alice likes pencil, then george likes ball.\nIf george likes ball, then alice is hungry.\nIf alice is hungry, then apple is small.\nIf apple is small, then dave is sad.\nIf dave is sad, then carol owns car.\nIf carol owns car, then frank is happy.\nIf frank is happy, then it is hot.\nIf it is hot, then frank is hungry.\nIf frank is hungry, then frank is sad.\nIf frank is sad, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then frank is tall.\nIf frank is tall, then eve owns ball.\nIf eve owns ball, then eve is sad.\nIf eve is sad, then george likes phone.\nIf george likes phone, then ball is small.\nIf carol dislikes book and ball is wet, then carol is sad.\nIf bob is a friend of george, then it is cold.\nIf george is sad and apple is wet and it is hot, then phone is wet.\nIf alice is hungry and it is cold, then it is cold.\n\nAnd the following facts:\ngeorge is a parent of carol.\nbob is sad.\nfrank is an enemy of bob.\nfrank is an enemy of dave.\nalice is a parent of eve.\ngeorge owns phone.\nfrank dislikes pencil.\nbob owns phone.\n\nQUESTION:\nCould book is big explain alice likes pencil?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 8,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(alice,pencil)",
      "explanation": "big(book)"
    }
  },
  {
    "q": "parent(george,carol).",
    "c": "tall(george) :- big(book).\nsad(dave) :- tall(george).\nparent(eve,carol) :- sad(dave).\nfriend(george,alice) :- parent(eve,carol).\ncold :- friend(george,alice).\nfriend(dave,alice) :- cold.\nhungry(george) :- friend(dave,alice).\nlikes(carol,apple) :- hungry(george).\nlikes(alice,pencil) :- likes(carol,apple).\nlikes(george,ball) :- likes(alice,pencil).\nhungry(alice) :- likes(george,ball).\nsmall(apple) :- hungry(alice).\nsad(dave) :- small(apple).\nowns(carol,car) :- sad(dave).\nhappy(frank) :- owns(carol,car).\nhot :- happy(frank).\nhungry(frank) :- hot.\nsad(frank) :- hungry(frank).\nsad(dave) :- sad(frank).\nsunny :- sad(dave).\ncold :- sunny.\nhappy(frank) :- cold.\nenemy(carol,carol) :- happy(frank).\nparent(dave,eve) :- enemy(carol,carol).\nhot :- parent(dave,eve).\ntall(frank) :- hot.\nowns(eve,ball) :- tall(frank).\nsad(eve) :- owns(eve,ball).\nlikes(george,phone) :- sad(eve).\nsmall(ball) :- likes(george,phone).\nsad(carol) :- dislikes(carol,book), wet(ball).\ncold :- friend(bob,george).\nwet(phone) :- sad(george), wet(apple), hot.\ncold :- hungry(alice), cold.\nparent(george,carol).\nsad(bob).\nenemy(frank,bob).\nenemy(frank,dave).\nparent(alice,eve).\nowns(george,phone).\ndislikes(frank,pencil).\nowns(bob,phone).",
    "natural language": "You are given the following rules:\nIf book is big, then george is tall.\nIf george is tall, then dave is sad.\nIf dave is sad, then eve is a parent of carol.\nIf eve is a parent of carol, then george is a friend of alice.\nIf george is a friend of alice, then it is cold.\nIf it is cold, then dave is a friend of alice.\nIf dave is a friend of alice, then george is hungry.\nIf george is hungry, then carol likes apple.\nIf carol likes apple, then alice likes pencil.\nIf alice likes pencil, then george likes ball.\nIf george likes ball, then alice is hungry.\nIf alice is hungry, then apple is small.\nIf apple is small, then dave is sad.\nIf dave is sad, then carol owns car.\nIf carol owns car, then frank is happy.\nIf frank is happy, then it is hot.\nIf it is hot, then frank is hungry.\nIf frank is hungry, then frank is sad.\nIf frank is sad, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then frank is tall.\nIf frank is tall, then eve owns ball.\nIf eve owns ball, then eve is sad.\nIf eve is sad, then george likes phone.\nIf george likes phone, then ball is small.\nIf carol dislikes book and ball is wet, then carol is sad.\nIf bob is a friend of george, then it is cold.\nIf george is sad and apple is wet and it is hot, then phone is wet.\nIf alice is hungry and it is cold, then it is cold.\n\nAnd the following facts:\ngeorge is a parent of carol.\nbob is sad.\nfrank is an enemy of bob.\nfrank is an enemy of dave.\nalice is a parent of eve.\ngeorge owns phone.\nfrank dislikes pencil.\nbob owns phone.\n\nQUESTION:\nCould george is a parent of carol explain alice likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(alice,pencil)",
      "non_explanation": "parent(george,carol)"
    }
  },
  {
    "q": "enemy(frank,dave).",
    "c": "tall(george) :- big(book).\nsad(dave) :- tall(george).\nparent(eve,carol) :- sad(dave).\nfriend(george,alice) :- parent(eve,carol).\ncold :- friend(george,alice).\nfriend(dave,alice) :- cold.\nhungry(george) :- friend(dave,alice).\nlikes(carol,apple) :- hungry(george).\nlikes(alice,pencil) :- likes(carol,apple).\nlikes(george,ball) :- likes(alice,pencil).\nhungry(alice) :- likes(george,ball).\nsmall(apple) :- hungry(alice).\nsad(dave) :- small(apple).\nowns(carol,car) :- sad(dave).\nhappy(frank) :- owns(carol,car).\nhot :- happy(frank).\nhungry(frank) :- hot.\nsad(frank) :- hungry(frank).\nsad(dave) :- sad(frank).\nsunny :- sad(dave).\ncold :- sunny.\nhappy(frank) :- cold.\nenemy(carol,carol) :- happy(frank).\nparent(dave,eve) :- enemy(carol,carol).\nhot :- parent(dave,eve).\ntall(frank) :- hot.\nowns(eve,ball) :- tall(frank).\nsad(eve) :- owns(eve,ball).\nlikes(george,phone) :- sad(eve).\nsmall(ball) :- likes(george,phone).\nsad(carol) :- dislikes(carol,book), wet(ball).\ncold :- friend(bob,george).\nwet(phone) :- sad(george), wet(apple), hot.\ncold :- hungry(alice), cold.\nparent(george,carol).\nsad(bob).\nenemy(frank,bob).\nenemy(frank,dave).\nparent(alice,eve).\nowns(george,phone).\ndislikes(frank,pencil).\nowns(bob,phone).",
    "natural language": "You are given the following rules:\nIf book is big, then george is tall.\nIf george is tall, then dave is sad.\nIf dave is sad, then eve is a parent of carol.\nIf eve is a parent of carol, then george is a friend of alice.\nIf george is a friend of alice, then it is cold.\nIf it is cold, then dave is a friend of alice.\nIf dave is a friend of alice, then george is hungry.\nIf george is hungry, then carol likes apple.\nIf carol likes apple, then alice likes pencil.\nIf alice likes pencil, then george likes ball.\nIf george likes ball, then alice is hungry.\nIf alice is hungry, then apple is small.\nIf apple is small, then dave is sad.\nIf dave is sad, then carol owns car.\nIf carol owns car, then frank is happy.\nIf frank is happy, then it is hot.\nIf it is hot, then frank is hungry.\nIf frank is hungry, then frank is sad.\nIf frank is sad, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then frank is tall.\nIf frank is tall, then eve owns ball.\nIf eve owns ball, then eve is sad.\nIf eve is sad, then george likes phone.\nIf george likes phone, then ball is small.\nIf carol dislikes book and ball is wet, then carol is sad.\nIf bob is a friend of george, then it is cold.\nIf george is sad and apple is wet and it is hot, then phone is wet.\nIf alice is hungry and it is cold, then it is cold.\n\nAnd the following facts:\ngeorge is a parent of carol.\nbob is sad.\nfrank is an enemy of bob.\nfrank is an enemy of dave.\nalice is a parent of eve.\ngeorge owns phone.\nfrank dislikes pencil.\nbob owns phone.\n\nQUESTION:\nCould frank is an enemy of dave explain alice likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(alice,pencil)",
      "non_explanation": "enemy(frank,dave)"
    }
  },
  {
    "q": "sad(bob).",
    "c": "tall(george) :- big(book).\nsad(dave) :- tall(george).\nparent(eve,carol) :- sad(dave).\nfriend(george,alice) :- parent(eve,carol).\ncold :- friend(george,alice).\nfriend(dave,alice) :- cold.\nhungry(george) :- friend(dave,alice).\nlikes(carol,apple) :- hungry(george).\nlikes(alice,pencil) :- likes(carol,apple).\nlikes(george,ball) :- likes(alice,pencil).\nhungry(alice) :- likes(george,ball).\nsmall(apple) :- hungry(alice).\nsad(dave) :- small(apple).\nowns(carol,car) :- sad(dave).\nhappy(frank) :- owns(carol,car).\nhot :- happy(frank).\nhungry(frank) :- hot.\nsad(frank) :- hungry(frank).\nsad(dave) :- sad(frank).\nsunny :- sad(dave).\ncold :- sunny.\nhappy(frank) :- cold.\nenemy(carol,carol) :- happy(frank).\nparent(dave,eve) :- enemy(carol,carol).\nhot :- parent(dave,eve).\ntall(frank) :- hot.\nowns(eve,ball) :- tall(frank).\nsad(eve) :- owns(eve,ball).\nlikes(george,phone) :- sad(eve).\nsmall(ball) :- likes(george,phone).\nsad(carol) :- dislikes(carol,book), wet(ball).\ncold :- friend(bob,george).\nwet(phone) :- sad(george), wet(apple), hot.\ncold :- hungry(alice), cold.\nparent(george,carol).\nsad(bob).\nenemy(frank,bob).\nenemy(frank,dave).\nparent(alice,eve).\nowns(george,phone).\ndislikes(frank,pencil).\nowns(bob,phone).",
    "natural language": "You are given the following rules:\nIf book is big, then george is tall.\nIf george is tall, then dave is sad.\nIf dave is sad, then eve is a parent of carol.\nIf eve is a parent of carol, then george is a friend of alice.\nIf george is a friend of alice, then it is cold.\nIf it is cold, then dave is a friend of alice.\nIf dave is a friend of alice, then george is hungry.\nIf george is hungry, then carol likes apple.\nIf carol likes apple, then alice likes pencil.\nIf alice likes pencil, then george likes ball.\nIf george likes ball, then alice is hungry.\nIf alice is hungry, then apple is small.\nIf apple is small, then dave is sad.\nIf dave is sad, then carol owns car.\nIf carol owns car, then frank is happy.\nIf frank is happy, then it is hot.\nIf it is hot, then frank is hungry.\nIf frank is hungry, then frank is sad.\nIf frank is sad, then dave is sad.\nIf dave is sad, then it is sunny.\nIf it is sunny, then it is cold.\nIf it is cold, then frank is happy.\nIf frank is happy, then carol is an enemy of carol.\nIf carol is an enemy of carol, then dave is a parent of eve.\nIf dave is a parent of eve, then it is hot.\nIf it is hot, then frank is tall.\nIf frank is tall, then eve owns ball.\nIf eve owns ball, then eve is sad.\nIf eve is sad, then george likes phone.\nIf george likes phone, then ball is small.\nIf carol dislikes book and ball is wet, then carol is sad.\nIf bob is a friend of george, then it is cold.\nIf george is sad and apple is wet and it is hot, then phone is wet.\nIf alice is hungry and it is cold, then it is cold.\n\nAnd the following facts:\ngeorge is a parent of carol.\nbob is sad.\nfrank is an enemy of bob.\nfrank is an enemy of dave.\nalice is a parent of eve.\ngeorge owns phone.\nfrank dislikes pencil.\nbob owns phone.\n\nQUESTION:\nCould bob is sad explain alice likes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "likes(alice,pencil)",
      "non_explanation": "sad(bob)"
    }
  },
  {
    "q": "parent(dave,eve).",
    "c": "sunny :- parent(dave,eve).\nsibling(dave,bob) :- sunny.\ntall(frank) :- sibling(dave,bob).\nsmall(ball) :- tall(frank).\nhungry(dave) :- small(ball).\nsad(frank) :- hungry(dave).\nenemy(frank,dave) :- sad(frank).\ncold :- enemy(frank,dave).\ncold :- cold.\ntall(dave) :- cold.\ncold :- tall(dave).\nlikes(dave,ball) :- cold.\nowns(frank,ball) :- likes(dave,ball).\nsibling(george,eve) :- owns(frank,ball).\nbig(book) :- sibling(george,eve).\nwet(phone) :- big(book).\nhot :- wet(phone).\nenemy(frank,frank) :- hot.\nsibling(alice,dave) :- enemy(frank,frank).\nbig(book) :- sibling(alice,dave).\nsmall(pencil) :- big(book).\nsad(dave) :- small(pencil).\nhungry(frank) :- sad(dave).\nowns(frank,apple) :- hungry(frank).\ndislikes(eve,pencil) :- owns(frank,apple).\nhungry(eve) :- dislikes(eve,pencil).\nowns(bob,car) :- hungry(eve).\ntall(bob) :- owns(bob,car).\nfriend(george,dave) :- tall(bob).\nhappy(eve) :- friend(george,dave).\nenemy(dave,george) :- hungry(frank), big(book).\nenemy(eve,frank) :- sibling(george,bob), parent(dave,dave).\nbig(apple) :- cold, happy(bob), enemy(eve,eve).\nwet(ball) :- owns(george,phone), cold, happy(alice).\nwet(phone).\nsibling(frank,alice).\nfriend(carol,dave).\nhungry(alice).\nlikes(alice,ball).\nfriend(dave,eve).\nenemy(carol,frank).\nfriend(eve,carol).",
    "natural language": "You are given the following rules:\nIf dave is a parent of eve, then it is sunny.\nIf it is sunny, then dave is a sibling of bob.\nIf dave is a sibling of bob, then frank is tall.\nIf frank is tall, then ball is small.\nIf ball is small, then dave is hungry.\nIf dave is hungry, then frank is sad.\nIf frank is sad, then frank is an enemy of dave.\nIf frank is an enemy of dave, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then it is cold.\nIf it is cold, then dave likes ball.\nIf dave likes ball, then frank owns ball.\nIf frank owns ball, then george is a sibling of eve.\nIf george is a sibling of eve, then book is big.\nIf book is big, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of frank, then alice is a sibling of dave.\nIf alice is a sibling of dave, then book is big.\nIf book is big, then pencil is small.\nIf pencil is small, then dave is sad.\nIf dave is sad, then frank is hungry.\nIf frank is hungry, then frank owns apple.\nIf frank owns apple, then eve dislikes pencil.\nIf eve dislikes pencil, then eve is hungry.\nIf eve is hungry, then bob owns car.\nIf bob owns car, then bob is tall.\nIf bob is tall, then george is a friend of dave.\nIf george is a friend of dave, then eve is happy.\nIf frank is hungry and book is big, then dave is an enemy of george.\nIf george is a sibling of bob and dave is a parent of dave, then eve is an enemy of frank.\nIf it is cold and bob is happy and eve is an enemy of eve, then apple is big.\nIf george owns phone and it is cold and alice is happy, then ball is wet.\n\nAnd the following facts:\nphone is wet.\nfrank is a sibling of alice.\ncarol is a friend of dave.\nalice is hungry.\nalice likes ball.\ndave is a friend of eve.\ncarol is an enemy of frank.\neve is a friend of carol.\n\nQUESTION:\nCould dave is a parent of eve explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "parent(dave,eve)"
    }
  },
  {
    "q": "wet(phone).",
    "c": "sunny :- parent(dave,eve).\nsibling(dave,bob) :- sunny.\ntall(frank) :- sibling(dave,bob).\nsmall(ball) :- tall(frank).\nhungry(dave) :- small(ball).\nsad(frank) :- hungry(dave).\nenemy(frank,dave) :- sad(frank).\ncold :- enemy(frank,dave).\ncold :- cold.\ntall(dave) :- cold.\ncold :- tall(dave).\nlikes(dave,ball) :- cold.\nowns(frank,ball) :- likes(dave,ball).\nsibling(george,eve) :- owns(frank,ball).\nbig(book) :- sibling(george,eve).\nwet(phone) :- big(book).\nhot :- wet(phone).\nenemy(frank,frank) :- hot.\nsibling(alice,dave) :- enemy(frank,frank).\nbig(book) :- sibling(alice,dave).\nsmall(pencil) :- big(book).\nsad(dave) :- small(pencil).\nhungry(frank) :- sad(dave).\nowns(frank,apple) :- hungry(frank).\ndislikes(eve,pencil) :- owns(frank,apple).\nhungry(eve) :- dislikes(eve,pencil).\nowns(bob,car) :- hungry(eve).\ntall(bob) :- owns(bob,car).\nfriend(george,dave) :- tall(bob).\nhappy(eve) :- friend(george,dave).\nenemy(dave,george) :- hungry(frank), big(book).\nenemy(eve,frank) :- sibling(george,bob), parent(dave,dave).\nbig(apple) :- cold, happy(bob), enemy(eve,eve).\nwet(ball) :- owns(george,phone), cold, happy(alice).\nwet(phone).\nsibling(frank,alice).\nfriend(carol,dave).\nhungry(alice).\nlikes(alice,ball).\nfriend(dave,eve).\nenemy(carol,frank).\nfriend(eve,carol).",
    "natural language": "You are given the following rules:\nIf dave is a parent of eve, then it is sunny.\nIf it is sunny, then dave is a sibling of bob.\nIf dave is a sibling of bob, then frank is tall.\nIf frank is tall, then ball is small.\nIf ball is small, then dave is hungry.\nIf dave is hungry, then frank is sad.\nIf frank is sad, then frank is an enemy of dave.\nIf frank is an enemy of dave, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then it is cold.\nIf it is cold, then dave likes ball.\nIf dave likes ball, then frank owns ball.\nIf frank owns ball, then george is a sibling of eve.\nIf george is a sibling of eve, then book is big.\nIf book is big, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of frank, then alice is a sibling of dave.\nIf alice is a sibling of dave, then book is big.\nIf book is big, then pencil is small.\nIf pencil is small, then dave is sad.\nIf dave is sad, then frank is hungry.\nIf frank is hungry, then frank owns apple.\nIf frank owns apple, then eve dislikes pencil.\nIf eve dislikes pencil, then eve is hungry.\nIf eve is hungry, then bob owns car.\nIf bob owns car, then bob is tall.\nIf bob is tall, then george is a friend of dave.\nIf george is a friend of dave, then eve is happy.\nIf frank is hungry and book is big, then dave is an enemy of george.\nIf george is a sibling of bob and dave is a parent of dave, then eve is an enemy of frank.\nIf it is cold and bob is happy and eve is an enemy of eve, then apple is big.\nIf george owns phone and it is cold and alice is happy, then ball is wet.\n\nAnd the following facts:\nphone is wet.\nfrank is a sibling of alice.\ncarol is a friend of dave.\nalice is hungry.\nalice likes ball.\ndave is a friend of eve.\ncarol is an enemy of frank.\neve is a friend of carol.\n\nQUESTION:\nCould phone is wet explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "wet(phone)"
    }
  },
  {
    "q": "hungry(alice).",
    "c": "sunny :- parent(dave,eve).\nsibling(dave,bob) :- sunny.\ntall(frank) :- sibling(dave,bob).\nsmall(ball) :- tall(frank).\nhungry(dave) :- small(ball).\nsad(frank) :- hungry(dave).\nenemy(frank,dave) :- sad(frank).\ncold :- enemy(frank,dave).\ncold :- cold.\ntall(dave) :- cold.\ncold :- tall(dave).\nlikes(dave,ball) :- cold.\nowns(frank,ball) :- likes(dave,ball).\nsibling(george,eve) :- owns(frank,ball).\nbig(book) :- sibling(george,eve).\nwet(phone) :- big(book).\nhot :- wet(phone).\nenemy(frank,frank) :- hot.\nsibling(alice,dave) :- enemy(frank,frank).\nbig(book) :- sibling(alice,dave).\nsmall(pencil) :- big(book).\nsad(dave) :- small(pencil).\nhungry(frank) :- sad(dave).\nowns(frank,apple) :- hungry(frank).\ndislikes(eve,pencil) :- owns(frank,apple).\nhungry(eve) :- dislikes(eve,pencil).\nowns(bob,car) :- hungry(eve).\ntall(bob) :- owns(bob,car).\nfriend(george,dave) :- tall(bob).\nhappy(eve) :- friend(george,dave).\nenemy(dave,george) :- hungry(frank), big(book).\nenemy(eve,frank) :- sibling(george,bob), parent(dave,dave).\nbig(apple) :- cold, happy(bob), enemy(eve,eve).\nwet(ball) :- owns(george,phone), cold, happy(alice).\nwet(phone).\nsibling(frank,alice).\nfriend(carol,dave).\nhungry(alice).\nlikes(alice,ball).\nfriend(dave,eve).\nenemy(carol,frank).\nfriend(eve,carol).",
    "natural language": "You are given the following rules:\nIf dave is a parent of eve, then it is sunny.\nIf it is sunny, then dave is a sibling of bob.\nIf dave is a sibling of bob, then frank is tall.\nIf frank is tall, then ball is small.\nIf ball is small, then dave is hungry.\nIf dave is hungry, then frank is sad.\nIf frank is sad, then frank is an enemy of dave.\nIf frank is an enemy of dave, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then it is cold.\nIf it is cold, then dave likes ball.\nIf dave likes ball, then frank owns ball.\nIf frank owns ball, then george is a sibling of eve.\nIf george is a sibling of eve, then book is big.\nIf book is big, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of frank, then alice is a sibling of dave.\nIf alice is a sibling of dave, then book is big.\nIf book is big, then pencil is small.\nIf pencil is small, then dave is sad.\nIf dave is sad, then frank is hungry.\nIf frank is hungry, then frank owns apple.\nIf frank owns apple, then eve dislikes pencil.\nIf eve dislikes pencil, then eve is hungry.\nIf eve is hungry, then bob owns car.\nIf bob owns car, then bob is tall.\nIf bob is tall, then george is a friend of dave.\nIf george is a friend of dave, then eve is happy.\nIf frank is hungry and book is big, then dave is an enemy of george.\nIf george is a sibling of bob and dave is a parent of dave, then eve is an enemy of frank.\nIf it is cold and bob is happy and eve is an enemy of eve, then apple is big.\nIf george owns phone and it is cold and alice is happy, then ball is wet.\n\nAnd the following facts:\nphone is wet.\nfrank is a sibling of alice.\ncarol is a friend of dave.\nalice is hungry.\nalice likes ball.\ndave is a friend of eve.\ncarol is an enemy of frank.\neve is a friend of carol.\n\nQUESTION:\nCould alice is hungry explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "hungry(alice)"
    }
  },
  {
    "q": "sibling(frank,alice).",
    "c": "sunny :- parent(dave,eve).\nsibling(dave,bob) :- sunny.\ntall(frank) :- sibling(dave,bob).\nsmall(ball) :- tall(frank).\nhungry(dave) :- small(ball).\nsad(frank) :- hungry(dave).\nenemy(frank,dave) :- sad(frank).\ncold :- enemy(frank,dave).\ncold :- cold.\ntall(dave) :- cold.\ncold :- tall(dave).\nlikes(dave,ball) :- cold.\nowns(frank,ball) :- likes(dave,ball).\nsibling(george,eve) :- owns(frank,ball).\nbig(book) :- sibling(george,eve).\nwet(phone) :- big(book).\nhot :- wet(phone).\nenemy(frank,frank) :- hot.\nsibling(alice,dave) :- enemy(frank,frank).\nbig(book) :- sibling(alice,dave).\nsmall(pencil) :- big(book).\nsad(dave) :- small(pencil).\nhungry(frank) :- sad(dave).\nowns(frank,apple) :- hungry(frank).\ndislikes(eve,pencil) :- owns(frank,apple).\nhungry(eve) :- dislikes(eve,pencil).\nowns(bob,car) :- hungry(eve).\ntall(bob) :- owns(bob,car).\nfriend(george,dave) :- tall(bob).\nhappy(eve) :- friend(george,dave).\nenemy(dave,george) :- hungry(frank), big(book).\nenemy(eve,frank) :- sibling(george,bob), parent(dave,dave).\nbig(apple) :- cold, happy(bob), enemy(eve,eve).\nwet(ball) :- owns(george,phone), cold, happy(alice).\nwet(phone).\nsibling(frank,alice).\nfriend(carol,dave).\nhungry(alice).\nlikes(alice,ball).\nfriend(dave,eve).\nenemy(carol,frank).\nfriend(eve,carol).",
    "natural language": "You are given the following rules:\nIf dave is a parent of eve, then it is sunny.\nIf it is sunny, then dave is a sibling of bob.\nIf dave is a sibling of bob, then frank is tall.\nIf frank is tall, then ball is small.\nIf ball is small, then dave is hungry.\nIf dave is hungry, then frank is sad.\nIf frank is sad, then frank is an enemy of dave.\nIf frank is an enemy of dave, then it is cold.\nIf it is cold, then it is cold.\nIf it is cold, then dave is tall.\nIf dave is tall, then it is cold.\nIf it is cold, then dave likes ball.\nIf dave likes ball, then frank owns ball.\nIf frank owns ball, then george is a sibling of eve.\nIf george is a sibling of eve, then book is big.\nIf book is big, then phone is wet.\nIf phone is wet, then it is hot.\nIf it is hot, then frank is an enemy of frank.\nIf frank is an enemy of frank, then alice is a sibling of dave.\nIf alice is a sibling of dave, then book is big.\nIf book is big, then pencil is small.\nIf pencil is small, then dave is sad.\nIf dave is sad, then frank is hungry.\nIf frank is hungry, then frank owns apple.\nIf frank owns apple, then eve dislikes pencil.\nIf eve dislikes pencil, then eve is hungry.\nIf eve is hungry, then bob owns car.\nIf bob owns car, then bob is tall.\nIf bob is tall, then george is a friend of dave.\nIf george is a friend of dave, then eve is happy.\nIf frank is hungry and book is big, then dave is an enemy of george.\nIf george is a sibling of bob and dave is a parent of dave, then eve is an enemy of frank.\nIf it is cold and bob is happy and eve is an enemy of eve, then apple is big.\nIf george owns phone and it is cold and alice is happy, then ball is wet.\n\nAnd the following facts:\nphone is wet.\nfrank is a sibling of alice.\ncarol is a friend of dave.\nalice is hungry.\nalice likes ball.\ndave is a friend of eve.\ncarol is an enemy of frank.\neve is a friend of carol.\n\nQUESTION:\nCould frank is a sibling of alice explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 9,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "sibling(frank,alice)"
    }
  },
  {
    "q": "friend(alice,frank).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\ntall(frank).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\nfrank is tall.\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nIs alice is a friend of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,book).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\ntall(frank).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\nfrank is tall.\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nIs george dislikes book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,phone).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\ntall(frank).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\nfrank is tall.\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nIs frank owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(frank,book).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\ntall(frank).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\nfrank is tall.\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nIs frank dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(frank,carol).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\ntall(frank).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following information:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\nfrank is tall.\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nIs frank is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(frank).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following rules:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nCould frank is tall explain george dislikes book?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,book)",
      "explanation": "tall(frank)"
    }
  },
  {
    "q": "likes(eve,apple).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following rules:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nCould eve likes apple explain george dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,book)",
      "non_explanation": "likes(eve,apple)"
    }
  },
  {
    "q": "sibling(carol,bob).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following rules:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nCould carol is a sibling of bob explain george dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,book)",
      "non_explanation": "sibling(carol,bob)"
    }
  },
  {
    "q": "tall(carol).",
    "c": "dislikes(george,book) :- tall(frank).\ncold :- sibling(eve,alice), parent(alice,eve), friend(alice,carol).\ncold :- big(car), wet(ball), cold.\nsibling(george,bob) :- dislikes(carol,car).\nhungry(eve) :- wet(book), likes(dave,ball), hot.\ndislikes(eve,phone) :- dislikes(eve,book), enemy(carol,bob), tall(alice).\ntall(frank) :- hot, sad(carol).\nhungry(eve) :- hot, hungry(frank), parent(dave,carol).\nwet(car) :- wet(ball).\nwet(apple) :- happy(carol).\nsibling(carol,eve) :- sibling(dave,george), parent(carol,frank), sibling(george,dave).\ntall(eve) :- friend(frank,dave).\ndislikes(george,apple) :- dislikes(dave,book), hungry(carol), wet(apple).\nsmall(pencil) :- small(car), sad(eve), hungry(alice).\nsmall(phone) :- small(car).\nlikes(george,book) :- wet(pencil), hot.\nlikes(carol,phone) :- likes(alice,book).\nhot :- hungry(frank).\ncold :- happy(george), tall(alice), wet(apple).\nhot :- hot, owns(alice,book), wet(phone).\nwet(ball) :- wet(pencil), wet(apple).\nsmall(ball) :- enemy(carol,george), big(ball), sibling(alice,george).\nsibling(alice,bob) :- friend(eve,bob), friend(frank,carol).\nhungry(bob) :- owns(alice,car), happy(george).\nbig(ball) :- big(car), wet(apple), small(car).\nbig(car) :- big(ball), sad(frank), hot.\nowns(alice,car) :- owns(frank,book).\nsunny :- sad(frank), enemy(eve,carol).\nhot :- dislikes(alice,car), owns(alice,pencil), hot.\nsunny :- sad(dave), sunny.\nsad(carol) :- happy(eve).\nsmall(car) :- hot, cold, hot.\nowns(george,pencil) :- big(book), enemy(eve,dave), sunny.\nsunny :- likes(carol,car).\nlikes(eve,apple).\ntall(carol).\nsibling(carol,bob).\nowns(eve,ball).\nfriend(alice,frank).\nfriend(alice,george).\nlikes(george,car).\nowns(george,apple).\nbig(ball).\ndislikes(dave,book).\nparent(dave,eve).",
    "natural language": "You are given the following rules:\nIf frank is tall, then george dislikes book.\nIf eve is a sibling of alice and alice is a parent of eve and alice is a friend of carol, then it is cold.\nIf car is big and ball is wet and it is cold, then it is cold.\nIf carol dislikes car, then george is a sibling of bob.\nIf book is wet and dave likes ball and it is hot, then eve is hungry.\nIf eve dislikes book and carol is an enemy of bob and alice is tall, then eve dislikes phone.\nIf it is hot and carol is sad, then frank is tall.\nIf it is hot and frank is hungry and dave is a parent of carol, then eve is hungry.\nIf ball is wet, then car is wet.\nIf carol is happy, then apple is wet.\nIf dave is a sibling of george and carol is a parent of frank and george is a sibling of dave, then carol is a sibling of eve.\nIf frank is a friend of dave, then eve is tall.\nIf dave dislikes book and carol is hungry and apple is wet, then george dislikes apple.\nIf car is small and eve is sad and alice is hungry, then pencil is small.\nIf car is small, then phone is small.\nIf pencil is wet and it is hot, then george likes book.\nIf alice likes book, then carol likes phone.\nIf frank is hungry, then it is hot.\nIf george is happy and alice is tall and apple is wet, then it is cold.\nIf it is hot and alice owns book and phone is wet, then it is hot.\nIf pencil is wet and apple is wet, then ball is wet.\nIf carol is an enemy of george and ball is big and alice is a sibling of george, then ball is small.\nIf eve is a friend of bob and frank is a friend of carol, then alice is a sibling of bob.\nIf alice owns car and george is happy, then bob is hungry.\nIf car is big and apple is wet and car is small, then ball is big.\nIf ball is big and frank is sad and it is hot, then car is big.\nIf frank owns book, then alice owns car.\nIf frank is sad and eve is an enemy of carol, then it is sunny.\nIf alice dislikes car and alice owns pencil and it is hot, then it is hot.\nIf dave is sad and it is sunny, then it is sunny.\nIf eve is happy, then carol is sad.\nIf it is hot and it is cold and it is hot, then car is small.\nIf book is big and eve is an enemy of dave and it is sunny, then george owns pencil.\nIf carol likes car, then it is sunny.\n\nAnd the following facts:\neve likes apple.\ncarol is tall.\ncarol is a sibling of bob.\neve owns ball.\nalice is a friend of frank.\nalice is a friend of george.\ngeorge likes car.\ngeorge owns apple.\nball is big.\ndave dislikes book.\ndave is a parent of eve.\n\nQUESTION:\nCould carol is tall explain george dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,book)",
      "non_explanation": "tall(carol)"
    }
  },
  {
    "q": "parent(alice,eve).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nhappy(frank).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following information:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nfrank is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nIs alice is a parent of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(alice,dave).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nhappy(frank).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following information:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nfrank is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nIs alice is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(apple).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nhappy(frank).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following information:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nfrank is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nIs apple is wet true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,alice).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nhappy(frank).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following information:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nfrank is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nIs george is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,pencil).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nhappy(frank).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following information:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nfrank is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nIs frank likes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(frank).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nCould frank is happy explain dave is sad?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "explanation": "happy(frank)"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nCould dave is a parent of bob explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "parent(dave,bob)"
    }
  },
  {
    "q": "likes(bob,car).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nCould bob likes car explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "likes(bob,car)"
    }
  },
  {
    "q": "dislikes(carol,pencil).",
    "c": "cold :- likes(bob,car).\ntall(alice) :- dislikes(dave,car), big(pencil), tall(george).\ntall(eve) :- likes(dave,apple), sad(frank).\nenemy(alice,carol) :- tall(alice), cold, sunny.\nenemy(carol,bob) :- hot.\nhappy(eve) :- dislikes(frank,pencil).\nhappy(eve) :- small(pencil), enemy(bob,carol), sunny.\nsmall(book) :- big(phone), sunny, sad(eve).\nowns(frank,apple) :- enemy(bob,frank).\nowns(dave,book) :- hot, friend(bob,bob), friend(bob,eve).\nsmall(car) :- small(apple), cold, small(ball).\nenemy(carol,george) :- tall(dave), sad(eve).\nparent(frank,eve) :- sibling(dave,frank), likes(alice,pencil).\nsad(carol) :- sad(alice), parent(dave,dave).\nsad(george) :- dislikes(bob,phone), hot, owns(carol,book).\nparent(alice,frank) :- dislikes(eve,apple), hot.\nlikes(george,car) :- owns(george,phone).\nlikes(dave,book) :- happy(alice).\nhappy(carol) :- sad(dave), parent(alice,frank), sibling(alice,carol).\nhot :- dislikes(george,pencil), enemy(eve,alice), sibling(carol,alice).\nsad(dave) :- happy(frank).\nbig(ball) :- happy(eve).\nhot :- hot, cold.\nlikes(frank,ball) :- small(ball).\nbig(car) :- big(pencil), wet(phone).\nparent(frank,frank) :- tall(bob), enemy(george,dave), friend(dave,bob).\nlikes(bob,ball) :- sad(eve).\nfriend(alice,bob) :- hungry(bob).\nowns(george,book) :- parent(bob,dave).\nsmall(ball) :- hungry(frank), big(book).\nenemy(alice,alice) :- big(book), parent(alice,dave).\nsibling(eve,george) :- hungry(bob), enemy(alice,george), happy(eve).\ntall(george) :- owns(bob,car), hot.\nhungry(alice) :- sunny.\nlikes(bob,car).\ndislikes(carol,pencil).\nsibling(dave,alice).\nparent(dave,bob).\nhappy(dave).\nparent(alice,dave).\nsibling(dave,eve).\ndislikes(eve,car).\nparent(alice,eve).\ntall(frank).\nsibling(bob,frank).",
    "natural language": "You are given the following rules:\nIf bob likes car, then it is cold.\nIf dave dislikes car and pencil is big and george is tall, then alice is tall.\nIf dave likes apple and frank is sad, then eve is tall.\nIf alice is tall and it is cold and it is sunny, then alice is an enemy of carol.\nIf it is hot, then carol is an enemy of bob.\nIf frank dislikes pencil, then eve is happy.\nIf pencil is small and bob is an enemy of carol and it is sunny, then eve is happy.\nIf phone is big and it is sunny and eve is sad, then book is small.\nIf bob is an enemy of frank, then frank owns apple.\nIf it is hot and bob is a friend of bob and bob is a friend of eve, then dave owns book.\nIf apple is small and it is cold and ball is small, then car is small.\nIf dave is tall and eve is sad, then carol is an enemy of george.\nIf dave is a sibling of frank and alice likes pencil, then frank is a parent of eve.\nIf alice is sad and dave is a parent of dave, then carol is sad.\nIf bob dislikes phone and it is hot and carol owns book, then george is sad.\nIf eve dislikes apple and it is hot, then alice is a parent of frank.\nIf george owns phone, then george likes car.\nIf alice is happy, then dave likes book.\nIf dave is sad and alice is a parent of frank and alice is a sibling of carol, then carol is happy.\nIf george dislikes pencil and eve is an enemy of alice and carol is a sibling of alice, then it is hot.\nIf frank is happy, then dave is sad.\nIf eve is happy, then ball is big.\nIf it is hot and it is cold, then it is hot.\nIf ball is small, then frank likes ball.\nIf pencil is big and phone is wet, then car is big.\nIf bob is tall and george is an enemy of dave and dave is a friend of bob, then frank is a parent of frank.\nIf eve is sad, then bob likes ball.\nIf bob is hungry, then alice is a friend of bob.\nIf bob is a parent of dave, then george owns book.\nIf frank is hungry and book is big, then ball is small.\nIf book is big and alice is a parent of dave, then alice is an enemy of alice.\nIf bob is hungry and alice is an enemy of george and eve is happy, then eve is a sibling of george.\nIf bob owns car and it is hot, then george is tall.\nIf it is sunny, then alice is hungry.\n\nAnd the following facts:\nbob likes car.\ncarol dislikes pencil.\ndave is a sibling of alice.\ndave is a parent of bob.\ndave is happy.\nalice is a parent of dave.\ndave is a sibling of eve.\neve dislikes car.\nalice is a parent of eve.\nfrank is tall.\nbob is a sibling of frank.\n\nQUESTION:\nCould carol dislikes pencil explain dave is sad?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sad(dave)",
      "non_explanation": "dislikes(carol,pencil)"
    }
  },
  {
    "q": "parent(eve,dave).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nsad(frank).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank is sad.\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nIs eve is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(dave,ball).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nsad(frank).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank is sad.\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nIs dave dislikes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nsad(frank).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank is sad.\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nIs dave likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "big(pencil).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nsad(frank).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank is sad.\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nIs pencil is big true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(george,frank).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nsad(frank).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following information:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank is sad.\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nIs george is a friend of frank true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(frank).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nCould frank is sad explain it is sunny?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "explanation": "sad(frank)"
    }
  },
  {
    "q": "small(apple).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nCould apple is small explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "small(apple)"
    }
  },
  {
    "q": "friend(frank,eve).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nCould frank is a friend of eve explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "friend(frank,eve)"
    }
  },
  {
    "q": "enemy(george,carol).",
    "c": "small(book) :- sad(frank).\nsunny :- small(book).\nhappy(frank) :- sunny.\nwet(book) :- happy(frank).\ncold :- wet(book).\nparent(frank,bob) :- friend(eve,frank), dislikes(frank,ball).\nwet(apple) :- wet(apple).\nwet(apple) :- tall(dave).\nparent(eve,dave) :- sunny.\nsad(bob) :- cold, sunny, owns(alice,pencil).\nsad(frank) :- friend(frank,bob), sad(bob).\nhungry(frank) :- hungry(dave), likes(george,ball), hungry(bob).\nhungry(carol) :- tall(frank).\ntall(dave) :- happy(george), tall(eve), enemy(alice,george).\ntall(frank) :- tall(carol).\nbig(book) :- big(apple), big(phone).\nbig(pencil) :- happy(dave).\nbig(book) :- big(ball), cold.\nowns(dave,apple) :- dislikes(bob,phone).\nsad(alice) :- sad(eve), parent(bob,frank).\nhungry(dave) :- wet(book), dislikes(bob,phone), sad(george).\nhappy(dave) :- enemy(alice,george), happy(carol), enemy(carol,carol).\nowns(carol,apple) :- tall(frank), tall(dave).\nenemy(eve,dave) :- sad(george), hot, enemy(carol,alice).\nhappy(bob) :- dislikes(dave,apple), parent(dave,dave), owns(bob,car).\nenemy(frank,george) :- hungry(alice), enemy(bob,bob).\ndislikes(frank,apple) :- cold, parent(alice,carol), cold.\nowns(eve,ball) :- dislikes(frank,apple), wet(ball).\ndislikes(eve,apple) :- dislikes(eve,car).\nhungry(eve) :- hungry(bob).\nenemy(dave,george) :- enemy(eve,carol), friend(bob,frank), enemy(dave,alice).\nhungry(carol) :- hungry(eve).\ncold :- parent(eve,alice), cold.\nfriend(alice,george) :- hungry(dave).\nlikes(frank,ball).\nsmall(apple).\nfriend(frank,eve).\nenemy(george,carol).\ndislikes(carol,apple).\nenemy(eve,dave).\nowns(frank,apple).\nowns(dave,book).\ndislikes(dave,ball).\nwet(ball).\nowns(george,ball).",
    "natural language": "You are given the following rules:\nIf frank is sad, then book is small.\nIf book is small, then it is sunny.\nIf it is sunny, then frank is happy.\nIf frank is happy, then book is wet.\nIf book is wet, then it is cold.\nIf eve is a friend of frank and frank dislikes ball, then frank is a parent of bob.\nIf apple is wet, then apple is wet.\nIf dave is tall, then apple is wet.\nIf it is sunny, then eve is a parent of dave.\nIf it is cold and it is sunny and alice owns pencil, then bob is sad.\nIf frank is a friend of bob and bob is sad, then frank is sad.\nIf dave is hungry and george likes ball and bob is hungry, then frank is hungry.\nIf frank is tall, then carol is hungry.\nIf george is happy and eve is tall and alice is an enemy of george, then dave is tall.\nIf carol is tall, then frank is tall.\nIf apple is big and phone is big, then book is big.\nIf dave is happy, then pencil is big.\nIf ball is big and it is cold, then book is big.\nIf bob dislikes phone, then dave owns apple.\nIf eve is sad and bob is a parent of frank, then alice is sad.\nIf book is wet and bob dislikes phone and george is sad, then dave is hungry.\nIf alice is an enemy of george and carol is happy and carol is an enemy of carol, then dave is happy.\nIf frank is tall and dave is tall, then carol owns apple.\nIf george is sad and it is hot and carol is an enemy of alice, then eve is an enemy of dave.\nIf dave dislikes apple and dave is a parent of dave and bob owns car, then bob is happy.\nIf alice is hungry and bob is an enemy of bob, then frank is an enemy of george.\nIf it is cold and alice is a parent of carol and it is cold, then frank dislikes apple.\nIf frank dislikes apple and ball is wet, then eve owns ball.\nIf eve dislikes car, then eve dislikes apple.\nIf bob is hungry, then eve is hungry.\nIf eve is an enemy of carol and bob is a friend of frank and dave is an enemy of alice, then dave is an enemy of george.\nIf eve is hungry, then carol is hungry.\nIf eve is a parent of alice and it is cold, then it is cold.\nIf dave is hungry, then alice is a friend of george.\n\nAnd the following facts:\nfrank likes ball.\napple is small.\nfrank is a friend of eve.\ngeorge is an enemy of carol.\ncarol dislikes apple.\neve is an enemy of dave.\nfrank owns apple.\ndave owns book.\ndave dislikes ball.\nball is wet.\ngeorge owns ball.\n\nQUESTION:\nCould george is an enemy of carol explain it is sunny?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "sunny",
      "non_explanation": "enemy(george,carol)"
    }
  },
  {
    "q": "likes(alice,car).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\nenemy(carol,dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\ncarol is an enemy of dave.\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs alice likes car true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(car).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\nenemy(carol,dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\ncarol is an enemy of dave.\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs car is wet true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(dave).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\nenemy(carol,dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\ncarol is an enemy of dave.\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs dave is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,alice).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\nenemy(carol,dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\ncarol is an enemy of dave.\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs bob is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,phone).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\nenemy(carol,dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following information:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\ncarol is an enemy of dave.\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nIs eve likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(carol,dave).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nCould carol is an enemy of dave explain eve dislikes ball?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 7,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,ball)",
      "explanation": "enemy(carol,dave)"
    }
  },
  {
    "q": "hungry(carol).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nCould carol is hungry explain eve dislikes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,ball)",
      "non_explanation": "hungry(carol)"
    }
  },
  {
    "q": "parent(eve,carol).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nCould eve is a parent of carol explain eve dislikes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,ball)",
      "non_explanation": "parent(eve,carol)"
    }
  },
  {
    "q": "sibling(george,bob).",
    "c": "sad(eve) :- enemy(carol,dave).\nsad(george) :- sad(eve).\nowns(bob,ball) :- sad(george).\nsibling(frank,dave) :- owns(bob,ball).\nsunny :- sibling(frank,dave).\nhot :- hot.\nsunny :- enemy(george,frank), enemy(bob,eve).\nhot :- sunny, sibling(alice,alice).\nsad(frank) :- sibling(carol,bob).\nsunny :- hot, small(phone).\nsad(carol) :- enemy(eve,george), owns(george,car).\nwet(car) :- tall(carol).\ndislikes(george,phone) :- owns(bob,phone), happy(frank), friend(alice,frank).\nwet(book) :- happy(george).\nhot :- hot, sunny.\ndislikes(eve,ball) :- wet(car).\nsmall(book) :- sad(dave), likes(alice,car), likes(eve,ball).\nhot :- dislikes(frank,ball), sibling(george,frank).\nhot :- parent(bob,carol), tall(eve).\nsmall(pencil) :- owns(dave,car).\nsibling(alice,dave) :- wet(phone), hot.\nowns(eve,ball) :- sad(frank), small(pencil).\nowns(bob,apple) :- friend(frank,alice), enemy(carol,george).\nhot :- hot, hot.\nsibling(dave,dave) :- enemy(frank,bob), hungry(alice), enemy(frank,george).\nwet(pencil) :- enemy(alice,dave), sunny.\nsibling(carol,dave) :- dislikes(carol,phone), hungry(eve).\nparent(carol,george) :- sunny.\nwet(car) :- sunny.\ncold :- owns(bob,ball), cold.\nbig(book) :- sibling(george,carol).\nowns(carol,car) :- likes(george,phone), sad(frank).\nsad(eve) :- sunny.\nhungry(frank) :- sad(dave).\ndislikes(alice,car).\nhungry(carol).\nsibling(george,bob).\nparent(eve,carol).\nowns(eve,car).\nlikes(alice,car).\nlikes(eve,ball).\nfriend(bob,frank).\nfriend(alice,carol).\nfriend(frank,dave).\nenemy(george,alice).",
    "natural language": "You are given the following rules:\nIf carol is an enemy of dave, then eve is sad.\nIf eve is sad, then george is sad.\nIf george is sad, then bob owns ball.\nIf bob owns ball, then frank is a sibling of dave.\nIf frank is a sibling of dave, then it is sunny.\nIf it is hot, then it is hot.\nIf george is an enemy of frank and bob is an enemy of eve, then it is sunny.\nIf it is sunny and alice is a sibling of alice, then it is hot.\nIf carol is a sibling of bob, then frank is sad.\nIf it is hot and phone is small, then it is sunny.\nIf eve is an enemy of george and george owns car, then carol is sad.\nIf carol is tall, then car is wet.\nIf bob owns phone and frank is happy and alice is a friend of frank, then george dislikes phone.\nIf george is happy, then book is wet.\nIf it is hot and it is sunny, then it is hot.\nIf car is wet, then eve dislikes ball.\nIf dave is sad and alice likes car and eve likes ball, then book is small.\nIf frank dislikes ball and george is a sibling of frank, then it is hot.\nIf bob is a parent of carol and eve is tall, then it is hot.\nIf dave owns car, then pencil is small.\nIf phone is wet and it is hot, then alice is a sibling of dave.\nIf frank is sad and pencil is small, then eve owns ball.\nIf frank is a friend of alice and carol is an enemy of george, then bob owns apple.\nIf it is hot and it is hot, then it is hot.\nIf frank is an enemy of bob and alice is hungry and frank is an enemy of george, then dave is a sibling of dave.\nIf alice is an enemy of dave and it is sunny, then pencil is wet.\nIf carol dislikes phone and eve is hungry, then carol is a sibling of dave.\nIf it is sunny, then carol is a parent of george.\nIf it is sunny, then car is wet.\nIf bob owns ball and it is cold, then it is cold.\nIf george is a sibling of carol, then book is big.\nIf george likes phone and frank is sad, then carol owns car.\nIf it is sunny, then eve is sad.\nIf dave is sad, then frank is hungry.\n\nAnd the following facts:\nalice dislikes car.\ncarol is hungry.\ngeorge is a sibling of bob.\neve is a parent of carol.\neve owns car.\nalice likes car.\neve likes ball.\nbob is a friend of frank.\nalice is a friend of carol.\nfrank is a friend of dave.\ngeorge is an enemy of alice.\n\nQUESTION:\nCould george is a sibling of bob explain eve dislikes ball?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(eve,ball)",
      "non_explanation": "sibling(george,bob)"
    }
  },
  {
    "q": "cold.",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nlikes(alice,car).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\nalice likes car.\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nIs it is cold true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(dave).",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nlikes(alice,car).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\nalice likes car.\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nIs dave is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,eve).",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nlikes(alice,car).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\nalice likes car.\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nIs dave is a friend of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,george).",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nlikes(alice,car).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\nalice likes car.\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nIs bob is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,phone).",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nlikes(alice,car).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following information:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\nalice likes car.\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nIs alice likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,car).",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following rules:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nCould alice likes car explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "explanation": "likes(alice,car)"
    }
  },
  {
    "q": "owns(alice,pencil).",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following rules:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nCould alice owns pencil explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "non_explanation": "owns(alice,pencil)"
    }
  },
  {
    "q": "sibling(frank,george).",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following rules:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nCould frank is a sibling of george explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "non_explanation": "sibling(frank,george)"
    }
  },
  {
    "q": "parent(dave,eve).",
    "c": "cold :- likes(alice,car).\ndislikes(carol,car) :- cold.\nhappy(dave) :- dislikes(carol,car).\ndislikes(bob,apple) :- happy(dave).\nsmall(phone) :- dislikes(bob,apple).\ntall(carol) :- small(phone).\nparent(carol,carol) :- tall(carol).\nsad(frank) :- parent(carol,carol).\nenemy(alice,george) :- sad(frank).\ndislikes(frank,car) :- enemy(alice,george).\nparent(frank,frank) :- enemy(carol,bob), hungry(george).\nhungry(frank) :- hungry(alice).\nparent(carol,alice) :- likes(george,phone), cold, hungry(frank).\nwet(book) :- sad(carol), happy(carol), hot.\nowns(alice,book) :- cold.\nsunny :- friend(carol,eve).\nwet(pencil) :- hot, hot, hot.\nhungry(george) :- owns(bob,book), hungry(eve), wet(apple).\nparent(carol,eve) :- likes(alice,book), parent(dave,alice).\nsad(frank) :- sunny.\nlikes(bob,book) :- enemy(eve,frank).\ncold :- big(pencil).\ncold :- hungry(eve), cold.\nfriend(eve,dave) :- sad(frank), friend(george,carol).\ndislikes(frank,car) :- cold, enemy(george,alice).\nwet(ball) :- dislikes(dave,pencil), parent(dave,carol).\nwet(ball) :- cold.\nsunny :- small(car).\nlikes(bob,pencil) :- enemy(george,alice).\nowns(frank,car) :- tall(frank), owns(carol,apple), big(apple).\ndislikes(frank,phone) :- sibling(carol,bob), hot.\nhot :- hot, hot.\nsad(carol) :- sad(frank), tall(carol), hot.\nhot :- sad(bob).\nowns(eve,apple).\nsibling(frank,george).\nparent(dave,eve).\nowns(alice,pencil).\nenemy(dave,george).\ndislikes(dave,phone).\nsibling(bob,eve).\nsad(alice).\ndislikes(bob,car).\nowns(dave,book).\nsibling(alice,bob).",
    "natural language": "You are given the following rules:\nIf alice likes car, then it is cold.\nIf it is cold, then carol dislikes car.\nIf carol dislikes car, then dave is happy.\nIf dave is happy, then bob dislikes apple.\nIf bob dislikes apple, then phone is small.\nIf phone is small, then carol is tall.\nIf carol is tall, then carol is a parent of carol.\nIf carol is a parent of carol, then frank is sad.\nIf frank is sad, then alice is an enemy of george.\nIf alice is an enemy of george, then frank dislikes car.\nIf carol is an enemy of bob and george is hungry, then frank is a parent of frank.\nIf alice is hungry, then frank is hungry.\nIf george likes phone and it is cold and frank is hungry, then carol is a parent of alice.\nIf carol is sad and carol is happy and it is hot, then book is wet.\nIf it is cold, then alice owns book.\nIf carol is a friend of eve, then it is sunny.\nIf it is hot and it is hot and it is hot, then pencil is wet.\nIf bob owns book and eve is hungry and apple is wet, then george is hungry.\nIf alice likes book and dave is a parent of alice, then carol is a parent of eve.\nIf it is sunny, then frank is sad.\nIf eve is an enemy of frank, then bob likes book.\nIf pencil is big, then it is cold.\nIf eve is hungry and it is cold, then it is cold.\nIf frank is sad and george is a friend of carol, then eve is a friend of dave.\nIf it is cold and george is an enemy of alice, then frank dislikes car.\nIf dave dislikes pencil and dave is a parent of carol, then ball is wet.\nIf it is cold, then ball is wet.\nIf car is small, then it is sunny.\nIf george is an enemy of alice, then bob likes pencil.\nIf frank is tall and carol owns apple and apple is big, then frank owns car.\nIf carol is a sibling of bob and it is hot, then frank dislikes phone.\nIf it is hot and it is hot, then it is hot.\nIf frank is sad and carol is tall and it is hot, then carol is sad.\nIf bob is sad, then it is hot.\n\nAnd the following facts:\neve owns apple.\nfrank is a sibling of george.\ndave is a parent of eve.\nalice owns pencil.\ndave is an enemy of george.\ndave dislikes phone.\nbob is a sibling of eve.\nalice is sad.\nbob dislikes car.\ndave owns book.\nalice is a sibling of bob.\n\nQUESTION:\nCould dave is a parent of eve explain frank dislikes car?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,car)",
      "non_explanation": "parent(dave,eve)"
    }
  },
  {
    "q": "friend(carol,george).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhungry(frank).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nfrank is hungry.\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nIs carol is a friend of george true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(bob,dave).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhungry(frank).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nfrank is hungry.\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nIs bob is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,phone).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhungry(frank).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nfrank is hungry.\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nIs frank likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(dave,george).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhungry(frank).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nfrank is hungry.\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nIs dave is an enemy of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(carol,bob).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhungry(frank).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following information:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nfrank is hungry.\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nIs carol is a sibling of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(frank).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nCould frank is hungry explain frank dislikes pencil?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,pencil)",
      "explanation": "hungry(frank)"
    }
  },
  {
    "q": "happy(bob).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nCould bob is happy explain frank dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,pencil)",
      "non_explanation": "happy(bob)"
    }
  },
  {
    "q": "sibling(eve,dave).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nCould eve is a sibling of dave explain frank dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,pencil)",
      "non_explanation": "sibling(eve,dave)"
    }
  },
  {
    "q": "dislikes(dave,book).",
    "c": "small(book) :- hungry(frank).\ndislikes(bob,book) :- small(book).\nhungry(george) :- dislikes(bob,book).\nowns(alice,car) :- hungry(george).\ndislikes(frank,pencil) :- owns(alice,car).\nhot :- dislikes(frank,pencil).\ndislikes(bob,book) :- hot.\nsibling(carol,frank) :- dislikes(bob,book).\nsibling(eve,george) :- sibling(carol,frank).\nenemy(frank,frank) :- sibling(eve,george).\nfriend(bob,eve) :- parent(george,carol), owns(frank,book), dislikes(dave,apple).\nsad(george) :- sibling(frank,frank), cold.\nsunny :- friend(dave,eve), sad(bob).\ndislikes(alice,car) :- big(phone).\nsad(alice) :- likes(carol,ball).\nfriend(carol,dave) :- likes(bob,pencil), sibling(frank,alice).\nsunny :- hungry(alice), happy(alice).\nsmall(ball) :- sunny.\ncold :- likes(carol,pencil), parent(eve,dave).\ncold :- tall(dave), likes(alice,car), small(book).\ndislikes(alice,phone) :- cold, likes(carol,phone), happy(carol).\nhappy(eve) :- likes(carol,pencil), parent(alice,frank), hot.\nhungry(frank) :- owns(eve,phone), small(pencil).\nhungry(frank) :- sunny, hot, sibling(alice,alice).\ndislikes(george,apple) :- tall(eve), sunny, enemy(dave,carol).\nsmall(pencil) :- likes(alice,ball), small(apple).\nhappy(frank) :- likes(eve,pencil).\nowns(frank,pencil) :- owns(bob,ball), happy(dave), big(ball).\nowns(george,ball) :- hot.\nowns(dave,phone) :- big(phone), dislikes(dave,book), cold.\ndislikes(frank,apple) :- sunny, likes(frank,book).\nowns(eve,apple) :- enemy(carol,bob).\nsunny :- owns(alice,phone), sunny.\nowns(dave,phone) :- small(book).\nhappy(bob).\nfriend(carol,frank).\nsibling(eve,dave).\ndislikes(dave,book).\nfriend(carol,george).\nfriend(frank,alice).\nparent(bob,dave).\nlikes(dave,pencil).\nlikes(dave,phone).\nsibling(bob,eve).\nsibling(carol,eve).",
    "natural language": "You are given the following rules:\nIf frank is hungry, then book is small.\nIf book is small, then bob dislikes book.\nIf bob dislikes book, then george is hungry.\nIf george is hungry, then alice owns car.\nIf alice owns car, then frank dislikes pencil.\nIf frank dislikes pencil, then it is hot.\nIf it is hot, then bob dislikes book.\nIf bob dislikes book, then carol is a sibling of frank.\nIf carol is a sibling of frank, then eve is a sibling of george.\nIf eve is a sibling of george, then frank is an enemy of frank.\nIf george is a parent of carol and frank owns book and dave dislikes apple, then bob is a friend of eve.\nIf frank is a sibling of frank and it is cold, then george is sad.\nIf dave is a friend of eve and bob is sad, then it is sunny.\nIf phone is big, then alice dislikes car.\nIf carol likes ball, then alice is sad.\nIf bob likes pencil and frank is a sibling of alice, then carol is a friend of dave.\nIf alice is hungry and alice is happy, then it is sunny.\nIf it is sunny, then ball is small.\nIf carol likes pencil and eve is a parent of dave, then it is cold.\nIf dave is tall and alice likes car and book is small, then it is cold.\nIf it is cold and carol likes phone and carol is happy, then alice dislikes phone.\nIf carol likes pencil and alice is a parent of frank and it is hot, then eve is happy.\nIf eve owns phone and pencil is small, then frank is hungry.\nIf it is sunny and it is hot and alice is a sibling of alice, then frank is hungry.\nIf eve is tall and it is sunny and dave is an enemy of carol, then george dislikes apple.\nIf alice likes ball and apple is small, then pencil is small.\nIf eve likes pencil, then frank is happy.\nIf bob owns ball and dave is happy and ball is big, then frank owns pencil.\nIf it is hot, then george owns ball.\nIf phone is big and dave dislikes book and it is cold, then dave owns phone.\nIf it is sunny and frank likes book, then frank dislikes apple.\nIf carol is an enemy of bob, then eve owns apple.\nIf alice owns phone and it is sunny, then it is sunny.\nIf book is small, then dave owns phone.\n\nAnd the following facts:\nbob is happy.\ncarol is a friend of frank.\neve is a sibling of dave.\ndave dislikes book.\ncarol is a friend of george.\nfrank is a friend of alice.\nbob is a parent of dave.\ndave likes pencil.\ndave likes phone.\nbob is a sibling of eve.\ncarol is a sibling of eve.\n\nQUESTION:\nCould dave dislikes book explain frank dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(frank,pencil)",
      "non_explanation": "dislikes(dave,book)"
    }
  },
  {
    "q": "happy(carol).",
    "c": "big(apple) :- hot.\nhappy(carol) :- big(apple).\nowns(bob,ball) :- happy(carol).\nhungry(alice) :- owns(bob,ball).\nhappy(frank) :- hungry(alice).\nsunny :- happy(frank).\nfriend(bob,dave) :- sunny.\nparent(frank,eve) :- friend(bob,dave).\nhot :- parent(frank,eve).\nhappy(dave) :- hot.\ntall(carol) :- happy(dave).\nfriend(frank,eve) :- tall(carol).\nhot :- friend(frank,eve).\nhungry(george) :- hot.\nfriend(eve,george) :- hungry(george).\nsibling(george,carol) :- friend(eve,george).\nhappy(george) :- sibling(george,carol).\nsad(carol) :- happy(george).\nhot :- sad(carol).\nwet(car) :- hot.\nowns(george,car) :- happy(dave), parent(bob,eve), likes(dave,apple).\nowns(eve,pencil) :- dislikes(carol,pencil), owns(alice,book), parent(bob,george).\nhungry(frank) :- wet(car).\nlikes(carol,pencil) :- hungry(carol), likes(bob,car), likes(george,apple).\nlikes(alice,ball) :- likes(bob,ball).\ncold :- dislikes(frank,phone), sad(george).\nhungry(frank) :- tall(bob).\nfriend(carol,alice) :- friend(bob,carol), owns(dave,phone), friend(bob,bob).\ncold :- enemy(dave,bob), cold.\nowns(alice,pencil) :- dislikes(frank,car), sunny.\nfriend(frank,alice) :- wet(phone).\ndislikes(frank,pencil) :- dislikes(bob,apple), sunny, dislikes(frank,car).\ndislikes(george,car) :- sad(alice), happy(frank), dislikes(dave,ball).\nhot :- big(pencil), sad(carol), hot.\nhot.\nenemy(bob,frank).\nlikes(alice,car).\nlikes(eve,book).\nsad(carol).\nfriend(dave,eve).\nparent(george,frank).\ndislikes(eve,ball).\nparent(eve,bob).\nfriend(bob,dave).\nlikes(dave,apple).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nIf it is hot, then apple is big.\nIf apple is big, then carol is happy.\nIf carol is happy, then bob owns ball.\nIf bob owns ball, then alice is hungry.\nIf alice is hungry, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then frank is a parent of eve.\nIf frank is a parent of eve, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then carol is tall.\nIf carol is tall, then frank is a friend of eve.\nIf frank is a friend of eve, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then eve is a friend of george.\nIf eve is a friend of george, then george is a sibling of carol.\nIf george is a sibling of carol, then george is happy.\nIf george is happy, then carol is sad.\nIf carol is sad, then it is hot.\nIf it is hot, then car is wet.\nIf dave is happy and bob is a parent of eve and dave likes apple, then george owns car.\nIf carol dislikes pencil and alice owns book and bob is a parent of george, then eve owns pencil.\nIf car is wet, then frank is hungry.\nIf carol is hungry and bob likes car and george likes apple, then carol likes pencil.\nIf bob likes ball, then alice likes ball.\nIf frank dislikes phone and george is sad, then it is cold.\nIf bob is tall, then frank is hungry.\nIf bob is a friend of carol and dave owns phone and bob is a friend of bob, then carol is a friend of alice.\nIf dave is an enemy of bob and it is cold, then it is cold.\nIf frank dislikes car and it is sunny, then alice owns pencil.\nIf phone is wet, then frank is a friend of alice.\nIf bob dislikes apple and it is sunny and frank dislikes car, then frank dislikes pencil.\nIf alice is sad and frank is happy and dave dislikes ball, then george dislikes car.\nIf pencil is big and carol is sad and it is hot, then it is hot.\n\nAnd the following facts:\nit is hot.\nbob is an enemy of frank.\nalice likes car.\neve likes book.\ncarol is sad.\ndave is a friend of eve.\ngeorge is a parent of frank.\neve dislikes ball.\neve is a parent of bob.\nbob is a friend of dave.\ndave likes apple.\nalice likes apple.\n\nQUESTION:\nIs carol is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(eve,book).",
    "c": "big(apple) :- hot.\nhappy(carol) :- big(apple).\nowns(bob,ball) :- happy(carol).\nhungry(alice) :- owns(bob,ball).\nhappy(frank) :- hungry(alice).\nsunny :- happy(frank).\nfriend(bob,dave) :- sunny.\nparent(frank,eve) :- friend(bob,dave).\nhot :- parent(frank,eve).\nhappy(dave) :- hot.\ntall(carol) :- happy(dave).\nfriend(frank,eve) :- tall(carol).\nhot :- friend(frank,eve).\nhungry(george) :- hot.\nfriend(eve,george) :- hungry(george).\nsibling(george,carol) :- friend(eve,george).\nhappy(george) :- sibling(george,carol).\nsad(carol) :- happy(george).\nhot :- sad(carol).\nwet(car) :- hot.\nowns(george,car) :- happy(dave), parent(bob,eve), likes(dave,apple).\nowns(eve,pencil) :- dislikes(carol,pencil), owns(alice,book), parent(bob,george).\nhungry(frank) :- wet(car).\nlikes(carol,pencil) :- hungry(carol), likes(bob,car), likes(george,apple).\nlikes(alice,ball) :- likes(bob,ball).\ncold :- dislikes(frank,phone), sad(george).\nhungry(frank) :- tall(bob).\nfriend(carol,alice) :- friend(bob,carol), owns(dave,phone), friend(bob,bob).\ncold :- enemy(dave,bob), cold.\nowns(alice,pencil) :- dislikes(frank,car), sunny.\nfriend(frank,alice) :- wet(phone).\ndislikes(frank,pencil) :- dislikes(bob,apple), sunny, dislikes(frank,car).\ndislikes(george,car) :- sad(alice), happy(frank), dislikes(dave,ball).\nhot :- big(pencil), sad(carol), hot.\nhot.\nenemy(bob,frank).\nlikes(alice,car).\nlikes(eve,book).\nsad(carol).\nfriend(dave,eve).\nparent(george,frank).\ndislikes(eve,ball).\nparent(eve,bob).\nfriend(bob,dave).\nlikes(dave,apple).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nIf it is hot, then apple is big.\nIf apple is big, then carol is happy.\nIf carol is happy, then bob owns ball.\nIf bob owns ball, then alice is hungry.\nIf alice is hungry, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then frank is a parent of eve.\nIf frank is a parent of eve, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then carol is tall.\nIf carol is tall, then frank is a friend of eve.\nIf frank is a friend of eve, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then eve is a friend of george.\nIf eve is a friend of george, then george is a sibling of carol.\nIf george is a sibling of carol, then george is happy.\nIf george is happy, then carol is sad.\nIf carol is sad, then it is hot.\nIf it is hot, then car is wet.\nIf dave is happy and bob is a parent of eve and dave likes apple, then george owns car.\nIf carol dislikes pencil and alice owns book and bob is a parent of george, then eve owns pencil.\nIf car is wet, then frank is hungry.\nIf carol is hungry and bob likes car and george likes apple, then carol likes pencil.\nIf bob likes ball, then alice likes ball.\nIf frank dislikes phone and george is sad, then it is cold.\nIf bob is tall, then frank is hungry.\nIf bob is a friend of carol and dave owns phone and bob is a friend of bob, then carol is a friend of alice.\nIf dave is an enemy of bob and it is cold, then it is cold.\nIf frank dislikes car and it is sunny, then alice owns pencil.\nIf phone is wet, then frank is a friend of alice.\nIf bob dislikes apple and it is sunny and frank dislikes car, then frank dislikes pencil.\nIf alice is sad and frank is happy and dave dislikes ball, then george dislikes car.\nIf pencil is big and carol is sad and it is hot, then it is hot.\n\nAnd the following facts:\nit is hot.\nbob is an enemy of frank.\nalice likes car.\neve likes book.\ncarol is sad.\ndave is a friend of eve.\ngeorge is a parent of frank.\neve dislikes ball.\neve is a parent of bob.\nbob is a friend of dave.\ndave likes apple.\nalice likes apple.\n\nQUESTION:\nIs eve likes book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,book).",
    "c": "big(apple) :- hot.\nhappy(carol) :- big(apple).\nowns(bob,ball) :- happy(carol).\nhungry(alice) :- owns(bob,ball).\nhappy(frank) :- hungry(alice).\nsunny :- happy(frank).\nfriend(bob,dave) :- sunny.\nparent(frank,eve) :- friend(bob,dave).\nhot :- parent(frank,eve).\nhappy(dave) :- hot.\ntall(carol) :- happy(dave).\nfriend(frank,eve) :- tall(carol).\nhot :- friend(frank,eve).\nhungry(george) :- hot.\nfriend(eve,george) :- hungry(george).\nsibling(george,carol) :- friend(eve,george).\nhappy(george) :- sibling(george,carol).\nsad(carol) :- happy(george).\nhot :- sad(carol).\nwet(car) :- hot.\nowns(george,car) :- happy(dave), parent(bob,eve), likes(dave,apple).\nowns(eve,pencil) :- dislikes(carol,pencil), owns(alice,book), parent(bob,george).\nhungry(frank) :- wet(car).\nlikes(carol,pencil) :- hungry(carol), likes(bob,car), likes(george,apple).\nlikes(alice,ball) :- likes(bob,ball).\ncold :- dislikes(frank,phone), sad(george).\nhungry(frank) :- tall(bob).\nfriend(carol,alice) :- friend(bob,carol), owns(dave,phone), friend(bob,bob).\ncold :- enemy(dave,bob), cold.\nowns(alice,pencil) :- dislikes(frank,car), sunny.\nfriend(frank,alice) :- wet(phone).\ndislikes(frank,pencil) :- dislikes(bob,apple), sunny, dislikes(frank,car).\ndislikes(george,car) :- sad(alice), happy(frank), dislikes(dave,ball).\nhot :- big(pencil), sad(carol), hot.\nhot.\nenemy(bob,frank).\nlikes(alice,car).\nlikes(eve,book).\nsad(carol).\nfriend(dave,eve).\nparent(george,frank).\ndislikes(eve,ball).\nparent(eve,bob).\nfriend(bob,dave).\nlikes(dave,apple).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nIf it is hot, then apple is big.\nIf apple is big, then carol is happy.\nIf carol is happy, then bob owns ball.\nIf bob owns ball, then alice is hungry.\nIf alice is hungry, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then frank is a parent of eve.\nIf frank is a parent of eve, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then carol is tall.\nIf carol is tall, then frank is a friend of eve.\nIf frank is a friend of eve, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then eve is a friend of george.\nIf eve is a friend of george, then george is a sibling of carol.\nIf george is a sibling of carol, then george is happy.\nIf george is happy, then carol is sad.\nIf carol is sad, then it is hot.\nIf it is hot, then car is wet.\nIf dave is happy and bob is a parent of eve and dave likes apple, then george owns car.\nIf carol dislikes pencil and alice owns book and bob is a parent of george, then eve owns pencil.\nIf car is wet, then frank is hungry.\nIf carol is hungry and bob likes car and george likes apple, then carol likes pencil.\nIf bob likes ball, then alice likes ball.\nIf frank dislikes phone and george is sad, then it is cold.\nIf bob is tall, then frank is hungry.\nIf bob is a friend of carol and dave owns phone and bob is a friend of bob, then carol is a friend of alice.\nIf dave is an enemy of bob and it is cold, then it is cold.\nIf frank dislikes car and it is sunny, then alice owns pencil.\nIf phone is wet, then frank is a friend of alice.\nIf bob dislikes apple and it is sunny and frank dislikes car, then frank dislikes pencil.\nIf alice is sad and frank is happy and dave dislikes ball, then george dislikes car.\nIf pencil is big and carol is sad and it is hot, then it is hot.\n\nAnd the following facts:\nit is hot.\nbob is an enemy of frank.\nalice likes car.\neve likes book.\ncarol is sad.\ndave is a friend of eve.\ngeorge is a parent of frank.\neve dislikes ball.\neve is a parent of bob.\nbob is a friend of dave.\ndave likes apple.\nalice likes apple.\n\nQUESTION:\nIs eve dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,carol).",
    "c": "big(apple) :- hot.\nhappy(carol) :- big(apple).\nowns(bob,ball) :- happy(carol).\nhungry(alice) :- owns(bob,ball).\nhappy(frank) :- hungry(alice).\nsunny :- happy(frank).\nfriend(bob,dave) :- sunny.\nparent(frank,eve) :- friend(bob,dave).\nhot :- parent(frank,eve).\nhappy(dave) :- hot.\ntall(carol) :- happy(dave).\nfriend(frank,eve) :- tall(carol).\nhot :- friend(frank,eve).\nhungry(george) :- hot.\nfriend(eve,george) :- hungry(george).\nsibling(george,carol) :- friend(eve,george).\nhappy(george) :- sibling(george,carol).\nsad(carol) :- happy(george).\nhot :- sad(carol).\nwet(car) :- hot.\nowns(george,car) :- happy(dave), parent(bob,eve), likes(dave,apple).\nowns(eve,pencil) :- dislikes(carol,pencil), owns(alice,book), parent(bob,george).\nhungry(frank) :- wet(car).\nlikes(carol,pencil) :- hungry(carol), likes(bob,car), likes(george,apple).\nlikes(alice,ball) :- likes(bob,ball).\ncold :- dislikes(frank,phone), sad(george).\nhungry(frank) :- tall(bob).\nfriend(carol,alice) :- friend(bob,carol), owns(dave,phone), friend(bob,bob).\ncold :- enemy(dave,bob), cold.\nowns(alice,pencil) :- dislikes(frank,car), sunny.\nfriend(frank,alice) :- wet(phone).\ndislikes(frank,pencil) :- dislikes(bob,apple), sunny, dislikes(frank,car).\ndislikes(george,car) :- sad(alice), happy(frank), dislikes(dave,ball).\nhot :- big(pencil), sad(carol), hot.\nhot.\nenemy(bob,frank).\nlikes(alice,car).\nlikes(eve,book).\nsad(carol).\nfriend(dave,eve).\nparent(george,frank).\ndislikes(eve,ball).\nparent(eve,bob).\nfriend(bob,dave).\nlikes(dave,apple).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nIf it is hot, then apple is big.\nIf apple is big, then carol is happy.\nIf carol is happy, then bob owns ball.\nIf bob owns ball, then alice is hungry.\nIf alice is hungry, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then frank is a parent of eve.\nIf frank is a parent of eve, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then carol is tall.\nIf carol is tall, then frank is a friend of eve.\nIf frank is a friend of eve, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then eve is a friend of george.\nIf eve is a friend of george, then george is a sibling of carol.\nIf george is a sibling of carol, then george is happy.\nIf george is happy, then carol is sad.\nIf carol is sad, then it is hot.\nIf it is hot, then car is wet.\nIf dave is happy and bob is a parent of eve and dave likes apple, then george owns car.\nIf carol dislikes pencil and alice owns book and bob is a parent of george, then eve owns pencil.\nIf car is wet, then frank is hungry.\nIf carol is hungry and bob likes car and george likes apple, then carol likes pencil.\nIf bob likes ball, then alice likes ball.\nIf frank dislikes phone and george is sad, then it is cold.\nIf bob is tall, then frank is hungry.\nIf bob is a friend of carol and dave owns phone and bob is a friend of bob, then carol is a friend of alice.\nIf dave is an enemy of bob and it is cold, then it is cold.\nIf frank dislikes car and it is sunny, then alice owns pencil.\nIf phone is wet, then frank is a friend of alice.\nIf bob dislikes apple and it is sunny and frank dislikes car, then frank dislikes pencil.\nIf alice is sad and frank is happy and dave dislikes ball, then george dislikes car.\nIf pencil is big and carol is sad and it is hot, then it is hot.\n\nAnd the following facts:\nit is hot.\nbob is an enemy of frank.\nalice likes car.\neve likes book.\ncarol is sad.\ndave is a friend of eve.\ngeorge is a parent of frank.\neve dislikes ball.\neve is a parent of bob.\nbob is a friend of dave.\ndave likes apple.\nalice likes apple.\n\nQUESTION:\nIs bob is a friend of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "big(apple) :- hot.\nhappy(carol) :- big(apple).\nowns(bob,ball) :- happy(carol).\nhungry(alice) :- owns(bob,ball).\nhappy(frank) :- hungry(alice).\nsunny :- happy(frank).\nfriend(bob,dave) :- sunny.\nparent(frank,eve) :- friend(bob,dave).\nhot :- parent(frank,eve).\nhappy(dave) :- hot.\ntall(carol) :- happy(dave).\nfriend(frank,eve) :- tall(carol).\nhot :- friend(frank,eve).\nhungry(george) :- hot.\nfriend(eve,george) :- hungry(george).\nsibling(george,carol) :- friend(eve,george).\nhappy(george) :- sibling(george,carol).\nsad(carol) :- happy(george).\nhot :- sad(carol).\nwet(car) :- hot.\nowns(george,car) :- happy(dave), parent(bob,eve), likes(dave,apple).\nowns(eve,pencil) :- dislikes(carol,pencil), owns(alice,book), parent(bob,george).\nhungry(frank) :- wet(car).\nlikes(carol,pencil) :- hungry(carol), likes(bob,car), likes(george,apple).\nlikes(alice,ball) :- likes(bob,ball).\ncold :- dislikes(frank,phone), sad(george).\nhungry(frank) :- tall(bob).\nfriend(carol,alice) :- friend(bob,carol), owns(dave,phone), friend(bob,bob).\ncold :- enemy(dave,bob), cold.\nowns(alice,pencil) :- dislikes(frank,car), sunny.\nfriend(frank,alice) :- wet(phone).\ndislikes(frank,pencil) :- dislikes(bob,apple), sunny, dislikes(frank,car).\ndislikes(george,car) :- sad(alice), happy(frank), dislikes(dave,ball).\nhot :- big(pencil), sad(carol), hot.\nhot.\nenemy(bob,frank).\nlikes(alice,car).\nlikes(eve,book).\nsad(carol).\nfriend(dave,eve).\nparent(george,frank).\ndislikes(eve,ball).\nparent(eve,bob).\nfriend(bob,dave).\nlikes(dave,apple).\nlikes(alice,apple).",
    "natural language": "You are given the following information:\nIf it is hot, then apple is big.\nIf apple is big, then carol is happy.\nIf carol is happy, then bob owns ball.\nIf bob owns ball, then alice is hungry.\nIf alice is hungry, then frank is happy.\nIf frank is happy, then it is sunny.\nIf it is sunny, then bob is a friend of dave.\nIf bob is a friend of dave, then frank is a parent of eve.\nIf frank is a parent of eve, then it is hot.\nIf it is hot, then dave is happy.\nIf dave is happy, then carol is tall.\nIf carol is tall, then frank is a friend of eve.\nIf frank is a friend of eve, then it is hot.\nIf it is hot, then george is hungry.\nIf george is hungry, then eve is a friend of george.\nIf eve is a friend of george, then george is a sibling of carol.\nIf george is a sibling of carol, then george is happy.\nIf george is happy, then carol is sad.\nIf carol is sad, then it is hot.\nIf it is hot, then car is wet.\nIf dave is happy and bob is a parent of eve and dave likes apple, then george owns car.\nIf carol dislikes pencil and alice owns book and bob is a parent of george, then eve owns pencil.\nIf car is wet, then frank is hungry.\nIf carol is hungry and bob likes car and george likes apple, then carol likes pencil.\nIf bob likes ball, then alice likes ball.\nIf frank dislikes phone and george is sad, then it is cold.\nIf bob is tall, then frank is hungry.\nIf bob is a friend of carol and dave owns phone and bob is a friend of bob, then carol is a friend of alice.\nIf dave is an enemy of bob and it is cold, then it is cold.\nIf frank dislikes car and it is sunny, then alice owns pencil.\nIf phone is wet, then frank is a friend of alice.\nIf bob dislikes apple and it is sunny and frank dislikes car, then frank dislikes pencil.\nIf alice is sad and frank is happy and dave dislikes ball, then george dislikes car.\nIf pencil is big and carol is sad and it is hot, then it is hot.\n\nAnd the following facts:\nit is hot.\nbob is an enemy of frank.\nalice likes car.\neve likes book.\ncarol is sad.\ndave is a friend of eve.\ngeorge is a parent of frank.\neve dislikes ball.\neve is a parent of bob.\nbob is a friend of dave.\ndave likes apple.\nalice likes apple.\n\nQUESTION:\nIs dave is a parent of bob true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(george).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nsad(carol).\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nIs george is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,frank).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nsad(carol).\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nIs george is an enemy of frank true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(bob,carol).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nsad(carol).\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nIs bob is an enemy of carol true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,book).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nsad(carol).\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nIs george owns book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(frank,car).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nsad(carol).\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ncarol is sad.\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nIs frank likes car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 12,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(carol).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following rules:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nCould carol is sad explain book is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 16,
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "explanation": "sad(carol)"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following rules:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nCould frank owns car explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "owns(frank,car)"
    }
  },
  {
    "q": "dislikes(dave,pencil).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following rules:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nCould dave dislikes pencil explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "dislikes(dave,pencil)"
    }
  },
  {
    "q": "likes(george,apple).",
    "c": "tall(alice) :- sad(carol).\ntall(george) :- tall(alice).\nbig(pencil) :- tall(george).\nwet(pencil) :- big(pencil).\nhungry(alice) :- wet(pencil).\nfriend(alice,eve) :- hungry(alice).\nwet(car) :- friend(alice,eve).\nenemy(george,frank) :- wet(car).\nhappy(eve) :- enemy(george,frank).\nbig(ball) :- happy(eve).\nsad(dave) :- big(ball).\nfriend(alice,dave) :- sad(dave).\nbig(car) :- friend(alice,dave).\nlikes(eve,pencil) :- big(car).\nhappy(george) :- likes(eve,pencil).\nbig(book) :- happy(george).\nbig(car) :- big(book).\nowns(carol,ball) :- big(car).\ntall(george) :- owns(carol,ball).\nowns(frank,ball) :- tall(george).\nsibling(carol,george) :- parent(frank,frank), tall(george).\nsibling(eve,carol) :- wet(car), hungry(carol).\nsad(eve) :- friend(george,george), cold.\nhot :- sibling(alice,carol), small(book), likes(dave,phone).\nsad(carol) :- sad(bob), hot.\nhot :- small(car), parent(bob,alice), enemy(frank,george).\nfriend(carol,bob) :- sunny, owns(bob,book), sibling(frank,dave).\nfriend(carol,carol) :- parent(george,alice), friend(carol,eve).\ndislikes(bob,ball) :- owns(alice,car), enemy(george,frank), friend(frank,george).\ndislikes(eve,pencil) :- wet(pencil).\nsmall(apple) :- sibling(frank,dave).\nsibling(carol,dave) :- sunny.\nsmall(phone) :- sunny, sunny, friend(alice,carol).\nsibling(bob,frank) :- big(phone), cold.\nlikes(george,apple).\nowns(frank,car).\ndislikes(dave,pencil).\nparent(eve,carol).\ntall(eve).\nenemy(dave,bob).\nlikes(bob,phone).\ndislikes(eve,car).\nlikes(bob,pencil).\ndislikes(frank,apple).\nowns(dave,book).",
    "natural language": "You are given the following rules:\nIf carol is sad, then alice is tall.\nIf alice is tall, then george is tall.\nIf george is tall, then pencil is big.\nIf pencil is big, then pencil is wet.\nIf pencil is wet, then alice is hungry.\nIf alice is hungry, then alice is a friend of eve.\nIf alice is a friend of eve, then car is wet.\nIf car is wet, then george is an enemy of frank.\nIf george is an enemy of frank, then eve is happy.\nIf eve is happy, then ball is big.\nIf ball is big, then dave is sad.\nIf dave is sad, then alice is a friend of dave.\nIf alice is a friend of dave, then car is big.\nIf car is big, then eve likes pencil.\nIf eve likes pencil, then george is happy.\nIf george is happy, then book is big.\nIf book is big, then car is big.\nIf car is big, then carol owns ball.\nIf carol owns ball, then george is tall.\nIf george is tall, then frank owns ball.\nIf frank is a parent of frank and george is tall, then carol is a sibling of george.\nIf car is wet and carol is hungry, then eve is a sibling of carol.\nIf george is a friend of george and it is cold, then eve is sad.\nIf alice is a sibling of carol and book is small and dave likes phone, then it is hot.\nIf bob is sad and it is hot, then carol is sad.\nIf car is small and bob is a parent of alice and frank is an enemy of george, then it is hot.\nIf it is sunny and bob owns book and frank is a sibling of dave, then carol is a friend of bob.\nIf george is a parent of alice and carol is a friend of eve, then carol is a friend of carol.\nIf alice owns car and george is an enemy of frank and frank is a friend of george, then bob dislikes ball.\nIf pencil is wet, then eve dislikes pencil.\nIf frank is a sibling of dave, then apple is small.\nIf it is sunny, then carol is a sibling of dave.\nIf it is sunny and it is sunny and alice is a friend of carol, then phone is small.\nIf phone is big and it is cold, then bob is a sibling of frank.\n\nAnd the following facts:\ngeorge likes apple.\nfrank owns car.\ndave dislikes pencil.\neve is a parent of carol.\neve is tall.\ndave is an enemy of bob.\nbob likes phone.\neve dislikes car.\nbob likes pencil.\nfrank dislikes apple.\ndave owns book.\n\nQUESTION:\nCould george likes apple explain book is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 12,
      "reasoning_type": "abduction",
      "conclusion": "big(book)",
      "non_explanation": "likes(george,apple)"
    }
  },
  {
    "q": "enemy(bob,alice).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nsibling(eve,frank).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following information:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\neve is a sibling of frank.\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nIs bob is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nsibling(eve,frank).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following information:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\neve is a sibling of frank.\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nIs george is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(carol,book).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nsibling(eve,frank).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following information:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\neve is a sibling of frank.\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nIs carol dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(dave,apple).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nsibling(eve,frank).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following information:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\neve is a sibling of frank.\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nIs dave likes apple true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,dave).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nsibling(eve,frank).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following information:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\neve is a sibling of frank.\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nIs george is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(eve,frank).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following rules:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nCould eve is a sibling of frank explain george dislikes pencil?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,pencil)",
      "explanation": "sibling(eve,frank)"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following rules:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nCould george is an enemy of bob explain george dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,pencil)",
      "non_explanation": "enemy(george,bob)"
    }
  },
  {
    "q": "friend(george,carol).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following rules:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nCould george is a friend of carol explain george dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,pencil)",
      "non_explanation": "friend(george,carol)"
    }
  },
  {
    "q": "parent(alice,eve).",
    "c": "dislikes(george,pencil) :- sibling(eve,frank).\nhungry(george) :- hungry(alice), likes(bob,phone), owns(eve,pencil).\nhungry(eve) :- sibling(eve,frank), sibling(alice,alice).\nhot :- hot, tall(alice), happy(bob).\ncold :- big(car).\nhot :- likes(alice,pencil), hungry(george).\nwet(apple) :- likes(george,apple).\nsunny :- dislikes(george,book).\nbig(apple) :- sibling(dave,alice), happy(bob), hot.\nwet(car) :- wet(pencil).\nwet(car) :- wet(book).\nbig(car) :- sibling(bob,alice).\ncold :- enemy(alice,dave), sibling(dave,alice), wet(car).\nsunny :- happy(alice).\nhappy(alice) :- happy(dave), cold, friend(eve,frank).\nsad(frank) :- cold.\nhungry(bob) :- likes(george,apple).\nsmall(phone) :- friend(dave,frank).\nhappy(bob) :- happy(george), happy(frank).\nparent(frank,frank) :- owns(eve,car), parent(eve,carol).\nsad(alice) :- small(phone).\nparent(dave,george) :- wet(book), dislikes(george,apple).\nfriend(carol,frank) :- cold, sibling(frank,george).\nlikes(eve,car) :- owns(alice,pencil), parent(dave,george), owns(carol,ball).\nsibling(bob,eve) :- cold.\nlikes(dave,book) :- likes(alice,book).\nsibling(dave,bob) :- sibling(bob,bob).\nfriend(bob,carol) :- small(car), parent(bob,eve).\nsmall(pencil) :- likes(carol,book).\nsunny :- sunny, sibling(frank,frank).\nsunny :- sunny.\nlikes(frank,phone) :- parent(george,bob).\nwet(book) :- big(ball).\nsad(frank) :- sad(alice), sad(eve).\nenemy(george,bob).\nparent(alice,eve).\nfriend(george,carol).\nenemy(bob,alice).\nsibling(eve,bob).\nhungry(frank).\nsmall(car).\ntall(dave).\nsibling(dave,george).\nsibling(frank,george).\nfriend(carol,frank).\nparent(dave,frank).\nenemy(alice,frank).\nowns(eve,pencil).",
    "natural language": "You are given the following rules:\nIf eve is a sibling of frank, then george dislikes pencil.\nIf alice is hungry and bob likes phone and eve owns pencil, then george is hungry.\nIf eve is a sibling of frank and alice is a sibling of alice, then eve is hungry.\nIf it is hot and alice is tall and bob is happy, then it is hot.\nIf car is big, then it is cold.\nIf alice likes pencil and george is hungry, then it is hot.\nIf george likes apple, then apple is wet.\nIf george dislikes book, then it is sunny.\nIf dave is a sibling of alice and bob is happy and it is hot, then apple is big.\nIf pencil is wet, then car is wet.\nIf book is wet, then car is wet.\nIf bob is a sibling of alice, then car is big.\nIf alice is an enemy of dave and dave is a sibling of alice and car is wet, then it is cold.\nIf alice is happy, then it is sunny.\nIf dave is happy and it is cold and eve is a friend of frank, then alice is happy.\nIf it is cold, then frank is sad.\nIf george likes apple, then bob is hungry.\nIf dave is a friend of frank, then phone is small.\nIf george is happy and frank is happy, then bob is happy.\nIf eve owns car and eve is a parent of carol, then frank is a parent of frank.\nIf phone is small, then alice is sad.\nIf book is wet and george dislikes apple, then dave is a parent of george.\nIf it is cold and frank is a sibling of george, then carol is a friend of frank.\nIf alice owns pencil and dave is a parent of george and carol owns ball, then eve likes car.\nIf it is cold, then bob is a sibling of eve.\nIf alice likes book, then dave likes book.\nIf bob is a sibling of bob, then dave is a sibling of bob.\nIf car is small and bob is a parent of eve, then bob is a friend of carol.\nIf carol likes book, then pencil is small.\nIf it is sunny and frank is a sibling of frank, then it is sunny.\nIf it is sunny, then it is sunny.\nIf george is a parent of bob, then frank likes phone.\nIf ball is big, then book is wet.\nIf alice is sad and eve is sad, then frank is sad.\n\nAnd the following facts:\ngeorge is an enemy of bob.\nalice is a parent of eve.\ngeorge is a friend of carol.\nbob is an enemy of alice.\neve is a sibling of bob.\nfrank is hungry.\ncar is small.\ndave is tall.\ndave is a sibling of george.\nfrank is a sibling of george.\ncarol is a friend of frank.\ndave is a parent of frank.\nalice is an enemy of frank.\neve owns pencil.\n\nQUESTION:\nCould alice is a parent of eve explain george dislikes pencil?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(george,pencil)",
      "non_explanation": "parent(alice,eve)"
    }
  },
  {
    "q": "owns(george,apple).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(george,apple).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(george,apple).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\ngeorge owns apple.\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\ngeorge owns apple.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nIs george owns apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,book).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(george,apple).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(george,apple).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\ngeorge owns apple.\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\ngeorge owns apple.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nIs eve owns book true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": 1,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,phone).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(george,apple).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(george,apple).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\ngeorge owns apple.\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\ngeorge owns apple.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nIs alice likes phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(eve,book).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(george,apple).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(george,apple).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\ngeorge owns apple.\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\ngeorge owns apple.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nIs eve dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(george,eve).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(george,apple).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(george,apple).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following information:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\ngeorge owns apple.\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\ngeorge owns apple.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nIs george is a sibling of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(george,apple).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following rules:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nCould george owns apple explain eve is hungry?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hungry(eve)",
      "explanation": "owns(george,apple)"
    }
  },
  {
    "q": "likes(alice,apple).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following rules:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nCould alice likes apple explain eve is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hungry(eve)",
      "non_explanation": "likes(alice,apple)"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following rules:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nCould frank owns car explain eve is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hungry(eve)",
      "non_explanation": "owns(frank,car)"
    }
  },
  {
    "q": "owns(eve,book).",
    "c": "hungry(eve) :- owns(george,apple).\nsunny :- wet(ball).\nowns(dave,apple) :- cold, friend(frank,dave), likes(eve,book).\nsmall(phone) :- sad(bob), likes(frank,phone).\nsmall(ball) :- dislikes(frank,book).\nowns(bob,pencil) :- sad(eve).\nlikes(carol,ball) :- wet(book), enemy(alice,carol), dislikes(george,ball).\nlikes(bob,book) :- dislikes(dave,car), small(phone), cold.\nsunny :- tall(dave), likes(bob,ball).\nowns(dave,pencil) :- dislikes(alice,phone), likes(alice,pencil).\nsibling(dave,george) :- wet(apple), big(phone).\nsibling(frank,bob) :- sibling(carol,frank).\ntall(george) :- owns(bob,phone), owns(eve,car).\ntall(dave) :- parent(frank,carol), friend(george,frank), sad(frank).\ndislikes(eve,pencil) :- likes(carol,ball), wet(car).\ndislikes(george,pencil) :- parent(frank,carol), sunny.\nhungry(carol) :- sunny.\nfriend(eve,eve) :- wet(ball), owns(carol,phone), happy(george).\ncold :- sunny.\nsad(dave) :- enemy(frank,frank), hot, likes(george,pencil).\nsibling(carol,george) :- cold, wet(pencil), sunny.\nfriend(george,frank) :- cold, hungry(bob), parent(bob,carol).\nenemy(bob,frank) :- enemy(dave,carol), wet(apple), likes(alice,phone).\nhungry(dave) :- happy(frank), friend(eve,frank), hot.\nhot :- tall(george).\nenemy(dave,dave) :- enemy(george,dave), big(ball), owns(alice,phone).\ncold :- parent(eve,bob), parent(bob,carol).\nsad(frank) :- sibling(alice,dave).\ncold :- enemy(george,george), likes(george,book).\nhot :- hot, friend(george,carol), happy(george).\nhot :- sunny.\nsibling(alice,carol) :- hot, sibling(frank,bob), dislikes(dave,apple).\nsunny :- big(apple), enemy(george,frank), owns(eve,book).\nlikes(bob,phone) :- wet(book).\nowns(frank,car).\nowns(eve,book).\nparent(carol,frank).\nlikes(alice,apple).\nlikes(frank,book).\nsibling(carol,alice).\nowns(alice,car).\nsibling(alice,george).\nsad(bob).\nparent(bob,carol).\nsibling(dave,carol).\nowns(eve,phone).\nparent(carol,eve).",
    "natural language": "You are given the following rules:\nIf george owns apple, then eve is hungry.\nIf ball is wet, then it is sunny.\nIf it is cold and frank is a friend of dave and eve likes book, then dave owns apple.\nIf bob is sad and frank likes phone, then phone is small.\nIf frank dislikes book, then ball is small.\nIf eve is sad, then bob owns pencil.\nIf book is wet and alice is an enemy of carol and george dislikes ball, then carol likes ball.\nIf dave dislikes car and phone is small and it is cold, then bob likes book.\nIf dave is tall and bob likes ball, then it is sunny.\nIf alice dislikes phone and alice likes pencil, then dave owns pencil.\nIf apple is wet and phone is big, then dave is a sibling of george.\nIf carol is a sibling of frank, then frank is a sibling of bob.\nIf bob owns phone and eve owns car, then george is tall.\nIf frank is a parent of carol and george is a friend of frank and frank is sad, then dave is tall.\nIf carol likes ball and car is wet, then eve dislikes pencil.\nIf frank is a parent of carol and it is sunny, then george dislikes pencil.\nIf it is sunny, then carol is hungry.\nIf ball is wet and carol owns phone and george is happy, then eve is a friend of eve.\nIf it is sunny, then it is cold.\nIf frank is an enemy of frank and it is hot and george likes pencil, then dave is sad.\nIf it is cold and pencil is wet and it is sunny, then carol is a sibling of george.\nIf it is cold and bob is hungry and bob is a parent of carol, then george is a friend of frank.\nIf dave is an enemy of carol and apple is wet and alice likes phone, then bob is an enemy of frank.\nIf frank is happy and eve is a friend of frank and it is hot, then dave is hungry.\nIf george is tall, then it is hot.\nIf george is an enemy of dave and ball is big and alice owns phone, then dave is an enemy of dave.\nIf eve is a parent of bob and bob is a parent of carol, then it is cold.\nIf alice is a sibling of dave, then frank is sad.\nIf george is an enemy of george and george likes book, then it is cold.\nIf it is hot and george is a friend of carol and george is happy, then it is hot.\nIf it is sunny, then it is hot.\nIf it is hot and frank is a sibling of bob and dave dislikes apple, then alice is a sibling of carol.\nIf apple is big and george is an enemy of frank and eve owns book, then it is sunny.\nIf book is wet, then bob likes phone.\n\nAnd the following facts:\nfrank owns car.\neve owns book.\ncarol is a parent of frank.\nalice likes apple.\nfrank likes book.\ncarol is a sibling of alice.\nalice owns car.\nalice is a sibling of george.\nbob is sad.\nbob is a parent of carol.\ndave is a sibling of carol.\neve owns phone.\ncarol is a parent of eve.\n\nQUESTION:\nCould eve owns book explain eve is hungry?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hungry(eve)",
      "non_explanation": "owns(eve,book)"
    }
  },
  {
    "q": "enemy(carol,bob).",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nhappy(george).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ngeorge is happy.\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nIs carol is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sad(bob).",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nhappy(george).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ngeorge is happy.\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nIs bob is sad true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(eve,dave).",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nhappy(george).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ngeorge is happy.\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nIs eve is a friend of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,pencil).",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nhappy(george).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ngeorge is happy.\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nIs george dislikes pencil true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hot.",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nhappy(george).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following information:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ngeorge is happy.\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nIs it is hot true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(george).",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following rules:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nCould george is happy explain bob is a parent of bob?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 4,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,bob)",
      "explanation": "happy(george)"
    }
  },
  {
    "q": "parent(dave,bob).",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following rules:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nCould dave is a parent of bob explain bob is a parent of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,bob)",
      "non_explanation": "parent(dave,bob)"
    }
  },
  {
    "q": "sibling(carol,george).",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following rules:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nCould carol is a sibling of george explain bob is a parent of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,bob)",
      "non_explanation": "sibling(carol,george)"
    }
  },
  {
    "q": "friend(george,alice).",
    "c": "parent(frank,frank) :- happy(george).\nhungry(bob) :- parent(frank,frank).\nsad(bob) :- hungry(bob).\nparent(bob,bob) :- sad(bob).\ncold :- parent(bob,bob).\nhappy(alice) :- happy(bob), sunny, dislikes(alice,phone).\nhappy(eve) :- happy(eve), hot, happy(bob).\nwet(ball) :- cold, wet(car), friend(george,carol).\nwet(pencil) :- sad(bob).\nsunny :- small(pencil).\nowns(bob,ball) :- dislikes(carol,pencil), hot, owns(dave,book).\nsunny :- tall(carol), small(ball).\nsmall(apple) :- happy(dave), wet(car).\nhungry(george) :- big(pencil).\nhungry(carol) :- wet(apple), hungry(bob), hungry(alice).\nowns(carol,car) :- owns(frank,phone), wet(phone).\nparent(bob,dave) :- parent(eve,dave), sibling(carol,frank).\nparent(bob,eve) :- happy(eve), parent(dave,dave), friend(george,george).\nowns(frank,phone) :- owns(carol,ball), enemy(dave,dave).\nsmall(pencil) :- sunny, small(car), hungry(george).\nsad(george) :- hot.\ndislikes(eve,apple) :- likes(george,book).\nsibling(eve,dave) :- sibling(carol,george), sibling(bob,carol), hot.\nsad(eve) :- enemy(dave,frank).\nsibling(george,bob) :- hot.\ndislikes(carol,book) :- dislikes(alice,book), sad(frank), happy(eve).\nsad(alice) :- sibling(george,frank), tall(frank), sunny.\nlikes(eve,book) :- hungry(carol), likes(frank,pencil), hot.\nsad(alice) :- sad(alice), cold.\nlikes(bob,phone) :- wet(ball), dislikes(frank,pencil).\nfriend(carol,eve) :- sunny, friend(eve,eve), hungry(carol).\nhot :- hot.\nhot :- hot, hot.\nfriend(bob,bob) :- parent(george,george), hungry(frank), friend(george,eve).\nparent(dave,bob).\nfriend(george,alice).\nlikes(carol,pencil).\nsibling(carol,george).\nwet(phone).\nsad(eve).\nsibling(eve,dave).\nsibling(george,bob).\nenemy(carol,bob).\nowns(carol,apple).\nfriend(george,carol).\nfriend(eve,frank).\nenemy(george,alice).\nowns(dave,book).",
    "natural language": "You are given the following rules:\nIf george is happy, then frank is a parent of frank.\nIf frank is a parent of frank, then bob is hungry.\nIf bob is hungry, then bob is sad.\nIf bob is sad, then bob is a parent of bob.\nIf bob is a parent of bob, then it is cold.\nIf bob is happy and it is sunny and alice dislikes phone, then alice is happy.\nIf eve is happy and it is hot and bob is happy, then eve is happy.\nIf it is cold and car is wet and george is a friend of carol, then ball is wet.\nIf bob is sad, then pencil is wet.\nIf pencil is small, then it is sunny.\nIf carol dislikes pencil and it is hot and dave owns book, then bob owns ball.\nIf carol is tall and ball is small, then it is sunny.\nIf dave is happy and car is wet, then apple is small.\nIf pencil is big, then george is hungry.\nIf apple is wet and bob is hungry and alice is hungry, then carol is hungry.\nIf frank owns phone and phone is wet, then carol owns car.\nIf eve is a parent of dave and carol is a sibling of frank, then bob is a parent of dave.\nIf eve is happy and dave is a parent of dave and george is a friend of george, then bob is a parent of eve.\nIf carol owns ball and dave is an enemy of dave, then frank owns phone.\nIf it is sunny and car is small and george is hungry, then pencil is small.\nIf it is hot, then george is sad.\nIf george likes book, then eve dislikes apple.\nIf carol is a sibling of george and bob is a sibling of carol and it is hot, then eve is a sibling of dave.\nIf dave is an enemy of frank, then eve is sad.\nIf it is hot, then george is a sibling of bob.\nIf alice dislikes book and frank is sad and eve is happy, then carol dislikes book.\nIf george is a sibling of frank and frank is tall and it is sunny, then alice is sad.\nIf carol is hungry and frank likes pencil and it is hot, then eve likes book.\nIf alice is sad and it is cold, then alice is sad.\nIf ball is wet and frank dislikes pencil, then bob likes phone.\nIf it is sunny and eve is a friend of eve and carol is hungry, then carol is a friend of eve.\nIf it is hot, then it is hot.\nIf it is hot and it is hot, then it is hot.\nIf george is a parent of george and frank is hungry and george is a friend of eve, then bob is a friend of bob.\n\nAnd the following facts:\ndave is a parent of bob.\ngeorge is a friend of alice.\ncarol likes pencil.\ncarol is a sibling of george.\nphone is wet.\neve is sad.\neve is a sibling of dave.\ngeorge is a sibling of bob.\ncarol is an enemy of bob.\ncarol owns apple.\ngeorge is a friend of carol.\neve is a friend of frank.\ngeorge is an enemy of alice.\ndave owns book.\n\nQUESTION:\nCould george is a friend of alice explain bob is a parent of bob?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "parent(bob,bob)",
      "non_explanation": "friend(george,alice)"
    }
  },
  {
    "q": "dislikes(frank,ball).",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nwet(book).\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nbook is wet.\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nIs frank dislikes ball true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(frank,dave).",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nwet(book).\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nbook is wet.\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nIs frank is a parent of dave true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": 5,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,dave).",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nwet(book).\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nbook is wet.\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nIs george is an enemy of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(bob,ball).",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nwet(book).\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nbook is wet.\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nIs bob likes ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(george).",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nwet(book).\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following information:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nbook is wet.\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nIs george is hungry true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "wet(book).",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following rules:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nCould book is wet explain carol is a friend of george?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 3,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,george)",
      "explanation": "wet(book)"
    }
  },
  {
    "q": "owns(bob,phone).",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following rules:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nCould bob owns phone explain carol is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,george)",
      "non_explanation": "owns(bob,phone)"
    }
  },
  {
    "q": "enemy(george,bob).",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following rules:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nCould george is an enemy of bob explain carol is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,george)",
      "non_explanation": "enemy(george,bob)"
    }
  },
  {
    "q": "sunny.",
    "c": "dislikes(eve,phone) :- wet(book).\nhappy(carol) :- dislikes(eve,phone).\nfriend(carol,george) :- happy(carol).\nbig(apple) :- friend(carol,george).\nhappy(dave) :- big(apple).\nhot :- sad(george), sunny.\nhot :- wet(book), wet(phone).\nhungry(eve) :- enemy(bob,eve).\nwet(apple) :- sunny, likes(george,pencil).\nsmall(apple) :- happy(frank), tall(dave).\nsmall(ball) :- likes(eve,book), small(apple), hot.\nhungry(carol) :- cold.\nwet(book) :- hungry(eve), happy(dave), small(car).\nbig(car) :- friend(carol,dave), sibling(eve,eve).\nsmall(car) :- sad(george), parent(alice,bob).\nbig(ball) :- sunny, happy(dave), cold.\nsibling(carol,george) :- hungry(frank).\nwet(pencil) :- sunny, wet(pencil).\ndislikes(dave,pencil) :- owns(dave,book).\nenemy(dave,eve) :- hot.\nlikes(carol,phone) :- hot.\ncold :- friend(bob,eve).\ndislikes(george,book) :- small(apple), parent(george,eve).\ntall(george) :- hot.\nlikes(eve,pencil) :- happy(dave).\ntall(frank) :- sad(alice), sunny, likes(george,car).\nlikes(dave,phone) :- tall(frank), dislikes(bob,book), hungry(bob).\nsibling(carol,alice) :- wet(car), tall(frank), owns(alice,ball).\ncold :- sad(george), enemy(dave,frank), sad(alice).\nenemy(george,bob) :- likes(dave,book), sunny.\nsmall(ball) :- likes(frank,book).\nhot :- dislikes(frank,book).\nfriend(george,george) :- small(ball), cold, tall(bob).\ndislikes(dave,car) :- small(apple), small(apple), cold.\nsunny.\nowns(bob,phone).\nsibling(frank,george).\nenemy(george,bob).\ntall(dave).\nparent(frank,dave).\nfriend(george,dave).\nparent(alice,carol).\nowns(bob,apple).\nenemy(eve,bob).\ndislikes(frank,ball).\nsibling(alice,carol).\nlikes(carol,ball).\nenemy(bob,eve).",
    "natural language": "You are given the following rules:\nIf book is wet, then eve dislikes phone.\nIf eve dislikes phone, then carol is happy.\nIf carol is happy, then carol is a friend of george.\nIf carol is a friend of george, then apple is big.\nIf apple is big, then dave is happy.\nIf george is sad and it is sunny, then it is hot.\nIf book is wet and phone is wet, then it is hot.\nIf bob is an enemy of eve, then eve is hungry.\nIf it is sunny and george likes pencil, then apple is wet.\nIf frank is happy and dave is tall, then apple is small.\nIf eve likes book and apple is small and it is hot, then ball is small.\nIf it is cold, then carol is hungry.\nIf eve is hungry and dave is happy and car is small, then book is wet.\nIf carol is a friend of dave and eve is a sibling of eve, then car is big.\nIf george is sad and alice is a parent of bob, then car is small.\nIf it is sunny and dave is happy and it is cold, then ball is big.\nIf frank is hungry, then carol is a sibling of george.\nIf it is sunny and pencil is wet, then pencil is wet.\nIf dave owns book, then dave dislikes pencil.\nIf it is hot, then dave is an enemy of eve.\nIf it is hot, then carol likes phone.\nIf bob is a friend of eve, then it is cold.\nIf apple is small and george is a parent of eve, then george dislikes book.\nIf it is hot, then george is tall.\nIf dave is happy, then eve likes pencil.\nIf alice is sad and it is sunny and george likes car, then frank is tall.\nIf frank is tall and bob dislikes book and bob is hungry, then dave likes phone.\nIf car is wet and frank is tall and alice owns ball, then carol is a sibling of alice.\nIf george is sad and dave is an enemy of frank and alice is sad, then it is cold.\nIf dave likes book and it is sunny, then george is an enemy of bob.\nIf frank likes book, then ball is small.\nIf frank dislikes book, then it is hot.\nIf ball is small and it is cold and bob is tall, then george is a friend of george.\nIf apple is small and apple is small and it is cold, then dave dislikes car.\n\nAnd the following facts:\nit is sunny.\nbob owns phone.\nfrank is a sibling of george.\ngeorge is an enemy of bob.\ndave is tall.\nfrank is a parent of dave.\ngeorge is a friend of dave.\nalice is a parent of carol.\nbob owns apple.\neve is an enemy of bob.\nfrank dislikes ball.\nalice is a sibling of carol.\ncarol likes ball.\nbob is an enemy of eve.\n\nQUESTION:\nCould it is sunny explain carol is a friend of george?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "friend(carol,george)",
      "non_explanation": "sunny"
    }
  },
  {
    "q": "friend(frank,alice).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nhappy(alice).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\nalice is happy.\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nIs frank is a friend of alice true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "small(phone).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nhappy(alice).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\nalice is happy.\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nIs phone is small true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(frank,car).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nhappy(alice).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\nalice is happy.\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nIs frank owns car true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(frank,george).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nhappy(alice).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\nalice is happy.\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nIs frank is an enemy of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "parent(eve,george).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nhappy(alice).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following information:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\nalice is happy.\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nIs eve is a parent of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(alice).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following rules:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nCould alice is happy explain george is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "explanation": "happy(alice)"
    }
  },
  {
    "q": "sibling(alice,frank).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following rules:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nCould alice is a sibling of frank explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "sibling(alice,frank)"
    }
  },
  {
    "q": "likes(dave,book).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following rules:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nCould dave likes book explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "likes(dave,book)"
    }
  },
  {
    "q": "likes(bob,book).",
    "c": "big(pencil) :- happy(alice).\nhappy(george) :- big(pencil).\nsmall(apple) :- happy(george).\nhappy(bob) :- small(apple).\nsibling(frank,bob) :- happy(bob).\ntall(frank) :- sibling(frank,bob).\nwet(book) :- tall(frank).\nhungry(dave) :- wet(book).\ncold :- hungry(dave).\nsmall(phone) :- cold.\nwet(book) :- wet(pencil), wet(phone), wet(apple).\nwet(apple) :- small(pencil).\nenemy(dave,george) :- enemy(eve,eve).\nsad(eve) :- likes(alice,pencil), hungry(frank), sad(eve).\nparent(frank,george) :- sibling(eve,george), sunny.\nparent(frank,alice) :- hungry(alice), parent(bob,dave), sunny.\nenemy(eve,dave) :- likes(alice,car).\nsad(alice) :- big(phone), sunny, friend(eve,dave).\nsmall(book) :- cold, small(book), friend(bob,eve).\nowns(dave,pencil) :- owns(george,phone), owns(alice,phone), likes(eve,pencil).\nbig(apple) :- sibling(george,bob), enemy(bob,alice).\ntall(bob) :- tall(carol), tall(bob).\nwet(ball) :- enemy(george,eve), dislikes(alice,car).\nhungry(frank) :- hungry(eve), hungry(alice).\ntall(dave) :- happy(carol).\nsmall(book) :- tall(frank), hot.\nbig(apple) :- cold.\nowns(bob,ball) :- owns(dave,apple), likes(carol,apple).\nhungry(alice) :- big(apple).\nhungry(frank) :- wet(phone).\nhot :- friend(bob,eve), hot.\nsad(george) :- happy(carol), sad(eve), sad(bob).\nhot :- dislikes(eve,phone), enemy(frank,bob), hot.\nowns(bob,phone) :- likes(eve,phone), sunny, owns(carol,apple).\nlikes(dave,book).\nfriend(frank,alice).\nlikes(bob,book).\nsibling(alice,frank).\nbig(apple).\nparent(eve,dave).\nparent(george,carol).\nsibling(alice,george).\nsibling(bob,frank).\nlikes(dave,phone).\nfriend(frank,carol).\ndislikes(dave,ball).\nsibling(dave,eve).\nenemy(alice,bob).",
    "natural language": "You are given the following rules:\nIf alice is happy, then pencil is big.\nIf pencil is big, then george is happy.\nIf george is happy, then apple is small.\nIf apple is small, then bob is happy.\nIf bob is happy, then frank is a sibling of bob.\nIf frank is a sibling of bob, then frank is tall.\nIf frank is tall, then book is wet.\nIf book is wet, then dave is hungry.\nIf dave is hungry, then it is cold.\nIf it is cold, then phone is small.\nIf pencil is wet and phone is wet and apple is wet, then book is wet.\nIf pencil is small, then apple is wet.\nIf eve is an enemy of eve, then dave is an enemy of george.\nIf alice likes pencil and frank is hungry and eve is sad, then eve is sad.\nIf eve is a sibling of george and it is sunny, then frank is a parent of george.\nIf alice is hungry and bob is a parent of dave and it is sunny, then frank is a parent of alice.\nIf alice likes car, then eve is an enemy of dave.\nIf phone is big and it is sunny and eve is a friend of dave, then alice is sad.\nIf it is cold and book is small and bob is a friend of eve, then book is small.\nIf george owns phone and alice owns phone and eve likes pencil, then dave owns pencil.\nIf george is a sibling of bob and bob is an enemy of alice, then apple is big.\nIf carol is tall and bob is tall, then bob is tall.\nIf george is an enemy of eve and alice dislikes car, then ball is wet.\nIf eve is hungry and alice is hungry, then frank is hungry.\nIf carol is happy, then dave is tall.\nIf frank is tall and it is hot, then book is small.\nIf it is cold, then apple is big.\nIf dave owns apple and carol likes apple, then bob owns ball.\nIf apple is big, then alice is hungry.\nIf phone is wet, then frank is hungry.\nIf bob is a friend of eve and it is hot, then it is hot.\nIf carol is happy and eve is sad and bob is sad, then george is sad.\nIf eve dislikes phone and frank is an enemy of bob and it is hot, then it is hot.\nIf eve likes phone and it is sunny and carol owns apple, then bob owns phone.\n\nAnd the following facts:\ndave likes book.\nfrank is a friend of alice.\nbob likes book.\nalice is a sibling of frank.\napple is big.\neve is a parent of dave.\ngeorge is a parent of carol.\nalice is a sibling of george.\nbob is a sibling of frank.\ndave likes phone.\nfrank is a friend of carol.\ndave dislikes ball.\ndave is a sibling of eve.\nalice is an enemy of bob.\n\nQUESTION:\nCould bob likes book explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "likes(bob,book)"
    }
  },
  {
    "q": "tall(carol).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nhungry(bob).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\nbob is hungry.\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nIs carol is tall true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(alice,apple).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nhungry(bob).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\nbob is hungry.\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nIs alice dislikes apple true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": 10,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "tall(eve).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nhungry(bob).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\nbob is hungry.\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nIs eve is tall true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(carol,ball).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nhungry(bob).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\nbob is hungry.\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nIs carol owns ball true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "dislikes(george,book).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nhungry(bob).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following information:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\nbob is hungry.\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nIs george dislikes book true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 10,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "hungry(bob).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nCould bob is hungry explain it is hot?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 2,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "explanation": "hungry(bob)"
    }
  },
  {
    "q": "sad(dave).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nCould dave is sad explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "sad(dave)"
    }
  },
  {
    "q": "parent(bob,frank).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nCould bob is a parent of frank explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "parent(bob,frank)"
    }
  },
  {
    "q": "friend(george,alice).",
    "c": "cold :- hungry(bob).\nhungry(eve) :- cold.\ncold :- hungry(eve).\nhungry(dave) :- cold.\nhappy(dave) :- hungry(dave).\nwet(pencil) :- happy(dave).\nsunny :- wet(pencil).\ndislikes(alice,apple) :- sunny.\ntall(carol) :- dislikes(alice,apple).\ncold :- tall(carol).\nsunny :- big(pencil).\nsunny :- wet(car).\nhungry(dave) :- sad(frank), likes(bob,car).\nhungry(frank) :- enemy(eve,eve), likes(eve,ball).\ndislikes(eve,phone) :- enemy(george,frank), hungry(frank).\nhungry(alice) :- big(ball).\ndislikes(eve,book) :- dislikes(bob,phone).\nwet(pencil) :- wet(ball), friend(carol,dave).\nwet(pencil) :- small(car), sunny, wet(car).\nhot :- hungry(carol), enemy(alice,george).\nenemy(carol,alice) :- tall(frank), wet(apple).\nenemy(eve,frank) :- sibling(eve,george), owns(bob,apple), sad(bob).\nhappy(eve) :- small(car), wet(ball), cold.\nhot :- friend(frank,bob).\nwet(book) :- hot.\nhot :- hungry(bob), sunny.\nsunny :- small(ball), hot, tall(alice).\nhappy(frank) :- tall(dave).\nparent(george,bob) :- likes(alice,ball).\nparent(dave,bob) :- cold.\ntall(eve) :- friend(dave,bob), hungry(frank), sad(bob).\ntall(dave) :- sunny, friend(carol,frank).\nfriend(bob,dave) :- big(pencil), enemy(dave,george).\nfriend(frank,george) :- sibling(bob,bob), hungry(frank), friend(carol,carol).\nsad(dave).\nsibling(frank,george).\nparent(bob,frank).\nfriend(george,alice).\nbig(book).\nparent(bob,alice).\ndislikes(dave,apple).\nparent(eve,frank).\nowns(frank,pencil).\nbig(car).\nwet(car).\nfriend(alice,dave).\nsibling(frank,dave).\nsad(alice).",
    "natural language": "You are given the following rules:\nIf bob is hungry, then it is cold.\nIf it is cold, then eve is hungry.\nIf eve is hungry, then it is cold.\nIf it is cold, then dave is hungry.\nIf dave is hungry, then dave is happy.\nIf dave is happy, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then it is cold.\nIf pencil is big, then it is sunny.\nIf car is wet, then it is sunny.\nIf frank is sad and bob likes car, then dave is hungry.\nIf eve is an enemy of eve and eve likes ball, then frank is hungry.\nIf george is an enemy of frank and frank is hungry, then eve dislikes phone.\nIf ball is big, then alice is hungry.\nIf bob dislikes phone, then eve dislikes book.\nIf ball is wet and carol is a friend of dave, then pencil is wet.\nIf car is small and it is sunny and car is wet, then pencil is wet.\nIf carol is hungry and alice is an enemy of george, then it is hot.\nIf frank is tall and apple is wet, then carol is an enemy of alice.\nIf eve is a sibling of george and bob owns apple and bob is sad, then eve is an enemy of frank.\nIf car is small and ball is wet and it is cold, then eve is happy.\nIf frank is a friend of bob, then it is hot.\nIf it is hot, then book is wet.\nIf bob is hungry and it is sunny, then it is hot.\nIf ball is small and it is hot and alice is tall, then it is sunny.\nIf dave is tall, then frank is happy.\nIf alice likes ball, then george is a parent of bob.\nIf it is cold, then dave is a parent of bob.\nIf dave is a friend of bob and frank is hungry and bob is sad, then eve is tall.\nIf it is sunny and carol is a friend of frank, then dave is tall.\nIf pencil is big and dave is an enemy of george, then bob is a friend of dave.\nIf bob is a sibling of bob and frank is hungry and carol is a friend of carol, then frank is a friend of george.\n\nAnd the following facts:\ndave is sad.\nfrank is a sibling of george.\nbob is a parent of frank.\ngeorge is a friend of alice.\nbook is big.\nbob is a parent of alice.\ndave dislikes apple.\neve is a parent of frank.\nfrank owns pencil.\ncar is big.\ncar is wet.\nalice is a friend of dave.\nfrank is a sibling of dave.\nalice is sad.\n\nQUESTION:\nCould george is a friend of alice explain it is hot?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "hot",
      "non_explanation": "friend(george,alice)"
    }
  },
  {
    "q": "enemy(eve,bob).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nowns(eve,ball).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following information:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\neve owns ball.\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nIs eve is an enemy of bob true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(dave,carol).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nowns(eve,ball).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following information:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\neve owns ball.\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nIs dave is a friend of carol true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(alice,eve).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nowns(eve,ball).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following information:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\neve owns ball.\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nIs alice is a friend of eve true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(dave,george).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nowns(eve,ball).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following information:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\neve owns ball.\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nIs dave is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "sibling(alice,george).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nowns(eve,ball).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following information:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\neve owns ball.\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nIs alice is a sibling of george true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(eve,ball).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nCould eve owns ball explain apple is big?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 5,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "big(apple)",
      "explanation": "owns(eve,ball)"
    }
  },
  {
    "q": "parent(george,carol).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nCould george is a parent of carol explain apple is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "big(apple)",
      "non_explanation": "parent(george,carol)"
    }
  },
  {
    "q": "parent(frank,bob).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nCould frank is a parent of bob explain apple is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "big(apple)",
      "non_explanation": "parent(frank,bob)"
    }
  },
  {
    "q": "enemy(eve,bob).",
    "c": "wet(book) :- owns(eve,ball).\nsunny :- wet(book).\nhungry(george) :- sunny.\nsmall(pencil) :- hungry(george).\nparent(alice,carol) :- small(pencil).\nsibling(carol,eve) :- parent(alice,carol).\nfriend(dave,carol) :- sibling(carol,eve).\nfriend(george,bob) :- friend(dave,carol).\nparent(eve,carol) :- friend(george,bob).\nenemy(frank,frank) :- parent(eve,carol).\nsmall(ball) :- enemy(frank,frank).\ncold :- small(ball).\ndislikes(dave,ball) :- cold.\nsmall(pencil) :- dislikes(dave,ball).\nsunny :- small(pencil).\nsmall(pencil) :- sunny.\nhot :- small(pencil).\nbig(apple) :- hot.\nwet(book) :- big(apple).\nbig(ball) :- wet(book).\ntall(carol) :- likes(carol,ball), enemy(frank,frank), big(ball).\nsunny :- parent(frank,george), wet(pencil).\ntall(frank) :- sad(carol), small(car).\nenemy(eve,george) :- wet(apple).\nowns(frank,car) :- owns(carol,ball).\nsibling(carol,eve) :- tall(carol).\nsunny :- sunny.\nowns(dave,book) :- owns(eve,phone), hungry(dave), happy(carol).\nsmall(apple) :- hungry(george).\nenemy(eve,dave) :- parent(george,bob), enemy(bob,dave).\nbig(car) :- dislikes(bob,car).\nsibling(alice,alice) :- hot, sunny, sibling(george,bob).\nfriend(dave,frank) :- friend(eve,george), big(car).\nfriend(dave,bob) :- small(ball), sad(george).\nparent(frank,bob).\nowns(frank,book).\nenemy(eve,bob).\nparent(george,carol).\nowns(bob,phone).\nfriend(alice,bob).\nlikes(bob,car).\nlikes(frank,apple).\nowns(george,phone).\nsad(frank).\nparent(frank,carol).\nowns(dave,pencil).\nlikes(eve,ball).\nhappy(george).",
    "natural language": "You are given the following rules:\nIf eve owns ball, then book is wet.\nIf book is wet, then it is sunny.\nIf it is sunny, then george is hungry.\nIf george is hungry, then pencil is small.\nIf pencil is small, then alice is a parent of carol.\nIf alice is a parent of carol, then carol is a sibling of eve.\nIf carol is a sibling of eve, then dave is a friend of carol.\nIf dave is a friend of carol, then george is a friend of bob.\nIf george is a friend of bob, then eve is a parent of carol.\nIf eve is a parent of carol, then frank is an enemy of frank.\nIf frank is an enemy of frank, then ball is small.\nIf ball is small, then it is cold.\nIf it is cold, then dave dislikes ball.\nIf dave dislikes ball, then pencil is small.\nIf pencil is small, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is hot.\nIf it is hot, then apple is big.\nIf apple is big, then book is wet.\nIf book is wet, then ball is big.\nIf carol likes ball and frank is an enemy of frank and ball is big, then carol is tall.\nIf frank is a parent of george and pencil is wet, then it is sunny.\nIf carol is sad and car is small, then frank is tall.\nIf apple is wet, then eve is an enemy of george.\nIf carol owns ball, then frank owns car.\nIf carol is tall, then carol is a sibling of eve.\nIf it is sunny, then it is sunny.\nIf eve owns phone and dave is hungry and carol is happy, then dave owns book.\nIf george is hungry, then apple is small.\nIf george is a parent of bob and bob is an enemy of dave, then eve is an enemy of dave.\nIf bob dislikes car, then car is big.\nIf it is hot and it is sunny and george is a sibling of bob, then alice is a sibling of alice.\nIf eve is a friend of george and car is big, then dave is a friend of frank.\nIf ball is small and george is sad, then dave is a friend of bob.\n\nAnd the following facts:\nfrank is a parent of bob.\nfrank owns book.\neve is an enemy of bob.\ngeorge is a parent of carol.\nbob owns phone.\nalice is a friend of bob.\nbob likes car.\nfrank likes apple.\ngeorge owns phone.\nfrank is sad.\nfrank is a parent of carol.\ndave owns pencil.\neve likes ball.\ngeorge is happy.\n\nQUESTION:\nCould eve is an enemy of bob explain apple is big?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "big(apple)",
      "non_explanation": "enemy(eve,bob)"
    }
  },
  {
    "q": "enemy(george,eve).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(alice,book).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nalice likes book.\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nIs george is an enemy of eve true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "happy(carol).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(alice,book).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nalice likes book.\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nIs carol is happy true?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": 20,
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "owns(dave,phone).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(alice,book).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nalice likes book.\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nIs dave owns phone true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "enemy(george,alice).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(alice,book).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nalice likes book.\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nIs george is an enemy of alice true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "friend(bob,dave).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(alice,book).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following information:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nalice likes book.\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nIs bob is a friend of dave true?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 20,
      "num_base_facts": 15,
      "depth": "not applicable",
      "reasoning_type": "deduction"
    }
  },
  {
    "q": "likes(alice,book).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following rules:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nCould alice likes book explain george is happy?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": 16,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "explanation": "likes(alice,book)"
    }
  },
  {
    "q": "likes(alice,phone).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following rules:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nCould alice likes phone explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "likes(alice,phone)"
    }
  },
  {
    "q": "sibling(frank,eve).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following rules:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nCould frank is a sibling of eve explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "sibling(frank,eve)"
    }
  },
  {
    "q": "enemy(george,frank).",
    "c": "hot :- likes(alice,book).\nparent(george,frank) :- hot.\nenemy(george,eve) :- parent(george,frank).\ndislikes(eve,car) :- enemy(george,eve).\nfriend(bob,eve) :- dislikes(eve,car).\nenemy(eve,george) :- friend(bob,eve).\nsad(frank) :- enemy(eve,george).\ndislikes(george,phone) :- sad(frank).\nhappy(carol) :- dislikes(george,phone).\ndislikes(bob,car) :- happy(carol).\nsunny :- dislikes(bob,car).\nwet(pencil) :- sunny.\nsunny :- wet(pencil).\nsunny :- sunny.\nlikes(bob,ball) :- sunny.\nsibling(alice,frank) :- likes(bob,ball).\ncold :- sibling(alice,frank).\nfriend(alice,bob) :- cold.\nhappy(george) :- friend(alice,bob).\nsmall(apple) :- happy(george).\ndislikes(eve,ball) :- enemy(alice,bob), wet(book), owns(george,apple).\ndislikes(frank,phone) :- big(phone), owns(carol,pencil), small(book).\ncold :- big(book), small(apple).\ndislikes(alice,ball) :- sad(carol), small(phone).\nparent(alice,dave) :- small(pencil), happy(eve), sunny.\nparent(frank,frank) :- likes(eve,phone), friend(bob,carol), enemy(carol,george).\ncold :- sunny, parent(alice,eve), enemy(bob,carol).\nenemy(dave,eve) :- sunny.\ntall(carol) :- sunny, happy(eve), parent(george,alice).\nhungry(frank) :- sunny.\ntall(alice) :- cold, wet(car), enemy(eve,alice).\nhungry(frank) :- parent(frank,carol).\nenemy(carol,george) :- hot.\nsibling(bob,frank) :- hot, sad(eve).\nlikes(bob,phone).\nlikes(alice,phone).\nsibling(frank,eve).\nenemy(george,frank).\nenemy(eve,bob).\nwet(car).\ndislikes(eve,ball).\ndislikes(carol,book).\nparent(dave,george).\nsibling(carol,frank).\nfriend(bob,frank).\nlikes(carol,apple).\nowns(bob,book).\nlikes(carol,car).",
    "natural language": "You are given the following rules:\nIf alice likes book, then it is hot.\nIf it is hot, then george is a parent of frank.\nIf george is a parent of frank, then george is an enemy of eve.\nIf george is an enemy of eve, then eve dislikes car.\nIf eve dislikes car, then bob is a friend of eve.\nIf bob is a friend of eve, then eve is an enemy of george.\nIf eve is an enemy of george, then frank is sad.\nIf frank is sad, then george dislikes phone.\nIf george dislikes phone, then carol is happy.\nIf carol is happy, then bob dislikes car.\nIf bob dislikes car, then it is sunny.\nIf it is sunny, then pencil is wet.\nIf pencil is wet, then it is sunny.\nIf it is sunny, then it is sunny.\nIf it is sunny, then bob likes ball.\nIf bob likes ball, then alice is a sibling of frank.\nIf alice is a sibling of frank, then it is cold.\nIf it is cold, then alice is a friend of bob.\nIf alice is a friend of bob, then george is happy.\nIf george is happy, then apple is small.\nIf alice is an enemy of bob and book is wet and george owns apple, then eve dislikes ball.\nIf phone is big and carol owns pencil and book is small, then frank dislikes phone.\nIf book is big and apple is small, then it is cold.\nIf carol is sad and phone is small, then alice dislikes ball.\nIf pencil is small and eve is happy and it is sunny, then alice is a parent of dave.\nIf eve likes phone and bob is a friend of carol and carol is an enemy of george, then frank is a parent of frank.\nIf it is sunny and alice is a parent of eve and bob is an enemy of carol, then it is cold.\nIf it is sunny, then dave is an enemy of eve.\nIf it is sunny and eve is happy and george is a parent of alice, then carol is tall.\nIf it is sunny, then frank is hungry.\nIf it is cold and car is wet and eve is an enemy of alice, then alice is tall.\nIf frank is a parent of carol, then frank is hungry.\nIf it is hot, then carol is an enemy of george.\nIf it is hot and eve is sad, then bob is a sibling of frank.\n\nAnd the following facts:\nbob likes phone.\nalice likes phone.\nfrank is a sibling of eve.\ngeorge is an enemy of frank.\neve is an enemy of bob.\ncar is wet.\neve dislikes ball.\ncarol dislikes book.\ndave is a parent of george.\ncarol is a sibling of frank.\nbob is a friend of frank.\ncarol likes apple.\nbob owns book.\ncarol likes car.\n\nQUESTION:\nCould george is an enemy of frank explain george is happy?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": false,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "happy(george)",
      "non_explanation": "enemy(george,frank)"
    }
  },
  {
    "q": "owns(bob,apple).",
    "c": "dislikes(dave,book) :- owns(bob,apple).\nhungry(bob) :- dislikes(dave,book).\nsunny :- hungry(bob).\nsmall(pencil) :- sunny.\ncold :- small(pencil).\nsibling(alice,eve) :- cold.\nbig(car) :- sibling(alice,eve).\nsmall(pencil) :- big(car).\nhungry(alice) :- small(pencil).\nsmall(ball) :- hungry(alice).\nowns(eve,pencil) :- small(ball).\ndislikes(alice,apple) :- owns(eve,pencil).\ntall(carol) :- dislikes(alice,apple).\nsad(george) :- tall(carol).\nhappy(eve) :- sad(george).\ntall(george) :- happy(eve).\nlikes(frank,apple) :- tall(george).\nsibling(eve,eve) :- likes(frank,apple).\nhungry(george) :- sibling(eve,eve).\nbig(car) :- hungry(george).\nsmall(pencil) :- big(car).\nparent(alice,bob) :- small(pencil).\ncold :- parent(alice,bob).\nsunny :- cold.\nbig(ball) :- sunny.\nwet(book) :- big(ball).\ncold :- wet(book).\ntall(george) :- cold.\nsmall(book) :- tall(george).\ncold :- small(book).\nhappy(frank) :- dislikes(frank,apple), sad(eve), big(car).\nhappy(frank) :- happy(dave), sibling(bob,carol).\nhungry(bob) :- hungry(george).\nowns(dave,ball) :- friend(george,dave).\nowns(dave,phone).\nsibling(bob,george).\ndislikes(dave,apple).\ntall(carol).\ntall(alice).\ndislikes(carol,phone).\ndislikes(george,phone).\nsibling(alice,george).\nparent(bob,carol).\nsibling(eve,frank).\nlikes(eve,book).\ntall(bob).\nparent(eve,bob).\nparent(dave,george).",
    "natural language": "You are given the following rules:\nIf bob owns apple, then dave dislikes book.\nIf dave dislikes book, then bob is hungry.\nIf bob is hungry, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is cold.\nIf it is cold, then alice is a sibling of eve.\nIf alice is a sibling of eve, then car is big.\nIf car is big, then pencil is small.\nIf pencil is small, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then eve owns pencil.\nIf eve owns pencil, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then george is sad.\nIf george is sad, then eve is happy.\nIf eve is happy, then george is tall.\nIf george is tall, then frank likes apple.\nIf frank likes apple, then eve is a sibling of eve.\nIf eve is a sibling of eve, then george is hungry.\nIf george is hungry, then car is big.\nIf car is big, then pencil is small.\nIf pencil is small, then alice is a parent of bob.\nIf alice is a parent of bob, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then ball is big.\nIf ball is big, then book is wet.\nIf book is wet, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then book is small.\nIf book is small, then it is cold.\nIf frank dislikes apple and eve is sad and car is big, then frank is happy.\nIf dave is happy and bob is a sibling of carol, then frank is happy.\nIf george is hungry, then bob is hungry.\nIf george is a friend of dave, then dave owns ball.\n\nAnd the following facts:\ndave owns phone.\nbob is a sibling of george.\ndave dislikes apple.\ncarol is tall.\nalice is tall.\ncarol dislikes phone.\ngeorge dislikes phone.\nalice is a sibling of george.\nbob is a parent of carol.\neve is a sibling of frank.\neve likes book.\nbob is tall.\neve is a parent of bob.\ndave is a parent of george.\n\nQUESTION:\nCould bob owns apple explain dave dislikes book?\nAnswer exactly true or false.",
    "t": "true",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": 1,
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(dave,book)",
      "explanation": "owns(bob,apple)"
    }
  },
  {
    "q": "tall(carol).",
    "c": "dislikes(dave,book) :- owns(bob,apple).\nhungry(bob) :- dislikes(dave,book).\nsunny :- hungry(bob).\nsmall(pencil) :- sunny.\ncold :- small(pencil).\nsibling(alice,eve) :- cold.\nbig(car) :- sibling(alice,eve).\nsmall(pencil) :- big(car).\nhungry(alice) :- small(pencil).\nsmall(ball) :- hungry(alice).\nowns(eve,pencil) :- small(ball).\ndislikes(alice,apple) :- owns(eve,pencil).\ntall(carol) :- dislikes(alice,apple).\nsad(george) :- tall(carol).\nhappy(eve) :- sad(george).\ntall(george) :- happy(eve).\nlikes(frank,apple) :- tall(george).\nsibling(eve,eve) :- likes(frank,apple).\nhungry(george) :- sibling(eve,eve).\nbig(car) :- hungry(george).\nsmall(pencil) :- big(car).\nparent(alice,bob) :- small(pencil).\ncold :- parent(alice,bob).\nsunny :- cold.\nbig(ball) :- sunny.\nwet(book) :- big(ball).\ncold :- wet(book).\ntall(george) :- cold.\nsmall(book) :- tall(george).\ncold :- small(book).\nhappy(frank) :- dislikes(frank,apple), sad(eve), big(car).\nhappy(frank) :- happy(dave), sibling(bob,carol).\nhungry(bob) :- hungry(george).\nowns(dave,ball) :- friend(george,dave).\nowns(dave,phone).\nsibling(bob,george).\ndislikes(dave,apple).\ntall(carol).\ntall(alice).\ndislikes(carol,phone).\ndislikes(george,phone).\nsibling(alice,george).\nparent(bob,carol).\nsibling(eve,frank).\nlikes(eve,book).\ntall(bob).\nparent(eve,bob).\nparent(dave,george).",
    "natural language": "You are given the following rules:\nIf bob owns apple, then dave dislikes book.\nIf dave dislikes book, then bob is hungry.\nIf bob is hungry, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is cold.\nIf it is cold, then alice is a sibling of eve.\nIf alice is a sibling of eve, then car is big.\nIf car is big, then pencil is small.\nIf pencil is small, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then eve owns pencil.\nIf eve owns pencil, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then george is sad.\nIf george is sad, then eve is happy.\nIf eve is happy, then george is tall.\nIf george is tall, then frank likes apple.\nIf frank likes apple, then eve is a sibling of eve.\nIf eve is a sibling of eve, then george is hungry.\nIf george is hungry, then car is big.\nIf car is big, then pencil is small.\nIf pencil is small, then alice is a parent of bob.\nIf alice is a parent of bob, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then ball is big.\nIf ball is big, then book is wet.\nIf book is wet, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then book is small.\nIf book is small, then it is cold.\nIf frank dislikes apple and eve is sad and car is big, then frank is happy.\nIf dave is happy and bob is a sibling of carol, then frank is happy.\nIf george is hungry, then bob is hungry.\nIf george is a friend of dave, then dave owns ball.\n\nAnd the following facts:\ndave owns phone.\nbob is a sibling of george.\ndave dislikes apple.\ncarol is tall.\nalice is tall.\ncarol dislikes phone.\ngeorge dislikes phone.\nalice is a sibling of george.\nbob is a parent of carol.\neve is a sibling of frank.\neve likes book.\nbob is tall.\neve is a parent of bob.\ndave is a parent of george.\n\nQUESTION:\nCould carol is tall explain dave dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(dave,book)",
      "non_explanation": "tall(carol)"
    }
  },
  {
    "q": "owns(dave,phone).",
    "c": "dislikes(dave,book) :- owns(bob,apple).\nhungry(bob) :- dislikes(dave,book).\nsunny :- hungry(bob).\nsmall(pencil) :- sunny.\ncold :- small(pencil).\nsibling(alice,eve) :- cold.\nbig(car) :- sibling(alice,eve).\nsmall(pencil) :- big(car).\nhungry(alice) :- small(pencil).\nsmall(ball) :- hungry(alice).\nowns(eve,pencil) :- small(ball).\ndislikes(alice,apple) :- owns(eve,pencil).\ntall(carol) :- dislikes(alice,apple).\nsad(george) :- tall(carol).\nhappy(eve) :- sad(george).\ntall(george) :- happy(eve).\nlikes(frank,apple) :- tall(george).\nsibling(eve,eve) :- likes(frank,apple).\nhungry(george) :- sibling(eve,eve).\nbig(car) :- hungry(george).\nsmall(pencil) :- big(car).\nparent(alice,bob) :- small(pencil).\ncold :- parent(alice,bob).\nsunny :- cold.\nbig(ball) :- sunny.\nwet(book) :- big(ball).\ncold :- wet(book).\ntall(george) :- cold.\nsmall(book) :- tall(george).\ncold :- small(book).\nhappy(frank) :- dislikes(frank,apple), sad(eve), big(car).\nhappy(frank) :- happy(dave), sibling(bob,carol).\nhungry(bob) :- hungry(george).\nowns(dave,ball) :- friend(george,dave).\nowns(dave,phone).\nsibling(bob,george).\ndislikes(dave,apple).\ntall(carol).\ntall(alice).\ndislikes(carol,phone).\ndislikes(george,phone).\nsibling(alice,george).\nparent(bob,carol).\nsibling(eve,frank).\nlikes(eve,book).\ntall(bob).\nparent(eve,bob).\nparent(dave,george).",
    "natural language": "You are given the following rules:\nIf bob owns apple, then dave dislikes book.\nIf dave dislikes book, then bob is hungry.\nIf bob is hungry, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is cold.\nIf it is cold, then alice is a sibling of eve.\nIf alice is a sibling of eve, then car is big.\nIf car is big, then pencil is small.\nIf pencil is small, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then eve owns pencil.\nIf eve owns pencil, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then george is sad.\nIf george is sad, then eve is happy.\nIf eve is happy, then george is tall.\nIf george is tall, then frank likes apple.\nIf frank likes apple, then eve is a sibling of eve.\nIf eve is a sibling of eve, then george is hungry.\nIf george is hungry, then car is big.\nIf car is big, then pencil is small.\nIf pencil is small, then alice is a parent of bob.\nIf alice is a parent of bob, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then ball is big.\nIf ball is big, then book is wet.\nIf book is wet, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then book is small.\nIf book is small, then it is cold.\nIf frank dislikes apple and eve is sad and car is big, then frank is happy.\nIf dave is happy and bob is a sibling of carol, then frank is happy.\nIf george is hungry, then bob is hungry.\nIf george is a friend of dave, then dave owns ball.\n\nAnd the following facts:\ndave owns phone.\nbob is a sibling of george.\ndave dislikes apple.\ncarol is tall.\nalice is tall.\ncarol dislikes phone.\ngeorge dislikes phone.\nalice is a sibling of george.\nbob is a parent of carol.\neve is a sibling of frank.\neve likes book.\nbob is tall.\neve is a parent of bob.\ndave is a parent of george.\n\nQUESTION:\nCould dave owns phone explain dave dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(dave,book)",
      "non_explanation": "owns(dave,phone)"
    }
  },
  {
    "q": "dislikes(dave,apple).",
    "c": "dislikes(dave,book) :- owns(bob,apple).\nhungry(bob) :- dislikes(dave,book).\nsunny :- hungry(bob).\nsmall(pencil) :- sunny.\ncold :- small(pencil).\nsibling(alice,eve) :- cold.\nbig(car) :- sibling(alice,eve).\nsmall(pencil) :- big(car).\nhungry(alice) :- small(pencil).\nsmall(ball) :- hungry(alice).\nowns(eve,pencil) :- small(ball).\ndislikes(alice,apple) :- owns(eve,pencil).\ntall(carol) :- dislikes(alice,apple).\nsad(george) :- tall(carol).\nhappy(eve) :- sad(george).\ntall(george) :- happy(eve).\nlikes(frank,apple) :- tall(george).\nsibling(eve,eve) :- likes(frank,apple).\nhungry(george) :- sibling(eve,eve).\nbig(car) :- hungry(george).\nsmall(pencil) :- big(car).\nparent(alice,bob) :- small(pencil).\ncold :- parent(alice,bob).\nsunny :- cold.\nbig(ball) :- sunny.\nwet(book) :- big(ball).\ncold :- wet(book).\ntall(george) :- cold.\nsmall(book) :- tall(george).\ncold :- small(book).\nhappy(frank) :- dislikes(frank,apple), sad(eve), big(car).\nhappy(frank) :- happy(dave), sibling(bob,carol).\nhungry(bob) :- hungry(george).\nowns(dave,ball) :- friend(george,dave).\nowns(dave,phone).\nsibling(bob,george).\ndislikes(dave,apple).\ntall(carol).\ntall(alice).\ndislikes(carol,phone).\ndislikes(george,phone).\nsibling(alice,george).\nparent(bob,carol).\nsibling(eve,frank).\nlikes(eve,book).\ntall(bob).\nparent(eve,bob).\nparent(dave,george).",
    "natural language": "You are given the following rules:\nIf bob owns apple, then dave dislikes book.\nIf dave dislikes book, then bob is hungry.\nIf bob is hungry, then it is sunny.\nIf it is sunny, then pencil is small.\nIf pencil is small, then it is cold.\nIf it is cold, then alice is a sibling of eve.\nIf alice is a sibling of eve, then car is big.\nIf car is big, then pencil is small.\nIf pencil is small, then alice is hungry.\nIf alice is hungry, then ball is small.\nIf ball is small, then eve owns pencil.\nIf eve owns pencil, then alice dislikes apple.\nIf alice dislikes apple, then carol is tall.\nIf carol is tall, then george is sad.\nIf george is sad, then eve is happy.\nIf eve is happy, then george is tall.\nIf george is tall, then frank likes apple.\nIf frank likes apple, then eve is a sibling of eve.\nIf eve is a sibling of eve, then george is hungry.\nIf george is hungry, then car is big.\nIf car is big, then pencil is small.\nIf pencil is small, then alice is a parent of bob.\nIf alice is a parent of bob, then it is cold.\nIf it is cold, then it is sunny.\nIf it is sunny, then ball is big.\nIf ball is big, then book is wet.\nIf book is wet, then it is cold.\nIf it is cold, then george is tall.\nIf george is tall, then book is small.\nIf book is small, then it is cold.\nIf frank dislikes apple and eve is sad and car is big, then frank is happy.\nIf dave is happy and bob is a sibling of carol, then frank is happy.\nIf george is hungry, then bob is hungry.\nIf george is a friend of dave, then dave owns ball.\n\nAnd the following facts:\ndave owns phone.\nbob is a sibling of george.\ndave dislikes apple.\ncarol is tall.\nalice is tall.\ncarol dislikes phone.\ngeorge dislikes phone.\nalice is a sibling of george.\nbob is a parent of carol.\neve is a sibling of frank.\neve likes book.\nbob is tall.\neve is a parent of bob.\ndave is a parent of george.\n\nQUESTION:\nCould dave dislikes apple explain dave dislikes book?\nAnswer exactly true or false.",
    "t": "false",
    "metadata": {
      "num_rules": 35,
      "max_body_length": 3,
      "allow_recursion": true,
      "branching_factor": 2,
      "proof_depth": "not applicable",
      "num_base_facts": 15,
      "reasoning_type": "abduction",
      "conclusion": "dislikes(dave,book)",
      "non_explanation": "dislikes(dave,apple)"
    }
  }
]